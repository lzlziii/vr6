using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using AS.MicControl;
using Autohand;
using Autohand.Demo;
using CafofoStudio;
using FIMSpace.FLook;
using FIMSpace.FOptimizing;
using Il2CppDummyDll;
using MTAssets.UltimateLODSystem.MeshSimplifier.Internal;
using MeshSplitting.MeshTools;
using MeshSplitting.Splitables;
using MeshSplitting.SplitterMath;
using Oculus.Platform;
using Pinwheel.Griffin.BackupTool;
using Pinwheel.Griffin.BillboardTool;
using Pinwheel.Griffin.PaintTool;
using Pinwheel.Griffin.SplineTool;
using Pinwheel.Griffin.StampTool;
using Pinwheel.Griffin.TextureTool;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Animations;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.UI;
using UnityEngine.XR.Interaction.Toolkit;
using UnityEngine.XR.Interaction.Toolkit.UI;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class BottleSmash : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x56FC70", Offset = "0x56FC70")]
	public Color color;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private Color cachedColor;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private List<ColorBase> registeredComponents;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Cork;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Liquid;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Glass;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject Glass_Shattered;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject Label;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float DespawnTime;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParticleSystem Effect;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject Splat;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LayerMask SplatMask;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float maxSplatDistance;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float shatterAtSpeed;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool allowShattering;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool onlyAllowShatterOnCollision;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[HideInInspector]
	private Vector3 previousPos;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	[HideInInspector]
	private Vector3 previousVelocity;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[HideInInspector]
	private Vector3 randomRot;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	[HideInInspector]
	private float _lastHitSpeed;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool broken;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float collidedRecently;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioSource audioSource;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x844AF8", Offset = "0x844AF8", VA = "0x844AF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x844B34", Offset = "0x844B34", VA = "0x844B34")]
	public void RandomizeColor()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x844BC0", Offset = "0x844BC0", VA = "0x844BC0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x844CB0", Offset = "0x844CB0", VA = "0x844CB0")]
	public void AttemptCollision(Collision col)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x844CB4", Offset = "0x844CB4", VA = "0x844CB4")]
	public void RegisterColorBase(ColorBase cb)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x844D1C", Offset = "0x844D1C", VA = "0x844D1C")]
	public void ChangedColor()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x844E18", Offset = "0x844E18", VA = "0x844E18")]
	public Vector3 GetRandomRotation()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x844E24", Offset = "0x844E24", VA = "0x844E24")]
	public void RandomRotation()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x844EFC", Offset = "0x844EFC", VA = "0x844EFC")]
	public void Smash()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x8454D4", Offset = "0x8454D4", VA = "0x8454D4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x8456B8", Offset = "0x8456B8", VA = "0x8456B8")]
	public BottleSmash()
	{
	}
}
[Token(Token = "0x2000003")]
public class ColorBase : MonoBehaviour
{
	[Token(Token = "0x600000C")]
	[Address(RVA = "0x856D8C", Offset = "0x856D8C", VA = "0x856D8C", Slot = "4")]
	protected virtual void RegisterWithController()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x856D90", Offset = "0x856D90", VA = "0x856D90", Slot = "5")]
	public virtual void Unify()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x856D94", Offset = "0x856D94", VA = "0x856D94")]
	public ColorBase()
	{
	}
}
[Token(Token = "0x2000004")]
public class LiquidColor : ColorBase
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BottleSmash bottleSmash;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LiquidVolumeAnimator lva;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool UpdateSurfaceColor;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool UpdateColor;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool UpdateSurfaceEmission;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool UpdateEmission;

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x72C34C", Offset = "0x72C34C", VA = "0x72C34C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x72C400", Offset = "0x72C400", VA = "0x72C400", Slot = "4")]
	protected override void RegisterWithController()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x72C420", Offset = "0x72C420", VA = "0x72C420", Slot = "5")]
	public override void Unify()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x72C5A8", Offset = "0x72C5A8", VA = "0x72C5A8")]
	public LiquidColor()
	{
	}
}
[Token(Token = "0x2000005")]
public class PS_Color : ColorBase
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BottleSmash bottleSmash;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem ps;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x85A154", Offset = "0x85A154", VA = "0x85A154")]
	private void Start()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x85A208", Offset = "0x85A208", VA = "0x85A208", Slot = "4")]
	protected override void RegisterWithController()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x85A20C", Offset = "0x85A20C", VA = "0x85A20C", Slot = "5")]
	public override void Unify()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x85A210", Offset = "0x85A210", VA = "0x85A210")]
	public void UpdateValues()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x85A2AC", Offset = "0x85A2AC", VA = "0x85A2AC")]
	public PS_Color()
	{
	}
}
[Token(Token = "0x2000006")]
public class ParticleColor : ColorBase
{
	[Token(Token = "0x20002CF")]
	public enum ColorID
	{
		[Token(Token = "0x4001799")]
		_TintColor,
		[Token(Token = "0x400179A")]
		_Color
	}

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BottleSmash bottleSmash;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystemRenderer ps;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ColorID colorType;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x85A2B4", Offset = "0x85A2B4", VA = "0x85A2B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x85A368", Offset = "0x85A368", VA = "0x85A368", Slot = "4")]
	protected override void RegisterWithController()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x85A388", Offset = "0x85A388", VA = "0x85A388", Slot = "5")]
	public override void Unify()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x85A44C", Offset = "0x85A44C", VA = "0x85A44C")]
	public ParticleColor()
	{
	}
}
[Token(Token = "0x2000007")]
public class ResetColors : MonoBehaviour
{
	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LiquidVolumeAnimator LVA;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeout;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float tReset;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BottleSmash BS;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color Color1;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color Color2;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x78CA34", Offset = "0x78CA34", VA = "0x78CA34")]
	private void Start()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x78CA40", Offset = "0x78CA40", VA = "0x78CA40")]
	private void Update()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x78CB0C", Offset = "0x78CB0C", VA = "0x78CB0C")]
	public ResetColors()
	{
	}
}
[Token(Token = "0x2000008")]
public class DemoRotation : MonoBehaviour
{
	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BottleSmash BS;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotSpeed;

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x87224C", Offset = "0x87224C", VA = "0x87224C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x8722A4", Offset = "0x8722A4", VA = "0x8722A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x8725E0", Offset = "0x8725E0", VA = "0x8725E0")]
	public DemoRotation()
	{
	}
}
[Token(Token = "0x2000009")]
public class ForceTest : MonoBehaviour
{
	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool AddForce;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 force;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LiquidVolumeAnimator lva;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x92F900", Offset = "0x92F900", VA = "0x92F900")]
	private void Start()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x92F958", Offset = "0x92F958", VA = "0x92F958")]
	private void Update()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x92F99C", Offset = "0x92F99C", VA = "0x92F99C")]
	public ForceTest()
	{
	}
}
[Token(Token = "0x200000A")]
public class LiquidAbsorption : MonoBehaviour
{
	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color currentColor;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BottleSmash smashScript;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float particleValue;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LiquidVolumeAnimator LVA;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x72BD70", Offset = "0x72BD70", VA = "0x72BD70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x72BE00", Offset = "0x72BE00", VA = "0x72BE00")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x72C01C", Offset = "0x72C01C", VA = "0x72C01C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x72C03C", Offset = "0x72C03C", VA = "0x72C03C")]
	public LiquidAbsorption()
	{
	}
}
[Token(Token = "0x200000B")]
public class LiquidAbsorptionV2 : MonoBehaviour
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color currentColor;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BottleSmash smashScript;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshLiquidEmission LiquidEmission;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LiquidVolumeAnimator LVA;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleValue;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x72C050", Offset = "0x72C050", VA = "0x72C050")]
	private void Start()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x72C0E0", Offset = "0x72C0E0", VA = "0x72C0E0")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x72C31C", Offset = "0x72C31C", VA = "0x72C31C")]
	private void Update()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x72C33C", Offset = "0x72C33C", VA = "0x72C33C")]
	public LiquidAbsorptionV2()
	{
	}
}
[Token(Token = "0x200000C")]
public class LiquidPool : MonoBehaviour
{
	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minSize;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxSize;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeToComplete;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float randomSize;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float currentTime;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool fadingOut;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer mr;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mat;

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x72C5B8", Offset = "0x72C5B8", VA = "0x72C5B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x72C6D0", Offset = "0x72C6D0", VA = "0x72C6D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x72C93C", Offset = "0x72C93C", VA = "0x72C93C")]
	public LiquidPool()
	{
	}
}
[Serializable]
[Token(Token = "0x200000D")]
public class LiquidVolumeAnimator : MonoBehaviour
{
	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	public Material[] mats;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x56FE20", Offset = "0x56FE20")]
	[SerializeField]
	public float level;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float finalLevel;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 minMaxBounds;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	private MeshFilter mf;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	private MeshRenderer mr;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	private Mesh m;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool DebugAnchor;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float debugSize;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float _anchorLength;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x56FF08", Offset = "0x56FF08")]
	public float dampening;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	[SerializeField]
	private Vector3 anchor;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	[SerializeField]
	private Vector3 anchorVelocity;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	[SerializeField]
	private Vector3 transformedPoint;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	[SerializeField]
	private Vector3 prevTransformedPoint;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool calculateTextureProjection;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float TextureSize;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float TextureSizeScalar;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AnimationCurve texCurveSize;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Quaternion previous;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float totalRotation;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[HideInInspector]
	[SerializeField]
	private Vector3 TopLeft;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	[SerializeField]
	private Vector3 TopRight;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	[SerializeField]
	private Vector3 BottomLeft;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	[SerializeField]
	private Vector3 BottomRight;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform ExposedLiquidT;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Vector3 GravityDirection;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public bool normalizeGravityDirection;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	[SerializeField]
	private Vector3[] verts;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int shader_Key_localHeight;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private int shader_Key_anchor;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int shader_Key_point;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int shader_Key_level;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float prvLevel;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Quaternion prevQ;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[HideInInspector]
	[SerializeField]
	private Vector3 cPos;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Vector3 finalAnchor;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public Vector3 finalPoint;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[HideInInspector]
	[SerializeField]
	private string[] shaderNames;

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x72C958", Offset = "0x72C958", VA = "0x72C958")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x72CF2C", Offset = "0x72CF2C", VA = "0x72CF2C")]
	private void CalculateSquare(Vector3 anch)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x72D4B8", Offset = "0x72D4B8", VA = "0x72D4B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x72D9FC", Offset = "0x72D9FC", VA = "0x72D9FC")]
	public void AddForce(Vector3 force)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x72DAB0", Offset = "0x72DAB0", VA = "0x72DAB0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x72ED6C", Offset = "0x72ED6C", VA = "0x72ED6C")]
	public LiquidVolumeAnimator()
	{
	}
}
[Token(Token = "0x200000E")]
public class MeshLiquidEmission : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002D0")]
	private class BVertex
	{
		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 p;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 n;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool b;

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xBB4D68", Offset = "0xBB4D68", VA = "0xBB4D68")]
		public BVertex()
		{
		}
	}

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private MeshFilter r;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LiquidVolumeAnimator LVA;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	[SerializeField]
	private int[] calculatedTriangles;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	private BVertex[] calculatedVerts;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem system;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particlesToEmit;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float emissionSpeed;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh m;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	private int[] tris;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	[SerializeField]
	private Vector3[] verts;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	[SerializeField]
	private Vector3[] norms;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool debug;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float debugScale;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool CullNullNormals;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Rigidbody Cork;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float volumeOfParticles;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool emitting;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BottleSmash bottleSmash;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float angleSpeedScalar;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int CVOB;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xBB4BF8", Offset = "0xBB4BF8", VA = "0xBB4BF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xBB4D70", Offset = "0xBB4D70", VA = "0xBB4D70")]
	private bool LinePlaneIntersection(Vector3 p0, Vector3 p1, Vector3 planePoint, Vector3 planeNormal, out Vector3 coordinate)
	{
		return default(bool);
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xBB4F7C", Offset = "0xBB4F7C", VA = "0xBB4F7C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xBB50B4", Offset = "0xBB50B4", VA = "0xBB50B4")]
	private void SetDual(int under1, int under2, int above, ref Vector3 dir, ref Vector3 lpos, ref int currentVOB, ref Vector3 tmpV)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xBB5948", Offset = "0xBB5948", VA = "0xBB5948")]
	private void SetDualInverted(int under1, int above1, int above2, ref Vector3 dir, ref Vector3 lpos, ref int currentVOB, ref Vector3 tmpV)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xBB5F74", Offset = "0xBB5F74", VA = "0xBB5F74")]
	private void CalculateTrianglesToEmitFrom(int[] tris, Vector3[] verts)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xBB66D8", Offset = "0xBB66D8", VA = "0xBB66D8")]
	private float GetPS_StartSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xBB6878", Offset = "0xBB6878", VA = "0xBB6878")]
	private bool EmitFromSubmesh()
	{
		return default(bool);
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xBB6E80", Offset = "0xBB6E80", VA = "0xBB6E80")]
	private void Update()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xBB6FCC", Offset = "0xBB6FCC", VA = "0xBB6FCC")]
	public MeshLiquidEmission()
	{
	}
}
[Token(Token = "0x200000F")]
public class ConveyImpacts : MonoBehaviour
{
	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GhostPhysics _physics;

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x87078C", Offset = "0x87078C", VA = "0x87078C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x8707A8", Offset = "0x8707A8", VA = "0x8707A8")]
	public ConveyImpacts()
	{
	}
}
[Token(Token = "0x2000010")]
public class GhostPhysics : MonoBehaviour
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BottleSmash _smash;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _ghost;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _ghostObject;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool _redirectSelection;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5702D8", Offset = "0x5702D8")]
	public Transform _externalTransform;

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x932E58", Offset = "0x932E58", VA = "0x932E58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x933018", Offset = "0x933018", VA = "0x933018")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x9330E4", Offset = "0x9330E4", VA = "0x9330E4")]
	public void SendCollision(Collision col)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x93318C", Offset = "0x93318C", VA = "0x93318C")]
	public Transform GetController()
	{
		return null;
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x933194", Offset = "0x933194", VA = "0x933194")]
	private void Update()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x933280", Offset = "0x933280", VA = "0x933280")]
	public GhostPhysics()
	{
	}
}
[Token(Token = "0x2000011")]
public class PickUpPotion : MonoBehaviour
{
	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject Obj;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rObj;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float dist;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float d;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float offsetValue;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 beginDist;

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x85AA08", Offset = "0x85AA08", VA = "0x85AA08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x85AA0C", Offset = "0x85AA0C", VA = "0x85AA0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x85AE9C", Offset = "0x85AE9C", VA = "0x85AE9C")]
	public PickUpPotion()
	{
	}
}
[Token(Token = "0x2000012")]
public class PourLiquid : MonoBehaviour
{
	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rateOfFlow;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BottleSmash smashScript;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LiquidVolumeAnimator liquid;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform controllingTransform;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem pouringParticleSystem;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float volumeOfParticles;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody corkRB;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource audioSource;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool activelyPouring;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ParticleCollisionEvent[] CollisionEvents;

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x76C280", Offset = "0x76C280", VA = "0x76C280")]
	private void Start()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x76C360", Offset = "0x76C360", VA = "0x76C360")]
	public void PullCork()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x76C3D0", Offset = "0x76C3D0", VA = "0x76C3D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x76C76C", Offset = "0x76C76C", VA = "0x76C76C")]
	public PourLiquid()
	{
	}
}
[Token(Token = "0x2000013")]
public class Reset : MonoBehaviour
{
	[Token(Token = "0x600004F")]
	[Address(RVA = "0x78CA20", Offset = "0x78CA20", VA = "0x78CA20")]
	public void ResetScene()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x78CA2C", Offset = "0x78CA2C", VA = "0x78CA2C")]
	public Reset()
	{
	}
}
[Token(Token = "0x2000014")]
public class Flicker : MonoBehaviour
{
	[Token(Token = "0x20002D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F680", Offset = "0x56F680")]
	private sealed class <DoFlicker>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Flicker <>4__this;

		[Token(Token = "0x17000608")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B7F")]
			[Address(RVA = "0x92F040", Offset = "0x92F040", VA = "0x92F040", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000609")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B81")]
			[Address(RVA = "0x92F0A8", Offset = "0x92F0A8", VA = "0x92F0A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x92EEA4", Offset = "0x92EEA4", VA = "0x92EEA4")]
		[DebuggerHidden]
		public <DoFlicker>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x92EED8", Offset = "0x92EED8", VA = "0x92EED8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x92EEDC", Offset = "0x92EEDC", VA = "0x92EEDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x92F048", Offset = "0x92F048", VA = "0x92F048", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MaxReduction;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MaxIncrease;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float RateDamping;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Strength;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool StopFlickering;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light _lightSource;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _baseIntensity;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _flickering;

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x92ECE0", Offset = "0x92ECE0", VA = "0x92ECE0")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x92ECF0", Offset = "0x92ECF0", VA = "0x92ECF0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x92EE58", Offset = "0x92EE58", VA = "0x92EE58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x92EDE8", Offset = "0x92EDE8", VA = "0x92EDE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57B400", Offset = "0x57B400")]
	private IEnumerator DoFlicker()
	{
		return null;
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x92EED0", Offset = "0x92EED0", VA = "0x92EED0")]
	public Flicker()
	{
	}
}
[Token(Token = "0x2000015")]
public class AmbientAudioManager : MonoBehaviour
{
	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VillageAmbienceMixer audioMixer;

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xBD1EE4", Offset = "0xBD1EE4", VA = "0xBD1EE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xBD1EE8", Offset = "0xBD1EE8", VA = "0xBD1EE8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xBD20A4", Offset = "0xBD20A4", VA = "0xBD20A4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xBD223C", Offset = "0xBD223C", VA = "0xBD223C")]
	private void Update()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xBD2240", Offset = "0xBD2240", VA = "0xBD2240")]
	public AmbientAudioManager()
	{
	}
}
[Token(Token = "0x2000016")]
public class AnimalActivityController : MonoBehaviour
{
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] animals;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rabbitBurrowToSpawn;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] rabbitBurrows;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int burrowAmount;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] wormBurrows;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject wormBurrowPrefab;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] wormBurrowsPositionsStored;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3[] wormBurrowsRotationsStored;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] mushrooms;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject mushroomPrefabOne;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject mushroomPrefabTwo;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3[] mushPositionsStored;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3[] mushRotationsStored;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] fish;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject fishPrefab;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject fishAltPrefab;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector3[] fishPositionsStored;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3[] fishRotationsStored;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool runningOnMainLevel;

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xBD2248", Offset = "0xBD2248", VA = "0xBD2248")]
	private void Start()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xBD26DC", Offset = "0xBD26DC", VA = "0xBD26DC")]
	public void GoToBed()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xBD287C", Offset = "0xBD287C", VA = "0xBD287C")]
	public void WakeUp()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xBD2CD8", Offset = "0xBD2CD8", VA = "0xBD2CD8")]
	public void MakeBunniesDisappear()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xBD2BD8", Offset = "0xBD2BD8", VA = "0xBD2BD8")]
	public void MakeBunniesAppear()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xBD2DD8", Offset = "0xBD2DD8", VA = "0xBD2DD8")]
	public void RespawnWormBurrows()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xBD2FE8", Offset = "0xBD2FE8", VA = "0xBD2FE8")]
	public void RespawnMushrooms()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xBD32AC", Offset = "0xBD32AC", VA = "0xBD32AC")]
	public void RespawnFish()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xBD3524", Offset = "0xBD3524", VA = "0xBD3524")]
	private void Update()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xBD3570", Offset = "0xBD3570", VA = "0xBD3570")]
	public AnimalActivityController()
	{
	}
}
[Token(Token = "0x2000017")]
public class AnimalBurrowControl : MonoBehaviour
{
	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToSpawn;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject spawnedObject;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject playerObjectForLookAt;

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xBD3578", Offset = "0xBD3578", VA = "0xBD3578")]
	private void Start()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xBD35D0", Offset = "0xBD35D0", VA = "0xBD35D0")]
	public void SpawnRabbit()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xBD374C", Offset = "0xBD374C", VA = "0xBD374C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xBD3750", Offset = "0xBD3750", VA = "0xBD3750")]
	public AnimalBurrowControl()
	{
	}
}
[Token(Token = "0x2000018")]
public class AnimalController : MonoBehaviour
{
	[Token(Token = "0x20002D2")]
	public enum AnimalState
	{
		[Token(Token = "0x40017A2")]
		Idle,
		[Token(Token = "0x40017A3")]
		Walking,
		[Token(Token = "0x40017A4")]
		Running,
		[Token(Token = "0x40017A5")]
		Eating
	}

	[Token(Token = "0x20002D3")]
	public enum AnimalType
	{
		[Token(Token = "0x40017A7")]
		Nothing,
		[Token(Token = "0x40017A8")]
		Cow,
		[Token(Token = "0x40017A9")]
		Chicken,
		[Token(Token = "0x40017AA")]
		Rabbit,
		[Token(Token = "0x40017AB")]
		Goat
	}

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeLeft;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float originalTime;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NavMeshAgent agent;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool pickedUp;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject burrow;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float initialSpeed;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float targetTime;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimalState state;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public AnimalType animalType;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GenericObjectGrabAndDrop genericObjectGrabAndDrop;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool setupBurrow;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource audioSource;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip audioClipIdle;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip audioClipAlarm;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LookAtConstraint lookAtForCanvas;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LookAtConstraint lookAtForCanvasTwo;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject cameraForUIFocus;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float timeLeftUI;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xBD3758", Offset = "0xBD3758", VA = "0xBD3758")]
	public void TargetPlayer(GameObject targetObject)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xBD3908", Offset = "0xBD3908", VA = "0xBD3908")]
	public void SwitchIntoState()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xBD3E2C", Offset = "0xBD3E2C", VA = "0xBD3E2C")]
	public void Grabbed()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xBD40B8", Offset = "0xBD40B8", VA = "0xBD40B8")]
	public void UnGrabbed()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xBD3D54", Offset = "0xBD3D54", VA = "0xBD3D54")]
	public void Eating()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xBD4214", Offset = "0xBD4214", VA = "0xBD4214")]
	public void IdleEating()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xBD29D0", Offset = "0xBD29D0", VA = "0xBD29D0")]
	public void Idle()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xBD3BC4", Offset = "0xBD3BC4", VA = "0xBD3BC4")]
	public void Running()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xBD3A38", Offset = "0xBD3A38", VA = "0xBD3A38")]
	public void Walking()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xBD2878", Offset = "0xBD2878", VA = "0xBD2878")]
	public void GoToBurrow()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xBD4424", Offset = "0xBD4424", VA = "0xBD4424")]
	public void CheckForYourFavouriteFood()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xBD48B4", Offset = "0xBD48B4", VA = "0xBD48B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xBD4808", Offset = "0xBD4808", VA = "0xBD4808")]
	public void ShowMyUI()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xBD4014", Offset = "0xBD4014", VA = "0xBD4014")]
	public void TurnOffMyUI()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xBD4B38", Offset = "0xBD4B38", VA = "0xBD4B38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xBD431C", Offset = "0xBD431C", VA = "0xBD431C")]
	public static Vector3 RandomNavSphere(Vector3 origin, float distance, int layermask)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xBD4D24", Offset = "0xBD4D24", VA = "0xBD4D24")]
	public AnimalController()
	{
	}
}
[Token(Token = "0x2000019")]
public class AnimalFoodDetector : MonoBehaviour
{
	[Token(Token = "0x20002D4")]
	public enum AnimalType
	{
		[Token(Token = "0x40017AD")]
		Nothing,
		[Token(Token = "0x40017AE")]
		Cow,
		[Token(Token = "0x40017AF")]
		Chicken,
		[Token(Token = "0x40017B0")]
		Rabbit,
		[Token(Token = "0x40017B1")]
		Goat,
		[Token(Token = "0x40017B2")]
		Horse
	}

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimalController animalController;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isHorse;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HorseEffectsController horseEffectsController;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimalType animalType;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float increaseInSizeFromFood;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject particleEffectGrow;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject particleEffectEat;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xBD4D44", Offset = "0xBD4D44", VA = "0xBD4D44")]
	private void Start()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xBD4D48", Offset = "0xBD4D48", VA = "0xBD4D48")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xBD553C", Offset = "0xBD553C", VA = "0xBD553C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xBD4F64", Offset = "0xBD4F64", VA = "0xBD4F64")]
	public void FeedMe(GameObject food)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xBD5870", Offset = "0xBD5870", VA = "0xBD5870")]
	public AnimalFoodDetector()
	{
	}
}
[Token(Token = "0x200001A")]
public class AudioDelay : MonoBehaviour
{
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource sourceToPlay;

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xBD5B38", Offset = "0xBD5B38", VA = "0xBD5B38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xBD5BA0", Offset = "0xBD5BA0", VA = "0xBD5BA0")]
	public void PlayAudio()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xBD5BBC", Offset = "0xBD5BBC", VA = "0xBD5BBC")]
	public AudioDelay()
	{
	}
}
[Token(Token = "0x200001B")]
public class AudioHitController : MonoBehaviour
{
	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cutter;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool broken;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xBD5BC4", Offset = "0xBD5BC4", VA = "0xBD5BC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xBD5BC8", Offset = "0xBD5BC8", VA = "0xBD5BC8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xBD5CC4", Offset = "0xBD5CC4", VA = "0xBD5CC4")]
	public void BreakMe()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xBD5E20", Offset = "0xBD5E20", VA = "0xBD5E20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xBD5E24", Offset = "0xBD5E24", VA = "0xBD5E24")]
	public AudioHitController()
	{
	}
}
[Token(Token = "0x200001C")]
public class BabyChestController : MonoBehaviour
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI textForDisplay;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x84379C", Offset = "0x84379C", VA = "0x84379C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x8437A0", Offset = "0x8437A0", VA = "0x8437A0")]
	public void SetupDisplay(int amountOfDollaryDoos)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x843834", Offset = "0x843834", VA = "0x843834")]
	private void Update()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x843838", Offset = "0x843838", VA = "0x843838")]
	public BabyChestController()
	{
	}
}
[Token(Token = "0x200001D")]
public class BasicCharacterController : MonoBehaviour
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController controller;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 playerVelocity;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool groundedPlayer;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float playerSpeed;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float jumpHeight;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float gravityValue;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x843840", Offset = "0x843840", VA = "0x843840")]
	private void Start()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x8438A8", Offset = "0x8438A8", VA = "0x8438A8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x843B0C", Offset = "0x843B0C", VA = "0x843B0C")]
	public BasicCharacterController()
	{
	}
}
[Token(Token = "0x200001E")]
public class BirdController : MonoBehaviour
{
	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] nestPositions;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject positonFlyTo;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float distance;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float distanceStart;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float speedFly;

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x843B2C", Offset = "0x843B2C", VA = "0x843B2C")]
	public void Start()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x843B84", Offset = "0x843B84", VA = "0x843B84")]
	public void SearchForNests()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x843D68", Offset = "0x843D68", VA = "0x843D68")]
	public void SpreadWings()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x843DD8", Offset = "0x843DD8", VA = "0x843DD8")]
	public void RestoreNormalFlight()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x843E48", Offset = "0x843E48", VA = "0x843E48")]
	public void RestoreNormalFlightForLanding()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x843EB8", Offset = "0x843EB8", VA = "0x843EB8")]
	public void Land()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x843F94", Offset = "0x843F94", VA = "0x843F94")]
	public void TakeOffToNewLocation()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x84417C", Offset = "0x84417C", VA = "0x84417C")]
	public void ReCheck()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x8441D4", Offset = "0x8441D4", VA = "0x8441D4")]
	public void CheckDistance()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x84433C", Offset = "0x84433C", VA = "0x84433C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x8444C8", Offset = "0x8444C8", VA = "0x8444C8")]
	public BirdController()
	{
	}
}
[Token(Token = "0x200001F")]
public class BirdnestController : MonoBehaviour
{
	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject eggPrefab;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform spawnPos1;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform spawnPos2;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform spawnPos3;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject spawnedEgg1;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject spawnedEgg2;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject spawnedEgg3;

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x8444DC", Offset = "0x8444DC", VA = "0x8444DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x844928", Offset = "0x844928", VA = "0x844928")]
	public void DropEggs()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x844AF0", Offset = "0x844AF0", VA = "0x844AF0")]
	public BirdnestController()
	{
	}
}
[Token(Token = "0x2000020")]
public class BucketParentController : MonoBehaviour
{
	[Token(Token = "0x20002D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F690", Offset = "0x56F690")]
	private sealed class <MyFunction>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delayTime;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject objectToPlayWith;

		[Token(Token = "0x1700060A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B85")]
			[Address(RVA = "0x848618", Offset = "0x848618", VA = "0x848618", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B87")]
			[Address(RVA = "0x848680", Offset = "0x848680", VA = "0x848680", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x8471E4", Offset = "0x8471E4", VA = "0x8471E4")]
		[DebuggerHidden]
		public <MyFunction>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x848488", Offset = "0x848488", VA = "0x848488", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x84848C", Offset = "0x84848C", VA = "0x84848C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x848620", Offset = "0x848620", VA = "0x848620", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int hitsWater;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hitsSoil;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int hitsSeeds;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int hitsTree;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int hitsFish;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int hitsWorm;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int hitsMush;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int hitsTurnip;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int hitsCarrot;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int hitsSpringOnion;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int hitsBlackCurrant;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int hitsBlueBerry;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int hitsGooseBerry;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int hitsWoodPlank;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int hitsMilk;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int hitsWatermelon;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hitsPumpkin;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int hitsCucumber;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int hitsHosta;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int hitsClover;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int hitsWheat;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int hitsLemon;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int hitsOrange;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int hitsApple;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int hitsTomato;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int hitsChili;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int hitsPepper;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int hitsCoin;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int hitsManure;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int hitsGumtreeCone;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int hitsPineCone;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int hitsSpruceCone;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int index;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<GameObject> thingsInBucket;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<GameObject> thingsInBucketStored;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public QuestControl questControl;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool isHorseCollectorWagon;

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x8456E4", Offset = "0x8456E4", VA = "0x8456E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x8456E8", Offset = "0x8456E8", VA = "0x8456E8")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x847164", Offset = "0x847164", VA = "0x847164")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57B464", Offset = "0x57B464")]
	private IEnumerator MyFunction(bool status, float delayTime, GameObject objectToPlayWith)
	{
		return null;
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x847210", Offset = "0x847210", VA = "0x847210")]
	private void OnTriggerExit(Collider collision)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x84826C", Offset = "0x84826C", VA = "0x84826C")]
	public void EmptyNow()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x8483F4", Offset = "0x8483F4", VA = "0x8483F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x8483F8", Offset = "0x8483F8", VA = "0x8483F8")]
	public BucketParentController()
	{
	}
}
[Token(Token = "0x2000021")]
public class BucketWaterDetector : MonoBehaviour
{
	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject spawnObject;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform spawnSpot;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject objectStorage;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool detectingWater;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timeLeft;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ToolLevelController toolLevelControl;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource audioSource;

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x848688", Offset = "0x848688", VA = "0x848688")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x84875C", Offset = "0x84875C", VA = "0x84875C")]
	public void SpawnWater()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x849144", Offset = "0x849144", VA = "0x849144")]
	public void ReviveWaterDetector()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x849158", Offset = "0x849158", VA = "0x849158")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x8491B0", Offset = "0x8491B0", VA = "0x8491B0")]
	public BucketWaterDetector()
	{
	}
}
[Token(Token = "0x2000022")]
public class BushGrowthController : MonoBehaviour
{
	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxX;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxY;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxZ;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float growthRate;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool growing;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool fullyGrown;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SoilControllerBush soilControllerBush;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] positionSpawns;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] berries;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject blueberry;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 originPosition;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion originRotation;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float shake_decay;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float shake_intensity;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float temp_shake_intensity;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource audioSource;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip bushDone;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool bushSproutedBerries;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float growthProgress;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool emptyBushForAesthetics;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x8491C8", Offset = "0x8491C8", VA = "0x8491C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x849230", Offset = "0x849230", VA = "0x849230")]
	public void BoostMyGrowth()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x849240", Offset = "0x849240", VA = "0x849240")]
	public void EmptyPlot()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x8494AC", Offset = "0x8494AC", VA = "0x8494AC")]
	public void CheckBerriesAllGone()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x8496BC", Offset = "0x8496BC", VA = "0x8496BC")]
	private void Shake()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x849794", Offset = "0x849794", VA = "0x849794")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x849838", Offset = "0x849838", VA = "0x849838")]
	public void MakeMeABigBoy()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x84990C", Offset = "0x84990C", VA = "0x84990C")]
	public void SproutBerries()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x849CF4", Offset = "0x849CF4", VA = "0x849CF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x84A1D8", Offset = "0x84A1D8", VA = "0x84A1D8")]
	public BushGrowthController()
	{
	}
}
[Token(Token = "0x2000023")]
public class BushIOV2 : MonoBehaviour
{
	[Token(Token = "0x20002D6")]
	public enum State
	{
		[Token(Token = "0x40017B8")]
		Empty,
		[Token(Token = "0x40017B9")]
		HasSoil,
		[Token(Token = "0x40017BA")]
		HasSeeds,
		[Token(Token = "0x40017BB")]
		HasPlants,
		[Token(Token = "0x40017BC")]
		HasFullyGrownPlants
	}

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] vegePlots;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoilControllerBush[] soilControllers;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject spruceSeed;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject pineSeed;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject gumtreeSeed;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject bushPlotPrefab;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public State[] state;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int countRepsToRunThrough;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GenericObjectIO objectIOForFirstStageProtoPlot;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject firstStageProtoPlotPrefabFromScene;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PlotShapeMaster plotShapeMaster;

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x84A200", Offset = "0x84A200", VA = "0x84A200")]
	public void SetupCount()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x84A2BC", Offset = "0x84A2BC", VA = "0x84A2BC")]
	public void StartUPAfterDelay()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x84C8F0", Offset = "0x84C8F0", VA = "0x84C8F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x84C98C", Offset = "0x84C98C", VA = "0x84C98C")]
	public void SaveOutPositions()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x84CD3C", Offset = "0x84CD3C", VA = "0x84CD3C")]
	public void SaveOutAllRotations()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x84D0B0", Offset = "0x84D0B0", VA = "0x84D0B0")]
	public void LoadINPositions()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x84D320", Offset = "0x84D320", VA = "0x84D320")]
	public void LoadInRotations()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x84BF7C", Offset = "0x84BF7C", VA = "0x84BF7C")]
	public void LoadIn()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x84D53C", Offset = "0x84D53C", VA = "0x84D53C")]
	public void SelectivelySaveBushEmpty(int index)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x84A150", Offset = "0x84A150", VA = "0x84A150")]
	public void SelectivelySaveBushFullyGrown(int index)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x84D5C4", Offset = "0x84D5C4", VA = "0x84D5C4")]
	public void SelectivelySave()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x84B8B4", Offset = "0x84B8B4", VA = "0x84B8B4")]
	public void SaveOut()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x84B518", Offset = "0x84B518", VA = "0x84B518")]
	public void AddPlotFromSpawn(GameObject plot)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x84D6AC", Offset = "0x84D6AC", VA = "0x84D6AC")]
	public void AddPlot(GameObject plot)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x84DB94", Offset = "0x84DB94", VA = "0x84DB94")]
	public void SaveOutSpecificPosition(int arrayIndex, float posX, float posY, float posZ)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x84E02C", Offset = "0x84E02C", VA = "0x84E02C")]
	public void SaveOutSpecificRotation(int arrayIndex, float rotX, float rotY, float rotZ)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x84E4F8", Offset = "0x84E4F8", VA = "0x84E4F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x84E4FC", Offset = "0x84E4FC", VA = "0x84E4FC")]
	public BushIOV2()
	{
	}
}
[Token(Token = "0x2000024")]
public class ButterflyControl : MonoBehaviour
{
	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 goalPosition;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject butteflyGoal;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool flyingAround;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speedFly;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float timeCountDown;

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x84E504", Offset = "0x84E504", VA = "0x84E504")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x84E508", Offset = "0x84E508", VA = "0x84E508")]
	public void SetPositionToFlyTo()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x84E728", Offset = "0x84E728", VA = "0x84E728")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x84E870", Offset = "0x84E870", VA = "0x84E870")]
	public ButterflyControl()
	{
	}
}
[Token(Token = "0x2000025")]
public class CauldronUserInterface : MonoBehaviour
{
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] UIObjects;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int currentDisplay;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool setupUI;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool beingLookedAt;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeLeft;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool active;

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x84EEB0", Offset = "0x84EEB0", VA = "0x84EEB0")]
	public void SetupUI()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x84F5B8", Offset = "0x84F5B8", VA = "0x84F5B8")]
	public void HideThisUI()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x84F640", Offset = "0x84F640", VA = "0x84F640")]
	public void Start()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x84F668", Offset = "0x84F668", VA = "0x84F668")]
	public void Update()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x84F6C4", Offset = "0x84F6C4", VA = "0x84F6C4")]
	public CauldronUserInterface()
	{
	}
}
[Token(Token = "0x2000026")]
public class ChangeLayerTriggerEnter : MonoBehaviour
{
	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pouchOrWatch;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool handEntered;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isPouchNotWatch;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x84F6D4", Offset = "0x84F6D4", VA = "0x84F6D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x84F71C", Offset = "0x84F71C", VA = "0x84F71C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x84F86C", Offset = "0x84F86C", VA = "0x84F86C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x84F6D8", Offset = "0x84F6D8", VA = "0x84F6D8")]
	public void ChangeToUngrabbable()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x84F824", Offset = "0x84F824", VA = "0x84F824")]
	public void ChangeToGrabbable()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x84F974", Offset = "0x84F974", VA = "0x84F974")]
	public ChangeLayerTriggerEnter()
	{
	}
}
[Token(Token = "0x2000027")]
public class ChangeLayerWhenGrabbed : MonoBehaviour
{
	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x84F984", Offset = "0x84F984", VA = "0x84F984")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x84F988", Offset = "0x84F988", VA = "0x84F988")]
	public void ChangeLayerToScoop()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x84FC20", Offset = "0x84FC20", VA = "0x84FC20")]
	public void ChangeLayerToGrabbable()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x84FEB8", Offset = "0x84FEB8", VA = "0x84FEB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x84FEBC", Offset = "0x84FEBC", VA = "0x84FEBC")]
	public ChangeLayerWhenGrabbed()
	{
	}
}
[Token(Token = "0x2000028")]
public class CharacterControllerMoveWithPlayer : MonoBehaviour
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject body;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterController characterController;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pouchToMove;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool onPC;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pouchMoveTo;

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x84FEC4", Offset = "0x84FEC4", VA = "0x84FEC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x84FEC8", Offset = "0x84FEC8", VA = "0x84FEC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x850120", Offset = "0x850120", VA = "0x850120")]
	public CharacterControllerMoveWithPlayer()
	{
	}
}
[Token(Token = "0x2000029")]
public class CheckToolLevelControl : MonoBehaviour
{
	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UpgradeToolControl[] buttonsShovel;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UpgradeToolControl[] buttonsAxe;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UpgradeToolControl[] buttonsPickAxe;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UpgradeToolControl[] buttonsFishingRod;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UpgradeToolControl[] buttonsBucket;

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x850128", Offset = "0x850128", VA = "0x850128")]
	private IEnumerator CheckIFToolLevelEnough()
	{
		return null;
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x8505A8", Offset = "0x8505A8", VA = "0x8505A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x850604", Offset = "0x850604", VA = "0x850604")]
	public CheckToolLevelControl()
	{
	}
}
[Token(Token = "0x200002A")]
public class ChestStorageController : MonoBehaviour
{
	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int hitsWater;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hitsSoil;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int hitsSeeds;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int hitsTree;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int hitsFish;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int hitsFishAlt;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int hitsWorm;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int hitsMush;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int hitsMushAlt;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int hitsTurnip;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int hitsCarrot;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int hitsSpringOnion;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int hitsBlackCurrant;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int hitsBlueBerry;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int hitsGooseBerry;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int hitsWoodPlank;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hitsMilk;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int hitsVegetableSeed;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int hitsGroundCoverSeeds;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int hitsRootSeeds;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int hitsBushSeeds;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int hitsSubCanopySeeds;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int hitsTreeSeeds;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int hitsVineSeeds;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int hitsCoins;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int index;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<GameObject> thingsInBucket;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject waterPrefab;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject wormPrefab;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject fishPrefab;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject fishAltPrefab;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject mushroomPrefab;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject mushroomAltPrefab;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject carrotPrefab;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject turnipPrefab;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject springOnionPrefab;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject blueBerryPrefab;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject gooseBerryPrefab;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject blackBerryPrefab;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject milkPrefab;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject soilPrefab;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject vegeSeedTomatoPrefab;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject vegeSeedPepperPrefab;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject vegeSeedChiliPrefab;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject groundCoverSeedHostaPrefab;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject groundCoverSeedCloverPrefab;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject groundCoverSeedWheatPrefab;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject rootSeedCarrotPrefab;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject rootSeedTurnipPrefab;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject rootSeedSpringOniontPrefab;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject bushSeedBlueBerryPrefab;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject bushSeedBlackBerryPrefab;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject bushSeedGooseBerryPrefab;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject subCanopySeedLemonPrefab;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject subCanopySeedApplePrefab;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject subCanopySeedOrangePrefab;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject treeSeedGumtreePrefab;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject treeSeedPinePrefab;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject treeSeedSprucePrefab;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject vineSeedWatermelonPrefab;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject vineSeedPumpkinPrefab;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject vineSeedCucumberPrefab;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject eggPrefab;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject crystalPinkPrefab;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject crystalStonePrefab;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject coin;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float timeLeft;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public bool loadedInObjects;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public BabyChestController[] babyChestControllers;

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x85060C", Offset = "0x85060C", VA = "0x85060C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x852F1C", Offset = "0x852F1C", VA = "0x852F1C")]
	public void InvokeMeAfterDelay()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x852F28", Offset = "0x852F28", VA = "0x852F28")]
	public void StoreTypeOfProduce(string nameProduce)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x852FA8", Offset = "0x852FA8", VA = "0x852FA8")]
	public void RemoveTypeOfProduce(string nameProduce)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x85066C", Offset = "0x85066C", VA = "0x85066C")]
	public void LoadInProduce()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x8530A8", Offset = "0x8530A8", VA = "0x8530A8")]
	public void RunUpdateCoinAmountDisplay()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x853160", Offset = "0x853160", VA = "0x853160")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x854F8C", Offset = "0x854F8C", VA = "0x854F8C")]
	private void OnTriggerExit(Collider collision)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x856120", Offset = "0x856120", VA = "0x856120")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x856124", Offset = "0x856124", VA = "0x856124")]
	public ChestStorageController()
	{
	}
}
[Token(Token = "0x200002B")]
public class ClimbController : Grabbable
{
	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
	public bool activeClimb;

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x85619C", Offset = "0x85619C", VA = "0x85619C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x8561AC", Offset = "0x8561AC", VA = "0x8561AC", Slot = "9")]
	public override void OnGrab(Hand hand)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x85629C", Offset = "0x85629C", VA = "0x85629C", Slot = "10")]
	public override void OnRelease(Hand hand, bool thrown)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x8563E4", Offset = "0x8563E4", VA = "0x8563E4")]
	public void ReleaseFromChop()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x856474", Offset = "0x856474", VA = "0x856474", Slot = "11")]
	public override void OnHandJointBreak(Hand hand)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x8565F4", Offset = "0x8565F4", VA = "0x8565F4")]
	public ClimbController()
	{
	}
}
[Token(Token = "0x200002C")]
public class ClimbSimplistic : MonoBehaviour
{
	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform handGrab;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject player;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 oldPos;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool grabbed;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject lefty;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject righty;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool enforceMovement;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool setup;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool paused;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip clipTouched;

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x856604", Offset = "0x856604", VA = "0x856604")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x856608", Offset = "0x856608", VA = "0x856608")]
	public void GrabbedLadder()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x856750", Offset = "0x856750", VA = "0x856750")]
	public void StoppedGrabbingLadder()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x8567F0", Offset = "0x8567F0", VA = "0x8567F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x856958", Offset = "0x856958", VA = "0x856958")]
	public ClimbSimplistic()
	{
	}
}
[Token(Token = "0x200002D")]
public class Climber : MonoBehaviour
{
	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController character;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static XRController climbingHand;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MovementController movementController;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool teleportSettingFromManager;

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x856960", Offset = "0x856960", VA = "0x856960")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x8569D0", Offset = "0x8569D0", VA = "0x8569D0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x856A8C", Offset = "0x856A8C", VA = "0x856A8C")]
	private void Climb()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x856CC0", Offset = "0x856CC0", VA = "0x856CC0")]
	public Climber()
	{
	}
}
[Token(Token = "0x200002E")]
public class CoinInventoryControl : MonoBehaviour
{
	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int coinCountCurrent;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text;

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x856CC8", Offset = "0x856CC8", VA = "0x856CC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x856D80", Offset = "0x856D80", VA = "0x856D80")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x856D84", Offset = "0x856D84", VA = "0x856D84")]
	public CoinInventoryControl()
	{
	}
}
[Token(Token = "0x200002F")]
public class CommandLineControl : MonoBehaviour
{
	[Token(Token = "0x20002D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F6A0", Offset = "0x56F6A0")]
	private sealed class <StartXR>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700060C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0x857828", Offset = "0x857828", VA = "0x857828", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0x857890", Offset = "0x857890", VA = "0x857890", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x856F5C", Offset = "0x856F5C", VA = "0x856F5C")]
		[DebuggerHidden]
		public <StartXR>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x857340", Offset = "0x857340", VA = "0x857340", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x857344", Offset = "0x857344", VA = "0x857344", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x857830", Offset = "0x857830", VA = "0x857830", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PCControls pCControlsToEnablepCControlsToEnable;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XRRig XRRig;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ThorGrabController thorGrabController;

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x856D9C", Offset = "0x856D9C", VA = "0x856D9C")]
	private string GetArg()
	{
		return null;
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x856EFC", Offset = "0x856EFC", VA = "0x856EFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57B4C8", Offset = "0x57B4C8")]
	private IEnumerator StartXR()
	{
		return null;
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x856F88", Offset = "0x856F88", VA = "0x856F88")]
	public void Start()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x856F8C", Offset = "0x856F8C", VA = "0x856F8C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x857338", Offset = "0x857338", VA = "0x857338")]
	public CommandLineControl()
	{
	}
}
[Token(Token = "0x2000030")]
public class ConstructionControllerObject : MonoBehaviour
{
	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int hitsPlanks;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform spot1;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform spot2;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform spot3;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform spot4;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform spot5;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject objectToSpawnWhenFinished;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FencePostController fencePostController;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] collisionObjects;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text text;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource audioSource;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject audioPrefabToSpawnWhenFinished;

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x857904", Offset = "0x857904", VA = "0x857904")]
	private void Start()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x857968", Offset = "0x857968", VA = "0x857968")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x858568", Offset = "0x858568", VA = "0x858568")]
	private void Update()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x85856C", Offset = "0x85856C", VA = "0x85856C")]
	public ConstructionControllerObject()
	{
	}
}
[Token(Token = "0x2000031")]
public class ConstructionControllerShared : MonoBehaviour
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int hitsPlanks;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hitsStone;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] spots;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int hitsTrigger;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int hitsTriggerStone;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject objectToSpawnWhenFinished;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GenericObjectIO genericObjectIO;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> collisionObjects;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource audioSource;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text text;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject audioPrefabToSpawnWhenFinished;

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x858574", Offset = "0x858574", VA = "0x858574")]
	private void Start()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x85866C", Offset = "0x85866C", VA = "0x85866C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x8590DC", Offset = "0x8590DC", VA = "0x8590DC")]
	public ConstructionControllerShared()
	{
	}
}
[Token(Token = "0x2000032")]
public class ConstructionTableHolder : MonoBehaviour
{
	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject currentlySpawned;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject playerToCheckPosition;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distanceFromPlayer;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject constructionGuideDisplay;

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x86F95C", Offset = "0x86F95C", VA = "0x86F95C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x86F9FC", Offset = "0x86F9FC", VA = "0x86F9FC")]
	public void CheckDistance()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x86FB94", Offset = "0x86FB94", VA = "0x86FB94")]
	public void SpawnNewObject(GameObject spawned)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x86FC44", Offset = "0x86FC44", VA = "0x86FC44")]
	private void Update()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x86FC48", Offset = "0x86FC48", VA = "0x86FC48")]
	public ConstructionTableHolder()
	{
	}
}
[Token(Token = "0x2000033")]
public class ContainerDetector : MonoBehaviour
{
	[Token(Token = "0x600010B")]
	[Address(RVA = "0x86FC50", Offset = "0x86FC50", VA = "0x86FC50")]
	private void Start()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x86FC54", Offset = "0x86FC54", VA = "0x86FC54")]
	public void RemoveGrabber()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x86FCE0", Offset = "0x86FCE0", VA = "0x86FCE0")]
	public void AddGrabber()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x86FD6C", Offset = "0x86FD6C", VA = "0x86FD6C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x86FE38", Offset = "0x86FE38", VA = "0x86FE38")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x86FF04", Offset = "0x86FF04", VA = "0x86FF04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x86FF08", Offset = "0x86FF08", VA = "0x86FF08")]
	public ContainerDetector()
	{
	}
}
[Token(Token = "0x2000034")]
public class ControlFish : MonoBehaviour
{
	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Fish fish;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject player;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float remainingX;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float remainingZ;

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x86FF10", Offset = "0x86FF10", VA = "0x86FF10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x870004", Offset = "0x870004", VA = "0x870004")]
	public void CheckForPlayer()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x8701C4", Offset = "0x8701C4", VA = "0x8701C4")]
	public ControlFish()
	{
	}
}
[Token(Token = "0x2000035")]
public class ControlGrabbable : MonoBehaviour
{
	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Grabbable grabbable;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hitPlayer;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject player;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float remainingX;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float remainingZ;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x8701CC", Offset = "0x8701CC", VA = "0x8701CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x8702C0", Offset = "0x8702C0", VA = "0x8702C0")]
	public void CheckForPlayer()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x870480", Offset = "0x870480", VA = "0x870480")]
	public ControlGrabbable()
	{
	}
}
[Token(Token = "0x2000036")]
public class ContructionTableButton : MonoBehaviour
{
	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform positionSpawn;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectToSpawn;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject spawnedObject;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FencePostController fencePostController;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GenericObjectIO genericObjectIO;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool fenceNormal;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool fenceAlt;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 positionAlter;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 rotationAlter;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ConstructionTableHolder constructionTableHolder;

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x870488", Offset = "0x870488", VA = "0x870488")]
	private void Start()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x87048C", Offset = "0x87048C", VA = "0x87048C")]
	public void SpawnObject()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x870780", Offset = "0x870780", VA = "0x870780")]
	private void Update()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x870784", Offset = "0x870784", VA = "0x870784")]
	public ContructionTableButton()
	{
	}
}
[Token(Token = "0x2000037")]
public class ConveyorBelt : MonoBehaviour
{
	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rigidbody;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x8707B0", Offset = "0x8707B0", VA = "0x8707B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x8707B4", Offset = "0x8707B4", VA = "0x8707B4")]
	public void AddTorqueNow()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x8707B8", Offset = "0x8707B8", VA = "0x8707B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x87085C", Offset = "0x87085C", VA = "0x87085C")]
	public ConveyorBelt()
	{
	}
}
[Token(Token = "0x2000038")]
public class ConveyorDetector : MonoBehaviour
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToMove;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform finalPosition;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int indexAmount;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x870864", Offset = "0x870864", VA = "0x870864")]
	private void Start()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x870868", Offset = "0x870868", VA = "0x870868")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x870A6C", Offset = "0x870A6C", VA = "0x870A6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x870D68", Offset = "0x870D68", VA = "0x870D68")]
	public ConveyorDetector()
	{
	}
}
[Token(Token = "0x2000039")]
public class CouldronControl : MonoBehaviour
{
	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int hitsWater;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hitsManure;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int hitsFish;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int hitsHoney;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int hitsMilk;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject waterPlane;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject manurePlane;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject fishPlane;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject honeyPlane;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject milkPlane;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text textWater;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text textManure;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text textFish;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text textWaterFish;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text textHoney;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text textMilk;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject manureDisplayObject;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject bottleActivationObjectManure;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool waterPhaseComplete;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<GameObject> thingsInCauldron;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public CauldronUserInterface cauldronUserInterface;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool activeDetect;

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x870D70", Offset = "0x870D70", VA = "0x870D70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x870D74", Offset = "0x870D74", VA = "0x870D74")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x871A5C", Offset = "0x871A5C", VA = "0x871A5C")]
	public void ResetHits()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x871C74", Offset = "0x871C74", VA = "0x871C74")]
	public void ResetPlanes()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x871CF4", Offset = "0x871CF4", VA = "0x871CF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x871CF8", Offset = "0x871CF8", VA = "0x871CF8")]
	public CouldronControl()
	{
	}
}
[Token(Token = "0x200003A")]
public class CowHeadScratchControl : MonoBehaviour
{
	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audio;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool playing;

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x871D70", Offset = "0x871D70", VA = "0x871D70")]
	private void Start()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x871D74", Offset = "0x871D74", VA = "0x871D74")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x871F7C", Offset = "0x871F7C", VA = "0x871F7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x871FBC", Offset = "0x871FBC", VA = "0x871FBC")]
	public CowHeadScratchControl()
	{
	}
}
[Token(Token = "0x200003B")]
public class DataManager : MonoBehaviour
{
	[Token(Token = "0x600012E")]
	[Address(RVA = "0x871FC4", Offset = "0x871FC4", VA = "0x871FC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x872078", Offset = "0x872078", VA = "0x872078")]
	public void ResetAllLevelData()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x872040", Offset = "0x872040", VA = "0x872040")]
	public void ResetLevelSimple()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x8720B8", Offset = "0x8720B8", VA = "0x8720B8")]
	public DataManager()
	{
	}
}
[Token(Token = "0x200003C")]
public class DemoPrePackInventory : MonoBehaviour
{
	[Token(Token = "0x6000132")]
	[Address(RVA = "0x8720C0", Offset = "0x8720C0", VA = "0x8720C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x872118", Offset = "0x872118", VA = "0x872118")]
	public void RunInventoryPrePackDemo()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x872240", Offset = "0x872240", VA = "0x872240")]
	private void Update()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x872244", Offset = "0x872244", VA = "0x872244")]
	public DemoPrePackInventory()
	{
	}
}
[Token(Token = "0x200003D")]
public class DestroyAfterAudioPlayed : MonoBehaviour
{
	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x8725F0", Offset = "0x8725F0", VA = "0x8725F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x8725F4", Offset = "0x8725F4", VA = "0x8725F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x872694", Offset = "0x872694", VA = "0x872694")]
	public DestroyAfterAudioPlayed()
	{
	}
}
[Token(Token = "0x200003E")]
public class DetectGlassBottle : MonoBehaviour
{
	[Token(Token = "0x20002D8")]
	public enum BottleType
	{
		[Token(Token = "0x40017C0")]
		None,
		[Token(Token = "0x40017C1")]
		Manure,
		[Token(Token = "0x40017C2")]
		Fish,
		[Token(Token = "0x40017C3")]
		Honey,
		[Token(Token = "0x40017C4")]
		Milk
	}

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject glassBottleLiquid;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject corkToBottleOnActivate;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CouldronControl couldronControl;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material materialFish;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material materialHoney;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material materialMilk;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ConstructionTableHolder holder;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool activeDetect;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject corkFakeMesh;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystemRenderer particleSystemPour;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material materialPourFish;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material materialPourHoney;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material materialPourMilk;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BottleType bottleType;

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x87269C", Offset = "0x87269C", VA = "0x87269C")]
	private void Start()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x8726A0", Offset = "0x8726A0", VA = "0x8726A0")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x872D20", Offset = "0x872D20", VA = "0x872D20")]
	public void ChangeToManureType()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x872E70", Offset = "0x872E70", VA = "0x872E70")]
	public void ChangeToFishType()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x872FFC", Offset = "0x872FFC", VA = "0x872FFC")]
	public void ChangeToHoneyType()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x873184", Offset = "0x873184", VA = "0x873184")]
	public void ChangeToMilkType()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x87330C", Offset = "0x87330C", VA = "0x87330C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x873310", Offset = "0x873310", VA = "0x873310")]
	public DetectGlassBottle()
	{
	}
}
[Token(Token = "0x200003F")]
public class DetectHandClap : MonoBehaviour
{
	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clapped;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NavMeshAgent horseNavAgent;

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x873320", Offset = "0x873320", VA = "0x873320")]
	private void Start()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x873324", Offset = "0x873324", VA = "0x873324")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x8734B0", Offset = "0x8734B0", VA = "0x8734B0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x8735CC", Offset = "0x8735CC", VA = "0x8735CC")]
	public DetectHandClap()
	{
	}
}
[Token(Token = "0x2000040")]
public class DetectParticlesSoil : MonoBehaviour
{
	[Token(Token = "0x6000145")]
	[Address(RVA = "0x8735D4", Offset = "0x8735D4", VA = "0x8735D4")]
	public void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x873E90", Offset = "0x873E90", VA = "0x873E90")]
	public DetectParticlesSoil()
	{
	}
}
[Token(Token = "0x2000041")]
public class DetectSeedUsed : MonoBehaviour
{
	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string seedUsedIdentifyingString;

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x873E98", Offset = "0x873E98", VA = "0x873E98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x873F54", Offset = "0x873F54", VA = "0x873F54")]
	public void SetupToNotAppear()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x873F64", Offset = "0x873F64", VA = "0x873F64")]
	private void Update()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x873F68", Offset = "0x873F68", VA = "0x873F68")]
	public DetectSeedUsed()
	{
	}
}
[Token(Token = "0x2000042")]
public class DismissTutorialControl : MonoBehaviour
{
	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NavMeshAgent navMeshAgent;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject positionWalkTo;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool walkComplete;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject tutorialToReactivateOnDestination;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform tutorialPositionAfterWalk;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject dismissButton;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TraderController traderController;

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x8740FC", Offset = "0x8740FC", VA = "0x8740FC")]
	public void Start()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x8741B8", Offset = "0x8741B8", VA = "0x8741B8")]
	public void SendMeAwayInstant()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x8743C8", Offset = "0x8743C8", VA = "0x8743C8")]
	public void SendMeAway()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x8744DC", Offset = "0x8744DC", VA = "0x8744DC")]
	public void CheckIfAtDestination()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x87484C", Offset = "0x87484C", VA = "0x87484C")]
	public DismissTutorialControl()
	{
	}
}
[Token(Token = "0x2000043")]
public class EatenStateController : MonoBehaviour
{
	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject oneBite;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject twoBite;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer meshRenderer;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int biteCount;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject particleEffect;

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x874854", Offset = "0x874854", VA = "0x874854")]
	public void Bitten()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x874A94", Offset = "0x874A94", VA = "0x874A94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x874A98", Offset = "0x874A98", VA = "0x874A98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x874A9C", Offset = "0x874A9C", VA = "0x874A9C")]
	public EatenStateController()
	{
	}
}
[Token(Token = "0x2000044")]
public class EggLayController : MonoBehaviour
{
	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject eggPrefab;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform positionSpawn;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeLeft;

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x874AA4", Offset = "0x874AA4", VA = "0x874AA4")]
	public void LayEggs()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x874BD0", Offset = "0x874BD0", VA = "0x874BD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x874C04", Offset = "0x874C04", VA = "0x874C04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x874C64", Offset = "0x874C64", VA = "0x874C64")]
	public EggLayController()
	{
	}
}
[Token(Token = "0x2000045")]
public class EntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x6000158")]
	[Address(RVA = "0x874C74", Offset = "0x874C74", VA = "0x874C74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x874E00", Offset = "0x874E00", VA = "0x874E00")]
	private void EntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x874EC4", Offset = "0x874EC4", VA = "0x874EC4")]
	public EntitlementCheck()
	{
	}
}
[Serializable]
[Token(Token = "0x2000046")]
public sealed class LODI_NavMeshAgent : ILODInstance
{
	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal int index;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal string LODName;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool SetDisabled;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[HideInInspector]
	[SerializeField]
	private bool _Locked;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private NavMeshAgent cmp;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x570390", Offset = "0x570390")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x570390", Offset = "0x570390")]
	public float Priority;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ObstacleAvoidanceType Quality;

	[Token(Token = "0x17000001")]
	public int Index
	{
		[Token(Token = "0x600015B")]
		[Address(RVA = "0x7299CC", Offset = "0x7299CC", VA = "0x7299CC", Slot = "4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600015C")]
		[Address(RVA = "0x7299D4", Offset = "0x7299D4", VA = "0x7299D4", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public string Name
	{
		[Token(Token = "0x600015D")]
		[Address(RVA = "0x7299DC", Offset = "0x7299DC", VA = "0x7299DC", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x600015E")]
		[Address(RVA = "0x7299E4", Offset = "0x7299E4", VA = "0x7299E4", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public bool CustomEditor
	{
		[Token(Token = "0x600015F")]
		[Address(RVA = "0x7299EC", Offset = "0x7299EC", VA = "0x7299EC", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000004")]
	public bool Disable
	{
		[Token(Token = "0x6000160")]
		[Address(RVA = "0x7299F4", Offset = "0x7299F4", VA = "0x7299F4", Slot = "9")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000161")]
		[Address(RVA = "0x7299FC", Offset = "0x7299FC", VA = "0x7299FC", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public bool DrawDisableOption
	{
		[Token(Token = "0x6000162")]
		[Address(RVA = "0x729A08", Offset = "0x729A08", VA = "0x729A08", Slot = "11")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000006")]
	public bool SupportingTransitions
	{
		[Token(Token = "0x6000163")]
		[Address(RVA = "0x729A10", Offset = "0x729A10", VA = "0x729A10", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000007")]
	public bool DrawLowererSlider
	{
		[Token(Token = "0x6000164")]
		[Address(RVA = "0x729A18", Offset = "0x729A18", VA = "0x729A18", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000008")]
	public float QualityLowerer
	{
		[Token(Token = "0x6000165")]
		[Address(RVA = "0x729A20", Offset = "0x729A20", VA = "0x729A20", Slot = "14")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000166")]
		[Address(RVA = "0x729A28", Offset = "0x729A28", VA = "0x729A28", Slot = "15")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public string HeaderText
	{
		[Token(Token = "0x6000167")]
		[Address(RVA = "0x729A78", Offset = "0x729A78", VA = "0x729A78", Slot = "16")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000A")]
	public float ToCullDelay
	{
		[Token(Token = "0x6000168")]
		[Address(RVA = "0x729AC0", Offset = "0x729AC0", VA = "0x729AC0", Slot = "17")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000B")]
	public bool SupportVersions
	{
		[Token(Token = "0x6000169")]
		[Address(RVA = "0x729AC8", Offset = "0x729AC8", VA = "0x729AC8", Slot = "18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000C")]
	public int DrawingVersion
	{
		[Token(Token = "0x600016A")]
		[Address(RVA = "0x729AD0", Offset = "0x729AD0", VA = "0x729AD0", Slot = "19")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600016B")]
		[Address(RVA = "0x729AD8", Offset = "0x729AD8", VA = "0x729AD8", Slot = "20")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public bool LockSettings
	{
		[Token(Token = "0x600016C")]
		[Address(RVA = "0x729B28", Offset = "0x729B28", VA = "0x729B28", Slot = "21")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600016D")]
		[Address(RVA = "0x729B30", Offset = "0x729B30", VA = "0x729B30", Slot = "22")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public Texture Icon
	{
		[Token(Token = "0x600016E")]
		[Address(RVA = "0x729B3C", Offset = "0x729B3C", VA = "0x729B3C", Slot = "23")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000F")]
	public Component TargetComponent
	{
		[Token(Token = "0x600016F")]
		[Address(RVA = "0x729B44", Offset = "0x729B44", VA = "0x729B44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x729B4C", Offset = "0x729B4C", VA = "0x729B4C", Slot = "24")]
	public void SetSameValuesAsComponent(Component component)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x729C78", Offset = "0x729C78", VA = "0x729C78", Slot = "25")]
	public void ApplySettingsToTheComponent(Component component, ILODInstance initialSettingsRef)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x729DF8", Offset = "0x729DF8", VA = "0x729DF8", Slot = "26")]
	public void AssignAutoSettingsAsForLODLevel(int lodIndex, int lodCount, Component component)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x729F4C", Offset = "0x729F4C", VA = "0x729F4C", Slot = "27")]
	public void AssignSettingsAsForCulled(Component component)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x729F74", Offset = "0x729F74", VA = "0x729F74", Slot = "28")]
	public void AssignSettingsAsForNearest(Component component)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x729FA4", Offset = "0x729FA4", VA = "0x729FA4", Slot = "29")]
	public void AssignSettingsAsForHidden(Component component)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x729FD8", Offset = "0x729FD8", VA = "0x729FD8", Slot = "30")]
	public ILODInstance GetCopy()
	{
		return null;
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x72A030", Offset = "0x72A030", VA = "0x72A030", Slot = "31")]
	public void InterpolateBetween(ILODInstance lodA, ILODInstance lodB, float transitionToB)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x72A148", Offset = "0x72A148", VA = "0x72A148")]
	public LODI_NavMeshAgent()
	{
	}
}
[Serializable]
[Token(Token = "0x2000047")]
public sealed class LODI_Terrain : ILODInstance
{
	[Token(Token = "0x20002D9")]
	public enum EILODTerrainDisableMode
	{
		[Token(Token = "0x40017C6")]
		ModifyParameters,
		[Token(Token = "0x40017C7")]
		NotModifyParameters,
		[Token(Token = "0x40017C8")]
		ModifyOnlyDrawParameters
	}

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal int index;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal string LODName;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool SetDisabled;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[HideInInspector]
	[SerializeField]
	private bool _Locked;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private Terrain cmp;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570454", Offset = "0x570454")]
	public EILODTerrainDisableMode Do;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool DeactivateCollider;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57048C", Offset = "0x57048C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57048C", Offset = "0x57048C")]
	public float PixelError;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5704D4", Offset = "0x5704D4")]
	public float BasemapDistance;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5704F0", Offset = "0x5704F0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5704F0", Offset = "0x5704F0")]
	public float DetailDistance;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x570538", Offset = "0x570538")]
	public float DetailDensity;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x570550", Offset = "0x570550")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x570550", Offset = "0x570550")]
	public float TreeDistance;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x570598", Offset = "0x570598")]
	public float TreeLODBias;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5705B0", Offset = "0x5705B0")]
	public float BillboardStart;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5705CC", Offset = "0x5705CC")]
	public bool DrawFoliage;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ShadowCastingMode Mode;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool CastShadows;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool DrawHeightmap;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5705E0", Offset = "0x5705E0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5705E0", Offset = "0x5705E0")]
	public int ResolutionDivider;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x570634", Offset = "0x570634")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570634", Offset = "0x570634")]
	public GameObject MeshReplacement;

	[Token(Token = "0x17000010")]
	public int Index
	{
		[Token(Token = "0x6000179")]
		[Address(RVA = "0x72A1B4", Offset = "0x72A1B4", VA = "0x72A1B4", Slot = "4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600017A")]
		[Address(RVA = "0x72A1BC", Offset = "0x72A1BC", VA = "0x72A1BC", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public string Name
	{
		[Token(Token = "0x600017B")]
		[Address(RVA = "0x72A1C4", Offset = "0x72A1C4", VA = "0x72A1C4", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x600017C")]
		[Address(RVA = "0x72A1CC", Offset = "0x72A1CC", VA = "0x72A1CC", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public bool CustomEditor
	{
		[Token(Token = "0x600017D")]
		[Address(RVA = "0x72A1D4", Offset = "0x72A1D4", VA = "0x72A1D4", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000013")]
	public bool Disable
	{
		[Token(Token = "0x600017E")]
		[Address(RVA = "0x72A1DC", Offset = "0x72A1DC", VA = "0x72A1DC", Slot = "9")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600017F")]
		[Address(RVA = "0x72A1E4", Offset = "0x72A1E4", VA = "0x72A1E4", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public bool DrawDisableOption
	{
		[Token(Token = "0x6000180")]
		[Address(RVA = "0x72A1F0", Offset = "0x72A1F0", VA = "0x72A1F0", Slot = "11")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000015")]
	public bool SupportingTransitions
	{
		[Token(Token = "0x6000181")]
		[Address(RVA = "0x72A1F8", Offset = "0x72A1F8", VA = "0x72A1F8", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000016")]
	public bool DrawLowererSlider
	{
		[Token(Token = "0x6000182")]
		[Address(RVA = "0x72A200", Offset = "0x72A200", VA = "0x72A200", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000017")]
	public float QualityLowerer
	{
		[Token(Token = "0x6000183")]
		[Address(RVA = "0x72A208", Offset = "0x72A208", VA = "0x72A208", Slot = "14")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000184")]
		[Address(RVA = "0x72A210", Offset = "0x72A210", VA = "0x72A210", Slot = "15")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public string HeaderText
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x72A260", Offset = "0x72A260", VA = "0x72A260", Slot = "16")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000019")]
	public float ToCullDelay
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x72A2A8", Offset = "0x72A2A8", VA = "0x72A2A8", Slot = "17")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700001A")]
	public bool SupportVersions
	{
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x72A2B0", Offset = "0x72A2B0", VA = "0x72A2B0", Slot = "18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001B")]
	public int DrawingVersion
	{
		[Token(Token = "0x6000188")]
		[Address(RVA = "0x72A2B8", Offset = "0x72A2B8", VA = "0x72A2B8", Slot = "19")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000189")]
		[Address(RVA = "0x72A2C0", Offset = "0x72A2C0", VA = "0x72A2C0", Slot = "20")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public bool LockSettings
	{
		[Token(Token = "0x600018A")]
		[Address(RVA = "0x72A310", Offset = "0x72A310", VA = "0x72A310", Slot = "21")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600018B")]
		[Address(RVA = "0x72A318", Offset = "0x72A318", VA = "0x72A318", Slot = "22")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public Texture Icon
	{
		[Token(Token = "0x600018C")]
		[Address(RVA = "0x72A324", Offset = "0x72A324", VA = "0x72A324", Slot = "23")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001E")]
	public Component TargetComponent
	{
		[Token(Token = "0x600018D")]
		[Address(RVA = "0x72A32C", Offset = "0x72A32C", VA = "0x72A32C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x72A334", Offset = "0x72A334", VA = "0x72A334", Slot = "24")]
	public void SetSameValuesAsComponent(Component component)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x72A4F8", Offset = "0x72A4F8", VA = "0x72A4F8", Slot = "25")]
	public void ApplySettingsToTheComponent(Component component, ILODInstance initialSettingsRef)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x72AA28", Offset = "0x72AA28", VA = "0x72AA28", Slot = "26")]
	public void AssignAutoSettingsAsForLODLevel(int lodIndex, int lodCount, Component component)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x72AD48", Offset = "0x72AD48", VA = "0x72AD48", Slot = "27")]
	public void AssignSettingsAsForCulled(Component component)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x72AD9C", Offset = "0x72AD9C", VA = "0x72AD9C", Slot = "28")]
	public void AssignSettingsAsForNearest(Component component)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x72AE1C", Offset = "0x72AE1C", VA = "0x72AE1C", Slot = "29")]
	public void AssignSettingsAsForHidden(Component component)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x72AE58", Offset = "0x72AE58", VA = "0x72AE58", Slot = "30")]
	public ILODInstance GetCopy()
	{
		return null;
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x72AEB0", Offset = "0x72AEB0", VA = "0x72AEB0", Slot = "31")]
	public void InterpolateBetween(ILODInstance lodA, ILODInstance lodB, float transitionToB)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x72B0E4", Offset = "0x72B0E4", VA = "0x72B0E4")]
	public LODI_Terrain()
	{
	}
}
[Token(Token = "0x2000048")]
public sealed class ScrLOD_NavMeshAgent : ScrLOD_Base
{
	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LODI_NavMeshAgent settings;

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x793B8C", Offset = "0x793B8C", VA = "0x793B8C", Slot = "4")]
	public override ILODInstance GetLODInstance()
	{
		return null;
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x793B94", Offset = "0x793B94", VA = "0x793B94")]
	public ScrLOD_NavMeshAgent()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x793C00", Offset = "0x793C00", VA = "0x793C00", Slot = "6")]
	public override ScrLOD_Base GetScrLODInstance()
	{
		return null;
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x793C48", Offset = "0x793C48", VA = "0x793C48", Slot = "5")]
	public override ScrLOD_Base CreateNewScrCopy()
	{
		return null;
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x793CE4", Offset = "0x793CE4", VA = "0x793CE4", Slot = "7")]
	public override ScriptableLODsController GenerateLODController(Component target, ScriptableOptimizer optimizer)
	{
		return null;
	}
}
[Token(Token = "0x2000049")]
public sealed class ScrLOD_Terrain : ScrLOD_Base
{
	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LODI_Terrain settings;

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x793E40", Offset = "0x793E40", VA = "0x793E40", Slot = "4")]
	public override ILODInstance GetLODInstance()
	{
		return null;
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x793E48", Offset = "0x793E48", VA = "0x793E48")]
	public ScrLOD_Terrain()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x793EB4", Offset = "0x793EB4", VA = "0x793EB4", Slot = "6")]
	public override ScrLOD_Base GetScrLODInstance()
	{
		return null;
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x793EFC", Offset = "0x793EFC", VA = "0x793EFC", Slot = "5")]
	public override ScrLOD_Base CreateNewScrCopy()
	{
		return null;
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x793F98", Offset = "0x793F98", VA = "0x793F98", Slot = "7")]
	public override ScriptableLODsController GenerateLODController(Component target, ScriptableOptimizer optimizer)
	{
		return null;
	}
}
[Token(Token = "0x200004A")]
public class FHierarchyIcons
{
	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x8791DC", Offset = "0x8791DC", VA = "0x8791DC")]
	static FHierarchyIcons()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x8791E0", Offset = "0x8791E0", VA = "0x8791E0")]
	private static void EvaluateIcons(int instanceId, Rect selectionRect)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x8791E4", Offset = "0x8791E4", VA = "0x8791E4")]
	private static void DrawIcon(string texName, Rect rect)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x8791E8", Offset = "0x8791E8", VA = "0x8791E8")]
	private static Texture2D GetTex(string name)
	{
		return null;
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x8791F0", Offset = "0x8791F0", VA = "0x8791F0")]
	public FHierarchyIcons()
	{
	}
}
[Token(Token = "0x200004B")]
public interface IFHierarchyIcon
{
	[Token(Token = "0x1700001F")]
	string EditorIconPath
	{
		[Token(Token = "0x60001A6")]
		get;
	}
}
[Token(Token = "0x200004C")]
public class FPD_DrawTextureAttribute : PropertyAttribute
{
	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string path;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float width;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float height;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float labelWidth;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fieldWidth;

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xAD1148", Offset = "0xAD1148", VA = "0xAD1148")]
	public FPD_DrawTextureAttribute(string path, float width, float height, float labelWidth = 0f, float fieldWidth = 0f)
	{
	}
}
[Token(Token = "0x200004D")]
public class FPD_FoldableAttribute : PropertyAttribute
{
	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string FoldVariable;

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xAD119C", Offset = "0xAD119C", VA = "0xAD119C")]
	public FPD_FoldableAttribute(string boolFoldVariable)
	{
	}
}
[Token(Token = "0x200004E")]
public class FPD_HeaderAttribute : PropertyAttribute
{
	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string HeaderText;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float UpperPadding;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float BottomPadding;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Height;

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xAD11C8", Offset = "0xAD11C8", VA = "0xAD11C8")]
	public FPD_HeaderAttribute(string headerText, float upperPadding = 0f, float bottomPadding = 2f, int addHeight = 2)
	{
	}
}
[Token(Token = "0x200004F")]
public class FPD_LayersAttribute : PropertyAttribute
{
	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xAD121C", Offset = "0xAD121C", VA = "0xAD121C")]
	public FPD_LayersAttribute()
	{
	}
}
[Token(Token = "0x2000050")]
public class FPD_PercentageAttribute : PropertyAttribute
{
	[Token(Token = "0x20002DA")]
	public enum SuffixMode
	{
		[Token(Token = "0x40017CA")]
		From0to100,
		[Token(Token = "0x40017CB")]
		PercentageUnclamped,
		[Token(Token = "0x40017CC")]
		FromMinToMax,
		[Token(Token = "0x40017CD")]
		FromMinToMaxRounded
	}

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public readonly float Min;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly float Max;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly string Suffix;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly bool from0to100;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public readonly bool editableValue;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public readonly bool basic;

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xAD1224", Offset = "0xAD1224", VA = "0xAD1224")]
	public FPD_PercentageAttribute(float min, float max, bool goOver100Perc = false, bool editable = true, string suffix = "%", bool basicFromTo = false)
	{
	}
}
[Token(Token = "0x2000051")]
public class FPD_SuffixAttribute : PropertyAttribute
{
	[Token(Token = "0x20002DB")]
	public enum SuffixMode
	{
		[Token(Token = "0x40017CF")]
		From0to100,
		[Token(Token = "0x40017D0")]
		PercentageUnclamped,
		[Token(Token = "0x40017D1")]
		FromMinToMax,
		[Token(Token = "0x40017D2")]
		FromMinToMaxRounded
	}

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public readonly float Min;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly float Max;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public readonly SuffixMode Mode;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly string Suffix;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly bool editableValue;

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xAD129C", Offset = "0xAD129C", VA = "0xAD129C")]
	public FPD_SuffixAttribute(float min, float max, SuffixMode mode = SuffixMode.From0to100, string suffix = "%", bool editable = true)
	{
	}
}
[Token(Token = "0x2000052")]
public class FPD_TabAttribute : PropertyAttribute
{
	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string HeaderText;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float R;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float G;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float B;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string IconContent;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string ResourcesIconPath;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int IconSize;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string FoldVariable;

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xAD12F8", Offset = "0xAD12F8", VA = "0xAD12F8")]
	public FPD_TabAttribute(string headerText, float r = 0.5f, float g = 0.5f, float b = 1f, string iconContent = "", string resourcesIconPath = "", int iconSize = 24, string foldVariable = "")
	{
	}
}
[Token(Token = "0x2000053")]
public static class FAnimatorMethods
{
	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x8774D0", Offset = "0x8774D0", VA = "0x8774D0")]
	public static void LerpFloatValue(Animator animator, string name = "RunWalk", float value = 0f, float deltaSpeed = 8f)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x87760C", Offset = "0x87760C", VA = "0x87760C")]
	public static bool CheckAnimationEnd(Animator animator, int layer = 0, bool reverse = false, bool checkAnimLoop = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x8776E8", Offset = "0x8776E8", VA = "0x8776E8")]
	public static void ResetLayersWeights(Animator animator, float speed = 10f)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x877794", Offset = "0x877794", VA = "0x877794")]
	public static void LerpLayerWeight(Animator animator, int layer = 0, float newValue = 1f, float speed = 8f)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x87780C", Offset = "0x87780C", VA = "0x87780C")]
	public static bool StateExists(Animator animator, string clipName, int layer = 0)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x877548", Offset = "0x877548", VA = "0x877548")]
	public static float Lerp(float a, float b, float t, float factor = 0.01f)
	{
		return default(float);
	}
}
[Token(Token = "0x2000054")]
public static class FColorMethods
{
	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x877850", Offset = "0x877850", VA = "0x877850")]
	public static Color ChangeColorAlpha(Color color, float alpha)
	{
		return default(Color);
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x877884", Offset = "0x877884", VA = "0x877884")]
	public static Color ChangeColorsValue(Color color, float brightenOrDarken = 0f)
	{
		return default(Color);
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x8778C0", Offset = "0x8778C0", VA = "0x8778C0")]
	public static Color32 HexToColor(string hex)
	{
		return default(Color32);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x877AD8", Offset = "0x877AD8", VA = "0x877AD8")]
	public static string ColorToHex(Color32 color, bool addHash = true)
	{
		return null;
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x877DB0", Offset = "0x877DB0", VA = "0x877DB0")]
	public static string ColorToHex(Color color, bool addHash = true)
	{
		return null;
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x877E30", Offset = "0x877E30", VA = "0x877E30")]
	public static void LerpMaterialColor(Material mat, string property, Color targetColor, float deltaMultiplier = 8f)
	{
	}
}
[Token(Token = "0x2000055")]
public static class FDebug
{
	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x878164", Offset = "0x878164", VA = "0x878164")]
	public static void Log(string log)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x8781EC", Offset = "0x8781EC", VA = "0x8781EC")]
	public static void Log(string log, string category)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x877A0C", Offset = "0x877A0C", VA = "0x877A0C")]
	public static void LogRed(string log)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x8784D4", Offset = "0x8784D4", VA = "0x8784D4")]
	public static void LogOrange(string log)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x8785A0", Offset = "0x8785A0", VA = "0x8785A0")]
	public static void LogYellow(string log)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x87842C", Offset = "0x87842C", VA = "0x87842C")]
	public static string MarkerColor(string color)
	{
		return null;
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x87848C", Offset = "0x87848C", VA = "0x87848C")]
	public static string EndColorMarker()
	{
		return null;
	}
}
[Token(Token = "0x2000056")]
public static class FEasing
{
	[Token(Token = "0x20002DC")]
	public enum EFease
	{
		[Token(Token = "0x40017D4")]
		EaseInCubic,
		[Token(Token = "0x40017D5")]
		EaseOutCubic,
		[Token(Token = "0x40017D6")]
		EaseInOutCubic,
		[Token(Token = "0x40017D7")]
		EaseInOutElastic,
		[Token(Token = "0x40017D8")]
		EaseInElastic,
		[Token(Token = "0x40017D9")]
		EaseOutElastic,
		[Token(Token = "0x40017DA")]
		EaseInExpo,
		[Token(Token = "0x40017DB")]
		EaseOutExpo,
		[Token(Token = "0x40017DC")]
		EaseInOutExpo,
		[Token(Token = "0x40017DD")]
		Linear
	}

	[Token(Token = "0x20002DD")]
	public delegate float Function(float s, float e, float v, float extraParameter = 1f);

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x87866C", Offset = "0x87866C", VA = "0x87866C")]
	public static float EaseInCubic(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x878684", Offset = "0x878684", VA = "0x878684")]
	public static float EaseOutCubic(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x8786AC", Offset = "0x8786AC", VA = "0x8786AC")]
	public static float EaseInOutCubic(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x878704", Offset = "0x878704", VA = "0x878704")]
	public static float EaseOutElastic(float start, float end, float value, float rangeMul = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x878800", Offset = "0x878800", VA = "0x878800")]
	public static float EaseInElastic(float start, float end, float value, float rangeMul = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x878900", Offset = "0x878900", VA = "0x878900")]
	public static float EaseInOutElastic(float start, float end, float value, float rangeMul = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x878A6C", Offset = "0x878A6C", VA = "0x878A6C")]
	public static float EaseInExpo(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x878B04", Offset = "0x878B04", VA = "0x878B04")]
	public static float EaseOutExpo(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x878B9C", Offset = "0x878B9C", VA = "0x878B9C")]
	public static float EaseInOutExpo(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x878C8C", Offset = "0x878C8C", VA = "0x878C8C")]
	public static float Linear(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x878D14", Offset = "0x878D14", VA = "0x878D14")]
	public static Function GetEasingFunction(EFease easingFunction)
	{
		return null;
	}
}
[Token(Token = "0x2000057")]
public static class FStringMethods
{
	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xAD1374", Offset = "0xAD1374", VA = "0xAD1374")]
	public static string IntToString(int value, int signs)
	{
		return null;
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xAD1458", Offset = "0xAD1458", VA = "0xAD1458")]
	public static string CapitalizeOnlyFirstLetter(string text)
	{
		return null;
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xAD1530", Offset = "0xAD1530", VA = "0xAD1530")]
	public static string CapitalizeFirstLetter(string text)
	{
		return null;
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xAD15C4", Offset = "0xAD15C4", VA = "0xAD15C4")]
	public static string ReplaceSpacesWithUnderline(string text)
	{
		return null;
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xAD1650", Offset = "0xAD1650", VA = "0xAD1650")]
	public static string GetEndOfStringFromSeparator(string source, char[] separators, int which = 1, bool fromEnd = false)
	{
		return null;
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xAD17A4", Offset = "0xAD17A4", VA = "0xAD17A4")]
	public static string GetEndOfStringFromStringSeparator(string source, string[] separators, int which = 1, bool rest = false)
	{
		return null;
	}
}
[Token(Token = "0x2000058")]
public class FencePostController : MonoBehaviour
{
	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fencePostPrefab;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] fencePostsInLevel;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int countRepsToRunThrough;

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xAD1EC0", Offset = "0xAD1EC0", VA = "0xAD1EC0")]
	public void SetupCount()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xAD1F7C", Offset = "0xAD1F7C", VA = "0xAD1F7C")]
	public void StartAfterDelay()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xAD2624", Offset = "0xAD2624", VA = "0xAD2624")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xAD2734", Offset = "0xAD2734", VA = "0xAD2734")]
	public void SaveOutPositions()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xAD2AE4", Offset = "0xAD2AE4", VA = "0xAD2AE4")]
	public void SaveOutAllRotations()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xAD2E58", Offset = "0xAD2E58", VA = "0xAD2E58")]
	public void LoadINPositions()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xAD30C8", Offset = "0xAD30C8", VA = "0xAD30C8")]
	public void LoadInRotations()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xAD249C", Offset = "0xAD249C", VA = "0xAD249C")]
	public void AddPlotFromSpawn(GameObject plot)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xAD32E4", Offset = "0xAD32E4", VA = "0xAD32E4")]
	public void AddPlot(GameObject plot)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xAD35CC", Offset = "0xAD35CC", VA = "0xAD35CC")]
	public void SaveOutSpecificPosition(int arrayIndex, float posX, float posY, float posZ)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xAD3898", Offset = "0xAD3898", VA = "0xAD3898")]
	public void SaveOutSpecificRotation(int arrayIndex, float rotX, float rotY, float rotZ)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xAD3B64", Offset = "0xAD3B64", VA = "0xAD3B64")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xAD3B68", Offset = "0xAD3B68", VA = "0xAD3B68")]
	public FencePostController()
	{
	}
}
[Token(Token = "0x2000059")]
public class FencePostGrabMovementLink : MonoBehaviour
{
	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FencePostController fencePostController;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int index;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool setupNewPosition;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool grabbingCurrently;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool senseDropped;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool setupPositionAfterDrop;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isFence;

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xAD3B70", Offset = "0xAD3B70", VA = "0xAD3B70")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xAD3B74", Offset = "0xAD3B74", VA = "0xAD3B74")]
	public void SaveFromPositionIO(bool saveRotation)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xAD3CE8", Offset = "0xAD3CE8", VA = "0xAD3CE8")]
	public void HaveBeenPickedUp()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xAD3D8C", Offset = "0xAD3D8C", VA = "0xAD3D8C")]
	public void HaveBeenDropped()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xAD3E28", Offset = "0xAD3E28", VA = "0xAD3E28")]
	public void GrabObjectWithPhysics()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xAD3ED4", Offset = "0xAD3ED4", VA = "0xAD3ED4")]
	public void DropObjectWithPhysics()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xAD3F80", Offset = "0xAD3F80", VA = "0xAD3F80")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xAD403C", Offset = "0xAD403C", VA = "0xAD403C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xAD4144", Offset = "0xAD4144", VA = "0xAD4144")]
	public FencePostGrabMovementLink()
	{
	}
}
[Token(Token = "0x200005A")]
public class Fish : MonoBehaviour
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool noticeFood;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool catchAble;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool caught;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fisherManHand;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bait;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject particleCatchable;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource audioSource;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip audioClipBubble;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform tankCenterGoal;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float obstacleSensingDistance;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float swimSpeedMin;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float swimSpeedMax;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxTurnRateY;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float maxWanderAngle;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float wanderPeriodDuration;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float wanderProbability;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public float swimSpeed;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool obstacleDetected;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float wanderPeriodStartTime;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion goalLookRotation;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform bodyTransform;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float randomOffset;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 hitPoint;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 goalPoint;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float RotationSpeed;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float surfaceLimit;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool oldfish;

	[Token(Token = "0x17000020")]
	private Vector3 swimDirection
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xAD414C", Offset = "0xAD414C", VA = "0xAD414C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xAD41D8", Offset = "0xAD41D8", VA = "0xAD41D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xAD4384", Offset = "0xAD4384", VA = "0xAD4384")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xAD5D94", Offset = "0xAD5D94", VA = "0xAD5D94")]
	public void SwimTowardFood()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xAD6120", Offset = "0xAD6120", VA = "0xAD6120")]
	public void NotifyFisherman()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xAD6714", Offset = "0xAD6714", VA = "0xAD6714")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xAD67E4", Offset = "0xAD67E4", VA = "0xAD67E4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xAD52D8", Offset = "0xAD52D8", VA = "0xAD52D8")]
	private void Wiggle()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xAD5400", Offset = "0xAD5400", VA = "0xAD5400")]
	private void Wander()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xAD56A4", Offset = "0xAD56A4", VA = "0xAD56A4")]
	private void AvoidObstacles()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xAD5A64", Offset = "0xAD5A64", VA = "0xAD5A64")]
	private void DrawDebugAids()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xAD5C44", Offset = "0xAD5C44", VA = "0xAD5C44")]
	private void UpdatePosition()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xAD67E8", Offset = "0xAD67E8", VA = "0xAD67E8")]
	public Fish()
	{
	}
}
[Token(Token = "0x200005B")]
public class FishController : MonoBehaviour
{
	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F6B0", Offset = "0x56F6B0")]
	private sealed class <Reset>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Count;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FishController <>4__this;

		[Token(Token = "0x1700060E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B95")]
			[Address(RVA = "0x92E300", Offset = "0x92E300", VA = "0x92E300", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B97")]
			[Address(RVA = "0x92E368", Offset = "0x92E368", VA = "0x92E368", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x92E018", Offset = "0x92E018", VA = "0x92E018")]
		[DebuggerHidden]
		public <Reset>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x92E22C", Offset = "0x92E22C", VA = "0x92E22C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x92E230", Offset = "0x92E230", VA = "0x92E230", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x92E308", Offset = "0x92E308", VA = "0x92E308", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] positionsToSwimTo;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LookAtConstraint lookAtConstraint;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject currentFocus;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float multiplierSpeedMove;

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x92DE00", Offset = "0x92DE00", VA = "0x92DE00")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x92DE04", Offset = "0x92DE04", VA = "0x92DE04")]
	public void GetNewTarget()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x92DF98", Offset = "0x92DF98", VA = "0x92DF98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57B52C", Offset = "0x57B52C")]
	private IEnumerator Reset(float Count)
	{
		return null;
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x92E044", Offset = "0x92E044", VA = "0x92E044")]
	public void IncreaseMultplier()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x92E050", Offset = "0x92E050", VA = "0x92E050")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x92E21C", Offset = "0x92E21C", VA = "0x92E21C")]
	public FishController()
	{
	}
}
[Token(Token = "0x200005C")]
public class FishLocationConnect : MonoBehaviour
{
	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] connectedPoints;

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x92E370", Offset = "0x92E370", VA = "0x92E370")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x92E374", Offset = "0x92E374", VA = "0x92E374")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x92E378", Offset = "0x92E378", VA = "0x92E378")]
	public FishLocationConnect()
	{
	}
}
[Token(Token = "0x200005D")]
public class FishingHookController : MonoBehaviour
{
	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject hangBaitPosition;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bait;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fishingRodHandle;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform fishCaughtPosition;

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x92E380", Offset = "0x92E380", VA = "0x92E380")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x92E384", Offset = "0x92E384", VA = "0x92E384")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x92E584", Offset = "0x92E584", VA = "0x92E584")]
	public void HangBait()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x92E834", Offset = "0x92E834", VA = "0x92E834")]
	private void Update()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x92E838", Offset = "0x92E838", VA = "0x92E838")]
	public FishingHookController()
	{
	}
}
[Token(Token = "0x200005E")]
public class FishingLine : MonoBehaviour
{
	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] linePositions;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fishHook;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Hand handThatGrabbedMe;

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x92E840", Offset = "0x92E840", VA = "0x92E840")]
	private void Start()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x92E844", Offset = "0x92E844", VA = "0x92E844")]
	public void SetHand()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x92E848", Offset = "0x92E848", VA = "0x92E848")]
	private void Update()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x92E978", Offset = "0x92E978", VA = "0x92E978")]
	public FishingLine()
	{
	}
}
[Token(Token = "0x200005F")]
public class FixedTimeControl : MonoBehaviour
{
	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string detectedHMD;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool usingIndex;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool usingOculus;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool usingVive;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool usingWMR;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool usingQuest;

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x92E980", Offset = "0x92E980", VA = "0x92E980")]
	private void Start()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x92EC84", Offset = "0x92EC84", VA = "0x92EC84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x92EC88", Offset = "0x92EC88", VA = "0x92EC88")]
	public FixedTimeControl()
	{
	}
}
[Token(Token = "0x2000060")]
public class GateControl : MonoBehaviour
{
	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform positionTop;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform positionBottom;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool down;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool moving;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timeRemaining;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool countDown;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource audioSource;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip clipOpen;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip clipClose;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool playedAudio;

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x92FA9C", Offset = "0x92FA9C", VA = "0x92FA9C")]
	private void Start()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x92FAA0", Offset = "0x92FAA0", VA = "0x92FAA0")]
	public void SetToMove()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x92FACC", Offset = "0x92FACC", VA = "0x92FACC")]
	private void Update()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x92FE18", Offset = "0x92FE18", VA = "0x92FE18")]
	public GateControl()
	{
	}
}
[Token(Token = "0x2000061")]
public class GateSpawn : MonoBehaviour
{
	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fenceGate;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform fenceGateSpawnPos;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject myFenceGate;

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x92FE30", Offset = "0x92FE30", VA = "0x92FE30")]
	private void Start()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x92FE88", Offset = "0x92FE88", VA = "0x92FE88")]
	public void SetupGate()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x92FFC8", Offset = "0x92FFC8", VA = "0x92FFC8")]
	public GateSpawn()
	{
	}
}
[Token(Token = "0x2000062")]
public class GenericObjectGrabAndDrop : MonoBehaviour
{
	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GenericObjectIO genericObjectIO;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int index;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool setupNewPosition;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool grabbingCurrently;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool senseDropped;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool setupPositionAfterDrop;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isFence;

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x92FFD0", Offset = "0x92FFD0", VA = "0x92FFD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x92FFD4", Offset = "0x92FFD4", VA = "0x92FFD4")]
	public void SaveFromPositionIO(bool saveRotation, bool saveScale)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x930B8C", Offset = "0x930B8C", VA = "0x930B8C")]
	public void HaveBeenPickedUp()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x930C30", Offset = "0x930C30", VA = "0x930C30")]
	public void HaveBeenDropped()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x930CCC", Offset = "0x930CCC", VA = "0x930CCC")]
	public void GrabObjectWithPhysics()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x930D78", Offset = "0x930D78", VA = "0x930D78")]
	public void DropObjectWithPhysics()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x930E24", Offset = "0x930E24", VA = "0x930E24")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x930EE0", Offset = "0x930EE0", VA = "0x930EE0")]
	public void DropAnimal()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x930EEC", Offset = "0x930EEC", VA = "0x930EEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x930FF8", Offset = "0x930FF8", VA = "0x930FF8")]
	public GenericObjectGrabAndDrop()
	{
	}
}
[Token(Token = "0x2000063")]
public class GenericObjectIO : MonoBehaviour
{
	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectPrefabToCreateOnStart;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objectsAlreadyInLevel;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int countRepsToRunThrough;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string objectStringForSaving;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlotShapeMaster plotShapeMaster;

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x931000", Offset = "0x931000", VA = "0x931000")]
	public void SetupCount()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x93110C", Offset = "0x93110C", VA = "0x93110C")]
	public void StartAfterDelay()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x931870", Offset = "0x931870", VA = "0x931870")]
	private void Start()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x9319BC", Offset = "0x9319BC", VA = "0x9319BC")]
	public void SaveOutPositions()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x931F4C", Offset = "0x931F4C", VA = "0x931F4C")]
	public void SaveOutAllRotations()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x9322C0", Offset = "0x9322C0", VA = "0x9322C0")]
	public void LoadINPositions()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x932528", Offset = "0x932528", VA = "0x932528")]
	public void LoadInRotations()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x932790", Offset = "0x932790", VA = "0x932790")]
	public void LoadInScale()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x931620", Offset = "0x931620", VA = "0x931620")]
	public void AddPlotFromSpawn(GameObject plot)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x9329B4", Offset = "0x9329B4", VA = "0x9329B4")]
	public void AddPlot(GameObject plot)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x930134", Offset = "0x930134", VA = "0x930134")]
	public void SaveOutSpecificPosition(int arrayIndex, float posX, float posY, float posZ)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x9303FC", Offset = "0x9303FC", VA = "0x9303FC")]
	public void SaveOutSpecificRotation(int arrayIndex, float rotX, float rotY, float rotZ)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x9308C4", Offset = "0x9308C4", VA = "0x9308C4")]
	public void SaveOutSpecificScale(int arrayIndex, float scaleX, float scaleY, float scaleZ)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x932D1C", Offset = "0x932D1C", VA = "0x932D1C")]
	public void RemovePlot(GameObject plot)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x932E50", Offset = "0x932E50", VA = "0x932E50")]
	public GenericObjectIO()
	{
	}
}
[Token(Token = "0x2000064")]
public class GoldCoinTradingController : MonoBehaviour
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject goldCoin;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform goldCoinSpawnSpot;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TraderController tradeController;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSourcePlayCompleteTrade;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform depositLocation;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource audioTransferOfCoins;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int rewardAmount;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<GameObject> turnips;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<GameObject> carrots;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<GameObject> springOnions;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<GameObject> blueberrries;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<GameObject> blackberries;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<GameObject> gooseberries;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<GameObject> hostas;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<GameObject> clovers;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<GameObject> wheat;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<GameObject> watermelon;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<GameObject> pumpkin;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<GameObject> cucumber;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<GameObject> lemon;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<GameObject> orange;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<GameObject> apple;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<GameObject> tomato;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<GameObject> pepper;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<GameObject> chili;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<GameObject> gumtreeCones;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<GameObject> pineCones;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public List<GameObject> spruceCones;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool alternateSellerOne;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	public bool alternateSellerTwo;

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x93374C", Offset = "0x93374C", VA = "0x93374C")]
	private void Start()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x933750", Offset = "0x933750", VA = "0x933750")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x934B70", Offset = "0x934B70", VA = "0x934B70")]
	public void CheckForPayout()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x935F6C", Offset = "0x935F6C", VA = "0x935F6C")]
	public void PayOut(int coinsToProduce)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x936110", Offset = "0x936110", VA = "0x936110")]
	private void Update()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x936114", Offset = "0x936114", VA = "0x936114")]
	public GoldCoinTradingController()
	{
	}
}
[Token(Token = "0x2000065")]
public class GoldCollector : MonoBehaviour
{
	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> coins;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform depositLocation;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioTransferOfCoins;

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x936374", Offset = "0x936374", VA = "0x936374")]
	private void Start()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x936378", Offset = "0x936378", VA = "0x936378")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x936434", Offset = "0x936434", VA = "0x936434")]
	public void TransferCoinsToChest()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x9365C8", Offset = "0x9365C8", VA = "0x9365C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x9365CC", Offset = "0x9365CC", VA = "0x9365CC")]
	public GoldCollector()
	{
	}
}
[Token(Token = "0x2000066")]
public class GrabMovementLink : MonoBehaviour
{
	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlotPositionIO plotPositionIO;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int index;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool setupNewPosition;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool grabbingCurrently;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool senseDropped;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool setupPositionAfterDrop;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isFence;

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x93663C", Offset = "0x93663C", VA = "0x93663C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x936640", Offset = "0x936640", VA = "0x936640")]
	public void SaveFromPositionIO(bool saveRotation)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x9367C0", Offset = "0x9367C0", VA = "0x9367C0")]
	public void HaveBeenPickedUp()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x936864", Offset = "0x936864", VA = "0x936864")]
	public void HaveBeenDropped()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x936900", Offset = "0x936900", VA = "0x936900")]
	public void GrabObjectWithPhysics()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x9369AC", Offset = "0x9369AC", VA = "0x9369AC")]
	public void DropObjectWithPhysics()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x936A58", Offset = "0x936A58", VA = "0x936A58")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x936B14", Offset = "0x936B14", VA = "0x936B14")]
	private void Update()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x936C1C", Offset = "0x936C1C", VA = "0x936C1C")]
	public GrabMovementLink()
	{
	}
}
[Token(Token = "0x2000067")]
public class GrabToolsController : MonoBehaviour
{
	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject shovel;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject axe;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pickAxe;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject bucket;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject fishingRod;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform positionOne;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform positionTwo;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform positionThree;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform positionFour;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform positionFive;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public XRController controllerOne;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public XRController controllerTwo;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool currentState;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool currentState2;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool currentState3;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	private bool currentState4;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool currentlyPressed;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool setupTempPos;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	public bool setupTempPosStop;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material glowMaterial;

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x936C24", Offset = "0x936C24", VA = "0x936C24")]
	private void Start()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x936C28", Offset = "0x936C28", VA = "0x936C28")]
	public void SetupTempPostions()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x936CA8", Offset = "0x936CA8", VA = "0x936CA8")]
	public void ComeToME()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x936D5C", Offset = "0x936D5C", VA = "0x936D5C")]
	public void SetupResetPressed()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x936D78", Offset = "0x936D78", VA = "0x936D78")]
	public void DropDownToEarth()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x936D80", Offset = "0x936D80", VA = "0x936D80")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x936EA0", Offset = "0x936EA0", VA = "0x936EA0")]
	public GrabToolsController()
	{
	}
}
[Token(Token = "0x2000068")]
public class GroundCoverGrabLink : MonoBehaviour
{
	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rigi;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GroundCoverGrowthController groundCoverGrowthController;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int index;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSource;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool offBush;

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x936EA8", Offset = "0x936EA8", VA = "0x936EA8")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x936F64", Offset = "0x936F64", VA = "0x936F64")]
	public void DropMeNow()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x937140", Offset = "0x937140", VA = "0x937140")]
	private void Start()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x937144", Offset = "0x937144", VA = "0x937144")]
	private void Update()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x937148", Offset = "0x937148", VA = "0x937148")]
	public GroundCoverGrabLink()
	{
	}
}
[Token(Token = "0x2000069")]
public class GroundCoverPlotIO : MonoBehaviour
{
	[Token(Token = "0x20002DF")]
	public enum State
	{
		[Token(Token = "0x40017E3")]
		Empty,
		[Token(Token = "0x40017E4")]
		HasSoil,
		[Token(Token = "0x40017E5")]
		HasSeeds,
		[Token(Token = "0x40017E6")]
		HasPlants
	}

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] vegePlots;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoilControllerGroundCover[] soilControllers;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject wheatSeed;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject turnipSeed;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject pepperSeed;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject groundCoverPrefab;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public State[] state;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int countRepsToRunThrough;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GenericObjectIO objectIOForFirstStageProtoPlot;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject firstStageProtoPlotPrefabFromScene;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PlotShapeMaster plotShapeMaster;

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x93772C", Offset = "0x93772C", VA = "0x93772C")]
	public void SetupCount()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x9377E8", Offset = "0x9377E8", VA = "0x9377E8")]
	public void StartAfterDelay()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x93A478", Offset = "0x93A478", VA = "0x93A478")]
	private void Start()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x93A514", Offset = "0x93A514", VA = "0x93A514")]
	public void SaveOutPositions()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x93A8C4", Offset = "0x93A8C4", VA = "0x93A8C4")]
	public void SaveOutAllRotations()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x93AC38", Offset = "0x93AC38", VA = "0x93AC38")]
	public void LoadINPositions()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x93AEA8", Offset = "0x93AEA8", VA = "0x93AEA8")]
	public void LoadInRotations()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x9398DC", Offset = "0x9398DC", VA = "0x9398DC")]
	public void LoadIn()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x939250", Offset = "0x939250", VA = "0x939250")]
	public void SaveOut()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x93B0C4", Offset = "0x93B0C4", VA = "0x93B0C4")]
	public void SaveSingleEmptyPlotVege(int index)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x937688", Offset = "0x937688", VA = "0x937688")]
	public void SaveSingleFullyPlantedVege(int index)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x938EB4", Offset = "0x938EB4", VA = "0x938EB4")]
	public void AddPlotFromSpawn(GameObject plot)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x93B14C", Offset = "0x93B14C", VA = "0x93B14C")]
	public void AddPlot(GameObject plot)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x93B6BC", Offset = "0x93B6BC", VA = "0x93B6BC")]
	public void SaveOutSpecificPosition(int arrayIndex, float posX, float posY, float posZ)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x93BB54", Offset = "0x93BB54", VA = "0x93BB54")]
	public void SaveOutSpecificRotation(int arrayIndex, float rotX, float rotY, float rotZ)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x93B634", Offset = "0x93B634", VA = "0x93B634")]
	public void SelectivelySaveRootEmpty(int index)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x93C020", Offset = "0x93C020", VA = "0x93C020")]
	private void Update()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x93C024", Offset = "0x93C024", VA = "0x93C024")]
	public GroundCoverPlotIO()
	{
	}
}
[Token(Token = "0x200006A")]
public class GuardPatrol : MonoBehaviour
{
	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NavMeshAgent navMeshAgent;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] patrolPoints;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int indexPatrolPoints;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator animator;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int timeCheckInterval;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float timeRemaining;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool continuousWalk;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x93C02C", Offset = "0x93C02C", VA = "0x93C02C")]
	private void Start()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x93C124", Offset = "0x93C124", VA = "0x93C124")]
	public void CountDown()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x93C144", Offset = "0x93C144", VA = "0x93C144")]
	public void MoveToNewPosition()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x93C218", Offset = "0x93C218", VA = "0x93C218")]
	public void CheckDistanceAndSetAnimation()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x93C030", Offset = "0x93C030", VA = "0x93C030")]
	public void Patrol()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x93C2B0", Offset = "0x93C2B0", VA = "0x93C2B0")]
	public GuardPatrol()
	{
	}
}
[Token(Token = "0x200006B")]
public class HandDistanceGrab : MonoBehaviour
{
	[Token(Token = "0x20002E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F6C0", Offset = "0x56F6C0")]
	private sealed class <GetRigOfHighlight>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable grabbable;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandDistanceGrab <>4__this;

		[Token(Token = "0x17000610")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B9B")]
			[Address(RVA = "0x93EF54", Offset = "0x93EF54", VA = "0x93EF54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000611")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0x93EFBC", Offset = "0x93EFBC", VA = "0x93EFBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x93CD04", Offset = "0x93CD04", VA = "0x93CD04")]
		[DebuggerHidden]
		public <GetRigOfHighlight>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x93EDFC", Offset = "0x93EDFC", VA = "0x93EDFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x93EE00", Offset = "0x93EE00", VA = "0x93EE00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x93EF5C", Offset = "0x93EF5C", VA = "0x93EF5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F6D0", Offset = "0x56F6D0")]
	private sealed class <CheckGotSuccessfullyGrabbed>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject grabbed;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 oldPos;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion oldRot;

		[Token(Token = "0x17000612")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0x93ED8C", Offset = "0x93ED8C", VA = "0x93ED8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000613")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BA3")]
			[Address(RVA = "0x93EDF4", Offset = "0x93EDF4", VA = "0x93EDF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x93CDEC", Offset = "0x93CDEC", VA = "0x93CDEC")]
		[DebuggerHidden]
		public <CheckGotSuccessfullyGrabbed>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x93EC44", Offset = "0x93EC44", VA = "0x93EC44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x93EC48", Offset = "0x93EC48", VA = "0x93EC48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x93ED94", Offset = "0x93ED94", VA = "0x93ED94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F6E0", Offset = "0x56F6E0")]
	private sealed class <GrabTheObjectAfterDelay>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandDistanceGrab <>4__this;

		[Token(Token = "0x17000614")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0x93F07C", Offset = "0x93F07C", VA = "0x93F07C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000615")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BA9")]
			[Address(RVA = "0x93F0E4", Offset = "0x93F0E4", VA = "0x93F0E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x93CE88", Offset = "0x93CE88", VA = "0x93CE88")]
		[DebuggerHidden]
		public <GrabTheObjectAfterDelay>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x93EFC4", Offset = "0x93EFC4", VA = "0x93EFC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x93EFC8", Offset = "0x93EFC8", VA = "0x93EFC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x93F084", Offset = "0x93F084", VA = "0x93F084", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Hand hand;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<XRController> controllers;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputHelpers.Button grip;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public InputHelpers.Button gripForIndex;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool gripping;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool grippingForIndex;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Grabbable grabbableToHighlight;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool grabbableIsHighlighted;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool isLeftHand;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject objectToMove;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Grabbable grabbableToMove;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] raycastOrigins;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform moveToPostion;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool isOnValveIndex;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool movedToPosition;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float targetTime;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float targetTime2;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<GameObject> litUpObjects;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<float> litUpObjectDistances;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float minDistance;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public XRInteractorLineVisual lineVisual;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public XRRayInteractor rayInteractor;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool usingTeleport;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool onPC;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	public bool usingIndex;

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x93C2C4", Offset = "0x93C2C4", VA = "0x93C2C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x93C350", Offset = "0x93C350", VA = "0x93C350")]
	private IEnumerator RaycastForUI()
	{
		return null;
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x93C9D0", Offset = "0x93C9D0", VA = "0x93C9D0")]
	private bool CheckForGrip(XRController controller)
	{
		return default(bool);
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x93CB24", Offset = "0x93CB24", VA = "0x93CB24")]
	public void CheckForLetGo(XRController controller)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x93CC88", Offset = "0x93CC88", VA = "0x93CC88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57B590", Offset = "0x57B590")]
	private IEnumerator GetRigOfHighlight(Grabbable grabbable)
	{
		return null;
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x93CD30", Offset = "0x93CD30", VA = "0x93CD30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57B5F4", Offset = "0x57B5F4")]
	private IEnumerator CheckGotSuccessfullyGrabbed(GameObject grabbed, Vector3 oldPos, Quaternion oldRot)
	{
		return null;
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x93CE18", Offset = "0x93CE18", VA = "0x93CE18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57B658", Offset = "0x57B658")]
	private IEnumerator GrabTheObjectAfterDelay()
	{
		return null;
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x93CEB4", Offset = "0x93CEB4", VA = "0x93CEB4")]
	private GameObject GetClosestPickup(List<GameObject> pickups)
	{
		return null;
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x93D120", Offset = "0x93D120", VA = "0x93D120")]
	private void Update()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x93DAEC", Offset = "0x93DAEC", VA = "0x93DAEC")]
	private IEnumerator UpdateDiscretely()
	{
		return null;
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x93EB6C", Offset = "0x93EB6C", VA = "0x93EB6C")]
	public HandDistanceGrab()
	{
	}
}
[Token(Token = "0x200006C")]
public class HandPostionAdjustForIndex : MonoBehaviour
{
	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Hand hand;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string detectedHMD;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool usingIndex;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VR_Controller vrController;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HandDistanceGrab handDistanceGrabForGrabOveride;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject overrideRotation;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject reticleToPass;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material materialToPass;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SmoothTurnManager smoothTurnManager;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SnapTurnProvider snapTurnProvider;

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x93F0EC", Offset = "0x93F0EC", VA = "0x93F0EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x93FB70", Offset = "0x93FB70", VA = "0x93FB70")]
	public void SwitchUpHandLasersForIndex()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x940294", Offset = "0x940294", VA = "0x940294")]
	public void SwitchUpHandLasersForIndexRoundTwo()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x940920", Offset = "0x940920", VA = "0x940920")]
	public void SwitchUpHandLasersForIndexRoundThree()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x93F3EC", Offset = "0x93F3EC", VA = "0x93F3EC")]
	public void SwitchUpHandLasersForIndexRoundFour()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x94105C", Offset = "0x94105C", VA = "0x94105C")]
	private Component CopyComponent(Component original, GameObject destination)
	{
		return null;
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x941144", Offset = "0x941144", VA = "0x941144")]
	private void Update()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x941148", Offset = "0x941148", VA = "0x941148")]
	public HandPostionAdjustForIndex()
	{
	}
}
[Token(Token = "0x200006D")]
public class HorseButtHitt : MonoBehaviour
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HorseEffectsController horseEffectsController;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool enabledEffect;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource assAudioSource;

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x9411A0", Offset = "0x9411A0", VA = "0x9411A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x9411A4", Offset = "0x9411A4", VA = "0x9411A4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x941484", Offset = "0x941484", VA = "0x941484")]
	private void Update()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x941488", Offset = "0x941488", VA = "0x941488")]
	public HorseButtHitt()
	{
	}
}
[Token(Token = "0x200006E")]
public class HorseCallControl : MonoBehaviour
{
	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float oldvalue;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float newvalue;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float averagedLoudness;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float amp;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text textForDisplay;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource audioSource;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool playedWhistle;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timeLeft;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public NavMeshAgent horseNaveAgent;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HorseEffectsController horseEffectsController;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HorseRideController horseRideController;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool horseStopped;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public XRController controllerOne;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool currentState;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool holdingSecondaryButton;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool switchedOnDetect;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MicControlC micControlC;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool keyboardInput;

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x941490", Offset = "0x941490", VA = "0x941490")]
	public void TurnOnDetection()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x9414D4", Offset = "0x9414D4", VA = "0x9414D4")]
	public void TurnOffDetection()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x941514", Offset = "0x941514", VA = "0x941514")]
	private void Update()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x941B6C", Offset = "0x941B6C", VA = "0x941B6C")]
	public void ResetWhistle()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x941B80", Offset = "0x941B80", VA = "0x941B80")]
	public void sensitivity(float sense)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x941B88", Offset = "0x941B88", VA = "0x941B88")]
	public HorseCallControl()
	{
	}
}
[Token(Token = "0x200006F")]
public class HorseCartController : MonoBehaviour
{
	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HorseEffectsController horseEffectsController;

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x941BA0", Offset = "0x941BA0", VA = "0x941BA0")]
	public void HorseReturnToIdle()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x941C38", Offset = "0x941C38", VA = "0x941C38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x941C3C", Offset = "0x941C3C", VA = "0x941C3C")]
	public HorseCartController()
	{
	}
}
[Token(Token = "0x2000070")]
public class HorseEffectsController : MonoBehaviour
{
	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animWheel1;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animWheel2;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator horseAnimator;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSource;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip horseHeadScratchClip;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip horseMovingAudioClip;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip horseEatingCrunchAudioClip;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HorseHeadScratch horseHeadScratch;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HorseButtHitt horseButtHitt;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public FLookAnimator lookAnimator;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float horseSoundTime;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParticleSystem[] particles;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool horseMakingSound;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BucketParentController collectionPoint1;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BucketParentController collectionPoint2;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BucketParentController collectionPoint3;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform positionMovePickups;

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x941C44", Offset = "0x941C44", VA = "0x941C44")]
	public void HeadScratches()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x9413A8", Offset = "0x9413A8", VA = "0x9413A8")]
	public void AssHit()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x941CA0", Offset = "0x941CA0", VA = "0x941CA0")]
	public void EatCarrot()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x941A3C", Offset = "0x941A3C", VA = "0x941A3C")]
	public void StopMovingWheels()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x941BB8", Offset = "0x941BB8", VA = "0x941BB8")]
	public void BackToIdle()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x941D60", Offset = "0x941D60", VA = "0x941D60")]
	public void StopAudio()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x9418DC", Offset = "0x9418DC", VA = "0x9418DC")]
	public void StartMovingWheels()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x941D64", Offset = "0x941D64", VA = "0x941D64")]
	public void HorseCollectsFromCollectionPoints()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x942138", Offset = "0x942138", VA = "0x942138")]
	private void Start()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x9421E8", Offset = "0x9421E8", VA = "0x9421E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x942264", Offset = "0x942264", VA = "0x942264")]
	public HorseEffectsController()
	{
	}
}
[Token(Token = "0x2000071")]
public class HorseHandles : MonoBehaviour
{
	[Token(Token = "0x600028D")]
	[Address(RVA = "0x94226C", Offset = "0x94226C", VA = "0x94226C")]
	private void Start()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x942270", Offset = "0x942270", VA = "0x942270")]
	private void Update()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x942274", Offset = "0x942274", VA = "0x942274")]
	public HorseHandles()
	{
	}
}
[Token(Token = "0x2000072")]
public class HorseHeadScratch : MonoBehaviour
{
	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HorseEffectsController horseEffectsController;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public new bool enabled;

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x94227C", Offset = "0x94227C", VA = "0x94227C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x942280", Offset = "0x942280", VA = "0x942280")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x94246C", Offset = "0x94246C", VA = "0x94246C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x942470", Offset = "0x942470", VA = "0x942470")]
	public HorseHeadScratch()
	{
	}
}
[Token(Token = "0x2000073")]
public class HorseNavControl : MonoBehaviour
{
	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] wayPoints;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NavMeshAgent agent;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int indexWaypoint;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HorseEffectsController horseEffectsController;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool paused;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float targetTime;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 startPos;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion startRot;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool pausedCompletely;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BucketParentController bucketParentControllerForPurging;

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x942478", Offset = "0x942478", VA = "0x942478")]
	private void Start()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x9424FC", Offset = "0x9424FC", VA = "0x9424FC")]
	public void StartUp()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x942500", Offset = "0x942500", VA = "0x942500")]
	public void GoToNextPoint()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x9413AC", Offset = "0x9413AC", VA = "0x9413AC")]
	public void AssHit()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x942754", Offset = "0x942754", VA = "0x942754")]
	public void RestartCycle()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x942810", Offset = "0x942810", VA = "0x942810")]
	public void ResumeMovement()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x9428F0", Offset = "0x9428F0", VA = "0x9428F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x942998", Offset = "0x942998", VA = "0x942998")]
	public HorseNavControl()
	{
	}
}
[Token(Token = "0x2000074")]
public class HorseRideController : MonoBehaviour
{
	[Token(Token = "0x20002E3")]
	public enum State
	{
		[Token(Token = "0x40017F4")]
		Idle,
		[Token(Token = "0x40017F5")]
		WalkingForward,
		[Token(Token = "0x40017F6")]
		Reverse
	}

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool leftHandGrabbed;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool rightHandGrabbed;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool bothHandsGrabbed;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] linePositions;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CharacterController controller;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 playerVelocity;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool groundedPlayer;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float playerSpeed;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float jumpHeight;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float gravityValue;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject player;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject horseFocus;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject reignHandleLeft;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject reignHandleRight;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject reignHandleLeftPointToCheckFrom;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject reignHandRightPointToCheckFrom;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform horseFocusMovePosLeft;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform horseFocusMovePosRight;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform horseFocusMovePosOriginal;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public State state;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float turnAmount;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float changeTo;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float TurnAmountAim;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float forwardAmount;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float speed;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float rotateSpeed;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public HorseEffectsController horseEffectsController;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float horizontal;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public NavMeshAgent navMeshAgent;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool onPC;

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x9429A8", Offset = "0x9429A8", VA = "0x9429A8")]
	public void LeftHandGrabbed()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x9429D8", Offset = "0x9429D8", VA = "0x9429D8")]
	public void LeftHandUnGrabbed()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x942A1C", Offset = "0x942A1C", VA = "0x942A1C")]
	public void RightHandGrabbed()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x942A28", Offset = "0x942A28", VA = "0x942A28")]
	public void RightHandUnGrabbed()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x9429B4", Offset = "0x9429B4", VA = "0x9429B4")]
	public void TestBothHandsGrabbed()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x942A6C", Offset = "0x942A6C", VA = "0x942A6C")]
	public void SetupPlayerForRide()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x942BF8", Offset = "0x942BF8", VA = "0x942BF8")]
	public void SetupPlayerToGetOffRide()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x942CB4", Offset = "0x942CB4", VA = "0x942CB4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x9437C0", Offset = "0x9437C0", VA = "0x9437C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x943818", Offset = "0x943818", VA = "0x943818")]
	public HorseRideController()
	{
	}
}
[Token(Token = "0x2000075")]
public class HorseRideControllerSingle : MonoBehaviour
{
	[Token(Token = "0x20002E4")]
	public enum State
	{
		[Token(Token = "0x40017F8")]
		Idle,
		[Token(Token = "0x40017F9")]
		WalkingForward,
		[Token(Token = "0x40017FA")]
		Reverse
	}

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool leftHandGrabbed;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool rightHandGrabbed;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool bothHandsGrabbed;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] linePositions;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CharacterController controller;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 playerVelocity;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool groundedPlayer;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float playerSpeed;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float jumpHeight;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float gravityValue;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject player;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject horseFocus;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject reignHandleLeft;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject reignHandleRight;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject reignHandleLeftPointToCheckFrom;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject reignHandRightPointToCheckFrom;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform horseFocusMovePosLeft;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform horseFocusMovePosRight;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform horseFocusMovePosOriginal;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public State state;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float turnAmount;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float changeTo;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float TurnAmountAim;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float forwardAmount;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float speed;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float rotateSpeed;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public HorseEffectsController horseEffectsController;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float horizontal;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public NavMeshAgent navMeshAgent;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float adjustRangeParameter;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float adjustRangeLimit;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x943848", Offset = "0x943848", VA = "0x943848")]
	public void LeftHandGrabbed()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x943878", Offset = "0x943878", VA = "0x943878")]
	public void LeftHandUnGrabbed()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x9438BC", Offset = "0x9438BC", VA = "0x9438BC")]
	public void RightHandGrabbed()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x9438C8", Offset = "0x9438C8", VA = "0x9438C8")]
	public void RightHandUnGrabbed()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x943854", Offset = "0x943854", VA = "0x943854")]
	public void TestBothHandsGrabbed()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x94390C", Offset = "0x94390C", VA = "0x94390C")]
	public void SetupPlayerForRide()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x943A98", Offset = "0x943A98", VA = "0x943A98")]
	public void SetupPlayerToGetOffRide()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x943B54", Offset = "0x943B54", VA = "0x943B54")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x9445C8", Offset = "0x9445C8", VA = "0x9445C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x9445CC", Offset = "0x9445CC", VA = "0x9445CC")]
	public HorseRideControllerSingle()
	{
	}
}
[Token(Token = "0x2000076")]
public class InventoryItemControl : MonoBehaviour
{
	[Token(Token = "0x20002E5")]
	public enum ObjectStored
	{
		[Token(Token = "0x40017FC")]
		NothingStart,
		[Token(Token = "0x40017FD")]
		SeedCarrot,
		[Token(Token = "0x40017FE")]
		SeedTurnip,
		[Token(Token = "0x40017FF")]
		SeedSpringOnion,
		[Token(Token = "0x4001800")]
		SeedGooseBerry,
		[Token(Token = "0x4001801")]
		SeedBlueberry,
		[Token(Token = "0x4001802")]
		SeedBlackBerry,
		[Token(Token = "0x4001803")]
		SeedSpruce,
		[Token(Token = "0x4001804")]
		SeedGumtree,
		[Token(Token = "0x4001805")]
		SeedPine,
		[Token(Token = "0x4001806")]
		SeedHosta,
		[Token(Token = "0x4001807")]
		SeedClover,
		[Token(Token = "0x4001808")]
		SeedWheat,
		[Token(Token = "0x4001809")]
		SeedLemon,
		[Token(Token = "0x400180A")]
		SeedOrange,
		[Token(Token = "0x400180B")]
		SeedApple,
		[Token(Token = "0x400180C")]
		SeedTomato,
		[Token(Token = "0x400180D")]
		SeedChili,
		[Token(Token = "0x400180E")]
		SeedPepper,
		[Token(Token = "0x400180F")]
		SeedPumpkin,
		[Token(Token = "0x4001810")]
		SeedWatermelon,
		[Token(Token = "0x4001811")]
		SeedCucumber,
		[Token(Token = "0x4001812")]
		Soil,
		[Token(Token = "0x4001813")]
		Carrot,
		[Token(Token = "0x4001814")]
		Turnip,
		[Token(Token = "0x4001815")]
		SpringOnion,
		[Token(Token = "0x4001816")]
		GooseBerry,
		[Token(Token = "0x4001817")]
		Blueberry,
		[Token(Token = "0x4001818")]
		BlackBerry,
		[Token(Token = "0x4001819")]
		Spruce,
		[Token(Token = "0x400181A")]
		Gumtree,
		[Token(Token = "0x400181B")]
		Pine,
		[Token(Token = "0x400181C")]
		Hosta,
		[Token(Token = "0x400181D")]
		Clover,
		[Token(Token = "0x400181E")]
		Wheat,
		[Token(Token = "0x400181F")]
		Lemon,
		[Token(Token = "0x4001820")]
		Orange,
		[Token(Token = "0x4001821")]
		Apple,
		[Token(Token = "0x4001822")]
		Tomato,
		[Token(Token = "0x4001823")]
		Chili,
		[Token(Token = "0x4001824")]
		Pepper,
		[Token(Token = "0x4001825")]
		Pumpkin,
		[Token(Token = "0x4001826")]
		Watermelon,
		[Token(Token = "0x4001827")]
		Cucumber,
		[Token(Token = "0x4001828")]
		MushroomRed,
		[Token(Token = "0x4001829")]
		MushroomWhite,
		[Token(Token = "0x400182A")]
		Water,
		[Token(Token = "0x400182B")]
		Fish,
		[Token(Token = "0x400182C")]
		FishAlt,
		[Token(Token = "0x400182D")]
		Bait,
		[Token(Token = "0x400182E")]
		Manure,
		[Token(Token = "0x400182F")]
		Milk,
		[Token(Token = "0x4001830")]
		Egg,
		[Token(Token = "0x4001831")]
		CrystalPink,
		[Token(Token = "0x4001832")]
		CrystalStone,
		[Token(Token = "0x4001833")]
		Honey,
		[Token(Token = "0x4001834")]
		BottleManure,
		[Token(Token = "0x4001835")]
		BottleFish,
		[Token(Token = "0x4001836")]
		BottleHoney,
		[Token(Token = "0x4001837")]
		BottleMilk,
		[Token(Token = "0x4001838")]
		Wood,
		[Token(Token = "0x4001839")]
		Nothing
	}

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool spawnedGrabbedFromInternal;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Hand leftHand;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Hand rightHand;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float targetTime;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ObjectStored objectStored;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject objectInInventorySphere;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int objectStoredAmount;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int SphereIndexNumber;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool active;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text text;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject imageSeeds;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject internalGrabber;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject seedCarrot;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject seedTurnip;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject seedSpringOnion;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject SeedGooseBerry;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject SeedBlueberry;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject SeedBlackBerry;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject SeedSpruce;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject SeedGumtree;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject SeedPine;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject SeedHosta;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject SeedClover;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject SeedWheat;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject SeedLemon;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject SeedOrange;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject SeedApple;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject SeedTomato;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject SeedChili;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject SeedPepper;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject SeedPumpkin;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject SeedWatermelon;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject SeedCucumber;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject Carrot;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject Turnip;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject SpringOnion;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject GooseBerry;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject Blueberry;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject BlackBerry;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject Spruce;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject Gumtree;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject Pine;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject Hosta;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject Clover;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject Wheat;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject Lemon;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject Orange;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject Apple;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject Tomato;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject Chili;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject Pepper;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject Pumpkin;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject Watermelon;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject Cucumber;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject CucumberDummy;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject Soil;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject Water;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject MushroomRed;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject MushroomWhite;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject Fish;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject FishAlt;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject Bait;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject Milk;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject Manure;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject Egg;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject CrystalPink;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject CrystalStone;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject Honey;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public GameObject BottleManure;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject BottleFish;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public GameObject BottleHoney;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public GameObject BottleMilk;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public GameObject Wood;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject internalGrabberBackup;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObject miniRepresentation;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public AudioSource audioSource;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public AudioClip audioPickup;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public AudioClip audioPutDown;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public bool demo;

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xE1BB28", Offset = "0xE1BB28", VA = "0xE1BB28")]
	public void RunInventoryPrePack()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xE1BD14", Offset = "0xE1BD14", VA = "0xE1BD14")]
	public void CreateMiniRepresentation(GameObject mini)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xE1C5DC", Offset = "0xE1C5DC", VA = "0xE1C5DC")]
	public void DestroyMiniRepresentation()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xE1C648", Offset = "0xE1C648", VA = "0xE1C648")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xE20544", Offset = "0xE20544", VA = "0xE20544")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xE29D5C", Offset = "0xE29D5C", VA = "0xE29D5C")]
	public void StoreObjectType(string storageString, int amountStore)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xE29DF8", Offset = "0xE29DF8", VA = "0xE29DF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xE34438", Offset = "0xE34438", VA = "0xE34438")]
	public InventoryItemControl()
	{
	}
}
[Token(Token = "0x2000077")]
public class InventoryOptionsControl : MonoBehaviour
{
	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRController controllerOne;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XRController controllerTwo;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PouchControlArm pouchControlArm;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WatchControl watchControl;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool currentStateInventory;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool currentStateInventoryUnpressed;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool currentStateOptions;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	private bool currentStateOptionsUnpressed;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool currentlyPressedInventory;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool currentlyPressedOptions;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float timeRemainingInventory;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool ableToPressInventory;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float timeRemainingOptions;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool ableToPressOptions;

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x729784", Offset = "0x729784", VA = "0x729784")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x729788", Offset = "0x729788", VA = "0x729788")]
	public void PressInventoryButton()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x7297C4", Offset = "0x7297C4", VA = "0x7297C4")]
	public void PressOptionsButton()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x729800", Offset = "0x729800", VA = "0x729800")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x7299B4", Offset = "0x7299B4", VA = "0x7299B4")]
	public InventoryOptionsControl()
	{
	}
}
[Token(Token = "0x2000078")]
public class LayerTester : MonoBehaviour
{
	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x72BABC", Offset = "0x72BABC", VA = "0x72BABC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x72BAC0", Offset = "0x72BAC0", VA = "0x72BAC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x72BB7C", Offset = "0x72BB7C", VA = "0x72BB7C")]
	public LayerTester()
	{
	}
}
[Token(Token = "0x2000079")]
public class LevelUpManager : MonoBehaviour
{
	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem particle;

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x72BB84", Offset = "0x72BB84", VA = "0x72BB84")]
	public void ShowLevelUp()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x72BC20", Offset = "0x72BC20", VA = "0x72BC20")]
	public void ShowLevelUpReputation()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x72BCB8", Offset = "0x72BCB8", VA = "0x72BCB8")]
	public LevelUpManager()
	{
	}
}
[Token(Token = "0x200007A")]
public class LuxWater_SetToGerstnerHeight : MonoBehaviour
{
	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material WaterMaterial;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 Damping;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float TimeOffset;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UpdateWaterMaterialPerFrame;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5706B4", Offset = "0x5706B4")]
	public bool AddCircleAnim;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Radius;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Speed;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5706C8", Offset = "0x5706C8")]
	public Transform[] ManagedWaterProjectors;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5706DC", Offset = "0x5706DC")]
	public float MaxDisp;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform trans;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LuxWaterUtils.GersterWavesDescription Description;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool ObjectIsVisible;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 Offset;

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x739814", Offset = "0x739814", VA = "0x739814")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x739848", Offset = "0x739848", VA = "0x739848")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x739854", Offset = "0x739854", VA = "0x739854")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x73985C", Offset = "0x73985C", VA = "0x73985C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x739B4C", Offset = "0x739B4C", VA = "0x739B4C")]
	public LuxWater_SetToGerstnerHeight()
	{
	}
}
[Token(Token = "0x200007B")]
public class LuxWater_WaterVolumeListener : MonoBehaviour
{
	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x739C10", Offset = "0x739C10", VA = "0x739C10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x739CA4", Offset = "0x739CA4", VA = "0x739CA4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x739D38", Offset = "0x739D38", VA = "0x739D38")]
	private void Enter()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x739DA4", Offset = "0x739DA4", VA = "0x739DA4")]
	private void Exit()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x739E10", Offset = "0x739E10", VA = "0x739E10")]
	public LuxWater_WaterVolumeListener()
	{
	}
}
[Token(Token = "0x200007C")]
public static class LuxWaterUtils
{
	[Token(Token = "0x20002E6")]
	public struct GersterWavesDescription
	{
		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 intensity;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector4 steepness;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector4 amp;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector4 freq;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector4 speed;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector4 dirAB;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector4 dirCD;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector4 secondaryWaveParams;
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x738D84", Offset = "0x738D84", VA = "0x738D84")]
	public static void GetGersterWavesDescription(ref GersterWavesDescription Description, Material WaterMaterial)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x738F30", Offset = "0x738F30", VA = "0x738F30")]
	public static Vector3 InternalGetGestnerDisplacement(Vector2 xzVtx, Vector4 intensity, Vector4 steepness, Vector4 amp, Vector4 freq, Vector4 speed, Vector4 dirAB, Vector4 dirCD, float TimeOffset)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x739218", Offset = "0x739218", VA = "0x739218")]
	public static Vector3 GetGestnerDisplacement(Vector3 WorldPosition, GersterWavesDescription Description, float TimeOffset)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x7395A8", Offset = "0x7395A8", VA = "0x7395A8")]
	public static Vector3 GetGestnerDisplacementSingle(Vector3 WorldPosition, GersterWavesDescription Description, float TimeOffset)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200007D")]
public class MatchPosition : MonoBehaviour
{
	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform transformToMatch;

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xBB4864", Offset = "0xBB4864", VA = "0xBB4864")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xBB4868", Offset = "0xBB4868", VA = "0xBB4868")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xBB4994", Offset = "0xBB4994", VA = "0xBB4994")]
	public MatchPosition()
	{
	}
}
[Token(Token = "0x200007E")]
public class Frame_average_Loudness : MonoBehaviour
{
	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float oldvalue;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float newvalue;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float averagedLoudness;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float amp;

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x92F9A4", Offset = "0x92F9A4", VA = "0x92F9A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x92FA84", Offset = "0x92FA84", VA = "0x92FA84")]
	public void sensitivity(float sense)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x92FA8C", Offset = "0x92FA8C", VA = "0x92FA8C")]
	public Frame_average_Loudness()
	{
	}
}
[Token(Token = "0x200007F")]
public class LightIntensity_Loudness : MonoBehaviour
{
	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float getLoudness;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float amp;

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x72BCC0", Offset = "0x72BCC0", VA = "0x72BCC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x72BD58", Offset = "0x72BD58", VA = "0x72BD58")]
	public void sensitivity(float sense)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x72BD60", Offset = "0x72BD60", VA = "0x72BD60")]
	public LightIntensity_Loudness()
	{
	}
}
[Token(Token = "0x2000080")]
public class Range_Selection : MonoBehaviour
{
	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float amplify;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool remapZeroToOne;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MinMaxSpectrumRange[] selectRanges;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MicControlC controller;

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x78C850", Offset = "0x78C850", VA = "0x78C850")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x78C8A8", Offset = "0x78C8A8", VA = "0x78C8A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x78CA10", Offset = "0x78CA10", VA = "0x78CA10")]
	public Range_Selection()
	{
	}
}
[Serializable]
[Token(Token = "0x2000081")]
public class MinMaxSpectrumRange
{
	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float min;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float max;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float loudness;

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xABB884", Offset = "0xABB884", VA = "0xABB884")]
	public MinMaxSpectrumRange()
	{
	}
}
[Token(Token = "0x2000082")]
public class Sample_spectrumCurve : MonoBehaviour
{
	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimationCurve getSpectrumCurve;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float amp;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] objectList;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float defScale;

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x79374C", Offset = "0x79374C", VA = "0x79374C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x79389C", Offset = "0x79389C", VA = "0x79389C")]
	public Sample_spectrumCurve()
	{
	}
}
[Token(Token = "0x2000083")]
public class Scale_SpectrumData : MonoBehaviour
{
	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float[] getSpectrumData;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float amp;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] objectList;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float defScale;

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x7938B0", Offset = "0x7938B0", VA = "0x7938B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x793A00", Offset = "0x793A00", VA = "0x793A00")]
	public void sensitivity(float sense)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x793A08", Offset = "0x793A08", VA = "0x793A08")]
	public Scale_SpectrumData()
	{
	}
}
[Token(Token = "0x2000084")]
public class UI_devices_dropdown_list : MonoBehaviour
{
	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MicControlC getController;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> getDeviceList;

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x7AA230", Offset = "0x7AA230", VA = "0x7AA230")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x7AA33C", Offset = "0x7AA33C", VA = "0x7AA33C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x7AA490", Offset = "0x7AA490", VA = "0x7AA490")]
	public UI_devices_dropdown_list()
	{
	}
}
[Token(Token = "0x2000085")]
public class timeScale_Loudness : MonoBehaviour
{
	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float getLoudness;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float amp;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minTimeScale;

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x1078100", Offset = "0x1078100", VA = "0x1078100")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x1078180", Offset = "0x1078180", VA = "0x1078180")]
	public void sensitivity(float sense)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x1078188", Offset = "0x1078188", VA = "0x1078188")]
	public timeScale_Loudness()
	{
	}
}
[Token(Token = "0x2000086")]
public class timeScale_average_Loudness : MonoBehaviour
{
	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float oldvalue;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float newvalue;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float averagedLoudness;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minTimeScale;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float amp;

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x107819C", Offset = "0x107819C", VA = "0x107819C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1078294", Offset = "0x1078294", VA = "0x1078294")]
	public void sensitivity(float sense)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x107829C", Offset = "0x107829C", VA = "0x107829C")]
	public timeScale_average_Loudness()
	{
	}
}
[Token(Token = "0x2000087")]
public class MathH
{
	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xBB499C", Offset = "0xBB499C", VA = "0xBB499C")]
	public static float RemapFloat(float input, float fromMin, float fromMax, float toMin, float toMax)
	{
		return default(float);
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xBB49B8", Offset = "0xBB49B8", VA = "0xBB49B8")]
	public static double RemapDouble(double input, double fromMin, double fromMax, double toMin, double toMax)
	{
		return default(double);
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xBB49D4", Offset = "0xBB49D4", VA = "0xBB49D4")]
	public static Vector3 RemapVector3(Vector3 input, float fromMin, float fromMax, float toMin, float toMax)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xBB4A40", Offset = "0xBB4A40", VA = "0xBB4A40")]
	public static int RemapInt(int input, int fromMin, int fromMax, int toMin, int toMax)
	{
		return default(int);
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xBB4A5C", Offset = "0xBB4A5C", VA = "0xBB4A5C")]
	public static Vector3 PositionAroundPoint(Vector3 point, Vector3 pivot, Quaternion angle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xBB4BF0", Offset = "0xBB4BF0", VA = "0xBB4BF0")]
	public MathH()
	{
	}
}
[Token(Token = "0x2000088")]
public class nextScene : MonoBehaviour
{
	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x10780D8", Offset = "0x10780D8", VA = "0x10780D8")]
	public void NextScene(string lvl)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x10780E4", Offset = "0x10780E4", VA = "0x10780E4")]
	public nextScene()
	{
	}
}
[Token(Token = "0x2000089")]
public class resetTime : MonoBehaviour
{
	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x10780EC", Offset = "0x10780EC", VA = "0x10780EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x10780F8", Offset = "0x10780F8", VA = "0x10780F8")]
	public resetTime()
	{
	}
}
[Token(Token = "0x200008A")]
public class MicrophoneInput : MonoBehaviour
{
	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xABB5FC", Offset = "0xABB5FC", VA = "0xABB5FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xABB600", Offset = "0xABB600", VA = "0xABB600")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xABB604", Offset = "0xABB604", VA = "0xABB604")]
	public MicrophoneInput()
	{
	}
}
[Token(Token = "0x200008B")]
public class MilkControl : MonoBehaviour
{
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject milkPrefab;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSquelch;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip audioMoo;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject particleEffectMilked;

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xABB60C", Offset = "0xABB60C", VA = "0xABB60C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xABB610", Offset = "0xABB610", VA = "0xABB610")]
	public void ExpressMilk()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xABB878", Offset = "0xABB878", VA = "0xABB878")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xABB87C", Offset = "0xABB87C", VA = "0xABB87C")]
	public MilkControl()
	{
	}
}
[Token(Token = "0x200008C")]
public class MulchControl : MonoBehaviour
{
	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int invokeRounds;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject soil;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform spawnSpot;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform spawnSpotParticle;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int totalToSpit;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource audioSource;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool activated;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject particle;

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xABBF3C", Offset = "0xABBF3C", VA = "0xABBF3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xABBF40", Offset = "0xABBF40", VA = "0xABBF40")]
	public void PlayMeSingle()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xABBFAC", Offset = "0xABBFAC", VA = "0xABBFAC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xABC1C4", Offset = "0xABC1C4", VA = "0xABC1C4")]
	private void ProduceSoil()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xABC318", Offset = "0xABC318", VA = "0xABC318")]
	private void Update()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xABC31C", Offset = "0xABC31C", VA = "0xABC31C")]
	public MulchControl()
	{
	}
}
[Token(Token = "0x200008D")]
public class MusicController : MonoBehaviour
{
	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource myAudio;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] myMusic;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeLeft;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool timerActive;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool musicOn;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text text;

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xABC48C", Offset = "0xABC48C", VA = "0xABC48C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xABC558", Offset = "0xABC558", VA = "0xABC558")]
	public void TurnOffMusic()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xABC5E8", Offset = "0xABC5E8", VA = "0xABC5E8")]
	public void TurnOnMusic()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xABC678", Offset = "0xABC678", VA = "0xABC678")]
	public void SwitchWithButton()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xABC688", Offset = "0xABC688", VA = "0xABC688")]
	private void Update()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xABC710", Offset = "0xABC710", VA = "0xABC710")]
	private void playRandommyMusic()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xABC864", Offset = "0xABC864", VA = "0xABC864")]
	public MusicController()
	{
	}
}
[Token(Token = "0x200008E")]
public class NavigationBaker : MonoBehaviour
{
	[Token(Token = "0x600030A")]
	[Address(RVA = "0xABCB10", Offset = "0xABCB10", VA = "0xABCB10")]
	private void Update()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xABCB14", Offset = "0xABCB14", VA = "0xABCB14")]
	public NavigationBaker()
	{
	}
}
[Token(Token = "0x200008F")]
public class NoParentOnStart : MonoBehaviour
{
	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] mushroomsToLiberate;

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xABCB1C", Offset = "0xABCB1C", VA = "0xABCB1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xABCB98", Offset = "0xABCB98", VA = "0xABCB98")]
	private void Update()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xABCB9C", Offset = "0xABCB9C", VA = "0xABCB9C")]
	public NoParentOnStart()
	{
	}
}
[Token(Token = "0x2000090")]
public class OverrideLayerAssign : MonoBehaviour
{
	[Token(Token = "0x600030F")]
	[Address(RVA = "0xABCBA4", Offset = "0xABCBA4", VA = "0xABCBA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xABCBFC", Offset = "0xABCBFC", VA = "0xABCBFC")]
	public void ChangeLayer()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xABCC24", Offset = "0xABCC24", VA = "0xABCC24")]
	public OverrideLayerAssign()
	{
	}
}
[Token(Token = "0x2000091")]
public class OverrideLayerAssignSelect : MonoBehaviour
{
	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int layer;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xABCC2C", Offset = "0xABCC2C", VA = "0xABCC2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xABCC84", Offset = "0xABCC84", VA = "0xABCC84")]
	public void ChangeLayer()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xABCCB8", Offset = "0xABCCB8", VA = "0xABCCB8")]
	public OverrideLayerAssignSelect()
	{
	}
}
[Token(Token = "0x2000092")]
public class PauseControl : MonoBehaviour
{
	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool inVRSession;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool pauseHasBeenSet;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool resetHasBeenSet;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject handLeft;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject handRight;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public XRController controllerTwo;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool buttonPressed;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string detectedHMD;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool usingOculus;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject oculusPlayer;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Camera cameraXR;

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x85A454", Offset = "0x85A454", VA = "0x85A454")]
	private void Start()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x85A644", Offset = "0x85A644", VA = "0x85A644")]
	private void Update()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x85A928", Offset = "0x85A928", VA = "0x85A928")]
	public void RestoreGame()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x85A8AC", Offset = "0x85A8AC", VA = "0x85A8AC")]
	public void PauseGame()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x85A9B0", Offset = "0x85A9B0", VA = "0x85A9B0")]
	public PauseControl()
	{
	}
}
[Token(Token = "0x2000093")]
public class PlantConnectionBridge : MonoBehaviour
{
	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x8E98E0", Offset = "0x8E98E0", VA = "0x8E98E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x8E98E4", Offset = "0x8E98E4", VA = "0x8E98E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x8E98E8", Offset = "0x8E98E8", VA = "0x8E98E8")]
	public PlantConnectionBridge()
	{
	}
}
[Token(Token = "0x2000094")]
public class PlotPositionIO : MonoBehaviour
{
	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] plots;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int index;

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x8E98F0", Offset = "0x8E98F0", VA = "0x8E98F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x8EA34C", Offset = "0x8EA34C", VA = "0x8EA34C")]
	public void ResetInitialForDataReset()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x8EA094", Offset = "0x8EA094", VA = "0x8EA094")]
	public void LoadIN()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x8EA39C", Offset = "0x8EA39C", VA = "0x8EA39C")]
	public void LoadInRotations()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x8E9970", Offset = "0x8E9970", VA = "0x8E9970")]
	public void SaveOUT()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x8E9D20", Offset = "0x8E9D20", VA = "0x8E9D20")]
	public void SaveOutAllRotations()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x8EA604", Offset = "0x8EA604", VA = "0x8EA604")]
	public void SaveOutSpecific(int arrayIndex, float posX, float posY, float posZ)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x8EAA9C", Offset = "0x8EAA9C", VA = "0x8EAA9C")]
	public void SaveOutSpecificRotation(int arrayIndex, float rotX, float rotY, float rotZ)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x8EAF34", Offset = "0x8EAF34", VA = "0x8EAF34")]
	public void AddItem(GameObject objectToSavePostionOf)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x8EB118", Offset = "0x8EB118", VA = "0x8EB118")]
	private void Update()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x8EB11C", Offset = "0x8EB11C", VA = "0x8EB11C")]
	public PlotPositionIO()
	{
	}
}
[Token(Token = "0x2000095")]
public class PlotShapeControl : MonoBehaviour
{
	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer meshRendererHex;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshCollider meshColliderHex;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject plotBaseSquare;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject plotBaseCircle;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Mesh meshHex;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Mesh meshSquare;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Mesh meshCircle;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform[] positionsSenseSquarePlus2;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] positionsMoveToSquarePlus2;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PositionAssist positionAssist;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SnapPositionAssist snapPositionAssist;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int index;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool manualOverrideToSquareAtStart;

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x8EB124", Offset = "0x8EB124", VA = "0x8EB124")]
	private void Start()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x8EB134", Offset = "0x8EB134", VA = "0x8EB134")]
	public void SwitchIntoSquare()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x8EB384", Offset = "0x8EB384", VA = "0x8EB384")]
	public void SwitchIntoCircle()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x8EB488", Offset = "0x8EB488", VA = "0x8EB488")]
	public void SwitchIntoHex()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x8EB4F4", Offset = "0x8EB4F4", VA = "0x8EB4F4")]
	public int CheckMyShape()
	{
		return default(int);
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x8EB65C", Offset = "0x8EB65C", VA = "0x8EB65C")]
	public PlotShapeControl()
	{
	}
}
[Token(Token = "0x2000096")]
public class PlotShapeMaster : MonoBehaviour
{
	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> plotsToMonitor;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string plotTypeSelect;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int globalIndex;

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x8EB664", Offset = "0x8EB664", VA = "0x8EB664")]
	private void Start()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x8EB668", Offset = "0x8EB668", VA = "0x8EB668")]
	public void SetupPlotShape(GameObject[] plotsInLevel)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x8EB954", Offset = "0x8EB954", VA = "0x8EB954")]
	public void SetPlotShapeWhenCreated(int plotType, int indexRunThrough)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x8EB750", Offset = "0x8EB750", VA = "0x8EB750")]
	public void RunThroughPlotsSetShape()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x8EBA60", Offset = "0x8EBA60", VA = "0x8EBA60")]
	public PlotShapeMaster()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x8EBAD0", Offset = "0x8EBAD0", VA = "0x8EBAD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B6BC", Offset = "0x57B6BC")]
	internal static void <RunThroughPlotsSetShape>g__Update|6_0()
	{
	}
}
[Token(Token = "0x2000097")]
public class PlotShapeOverride : MonoBehaviour
{
	[Token(Token = "0x6000334")]
	[Address(RVA = "0x8EBAD4", Offset = "0x8EBAD4", VA = "0x8EBAD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x8EBAD8", Offset = "0x8EBAD8", VA = "0x8EBAD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x8EBADC", Offset = "0x8EBADC", VA = "0x8EBADC")]
	public PlotShapeOverride()
	{
	}
}
[Token(Token = "0x2000098")]
public class Flythrough : MonoBehaviour
{
	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float lookSpeed;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float moveSpeed;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sun;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera mycamera;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion baseSunTransform;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float sunX;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float sunY;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float sunZ;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float defaultFov;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float baseSpeed;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float runSpeed;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float dashSpeed;

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x92F0B0", Offset = "0x92F0B0", VA = "0x92F0B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x92F120", Offset = "0x92F120", VA = "0x92F120")]
	private void Update()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x92F8D8", Offset = "0x92F8D8", VA = "0x92F8D8")]
	public Flythrough()
	{
	}
}
[Token(Token = "0x2000099")]
[ExecuteInEditMode]
public class NatureManager : MonoBehaviour
{
	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x570724", Offset = "0x570724")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570724", Offset = "0x570724")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x570724", Offset = "0x570724")]
	public float xSpeed;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57079C", Offset = "0x57079C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57079C", Offset = "0x57079C")]
	public float ySpeed;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5707F0", Offset = "0x5707F0")]
	public Color cloudColor;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x570828", Offset = "0x570828")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570828", Offset = "0x570828")]
	public bool enableDithering;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570888", Offset = "0x570888")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x570888", Offset = "0x570888")]
	public float fadingDistance;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5708E0", Offset = "0x5708E0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5708E0", Offset = "0x5708E0")]
	public float ditherBottomLevel;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570934", Offset = "0x570934")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x570934", Offset = "0x570934")]
	public float ditherFade;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570988", Offset = "0x570988")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x570988", Offset = "0x570988")]
	public float terrainGrassDitherMin;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5709DC", Offset = "0x5709DC")]
	public float terrainGrassDitherMax;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5709F4", Offset = "0x5709F4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5709F4", Offset = "0x5709F4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5709F4", Offset = "0x5709F4")]
	public float smallWindIntensity;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570A70", Offset = "0x570A70")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x570A70", Offset = "0x570A70")]
	public float smallWindMultiplier;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570AC4", Offset = "0x570AC4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x570AC4", Offset = "0x570AC4")]
	public float largeWindIntensity;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570B1C", Offset = "0x570B1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x570B1C", Offset = "0x570B1C")]
	public float largeWindMultiplier;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x570B70", Offset = "0x570B70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570B70", Offset = "0x570B70")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x570B70", Offset = "0x570B70")]
	public float smoothness;

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xABC8C4", Offset = "0xABC8C4", VA = "0xABC8C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xABC8C8", Offset = "0xABC8C8", VA = "0xABC8C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xABCAA4", Offset = "0xABCAA4", VA = "0xABCAA4")]
	public NatureManager()
	{
	}
}
[Token(Token = "0x200009A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56D878", Offset = "0x56D878")]
public class SmoothMouseLook : MonoBehaviour
{
	[Token(Token = "0x20002E7")]
	public enum RotationAxes
	{
		[Token(Token = "0x4001843")]
		MouseXAndY,
		[Token(Token = "0x4001844")]
		MouseX,
		[Token(Token = "0x4001845")]
		MouseY
	}

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationX;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rotationY;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<float> rotArrayX;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float rotAverageX;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<float> rotArrayY;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float rotAverageY;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float frameCounter;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion originalRotation;

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x79C1B4", Offset = "0x79C1B4", VA = "0x79C1B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x79C8B8", Offset = "0x79C8B8", VA = "0x79C8B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x79C7E8", Offset = "0x79C7E8", VA = "0x79C7E8")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x79C97C", Offset = "0x79C97C", VA = "0x79C97C")]
	public SmoothMouseLook()
	{
	}
}
[Token(Token = "0x200009B")]
[ExecuteInEditMode]
public class WaterReflection : MonoBehaviour
{
	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_TextureSize;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Hashtable m_ReflectionCameras;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture m_ReflectionTexture;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x10746D4", Offset = "0x10746D4", VA = "0x10746D4")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1075F8C", Offset = "0x1075F8C", VA = "0x1075F8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x10755EC", Offset = "0x10755EC", VA = "0x10755EC")]
	private void UpdateCameraModes(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x107509C", Offset = "0x107509C", VA = "0x107509C")]
	private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x10762AC", Offset = "0x10762AC", VA = "0x10762AC")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x1075B6C", Offset = "0x1075B6C", VA = "0x1075B6C")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x1075D50", Offset = "0x1075D50", VA = "0x1075D50")]
	private static void CalculateObliqueMatrix(ref Matrix4x4 projection, Vector4 clipPlane)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x10758C8", Offset = "0x10758C8", VA = "0x10758C8")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x10762CC", Offset = "0x10762CC", VA = "0x10762CC")]
	public WaterReflection()
	{
	}
}
[Token(Token = "0x200009C")]
public class PopUpLevelControl : MonoBehaviour
{
	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text textForLevelUp;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem particleSystemForCelebration;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeRemaining;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LookAtConstraint lookAt;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource audioSourceForCoinSound;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text textForLevelUpBottom;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text textForReward;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image AxeImage;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image PickaxeImage;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image ShovelImage;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image FishingRodImage;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image bucketImage;

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x8F4660", Offset = "0x8F4660", VA = "0x8F4660")]
	public void Start()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x8F4664", Offset = "0x8F4664", VA = "0x8F4664")]
	public void PopupAchievement(string textForItemType, int intForLevelAmount, int rewardAmount, ToolLevelController.ToolType toolType)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x8F49E8", Offset = "0x8F49E8", VA = "0x8F49E8")]
	public void MakeAudioForCoin()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x8F4A24", Offset = "0x8F4A24", VA = "0x8F4A24")]
	public void Update()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x8F4B24", Offset = "0x8F4B24", VA = "0x8F4B24")]
	public PopUpLevelControl()
	{
	}
}
[Token(Token = "0x200009D")]
public class PopUpRewardControl : MonoBehaviour
{
	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text textForLevelUp;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem particleSystemForCelebration;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeRemaining;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LookAtConstraint lookAt;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text textForLevelUpBottom;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text textForReward;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource audioSourceForCoin;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int rewardAmountReputation;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int rewardAmountCoin;

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x8F4B34", Offset = "0x8F4B34", VA = "0x8F4B34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x8F4BC0", Offset = "0x8F4BC0", VA = "0x8F4BC0")]
	public void ShowReward(int intRespectAmount, int rewardAmount)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x8F4E78", Offset = "0x8F4E78", VA = "0x8F4E78")]
	public void MakeAudioForCoin()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x8F4ECC", Offset = "0x8F4ECC", VA = "0x8F4ECC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x8F4ED0", Offset = "0x8F4ED0", VA = "0x8F4ED0")]
	public PopUpRewardControl()
	{
	}
}
[Token(Token = "0x200009E")]
public class PositionAssist : MonoBehaviour
{
	[Token(Token = "0x20002E8")]
	public enum State
	{
		[Token(Token = "0x4001847")]
		None,
		[Token(Token = "0x4001848")]
		Vine,
		[Token(Token = "0x4001849")]
		Root,
		[Token(Token = "0x400184A")]
		GroundCover,
		[Token(Token = "0x400184B")]
		Vegetable,
		[Token(Token = "0x400184C")]
		Bush,
		[Token(Token = "0x400184D")]
		SubCanopy,
		[Token(Token = "0x400184E")]
		Tree
	}

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] positionAssistPoints;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] positionsToMoveTo;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] plotsSurrounding;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State[] statesSurroundingMe;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject plantConnectionObject;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] plantConnectionObjects;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool empty;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public State state;

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x8F4EE8", Offset = "0x8F4EE8", VA = "0x8F4EE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x8F4F40", Offset = "0x8F4F40", VA = "0x8F4F40")]
	public void PlotSwitchIntoPosition(Vector3 positionToMoveTo)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x8F4F98", Offset = "0x8F4F98", VA = "0x8F4F98")]
	public void PlotSwitchIntoRotation(Quaternion rotationToMoveTo)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x8F4FF8", Offset = "0x8F4FF8", VA = "0x8F4FF8")]
	public void CheckMySurroundingPlotsSeparate()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x8F5F8C", Offset = "0x8F5F8C", VA = "0x8F5F8C")]
	public void PlotsNear()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x8F5884", Offset = "0x8F5884", VA = "0x8F5884")]
	public void BoostGrowth()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x8F6B24", Offset = "0x8F6B24", VA = "0x8F6B24")]
	public void ClearConnections()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x8F6C18", Offset = "0x8F6C18", VA = "0x8F6C18")]
	public PositionAssist()
	{
	}
}
[Token(Token = "0x200009F")]
public class PostGrabGravity : MonoBehaviour
{
	[Token(Token = "0x20002E9")]
	public enum State
	{
		[Token(Token = "0x4001850")]
		Blueberries,
		[Token(Token = "0x4001851")]
		Gooseberries,
		[Token(Token = "0x4001852")]
		Blackcurrent
	}

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rigi;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BushGrowthController bushGrowthController;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int index;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSource;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool offBush;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public State berryType;

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x76A3BC", Offset = "0x76A3BC", VA = "0x76A3BC")]
	public void GrabFromBush()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x76A538", Offset = "0x76A538", VA = "0x76A538")]
	public void DropMeNow()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x76A6B4", Offset = "0x76A6B4", VA = "0x76A6B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x76A6B8", Offset = "0x76A6B8", VA = "0x76A6B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x76A6BC", Offset = "0x76A6BC", VA = "0x76A6BC")]
	public PostGrabGravity()
	{
	}
}
[Token(Token = "0x20000A0")]
public class PostGrabGravityFruit : MonoBehaviour
{
	[Token(Token = "0x20002EA")]
	public enum State
	{
		[Token(Token = "0x4001854")]
		Lemon,
		[Token(Token = "0x4001855")]
		Orange,
		[Token(Token = "0x4001856")]
		Apple
	}

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rigi;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SubCanopyGrowthController subCanopyGrowthController;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int index;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSource;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool offBush;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public State fruitType;

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x76A6C4", Offset = "0x76A6C4", VA = "0x76A6C4")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x76A780", Offset = "0x76A780", VA = "0x76A780")]
	public void DropMeNow()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x76A8FC", Offset = "0x76A8FC", VA = "0x76A8FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x76A900", Offset = "0x76A900", VA = "0x76A900")]
	private void Update()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x76A904", Offset = "0x76A904", VA = "0x76A904")]
	public PostGrabGravityFruit()
	{
	}
}
[Token(Token = "0x20000A1")]
public class PostGrabGravityGeneric : MonoBehaviour
{
	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rigi;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject particleWhenPicked;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isAFish;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x76A90C", Offset = "0x76A90C", VA = "0x76A90C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x76A910", Offset = "0x76A910", VA = "0x76A910")]
	public void DropMyJoints()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x76AA08", Offset = "0x76AA08", VA = "0x76AA08")]
	public void DestoryParentLiberateChild()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x76AC48", Offset = "0x76AC48", VA = "0x76AC48")]
	public void RestoreKinematic()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x76ACA0", Offset = "0x76ACA0", VA = "0x76ACA0")]
	public void RemoveKinematic()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x76ACF8", Offset = "0x76ACF8", VA = "0x76ACF8")]
	public void DeParent()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x76AD2C", Offset = "0x76AD2C", VA = "0x76AD2C")]
	public void DropMeNow()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x76B07C", Offset = "0x76B07C", VA = "0x76B07C")]
	public PostGrabGravityGeneric()
	{
	}
}
[Token(Token = "0x20000A2")]
public class PostGrabGravityTree : MonoBehaviour
{
	[Token(Token = "0x20002EB")]
	public enum State
	{
		[Token(Token = "0x4001858")]
		Blueberries,
		[Token(Token = "0x4001859")]
		Gooseberries,
		[Token(Token = "0x400185A")]
		Blackcurrent
	}

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rigi;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TreeGrowthController treeGrowthController;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int index;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSource;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool offBush;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public State berryType;

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x76B084", Offset = "0x76B084", VA = "0x76B084")]
	public void DropMeNow()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x76B200", Offset = "0x76B200", VA = "0x76B200")]
	private void Start()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x76B204", Offset = "0x76B204", VA = "0x76B204")]
	public PostGrabGravityTree()
	{
	}
}
[Token(Token = "0x20000A3")]
public class PotionTableControl : MonoBehaviour
{
	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConstructionTableHolder holder;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject emptyBottle;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject spawnedBottle;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject signForCauldronManure;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CouldronControl couldronControl;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject signForCauldronMilk;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CauldronUserInterface cauldronUserInterface;

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x76B20C", Offset = "0x76B20C", VA = "0x76B20C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x76B210", Offset = "0x76B210", VA = "0x76B210")]
	public void SetupForManureTea()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x76B468", Offset = "0x76B468", VA = "0x76B468")]
	public void SetupForFishTea()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x76B6C4", Offset = "0x76B6C4", VA = "0x76B6C4")]
	public void SetupForHoney()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x76B920", Offset = "0x76B920", VA = "0x76B920")]
	public void SetupForMilk()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x76BB78", Offset = "0x76BB78", VA = "0x76BB78")]
	public PotionTableControl()
	{
	}
}
[Token(Token = "0x20000A4")]
public class PouchControl : MonoBehaviour
{
	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] inventorySpeheres;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool open;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject cameraToMatchRotation;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSource;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip audioClipOpen;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip audioClipClosed;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject coinControl;

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x76BB80", Offset = "0x76BB80", VA = "0x76BB80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x76BC0C", Offset = "0x76BC0C", VA = "0x76BC0C")]
	public void OpenPouch()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x76BEF0", Offset = "0x76BEF0", VA = "0x76BEF0")]
	public void ClosePouch()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x76BEF4", Offset = "0x76BEF4", VA = "0x76BEF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x76C014", Offset = "0x76C014", VA = "0x76C014")]
	public PouchControl()
	{
	}
}
[Token(Token = "0x20000A5")]
public class PouchControlArm : MonoBehaviour
{
	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject OptionsUI;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isOpen;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PouchControl pouchControl;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool coolDownActiveForController;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float coolDownAmount;

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x76C01C", Offset = "0x76C01C", VA = "0x76C01C")]
	public void CloseUI()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x76C054", Offset = "0x76C054", VA = "0x76C054")]
	public void OpenUIXR()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x76C0C0", Offset = "0x76C0C0", VA = "0x76C0C0")]
	public void OpenUI()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x76C12C", Offset = "0x76C12C", VA = "0x76C12C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x76C188", Offset = "0x76C188", VA = "0x76C188")]
	public void DisableForPC()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x76C18C", Offset = "0x76C18C", VA = "0x76C18C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x76C26C", Offset = "0x76C26C", VA = "0x76C26C")]
	public PouchControlArm()
	{
	}
}
[Token(Token = "0x20000A6")]
public class PouredParticleDetectPlot : MonoBehaviour
{
	[Token(Token = "0x6000384")]
	[Address(RVA = "0x76C784", Offset = "0x76C784", VA = "0x76C784")]
	private void Start()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x76C788", Offset = "0x76C788", VA = "0x76C788")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x76C94C", Offset = "0x76C94C", VA = "0x76C94C")]
	public PouredParticleDetectPlot()
	{
	}
}
[Token(Token = "0x20000A7")]
public class VineProduceGrowthController : MonoBehaviour
{
	[Token(Token = "0x20002EC")]
	public enum State
	{
		[Token(Token = "0x400185C")]
		Pumpkin,
		[Token(Token = "0x400185D")]
		Pepper,
		[Token(Token = "0x400185E")]
		Cucumber
	}

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float growthFactor;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxSize;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool setupGrabbable;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Smash smash;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool fullyGrownStartScene;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public State state;

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x10740B4", Offset = "0x10740B4", VA = "0x10740B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x1074294", Offset = "0x1074294", VA = "0x1074294")]
	private void Update()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x107443C", Offset = "0x107443C", VA = "0x107443C")]
	public VineProduceGrowthController()
	{
	}
}
[Token(Token = "0x20000A8")]
public class ProtoPlotController : MonoBehaviour
{
	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int soilHits;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int mushHits;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int fishHits;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject canvasTree;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject canvasRoot;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject canvasBush;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RootPlotIO rootPlotIO;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BushIOV2 bushPlotIO;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TreePlotIO treePlotIO;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlotPositionIO plotPositionIO;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject rootPlotPrefab;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject bushPlotPrefab;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject treePlotPrefab;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform leftPos;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform middlePos;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform rightPos;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject canvasOneMush;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject canvasOneSoil;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject canvasOneSoilTwo;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject canvasTwoSoil;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject canvasTwoSoilTwo;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject canvasTwoSoilThree;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject canvasThreeFish;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject canvasThreeSoil;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject canvasThreeSoilTwo;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource audioSource;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioClip altClip;

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x76C954", Offset = "0x76C954", VA = "0x76C954")]
	private void Start()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x76C9B8", Offset = "0x76C9B8", VA = "0x76C9B8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x76D8CC", Offset = "0x76D8CC", VA = "0x76D8CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x76D8D0", Offset = "0x76D8D0", VA = "0x76D8D0")]
	public ProtoPlotController()
	{
	}
}
[Token(Token = "0x20000A9")]
public class ProtoPlotControllerExpanded : MonoBehaviour
{
	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int soilHits;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int mushHits;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int fishHits;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int mushAltHits;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int fishAltHits;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject canvasTree;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject canvasRoot;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject canvasBush;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject canvassubCanopy;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject canvasVine;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject canvasGroundCover;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject canvasVegetable;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RootPlotIO rootPlotIO;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BushIOV2 bushPlotIO;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TreePlotIO treePlotIO;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SubCanopyPlotIO subCanopyPlotIO;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public VinePlotIO vinePlotIO;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GroundCoverPlotIO groundCoverPlotIO;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public VegetablePlotIO VegetablePlotIO;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject rootPlotPrefab;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject bushPlotPrefab;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject treePlotPrefab;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject subCanopyPlotPrefab;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject vinePlotPrefab;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject groundCoverPlotPrefab;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject VegetablePlotPrefab;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform leftPos;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform middlePos;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform rightPos;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject canvasTreeMush;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject canvasTreeSoil;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject canvasTreeSoilTwo;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject canvasSubCanopySoil;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject canvasSubCanopyMushAlt;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject canvasSubCanopyFish;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject canvasVegeSoil;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject canvasVegeFishAlt;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject canvasVegeMush;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject canvasRootSoil;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject canvasRootSoilTwo;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject canvasRootSoilThree;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject canvasVineSoil;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject canvasVineMush;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject canvasVineMushAlt;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject canvasGroundCoverSoil;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject canvasGroundCoverMush;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject canvasGroundCoverFish;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject canvasBushSoil;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject canvasBushSoilTwo;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject canvasBushFish;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public int currentLevel;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public AudioSource audioSource;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public AudioClip altClip;

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x76D8D8", Offset = "0x76D8D8", VA = "0x76D8D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x76D980", Offset = "0x76D980", VA = "0x76D980")]
	public void ReduceOptionsDependingOnLevel()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x76DB7C", Offset = "0x76DB7C", VA = "0x76DB7C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x76F9D8", Offset = "0x76F9D8", VA = "0x76F9D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x76F9DC", Offset = "0x76F9DC", VA = "0x76F9DC")]
	public ProtoPlotControllerExpanded()
	{
	}
}
[Token(Token = "0x20000AA")]
public class ProtoPlotSimplified : MonoBehaviour
{
	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int soilHits;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool preProto;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI soilIndicator;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject soilIndicatorImage;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string text;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource audioSource;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject secondStageProtoPlot;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject spawnedPlot;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GenericObjectIO genericObjectIOForFirstStageIO;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GenericObjectIO genericObjectIOForSecondStageIO;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject playerCamera;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LookAtConstraint lookAtConstraint;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool hasBeenRunFully;

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x76F9E4", Offset = "0x76F9E4", VA = "0x76F9E4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x76FC44", Offset = "0x76FC44", VA = "0x76FC44")]
	public void MakeMeAMan()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x770098", Offset = "0x770098", VA = "0x770098")]
	private void Start()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x7700B8", Offset = "0x7700B8", VA = "0x7700B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x7700BC", Offset = "0x7700BC", VA = "0x7700BC")]
	public ProtoPlotSimplified()
	{
	}
}
[Token(Token = "0x20000AB")]
public class PurchaseGoodsController : MonoBehaviour
{
	[Token(Token = "0x20002ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F6F0", Offset = "0x56F6F0")]
	private sealed class <StopAnimation>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeToDelay;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PurchaseGoodsController <>4__this;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string animatorIdentifier;

		[Token(Token = "0x17000616")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BAD")]
			[Address(RVA = "0x7708C4", Offset = "0x7708C4", VA = "0x7708C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000617")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BAF")]
			[Address(RVA = "0x77092C", Offset = "0x77092C", VA = "0x77092C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x770650", Offset = "0x770650", VA = "0x770650")]
		[DebuggerHidden]
		public <StopAnimation>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x7707FC", Offset = "0x7707FC", VA = "0x7707FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x770800", Offset = "0x770800", VA = "0x770800", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x7708CC", Offset = "0x7708CC", VA = "0x7708CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform positionSpawnGoods;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefabToSpawn;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GenericObjectIO genericObjectIO;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject selfDestructingAudio;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int costToPurchase;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ChestStorageController chestStorageController;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ConstructionTableHolder holder;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool spawningWholeBuilding;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject objectInLevelToActivateForBuildings;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string stringSaveObjectPurchaseForBuildings;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Animator animator;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationClip clipThanks;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool isAnimalDealer;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 alteredRotationOnSpawn;

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x7700CC", Offset = "0x7700CC", VA = "0x7700CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x770148", Offset = "0x770148", VA = "0x770148")]
	public void AttemptPurchase()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x770530", Offset = "0x770530", VA = "0x770530")]
	public void PlayThanks()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x7705C4", Offset = "0x7705C4", VA = "0x7705C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57B6CC", Offset = "0x57B6CC")]
	private IEnumerator StopAnimation(float timeToDelay, string animatorIdentifier)
	{
		return null;
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x77067C", Offset = "0x77067C", VA = "0x77067C")]
	public void PurchaseMe()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x7707F0", Offset = "0x7707F0", VA = "0x7707F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x7707F4", Offset = "0x7707F4", VA = "0x7707F4")]
	public PurchaseGoodsController()
	{
	}
}
[Token(Token = "0x20000AC")]
public class PurchaseSeedsController : MonoBehaviour
{
	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F700", Offset = "0x56F700")]
	private sealed class <StopAnimation>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeToDelay;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PurchaseSeedsController <>4__this;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string animatorIdentifier;

		[Token(Token = "0x17000618")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BB3")]
			[Address(RVA = "0x770E98", Offset = "0x770E98", VA = "0x770E98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000619")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0x770F00", Offset = "0x770F00", VA = "0x770F00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x770D98", Offset = "0x770D98", VA = "0x770D98")]
		[DebuggerHidden]
		public <StopAnimation>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x770DD0", Offset = "0x770DD0", VA = "0x770DD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x770DD4", Offset = "0x770DD4", VA = "0x770DD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x770EA0", Offset = "0x770EA0", VA = "0x770EA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform positionSpawnGoods;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefabToSpawn;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject selfDestructingAudio;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int costToPurchase;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ChestStorageController chestStorageController;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator animator;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationClip clipThanks;

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x770934", Offset = "0x770934", VA = "0x770934")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x770938", Offset = "0x770938", VA = "0x770938")]
	public void AttemptPurchase()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x770C78", Offset = "0x770C78", VA = "0x770C78")]
	public void PlayThanks()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x770D0C", Offset = "0x770D0C", VA = "0x770D0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57B730", Offset = "0x57B730")]
	private IEnumerator StopAnimation(float timeToDelay, string animatorIdentifier)
	{
		return null;
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x770DC4", Offset = "0x770DC4", VA = "0x770DC4")]
	public void PurchaseMe()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x770DC8", Offset = "0x770DC8", VA = "0x770DC8")]
	public PurchaseSeedsController()
	{
	}
}
[Serializable]
[Token(Token = "0x20000AD")]
public class QuestEvent : UnityEvent<string>
{
	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x788FA0", Offset = "0x788FA0", VA = "0x788FA0")]
	public QuestEvent()
	{
	}
}
[Token(Token = "0x20000AE")]
public class QuestCheckTownfolk : MonoBehaviour
{
	[Token(Token = "0x20002EF")]
	public enum ObjectStored
	{
		[Token(Token = "0x400186A")]
		NothingStart,
		[Token(Token = "0x400186B")]
		SeedCarrot,
		[Token(Token = "0x400186C")]
		SeedTurnip,
		[Token(Token = "0x400186D")]
		SeedSpringOnion,
		[Token(Token = "0x400186E")]
		SeedGooseBerry,
		[Token(Token = "0x400186F")]
		SeedBlueberry,
		[Token(Token = "0x4001870")]
		SeedBlackBerry,
		[Token(Token = "0x4001871")]
		SeedSpruce,
		[Token(Token = "0x4001872")]
		SeedGumtree,
		[Token(Token = "0x4001873")]
		SeedPine,
		[Token(Token = "0x4001874")]
		SeedHosta,
		[Token(Token = "0x4001875")]
		SeedClover,
		[Token(Token = "0x4001876")]
		SeedWheat,
		[Token(Token = "0x4001877")]
		SeedLemon,
		[Token(Token = "0x4001878")]
		SeedOrange,
		[Token(Token = "0x4001879")]
		SeedApple,
		[Token(Token = "0x400187A")]
		SeedTomato,
		[Token(Token = "0x400187B")]
		SeedChili,
		[Token(Token = "0x400187C")]
		SeedPepper,
		[Token(Token = "0x400187D")]
		SeedPumpkin,
		[Token(Token = "0x400187E")]
		SeedWatermelon,
		[Token(Token = "0x400187F")]
		SeedCucumber,
		[Token(Token = "0x4001880")]
		Soil,
		[Token(Token = "0x4001881")]
		Carrot,
		[Token(Token = "0x4001882")]
		Turnip,
		[Token(Token = "0x4001883")]
		SpringOnion,
		[Token(Token = "0x4001884")]
		GooseBerry,
		[Token(Token = "0x4001885")]
		Blueberry,
		[Token(Token = "0x4001886")]
		BlackBerry,
		[Token(Token = "0x4001887")]
		Spruce,
		[Token(Token = "0x4001888")]
		Gumtree,
		[Token(Token = "0x4001889")]
		Pine,
		[Token(Token = "0x400188A")]
		Cauliflower,
		[Token(Token = "0x400188B")]
		Cabbage,
		[Token(Token = "0x400188C")]
		Lettuce,
		[Token(Token = "0x400188D")]
		Lemon,
		[Token(Token = "0x400188E")]
		Orange,
		[Token(Token = "0x400188F")]
		Apple,
		[Token(Token = "0x4001890")]
		Tomato,
		[Token(Token = "0x4001891")]
		Chili,
		[Token(Token = "0x4001892")]
		Pepper,
		[Token(Token = "0x4001893")]
		Pumpkin,
		[Token(Token = "0x4001894")]
		Watermelon,
		[Token(Token = "0x4001895")]
		Cucumber,
		[Token(Token = "0x4001896")]
		MushroomRed,
		[Token(Token = "0x4001897")]
		MushroomWhite,
		[Token(Token = "0x4001898")]
		Water,
		[Token(Token = "0x4001899")]
		Fish,
		[Token(Token = "0x400189A")]
		FishAlt,
		[Token(Token = "0x400189B")]
		Bait,
		[Token(Token = "0x400189C")]
		Manure,
		[Token(Token = "0x400189D")]
		Milk,
		[Token(Token = "0x400189E")]
		Egg,
		[Token(Token = "0x400189F")]
		CrystalPink,
		[Token(Token = "0x40018A0")]
		CrystalStone,
		[Token(Token = "0x40018A1")]
		Honey,
		[Token(Token = "0x40018A2")]
		BottleManure,
		[Token(Token = "0x40018A3")]
		BottleFish,
		[Token(Token = "0x40018A4")]
		BottleHoney,
		[Token(Token = "0x40018A5")]
		BottleMilk,
		[Token(Token = "0x40018A6")]
		Lute,
		[Token(Token = "0x40018A7")]
		Nothing
	}

	[Token(Token = "0x20002F0")]
	public enum ObjectNeeded
	{
		[Token(Token = "0x40018A9")]
		NothingStart,
		[Token(Token = "0x40018AA")]
		SeedCarrot,
		[Token(Token = "0x40018AB")]
		SeedTurnip,
		[Token(Token = "0x40018AC")]
		SeedSpringOnion,
		[Token(Token = "0x40018AD")]
		SeedGooseBerry,
		[Token(Token = "0x40018AE")]
		SeedBlueberry,
		[Token(Token = "0x40018AF")]
		SeedBlackBerry,
		[Token(Token = "0x40018B0")]
		SeedSpruce,
		[Token(Token = "0x40018B1")]
		SeedGumtree,
		[Token(Token = "0x40018B2")]
		SeedPine,
		[Token(Token = "0x40018B3")]
		SeedHosta,
		[Token(Token = "0x40018B4")]
		SeedClover,
		[Token(Token = "0x40018B5")]
		SeedWheat,
		[Token(Token = "0x40018B6")]
		SeedLemon,
		[Token(Token = "0x40018B7")]
		SeedOrange,
		[Token(Token = "0x40018B8")]
		SeedApple,
		[Token(Token = "0x40018B9")]
		SeedTomato,
		[Token(Token = "0x40018BA")]
		SeedChili,
		[Token(Token = "0x40018BB")]
		SeedPepper,
		[Token(Token = "0x40018BC")]
		SeedPumpkin,
		[Token(Token = "0x40018BD")]
		SeedWatermelon,
		[Token(Token = "0x40018BE")]
		SeedCucumber,
		[Token(Token = "0x40018BF")]
		Soil,
		[Token(Token = "0x40018C0")]
		Carrot,
		[Token(Token = "0x40018C1")]
		Turnip,
		[Token(Token = "0x40018C2")]
		SpringOnion,
		[Token(Token = "0x40018C3")]
		GooseBerry,
		[Token(Token = "0x40018C4")]
		Blueberry,
		[Token(Token = "0x40018C5")]
		BlackBerry,
		[Token(Token = "0x40018C6")]
		Spruce,
		[Token(Token = "0x40018C7")]
		Gumtree,
		[Token(Token = "0x40018C8")]
		Pine,
		[Token(Token = "0x40018C9")]
		Cauliflower,
		[Token(Token = "0x40018CA")]
		Cabbage,
		[Token(Token = "0x40018CB")]
		Lettuce,
		[Token(Token = "0x40018CC")]
		Lemon,
		[Token(Token = "0x40018CD")]
		Orange,
		[Token(Token = "0x40018CE")]
		Apple,
		[Token(Token = "0x40018CF")]
		Tomato,
		[Token(Token = "0x40018D0")]
		Chili,
		[Token(Token = "0x40018D1")]
		Pepper,
		[Token(Token = "0x40018D2")]
		Pumpkin,
		[Token(Token = "0x40018D3")]
		Watermelon,
		[Token(Token = "0x40018D4")]
		Cucumber,
		[Token(Token = "0x40018D5")]
		MushroomRed,
		[Token(Token = "0x40018D6")]
		MushroomWhite,
		[Token(Token = "0x40018D7")]
		Water,
		[Token(Token = "0x40018D8")]
		Fish,
		[Token(Token = "0x40018D9")]
		FishAlt,
		[Token(Token = "0x40018DA")]
		Bait,
		[Token(Token = "0x40018DB")]
		Manure,
		[Token(Token = "0x40018DC")]
		Milk,
		[Token(Token = "0x40018DD")]
		Egg,
		[Token(Token = "0x40018DE")]
		CrystalPink,
		[Token(Token = "0x40018DF")]
		CrystalStone,
		[Token(Token = "0x40018E0")]
		Honey,
		[Token(Token = "0x40018E1")]
		BottleManure,
		[Token(Token = "0x40018E2")]
		BottleFish,
		[Token(Token = "0x40018E3")]
		BottleHoney,
		[Token(Token = "0x40018E4")]
		BottleMilk,
		[Token(Token = "0x40018E5")]
		Lute,
		[Token(Token = "0x40018E6")]
		Barrels,
		[Token(Token = "0x40018E7")]
		Nothing
	}

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool spawnedGrabbedFromInternal;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Hand leftHand;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Hand rightHand;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float targetTime;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public QuestEvent questCompleteEvent;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string saveQuestString;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int amountNeeded;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public ObjectStored objectStored;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ObjectNeeded objectNeeded;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject objectInInventorySphere;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int objectStoredAmount;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int SphereIndexNumber;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool active;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text text;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject imageSeeds;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject internalGrabber;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject seedCarrot;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject seedTurnip;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject seedSpringOnion;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject SeedGooseBerry;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject SeedBlueberry;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject SeedBlackBerry;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject SeedSpruce;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject SeedGumtree;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject SeedPine;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject SeedHosta;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject SeedClover;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject SeedWheat;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject SeedLemon;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject SeedOrange;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject SeedApple;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject SeedTomato;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject SeedChili;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject SeedPepper;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject SeedPumpkin;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject SeedWatermelon;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject SeedCucumber;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject Carrot;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject Turnip;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject SpringOnion;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject GooseBerry;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject Blueberry;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject BlackBerry;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject Spruce;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject Gumtree;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject Pine;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject Hosta;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject Clover;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject Wheat;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject Lemon;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject Orange;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject Apple;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject Tomato;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject Chili;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject Pepper;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject Pumpkin;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject Watermelon;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject Cucumber;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject Soil;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject Water;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject MushroomRed;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject MushroomWhite;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject Fish;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject FishAlt;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject Bait;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject Milk;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject Manure;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject Egg;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public GameObject CrystalPink;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject CrystalStone;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public GameObject Honey;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public GameObject BottleManure;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public GameObject BottleFish;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject BottleHoney;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObject BottleMilk;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObject Lute;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject internalGrabberBackup;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public GameObject miniRepresentation;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public AudioSource audioSource;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public AudioClip audioPickup;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public AudioClip audioPutDown;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public bool demo;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public RespectUIControl respectUIControl;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public GameObject questCompletePopUp;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public int rewardReputationAmount;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	public int rewardCoinsAmount;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public bool myQuestIsComplete;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B1")]
	public bool queenQuest;

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x770F08", Offset = "0x770F08", VA = "0x770F08")]
	public void RunInventoryPrePack()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x7710F4", Offset = "0x7710F4", VA = "0x7710F4")]
	public void CreateMiniRepresentation(GameObject mini)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x7719BC", Offset = "0x7719BC", VA = "0x7719BC")]
	public void DestroyMiniRepresentation()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x771A28", Offset = "0x771A28", VA = "0x771A28")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x775954", Offset = "0x775954", VA = "0x775954")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x77C434", Offset = "0x77C434", VA = "0x77C434")]
	public void StoreObjectType(string storageString, int amountStore)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x77CD40", Offset = "0x77CD40", VA = "0x77CD40")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x77C4D0", Offset = "0x77C4D0", VA = "0x77C4D0")]
	public void SuccessfulQuest()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x786D34", Offset = "0x786D34", VA = "0x786D34")]
	public void PlayLevelUpParticles()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x7758A0", Offset = "0x7758A0", VA = "0x7758A0")]
	public bool CheckPreviousSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x786DA4", Offset = "0x786DA4", VA = "0x786DA4")]
	public QuestCheckTownfolk()
	{
	}
}
[Token(Token = "0x20000AF")]
public class QuestControl : MonoBehaviour
{
	[Token(Token = "0x20002F1")]
	public enum QuestNeeds
	{
		[Token(Token = "0x40018E9")]
		Carrot,
		[Token(Token = "0x40018EA")]
		SpringOnion,
		[Token(Token = "0x40018EB")]
		Turnip,
		[Token(Token = "0x40018EC")]
		BlackCurrant,
		[Token(Token = "0x40018ED")]
		BlueBerry,
		[Token(Token = "0x40018EE")]
		GooseBerry,
		[Token(Token = "0x40018EF")]
		Tree,
		[Token(Token = "0x40018F0")]
		Water,
		[Token(Token = "0x40018F1")]
		Mushroom,
		[Token(Token = "0x40018F2")]
		Fish,
		[Token(Token = "0x40018F3")]
		Bait,
		[Token(Token = "0x40018F4")]
		Soil,
		[Token(Token = "0x40018F5")]
		WoodPlank,
		[Token(Token = "0x40018F6")]
		Nothing
	}

	[Token(Token = "0x20002F2")]
	public enum WeaponToUpgrade
	{
		[Token(Token = "0x40018F8")]
		Axe,
		[Token(Token = "0x40018F9")]
		PickAxe,
		[Token(Token = "0x40018FA")]
		FishingRod,
		[Token(Token = "0x40018FB")]
		Bucket,
		[Token(Token = "0x40018FC")]
		Shovel
	}

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public QuestQueue questQueue;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int questIndex;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BucketParentController bucketParentController;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject shovel;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject fishingRod;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject pickAxe;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject axe;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject bucket;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject rewardObject;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ThorGrabController thorGrabController;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int rewardObjectCount;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform rewardSpawnSpot;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 posAlter;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 quatAlter;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public QuestNeeds questNeed1;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public QuestNeeds questNeed2;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public QuestNeeds questNeed3;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int needsWater;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int needsSoil;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int needsSeeds;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int needsTree;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int needsFish;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int needsWorm;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int needsMush;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int needsTurnip;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public int needsCarrot;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int needsSpringOnion;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public int needsBlackCurrant;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int needsBlueBerry;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int needsGooseBerry;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int needsWoodPlank;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshPro textRequirement1;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TextMeshPro textRequirement2;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TextMeshPro textRequirement3;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public TextMeshPro rewardText;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public WeaponToUpgrade weaponToUpgrade;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public bool questComplete;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
	public bool isPermanentTrade;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GenericObjectIO genericObjectIOForReward;

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x787DC0", Offset = "0x787DC0", VA = "0x787DC0")]
	public void ClearNeeds()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x787DEC", Offset = "0x787DEC", VA = "0x787DEC")]
	public void CheckQuestNeedsMet()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x788984", Offset = "0x788984", VA = "0x788984")]
	public void CompleteQuest()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x788F90", Offset = "0x788F90", VA = "0x788F90")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x788F94", Offset = "0x788F94", VA = "0x788F94")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x788F98", Offset = "0x788F98", VA = "0x788F98")]
	public QuestControl()
	{
	}
}
[Token(Token = "0x20000B0")]
public class QuestLogControl : MonoBehaviour
{
	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string stringSaveQuest1;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string stringSaveQuest2;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string stringSaveQuest3;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string stringSaveQuest4;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string stringSaveQuest5;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string stringSaveQuest6;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text textQuest1;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text textQuest2;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text textQuest3;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text textQuest4;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text textQuest5;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text textQuest6;

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x788FF0", Offset = "0x788FF0", VA = "0x788FF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x789AAC", Offset = "0x789AAC", VA = "0x789AAC")]
	public void RemoveQuest(string questString)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x789264", Offset = "0x789264", VA = "0x789264")]
	public void ReShuffle()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x789D4C", Offset = "0x789D4C", VA = "0x789D4C")]
	public void AddQuestToList(string questString)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x78A020", Offset = "0x78A020", VA = "0x78A020")]
	public QuestLogControl()
	{
	}
}
[Token(Token = "0x20000B1")]
public class QuestQueue : MonoBehaviour
{
	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int currentQuestLevel;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> quests;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject positionOne;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BucketParentController produceCollectionPoint;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource audioSuccess;

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x788F54", Offset = "0x788F54", VA = "0x788F54")]
	public void PlaySuccessAudio()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x78A028", Offset = "0x78A028", VA = "0x78A028")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x78A02C", Offset = "0x78A02C", VA = "0x78A02C")]
	public void ReShuffle()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x78B634", Offset = "0x78B634", VA = "0x78B634")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x78B670", Offset = "0x78B670", VA = "0x78B670")]
	public QuestQueue()
	{
	}
}
[Token(Token = "0x20000B2")]
public class QuestRandomiser : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F710", Offset = "0x56F710")]
	private sealed class <>c
	{
		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<char, string> <>9__7_0;

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x78B9EC", Offset = "0x78B9EC", VA = "0x78B9EC")]
		public <>c()
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x78B9F4", Offset = "0x78B9F4", VA = "0x78B9F4")]
		internal string <TrimLine>b__7_0(char x)
		{
			return null;
		}
	}

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro textRequirement;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro textReward;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public QuestControl questControl;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] potentialRewards;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject selectedReward;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] potentialEquipmentRewards;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GenericObjectIO[] potentialEquipmentRewardIOs;

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x78B6E0", Offset = "0x78B6E0", VA = "0x78B6E0")]
	public string TrimLine(string input, int index)
	{
		return null;
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x78B860", Offset = "0x78B860", VA = "0x78B860")]
	public void ProduceRewardType(int randomRewardIndex, int randomAmountRewarded)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x78A120", Offset = "0x78A120", VA = "0x78A120")]
	public void RandomiseThisQuest()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x78B978", Offset = "0x78B978", VA = "0x78B978")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x78B97C", Offset = "0x78B97C", VA = "0x78B97C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x78B980", Offset = "0x78B980", VA = "0x78B980")]
	public QuestRandomiser()
	{
	}
}
[Token(Token = "0x20000B3")]
public class RabbitHutchSensePosition : MonoBehaviour
{
	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimalBurrowControl burrowControl;

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x78BAA0", Offset = "0x78BAA0", VA = "0x78BAA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x78BE08", Offset = "0x78BE08", VA = "0x78BE08")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x78BE0C", Offset = "0x78BE0C", VA = "0x78BE0C")]
	public RabbitHutchSensePosition()
	{
	}
}
[Token(Token = "0x20000B4")]
public class RaisedBedController : MonoBehaviour
{
	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rigidBody;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hiddenFloorMap;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject hiddenFloorMap2;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform positionMoveBackTo;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform positionMoveBackTo2;

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x78BE14", Offset = "0x78BE14", VA = "0x78BE14")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x78BE6C", Offset = "0x78BE6C", VA = "0x78BE6C")]
	public void CheckSetupAfterDropped()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x78BEC4", Offset = "0x78BEC4", VA = "0x78BEC4")]
	public void CheckIfUprightAndCreateFloor()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x78C118", Offset = "0x78C118", VA = "0x78C118")]
	public void HideFloorOnGrab()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x78C0E0", Offset = "0x78C0E0", VA = "0x78C0E0")]
	public bool IsUpright()
	{
		return default(bool);
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x78C344", Offset = "0x78C344", VA = "0x78C344")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x78C348", Offset = "0x78C348", VA = "0x78C348")]
	public RaisedBedController()
	{
	}
}
[Token(Token = "0x20000B5")]
public class RandomAudioOffset : MonoBehaviour
{
	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x78C788", Offset = "0x78C788", VA = "0x78C788")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x78C844", Offset = "0x78C844", VA = "0x78C844")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x78C848", Offset = "0x78C848", VA = "0x78C848")]
	public RandomAudioOffset()
	{
	}
}
[Token(Token = "0x20000B6")]
public class ResetPlantingData : MonoBehaviour
{
	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x78CB1C", Offset = "0x78CB1C", VA = "0x78CB1C")]
	public void ResetAllPlantingData()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x78CDDC", Offset = "0x78CDDC", VA = "0x78CDDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x78CDE0", Offset = "0x78CDE0", VA = "0x78CDE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x78CDE4", Offset = "0x78CDE4", VA = "0x78CDE4")]
	public ResetPlantingData()
	{
	}
}
[Token(Token = "0x20000B7")]
public class RespectTownfolkControl : MonoBehaviour
{
	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int levelRespectPlayer;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int myMinimumRespect;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TownfolkSpeechControl townfolkSpeechControl;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool switchedOnSpeech;

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x78CDEC", Offset = "0x78CDEC", VA = "0x78CDEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x78CEEC", Offset = "0x78CEEC", VA = "0x78CEEC")]
	public void CheckOnRespectLevel()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x78CE90", Offset = "0x78CE90", VA = "0x78CE90")]
	public void AllowPlayerToConverse()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x78CED0", Offset = "0x78CED0", VA = "0x78CED0")]
	public void DontAllowPlayerToConverse()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x78CF74", Offset = "0x78CF74", VA = "0x78CF74")]
	public RespectTownfolkControl()
	{
	}
}
[Token(Token = "0x20000B8")]
public class RespectUIControl : MonoBehaviour
{
	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int level;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider slider;

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x78CF7C", Offset = "0x78CF7C", VA = "0x78CF7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x78CFF8", Offset = "0x78CFF8", VA = "0x78CFF8")]
	public void AddToRespect()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x78D084", Offset = "0x78D084", VA = "0x78D084")]
	public RespectUIControl()
	{
	}
}
[Token(Token = "0x20000B9")]
public class RigidBodyDebug : MonoBehaviour
{
	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody[] allObjectRigids;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RigidbodyConstraints[] allObjectRigidsConstraints;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool[] allObjectRigidsKinematicCheck;

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x78D08C", Offset = "0x78D08C", VA = "0x78D08C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x78D0E8", Offset = "0x78D0E8", VA = "0x78D0E8")]
	public void CheckOnAllRigids()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x78D264", Offset = "0x78D264", VA = "0x78D264")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x78D268", Offset = "0x78D268", VA = "0x78D268")]
	public RigidBodyDebug()
	{
	}
}
[Token(Token = "0x20000BA")]
public class RigidHandController : MonoBehaviour
{
	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody handLeft;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody handRight;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool rigidOn;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text text;

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x78D270", Offset = "0x78D270", VA = "0x78D270")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x78D2E0", Offset = "0x78D2E0", VA = "0x78D2E0")]
	public void SetupRigid()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x78D39C", Offset = "0x78D39C", VA = "0x78D39C")]
	public void TurnOffRigid()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x78D444", Offset = "0x78D444", VA = "0x78D444")]
	public void SwitchWithButton()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x78D454", Offset = "0x78D454", VA = "0x78D454")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x78D458", Offset = "0x78D458", VA = "0x78D458")]
	public RigidHandController()
	{
	}
}
[Token(Token = "0x20000BB")]
public class RigidRestControl : MonoBehaviour
{
	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rigi;

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x78D460", Offset = "0x78D460", VA = "0x78D460")]
	private void Start()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x78D4BC", Offset = "0x78D4BC", VA = "0x78D4BC")]
	private void CheckIfAtRest()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x78D520", Offset = "0x78D520", VA = "0x78D520")]
	private void Update()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x78D524", Offset = "0x78D524", VA = "0x78D524")]
	public RigidRestControl()
	{
	}
}
[Token(Token = "0x20000BC")]
public class RootGrowthController : MonoBehaviour
{
	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxX;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxY;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxZ;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float growthRate;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool growing;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool fullyGrown;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SoilControllerRootPlot soilControllerGroundCover;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int index;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource audioSource;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip bushDone;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool bushSproutedBerries;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool PremadeFullyGrown;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float growthProgress;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Grabbable grabbable;

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x78D7C4", Offset = "0x78D7C4", VA = "0x78D7C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x78D898", Offset = "0x78D898", VA = "0x78D898")]
	public void BoostMyGrowth()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x78D8B8", Offset = "0x78D8B8", VA = "0x78D8B8")]
	public void EmptyPlot()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x78DA28", Offset = "0x78DA28", VA = "0x78DA28")]
	public void MakeMeABigBoy()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x78DB44", Offset = "0x78DB44", VA = "0x78DB44")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x78DF84", Offset = "0x78DF84", VA = "0x78DF84")]
	public RootGrowthController()
	{
	}
}
[Token(Token = "0x20000BD")]
public class RootPlotIO : MonoBehaviour
{
	[Token(Token = "0x20002F4")]
	public enum State
	{
		[Token(Token = "0x4001900")]
		Empty,
		[Token(Token = "0x4001901")]
		HasSoil,
		[Token(Token = "0x4001902")]
		HasSeeds,
		[Token(Token = "0x4001903")]
		HasPlants,
		[Token(Token = "0x4001904")]
		HasFullyGrownPlants
	}

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] vegePlots;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoilControllerRootPlot[] soilControllers;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject spruceSeed;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject pineSeed;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject gumtreeSeed;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject rootPlotPrefab;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int countRepsToRunThrough;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlotPositionIO plotPositionIO;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GenericObjectIO objectIOForFirstStageProtoPlot;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject firstStageProtoPlotPrefabFromScene;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PlotShapeMaster plotShapeMaster;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public State[] state;

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x78DFA0", Offset = "0x78DFA0", VA = "0x78DFA0")]
	public void SetupCount()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x78E05C", Offset = "0x78E05C", VA = "0x78E05C")]
	public void StartAfterDelay()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x79183C", Offset = "0x79183C", VA = "0x79183C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x7918D8", Offset = "0x7918D8", VA = "0x7918D8")]
	public void SaveOutPositions()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x791C88", Offset = "0x791C88", VA = "0x791C88")]
	public void SaveOutAllRotations()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x791FFC", Offset = "0x791FFC", VA = "0x791FFC")]
	public void LoadINPositions()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x79226C", Offset = "0x79226C", VA = "0x79226C")]
	public void LoadInRotations()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x790D50", Offset = "0x790D50", VA = "0x790D50")]
	public void LoadIn()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x78DE9C", Offset = "0x78DE9C", VA = "0x78DE9C")]
	public void SelectivelySaveRoot(int index)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x792488", Offset = "0x792488", VA = "0x792488")]
	public void SelectivelySaveRootEmpty(int index)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x792510", Offset = "0x792510", VA = "0x792510")]
	public void SelectivelyRemoveRoot(int index)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x792598", Offset = "0x792598", VA = "0x792598")]
	public void SelectivelySaveRootWithSeeds(int index)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x79031C", Offset = "0x79031C", VA = "0x79031C")]
	public void SaveOut()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x78FF80", Offset = "0x78FF80", VA = "0x78FF80")]
	public void AddPlotFromSpawn(GameObject plot)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x792620", Offset = "0x792620", VA = "0x792620")]
	public void AddPlot(GameObject plot)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x792B08", Offset = "0x792B08", VA = "0x792B08")]
	public void SaveOutSpecificPosition(int arrayIndex, float posX, float posY, float posZ)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x792FA0", Offset = "0x792FA0", VA = "0x792FA0")]
	public void SaveOutSpecificRotation(int arrayIndex, float rotX, float rotY, float rotZ)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x79346C", Offset = "0x79346C", VA = "0x79346C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x793470", Offset = "0x793470", VA = "0x793470")]
	public RootPlotIO()
	{
	}
}
[Token(Token = "0x20000BE")]
public class SaddleAdjuster : MonoBehaviour
{
	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterController playerCharacterController;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetCentre;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool isSittingOnHorse;

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x793548", Offset = "0x793548", VA = "0x793548")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x793644", Offset = "0x793644", VA = "0x793644")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x793740", Offset = "0x793740", VA = "0x793740")]
	public void Update()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x793744", Offset = "0x793744", VA = "0x793744")]
	public SaddleAdjuster()
	{
	}
}
[Token(Token = "0x20000BF")]
public static class SceneData
{
	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Camera mainCamera;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool PCMODE;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool ControllerMode;
}
[Token(Token = "0x20000C0")]
public class CameraFocusCheck : MonoBehaviour
{
	[Token(Token = "0x600040B")]
	[Address(RVA = "0x84E88C", Offset = "0x84E88C", VA = "0x84E88C")]
	private void Start()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x84E890", Offset = "0x84E890", VA = "0x84E890")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x84EF74", Offset = "0x84EF74", VA = "0x84EF74")]
	private void Update()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x84EF78", Offset = "0x84EF78", VA = "0x84EF78")]
	public CameraFocusCheck()
	{
	}
}
[Token(Token = "0x20000C1")]
public class CameraPickupControls : MonoBehaviour
{
	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material pickupMat;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material storageMat;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lookingAtObject;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeRunFor;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool changedMat;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distance;

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x84EF80", Offset = "0x84EF80", VA = "0x84EF80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x84EF84", Offset = "0x84EF84", VA = "0x84EF84")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x84F4D4", Offset = "0x84F4D4", VA = "0x84F4D4")]
	public void ChangeBackMat()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x84F598", Offset = "0x84F598", VA = "0x84F598")]
	private void Update()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x84F59C", Offset = "0x84F59C", VA = "0x84F59C")]
	public CameraPickupControls()
	{
	}
}
[Token(Token = "0x20000C2")]
public class DetectSoilState : MonoBehaviour
{
	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RandomAnimOffset animationScript;

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x873F70", Offset = "0x873F70", VA = "0x873F70")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x874048", Offset = "0x874048", VA = "0x874048")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x8740EC", Offset = "0x8740EC", VA = "0x8740EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x8740F0", Offset = "0x8740F0", VA = "0x8740F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x8740F4", Offset = "0x8740F4", VA = "0x8740F4")]
	public DetectSoilState()
	{
	}
}
[Token(Token = "0x20000C3")]
public class FelledTreeController : MonoBehaviour
{
	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int hitsAxe;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip audioClipChop;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip audioClipFell;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject logsToSpawn;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] positionLogsSpawn;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool loggedToDead;

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xAD1938", Offset = "0xAD1938", VA = "0xAD1938")]
	private void Start()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xAD193C", Offset = "0xAD193C", VA = "0xAD193C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xAD1D08", Offset = "0xAD1D08", VA = "0xAD1D08")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xAD1AAC", Offset = "0xAD1AAC", VA = "0xAD1AAC")]
	public void TreeFelled()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xAD1EB4", Offset = "0xAD1EB4", VA = "0xAD1EB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xAD1EB8", Offset = "0xAD1EB8", VA = "0xAD1EB8")]
	public FelledTreeController()
	{
	}
}
[Token(Token = "0x20000C4")]
public class GroundCoverGrowthController : MonoBehaviour
{
	[Token(Token = "0x20002F5")]
	public enum State
	{
		[Token(Token = "0x4001906")]
		Wheat,
		[Token(Token = "0x4001907")]
		Hosta,
		[Token(Token = "0x4001908")]
		Clover
	}

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxX;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxY;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxZ;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float growthRate;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool growing;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool fullyGrown;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SoilControllerGroundCover soilControllerGroundCover;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int index;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] plants;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource audioSource;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip bushDone;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool bushSproutedBerries;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float growthProgress;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public State groundCoverType;

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x937150", Offset = "0x937150", VA = "0x937150")]
	private void Start()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x937154", Offset = "0x937154", VA = "0x937154")]
	public void BoostMyGrowth()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x937164", Offset = "0x937164", VA = "0x937164")]
	public void EmptyPlot()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x9372D4", Offset = "0x9372D4", VA = "0x9372D4")]
	public void CheckBerriesAllGone()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x93737C", Offset = "0x93737C", VA = "0x93737C")]
	public void MakeMeABigBoy()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x9373F8", Offset = "0x9373F8", VA = "0x9373F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x937710", Offset = "0x937710", VA = "0x937710")]
	public GroundCoverGrowthController()
	{
	}
}
[Token(Token = "0x20000C5")]
public class LogFireDetector : MonoBehaviour
{
	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fireEffect;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggeredFireStarter;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject burnedVersion;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSource;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip clipIgnited;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool ignited;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject fireSpawnPosition;

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x72EE7C", Offset = "0x72EE7C", VA = "0x72EE7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x72EE80", Offset = "0x72EE80", VA = "0x72EE80")]
	public void Ignite()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x72F1D8", Offset = "0x72F1D8", VA = "0x72F1D8")]
	public void SpawnReplacement()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x72F2E4", Offset = "0x72F2E4", VA = "0x72F2E4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x72F1B4", Offset = "0x72F1B4", VA = "0x72F1B4")]
	public void PlayAudio()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x72F04C", Offset = "0x72F04C", VA = "0x72F04C")]
	public void Explosion()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x72F37C", Offset = "0x72F37C", VA = "0x72F37C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x72F42C", Offset = "0x72F42C", VA = "0x72F42C")]
	private void Update()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x72F430", Offset = "0x72F430", VA = "0x72F430")]
	public LogFireDetector()
	{
	}
}
[Token(Token = "0x20000C6")]
public class LookAtConstraintSetup : MonoBehaviour
{
	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LookAtConstraint constraint;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject camera;

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x72F438", Offset = "0x72F438", VA = "0x72F438")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x72F4D4", Offset = "0x72F4D4", VA = "0x72F4D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x72F4D8", Offset = "0x72F4D8", VA = "0x72F4D8")]
	public LookAtConstraintSetup()
	{
	}
}
[Token(Token = "0x20000C7")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20002F6")]
	public enum RotationAxes
	{
		[Token(Token = "0x400190A")]
		MouseXAndY,
		[Token(Token = "0x400190B")]
		MouseX,
		[Token(Token = "0x400190C")]
		MouseY
	}

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotationX;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float rotationY;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion originalRotation;

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xABB88C", Offset = "0xABB88C", VA = "0xABB88C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xABBEE0", Offset = "0xABBEE0", VA = "0xABBEE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xABBE30", Offset = "0xABBE30", VA = "0xABBE30")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xABBF1C", Offset = "0xABBF1C", VA = "0xABBF1C")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000C8")]
public class Mulcherman : MonoBehaviour
{
	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeRunFor;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool on;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MulchControl mulchControl;

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xABC324", Offset = "0xABC324", VA = "0xABC324")]
	private void Start()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xABC37C", Offset = "0xABC37C", VA = "0xABC37C")]
	public void PlayMe()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xABC328", Offset = "0xABC328", VA = "0xABC328")]
	public void StopMe()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xABC420", Offset = "0xABC420", VA = "0xABC420")]
	private void Update()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xABC47C", Offset = "0xABC47C", VA = "0xABC47C")]
	public Mulcherman()
	{
	}
}
[Token(Token = "0x20000C9")]
public class PCControls : MonoBehaviour
{
	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float jumpSpeed;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gravity;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 moveDirection;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float turner;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float looker;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float sensitivity;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float X;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float Y;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CharacterController controller;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject leftHand;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject rightHand;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject headPosition;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject leftHandPos;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject rightHandPos;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 returnToPosLeft;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 returnToPosRight;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] instructionsForXR;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject[] instructionsForPC;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public XRRayInteractor leftRayInteractor;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public XRRayInteractor rightRayInteractor;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LineRenderer leftLineRenderer;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LineRenderer rightLineRenderer;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public XRInteractorLineVisual leftLineVisual;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public XRInteractorLineVisual rightLineVisual;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Hand leftHandGrabber;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Hand rightHandGrabber;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float targetHeight;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public bool swungLeft;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
	public bool swungRight;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float timeRestSwing;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float timeRestSwingRight;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject shovelWithHandPoses;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject axeWithHandPoses;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject pickAxeWithHandPoses;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject bucketWithHandPoses;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject fishingRodWithHandPoses;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject originalShovel;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject originalAxe;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject originalPickAxe;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject originalBucket;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject originalFishingRod;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public ThorGrabController thorGrabController;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject protoPlotForShovelSetup;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GenericObjectIO genericObjectIOForShovelSetup;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public HorseEffectsController horseEffectsController;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Transform horseFocusPoint;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public PlotShapeMaster plotShapeControlToPassToShovel;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public CharacterControllerMoveWithPlayer characterControllerMoveWithPlayer;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject crosshairToEnable;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HandDistanceGrab handDistanceGrabLeft;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public HandDistanceGrab handDistanceGrabRight;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public TutorialControl tutorialControl;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public WatchControl watchControl;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public bool usingPredefinedHandPoses;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject shovelPrefab;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject axePrefab;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject pickAxePrefab;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject bucketPrefab;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject fishingRodPrefab;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Transform positionSpawnShovel;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Transform positionSpawnAxe;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Transform positionSpawnPickAxe;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Transform positionSpawnBucket;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Transform positionSpawnFishingRod;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Text textForOptions;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public bool isOnPC;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject inventorySphereToAdjustPos1;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject inventorySphereToAdjustPos2;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject inventorySphereToAdjustPos3;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject inventorySphereToAdjustPos4;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public GameObject inventorySphereToAdjustPos5;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject inventorySphereToAdjustPos6;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Transform posMoveSphere1;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public Transform posMoveSphere2;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public Transform posMoveSphere3;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public Transform posMoveSphere4;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public Transform posMoveSphere5;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public Transform posMoveSphere6;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject[] menuItemsDisable;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public GameObject[] menuItemsEnable;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public Slider sliderForValueMouseSense;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public MouseLook mouseLookToAdjustSense;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public bool grabSetControllerLeft;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x289")]
	public bool grabSetControllerRight;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	public float countDownAllowDropLeft;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public float countDownAllowDropRight;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public XRInteractionManager interactionManager;

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xABCCC0", Offset = "0xABCCC0", VA = "0xABCCC0")]
	public void PresetForHandPosesActivated()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xABCD48", Offset = "0xABCD48", VA = "0xABCD48")]
	private void Start()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xABD79C", Offset = "0xABD79C", VA = "0xABD79C")]
	public void CheckIfPresetForPremadeGrabPoses()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xABE230", Offset = "0xABE230", VA = "0xABE230")]
	public void AdjustMouseSensitivity()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xABD810", Offset = "0xABD810", VA = "0xABD810")]
	public void SetupPrefabsWithHandPoses()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xABE2E4", Offset = "0xABE2E4", VA = "0xABE2E4")]
	public void MoveHandDetectors()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xABE2E8", Offset = "0xABE2E8", VA = "0xABE2E8")]
	public void CrouchME()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xABE2EC", Offset = "0xABE2EC", VA = "0xABE2EC")]
	public void StandUp()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xABE358", Offset = "0xABE358", VA = "0xABE358")]
	public void HoldScroll(bool leftHandGrab)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xABE35C", Offset = "0xABE35C", VA = "0xABE35C")]
	public void DropScroll(bool leftHandGrab)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xABE360", Offset = "0xABE360", VA = "0xABE360")]
	public void RepositionHands()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xABE59C", Offset = "0xABE59C", VA = "0xABE59C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xABE5F4", Offset = "0xABE5F4", VA = "0xABE5F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xABF7C8", Offset = "0xABF7C8", VA = "0xABF7C8")]
	public PCControls()
	{
	}
}
[Token(Token = "0x20000CA")]
public class RandomAnimOffset : MonoBehaviour
{
	[Token(Token = "0x20002F7")]
	public enum State
	{
		[Token(Token = "0x400190E")]
		happy,
		[Token(Token = "0x400190F")]
		elated,
		[Token(Token = "0x4001910")]
		sad
	}

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject happyEyes;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject elatedEyes;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject happySmile;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject elatedSmile;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject sadSmile;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public State state;

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x78C350", Offset = "0x78C350", VA = "0x78C350")]
	public void SwitchToGrabbedState()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x78C564", Offset = "0x78C564", VA = "0x78C564")]
	public void SwitchToLetGoState()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x78C358", Offset = "0x78C358", VA = "0x78C358")]
	public void SwitchState()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x78C570", Offset = "0x78C570", VA = "0x78C570")]
	private void Start()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x78C77C", Offset = "0x78C77C", VA = "0x78C77C")]
	private void Update()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x78C780", Offset = "0x78C780", VA = "0x78C780")]
	public RandomAnimOffset()
	{
	}
}
[Token(Token = "0x20000CB")]
public class RootGrabLink : MonoBehaviour
{
	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rigi;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RootGrowthController rootGrowthController;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int index;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSource;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool offBush;

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x78D52C", Offset = "0x78D52C", VA = "0x78D52C")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x78D5E8", Offset = "0x78D5E8", VA = "0x78D5E8")]
	public void DropMeNow()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x78D7B4", Offset = "0x78D7B4", VA = "0x78D7B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x78D7B8", Offset = "0x78D7B8", VA = "0x78D7B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x78D7BC", Offset = "0x78D7BC", VA = "0x78D7BC")]
	public RootGrabLink()
	{
	}
}
[Token(Token = "0x20000CC")]
public class Seed : MonoBehaviour
{
	[Token(Token = "0x20002F8")]
	public enum State
	{
		[Token(Token = "0x4001912")]
		Pumpkin,
		[Token(Token = "0x4001913")]
		Turnip,
		[Token(Token = "0x4001914")]
		Pepper
	}

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] pumpkins;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] turnips;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] pepper;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State state;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool readyToGrow;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int waterHits;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody rigidbody;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SoilController soilController;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int index;

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x7948B0", Offset = "0x7948B0", VA = "0x7948B0")]
	public GameObject PlantSeed()
	{
		return null;
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x794DA0", Offset = "0x794DA0", VA = "0x794DA0")]
	public void RunDelay()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x794E18", Offset = "0x794E18", VA = "0x794E18")]
	public void StopMeAfterDelay()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x794F18", Offset = "0x794F18", VA = "0x794F18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x794F1C", Offset = "0x794F1C", VA = "0x794F1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x794F20", Offset = "0x794F20", VA = "0x794F20")]
	public Seed()
	{
	}
}
[Token(Token = "0x20000CD")]
public class SeedBush : MonoBehaviour
{
	[Token(Token = "0x20002F9")]
	public enum State
	{
		[Token(Token = "0x4001916")]
		Spruce,
		[Token(Token = "0x4001917")]
		Pine,
		[Token(Token = "0x4001918")]
		Gumtree
	}

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] spruces;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] pines;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] gumtrees;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State state;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool readyToGrow;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int waterHits;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody rigidbody;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SoilControllerBush soilControllerBush;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int index;

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x794F28", Offset = "0x794F28", VA = "0x794F28")]
	public GameObject PlantSeed()
	{
		return null;
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x79559C", Offset = "0x79559C", VA = "0x79559C")]
	public void RunDelay()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x795614", Offset = "0x795614", VA = "0x795614")]
	public void StopMeAfterDelay()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x795714", Offset = "0x795714", VA = "0x795714")]
	private void Start()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x795718", Offset = "0x795718", VA = "0x795718")]
	private void Update()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x79571C", Offset = "0x79571C", VA = "0x79571C")]
	public SeedBush()
	{
	}
}
[Token(Token = "0x20000CE")]
public class SeedRoot : MonoBehaviour
{
	[Token(Token = "0x20002FA")]
	public enum State
	{
		[Token(Token = "0x400191A")]
		Pumpkin,
		[Token(Token = "0x400191B")]
		Turnip,
		[Token(Token = "0x400191C")]
		Pepper
	}

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] pumpkins;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] turnips;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] pepper;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State state;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool readyToGrow;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int waterHits;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody rigidbody;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SoilControllerRootPlot soilController;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int index;

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x78F724", Offset = "0x78F724", VA = "0x78F724")]
	public GameObject PlantSeed()
	{
		return null;
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x7975CC", Offset = "0x7975CC", VA = "0x7975CC")]
	public void RunDelay()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x797644", Offset = "0x797644", VA = "0x797644")]
	public void StopMeAfterDelay()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x797744", Offset = "0x797744", VA = "0x797744")]
	private void Start()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x797748", Offset = "0x797748", VA = "0x797748")]
	private void Update()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x79774C", Offset = "0x79774C", VA = "0x79774C")]
	public SeedRoot()
	{
	}
}
[Token(Token = "0x20000CF")]
public class SeedSubCanopy : MonoBehaviour
{
	[Token(Token = "0x20002FB")]
	public enum State
	{
		[Token(Token = "0x400191E")]
		Spruce,
		[Token(Token = "0x400191F")]
		Pine,
		[Token(Token = "0x4001920")]
		Gumtree
	}

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] lemons;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] pines;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] gumtrees;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State state;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool readyToGrow;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int waterHits;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody rigidbody;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SoilControllerSubCanopy soilControllerSubCanopy;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int index;

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x797754", Offset = "0x797754", VA = "0x797754")]
	public GameObject PlantSeed()
	{
		return null;
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x797BD4", Offset = "0x797BD4", VA = "0x797BD4")]
	public void RunDelay()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x797C4C", Offset = "0x797C4C", VA = "0x797C4C")]
	public void StopMeAfterDelay()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x797D4C", Offset = "0x797D4C", VA = "0x797D4C")]
	private void Start()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x797D50", Offset = "0x797D50", VA = "0x797D50")]
	private void Update()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x797D54", Offset = "0x797D54", VA = "0x797D54")]
	public SeedSubCanopy()
	{
	}
}
[Token(Token = "0x20000D0")]
public class SeedTree : MonoBehaviour
{
	[Token(Token = "0x20002FC")]
	public enum State
	{
		[Token(Token = "0x4001922")]
		Spruce,
		[Token(Token = "0x4001923")]
		Pine,
		[Token(Token = "0x4001924")]
		Gumtree
	}

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] spruces;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] pines;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] gumtrees;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State state;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool readyToGrow;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int waterHits;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody rigidbody;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SoilControllerTree soilControllerTree;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int index;

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x797D5C", Offset = "0x797D5C", VA = "0x797D5C")]
	public GameObject PlantSeed()
	{
		return null;
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x7983E0", Offset = "0x7983E0", VA = "0x7983E0")]
	public void RunDelay()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x798458", Offset = "0x798458", VA = "0x798458")]
	public void StopMeAfterDelay()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x798558", Offset = "0x798558", VA = "0x798558")]
	private void Start()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x79855C", Offset = "0x79855C", VA = "0x79855C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x798560", Offset = "0x798560", VA = "0x798560")]
	public SeedTree()
	{
	}
}
[Token(Token = "0x20000D1")]
public class SeedVine : MonoBehaviour
{
	[Token(Token = "0x20002FD")]
	public enum State
	{
		[Token(Token = "0x4001926")]
		Pumpkin,
		[Token(Token = "0x4001927")]
		Turnip,
		[Token(Token = "0x4001928")]
		Pepper
	}

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] pumpkins;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] turnips;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] pepper;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State state;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool readyToGrow;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int waterHits;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody rigidbody;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SoilControllerVine soilController;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int index;

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x798568", Offset = "0x798568", VA = "0x798568")]
	public GameObject PlantSeed()
	{
		return null;
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x798A98", Offset = "0x798A98", VA = "0x798A98")]
	public void RunDelay()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x798B10", Offset = "0x798B10", VA = "0x798B10")]
	public void StopMeAfterDelay()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x798C10", Offset = "0x798C10", VA = "0x798C10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x798C14", Offset = "0x798C14", VA = "0x798C14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x798C18", Offset = "0x798C18", VA = "0x798C18")]
	public SeedVine()
	{
	}
}
[Token(Token = "0x20000D2")]
public class SoilController : MonoBehaviour
{
	[Token(Token = "0x20002FE")]
	public enum State
	{
		[Token(Token = "0x400192A")]
		Empty,
		[Token(Token = "0x400192B")]
		HasSoil,
		[Token(Token = "0x400192C")]
		HasSeeds,
		[Token(Token = "0x400192D")]
		HasPlants,
		[Token(Token = "0x400192E")]
		HasFullyGrownPlants
	}

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer renderer;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material material1;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material2;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material material3;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material soilPlotEmptyMat;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public State state;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material materialWetSoil;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hits;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int hitsSeeds;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int hitsWater;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int hitAltIngredientMush;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int hitAltIngredientMushAlternate;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float alpha;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] seeds;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] plants;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool readyToPlant;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool plantingComplete;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool wateringComplete;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	public bool seedActivationComplete;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text text;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text text2;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text text3;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text textAltIngredientMush;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text textAltIngredientMushAlternate;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject effectSoilHit;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject effectSeedHit;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject effectWaterHit;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject effectPlantSprout;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UserInterfaceActivator userInterfaceActivator;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int index;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public VegetablePlotIO plotIO;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GenericObjectIO objectIOForFirstStageProtoPlot;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject firstStageProtoPlotPrefabFromScene;

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x89AB18", Offset = "0x89AB18", VA = "0x89AB18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x89AB1C", Offset = "0x89AB1C", VA = "0x89AB1C")]
	public void SetMeUp()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x89B184", Offset = "0x89B184", VA = "0x89B184")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x89C308", Offset = "0x89C308", VA = "0x89C308")]
	public void CreateSeedAtStart(int pumpkins, int turnips)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x89C30C", Offset = "0x89C30C", VA = "0x89C30C")]
	public void CheckPlantsAllGone()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x89C0A8", Offset = "0x89C0A8", VA = "0x89C0A8")]
	public void ActivateSeeds()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x89C6B0", Offset = "0x89C6B0", VA = "0x89C6B0")]
	public void PlantPumpkinSeed(Transform positionSpawn)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x89C6B4", Offset = "0x89C6B4", VA = "0x89C6B4")]
	public void PlantFromRain()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x89C878", Offset = "0x89C878", VA = "0x89C878")]
	public SoilController()
	{
	}
}
[Token(Token = "0x20000D3")]
public class SoilControllerBush : MonoBehaviour
{
	[Token(Token = "0x20002FF")]
	public enum State
	{
		[Token(Token = "0x4001930")]
		Empty,
		[Token(Token = "0x4001931")]
		HasSoil,
		[Token(Token = "0x4001932")]
		HasSeeds,
		[Token(Token = "0x4001933")]
		HasPlants,
		[Token(Token = "0x4001934")]
		HasFullyGrownPlants,
		[Token(Token = "0x4001935")]
		PrePlanted
	}

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer renderer;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material material1;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material2;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material material3;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material soilPlotEmptyMat;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public State state;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material materialWetSoil;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hits;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int hitsSeeds;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int hitsWater;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int hitAltIngredient;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float alpha;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] seeds;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] plants;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool readyToPlant;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool plantingComplete;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool wateringComplete;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	public bool seedActivationComplete;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text text;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text text2;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text text3;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text textAltIngredient;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject effectSoilHit;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject effectSeedHit;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject effectWaterHit;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject effectPlantSprout;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UserInterfaceActivator userInterfaceActivator;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int index;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public BushIOV2 plotIO;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioClip audioWaterHit;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioClip audioSeedHit;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClip audioFishHit;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GenericObjectIO objectIOForFirstStageProtoPlot;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject firstStageProtoPlotPrefabFromScene;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool emptyBush;

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x89C880", Offset = "0x89C880", VA = "0x89C880")]
	private void Start()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x89C884", Offset = "0x89C884", VA = "0x89C884")]
	public void SelectiveSetup()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x89C888", Offset = "0x89C888", VA = "0x89C888")]
	public void SetMeUp()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x89CEF4", Offset = "0x89CEF4", VA = "0x89CEF4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x89DFF4", Offset = "0x89DFF4", VA = "0x89DFF4")]
	public void CreateSeedAtStart(int pumpkins, int turnips)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x89DFF8", Offset = "0x89DFF8", VA = "0x89DFF8")]
	public void CheckPlantsAllGone()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x89DD8C", Offset = "0x89DD8C", VA = "0x89DD8C")]
	public void ActivateSeeds()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x89E39C", Offset = "0x89E39C", VA = "0x89E39C")]
	public void PlantPumpkinSeed(Transform positionSpawn)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x89E3A0", Offset = "0x89E3A0", VA = "0x89E3A0")]
	public void PlantFromRain()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x89E564", Offset = "0x89E564", VA = "0x89E564")]
	public SoilControllerBush()
	{
	}
}
[Token(Token = "0x20000D4")]
public class SoilControllerRootPlot : MonoBehaviour
{
	[Token(Token = "0x2000300")]
	public enum State
	{
		[Token(Token = "0x4001937")]
		Empty,
		[Token(Token = "0x4001938")]
		HasSoil,
		[Token(Token = "0x4001939")]
		HasSeeds,
		[Token(Token = "0x400193A")]
		HasPlants,
		[Token(Token = "0x400193B")]
		HasFullyGrownPlants
	}

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer renderer;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material material1;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material2;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material material3;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material soilPlotEmptyMat;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public State state;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material materialWetSoil;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hits;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int hitsSeeds;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int hitsWater;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float alpha;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] seeds;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] plants;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool readyToPlant;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool plantingComplete;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool wateringComplete;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	public bool seedActivationComplete;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text text;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text text2;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text text3;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject effectSoilHit;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject effectSeedHit;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject effectWaterHit;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject effectPlantSprout;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UserInterfaceActivator userInterfaceActivator;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int index;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public RootPlotIO plotIO;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioClip audioWaterHit;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioClip audioSeedHit;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GenericObjectIO objectIOForFirstStageProtoPlot;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject firstStageProtoPlotPrefabFromScene;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool confirmedSeeds;

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x8A0274", Offset = "0x8A0274", VA = "0x8A0274")]
	private void Start()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x8A0278", Offset = "0x8A0278", VA = "0x8A0278")]
	public void SetMeUp()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x8A0690", Offset = "0x8A0690", VA = "0x8A0690")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x8A16C0", Offset = "0x8A16C0", VA = "0x8A16C0")]
	public void CreateSeedAtStart(int pumpkins, int turnips)
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x8A16C4", Offset = "0x8A16C4", VA = "0x8A16C4")]
	public void CheckPlantsAllGone()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x8A1428", Offset = "0x8A1428", VA = "0x8A1428")]
	public void ActivateSeeds()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x8A1A68", Offset = "0x8A1A68", VA = "0x8A1A68")]
	public void PlantPumpkinSeed(Transform positionSpawn)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x8A1A6C", Offset = "0x8A1A6C", VA = "0x8A1A6C")]
	public void PlantFromRain()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x8A1C30", Offset = "0x8A1C30", VA = "0x8A1C30")]
	public SoilControllerRootPlot()
	{
	}
}
[Token(Token = "0x20000D5")]
public class SoilControllerSubCanopy : MonoBehaviour
{
	[Token(Token = "0x2000301")]
	public enum State
	{
		[Token(Token = "0x400193D")]
		Empty,
		[Token(Token = "0x400193E")]
		HasSoil,
		[Token(Token = "0x400193F")]
		HasSeeds,
		[Token(Token = "0x4001940")]
		HasPlants,
		[Token(Token = "0x4001941")]
		HasFullyGrownPlants,
		[Token(Token = "0x4001942")]
		PrePlanted
	}

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer renderer;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material material1;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material2;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material material3;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material soilPlotEmptyMat;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public State state;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material materialWetSoil;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hits;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int hitsSeeds;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int hitsWater;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int hitAltIngredientMush;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int hitAltIngredientFish;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float alpha;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] seeds;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] plants;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool readyToPlant;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool plantingComplete;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool wateringComplete;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	public bool seedActivationComplete;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text text;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text text2;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text text3;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text textAltIngredientFish;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text textAltIngredientMush;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject effectSoilHit;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject effectSeedHit;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject effectWaterHit;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject effectPlantSprout;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UserInterfaceActivator userInterfaceActivator;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int index;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public SubCanopyPlotIO plotIO;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GenericObjectIO objectIOForFirstStageProtoPlot;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject firstStageProtoPlotPrefabFromScene;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool emptySubCanopy;

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x8A1C38", Offset = "0x8A1C38", VA = "0x8A1C38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x8A1C3C", Offset = "0x8A1C3C", VA = "0x8A1C3C")]
	public void SelectiveSetup()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x8A1C40", Offset = "0x8A1C40", VA = "0x8A1C40")]
	public void SetMeUp()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x8A2098", Offset = "0x8A2098", VA = "0x8A2098")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x8A3910", Offset = "0x8A3910", VA = "0x8A3910")]
	public void CreateSeedAtStart(int pumpkins, int turnips)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x8A3914", Offset = "0x8A3914", VA = "0x8A3914")]
	public void CheckPlantsAllGone()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x8A36B0", Offset = "0x8A36B0", VA = "0x8A36B0")]
	public void ActivateSeeds()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x8A414C", Offset = "0x8A414C", VA = "0x8A414C")]
	public void PlantPumpkinSeed(Transform positionSpawn)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x8A4150", Offset = "0x8A4150", VA = "0x8A4150")]
	public void PlantFromRain()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x8A4310", Offset = "0x8A4310", VA = "0x8A4310")]
	public SoilControllerSubCanopy()
	{
	}
}
[Token(Token = "0x20000D6")]
public class SoilControllerTree : MonoBehaviour
{
	[Token(Token = "0x2000302")]
	public enum State
	{
		[Token(Token = "0x4001944")]
		Empty,
		[Token(Token = "0x4001945")]
		HasSoil,
		[Token(Token = "0x4001946")]
		HasSeeds,
		[Token(Token = "0x4001947")]
		HasPlants,
		[Token(Token = "0x4001948")]
		HasFullyGrownPlants,
		[Token(Token = "0x4001949")]
		PrePlanted
	}

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer renderer;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material material1;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material2;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material material3;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material soilPlotEmptyMat;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public State state;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material materialWetSoil;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hits;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int hitsSeeds;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int hitsWater;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int hitAltIngredient;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float alpha;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] seeds;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] plants;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool readyToPlant;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool plantingComplete;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool wateringComplete;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	public bool seedActivationComplete;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text text;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text text2;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text text3;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text textAltIngredient;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject effectSoilHit;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject effectSeedHit;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject effectWaterHit;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject effectPlantSprout;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UserInterfaceActivator userInterfaceActivator;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int index;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TreePlotIO plotIO;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioClip audioWaterHit;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioClip audioSeedHit;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClip audioMushHit;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GenericObjectIO objectIOForFirstStageProtoPlot;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject firstStageProtoPlotPrefabFromScene;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x8A4318", Offset = "0x8A4318", VA = "0x8A4318")]
	private void Start()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x8A431C", Offset = "0x8A431C", VA = "0x8A431C")]
	public void SelectiveSetup()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x8A4320", Offset = "0x8A4320", VA = "0x8A4320")]
	public void SetMeUp()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x8A48C8", Offset = "0x8A48C8", VA = "0x8A48C8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x8A5A28", Offset = "0x8A5A28", VA = "0x8A5A28")]
	public void CreateSeedAtStart(int pumpkins, int turnips)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x8A5A2C", Offset = "0x8A5A2C", VA = "0x8A5A2C")]
	public void DropAllCones()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x8A5AB8", Offset = "0x8A5AB8", VA = "0x8A5AB8")]
	public void CheckPlantsAllGone()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x8A57C8", Offset = "0x8A57C8", VA = "0x8A57C8")]
	public void ActivateSeeds()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x8A5E5C", Offset = "0x8A5E5C", VA = "0x8A5E5C")]
	public void PlantPumpkinSeed(Transform positionSpawn)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x8A5E60", Offset = "0x8A5E60", VA = "0x8A5E60")]
	public void PlantFromRain()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x8A6024", Offset = "0x8A6024", VA = "0x8A6024")]
	public SoilControllerTree()
	{
	}
}
[Token(Token = "0x20000D7")]
public class SubCanopyPlotIO : MonoBehaviour
{
	[Token(Token = "0x2000303")]
	public enum State
	{
		[Token(Token = "0x400194B")]
		Empty,
		[Token(Token = "0x400194C")]
		HasSoil,
		[Token(Token = "0x400194D")]
		HasSeeds,
		[Token(Token = "0x400194E")]
		HasPlants,
		[Token(Token = "0x400194F")]
		HasFullyGrownPlants
	}

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] vegePlots;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoilControllerSubCanopy[] soilControllers;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject spruceSeed;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject pineSeed;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject gumtreeSeed;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject subCanopyPlotPrefab;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public State[] state;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int countRepsToRunThrough;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GenericObjectIO objectIOForFirstStageProtoPlot;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject firstStageProtoPlotPrefabFromScene;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PlotShapeMaster plotShapeMaster;

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x8ADD0C", Offset = "0x8ADD0C", VA = "0x8ADD0C")]
	public void SetupCount()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x8ADDC8", Offset = "0x8ADDC8", VA = "0x8ADDC8")]
	public void StartAfterDelay()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x8AFB60", Offset = "0x8AFB60", VA = "0x8AFB60")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x8AFBFC", Offset = "0x8AFBFC", VA = "0x8AFBFC")]
	public void SaveOutPositions()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x8AFFAC", Offset = "0x8AFFAC", VA = "0x8AFFAC")]
	public void SaveOutAllRotations()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x8B0320", Offset = "0x8B0320", VA = "0x8B0320")]
	public void LoadINPositions()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x8B0590", Offset = "0x8B0590", VA = "0x8B0590")]
	public void LoadInRotations()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x8AF1F0", Offset = "0x8AF1F0", VA = "0x8AF1F0")]
	public void LoadIn()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x8B07AC", Offset = "0x8B07AC", VA = "0x8B07AC")]
	public void SelectivelySave()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x8ADC5C", Offset = "0x8ADC5C", VA = "0x8ADC5C")]
	public void SelectivelySaveSubCanopy(int index)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x8B0894", Offset = "0x8B0894", VA = "0x8B0894")]
	public void SelectivelyRemoveSubCanopy(int index)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x8A2FBC", Offset = "0x8A2FBC", VA = "0x8A2FBC")]
	public void SaveOut()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x8AEE54", Offset = "0x8AEE54", VA = "0x8AEE54")]
	public void AddPlotFromSpawn(GameObject plot)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x8B091C", Offset = "0x8B091C", VA = "0x8B091C")]
	public void AddPlot(GameObject plot)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x8A3CB4", Offset = "0x8A3CB4", VA = "0x8A3CB4")]
	public void SaveOutSpecificPosition(int arrayIndex, float posX, float posY, float posZ)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x8B0E8C", Offset = "0x8B0E8C", VA = "0x8B0E8C")]
	public void SaveOutSpecificRotation(int arrayIndex, float rotX, float rotY, float rotZ)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x8B0E04", Offset = "0x8B0E04", VA = "0x8B0E04")]
	public void SelectivelySaveTreeEmpty(int index)
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x8B1358", Offset = "0x8B1358", VA = "0x8B1358")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x8B135C", Offset = "0x8B135C", VA = "0x8B135C")]
	public SubCanopyPlotIO()
	{
	}
}
[Token(Token = "0x20000D8")]
public class TreeGrowthController : MonoBehaviour
{
	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxX;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxY;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxZ;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float growthRate;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool growing;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool fullyGrown;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] positionSpawns;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] cones;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SoilControllerTree soilController;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject cone;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool sproutedCones;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] positionsArms;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] arms;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject armToSpawn;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject beeHiveToSpawn;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject spawnedHive;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform hiveSpawnSpot;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject birdNest;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] spawnedBirdNests;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float growthProgress;

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x7A340C", Offset = "0x7A340C", VA = "0x7A340C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x7A3470", Offset = "0x7A3470", VA = "0x7A3470")]
	public void BoostMyGrowth()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x7A3480", Offset = "0x7A3480", VA = "0x7A3480")]
	public void MakeMeABigBoy()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x7A3554", Offset = "0x7A3554", VA = "0x7A3554")]
	public void SproutFruit()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x7A3750", Offset = "0x7A3750", VA = "0x7A3750")]
	public void SproutArms()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x7A3CFC", Offset = "0x7A3CFC", VA = "0x7A3CFC")]
	public void EmptyPlot()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x7A4134", Offset = "0x7A4134", VA = "0x7A4134")]
	public void CheckBerriesAllGone()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x7A4270", Offset = "0x7A4270", VA = "0x7A4270")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x7A476C", Offset = "0x7A476C", VA = "0x7A476C")]
	public TreeGrowthController()
	{
	}
}
[Token(Token = "0x20000D9")]
public class UserInterfaceActivator : MonoBehaviour
{
	[Token(Token = "0x2000304")]
	public enum State
	{
		[Token(Token = "0x4001951")]
		ShowingSoilUI,
		[Token(Token = "0x4001952")]
		ShowingSeedUI,
		[Token(Token = "0x4001953")]
		ShowingWaterUI,
		[Token(Token = "0x4001954")]
		ShowNoUI,
		[Token(Token = "0x4001955")]
		ShowingProgressBar
	}

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject UIObjectSoil;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject UIObjectSeeds;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject UIObjectWater;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject UIObjectProgressBar;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider sliderForProgress;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RootGrowthController rootGrowthControllerSBS;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TreeGrowthController treeGrowthControllerSBS;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BushGrowthController BushGrowthControllerSBS;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VinePlantGrowthController vinePlantGrowthControllerSBS;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SubCanopyGrowthController SubCanopyGrowthControllerSBS;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GroundCoverGrowthController GroundCoverGrowthControllerSBS;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VegetablePlantGrowthController vegetablePlantGrowthControllerSBS;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float timeLeft;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float timeLeftOrig;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool active;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool disabledCompletely;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool overRideVisibility;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public State stateUI;

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x7AC878", Offset = "0x7AC878", VA = "0x7AC878")]
	public void RevealUI()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x7ACB98", Offset = "0x7ACB98", VA = "0x7ACB98")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x7ACE50", Offset = "0x7ACE50", VA = "0x7ACE50")]
	public void HideThisUI()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x7AC908", Offset = "0x7AC908", VA = "0x7AC908")]
	public void SetupSoilUI()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x7AC9E0", Offset = "0x7AC9E0", VA = "0x7AC9E0")]
	public void SetupSeedUI()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x7ACABC", Offset = "0x7ACABC", VA = "0x7ACABC")]
	public void SetupWaterUI()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x7A4608", Offset = "0x7A4608", VA = "0x7A4608")]
	public void SetupNoUI()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x7A798C", Offset = "0x7A798C", VA = "0x7A798C")]
	public void SetupProgressBar()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x7ACF30", Offset = "0x7ACF30", VA = "0x7ACF30")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x7AD3C0", Offset = "0x7AD3C0", VA = "0x7AD3C0")]
	public void Awake()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x7AD418", Offset = "0x7AD418", VA = "0x7AD418")]
	public void ClearAfterLoadIn()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x7ACBC0", Offset = "0x7ACBC0", VA = "0x7ACBC0")]
	public void SetupLookAtConstraints()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x7AD43C", Offset = "0x7AD43C", VA = "0x7AD43C")]
	public UserInterfaceActivator()
	{
	}
}
[Token(Token = "0x20000DA")]
public class VegetableGrowthController : MonoBehaviour
{
	[Token(Token = "0x2000305")]
	public enum State
	{
		[Token(Token = "0x4001957")]
		Pumpkin,
		[Token(Token = "0x4001958")]
		Pepper,
		[Token(Token = "0x4001959")]
		Cucumber
	}

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float growthFactor;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxSize;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool setupGrabbable;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Smash smash;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool fullyGrownStartScene;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public State state;

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x7AD7C4", Offset = "0x7AD7C4", VA = "0x7AD7C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x7ADA18", Offset = "0x7ADA18", VA = "0x7ADA18")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x7ADBC0", Offset = "0x7ADBC0", VA = "0x7ADBC0")]
	public VegetableGrowthController()
	{
	}
}
[Token(Token = "0x20000DB")]
public class VegetablePlantGrabLink : MonoBehaviour
{
	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SoilController soilController;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int index;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool finishedGrowing;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool inSoil;

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x7ADBD4", Offset = "0x7ADBD4", VA = "0x7ADBD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x7ADBD8", Offset = "0x7ADBD8", VA = "0x7ADBD8")]
	public void PickMe()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x7ADDF0", Offset = "0x7ADDF0", VA = "0x7ADDF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x7ADDF4", Offset = "0x7ADDF4", VA = "0x7ADDF4")]
	public VegetablePlantGrabLink()
	{
	}
}
[Token(Token = "0x20000DC")]
public class ScrollControl : MonoBehaviour
{
	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject connectedScrollHandle;

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x7940F4", Offset = "0x7940F4", VA = "0x7940F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x7940F8", Offset = "0x7940F8", VA = "0x7940F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x794180", Offset = "0x794180", VA = "0x794180")]
	public ScrollControl()
	{
	}
}
[Token(Token = "0x20000DD")]
public class ScrollHelper : MonoBehaviour
{
	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConfigurableJoint configurableJoint;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject otherScroll;

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x794188", Offset = "0x794188", VA = "0x794188")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x79418C", Offset = "0x79418C", VA = "0x79418C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x794190", Offset = "0x794190", VA = "0x794190")]
	public ScrollHelper()
	{
	}
}
[Token(Token = "0x20000DE")]
public class ScrollPositionControl : MonoBehaviour
{
	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 originalPos;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Quaternion originalRot;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool postGrab;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxDistance;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool midGrab;

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x794198", Offset = "0x794198", VA = "0x794198")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x79420C", Offset = "0x79420C", VA = "0x79420C")]
	public void BeenGrabbedAndDropped()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x794218", Offset = "0x794218", VA = "0x794218")]
	public void PutMeBack()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x7944FC", Offset = "0x7944FC", VA = "0x7944FC")]
	public void AcknowledgeGrab()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x794508", Offset = "0x794508", VA = "0x794508")]
	public void CheckDistance()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x7945F4", Offset = "0x7945F4", VA = "0x7945F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x794638", Offset = "0x794638", VA = "0x794638")]
	public ScrollPositionControl()
	{
	}
}
[Token(Token = "0x20000DF")]
public class ScrollUnraveler : MonoBehaviour
{
	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PCControls pCControls;

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x794648", Offset = "0x794648", VA = "0x794648")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x79464C", Offset = "0x79464C", VA = "0x79464C")]
	public void BeenGrabbed()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x794778", Offset = "0x794778", VA = "0x794778")]
	public void BeenDropped()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x7948A4", Offset = "0x7948A4", VA = "0x7948A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x7948A8", Offset = "0x7948A8", VA = "0x7948A8")]
	public ScrollUnraveler()
	{
	}
}
[Token(Token = "0x20000E0")]
public class SeedControlProtoSecondStage : MonoBehaviour
{
	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TreePlotIO treePlotIO;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VinePlotIO vinePlotIO;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GroundCoverPlotIO groundCoverPlotIO;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SubCanopyPlotIO subCanopyPlotIO;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BushIOV2 bushIOV2;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VegetablePlotIO vegetablePlotIO;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RootPlotIO rootPlotIO;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int seedHits;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject treePlotPrefab;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject vinePlotPrefab;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject groundCoverPlotPrefab;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject subCanopyPlotPrefab;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject bushPlotPrefab;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject vegePlotPrefab;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject rootPlotPrefab;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject spawnedPlot;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject playerCamera;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public LookAtConstraint lookAtConstraint;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GenericObjectIO secondProtoStageIO;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool setupSeedStage;

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x795724", Offset = "0x795724", VA = "0x795724")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x796DFC", Offset = "0x796DFC", VA = "0x796DFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x796E00", Offset = "0x796E00", VA = "0x796E00")]
	private void Update()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x796E04", Offset = "0x796E04", VA = "0x796E04")]
	public SeedControlProtoSecondStage()
	{
	}
}
[Token(Token = "0x20000E1")]
public class SeedGroundCover : MonoBehaviour
{
	[Token(Token = "0x2000306")]
	public enum State
	{
		[Token(Token = "0x400195B")]
		Pumpkin,
		[Token(Token = "0x400195C")]
		Turnip,
		[Token(Token = "0x400195D")]
		Pepper
	}

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] pumpkins;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] turnips;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] pepper;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State state;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool readyToGrow;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int waterHits;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody rigidbody;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SoilControllerGroundCover soilController;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int index;

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x796E0C", Offset = "0x796E0C", VA = "0x796E0C")]
	public GameObject PlantSeed()
	{
		return null;
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x797444", Offset = "0x797444", VA = "0x797444")]
	public void RunDelay()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x7974BC", Offset = "0x7974BC", VA = "0x7974BC")]
	public void StopMeAfterDelay()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x7975BC", Offset = "0x7975BC", VA = "0x7975BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x7975C0", Offset = "0x7975C0", VA = "0x7975C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x7975C4", Offset = "0x7975C4", VA = "0x7975C4")]
	public SeedGroundCover()
	{
	}
}
[Token(Token = "0x20000E2")]
public class SetupStaticData : MonoBehaviour
{
	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera mainCamera;

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x798C20", Offset = "0x798C20", VA = "0x798C20")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x798C78", Offset = "0x798C78", VA = "0x798C78")]
	public SetupStaticData()
	{
	}
}
[Token(Token = "0x20000E3")]
public class ShovelController : MonoBehaviour
{
	[Token(Token = "0x2000307")]
	public enum PlotShapeToPutDown
	{
		[Token(Token = "0x400195F")]
		Hex,
		[Token(Token = "0x4001960")]
		Square,
		[Token(Token = "0x4001961")]
		Circle
	}

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject SoilBlob;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform postionBlob;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool holdingPlot;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool holdingProtoPlot;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject plotHolding;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool lockoutActive;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float timeLeft;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource audio;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip clipDirt1;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ShovelPositionPlot shovelPositionPlot;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject plotPositionIndicator;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject plotPositionIndicatorAlt;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject protoPlot;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GenericObjectIO objectIOForSimplifiedPlot;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GenericObjectIO objectIOForSecondStagePlot;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PlotShapeMaster plotShapeMaster;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ToolLevelController toolLevelController;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PlotShapeToPutDown plotShape;

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x798C80", Offset = "0x798C80", VA = "0x798C80")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x798CA0", Offset = "0x798CA0", VA = "0x798CA0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x79AC68", Offset = "0x79AC68", VA = "0x79AC68")]
	public void PlayDirt()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x79B000", Offset = "0x79B000", VA = "0x79B000")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x79B04C", Offset = "0x79B04C", VA = "0x79B04C")]
	public ShovelController()
	{
	}
}
[Token(Token = "0x20000E4")]
public class ShovelPlotShapeControl : MonoBehaviour
{
	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject plotBaseHex;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject plotBaseSquare;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject plotBaseCircle;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public XRController controllerOne;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public XRController controllerTwo;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool currentState2;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int currentStateSet;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float downTime;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool switchLockout;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Grabbable parentGrab;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ShovelController shovelControl;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ShovelPositionPlot shovelPositionPlot;

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x79B05C", Offset = "0x79B05C", VA = "0x79B05C")]
	public void CheckInput()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x79AE38", Offset = "0x79AE38", VA = "0x79AE38")]
	public void MakePrePlotHex()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x79AD48", Offset = "0x79AD48", VA = "0x79AD48")]
	public void MakePrePlotSquare()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x79ADC0", Offset = "0x79ADC0", VA = "0x79ADC0")]
	public void MakePrePlotCircle()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x79B2F0", Offset = "0x79B2F0", VA = "0x79B2F0")]
	public void SetupShovelShapeAtStart()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x79AED8", Offset = "0x79AED8", VA = "0x79AED8")]
	public void ResetToPreference()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x79B158", Offset = "0x79B158", VA = "0x79B158")]
	public void CycleThroughShapes()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x79B398", Offset = "0x79B398", VA = "0x79B398")]
	private void Start()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x79B478", Offset = "0x79B478", VA = "0x79B478")]
	private void Update()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x79B4D0", Offset = "0x79B4D0", VA = "0x79B4D0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x79B548", Offset = "0x79B548", VA = "0x79B548")]
	public ShovelPlotShapeControl()
	{
	}
}
[Token(Token = "0x20000E5")]
public class ShovelPositionPlot : MonoBehaviour
{
	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prePlot;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool grabbed;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool showingIndicator;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool dirtOnShovel;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool showingIndicatorAlt;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 contactPoint;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] raycastPoints;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Grabbable grabbableShovelParent;

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x79B558", Offset = "0x79B558", VA = "0x79B558")]
	public void BeenGrabbed()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x79B564", Offset = "0x79B564", VA = "0x79B564")]
	public void NotGrabbedAnymore()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x79B59C", Offset = "0x79B59C", VA = "0x79B59C")]
	public void DelayedIndicate()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x79B5A8", Offset = "0x79B5A8", VA = "0x79B5A8")]
	public void DelayedIndicateAlt()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x79B5BC", Offset = "0x79B5BC", VA = "0x79B5BC")]
	public void ShowIndicatorAlt()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x79ACF0", Offset = "0x79ACF0", VA = "0x79ACF0")]
	public void ShowIndicator()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x79AEB0", Offset = "0x79AEB0", VA = "0x79AEB0")]
	public void StopShowIndicator()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x79B614", Offset = "0x79B614", VA = "0x79B614")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x79B6D8", Offset = "0x79B6D8", VA = "0x79B6D8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x79B770", Offset = "0x79B770", VA = "0x79B770")]
	private void Start()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x79B790", Offset = "0x79B790", VA = "0x79B790")]
	private void Update()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x79C1AC", Offset = "0x79C1AC", VA = "0x79C1AC")]
	public ShovelPositionPlot()
	{
	}
}
[Token(Token = "0x20000E6")]
public class SmoothTurnMan : LocomotionProvider
{
	[Token(Token = "0x2000308")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F720", Offset = "0x56F720")]
	private sealed class <TurnRoutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SmoothTurnMan <>4__this;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float turnAmount;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <previousTurnChange>5__2;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700061A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BBC")]
			[Address(RVA = "0x8996C8", Offset = "0x8996C8", VA = "0x8996C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700061B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BBE")]
			[Address(RVA = "0x899730", Offset = "0x899730", VA = "0x899730", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x8993B8", Offset = "0x8993B8", VA = "0x8993B8")]
		[DebuggerHidden]
		public <TurnRoutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x899590", Offset = "0x899590", VA = "0x899590", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x899594", Offset = "0x899594", VA = "0x899594", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x8996D0", Offset = "0x8996D0", VA = "0x8996D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float turnSegment;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float turnTime;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputHelpers.Button rightTurnButton;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public InputHelpers.Button leftTurnButton;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<XRController> controllers;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float targetTurnAmount;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float smoothTurnAmount;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Slider sliderForValue;

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x898A84", Offset = "0x898A84", VA = "0x898A84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x898AF8", Offset = "0x898AF8", VA = "0x898AF8")]
	public void SmoothTurnReduce()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x898BD0", Offset = "0x898BD0", VA = "0x898BD0")]
	public void SmoothTurnIncrease()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x898CA8", Offset = "0x898CA8", VA = "0x898CA8")]
	public void SmoothTurnSet()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x898D90", Offset = "0x898D90", VA = "0x898D90")]
	private void CheckForInput()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x8991C4", Offset = "0x8991C4", VA = "0x8991C4")]
	private float CheckForTurn(XRController controller)
	{
		return default(float);
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x899300", Offset = "0x899300", VA = "0x899300")]
	private void TrySmoothTurn()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x899338", Offset = "0x899338", VA = "0x899338")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57B794", Offset = "0x57B794")]
	private IEnumerator TurnRoutine(float turnAmount)
	{
		return null;
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x8993E4", Offset = "0x8993E4", VA = "0x8993E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x899504", Offset = "0x899504", VA = "0x899504")]
	public SmoothTurnMan()
	{
	}
}
[Token(Token = "0x20000E7")]
public class SmoothTurnManager : MonoBehaviour
{
	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SnapTurnProvider turnProvider;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MovementController movementController;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public XRRayInteractor rayInteractorController1;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public XRRayInteractor rayInteractorController2;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LineRenderer lineRenderController1;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LineRenderer lineRenderController2;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public XRInteractorLineVisual lineVisualController1;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public XRInteractorLineVisual lineVisualController2;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SmoothTurnMan smoothTurnMan;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Climber climber;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int smoothTurn;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int teleportMove;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public HandDistanceGrab distanceGrabForUIActivateLeft;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public HandDistanceGrab distanceGrabForUIActivateRight;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text textSnapTurn;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text textSmoothTurn;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text textTeleport;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HandDistanceGrab handDistanceGrabLeft;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public HandDistanceGrab handDistanceGrabRight;

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x899738", Offset = "0x899738", VA = "0x899738")]
	private void Start()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x899CCC", Offset = "0x899CCC", VA = "0x899CCC")]
	public void RestartLevel()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x899928", Offset = "0x899928", VA = "0x899928")]
	public void SwitchToSmoothTurn()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x899E40", Offset = "0x899E40", VA = "0x899E40")]
	public void SwitchBackToSnap()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x899AEC", Offset = "0x899AEC", VA = "0x899AEC")]
	public void SwitchToTeleport()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x899D04", Offset = "0x899D04", VA = "0x899D04")]
	public void SwitchTeleportOff()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x899F78", Offset = "0x899F78", VA = "0x899F78")]
	public void ResetAccordingToPreferences()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x89A168", Offset = "0x89A168", VA = "0x89A168")]
	private void Update()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x89A16C", Offset = "0x89A16C", VA = "0x89A16C")]
	public SmoothTurnManager()
	{
	}
}
[Token(Token = "0x20000E8")]
public class SnapPositionAssist : MonoBehaviour
{
	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] positionAssistPoints;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool setup;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool runAlways;

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x89A174", Offset = "0x89A174", VA = "0x89A174")]
	private void Start()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x89A178", Offset = "0x89A178", VA = "0x89A178")]
	public void PlotsNear()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x89AA8C", Offset = "0x89AA8C", VA = "0x89AA8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x89AB10", Offset = "0x89AB10", VA = "0x89AB10")]
	public SnapPositionAssist()
	{
	}
}
[Token(Token = "0x20000E9")]
public class SoilControllerGroundCover : MonoBehaviour
{
	[Token(Token = "0x2000309")]
	public enum State
	{
		[Token(Token = "0x4001969")]
		Empty,
		[Token(Token = "0x400196A")]
		HasSoil,
		[Token(Token = "0x400196B")]
		HasSeeds,
		[Token(Token = "0x400196C")]
		HasPlants,
		[Token(Token = "0x400196D")]
		HasFullyGrownPlants
	}

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer renderer;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material material1;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material2;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material material3;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material soilPlotEmptyMat;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public State state;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material materialWetSoil;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hits;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int hitsSeeds;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int hitsWater;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int hitAltIngredientMush;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int hitAltIngredientFish;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float alpha;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] seeds;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] plants;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool readyToPlant;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool plantingComplete;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool wateringComplete;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	public bool seedActivationComplete;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text text;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text text2;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text text3;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text textAltIngredientFish;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text textAltIngredientMush;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject effectSoilHit;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject effectSeedHit;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject effectWaterHit;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject effectPlantSprout;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UserInterfaceActivator userInterfaceActivator;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int index;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GroundCoverPlotIO plotIO;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GenericObjectIO objectIOForFirstStageProtoPlot;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject firstStageProtoPlotPrefabFromScene;

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x89E56C", Offset = "0x89E56C", VA = "0x89E56C")]
	private void Start()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x89E570", Offset = "0x89E570", VA = "0x89E570")]
	public void SetMeUp()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x89EB6C", Offset = "0x89EB6C", VA = "0x89EB6C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x89FCFC", Offset = "0x89FCFC", VA = "0x89FCFC")]
	public void CreateSeedAtStart(int pumpkins, int turnips)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x89FD00", Offset = "0x89FD00", VA = "0x89FD00")]
	public void CheckPlantsAllGone()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x89FA9C", Offset = "0x89FA9C", VA = "0x89FA9C")]
	public void ActivateSeeds()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x8A00A4", Offset = "0x8A00A4", VA = "0x8A00A4")]
	public void PlantPumpkinSeed(Transform positionSpawn)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x8A00A8", Offset = "0x8A00A8", VA = "0x8A00A8")]
	public void PlantFromRain()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x8A026C", Offset = "0x8A026C", VA = "0x8A026C")]
	public SoilControllerGroundCover()
	{
	}
}
[Token(Token = "0x20000EA")]
public class SoilControllerVine : MonoBehaviour
{
	[Token(Token = "0x200030A")]
	public enum State
	{
		[Token(Token = "0x400196F")]
		Empty,
		[Token(Token = "0x4001970")]
		HasSoil,
		[Token(Token = "0x4001971")]
		HasSeeds,
		[Token(Token = "0x4001972")]
		HasPlants,
		[Token(Token = "0x4001973")]
		HasFullyGrownPlants
	}

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer renderer;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material material1;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material2;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material material3;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material soilPlotEmptyMat;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public State state;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material materialWetSoil;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hits;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int hitsSeeds;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int hitsWater;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int hitAltIngredientMush;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int hitAltIngredientFish;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float alpha;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] seeds;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] plants;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool readyToPlant;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool plantingComplete;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool wateringComplete;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	public bool seedActivationComplete;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text text;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text text2;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text text3;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text textAltIngredientFish;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text textAltIngredientMush;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject effectSoilHit;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject effectSeedHit;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject effectWaterHit;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject effectPlantSprout;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UserInterfaceActivator userInterfaceActivator;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int index;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public VinePlotIO plotIO;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GenericObjectIO objectIOForFirstStageProtoPlot;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject firstStageProtoPlotPrefabFromScene;

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x8A602C", Offset = "0x8A602C", VA = "0x8A602C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x8A6030", Offset = "0x8A6030", VA = "0x8A6030")]
	public void SetMeUp()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x8A6654", Offset = "0x8A6654", VA = "0x8A6654")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x8A77E4", Offset = "0x8A77E4", VA = "0x8A77E4")]
	public void CreateSeedAtStart(int pumpkins, int turnips)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x8A77E8", Offset = "0x8A77E8", VA = "0x8A77E8")]
	public void CheckPlantsAllGone()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x8A7584", Offset = "0x8A7584", VA = "0x8A7584")]
	public void ActivateSeeds()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x8A7B8C", Offset = "0x8A7B8C", VA = "0x8A7B8C")]
	public void PlantPumpkinSeed(Transform positionSpawn)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x8A7B90", Offset = "0x8A7B90", VA = "0x8A7B90")]
	public void PlantFromRain()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x8A7D54", Offset = "0x8A7D54", VA = "0x8A7D54")]
	public SoilControllerVine()
	{
	}
}
[Token(Token = "0x20000EB")]
public class SoilFloorDetection : MonoBehaviour
{
	[Token(Token = "0x600053C")]
	[Address(RVA = "0x8A7D5C", Offset = "0x8A7D5C", VA = "0x8A7D5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x8A7D60", Offset = "0x8A7D60", VA = "0x8A7D60")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x8A7E34", Offset = "0x8A7E34", VA = "0x8A7E34")]
	private void Update()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x8A7E38", Offset = "0x8A7E38", VA = "0x8A7E38")]
	public SoilFloorDetection()
	{
	}
}
[Token(Token = "0x20000EC")]
public class SphereLiquidControl : MonoBehaviour
{
	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material matToScroll;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float offset;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float increment;

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x8A7E40", Offset = "0x8A7E40", VA = "0x8A7E40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x8A7EA0", Offset = "0x8A7EA0", VA = "0x8A7EA0")]
	public void OffsetMaterial()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x8A7F30", Offset = "0x8A7F30", VA = "0x8A7F30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x8A7F34", Offset = "0x8A7F34", VA = "0x8A7F34")]
	public SphereLiquidControl()
	{
	}
}
[Token(Token = "0x20000ED")]
public class SplitStorage : MonoBehaviour
{
	[Token(Token = "0x6000544")]
	[Address(RVA = "0x8A7F48", Offset = "0x8A7F48", VA = "0x8A7F48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x8A7F4C", Offset = "0x8A7F4C", VA = "0x8A7F4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x8A7F50", Offset = "0x8A7F50", VA = "0x8A7F50")]
	public SplitStorage()
	{
	}
}
[Token(Token = "0x20000EE")]
public class SubCanopyGrowthController : MonoBehaviour
{
	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxX;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxY;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxZ;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float growthRate;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool growing;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool fullyGrown;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SoilControllerSubCanopy soilControllerSubCanopy;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] positionSpawns;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] fruits;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject lemon;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 originPosition;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion originRotation;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float shake_decay;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float shake_intensity;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float temp_shake_intensity;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource audioSource;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip bushDone;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool canopySproutedFruit;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject canopyTop;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject canopyToSpawn;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform positionForCanopy;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float growthProgress;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool emptySubCanopyForAesthetics;

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x8AC5BC", Offset = "0x8AC5BC", VA = "0x8AC5BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x8AC804", Offset = "0x8AC804", VA = "0x8AC804")]
	public void EmptyPlot()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x8ACB24", Offset = "0x8ACB24", VA = "0x8ACB24")]
	public void CheckBerriesAllGone()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x8ACEBC", Offset = "0x8ACEBC", VA = "0x8ACEBC")]
	private void Shake()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x8ACF48", Offset = "0x8ACF48", VA = "0x8ACF48")]
	public void MakeMeABigBoy()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x8AD26C", Offset = "0x8AD26C", VA = "0x8AD26C")]
	public void SproutFruit()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x8AD690", Offset = "0x8AD690", VA = "0x8AD690")]
	private void Update()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x8ADCE4", Offset = "0x8ADCE4", VA = "0x8ADCE4")]
	public SubCanopyGrowthController()
	{
	}
}
[Token(Token = "0x20000EF")]
public class SubCanopySpawnStorage : MonoBehaviour
{
	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] spawnPositions;

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x79CA2C", Offset = "0x79CA2C", VA = "0x79CA2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x79CA30", Offset = "0x79CA30", VA = "0x79CA30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x79CA34", Offset = "0x79CA34", VA = "0x79CA34")]
	public SubCanopySpawnStorage()
	{
	}
}
[Token(Token = "0x20000F0")]
public class TImeController : MonoBehaviour
{
	[Token(Token = "0x200030B")]
	public enum TimeState
	{
		[Token(Token = "0x4001975")]
		Morning,
		[Token(Token = "0x4001976")]
		Midday,
		[Token(Token = "0x4001977")]
		Evening,
		[Token(Token = "0x4001978")]
		Night
	}

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeLeft;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeStorage;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light mainLight;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color colorMorning;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color colorMidday;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color colorEvening;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color colorNight;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color colorRainingSoft;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color colorRainingHard;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color colorAmbientMorning;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color colorAmbientMidday;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color colorAmbientEvening;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Color colorAmbientNight;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Color colorSkyboxMorning;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Color colorSkyboxMidday;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Color colorSkyboxEvening;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Color colorSkyboxNight;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Color skyboxUsing;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Material skybox;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public TimeState state;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public bool changingColor;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float crossColorTime;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject[] animals;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public AnimalActivityController animalActivityController;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public HorseNavControl horseNavControl;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public QuestQueue questQueue;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject rainObject;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool raining;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	public bool setupRain;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x79CA3C", Offset = "0x79CA3C", VA = "0x79CA3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x79CB2C", Offset = "0x79CB2C", VA = "0x79CB2C")]
	public void ChangeTime()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x79CCA8", Offset = "0x79CCA8", VA = "0x79CCA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x79D8B0", Offset = "0x79D8B0", VA = "0x79D8B0")]
	public TImeController()
	{
	}
}
[Token(Token = "0x20000F1")]
public class TextFPSCounter : MonoBehaviour
{
	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool show;

	[Token(Token = "0x40008A5")]
	private const int targetFPS = 60;

	[Token(Token = "0x40008A6")]
	private const float updateInterval = 0.5f;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int framesCount;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float framesTime;

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x79D8D4", Offset = "0x79D8D4", VA = "0x79D8D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x79D964", Offset = "0x79D964", VA = "0x79D964")]
	private void Update()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x79DB1C", Offset = "0x79DB1C", VA = "0x79DB1C")]
	public TextFPSCounter()
	{
	}
}
[Token(Token = "0x20000F2")]
public class ThorGrabController : MonoBehaviour
{
	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject shovel;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject axe;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pickAxe;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject bucket;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject bucketPrefab;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject fishingRod;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject positionOne;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject positionTwo;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject positionThree;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject positionFour;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject positionFive;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public XRController controllerOne;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public XRController controllerTwo;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material glowMaterial;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool currentState2;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool currentState4;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public bool currentlyPressed;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	public bool pressedKeyboardInput;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool putInPostion;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool droppedDown;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 originalPosAxe;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 originalPosPickAxe;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 originalPosShovel;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 originalPosFishingRod;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 originalPosBucket;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Quaternion originalRotAxe;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Quaternion originalRotPickAxe;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Quaternion originalRotShovel;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Quaternion originalRotFishingRod;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Quaternion originalRotBucket;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public bool onPC;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public WatchControl watchControl;

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x79DB24", Offset = "0x79DB24", VA = "0x79DB24")]
	private void Start()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x79DB28", Offset = "0x79DB28", VA = "0x79DB28")]
	public void PutInPosition()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x79E414", Offset = "0x79E414", VA = "0x79E414")]
	public void DropAllItems()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x79E984", Offset = "0x79E984", VA = "0x79E984")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x79EA8C", Offset = "0x79EA8C", VA = "0x79EA8C")]
	private void Update()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x79EBD4", Offset = "0x79EBD4", VA = "0x79EBD4")]
	public ThorGrabController()
	{
	}
}
[Token(Token = "0x20000F3")]
public class TimeControlCheckForWatering : MonoBehaviour
{
	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TImeController timeControl;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool raining;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VinePlotIO vinePlotIO;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RootPlotIO rootPlotIO;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GroundCoverPlotIO groundCoverPlotIO;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BushIOV2 bushIO;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TreePlotIO treePlotIO;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VegetablePlotIO vegetablePlotIO;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SubCanopyPlotIO subCanopyPlotIO;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] objectList;

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x79EBDC", Offset = "0x79EBDC", VA = "0x79EBDC")]
	public IEnumerator CheckIFRaining()
	{
		return null;
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x79EC78", Offset = "0x79EC78", VA = "0x79EC78")]
	public void WaterEveryone()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x79F260", Offset = "0x79F260", VA = "0x79F260")]
	private void Start()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x79F2BC", Offset = "0x79F2BC", VA = "0x79F2BC")]
	public TimeControlCheckForWatering()
	{
	}
}
[Token(Token = "0x20000F4")]
public class TimeControllerSimple : MonoBehaviour
{
	[Token(Token = "0x6000563")]
	[Address(RVA = "0x79F2C4", Offset = "0x79F2C4", VA = "0x79F2C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x79F2C8", Offset = "0x79F2C8", VA = "0x79F2C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x79F2CC", Offset = "0x79F2CC", VA = "0x79F2CC")]
	public TimeControllerSimple()
	{
	}
}
[Token(Token = "0x20000F5")]
public class GodCam : MonoBehaviour
{
	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveFactor;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotationFactor;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float rotX;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float rotY;

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x93337C", Offset = "0x93337C", VA = "0x93337C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x933404", Offset = "0x933404", VA = "0x933404")]
	private void Update()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x933738", Offset = "0x933738", VA = "0x933738")]
	public GodCam()
	{
	}
}
[Token(Token = "0x20000F6")]
public class AnimatedWind : MonoBehaviour
{
	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F730", Offset = "0x56F730")]
	private sealed class <loop>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimatedWind <>4__this;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700061C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BC2")]
			[Address(RVA = "0xBD5AC8", Offset = "0xBD5AC8", VA = "0xBD5AC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700061D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BC4")]
			[Address(RVA = "0xBD5B30", Offset = "0xBD5B30", VA = "0xBD5B30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xBD5960", Offset = "0xBD5960", VA = "0xBD5960")]
		[DebuggerHidden]
		public <loop>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xBD5994", Offset = "0xBD5994", VA = "0xBD5994", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xBD5998", Offset = "0xBD5998", VA = "0xBD5998", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xBD5AD0", Offset = "0xBD5AD0", VA = "0xBD5AD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GifData gif;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer meshy;

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xBD5884", Offset = "0xBD5884", VA = "0xBD5884")]
	private void Start()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xBD58F0", Offset = "0xBD58F0", VA = "0xBD58F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57B7F8", Offset = "0x57B7F8")]
	private IEnumerator loop()
	{
		return null;
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xBD598C", Offset = "0xBD598C", VA = "0xBD598C")]
	public AnimatedWind()
	{
	}
}
[Token(Token = "0x20000F7")]
public class GifData : ScriptableObject
{
	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float endurance;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D[] frames;

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x933288", Offset = "0x933288", VA = "0x933288")]
	public void Remove()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x933374", Offset = "0x933374", VA = "0x933374")]
	public GifData()
	{
	}
}
[Token(Token = "0x20000F8")]
public class RotateHeli : MonoBehaviour
{
	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float rotY;

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x793478", Offset = "0x793478", VA = "0x793478")]
	private void Start()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x79347C", Offset = "0x79347C", VA = "0x79347C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x793540", Offset = "0x793540", VA = "0x793540")]
	public RotateHeli()
	{
	}
}
[Token(Token = "0x20000F9")]
public class WindMapOffset : MonoBehaviour
{
	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 speed;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer meshy;

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x10771AC", Offset = "0x10771AC", VA = "0x10771AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x1077204", Offset = "0x1077204", VA = "0x1077204")]
	private void Update()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x107731C", Offset = "0x107731C", VA = "0x107731C")]
	public WindMapOffset()
	{
	}
}
[Token(Token = "0x20000FA")]
public class ToolLevelController : MonoBehaviour
{
	[Token(Token = "0x200030D")]
	public enum ToolType
	{
		[Token(Token = "0x400197E")]
		Axe,
		[Token(Token = "0x400197F")]
		PickAxe,
		[Token(Token = "0x4001980")]
		FishingRod,
		[Token(Token = "0x4001981")]
		Bucket,
		[Token(Token = "0x4001982")]
		Shovel
	}

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string toolDescriptorForIO;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int level;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int hitsThisTool;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ToolType tool;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider slider;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI textForLevel;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject PopUpForLevelCompletion;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float sliderValue;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float multiplier;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool demo;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int upgradeLevel;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material[] mats;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MeshRenderer[] renderers;

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x79F3DC", Offset = "0x79F3DC", VA = "0x79F3DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x79FA28", Offset = "0x79FA28", VA = "0x79FA28")]
	public void UpgradeLooksForUpgradeLevel()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x7A0120", Offset = "0x7A0120", VA = "0x7A0120")]
	public void SetHitsTool(int increaseAmount)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x7A0238", Offset = "0x7A0238", VA = "0x7A0238")]
	public void LevelUP()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x7A08D8", Offset = "0x7A08D8", VA = "0x7A08D8")]
	public void PlayLevelUpParticles()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x7A0948", Offset = "0x7A0948", VA = "0x7A0948")]
	public void SetupNextLevel()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x7A094C", Offset = "0x7A094C", VA = "0x7A094C")]
	public void ChangeSettingsBasedOnLevel()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x7A0950", Offset = "0x7A0950", VA = "0x7A0950")]
	public void ChangeRigidBody(float decrease)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x7A0A00", Offset = "0x7A0A00", VA = "0x7A0A00")]
	public ToolLevelController()
	{
	}
}
[Token(Token = "0x20000FB")]
public class TouchDetectorWormPlot : MonoBehaviour
{
	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject particleEffectWhenTouched;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject worm;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform spawnPosition;

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x7A0A08", Offset = "0x7A0A08", VA = "0x7A0A08")]
	private void Start()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x7A0A0C", Offset = "0x7A0A0C", VA = "0x7A0A0C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x7A0E3C", Offset = "0x7A0E3C", VA = "0x7A0E3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x7A0E40", Offset = "0x7A0E40", VA = "0x7A0E40")]
	public TouchDetectorWormPlot()
	{
	}
}
[Token(Token = "0x20000FC")]
public class TownfolkCheckDelivery : MonoBehaviour
{
	[Token(Token = "0x6000581")]
	[Address(RVA = "0x7A0E48", Offset = "0x7A0E48", VA = "0x7A0E48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x7A0E4C", Offset = "0x7A0E4C", VA = "0x7A0E4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x7A0E50", Offset = "0x7A0E50", VA = "0x7A0E50")]
	public TownfolkCheckDelivery()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FD")]
public class TownfolkEventOnDistance : UnityEvent<string>
{
	[Token(Token = "0x6000584")]
	[Address(RVA = "0x7A1344", Offset = "0x7A1344", VA = "0x7A1344")]
	public TownfolkEventOnDistance()
	{
	}
}
[Token(Token = "0x20000FE")]
public class TownfolkController : MonoBehaviour
{
	[Token(Token = "0x200030E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F740", Offset = "0x56F740")]
	private sealed class <StopAnimation>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeToDelay;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TownfolkController <>4__this;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string animatorIdentifier;

		[Token(Token = "0x1700061E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BC8")]
			[Address(RVA = "0x7A12D4", Offset = "0x7A12D4", VA = "0x7A12D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700061F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BCA")]
			[Address(RVA = "0x7A133C", Offset = "0x7A133C", VA = "0x7A133C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x7A11D4", Offset = "0x7A11D4", VA = "0x7A11D4")]
		[DebuggerHidden]
		public <StopAnimation>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x7A120C", Offset = "0x7A120C", VA = "0x7A120C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x7A1210", Offset = "0x7A1210", VA = "0x7A1210", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x7A12DC", Offset = "0x7A12DC", VA = "0x7A12DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject player;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distanceFromPlayer;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool setAnimation;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SalesPanelToActivate;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TownfolkEventOnDistance distanceEvent;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool distanceEventActivate;

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x7A0E58", Offset = "0x7A0E58", VA = "0x7A0E58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x7A0EB4", Offset = "0x7A0EB4", VA = "0x7A0EB4")]
	public void SetDistanceActive()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x7A0EC0", Offset = "0x7A0EC0", VA = "0x7A0EC0")]
	public void CheckDistance()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x7A1174", Offset = "0x7A1174", VA = "0x7A1174")]
	public void PlayThanks()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x7A10E8", Offset = "0x7A10E8", VA = "0x7A10E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57B85C", Offset = "0x57B85C")]
	private IEnumerator StopAnimation(float timeToDelay, string animatorIdentifier)
	{
		return null;
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x7A1200", Offset = "0x7A1200", VA = "0x7A1200")]
	private void Update()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x7A1204", Offset = "0x7A1204", VA = "0x7A1204")]
	public TownfolkController()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FF")]
public class MyEvent : UnityEvent<string>
{
	[Token(Token = "0x600058C")]
	[Address(RVA = "0xABC874", Offset = "0xABC874", VA = "0xABC874")]
	public MyEvent()
	{
	}
}
[Token(Token = "0x2000100")]
public class TownfolkSpeechControl : MonoBehaviour
{
	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject speechStart;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject speechOption1;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject speechOption2;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject speechOption3;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject button1;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject button2;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject button3;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject inventorySphereToActivate;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject speechComplete;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject speechNotTalkingYet;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MyEvent TestEvent;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public QuestCheckTownfolk questCheckTownfolk;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool questComplete;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool activeQuest;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public QuestLogControl questLogControl;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] optionalQuestSpheresToActivate;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject optionalSpeechPartialCompletion;

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x7A1394", Offset = "0x7A1394", VA = "0x7A1394")]
	public void SwitchIntoSpeech1()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x7A1D74", Offset = "0x7A1D74", VA = "0x7A1D74")]
	public void SwitchIntoSpeech2()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x7A1F0C", Offset = "0x7A1F0C", VA = "0x7A1F0C")]
	public void SwitchIntoSpeech3()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x7A20B4", Offset = "0x7A20B4", VA = "0x7A20B4")]
	public void SwitchIntoSpeechBeginAfterBlock()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x7A2274", Offset = "0x7A2274", VA = "0x7A2274")]
	public void Ping()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x7A1BB8", Offset = "0x7A1BB8", VA = "0x7A1BB8")]
	public void ShowSuccessText()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x7A22E0", Offset = "0x7A22E0", VA = "0x7A22E0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x7A15BC", Offset = "0x7A15BC", VA = "0x7A15BC")]
	public void PopIntoQuestLog()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x7A2320", Offset = "0x7A2320", VA = "0x7A2320")]
	public void TurnOffSpeechForNow()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x7A24D4", Offset = "0x7A24D4", VA = "0x7A24D4")]
	public void ShowPartialSuccessText()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x7A26D0", Offset = "0x7A26D0", VA = "0x7A26D0")]
	public void CheckAllQuestsComplete()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x7A291C", Offset = "0x7A291C", VA = "0x7A291C")]
	public TownfolkSpeechControl()
	{
	}
}
[Token(Token = "0x2000101")]
public class TraderController : MonoBehaviour
{
	[Token(Token = "0x200030F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F750", Offset = "0x56F750")]
	private sealed class <StopAnimation>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeToDelay;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TraderController <>4__this;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string animatorIdentifier;

		[Token(Token = "0x17000620")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0x7A2F00", Offset = "0x7A2F00", VA = "0x7A2F00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000621")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0x7A2F68", Offset = "0x7A2F68", VA = "0x7A2F68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x7A2E00", Offset = "0x7A2E00", VA = "0x7A2E00")]
		[DebuggerHidden]
		public <StopAnimation>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x7A2E38", Offset = "0x7A2E38", VA = "0x7A2E38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x7A2E3C", Offset = "0x7A2E3C", VA = "0x7A2E3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x7A2F08", Offset = "0x7A2F08", VA = "0x7A2F08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject player;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationClip clipWaving;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationClip clipThanks;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceFromPlayer;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool setAnimation;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject SalesPanelToActivate;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject SalesPanelToActivate2;

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x7A292C", Offset = "0x7A292C", VA = "0x7A292C")]
	private void Start()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x7A2988", Offset = "0x7A2988", VA = "0x7A2988")]
	public void CheckDistance()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x7A2CBC", Offset = "0x7A2CBC", VA = "0x7A2CBC")]
	public void PlayThanks()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x7A2D50", Offset = "0x7A2D50", VA = "0x7A2D50")]
	public void StopCheckingDistance()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x7A2DA4", Offset = "0x7A2DA4", VA = "0x7A2DA4")]
	public void StartCheckingDistanceAgain()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x7A2C30", Offset = "0x7A2C30", VA = "0x7A2C30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57B8C0", Offset = "0x57B8C0")]
	private IEnumerator StopAnimation(float timeToDelay, string animatorIdentifier)
	{
		return null;
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x7A2E2C", Offset = "0x7A2E2C", VA = "0x7A2E2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x7A2E30", Offset = "0x7A2E30", VA = "0x7A2E30")]
	public TraderController()
	{
	}
}
[Token(Token = "0x2000102")]
public class TreeAnchor : MonoBehaviour
{
	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool setup;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool floorAnchor;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TreePlantController treePlantController;

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x7A2F70", Offset = "0x7A2F70", VA = "0x7A2F70")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x7A2F74", Offset = "0x7A2F74", VA = "0x7A2F74")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x7A3070", Offset = "0x7A3070", VA = "0x7A3070")]
	public void MakeAnchor()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x7A3154", Offset = "0x7A3154", VA = "0x7A3154")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x7A3158", Offset = "0x7A3158", VA = "0x7A3158")]
	public TreeAnchor()
	{
	}
}
[Token(Token = "0x2000103")]
public class TreeAudioController : MonoBehaviour
{
	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TreeAnchor anchor;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool beenCut;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject plantedOnBase;

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x7A3168", Offset = "0x7A3168", VA = "0x7A3168")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x7A316C", Offset = "0x7A316C", VA = "0x7A316C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x7A33F8", Offset = "0x7A33F8", VA = "0x7A33F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x7A33FC", Offset = "0x7A33FC", VA = "0x7A33FC")]
	public TreeAudioController()
	{
	}
}
[Token(Token = "0x2000104")]
public class TreeCutLink : MonoBehaviour
{
	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool thisTreeIsCutDown;

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x7A3404", Offset = "0x7A3404", VA = "0x7A3404")]
	public TreeCutLink()
	{
	}
}
[Token(Token = "0x2000105")]
public class TreePlantController : MonoBehaviour
{
	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject currentTree;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject pineTree;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform spawnSpot;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material plotEmpty;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer renderer;

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x7A4788", Offset = "0x7A4788", VA = "0x7A4788")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x7A312C", Offset = "0x7A312C", VA = "0x7A312C")]
	public void ClearTree()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x7A4994", Offset = "0x7A4994", VA = "0x7A4994")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x7A4998", Offset = "0x7A4998", VA = "0x7A4998")]
	public TreePlantController()
	{
	}
}
[Token(Token = "0x2000106")]
public class TreePlotIO : MonoBehaviour
{
	[Token(Token = "0x2000310")]
	public enum State
	{
		[Token(Token = "0x400198E")]
		Empty,
		[Token(Token = "0x400198F")]
		HasSoil,
		[Token(Token = "0x4001990")]
		HasSeeds,
		[Token(Token = "0x4001991")]
		HasPlants,
		[Token(Token = "0x4001992")]
		HasFullyGrownPlants
	}

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] vegePlots;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoilControllerTree[] soilControllers;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject spruceSeed;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject pineSeed;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject gumtreeSeed;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject treePlotPrefab;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GenericObjectIO objectIOForFirstStageProtoPlot;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject firstStageProtoPlotPrefabFromScene;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int countRepsToRunThrough;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PlotShapeMaster plotShapeMaster;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public State[] state;

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x7A49A0", Offset = "0x7A49A0", VA = "0x7A49A0")]
	public void SetupCount()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x7A4A5C", Offset = "0x7A4A5C", VA = "0x7A4A5C")]
	public void StartAfterDelay()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x7A6D40", Offset = "0x7A6D40", VA = "0x7A6D40")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x7A6DDC", Offset = "0x7A6DDC", VA = "0x7A6DDC")]
	public void SaveOutPositions()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x7A718C", Offset = "0x7A718C", VA = "0x7A718C")]
	public void SaveOutAllRotations()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x7A7500", Offset = "0x7A7500", VA = "0x7A7500")]
	public void LoadINPositions()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x7A7770", Offset = "0x7A7770", VA = "0x7A7770")]
	public void LoadInRotations()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x7A63D4", Offset = "0x7A63D4", VA = "0x7A63D4")]
	public void LoadIn()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x7A8374", Offset = "0x7A8374", VA = "0x7A8374")]
	public void SaveSingleEmptyPlotTree(int index)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x7A46E4", Offset = "0x7A46E4", VA = "0x7A46E4")]
	public void SaveSingleFullyPlantedTree(int index)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x7A83FC", Offset = "0x7A83FC", VA = "0x7A83FC")]
	public void SelectivelySaveTreeEmpty(int index)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x7A8484", Offset = "0x7A8484", VA = "0x7A8484")]
	public void SelectivelySave()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x7A5D0C", Offset = "0x7A5D0C", VA = "0x7A5D0C")]
	public void SaveOut()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x7A5970", Offset = "0x7A5970", VA = "0x7A5970")]
	public void AddPlotFromSpawn(GameObject plot)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x7A856C", Offset = "0x7A856C", VA = "0x7A856C")]
	public void AddPlot(GameObject plot)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x7A8A54", Offset = "0x7A8A54", VA = "0x7A8A54")]
	public void SaveOutSpecificPosition(int arrayIndex, float posX, float posY, float posZ)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x7A8EEC", Offset = "0x7A8EEC", VA = "0x7A8EEC")]
	public void SaveOutSpecificRotation(int arrayIndex, float rotX, float rotY, float rotZ)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x7A93B8", Offset = "0x7A93B8", VA = "0x7A93B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x7A93BC", Offset = "0x7A93BC", VA = "0x7A93BC")]
	public TreePlotIO()
	{
	}
}
[Token(Token = "0x2000107")]
public class TutorialControl : MonoBehaviour
{
	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] tutorials;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject originalNextButton;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject originalPreviousButton;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject panelPC1;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject panelPC2;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject panelPC3;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject panelPC4;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject panelPC5;

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x7A93C4", Offset = "0x7A93C4", VA = "0x7A93C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x7A945C", Offset = "0x7A945C", VA = "0x7A945C")]
	public void ButtonPressedPrevious()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x7A95F0", Offset = "0x7A95F0", VA = "0x7A95F0")]
	public void ButtonPressed()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x7A9768", Offset = "0x7A9768", VA = "0x7A9768")]
	public void SwapPanels()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x7A9AB0", Offset = "0x7A9AB0", VA = "0x7A9AB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x7A9AB4", Offset = "0x7A9AB4", VA = "0x7A9AB4")]
	public TutorialControl()
	{
	}
}
[Token(Token = "0x2000108")]
public class TutorialsController : MonoBehaviour
{
	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] tutorialObjects;

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x7A9ABC", Offset = "0x7A9ABC", VA = "0x7A9ABC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x7A9B14", Offset = "0x7A9B14", VA = "0x7A9B14")]
	public void CheckTutorialStatus()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x7A9BCC", Offset = "0x7A9BCC", VA = "0x7A9BCC")]
	public void TurnOffTutorials()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x7A9C7C", Offset = "0x7A9C7C", VA = "0x7A9C7C")]
	public void TurnOnTutorials()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x7A9D2C", Offset = "0x7A9D2C", VA = "0x7A9D2C")]
	public TutorialsController()
	{
	}
}
[Token(Token = "0x2000109")]
public class UIPhysicalTouchCloser : MonoBehaviour
{
	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToEnable;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectToDisable;

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x7A9D34", Offset = "0x7A9D34", VA = "0x7A9D34")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x7A9D38", Offset = "0x7A9D38", VA = "0x7A9D38")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x7A9F0C", Offset = "0x7A9F0C", VA = "0x7A9F0C")]
	public void PressedByUI()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x7A9F50", Offset = "0x7A9F50", VA = "0x7A9F50")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x7A9F54", Offset = "0x7A9F54", VA = "0x7A9F54")]
	public UIPhysicalTouchCloser()
	{
	}
}
[Token(Token = "0x200010A")]
public class UIPhysicalTouchControl : MonoBehaviour
{
	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TutorialControl tutorialControl;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool pressable;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float targetTime;

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x7A9F5C", Offset = "0x7A9F5C", VA = "0x7A9F5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x7A9F60", Offset = "0x7A9F60", VA = "0x7A9F60")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x7A9FFC", Offset = "0x7A9FFC", VA = "0x7A9FFC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x7AA1C0", Offset = "0x7AA1C0", VA = "0x7AA1C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x7AA218", Offset = "0x7AA218", VA = "0x7AA218")]
	public UIPhysicalTouchControl()
	{
	}
}
[Token(Token = "0x200010B")]
public class UpgradeToolControl : MonoBehaviour
{
	[Token(Token = "0x2000311")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F760", Offset = "0x56F760")]
	private sealed class <StopAnimation>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeToDelay;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpgradeToolControl <>4__this;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string animatorIdentifier;

		[Token(Token = "0x17000622")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BD4")]
			[Address(RVA = "0x7AC808", Offset = "0x7AC808", VA = "0x7AC808", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000623")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BD6")]
			[Address(RVA = "0x7AC870", Offset = "0x7AC870", VA = "0x7AC870", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x7AC70C", Offset = "0x7AC70C", VA = "0x7AC70C")]
		[DebuggerHidden]
		public <StopAnimation>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x7AC740", Offset = "0x7AC740", VA = "0x7AC740", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x7AC744", Offset = "0x7AC744", VA = "0x7AC744", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x7AC810", Offset = "0x7AC810", VA = "0x7AC810", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int costToPurchase;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ChestStorageController chestStorageController;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int upgradeLevel;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string toolDescriptorForIO;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject selfDestructingAudio;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator animator;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationClip clipThanks;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int minimumLevelToPurchase;

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x7AC234", Offset = "0x7AC234", VA = "0x7AC234")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x7AC238", Offset = "0x7AC238", VA = "0x7AC238")]
	public void AttemptPurchase()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x7AC3BC", Offset = "0x7AC3BC", VA = "0x7AC3BC")]
	public void PlayThanks()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x7AC680", Offset = "0x7AC680", VA = "0x7AC680")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57B924", Offset = "0x57B924")]
	private IEnumerator StopAnimation(float timeToDelay, string animatorIdentifier)
	{
		return null;
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x7AC450", Offset = "0x7AC450", VA = "0x7AC450")]
	public void UpgradeThisTool()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x7AC738", Offset = "0x7AC738", VA = "0x7AC738")]
	public UpgradeToolControl()
	{
	}
}
[Token(Token = "0x200010C")]
public class VineGrowthController : MonoBehaviour
{
	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxX;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxY;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxZ;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float growthRate;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool growing;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool fullyGrown;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SoilControllerVine soilControllerVegePlant;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] positionSpawns;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] fruit;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject fruitToSpawn;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 originPosition;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion originRotation;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float shake_decay;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float shake_intensity;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float temp_shake_intensity;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource audioSource;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip bushDone;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool bushSproutedBerries;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int index;

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x7B2E34", Offset = "0x7B2E34", VA = "0x7B2E34")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x7B2E38", Offset = "0x7B2E38", VA = "0x7B2E38")]
	public void EmptyPlot()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x7B2FB4", Offset = "0x7B2FB4", VA = "0x7B2FB4")]
	public void CheckBerriesAllGone()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x7B30F8", Offset = "0x7B30F8", VA = "0x7B30F8")]
	private void Shake()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x7B31D0", Offset = "0x7B31D0", VA = "0x7B31D0")]
	public void MakeMeABigBoy()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x7B3254", Offset = "0x7B3254", VA = "0x7B3254")]
	public void SproutBerries()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x7B3570", Offset = "0x7B3570", VA = "0x7B3570")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x7B3908", Offset = "0x7B3908", VA = "0x7B3908")]
	public VineGrowthController()
	{
	}
}
[Token(Token = "0x200010D")]
public class VegetableGrabLink : MonoBehaviour
{
	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VegetablePlantGrowthController growthController;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int index;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool finishedGrowing;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool inSoil;

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x7AD454", Offset = "0x7AD454", VA = "0x7AD454")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x7AD458", Offset = "0x7AD458", VA = "0x7AD458")]
	public void PickMe()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x7AD7B0", Offset = "0x7AD7B0", VA = "0x7AD7B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x7AD7B4", Offset = "0x7AD7B4", VA = "0x7AD7B4")]
	public VegetableGrabLink()
	{
	}
}
[Token(Token = "0x200010E")]
public class VegetablePlantGrowthController : MonoBehaviour
{
	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxX;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxY;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxZ;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float growthRate;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool growing;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool fullyGrown;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SoilController soilControllerVegePlant;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] positionSpawns;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] fruit;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject fruitToSpawn;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 originPosition;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion originRotation;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float shake_decay;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float shake_intensity;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float temp_shake_intensity;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource audioSource;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip bushDone;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool bushSproutedBerries;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int index;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float growthProgress;

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x7ADE04", Offset = "0x7ADE04", VA = "0x7ADE04")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x7ADE08", Offset = "0x7ADE08", VA = "0x7ADE08")]
	public void BoostMyGrowth()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x7ADE18", Offset = "0x7ADE18", VA = "0x7ADE18")]
	public void EmptyPlot()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x7AD66C", Offset = "0x7AD66C", VA = "0x7AD66C")]
	public void CheckBerriesAllGone()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x7ADF94", Offset = "0x7ADF94", VA = "0x7ADF94")]
	private void Shake()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x7AE06C", Offset = "0x7AE06C", VA = "0x7AE06C")]
	public void MakeMeABigBoy()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x7AE0F0", Offset = "0x7AE0F0", VA = "0x7AE0F0")]
	public void SproutBerries()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x7AE46C", Offset = "0x7AE46C", VA = "0x7AE46C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x7AE94C", Offset = "0x7AE94C", VA = "0x7AE94C")]
	public VegetablePlantGrowthController()
	{
	}
}
[Token(Token = "0x200010F")]
public class VegetablePlotIO : MonoBehaviour
{
	[Token(Token = "0x2000312")]
	public enum State
	{
		[Token(Token = "0x4001999")]
		Empty,
		[Token(Token = "0x400199A")]
		HasSoil,
		[Token(Token = "0x400199B")]
		HasSeeds,
		[Token(Token = "0x400199C")]
		HasPlants
	}

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] vegePlots;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoilController[] soilControllers;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pumpkinSeed;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject turnipSeed;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject pepperSeed;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public State[] state;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int countRepsToRunThrough;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject vegetablePrefab;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GenericObjectIO objectIOForFirstStageProtoPlot;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject firstStageProtoPlotPrefabFromScene;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PlotShapeMaster plotShapeMaster;

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x7AE974", Offset = "0x7AE974", VA = "0x7AE974")]
	public void SetupCount()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x7AEA30", Offset = "0x7AEA30", VA = "0x7AEA30")]
	public void StartAfterDelay()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x7B104C", Offset = "0x7B104C", VA = "0x7B104C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x7B10EC", Offset = "0x7B10EC", VA = "0x7B10EC")]
	public void SaveOutPositions()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x7B149C", Offset = "0x7B149C", VA = "0x7B149C")]
	public void SaveOutAllRotations()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x7B1810", Offset = "0x7B1810", VA = "0x7B1810")]
	public void LoadINPositions()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x7B1A80", Offset = "0x7B1A80", VA = "0x7B1A80")]
	public void LoadInRotations()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x7B0718", Offset = "0x7B0718", VA = "0x7B0718")]
	public void LoadIn()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x7B008C", Offset = "0x7B008C", VA = "0x7B008C")]
	public void SaveOut()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x7B1C9C", Offset = "0x7B1C9C", VA = "0x7B1C9C")]
	public void SaveSingleEmptyPlotVege(int index)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x7AE8C4", Offset = "0x7AE8C4", VA = "0x7AE8C4")]
	public void SaveSingleFullyPlantedVege(int index)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x7AFCF0", Offset = "0x7AFCF0", VA = "0x7AFCF0")]
	public void AddPlotFromSpawn(GameObject plot)
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x7B1D24", Offset = "0x7B1D24", VA = "0x7B1D24")]
	public void AddPlot(GameObject plot)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x7B2294", Offset = "0x7B2294", VA = "0x7B2294")]
	public void SaveOutSpecificPosition(int arrayIndex, float posX, float posY, float posZ)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x7B272C", Offset = "0x7B272C", VA = "0x7B272C")]
	public void SaveOutSpecificRotation(int arrayIndex, float rotX, float rotY, float rotZ)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x7B220C", Offset = "0x7B220C", VA = "0x7B220C")]
	public void SelectivelySaveRootEmpty(int index)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x7B2BF8", Offset = "0x7B2BF8", VA = "0x7B2BF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x7B2BFC", Offset = "0x7B2BFC", VA = "0x7B2BFC")]
	public VegetablePlotIO()
	{
	}
}
[Token(Token = "0x2000110")]
public class VineGrabLink : MonoBehaviour
{
	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VinePlantGrowthController growthController;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int index;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool finishedGrowing;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool inSoil;

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x7B2C04", Offset = "0x7B2C04", VA = "0x7B2C04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x7B2C08", Offset = "0x7B2C08", VA = "0x7B2C08")]
	public void PickMe()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x7B2E20", Offset = "0x7B2E20", VA = "0x7B2E20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x7B2E24", Offset = "0x7B2E24", VA = "0x7B2E24")]
	public VineGrabLink()
	{
	}
}
[Token(Token = "0x2000111")]
public class VinePlantGrowthController : MonoBehaviour
{
	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxX;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxY;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxZ;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float growthRate;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool growing;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool fullyGrown;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SoilControllerVine soilControllerVegePlant;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] positionSpawns;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] fruit;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject fruitToSpawn;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 originPosition;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion originRotation;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float shake_decay;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float shake_intensity;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float temp_shake_intensity;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource audioSource;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip bushDone;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool bushSproutedBerries;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int index;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float growthProgress;

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x106EEEC", Offset = "0x106EEEC", VA = "0x106EEEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x106EEF0", Offset = "0x106EEF0", VA = "0x106EEF0")]
	public void BoostMyGrowth()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x106EF00", Offset = "0x106EF00", VA = "0x106EF00")]
	public void EmptyPlot()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x106F07C", Offset = "0x106F07C", VA = "0x106F07C")]
	public void CheckBerriesAllGone()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x106F1C0", Offset = "0x106F1C0", VA = "0x106F1C0")]
	private void Shake()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x106F298", Offset = "0x106F298", VA = "0x106F298")]
	public void MakeMeABigBoy()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x106F31C", Offset = "0x106F31C", VA = "0x106F31C")]
	public void SproutBerries()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x106F774", Offset = "0x106F774", VA = "0x106F774")]
	private void Update()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x106FC58", Offset = "0x106FC58", VA = "0x106FC58")]
	public VinePlantGrowthController()
	{
	}
}
[Token(Token = "0x2000112")]
public class VinePlotIO : MonoBehaviour
{
	[Token(Token = "0x2000313")]
	public enum State
	{
		[Token(Token = "0x400199E")]
		Empty,
		[Token(Token = "0x400199F")]
		HasSoil,
		[Token(Token = "0x40019A0")]
		HasSeeds,
		[Token(Token = "0x40019A1")]
		HasPlants
	}

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] vegePlots;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoilControllerVine[] soilControllers;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pumpkinSeed;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject turnipSeed;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject pepperSeed;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject vinePlotPrefab;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public State[] state;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int countRepsToRunThrough;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GenericObjectIO objectIOForFirstStageProtoPlot;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject firstStageProtoPlotPrefabFromScene;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PlotShapeMaster plotShapeMaster;

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x106FC80", Offset = "0x106FC80", VA = "0x106FC80")]
	public void SetupCount()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x106FD3C", Offset = "0x106FD3C", VA = "0x106FD3C")]
	public void StartAfterDelay()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x10722B4", Offset = "0x10722B4", VA = "0x10722B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x1072354", Offset = "0x1072354", VA = "0x1072354")]
	public void SaveOutPositions()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x1072704", Offset = "0x1072704", VA = "0x1072704")]
	public void SaveOutAllRotations()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x1072C70", Offset = "0x1072C70", VA = "0x1072C70")]
	public void LoadINPositions()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x1072EE0", Offset = "0x1072EE0", VA = "0x1072EE0")]
	public void LoadInRotations()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x1071978", Offset = "0x1071978", VA = "0x1071978")]
	public void LoadIn()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x1071398", Offset = "0x1071398", VA = "0x1071398")]
	public void SaveOut()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x10730FC", Offset = "0x10730FC", VA = "0x10730FC")]
	public void SaveSingleEmptyPlotVege(int index)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x106FBD0", Offset = "0x106FBD0", VA = "0x106FBD0")]
	public void SaveSingleFullyPlantedVege(int index)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x1070FFC", Offset = "0x1070FFC", VA = "0x1070FFC")]
	public void AddPlotFromSpawn(GameObject plot)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x1073184", Offset = "0x1073184", VA = "0x1073184")]
	public void AddPlot(GameObject plot)
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x1073744", Offset = "0x1073744", VA = "0x1073744")]
	public void SaveOutSpecificPosition(int arrayIndex, float posX, float posY, float posZ)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x1073BDC", Offset = "0x1073BDC", VA = "0x1073BDC")]
	public void SaveOutSpecificRotation(int arrayIndex, float rotX, float rotY, float rotZ)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x10736BC", Offset = "0x10736BC", VA = "0x10736BC")]
	public void SelectivelySaveRootEmpty(int index)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x10740A8", Offset = "0x10740A8", VA = "0x10740A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x10740AC", Offset = "0x10740AC", VA = "0x10740AC")]
	public VinePlotIO()
	{
	}
}
[Token(Token = "0x2000113")]
public class WatchControl : MonoBehaviour
{
	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject OptionsUI;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isOpen;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animatorToPause;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform positionOptionsMoveTo;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool coolDownActiveForController;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float coolDownAmount;

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x1074450", Offset = "0x1074450", VA = "0x1074450")]
	public void CloseUI()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x1074488", Offset = "0x1074488", VA = "0x1074488")]
	public void OpenUI()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x1074578", Offset = "0x1074578", VA = "0x1074578")]
	private void Start()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x10745D4", Offset = "0x10745D4", VA = "0x10745D4")]
	public void ExitGame()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x10745DC", Offset = "0x10745DC", VA = "0x10745DC")]
	public void DisableForPC()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x10745E0", Offset = "0x10745E0", VA = "0x10745E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x10746C0", Offset = "0x10746C0", VA = "0x10746C0")]
	public WatchControl()
	{
	}
}
[Token(Token = "0x2000114")]
public class WellBucketController : MonoBehaviour
{
	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float curRot;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bucketAttachment;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public double angle1;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public double angle2;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public double EulerX;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public double EulerY;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public double EulerZ;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<double[]> Euler_list;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private double last_euler_x;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private double last_euler_y;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private double last_euler_z;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private double euler_x_360_pass;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private double euler_y_360_pass;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private double euler_z_360_pass;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float oldValue;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float differenceValue;

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x1076360", Offset = "0x1076360", VA = "0x1076360")]
	private void Start()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x1076550", Offset = "0x1076550", VA = "0x1076550")]
	private void Update()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x1076364", Offset = "0x1076364", VA = "0x1076364")]
	public void init_euler_calc()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x1076674", Offset = "0x1076674", VA = "0x1076674")]
	public void update_euler_calc()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x10769C8", Offset = "0x10769C8", VA = "0x10769C8")]
	public static Vector4 SandwichProduct(Vector4 q1, Vector4 q2)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x10768AC", Offset = "0x10768AC", VA = "0x10768AC")]
	public static Quaternion CreateVectorSandwich(Vector4 a, Vector4 b, Vector4 c)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x1076A40", Offset = "0x1076A40", VA = "0x1076A40")]
	public double[,] CreateRotationMatrixFromQuaternion(double first, double second, double third, double w)
	{
		return null;
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x1076C68", Offset = "0x1076C68", VA = "0x1076C68")]
	public double[] CreateEulerFromRotationMatrix(double[,] matrix, int idx1, int idx2, int idx3)
	{
		return null;
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x107690C", Offset = "0x107690C", VA = "0x107690C")]
	public double[] GetUnityEulerAngles()
	{
		return null;
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x1076E00", Offset = "0x1076E00", VA = "0x1076E00")]
	public List<double[]> GetAllEulerAngles()
	{
		return null;
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x10771A4", Offset = "0x10771A4", VA = "0x10771A4")]
	public WellBucketController()
	{
	}
}
[Token(Token = "0x2000115")]
public class WoodSaw : MonoBehaviour
{
	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator2;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator3;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator animator4;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource audioSource;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float timeRunFor;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool on;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WoodSawMillControl woodSawMillControl;

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x1077324", Offset = "0x1077324", VA = "0x1077324")]
	private void Start()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x10773B8", Offset = "0x10773B8", VA = "0x10773B8")]
	public void PlayMe()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x1077328", Offset = "0x1077328", VA = "0x1077328")]
	public void StopMe()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x10774D4", Offset = "0x10774D4", VA = "0x10774D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x1077530", Offset = "0x1077530", VA = "0x1077530")]
	public WoodSaw()
	{
	}
}
[Token(Token = "0x2000116")]
public class WoodSawMillControl : MonoBehaviour
{
	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int invokeRounds;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] woodenPlanks;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform spawnSpot;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform spawnSpotParticle;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int totalToSpit;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource audioSource;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool activated;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject particle;

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x1077540", Offset = "0x1077540", VA = "0x1077540")]
	private void Start()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x1077544", Offset = "0x1077544", VA = "0x1077544")]
	public void PlayMeSingle()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x10775B0", Offset = "0x10775B0", VA = "0x10775B0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x107783C", Offset = "0x107783C", VA = "0x107783C")]
	public void ProducePlanks(int amountOfPlanks)
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x10779EC", Offset = "0x10779EC", VA = "0x10779EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x10779F0", Offset = "0x10779F0", VA = "0x10779F0")]
	public WoodSawMillControl()
	{
	}
}
[Token(Token = "0x2000117")]
public class XboxSimulateClick : StandaloneInputModule
{
	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private KeyCode left;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private KeyCode right;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private KeyCode up;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private KeyCode down;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private KeyCode click;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float moveSpeed;

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x1077FB4", Offset = "0x1077FB4", VA = "0x1077FB4")]
	public void ClickAt(Vector2 pos, bool pressed)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x1078068", Offset = "0x1078068", VA = "0x1078068")]
	private void Update()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x10780C8", Offset = "0x10780C8", VA = "0x10780C8")]
	public XboxSimulateClick()
	{
	}
}
[Token(Token = "0x2000118")]
public class Common_RandomInt : StateMachineBehaviour
{
	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string intparameterName;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 minMax;

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x857898", Offset = "0x857898", VA = "0x857898", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x8578FC", Offset = "0x8578FC", VA = "0x8578FC")]
	public Common_RandomInt()
	{
	}
}
[Token(Token = "0x2000119")]
public class SceneAnimatorController : MonoBehaviour
{
	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x793A1C", Offset = "0x793A1C", VA = "0x793A1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x793A74", Offset = "0x793A74", VA = "0x793A74")]
	public void SetAnimatorString(string value)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x793B84", Offset = "0x793B84", VA = "0x793B84")]
	public SceneAnimatorController()
	{
	}
}
[Token(Token = "0x200011A")]
public class ToggleEvent : MonoBehaviour
{
	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent toggleOn;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent toggleOff;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Toggle toggle;

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x79F2D4", Offset = "0x79F2D4", VA = "0x79F2D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x79F38C", Offset = "0x79F38C", VA = "0x79F38C")]
	public void SwapToggle(bool value)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x79F3B8", Offset = "0x79F3B8", VA = "0x79F3B8")]
	public ToggleEvent()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x79F3C0", Offset = "0x79F3C0", VA = "0x79F3C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B988", Offset = "0x57B988")]
	private void <Awake>b__3_0(bool value)
	{
	}
}
[Token(Token = "0x200011B")]
public class xboxControls : MonoBehaviour
{
	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool aButton;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool bButton;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool xButton;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool yButton;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool leftBumper;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool rightBumper;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool viewButton;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool menuButton;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool lClickButton;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool rClickButton;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool xBoxGuideHomeButton;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float leftAnalogStickHorizontal;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rightAnalogStickHorizontal;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float leftAnalogStickVertical;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rightAnalogStickVertical;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float dPadHorizontal;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float dPadVertical;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float leftTrigger;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float rightTrigger;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ThorGrabController thorGrabController;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text controllerModeText;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool active;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public XboxSimulateClick xboxSimulateClick;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public StandaloneInputModule standaloneInputModule;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] instructionsForXR;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] instructionsForPC;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] instructionsForController;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public EventSystem eventSystem;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public XRUIInputModule XRUIInputModule;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public EventSystem eventSystemController;

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x10782B0", Offset = "0x10782B0", VA = "0x10782B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x1078540", Offset = "0x1078540", VA = "0x1078540")]
	private void Awake()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x107830C", Offset = "0x107830C", VA = "0x107830C")]
	public void SetupControllerMode()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x1078A40", Offset = "0x1078A40", VA = "0x1078A40")]
	public void ButtonPress()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x10788CC", Offset = "0x10788CC", VA = "0x10788CC")]
	public void SwapTutorialPanelsToController()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x1078758", Offset = "0x1078758", VA = "0x1078758")]
	public void SwapTutorialPanelsToPC()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x1078C8C", Offset = "0x1078C8C", VA = "0x1078C8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x1078F64", Offset = "0x1078F64", VA = "0x1078F64")]
	public xboxControls()
	{
	}
}
namespace PolyPerfect
{
	[Token(Token = "0x200011C")]
	public class Common_AnimSpeed : MonoBehaviour
	{
		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator anim;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float Speed;

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x8EBE7C", Offset = "0x8EBE7C", VA = "0x8EBE7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x8EBEEC", Offset = "0x8EBEEC", VA = "0x8EBEEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x8EBF10", Offset = "0x8EBF10", VA = "0x8EBF10")]
		public Common_AnimSpeed()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public class Common_AnimationControl : MonoBehaviour
	{
		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string currentAnimation;

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x8EBF18", Offset = "0x8EBF18", VA = "0x8EBF18")]
		private void Start()
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x8EBF1C", Offset = "0x8EBF1C", VA = "0x8EBF1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x8EBF20", Offset = "0x8EBF20", VA = "0x8EBF20")]
		public void SetAnimation(string animationName)
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x8EBFE0", Offset = "0x8EBFE0", VA = "0x8EBFE0")]
		public void SetAnimationIdle()
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x8EC070", Offset = "0x8EC070", VA = "0x8EC070")]
		public void SetDeathAnimation(int numOfClips)
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x8EC160", Offset = "0x8EC160", VA = "0x8EC160")]
		public Common_AnimationControl()
		{
		}
	}
	[Token(Token = "0x200011E")]
	public class Common_KillSwitch : MonoBehaviour
	{
		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator anim;

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x8ECA98", Offset = "0x8ECA98", VA = "0x8ECA98")]
		private void Start()
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x8ECAF0", Offset = "0x8ECAF0", VA = "0x8ECAF0")]
		private void Update()
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x8ECB6C", Offset = "0x8ECB6C", VA = "0x8ECB6C")]
		public Common_KillSwitch()
		{
		}
	}
	[Token(Token = "0x200011F")]
	public class Common_PlaySound : MonoBehaviour
	{
		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip animalSound;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip walking;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip eating;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip running;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip attacking;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip death;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip sleeping;

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x8ECB74", Offset = "0x8ECB74", VA = "0x8ECB74")]
		private void AnimalSound()
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x8ECC18", Offset = "0x8ECC18", VA = "0x8ECC18")]
		private void Walking()
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x8ECCBC", Offset = "0x8ECCBC", VA = "0x8ECCBC")]
		private void Eating()
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x8ECD60", Offset = "0x8ECD60", VA = "0x8ECD60")]
		private void Running()
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x8ECE04", Offset = "0x8ECE04", VA = "0x8ECE04")]
		private void Attacking()
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x8ECEA8", Offset = "0x8ECEA8", VA = "0x8ECEA8")]
		private void Death()
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x8ECF4C", Offset = "0x8ECF4C", VA = "0x8ECF4C")]
		private void Sleeping()
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x8EBC04", Offset = "0x8EBC04", VA = "0x8EBC04")]
		public Common_PlaySound()
		{
		}
	}
	[Token(Token = "0x2000120")]
	[ExecuteInEditMode]
	public class RandomCharacterPlacer : MonoBehaviour
	{
		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float spawnSize;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int spawnAmmount;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] characters;

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x8F41E4", Offset = "0x8F41E4", VA = "0x8F41E4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x57B998", Offset = "0x57B998")]
		private void SpawnAnimals()
		{
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x8F43A4", Offset = "0x8F43A4", VA = "0x8F43A4")]
		public Vector3 RandomNavmeshLocation(float radius)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x8F451C", Offset = "0x8F451C", VA = "0x8F451C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x8F4558", Offset = "0x8F4558", VA = "0x8F4558")]
		public RandomCharacterPlacer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000121")]
	public class AIState
	{
		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string stateName;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string animationBool;

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x8EBAE4", Offset = "0x8EBAE4", VA = "0x8EBAE4")]
		public AIState()
		{
		}
	}
	[Token(Token = "0x2000122")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x56D8D0", Offset = "0x56D8D0")]
	public class AIStats : ScriptableObject
	{
		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570CD8", Offset = "0x570CD8")]
		public int dominance;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570D24", Offset = "0x570D24")]
		public float stamina;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570D70", Offset = "0x570D70")]
		public float power;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570DBC", Offset = "0x570DBC")]
		public float toughness;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570E08", Offset = "0x570E08")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x570E08", Offset = "0x570E08")]
		public float agression;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570E70", Offset = "0x570E70")]
		public float attackSpeed;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570EBC", Offset = "0x570EBC")]
		public bool territorial;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570F08", Offset = "0x570F08")]
		public bool stealthy;

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x8EBB54", Offset = "0x8EBB54", VA = "0x8EBB54")]
		public AIStats()
		{
		}
	}
	[Token(Token = "0x2000123")]
	public class Common_AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F770", Offset = "0x56F770")]
		private sealed class <ReturnToPool>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40019A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject obj;

			[Token(Token = "0x17000624")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BDA")]
				[Address(RVA = "0x8ECA28", Offset = "0x8ECA28", VA = "0x8ECA28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000625")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BDC")]
				[Address(RVA = "0x8ECA90", Offset = "0x8ECA90", VA = "0x8ECA90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0x8EC940", Offset = "0x8EC940", VA = "0x8EC940")]
			[DebuggerHidden]
			public <ReturnToPool>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0x8EC96C", Offset = "0x8EC96C", VA = "0x8EC96C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0x8EC970", Offset = "0x8EC970", VA = "0x8EC970", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BDB")]
			[Address(RVA = "0x8ECA30", Offset = "0x8ECA30", VA = "0x8ECA30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Common_AudioManager instance;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool muteSound;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int objectPoolLength;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float soundDistance;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool logSounds;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<AudioSource> pool;

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x8EC1B8", Offset = "0x8EC1B8", VA = "0x8EC1B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x8EC354", Offset = "0x8EC354", VA = "0x8EC354")]
		public static void PlaySound(AudioClip clip, Vector3 pos)
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x8EC8C0", Offset = "0x8EC8C0", VA = "0x8EC8C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57B9D0", Offset = "0x57B9D0")]
		private IEnumerator ReturnToPool(GameObject obj, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x8EBB80", Offset = "0x8EBB80", VA = "0x8EBB80")]
		public Common_AudioManager()
		{
		}
	}
	[Token(Token = "0x2000124")]
	public class Common_SurfaceRotation : MonoBehaviour
	{
		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string terrainLayer;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int layer;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool rotate;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion targetRotation;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float rotationSpeed;

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x8ECFF0", Offset = "0x8ECFF0", VA = "0x8ECFF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x8ED0A8", Offset = "0x8ED0A8", VA = "0x8ED0A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x8ED2E0", Offset = "0x8ED2E0", VA = "0x8ED2E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x8ED5B8", Offset = "0x8ED5B8", VA = "0x8ED5B8")]
		public void SetRotationSpeed(float speed)
		{
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x8ED5C8", Offset = "0x8ED5C8", VA = "0x8ED5C8")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x8ED5D4", Offset = "0x8ED5D4", VA = "0x8ED5D4")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x8EBC48", Offset = "0x8EBC48", VA = "0x8EBC48")]
		public Common_SurfaceRotation()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class Common_WanderManager : MonoBehaviour
	{
		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool peaceTime;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Common_WanderManager instance;

		[Token(Token = "0x17000021")]
		public bool PeaceTime
		{
			[Token(Token = "0x6000679")]
			[Address(RVA = "0x8ED5DC", Offset = "0x8ED5DC", VA = "0x8ED5DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600067A")]
			[Address(RVA = "0x8ED5E4", Offset = "0x8ED5E4", VA = "0x8ED5E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000022")]
		public static Common_WanderManager Instance
		{
			[Token(Token = "0x600067B")]
			[Address(RVA = "0x8ED7F4", Offset = "0x8ED7F4", VA = "0x8ED7F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x8ED844", Offset = "0x8ED844", VA = "0x8ED844")]
		private void Awake()
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x8ED95C", Offset = "0x8ED95C", VA = "0x8ED95C")]
		private void Start()
		{
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x8ED5EC", Offset = "0x8ED5EC", VA = "0x8ED5EC")]
		public void SwitchPeaceTime(bool enabled)
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x8EDA1C", Offset = "0x8EDA1C", VA = "0x8EDA1C")]
		public void Nuke()
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x8EBC14", Offset = "0x8EBC14", VA = "0x8EBC14")]
		public Common_WanderManager()
		{
		}
	}
	[Token(Token = "0x2000126")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56D924", Offset = "0x56D924")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56D924", Offset = "0x56D924")]
	public class Common_WanderScript : MonoBehaviour
	{
		[Token(Token = "0x2000315")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F780", Offset = "0x56F780")]
		private sealed class <InitYield>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Common_WanderScript <>4__this;

			[Token(Token = "0x17000626")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BE0")]
				[Address(RVA = "0x8F22DC", Offset = "0x8F22DC", VA = "0x8F22DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000627")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BE2")]
				[Address(RVA = "0x8F2344", Offset = "0x8F2344", VA = "0x8F2344", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BDD")]
			[Address(RVA = "0x8EEEE8", Offset = "0x8EEEE8", VA = "0x8EEEE8")]
			[DebuggerHidden]
			public <InitYield>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6001BDE")]
			[Address(RVA = "0x8F21F4", Offset = "0x8F21F4", VA = "0x8F21F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0x8F21F8", Offset = "0x8F21F8", VA = "0x8F21F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0x8F22E4", Offset = "0x8F22E4", VA = "0x8F22E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000316")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F790", Offset = "0x56F790")]
		private sealed class <IdleState>d__62 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Common_WanderScript <>4__this;

			[Token(Token = "0x40019AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float stateTime;

			[Token(Token = "0x17000628")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BE6")]
				[Address(RVA = "0x8F2184", Offset = "0x8F2184", VA = "0x8F2184", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000629")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BE8")]
				[Address(RVA = "0x8F21EC", Offset = "0x8F21EC", VA = "0x8F21EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0x8F08E4", Offset = "0x8F08E4", VA = "0x8F08E4")]
			[DebuggerHidden]
			public <IdleState>d__62(int <>1__state)
			{
			}

			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0x8F2024", Offset = "0x8F2024", VA = "0x8F2024", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0x8F2028", Offset = "0x8F2028", VA = "0x8F2028", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BE7")]
			[Address(RVA = "0x8F218C", Offset = "0x8F218C", VA = "0x8F218C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000317")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F7A0", Offset = "0x56F7A0")]
		private sealed class <MovementState>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Common_WanderScript <>4__this;

			[Token(Token = "0x40019B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 target;

			[Token(Token = "0x40019B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timeMoving>5__2;

			[Token(Token = "0x1700062A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BEC")]
				[Address(RVA = "0x8F2790", Offset = "0x8F2790", VA = "0x8F2790", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700062B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BEE")]
				[Address(RVA = "0x8F27F8", Offset = "0x8F27F8", VA = "0x8F27F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BE9")]
			[Address(RVA = "0x8F0B64", Offset = "0x8F0B64", VA = "0x8F0B64")]
			[DebuggerHidden]
			public <MovementState>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001BEA")]
			[Address(RVA = "0x8F2554", Offset = "0x8F2554", VA = "0x8F2554", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BEB")]
			[Address(RVA = "0x8F2558", Offset = "0x8F2558", VA = "0x8F2558", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BED")]
			[Address(RVA = "0x8F2798", Offset = "0x8F2798", VA = "0x8F2798", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F7B0", Offset = "0x56F7B0")]
		private sealed class <NonNavMeshMovementState>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Common_WanderScript <>4__this;

			[Token(Token = "0x40019B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 target;

			[Token(Token = "0x40019B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <walkTime>5__2;

			[Token(Token = "0x40019B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <timeUntilAbortWalk>5__3;

			[Token(Token = "0x1700062C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BF2")]
				[Address(RVA = "0x8F3538", Offset = "0x8F3538", VA = "0x8F3538", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700062D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BF4")]
				[Address(RVA = "0x8F35A0", Offset = "0x8F35A0", VA = "0x8F35A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BEF")]
			[Address(RVA = "0x8F0B90", Offset = "0x8F0B90", VA = "0x8F0B90")]
			[DebuggerHidden]
			public <NonNavMeshMovementState>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0x8F3090", Offset = "0x8F3090", VA = "0x8F3090", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0x8F3094", Offset = "0x8F3094", VA = "0x8F3094", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0x8F3540", Offset = "0x8F3540", VA = "0x8F3540", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000319")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F7C0", Offset = "0x56F7C0")]
		private sealed class <RunAwayState>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Common_WanderScript <>4__this;

			[Token(Token = "0x40019BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 target;

			[Token(Token = "0x40019BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Common_WanderScript predator;

			[Token(Token = "0x40019BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <timeMoving>5__2;

			[Token(Token = "0x1700062E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BF8")]
				[Address(RVA = "0x8F3E90", Offset = "0x8F3E90", VA = "0x8F3E90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700062F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BFA")]
				[Address(RVA = "0x8F3EF8", Offset = "0x8F3EF8", VA = "0x8F3EF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0x8F0C60", Offset = "0x8F0C60", VA = "0x8F0C60")]
			[DebuggerHidden]
			public <RunAwayState>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0x8F3B80", Offset = "0x8F3B80", VA = "0x8F3B80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0x8F3B84", Offset = "0x8F3B84", VA = "0x8F3B84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0x8F3E98", Offset = "0x8F3E98", VA = "0x8F3E98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200031A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F7D0", Offset = "0x56F7D0")]
		private sealed class <NonNavMeshRunAwayState>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Common_WanderScript <>4__this;

			[Token(Token = "0x40019C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 target;

			[Token(Token = "0x40019C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Common_WanderScript predator;

			[Token(Token = "0x40019C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <walkTime>5__2;

			[Token(Token = "0x40019C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <timeUntilAbortWalk>5__3;

			[Token(Token = "0x17000630")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BFE")]
				[Address(RVA = "0x8F3B10", Offset = "0x8F3B10", VA = "0x8F3B10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000631")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C00")]
				[Address(RVA = "0x8F3B78", Offset = "0x8F3B78", VA = "0x8F3B78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0x8F0D30", Offset = "0x8F0D30", VA = "0x8F0D30")]
			[DebuggerHidden]
			public <NonNavMeshRunAwayState>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x6001BFC")]
			[Address(RVA = "0x8F35A8", Offset = "0x8F35A8", VA = "0x8F35A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0x8F35AC", Offset = "0x8F35AC", VA = "0x8F35AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0x8F3B18", Offset = "0x8F3B18", VA = "0x8F3B18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200031B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F7E0", Offset = "0x56F7E0")]
		private sealed class <ChaseState>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Common_WanderScript <>4__this;

			[Token(Token = "0x40019C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Common_WanderScript prey;

			[Token(Token = "0x40019C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timeMoving>5__2;

			[Token(Token = "0x40019CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool <gotAway>5__3;

			[Token(Token = "0x17000632")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C04")]
				[Address(RVA = "0x8F1FB4", Offset = "0x8F1FB4", VA = "0x8F1FB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000633")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C06")]
				[Address(RVA = "0x8F201C", Offset = "0x8F201C", VA = "0x8F201C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C01")]
			[Address(RVA = "0x8F0E8C", Offset = "0x8F0E8C", VA = "0x8F0E8C")]
			[DebuggerHidden]
			public <ChaseState>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6001C02")]
			[Address(RVA = "0x8F19D4", Offset = "0x8F19D4", VA = "0x8F19D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C03")]
			[Address(RVA = "0x8F19D8", Offset = "0x8F19D8", VA = "0x8F19D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C05")]
			[Address(RVA = "0x8F1FBC", Offset = "0x8F1FBC", VA = "0x8F1FBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200031C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F7F0", Offset = "0x56F7F0")]
		private sealed class <NonNavMeshChaseState>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Common_WanderScript <>4__this;

			[Token(Token = "0x40019CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Common_WanderScript prey;

			[Token(Token = "0x40019CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <walkTime>5__2;

			[Token(Token = "0x40019D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool <gotAway>5__3;

			[Token(Token = "0x40019D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <timeUntilAbortWalk>5__4;

			[Token(Token = "0x17000634")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C0A")]
				[Address(RVA = "0x8F3020", Offset = "0x8F3020", VA = "0x8F3020", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000635")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C0C")]
				[Address(RVA = "0x8F3088", Offset = "0x8F3088", VA = "0x8F3088", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C07")]
			[Address(RVA = "0x8F0EB8", Offset = "0x8F0EB8", VA = "0x8F0EB8")]
			[DebuggerHidden]
			public <NonNavMeshChaseState>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x6001C08")]
			[Address(RVA = "0x8F2800", Offset = "0x8F2800", VA = "0x8F2800", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C09")]
			[Address(RVA = "0x8F2804", Offset = "0x8F2804", VA = "0x8F2804", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C0B")]
			[Address(RVA = "0x8F3028", Offset = "0x8F3028", VA = "0x8F3028", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200031D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F800", Offset = "0x56F800")]
		private sealed class <MakeAttack>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Common_WanderScript target;

			[Token(Token = "0x40019D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Common_WanderScript <>4__this;

			[Token(Token = "0x40019D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timer>5__2;

			[Token(Token = "0x17000636")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C10")]
				[Address(RVA = "0x8F24E4", Offset = "0x8F24E4", VA = "0x8F24E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000637")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C12")]
				[Address(RVA = "0x8F254C", Offset = "0x8F254C", VA = "0x8F254C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0x8F1158", Offset = "0x8F1158", VA = "0x8F1158")]
			[DebuggerHidden]
			public <MakeAttack>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x6001C0E")]
			[Address(RVA = "0x8F234C", Offset = "0x8F234C", VA = "0x8F234C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C0F")]
			[Address(RVA = "0x8F2350", Offset = "0x8F2350", VA = "0x8F2350", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C11")]
			[Address(RVA = "0x8F24EC", Offset = "0x8F24EC", VA = "0x8F24EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200031E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F810", Offset = "0x56F810")]
		private sealed class <TurnToLookAtTarget>d__80 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform target;

			[Token(Token = "0x40019DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Common_WanderScript <>4__this;

			[Token(Token = "0x17000638")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C16")]
				[Address(RVA = "0x8F4144", Offset = "0x8F4144", VA = "0x8F4144", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000639")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C18")]
				[Address(RVA = "0x8F41AC", Offset = "0x8F41AC", VA = "0x8F41AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C13")]
			[Address(RVA = "0x8F154C", Offset = "0x8F154C", VA = "0x8F154C")]
			[DebuggerHidden]
			public <TurnToLookAtTarget>d__80(int <>1__state)
			{
			}

			[Token(Token = "0x6001C14")]
			[Address(RVA = "0x8F3F00", Offset = "0x8F3F00", VA = "0x8F3F00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C15")]
			[Address(RVA = "0x8F3F04", Offset = "0x8F3F04", VA = "0x8F3F04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C17")]
			[Address(RVA = "0x8F414C", Offset = "0x8F414C", VA = "0x8F414C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200031F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F820", Offset = "0x56F820")]
		private sealed class <ChaseCheck>d__82 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Common_WanderScript <>4__this;

			[Token(Token = "0x40019DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Common_WanderScript chasingAnimal;

			[Token(Token = "0x1700063A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C1C")]
				[Address(RVA = "0x8F1964", Offset = "0x8F1964", VA = "0x8F1964", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700063B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C1E")]
				[Address(RVA = "0x8F19CC", Offset = "0x8F19CC", VA = "0x8F19CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C19")]
			[Address(RVA = "0x8F15F4", Offset = "0x8F15F4", VA = "0x8F15F4")]
			[DebuggerHidden]
			public <ChaseCheck>d__82(int <>1__state)
			{
			}

			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0x8F1694", Offset = "0x8F1694", VA = "0x8F1694", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C1B")]
			[Address(RVA = "0x8F1698", Offset = "0x8F1698", VA = "0x8F1698", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0x8F196C", Offset = "0x8F196C", VA = "0x8F196C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A0E")]
		private const float contingencyDistance = 1f;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public IdleState[] idleStates;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MovementState[] movementStates;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AIState[] attackingStates;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AIState[] deathStates;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public string species;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x570FF4", Offset = "0x570FF4")]
		public AIStats stats;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x571040", Offset = "0x571040")]
		private float wanderZone;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int dominance;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int originalDominance;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57108C", Offset = "0x57108C")]
		private float awareness;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5710D8", Offset = "0x5710D8")]
		private float scent;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float originalScent;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float stamina;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float power;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float toughness;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float agression;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float originalAgression;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float attackSpeed;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool territorial;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool stealthy;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x571124", Offset = "0x571124")]
		private bool constainedToWanderZone;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x571170", Offset = "0x571170")]
		private string[] nonAgressiveTowards;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Common_WanderScript> allAnimals;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5711BC", Offset = "0x5711BC")]
		private bool matchSurfaceRotation;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x571208", Offset = "0x571208")]
		private float surfaceRotationSpeed;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x571254", Offset = "0x571254")]
		private bool logChanges;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5712A0", Offset = "0x5712A0")]
		private bool showGizmos;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		[SerializeField]
		private bool drawWanderRange;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		[SerializeField]
		private bool drawScentRange;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool drawAwarenessRange;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnityEvent deathEvent;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityEvent attackingEvent;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityEvent idleEvent;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UnityEvent movementEvent;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Color distanceColor;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Color awarnessColor;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Color scentColor;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Animator animator;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private CharacterController characterController;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3 origin;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int totalIdleStateWeight;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int currentState;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private bool dead;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		private bool moving;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x116")]
		private bool useNavMesh;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 targetLocation;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float currentTurnSpeed;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool attacking;

		[Token(Token = "0x17000023")]
		public float MaxDistance
		{
			[Token(Token = "0x6000681")]
			[Address(RVA = "0x8EDEDC", Offset = "0x8EDEDC", VA = "0x8EDEDC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000682")]
			[Address(RVA = "0x8EDEE4", Offset = "0x8EDEE4", VA = "0x8EDEE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000024")]
		public static List<Common_WanderScript> AllAnimals
		{
			[Token(Token = "0x6000683")]
			[Address(RVA = "0x8EDEEC", Offset = "0x8EDEEC", VA = "0x8EDEEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x8EDF54", Offset = "0x8EDF54", VA = "0x8EDF54")]
		public void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x8EE488", Offset = "0x8EE488", VA = "0x8EE488")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x8EECE4", Offset = "0x8EECE4", VA = "0x8EECE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x8EEE64", Offset = "0x8EEE64", VA = "0x8EEE64")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x8EEDF4", Offset = "0x8EEDF4", VA = "0x8EEDF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57BA34", Offset = "0x57BA34")]
		private IEnumerator InitYield()
		{
			return null;
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x8EEF14", Offset = "0x8EEF14", VA = "0x8EEF14")]
		private void DecideNextState(bool wasIdle, bool firstState = false)
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x8F06C4", Offset = "0x8F06C4", VA = "0x8F06C4")]
		private void BeginIdleState(bool firstState = false)
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x8F0864", Offset = "0x8F0864", VA = "0x8F0864")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57BA98", Offset = "0x57BA98")]
		private IEnumerator IdleState(float stateTime)
		{
			return null;
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x8F0558", Offset = "0x8F0558", VA = "0x8F0558")]
		private void BeginWanderState()
		{
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x8F0A3C", Offset = "0x8F0A3C", VA = "0x8F0A3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57BAFC", Offset = "0x57BAFC")]
		private IEnumerator MovementState(Vector3 target)
		{
			return null;
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x8F0AD0", Offset = "0x8F0AD0", VA = "0x8F0AD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57BB60", Offset = "0x57BB60")]
		private IEnumerator NonNavMeshMovementState(Vector3 target)
		{
			return null;
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x8EFBE4", Offset = "0x8EFBE4", VA = "0x8EFBE4")]
		private void RunAwayFromAnimal(Common_WanderScript predator)
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x8F0BBC", Offset = "0x8F0BBC", VA = "0x8F0BBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57BBC4", Offset = "0x57BBC4")]
		private IEnumerator RunAwayState(Vector3 target, Common_WanderScript predator)
		{
			return null;
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x8EFFE8", Offset = "0x8EFFE8", VA = "0x8EFFE8")]
		private void NonNavMeshRunAwayFromAnimal(Common_WanderScript predator)
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x8F0C8C", Offset = "0x8F0C8C", VA = "0x8F0C8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57BC28", Offset = "0x57BC28")]
		private IEnumerator NonNavMeshRunAwayState(Vector3 target, Common_WanderScript predator)
		{
			return null;
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x8F0388", Offset = "0x8F0388", VA = "0x8F0388")]
		private void ChaseAnimal(Common_WanderScript prey)
		{
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x8F0D94", Offset = "0x8F0D94", VA = "0x8F0D94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57BC8C", Offset = "0x57BC8C")]
		private IEnumerator ChaseState(Common_WanderScript prey)
		{
			return null;
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x8F0E10", Offset = "0x8F0E10", VA = "0x8F0E10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57BCF0", Offset = "0x57BCF0")]
		private IEnumerator NonNavMeshChaseState(Common_WanderScript prey)
		{
			return null;
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x8F0EE4", Offset = "0x8F0EE4", VA = "0x8F0EE4")]
		private void AttackAnimal(Common_WanderScript target)
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x8F10DC", Offset = "0x8F10DC", VA = "0x8F10DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57BD54", Offset = "0x57BD54")]
		private IEnumerator MakeAttack(Common_WanderScript target)
		{
			return null;
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x8F1184", Offset = "0x8F1184", VA = "0x8F1184")]
		private void GetAttacked(Common_WanderScript attacker)
		{
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x8F1530", Offset = "0x8F1530", VA = "0x8F1530")]
		private void TakeDamage(float damage)
		{
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x8EDB70", Offset = "0x8EDB70", VA = "0x8EDB70")]
		public void Die()
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x8ED9EC", Offset = "0x8ED9EC", VA = "0x8ED9EC")]
		public void SetPeaceTime(bool peace)
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x8F0910", Offset = "0x8F0910", VA = "0x8F0910")]
		private Vector3 RandonPointInRange()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x8F14B4", Offset = "0x8F14B4", VA = "0x8F14B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57BDB8", Offset = "0x57BDB8")]
		private IEnumerator TurnToLookAtTarget(Transform target)
		{
			return null;
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0x8F0D5C", Offset = "0x8F0D5C", VA = "0x8F0D5C")]
		private void BeginChase(Common_WanderScript chasingAnimal)
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0x8F1578", Offset = "0x8F1578", VA = "0x8F1578")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57BE1C", Offset = "0x57BE1C")]
		private IEnumerator ChaseCheck(Common_WanderScript chasingAnimal)
		{
			return null;
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x8EBD14", Offset = "0x8EBD14", VA = "0x8EBD14")]
		public Common_WanderScript()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000127")]
	public class IdleState : AIState
	{
		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minStateTime;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxStateTime;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57131C", Offset = "0x57131C")]
		public int stateWeight;

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x8F41B4", Offset = "0x8F41B4", VA = "0x8F41B4")]
		public IdleState()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000128")]
	public class MovementState : AIState
	{
		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxStateTime;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float moveSpeed;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float turnSpeed;

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x8F41CC", Offset = "0x8F41CC", VA = "0x8F41CC")]
		public MovementState()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class AnimalAudioManager : Common_AudioManager
	{
		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x8EBB7C", Offset = "0x8EBB7C", VA = "0x8EBB7C")]
		public AnimalAudioManager()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public class AnimalPlaySound : Common_PlaySound
	{
		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x8EBBFC", Offset = "0x8EBBFC", VA = "0x8EBBFC")]
		public AnimalPlaySound()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class AnimalWanderManager : Common_WanderManager
	{
		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x8EBC0C", Offset = "0x8EBC0C", VA = "0x8EBC0C")]
		public AnimalWanderManager()
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class Animal_AIStats : AIStats
	{
		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x8EBC1C", Offset = "0x8EBC1C", VA = "0x8EBC1C")]
		public Animal_AIStats()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public class Animal_SurfaceRotation : Common_SurfaceRotation
	{
		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x8EBC44", Offset = "0x8EBC44", VA = "0x8EBC44")]
		public Animal_SurfaceRotation()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class Animal_WanderScript : Common_WanderScript
	{
		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x8EBCB0", Offset = "0x8EBCB0", VA = "0x8EBCB0")]
		public Animal_WanderScript()
		{
		}
	}
}
namespace StylizedWaterShader
{
	[Token(Token = "0x200012F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56D9B0", Offset = "0x56D9B0")]
	[ExecuteInEditMode]
	public class EnableDepthBuffer : MonoBehaviour
	{
		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera cam;

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x8A7F58", Offset = "0x8A7F58", VA = "0x8A7F58")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x8A7FE4", Offset = "0x8A7FE4", VA = "0x8A7FE4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x8A80E0", Offset = "0x8A80E0", VA = "0x8A80E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x8A8174", Offset = "0x8A8174", VA = "0x8A8174")]
		public EnableDepthBuffer()
		{
		}
	}
	[Token(Token = "0x2000130")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56DA24", Offset = "0x56DA24")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x56DA24", Offset = "0x56DA24")]
	public class StylizedWater : MonoBehaviour
	{
		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] shaderNames;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int shaderIndex;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader shader;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Shader DesktopShader;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Shader MobileAdvancedShader;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x571354", Offset = "0x571354")]
		public int renderQueue;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool enableVertexColors;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool enableDepthTex;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool isUnlit;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public bool enableGradient;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Gradient colorGradient;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x571374", Offset = "0x571374")]
		public Color waterShallowColor;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57138C", Offset = "0x57138C")]
		public float depth;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x5713A8", Offset = "0x5713A8")]
		public Color waterColor;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x5713C0", Offset = "0x5713C0")]
		public Color fresnelColor;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float fresnel;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x5713D8", Offset = "0x5713D8")]
		public Color rimColor;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5713F0", Offset = "0x5713F0")]
		public float waveTint;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x571408", Offset = "0x571408")]
		public float transparency;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x571420", Offset = "0x571420")]
		public float glossiness;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57143C", Offset = "0x57143C")]
		public float metallicness;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x571454", Offset = "0x571454")]
		public float edgeFade;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string[] tilingMethodNames;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float worldSpaceTiling;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57146C", Offset = "0x57146C")]
		public float refractionAmount;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool enableNormalMap;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x571488", Offset = "0x571488")]
		public float normalStrength;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool enableMacroNormals;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5714A0", Offset = "0x5714A0")]
		public float macroNormalsDistance;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5714C0", Offset = "0x5714C0")]
		public float normalTiling;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public int intersectionSolver;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string[] intersectionSolverNames;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5714DC", Offset = "0x5714DC")]
		public float rimSize;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5714F4", Offset = "0x5714F4")]
		public float rimFalloff;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float rimTiling;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x571510", Offset = "0x571510")]
		public float rimDistortion;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool enableVCIntersection;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public int foamSolver;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string[] foamSolverNames;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x571528", Offset = "0x571528")]
		public float foamOpacity;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float foamTiling;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x571540", Offset = "0x571540")]
		public float foamSize;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x571558", Offset = "0x571558")]
		public float foamDistortion;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x571570", Offset = "0x571570")]
		public float foamSpeed;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x571588", Offset = "0x571588")]
		public float waveFoam;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5715A0", Offset = "0x5715A0")]
		public float reflectionStrength;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5715B8", Offset = "0x5715B8")]
		public float reflectionFresnel;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool showReflection;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5715D4", Offset = "0x5715D4")]
		public float reflectionRefraction;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5715F0", Offset = "0x5715F0")]
		public float waveSpeed;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57160C", Offset = "0x57160C")]
		public float waveStrength;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x571624", Offset = "0x571624")]
		public Vector4 waveDirectionXZ;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool enableSecondaryWaves;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Texture2D customIntersection;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Texture2D customNormal;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Texture2D customHeightmap;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public string[] intersectionStyleNames;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public int intersectionStyle;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string[] waveStyleNames;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public int waveStyle;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public string[] waveHeightmapNames;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public int waveHeightmapStyle;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public float waveSize;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public bool useCustomIntersection;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		public bool useCustomNormals;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x192")]
		public bool useCustomHeightmap;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Texture2D normals;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Texture2D shadermap;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Texture2D colorGradientTex;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public bool useCompression;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool EnableReflections;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Camera reflectionCamera;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Camera refractCamera;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public bool useReflection;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
		public bool useRefractionCam;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CA")]
		public bool enableReflectionBlur;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57163C", Offset = "0x57163C")]
		public float reflectionBlurLength;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x571654", Offset = "0x571654")]
		public int reflectionBlurPasses;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private StylizedWaterBlur reflectionBlurRenderer;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public string[] refractionSolverNames;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public int refractionSolver;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public string[] resolutionNames;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public int reflectionRes;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public int refractRes;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public int reflectionTextureSize;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public int refractTextureSize;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57166C", Offset = "0x57166C")]
		public float clipPlaneOffset;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public LayerMask reflectLayers;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public LayerMask refractLayers;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Dictionary<Camera, Camera> m_ReflectionCameras;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Dictionary<Camera, StylizedWaterBlur> m_BlurRenderers;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Dictionary<Camera, Camera> m_RefractCameras;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private RenderTexture m_ReflectionTexture;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private RenderTexture m_RefractTexture;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private int m_OldReflectionTextureSize;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private int m_OldRefractTextureSize;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private bool s_InsideRendering;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		public int lightingMethod;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public string[] lightingMethodNames;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public bool enableShadows;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private StylizedWaterShadowCaster shadowRenderer;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public Light shadowCaster;

		[NonSerialized]
		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public Material material;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public bool isMobileAdvanced;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x281")]
		public bool isMobilePlatform;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public string shaderName;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public bool isWaterLayer;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x291")]
		public bool hasShaderParams;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x292")]
		public bool hasMaterial;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x293")]
		public bool usingSinglePassRendering;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		public bool hideMeshRenderer;

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x8A861C", Offset = "0x8A861C", VA = "0x8A861C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x8A8744", Offset = "0x8A8744", VA = "0x8A8744")]
		public void Init()
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x8A86AC", Offset = "0x8A86AC", VA = "0x8A86AC")]
		public void GetProperties()
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x8A8748", Offset = "0x8A8748", VA = "0x8A8748")]
		private void GetShaderProperties()
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x8A8F20", Offset = "0x8A8F20", VA = "0x8A8F20")]
		private void GetShaderType()
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x8A8F24", Offset = "0x8A8F24", VA = "0x8A8F24")]
		private void SetShaderType()
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x8A86B0", Offset = "0x8A86B0", VA = "0x8A86B0")]
		public void SetProperties()
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x8A91D8", Offset = "0x8A91D8", VA = "0x8A91D8")]
		private void SetShaderProperties()
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x8A9C68", Offset = "0x8A9C68", VA = "0x8A9C68")]
		public void DisableReflectionCam()
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x8A9AC0", Offset = "0x8A9AC0", VA = "0x8A9AC0")]
		public void DisableRefractionCam()
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x8A8F28", Offset = "0x8A8F28", VA = "0x8A8F28")]
		private void EnableShadowRendering()
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x8A8FE8", Offset = "0x8A8FE8", VA = "0x8A8FE8")]
		private void DisableShadowRendering()
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x8A9E64", Offset = "0x8A9E64", VA = "0x8A9E64")]
		public void SetVegetationStudioWaterLevel()
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x8A9E68", Offset = "0x8A9E68", VA = "0x8A9E68")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x8AB788", Offset = "0x8AB788", VA = "0x8AB788")]
		public void CreateReflectionTexture()
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x8AB8AC", Offset = "0x8AB8AC", VA = "0x8AB8AC")]
		public void CreateRefractionTexture()
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x8AA5FC", Offset = "0x8AA5FC", VA = "0x8AA5FC")]
		private void CreateWaterObjects(Camera currentCamera, out Camera reflectionCamera, out Camera refractCamera)
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x8ABA44", Offset = "0x8ABA44", VA = "0x8ABA44")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x8ABB04", Offset = "0x8ABB04", VA = "0x8ABB04")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x8ABB08", Offset = "0x8ABB08", VA = "0x8ABB08")]
		public StylizedWater()
		{
		}
	}
	[Token(Token = "0x2000131")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56DABC", Offset = "0x56DABC")]
	[ExecuteInEditMode]
	public class StylizedWaterBlur : MonoBehaviour
	{
		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera cam;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float length;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int passes;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader m_BlurRenderShader;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material m_BlurRenderMat;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CommandBuffer cmd;

		[Token(Token = "0x17000025")]
		private static Shader BlurRenderShader
		{
			[Token(Token = "0x60006C2")]
			[Address(RVA = "0x8ABC40", Offset = "0x8ABC40", VA = "0x8ABC40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private static Material BlurRenderMat
		{
			[Token(Token = "0x60006C3")]
			[Address(RVA = "0x8ABCF0", Offset = "0x8ABCF0", VA = "0x8ABCF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x8ABDDC", Offset = "0x8ABDDC", VA = "0x8ABDDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x8ABE6C", Offset = "0x8ABE6C", VA = "0x8ABE6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x8AB408", Offset = "0x8AB408", VA = "0x8AB408")]
		public void Render()
		{
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x8ABF18", Offset = "0x8ABF18", VA = "0x8ABF18")]
		public StylizedWaterBlur()
		{
		}
	}
	[Token(Token = "0x2000132")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56DB30", Offset = "0x56DB30")]
	[ExecuteInEditMode]
	public class StylizedWaterShadowCaster : MonoBehaviour
	{
		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer cmd;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Light dirLight;

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x8ABF2C", Offset = "0x8ABF2C", VA = "0x8ABF2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x8AC0D0", Offset = "0x8AC0D0", VA = "0x8AC0D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x8AC160", Offset = "0x8AC160", VA = "0x8AC160")]
		public StylizedWaterShadowCaster()
		{
		}
	}
	[Token(Token = "0x2000133")]
	public static class StylizedWaterUtilities
	{
		[Token(Token = "0x2000320")]
		public static class CameraUtils
		{
			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0x8AB228", Offset = "0x8AB228", VA = "0x8AB228")]
			public static Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign, float clipPlaneOffset)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6001C20")]
			[Address(RVA = "0x8AAF84", Offset = "0x8AAF84", VA = "0x8AAF84")]
			public static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
			{
			}

			[Token(Token = "0x6001C21")]
			[Address(RVA = "0x8AADEC", Offset = "0x8AADEC", VA = "0x8AADEC")]
			public static void CopyCameraSettings(Camera src, Camera dest)
			{
			}
		}

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DEBUG;

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x8AC168", Offset = "0x8AC168", VA = "0x8AC168")]
		public static string[] ComposeDropdown(Texture2D[] resource, string replaceFilter)
		{
			return null;
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x8AC370", Offset = "0x8AC370", VA = "0x8AC370")]
		public static bool IsApproximatelyEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x8AC3F0", Offset = "0x8AC3F0", VA = "0x8AC3F0")]
		public static bool HasVertexColors(Mesh mesh)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000134")]
	public class OrbitCamera : MonoBehaviour
	{
		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x571684", Offset = "0x571684")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x571684", Offset = "0x571684")]
		public Transform pivot;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5716D0", Offset = "0x5716D0")]
		public bool enableMouse;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float idleRotationSpeed;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform cam;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float cameraRotSide;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float cameraRotUp;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float cameraRotSideCur;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float cameraRotUpCur;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float distance;

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x8A817C", Offset = "0x8A817C", VA = "0x8A817C")]
		private void Start()
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x8A823C", Offset = "0x8A823C", VA = "0x8A823C")]
		private void Update()
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x8A8600", Offset = "0x8A8600", VA = "0x8A8600")]
		public OrbitCamera()
		{
		}
	}
}
namespace MeshSplitting.Splitters
{
	[Token(Token = "0x2000135")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56DBA4", Offset = "0x56DBA4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56DBA4", Offset = "0x56DBA4")]
	public class Splitter : MonoBehaviour
	{
		[Token(Token = "0x2000321")]
		public enum ToolType
		{
			[Token(Token = "0x40019E0")]
			Axe,
			[Token(Token = "0x40019E1")]
			PickAxe
		}

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Transform _transform;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable grabbableForToolParent;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ToolType tool;

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xABA990", Offset = "0xABA990", VA = "0xABA990", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xABAA0C", Offset = "0xABAA0C", VA = "0xABAA0C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xABAD94", Offset = "0xABAD94", VA = "0xABAD94", Slot = "5")]
		protected virtual void SplitObject(ISplitable splitable, GameObject go)
		{
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xABAE5C", Offset = "0xABAE5C", VA = "0xABAE5C")]
		public Splitter()
		{
		}
	}
	[Token(Token = "0x2000136")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56DC2C", Offset = "0x56DC2C")]
	public class SplitterRock : SplitterSingleCut
	{
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xABAE64", Offset = "0xABAE64", VA = "0xABAE64")]
		private void Start()
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xABAF44", Offset = "0xABAF44", VA = "0xABAF44", Slot = "5")]
		protected override void SplitObject(ISplitable splitable, GameObject go)
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xABB268", Offset = "0xABB268", VA = "0xABB268")]
		public SplitterRock()
		{
		}
	}
	[Token(Token = "0x2000137")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56DC64", Offset = "0x56DC64")]
	public class SplitterSingleCut : Splitter
	{
		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool _hasCut;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float _time;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Collider collisionPlane;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource audioOutput;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float timeOrigStore;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject particleEffectChop;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool destroyAfterCut;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ToolLevelController toolLevelController;

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xABB288", Offset = "0xABB288", VA = "0xABB288")]
		private void Start()
		{
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xABB294", Offset = "0xABB294", VA = "0xABB294", Slot = "5")]
		protected override void SplitObject(ISplitable splitable, GameObject go)
		{
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xABB534", Offset = "0xABB534", VA = "0xABB534", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xABB5BC", Offset = "0xABB5BC", VA = "0xABB5BC")]
		public void EnableCutter()
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xABB59C", Offset = "0xABB59C", VA = "0xABB59C")]
		public void DisableCutter()
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xABB278", Offset = "0xABB278", VA = "0xABB278")]
		public SplitterSingleCut()
		{
		}
	}
}
namespace MeshSplitting.SplitterMath
{
	[Token(Token = "0x2000138")]
	public class PlaneMath
	{
		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Point;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 Normal;

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xAB9F90", Offset = "0xAB9F90", VA = "0xAB9F90")]
		public PlaneMath()
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xABA01C", Offset = "0xABA01C", VA = "0xABA01C")]
		public PlaneMath(PlaneMath plane)
		{
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xAAA38C", Offset = "0xAAA38C", VA = "0xAAA38C")]
		public PlaneMath(Transform transform)
		{
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xABA06C", Offset = "0xABA06C", VA = "0xABA06C")]
		public PlaneMath(Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xABA0CC", Offset = "0xABA0CC", VA = "0xABA0CC")]
		public float LineIntersect(Vector3 lineStart, Vector3 lineEnd)
		{
			return default(float);
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xABA208", Offset = "0xABA208", VA = "0xABA208")]
		public float PointSide(Vector3 point)
		{
			return default(float);
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xABA2EC", Offset = "0xABA2EC", VA = "0xABA2EC")]
		public float PointSideNormalized(Vector3 point)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000139")]
	public static class SplitterHelper
	{
		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float Threshold;

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xABA3F0", Offset = "0xABA3F0", VA = "0xABA3F0")]
		public static bool CompareVector2(Vector2 vecA, Vector2 vecB)
		{
			return default(bool);
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xABA46C", Offset = "0xABA46C", VA = "0xABA46C")]
		public static bool CompareVector2(ref Vector2 vecA, ref Vector2 vecB)
		{
			return default(bool);
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xABA598", Offset = "0xABA598", VA = "0xABA598")]
		public static bool CompareVector3(Vector3 vecA, Vector3 vecB)
		{
			return default(bool);
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xABA61C", Offset = "0xABA61C", VA = "0xABA61C")]
		public static bool CompareVector3(ref Vector3 vecA, ref Vector3 vecB)
		{
			return default(bool);
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xABA7A8", Offset = "0xABA7A8", VA = "0xABA7A8")]
		public static float GetPlaneSide(PlaneMath plane, Vector3[] vertices)
		{
			return default(float);
		}
	}
}
namespace MeshSplitting.MeshTools
{
	[Token(Token = "0x200013A")]
	public interface IMeshSplitter
	{
		[Token(Token = "0x60006EC")]
		void SetCapUV(bool useCapUV, bool customUV, Vector2 uvMin, Vector2 uvMax);

		[Token(Token = "0x60006ED")]
		void MeshSplit();

		[Token(Token = "0x60006EE")]
		void MeshCreateCaps();
	}
	[Token(Token = "0x200013B")]
	public class MeshContainer
	{
		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh Mesh;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transform;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform[] bones;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isAnimated;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int vertexCount;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] wsVerts;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3[] vertices;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3[] normals;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector4[] tangents;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector2[] uv;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector2[] uv2;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Color[] colors;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BoneWeight[] boneWeights;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int[] triangles;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Matrix4x4[] bindPoses;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<Vector3> wsVertsNew;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<Vector3> verticesNew;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<Vector3> normalsNew;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<Vector4> tangentsNew;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<Vector2> uvNew;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<Vector2> uv2New;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<Color> colorsNew;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<BoneWeight> boneWeightsNew;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<int> trisUp;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<int> trisDown;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2 Vector2Zero;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector3 Vector3Up;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static Vector3 Vector3Fwd;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Vector4 Vector4Zero;

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xBB7100", Offset = "0xBB7100", VA = "0xBB7100")]
		public MeshContainer(MeshFilter meshFilter)
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xBB718C", Offset = "0xBB718C", VA = "0xBB718C")]
		public MeshContainer(SkinnedMeshRenderer skinnedRenderer)
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xBB722C", Offset = "0xBB722C", VA = "0xBB722C")]
		public void MeshInitialize()
		{
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0xBB75D8", Offset = "0xBB75D8", VA = "0xBB75D8")]
		public void CalculateWorldSpace()
		{
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xBB75E8", Offset = "0xBB75E8", VA = "0xBB75E8")]
		private void CalculateWorldSpaceStatic()
		{
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xBB76CC", Offset = "0xBB76CC", VA = "0xBB76CC")]
		private void CalculateWorldSpaceAnimated()
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xBB7B30", Offset = "0xBB7B30", VA = "0xBB7B30")]
		public bool IsMeshSplit()
		{
			return default(bool);
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xBB7B68", Offset = "0xBB7B68", VA = "0xBB7B68")]
		public bool HasMeshUpper()
		{
			return default(bool);
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0xBB7BC0", Offset = "0xBB7BC0", VA = "0xBB7BC0")]
		public bool HasMeshLower()
		{
			return default(bool);
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xBB7C18", Offset = "0xBB7C18", VA = "0xBB7C18")]
		public Mesh CreateMeshUpper()
		{
			return null;
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xBB83EC", Offset = "0xBB83EC", VA = "0xBB83EC")]
		public Mesh CreateMeshLower()
		{
			return null;
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xBB7C20", Offset = "0xBB7C20", VA = "0xBB7C20")]
		private Mesh CreateMesh(List<int> tris)
		{
			return null;
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xBB83F4", Offset = "0xBB83F4", VA = "0xBB83F4")]
		public int AddLerpVertex(int from, int to, float t)
		{
			return default(int);
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xBB88A8", Offset = "0xBB88A8", VA = "0xBB88A8")]
		public int AddCapVertex(int refIndex, Vector3 normal)
		{
			return default(int);
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xBB89C8", Offset = "0xBB89C8", VA = "0xBB89C8")]
		public int AddCapVertex(int refIndex, Vector3 normal, Vector2 capUV)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200013C")]
	public class MeshSplitterConcave : IMeshSplitter
	{
		[Token(Token = "0x2000322")]
		protected class Edge
		{
			[Token(Token = "0x40019E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Vector2 _zero;

			[Token(Token = "0x40019E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static readonly Quaternion _cw90;

			[Token(Token = "0x40019E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 _left;

			[Token(Token = "0x40019E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector2 _right;

			[Token(Token = "0x40019E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector2 _normal;

			[Token(Token = "0x40019E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int IndexLeft;

			[Token(Token = "0x40019E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int IndexRight;

			[Token(Token = "0x40019E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 UVLeft;

			[Token(Token = "0x40019EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector2 UVRight;

			[Token(Token = "0x1700063C")]
			public Vector2 Left
			{
				[Token(Token = "0x6001C22")]
				[Address(RVA = "0xBBCC58", Offset = "0xBBCC58", VA = "0xBBCC58")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6001C23")]
				[Address(RVA = "0xBBC0F0", Offset = "0xBBC0F0", VA = "0xBBC0F0")]
				set
				{
				}
			}

			[Token(Token = "0x1700063D")]
			public Vector2 Right
			{
				[Token(Token = "0x6001C24")]
				[Address(RVA = "0xBBCC60", Offset = "0xBBCC60", VA = "0xBBCC60")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6001C25")]
				[Address(RVA = "0xBBC174", Offset = "0xBBC174", VA = "0xBBC174")]
				set
				{
				}
			}

			[Token(Token = "0x1700063E")]
			public Vector2 Normal
			{
				[Token(Token = "0x6001C26")]
				[Address(RVA = "0xBBCAE8", Offset = "0xBBCAE8", VA = "0xBBCAE8")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x6001C27")]
			[Address(RVA = "0xBBCC68", Offset = "0xBBCC68", VA = "0xBBCC68")]
			public void CalculateNormal()
			{
			}

			[Token(Token = "0x6001C28")]
			[Address(RVA = "0xBBCBB4", Offset = "0xBBCBB4", VA = "0xBBCBB4")]
			public bool EdgeIntersect(Edge other)
			{
				return default(bool);
			}

			[Token(Token = "0x6001C29")]
			[Address(RVA = "0xBBC47C", Offset = "0xBBC47C", VA = "0xBBC47C")]
			public void Flip()
			{
			}

			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0xBBC7A4", Offset = "0xBBC7A4", VA = "0xBBC7A4")]
			public bool SameVectors(Edge other)
			{
				return default(bool);
			}

			[Token(Token = "0x6001C2B")]
			[Address(RVA = "0xBBC644", Offset = "0xBBC644", VA = "0xBBC644")]
			public static Edge MeltEdges(Edge edgeLeft, Edge edgeRight)
			{
				return null;
			}

			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0xBBC6F4", Offset = "0xBBC6F4", VA = "0xBBC6F4")]
			public static Edge CloseEdges(Edge edgeLeft, Edge edgeRight)
			{
				return null;
			}

			[Token(Token = "0x6001C2D")]
			[Address(RVA = "0xBB9F40", Offset = "0xBB9F40", VA = "0xBB9F40")]
			public Edge()
			{
			}
		}

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool UseCapUV;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool CustomUV;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 CapUVMin;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 CapUVMax;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected MeshContainer _mesh;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected PlaneMath _splitPlane;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Quaternion _splitRotation;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion _ownRotation;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Edge> _edges;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] triIndicies;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] lineLerp;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] lineHit;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] triVertices;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int[] smallTri;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int[] bigTri;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private LinkedList<LinkedList<int>> linkedBorders;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<int> triList;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<Vector2> uvList;

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xBB8F04", Offset = "0xBB8F04", VA = "0xBB8F04")]
		public MeshSplitterConcave(MeshContainer meshContainer, PlaneMath splitPlane, Quaternion splitRotation)
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0xBB90D0", Offset = "0xBB90D0", VA = "0xBB90D0", Slot = "4")]
		public void SetCapUV(bool useCapUV, bool customUV, Vector2 uvMin, Vector2 uvMax)
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0xBB90EC", Offset = "0xBB90EC", VA = "0xBB90EC", Slot = "5")]
		public void MeshSplit()
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0xBB9780", Offset = "0xBB9780", VA = "0xBB9780")]
		private void SplitTriangle(int[] triIndicies, float[] lineLerp, int offset)
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0xBB9DC8", Offset = "0xBB9DC8", VA = "0xBB9DC8")]
		private void AddEdge(int index0, int index1)
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0xBB9FCC", Offset = "0xBB9FCC", VA = "0xBB9FCC", Slot = "6")]
		public void MeshCreateCaps()
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0xBBA0F4", Offset = "0xBBA0F4", VA = "0xBBA0F4")]
		private void CalculateRotatedEdges()
		{
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0xBBA37C", Offset = "0xBBA37C", VA = "0xBBA37C")]
		private void LinkEdges()
		{
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0xBBC1F8", Offset = "0xBBC1F8", VA = "0xBBC1F8")]
		private void AttachLinkedList(LinkedList<int> source, LinkedList<int> destination)
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0xBBC310", Offset = "0xBBC310", VA = "0xBBC310")]
		private void AttachLinkedListFlip(LinkedList<int> source, LinkedList<int> destination)
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xBBA9D4", Offset = "0xBBA9D4", VA = "0xBBA9D4")]
		private void CheckNormals()
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0xBBAF40", Offset = "0xBBAF40", VA = "0xBBAF40")]
		private void CreateUVs()
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xBBB318", Offset = "0xBBB318", VA = "0xBBB318")]
		private void CreateTriangles()
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0xBBC880", Offset = "0xBBC880", VA = "0xBBC880")]
		private void AddTriangle(Edge edge1, Edge edge2, Edge edge3)
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0xBBC4BC", Offset = "0xBBC4BC", VA = "0xBBC4BC")]
		private int TestInnerSide(Edge currentEdge, Edge nextEdge, bool cw)
		{
			return default(int);
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xBBC98C", Offset = "0xBBC98C", VA = "0xBBC98C")]
		private bool TestNewEdgeIntersect(Edge edge, LinkedList<int> borderIndicies)
		{
			return default(bool);
		}

		[Token(Token = "0x600070F")]
		private static LinkedListNode<T> LLCircularNext<T>(LinkedListNode<T> current)
		{
			return null;
		}

		[Token(Token = "0x6000710")]
		private static LinkedListNode<T> LLCircularPrevious<T>(LinkedListNode<T> current)
		{
			return null;
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0xBBBCB0", Offset = "0xBBBCB0", VA = "0xBBBCB0")]
		private void AddTrianglesToMesh()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public class MeshSplitterConvex : IMeshSplitter
	{
		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool UseCapUV;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool CustomUV;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 CapUVMin;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 CapUVMax;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected MeshContainer _mesh;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected PlaneMath _splitPlane;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Quaternion _splitRotation;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion _ownRotation;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<int> capInds;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] triIndicies;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] lineLerp;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] lineHit;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] triVertices;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int[] smallTri;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int[] bigTri;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2 Vector2Up;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected int[] capsSorted;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector2[] capsUV;

		[Token(Token = "0x6000712")]
		[Address(RVA = "0xBBCF0C", Offset = "0xBBCF0C", VA = "0xBBCF0C")]
		public MeshSplitterConvex(MeshContainer meshContainer, PlaneMath splitPlane, Quaternion splitRotation)
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0xBBD0B0", Offset = "0xBBD0B0", VA = "0xBBD0B0", Slot = "4")]
		public void SetCapUV(bool useCapUV, bool customUV, Vector2 uvMin, Vector2 uvMax)
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0xBBD0CC", Offset = "0xBBD0CC", VA = "0xBBD0CC", Slot = "5")]
		public void MeshSplit()
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0xBBD7A4", Offset = "0xBBD7A4", VA = "0xBBD7A4")]
		private void SplitTriangle(int offset)
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0xBBDE30", Offset = "0xBBDE30", VA = "0xBBDE30")]
		private void SplitTriangleAlternative(int offset)
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xBBE31C", Offset = "0xBBE31C", VA = "0xBBE31C")]
		private void AddCapIndex(int index)
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xBBE4E0", Offset = "0xBBE4E0", VA = "0xBBE4E0", Slot = "6")]
		public void MeshCreateCaps()
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xBBE9D8", Offset = "0xBBE9D8", VA = "0xBBE9D8")]
		private void CreateCap()
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xBBF3D4", Offset = "0xBBF3D4", VA = "0xBBF3D4")]
		private void Swap(int[] array, int a, int b)
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xBBF3AC", Offset = "0xBBF3AC", VA = "0xBBF3AC")]
		private bool SortLowY(Vector2 a, Vector2 b)
		{
			return default(bool);
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xBBF430", Offset = "0xBBF430", VA = "0xBBF430")]
		private void GnomeSort(int[] index, int[] value)
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xBBF510", Offset = "0xBBF510", VA = "0xBBF510")]
		private void SortEvenStart(int[] index, int[] value, Vector2[] localVerts)
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xBBF638", Offset = "0xBBF638", VA = "0xBBF638")]
		private void SortEvenEnd(int[] index, int[] value, Vector2[] localVerts)
		{
		}
	}
}
namespace MeshSplitting.Demo
{
	[Token(Token = "0x200013E")]
	public class DestroyLimitY : MonoBehaviour
	{
		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float YValue;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _transform;

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xBB6FF0", Offset = "0xBB6FF0", VA = "0xBB6FF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xBB7048", Offset = "0xBB7048", VA = "0xBB7048")]
		private void Update()
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0xBB70F0", Offset = "0xBB70F0", VA = "0xBB70F0")]
		public DestroyLimitY()
		{
		}
	}
}
namespace MeshSplitting.Splitables
{
	[Token(Token = "0x200013F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56DC9C", Offset = "0x56DC9C")]
	public class SplitableSubCanopy : MonoBehaviour, ISplitable
	{
		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject OptionalTargetObject;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool Convex;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float SplitForce;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CreateCap;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool UseCapUV;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool CustomUV;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector2 CapUVMin;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 CapUVMax;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool ForceNoBatching;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _transform;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlaneMath _splitPlane;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshContainer[] _meshContainerStatic;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IMeshSplitter[] _meshSplitterStatic;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshContainer[] _meshContainerSkinned;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IMeshSplitter[] _meshSplitterSkinned;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isSplitting;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _splitMesh;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool baseTreeAnchored;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform storedOriginalPos;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject topPortion;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool choppedDown;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int cutCount;

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xAAB91C", Offset = "0xAAB91C", VA = "0xAAB91C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0xAAB974", Offset = "0xAAB974", VA = "0xAAB974")]
		private void Update()
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0xAAD1F4", Offset = "0xAAD1F4", VA = "0xAAD1F4", Slot = "4")]
		public void Split(Transform splitTransform, GameObject gameOb)
		{
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0xAABD58", Offset = "0xAABD58", VA = "0xAABD58")]
		private void CreateNewObjects()
		{
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xAAD9D4", Offset = "0xAAD9D4", VA = "0xAAD9D4")]
		public void CutCountIncrease()
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xAADB08", Offset = "0xAADB08", VA = "0xAADB08")]
		public void DeleteFoliage(GameObject GO1, GameObject GO2)
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xAAE030", Offset = "0xAAE030", VA = "0xAAE030")]
		private void UpdateMeshesInChildren(int i, GameObject go)
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xAAE4E0", Offset = "0xAAE4E0", VA = "0xAAE4E0")]
		private Material[] GetSharedMaterials(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0xAAE5EC", Offset = "0xAAE5EC", VA = "0xAAE5EC")]
		private void SetSharedMaterials(GameObject go, Material[] materials)
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xAAE704", Offset = "0xAAE704", VA = "0xAAE704")]
		private void SetMeshOnGameObject(GameObject go, Mesh mesh)
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xAAD9E4", Offset = "0xAAD9E4", VA = "0xAAD9E4")]
		private Mesh GetMeshOnGameObject(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0xAAE830", Offset = "0xAAE830", VA = "0xAAE830", Slot = "5")]
		protected virtual void PostProcessObject(GameObject go)
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0xAAEA80", Offset = "0xAAEA80", VA = "0xAAEA80")]
		public SplitableSubCanopy()
		{
		}
	}
	[Token(Token = "0x2000140")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56DCD4", Offset = "0x56DCD4")]
	public class SplittableRock : MonoBehaviour, ISplitable
	{
		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject OptionalTargetObject;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool Convex;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float SplitForce;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CreateCap;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool UseCapUV;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool CustomUV;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector2 CapUVMin;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 CapUVMax;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool ForceNoBatching;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _transform;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlaneMath _splitPlane;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshContainer[] _meshContainerStatic;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IMeshSplitter[] _meshSplitterStatic;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshContainer[] _meshContainerSkinned;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IMeshSplitter[] _meshSplitterSkinned;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isSplitting;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _splitMesh;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool baseTreeAnchored;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int chopCount;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject[] crystalToSpawn;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject crystalSpawned;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform storedOriginalPos;

		[Token(Token = "0x6000730")]
		[Address(RVA = "0xAB1784", Offset = "0xAB1784", VA = "0xAB1784")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xAB17DC", Offset = "0xAB17DC", VA = "0xAB17DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xAB2E9C", Offset = "0xAB2E9C", VA = "0xAB2E9C", Slot = "4")]
		public void Split(Transform splitTransform, GameObject gameOb)
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0xAB1BC0", Offset = "0xAB1BC0", VA = "0xAB1BC0")]
		private void CreateNewObjects()
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0xAB3D80", Offset = "0xAB3D80", VA = "0xAB3D80")]
		public void DeleteFoliage(GameObject GO1, GameObject GO2)
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xAB38D0", Offset = "0xAB38D0", VA = "0xAB38D0")]
		private void UpdateMeshesInChildren(int i, GameObject go)
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xAB42A8", Offset = "0xAB42A8", VA = "0xAB42A8")]
		private Material[] GetSharedMaterials(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xAB43B4", Offset = "0xAB43B4", VA = "0xAB43B4")]
		private void SetSharedMaterials(GameObject go, Material[] materials)
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xAB44CC", Offset = "0xAB44CC", VA = "0xAB44CC")]
		private void SetMeshOnGameObject(GameObject go, Mesh mesh)
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xAB37AC", Offset = "0xAB37AC", VA = "0xAB37AC")]
		private Mesh GetMeshOnGameObject(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0xAB45F8", Offset = "0xAB45F8", VA = "0xAB45F8", Slot = "5")]
		protected virtual void PostProcessObject(GameObject go)
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xAB47FC", Offset = "0xAB47FC", VA = "0xAB47FC")]
		public SplittableRock()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public static class SplitableJointHelper
	{
		[Token(Token = "0x2000323")]
		public delegate void JointHandler(Rigidbody bodyOrig, Rigidbody bodyUpper, Rigidbody bodyLower);
	}
	[Token(Token = "0x2000142")]
	public interface ISplitable
	{
		[Token(Token = "0x600073C")]
		void Split(Transform splitTransform, GameObject gameObject);
	}
	[Token(Token = "0x2000143")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56DD0C", Offset = "0x56DD0C")]
	public class Splitable : MonoBehaviour, ISplitable
	{
		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject OptionalTargetObject;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool Convex;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float SplitForce;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CreateCap;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool UseCapUV;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool CustomUV;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector2 CapUVMin;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 CapUVMax;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool ForceNoBatching;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _transform;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlaneMath _splitPlane;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshContainer[] _meshContainerStatic;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IMeshSplitter[] _meshSplitterStatic;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshContainer[] _meshContainerSkinned;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IMeshSplitter[] _meshSplitterSkinned;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isSplitting;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _splitMesh;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool baseTreeAnchored;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform storedOriginalPos;

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xAA8900", Offset = "0xAA8900", VA = "0xAA8900")]
		private void Awake()
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xAA8958", Offset = "0xAA8958", VA = "0xAA8958")]
		private void Update()
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xAA9DBC", Offset = "0xAA9DBC", VA = "0xAA9DBC", Slot = "4")]
		public void Split(Transform splitTransform, GameObject gameOb)
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xAA8D3C", Offset = "0xAA8D3C", VA = "0xAA8D3C")]
		private void CreateNewObjects()
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xAAA508", Offset = "0xAAA508", VA = "0xAAA508")]
		public void DeleteFoliage(GameObject GO1, GameObject GO2)
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xAAAA30", Offset = "0xAAAA30", VA = "0xAAAA30")]
		private void UpdateMeshesInChildren(int i, GameObject go)
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0xAAAEE0", Offset = "0xAAAEE0", VA = "0xAAAEE0")]
		private Material[] GetSharedMaterials(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xAAAFEC", Offset = "0xAAAFEC", VA = "0xAAAFEC")]
		private void SetSharedMaterials(GameObject go, Material[] materials)
		{
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0xAAB104", Offset = "0xAAB104", VA = "0xAAB104")]
		private void SetMeshOnGameObject(GameObject go, Mesh mesh)
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xAAA3E4", Offset = "0xAAA3E4", VA = "0xAAA3E4")]
		private Mesh GetMeshOnGameObject(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0xAAB230", Offset = "0xAAB230", VA = "0xAAB230", Slot = "5")]
		protected virtual void PostProcessObject(GameObject go)
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0xAAB420", Offset = "0xAAB420", VA = "0xAAB420")]
		public Splitable()
		{
		}
	}
	[Token(Token = "0x2000144")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56DD44", Offset = "0x56DD44")]
	public class SplitableTree : MonoBehaviour, ISplitable
	{
		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject OptionalTargetObject;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool Convex;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float SplitForce;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CreateCap;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool UseCapUV;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool CustomUV;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector2 CapUVMin;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 CapUVMax;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool ForceNoBatching;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _transform;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlaneMath _splitPlane;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshContainer[] _meshContainerStatic;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IMeshSplitter[] _meshSplitterStatic;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshContainer[] _meshContainerSkinned;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IMeshSplitter[] _meshSplitterSkinned;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isSplitting;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _splitMesh;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool baseTreeAnchored;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform storedOriginalPos;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SoilControllerTree soilControllerTree;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject[] splits;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int indexSplits;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool choppedDown;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int cutCount;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject[] foliage;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Grabbable grabbable;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool grabbedCurrently;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Material highlightMat;

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xAAEB08", Offset = "0xAAEB08", VA = "0xAAEB08")]
		private void Awake()
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xAAEB60", Offset = "0xAAEB60", VA = "0xAAEB60")]
		private void Update()
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0xAB0538", Offset = "0xAB0538", VA = "0xAB0538", Slot = "4")]
		public void Split(Transform splitTransform, GameObject gameOb)
		{
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xAAEFAC", Offset = "0xAAEFAC", VA = "0xAAEFAC")]
		private void CreateNewObjects()
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xAB114C", Offset = "0xAB114C", VA = "0xAB114C")]
		public void DeleteFoliage()
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xAB0B68", Offset = "0xAB0B68", VA = "0xAB0B68")]
		public void CutCountIncrease()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xAB0C9C", Offset = "0xAB0C9C", VA = "0xAB0C9C")]
		private void UpdateMeshesInChildren(int i, GameObject go)
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xAB1250", Offset = "0xAB1250", VA = "0xAB1250")]
		private Material[] GetSharedMaterials(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xAB135C", Offset = "0xAB135C", VA = "0xAB135C")]
		private void SetSharedMaterials(GameObject go, Material[] materials)
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xAB1474", Offset = "0xAB1474", VA = "0xAB1474")]
		private void SetMeshOnGameObject(GameObject go, Mesh mesh)
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xAB0B78", Offset = "0xAB0B78", VA = "0xAB0B78")]
		private Mesh GetMeshOnGameObject(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xAB15A0", Offset = "0xAB15A0", VA = "0xAB15A0", Slot = "5")]
		protected virtual void PostProcessObject(GameObject go)
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xAB16E4", Offset = "0xAB16E4", VA = "0xAB16E4")]
		public void TurnOffSplittable()
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xAB16F0", Offset = "0xAB16F0", VA = "0xAB16F0")]
		public void TurnOnSplittable()
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xAB16FC", Offset = "0xAB16FC", VA = "0xAB16FC")]
		public SplitableTree()
		{
		}
	}
	[Token(Token = "0x2000145")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56DD7C", Offset = "0x56DD7C")]
	public class SplittableTreeLimb : MonoBehaviour, ISplitable
	{
		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject OptionalTargetObject;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool Convex;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float SplitForce;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CreateCap;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool UseCapUV;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool CustomUV;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector2 CapUVMin;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 CapUVMax;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool ForceNoBatching;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _transform;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlaneMath _splitPlane;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshContainer[] _meshContainerStatic;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IMeshSplitter[] _meshSplitterStatic;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshContainer[] _meshContainerSkinned;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IMeshSplitter[] _meshSplitterSkinned;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isSplitting;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _splitMesh;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool baseTreeAnchored;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform storedOriginalPos;

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xAB4884", Offset = "0xAB4884", VA = "0xAB4884")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xAB48DC", Offset = "0xAB48DC", VA = "0xAB48DC")]
		private void Update()
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xAB5D40", Offset = "0xAB5D40", VA = "0xAB5D40", Slot = "4")]
		public void Split(Transform splitTransform, GameObject gameOb)
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xAB4CC0", Offset = "0xAB4CC0", VA = "0xAB4CC0")]
		private void CreateNewObjects()
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xAB6514", Offset = "0xAB6514", VA = "0xAB6514")]
		public void DeleteFoliage(GameObject GO1, GameObject GO2)
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xAB6A3C", Offset = "0xAB6A3C", VA = "0xAB6A3C")]
		private void UpdateMeshesInChildren(int i, GameObject go)
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xAB6EEC", Offset = "0xAB6EEC", VA = "0xAB6EEC")]
		private Material[] GetSharedMaterials(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xAB6FF8", Offset = "0xAB6FF8", VA = "0xAB6FF8")]
		private void SetSharedMaterials(GameObject go, Material[] materials)
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xAB7110", Offset = "0xAB7110", VA = "0xAB7110")]
		private void SetMeshOnGameObject(GameObject go, Mesh mesh)
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xAB63F0", Offset = "0xAB63F0", VA = "0xAB63F0")]
		private Mesh GetMeshOnGameObject(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xAB723C", Offset = "0xAB723C", VA = "0xAB723C", Slot = "5")]
		protected virtual void PostProcessObject(GameObject go)
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xAB7358", Offset = "0xAB7358", VA = "0xAB7358")]
		public SplittableTreeLimb()
		{
		}
	}
	[Token(Token = "0x2000146")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56DDB4", Offset = "0x56DDB4")]
	public class SplittableVege : MonoBehaviour, ISplitable
	{
		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject OptionalTargetObject;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool Convex;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float SplitForce;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CreateCap;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool UseCapUV;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool CustomUV;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector2 CapUVMin;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 CapUVMax;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool ForceNoBatching;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _transform;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlaneMath _splitPlane;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshContainer[] _meshContainerStatic;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IMeshSplitter[] _meshSplitterStatic;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshContainer[] _meshContainerSkinned;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IMeshSplitter[] _meshSplitterSkinned;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isSplitting;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _splitMesh;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool baseTreeAnchored;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform storedOriginalPos;

		[Token(Token = "0x6000764")]
		[Address(RVA = "0xAB73E0", Offset = "0xAB73E0", VA = "0xAB73E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xAB7438", Offset = "0xAB7438", VA = "0xAB7438")]
		private void Update()
		{
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0xAB889C", Offset = "0xAB889C", VA = "0xAB889C", Slot = "4")]
		public void Split(Transform splitTransform, GameObject gameOb)
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0xAB781C", Offset = "0xAB781C", VA = "0xAB781C")]
		private void CreateNewObjects()
		{
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0xAB8F90", Offset = "0xAB8F90", VA = "0xAB8F90")]
		public void DeleteFoliage(GameObject GO1, GameObject GO2)
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xAB94B8", Offset = "0xAB94B8", VA = "0xAB94B8")]
		private void UpdateMeshesInChildren(int i, GameObject go)
		{
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0xAB9968", Offset = "0xAB9968", VA = "0xAB9968")]
		private Material[] GetSharedMaterials(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xAB9A74", Offset = "0xAB9A74", VA = "0xAB9A74")]
		private void SetSharedMaterials(GameObject go, Material[] materials)
		{
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0xAB9B8C", Offset = "0xAB9B8C", VA = "0xAB9B8C")]
		private void SetMeshOnGameObject(GameObject go, Mesh mesh)
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xAB8E6C", Offset = "0xAB8E6C", VA = "0xAB8E6C")]
		private Mesh GetMeshOnGameObject(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xAB9CB8", Offset = "0xAB9CB8", VA = "0xAB9CB8", Slot = "5")]
		protected virtual void PostProcessObject(GameObject go)
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xAB9F08", Offset = "0xAB9F08", VA = "0xAB9F08")]
		public SplittableVege()
		{
		}
	}
}
namespace Polyart
{
	[Token(Token = "0x2000147")]
	public class FoliageInteractor : MonoBehaviour
	{
		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5716E0", Offset = "0x5716E0")]
		public float interactRadius;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5716F8", Offset = "0x5716F8")]
		public float interactStrength;

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x8F4560", Offset = "0x8F4560", VA = "0x8F4560")]
		private void Update()
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x8F464C", Offset = "0x8F464C", VA = "0x8F464C")]
		public FoliageInteractor()
		{
		}
	}
}
namespace Lzf
{
	[Token(Token = "0x2000148")]
	public sealed class LZF
	{
		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly long[] HashTable;

		[Token(Token = "0x4000B9E")]
		private const uint HLOG = 14u;

		[Token(Token = "0x4000B9F")]
		private const uint HSIZE = 16384u;

		[Token(Token = "0x4000BA0")]
		private const uint MAX_LIT = 32u;

		[Token(Token = "0x4000BA1")]
		private const uint MAX_OFF = 8192u;

		[Token(Token = "0x4000BA2")]
		private const uint MAX_REF = 264u;

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x739E18", Offset = "0x739E18", VA = "0x739E18")]
		public int Compress(byte[] input, int inputLength, byte[] output, int outputLength)
		{
			return default(int);
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x73A348", Offset = "0x73A348", VA = "0x73A348")]
		public int Decompress(byte[] input, int inputLength, byte[] output, int outputLength)
		{
			return default(int);
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x73A524", Offset = "0x73A524", VA = "0x73A524")]
		public LZF()
		{
		}
	}
}
namespace Pinwheel.Griffin
{
	[Token(Token = "0x2000149")]
	public static class GCommon
	{
		[Token(Token = "0x4000BA3")]
		public const string SUPPORT_EMAIL = "support@pinwheel.studio";

		[Token(Token = "0x4000BA4")]
		public const string BUSINESS_EMAIL = "hello@pinwheel.studio";

		[Token(Token = "0x4000BA5")]
		public const string YOUTUBE_CHANNEL = "https://www.youtube.com/channel/UCebwuk5CfIe5kolBI9nuBTg";

		[Token(Token = "0x4000BA6")]
		public const string ONLINE_MANUAL = "https://docs.google.com/document/d/1LQooyrEl2S5qP3w2cvX0RYy1CQvUs6mIBACJ8wNhSnE/edit?usp=sharing";

		[Token(Token = "0x4000BA7")]
		public const string FACEBOOK_PAGE = "https://www.facebook.com/polaris.terrain";

		[Token(Token = "0x4000BA8")]
		public const string FORUM = "https://forum.unity.com/threads/pre-release-polaris-hybrid-procedural-low-poly-terrain-engine.541792/#post-3572618";

		[Token(Token = "0x4000BA9")]
		public const string DISCORD = "https://discord.gg/rVeY88d";

		[Token(Token = "0x4000BAA")]
		public const int SUB_DIV_MAP_RESOLUTION = 512;

		[Token(Token = "0x4000BAB")]
		public const string SUB_DIV_MAP_SHADER = "Hidden/Griffin/SubDivisionMap";

		[Token(Token = "0x4000BAC")]
		public const float SUB_DIV_EPSILON = 0.005f;

		[Token(Token = "0x4000BAD")]
		public const float SUB_DIV_PIXEL_OFFSET = 2f;

		[Token(Token = "0x4000BAE")]
		public const float SUB_DIV_STEP = 0.1f;

		[Token(Token = "0x4000BAF")]
		public const string CHUNK_ROOT_NAME_OBSOLETED = "_Geometry";

		[Token(Token = "0x4000BB0")]
		public const string CHUNK_ROOT_NAME = "~Geometry";

		[Token(Token = "0x4000BB1")]
		public const int MAX_LOD_COUNT = 4;

		[Token(Token = "0x4000BB2")]
		public const string CHUNK_MESH_NAME_PREFIX = "~Chunk";

		[Token(Token = "0x4000BB3")]
		public const string GRASS_MESH_NAME_PREFIX = "~GrassPatch";

		[Token(Token = "0x4000BB4")]
		public const string BRUSH_MASK_RESOURCES_PATH = "Brushes";

		[Token(Token = "0x4000BB5")]
		public const int PREVIEW_TEXTURE_SIZE = 512;

		[Token(Token = "0x4000BB6")]
		public const int TEXTURE_SIZE_MIN = 1;

		[Token(Token = "0x4000BB7")]
		public const int TEXTURE_SIZE_MAX = 8192;

		[Token(Token = "0x4000BB8")]
		public const float MAX_TREE_DISTANCE = 5000f;

		[Token(Token = "0x4000BB9")]
		public const float MAX_GRASS_DISTANCE = 500f;

		[Token(Token = "0x4000BBA")]
		public const float MAX_COLLIDER_BUDGET = 100f;

		[Token(Token = "0x4000BBB")]
		public const string FIRST_HISTORY_ENTRY_NAME = "Begin";

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int mainThreadId;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector2[] fullRectUvPoints;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<GTerrainResourceFlag> emptyResourceFlags;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<GTerrainResourceFlag> heightMapAndFoliageResourceFlags;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<GTerrainResourceFlag> albedoResourceFlags;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static List<GTerrainResourceFlag> metallicResourceFlags;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static List<GTerrainResourceFlag> splatResourceFlags;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static List<GTerrainResourceFlag> treeInstancesResourceFlags;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static List<GTerrainResourceFlag> grassInstancesResourceFlags;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static List<GTerrainResourceFlag> foliageInstancesResourceFlags;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static List<GTerrainResourceFlag> allResourceFlags;

		[Token(Token = "0x17000027")]
		public static int MainThreadId
		{
			[Token(Token = "0x6000775")]
			[Address(RVA = "0x8682B0", Offset = "0x8682B0", VA = "0x8682B0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000028")]
		public static bool IsMainThread
		{
			[Token(Token = "0x6000778")]
			[Address(RVA = "0x8683A4", Offset = "0x8683A4", VA = "0x8683A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000029")]
		public static GRenderPipelineType CurrentRenderPipeline
		{
			[Token(Token = "0x6000779")]
			[Address(RVA = "0x868434", Offset = "0x868434", VA = "0x868434")]
			get
			{
				return default(GRenderPipelineType);
			}
		}

		[Token(Token = "0x1700002A")]
		public static Vector2[] FullRectUvPoints
		{
			[Token(Token = "0x600077A")]
			[Address(RVA = "0x8684C4", Offset = "0x8684C4", VA = "0x8684C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		public static List<GTerrainResourceFlag> EmptyResourceFlags
		{
			[Token(Token = "0x600077B")]
			[Address(RVA = "0x868620", Offset = "0x868620", VA = "0x868620")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		public static List<GTerrainResourceFlag> HeightMapAndFoliageResourceFlags
		{
			[Token(Token = "0x600077C")]
			[Address(RVA = "0x8686F4", Offset = "0x8686F4", VA = "0x8686F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		public static List<GTerrainResourceFlag> AlbedoResourceFlags
		{
			[Token(Token = "0x600077D")]
			[Address(RVA = "0x868828", Offset = "0x868828", VA = "0x868828")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		public static List<GTerrainResourceFlag> MetallicResourceFlags
		{
			[Token(Token = "0x600077E")]
			[Address(RVA = "0x868924", Offset = "0x868924", VA = "0x868924")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		public static List<GTerrainResourceFlag> SplatResourceFlags
		{
			[Token(Token = "0x600077F")]
			[Address(RVA = "0x868A20", Offset = "0x868A20", VA = "0x868A20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		public static List<GTerrainResourceFlag> TreeInstancesResourceFlags
		{
			[Token(Token = "0x6000780")]
			[Address(RVA = "0x868B1C", Offset = "0x868B1C", VA = "0x868B1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		public static List<GTerrainResourceFlag> GrassInstancesResourceFlags
		{
			[Token(Token = "0x6000781")]
			[Address(RVA = "0x868C18", Offset = "0x868C18", VA = "0x868C18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		public static List<GTerrainResourceFlag> FoliageInstancesResourceFlags
		{
			[Token(Token = "0x6000782")]
			[Address(RVA = "0x868D14", Offset = "0x868D14", VA = "0x868D14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		public static List<GTerrainResourceFlag> AllResourceFlags
		{
			[Token(Token = "0x6000783")]
			[Address(RVA = "0x868E2C", Offset = "0x868E2C", VA = "0x868E2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		public static Rect UnitRect
		{
			[Token(Token = "0x6000784")]
			[Address(RVA = "0x85F2AC", Offset = "0x85F2AC", VA = "0x85F2AC")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x868318", Offset = "0x868318", VA = "0x868318")]
		static GCommon()
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x86831C", Offset = "0x86831C", VA = "0x86831C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x57BE80", Offset = "0x57BE80")]
		private static void Init()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x8691B8", Offset = "0x8691B8", VA = "0x8691B8")]
		public static string GetUniqueID()
		{
			return null;
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x869230", Offset = "0x869230", VA = "0x869230")]
		public static long GetTimeTick()
		{
			return default(long);
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x8692A8", Offset = "0x8692A8", VA = "0x8692A8")]
		public static string Reverse(string s)
		{
			return null;
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x8692E8", Offset = "0x8692E8", VA = "0x8692E8")]
		public static void SetDirty(UnityEngine.Object o)
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x8692EC", Offset = "0x8692EC", VA = "0x8692EC")]
		public static void TryAddObjectToAsset(UnityEngine.Object objectToAdd, UnityEngine.Object asset)
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x8692F0", Offset = "0x8692F0", VA = "0x8692F0")]
		public static Texture2D CreateTexture(int resolution, Color fill, TextureFormat format = TextureFormat.ARGB32, bool linear = true)
		{
			return null;
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x869418", Offset = "0x869418", VA = "0x869418")]
		public static void ReadPixelsFullSize(RenderTexture rt, Texture2D des, int startX, int startY)
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x869960", Offset = "0x869960", VA = "0x869960")]
		public static Color[] GetPixels(Texture2D src, int startX, int startY, int width, int height, Color defaultColor)
		{
			return null;
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x869D0C", Offset = "0x869D0C", VA = "0x869D0C")]
		public static Color[,] GetPixels2D(Texture2D src, int startX, int startZ, int sampleWidth, int sampleLength, Color defaultColor)
		{
			return null;
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x869ED0", Offset = "0x869ED0", VA = "0x869ED0")]
		public static float[,] GetPixels2D(Texture2D src, int startX, int startZ, int sampleWidth, int sampleLength, Color defaultColor, Func<Color, float> converter)
		{
			return null;
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x86A0BC", Offset = "0x86A0BC", VA = "0x86A0BC")]
		public static void GetPixels2DNonAlloc(Texture2D src, int startX, int startZ, float[,] sample, Color defaultColor, Func<Color, float> converter)
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x86A2A4", Offset = "0x86A2A4", VA = "0x86A2A4")]
		public static void GetPixels2DNonAlloc(Texture2D src, int startX, int startZ, Color[,] sample, Color defaultColor)
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x86A464", Offset = "0x86A464", VA = "0x86A464")]
		public static void SetPixels2D(Texture2D des, int startX, int startY, Color[,] sample)
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x86A4F4", Offset = "0x86A4F4", VA = "0x86A4F4")]
		public static void SetPixels2D(Texture2D des, int startX, int startY, Color[,] sample, Material mat)
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x86A854", Offset = "0x86A854", VA = "0x86A854")]
		public static void SetPixels2D(Texture2D des, int startX, int startZ, float[,] sample, Func<float, Color> converter)
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x86A8EC", Offset = "0x86A8EC", VA = "0x86A8EC")]
		public static void SetPixels2D(Texture2D des, int startX, int startZ, float[,] sample, Func<float, Color> converter, Material mat)
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x86AAA0", Offset = "0x86AAA0", VA = "0x86AAA0")]
		public static void CopyToRT(Texture t, RenderTexture rt)
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x85DA54", Offset = "0x85DA54", VA = "0x85DA54")]
		public static void CopyFromRT(Texture2D t, RenderTexture rt)
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x861AD0", Offset = "0x861AD0", VA = "0x861AD0")]
		public static void CopyTexture(Texture2D src, Texture2D des)
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x86190C", Offset = "0x86190C", VA = "0x86190C")]
		public static Texture2D CloneTexture(Texture2D t)
		{
			return null;
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x86AB30", Offset = "0x86AB30", VA = "0x86AB30")]
		public static void FillTexture(Texture2D t, Color c)
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x86AC38", Offset = "0x86AC38", VA = "0x86AC38")]
		public static void FillTexture(RenderTexture rt, Color c)
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x86AD50", Offset = "0x86AD50", VA = "0x86AD50")]
		public static Texture2D CloneAndResizeTexture(Texture2D t, int width, int height)
		{
			return null;
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x869668", Offset = "0x869668", VA = "0x869668")]
		public static RenderTexture CopyToRT(Texture src, int startX, int startY, int width, int height, Color defaultColor)
		{
			return null;
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x85C8D8", Offset = "0x85C8D8", VA = "0x85C8D8")]
		public static void DrawTexture(RenderTexture rt, Texture texture, Rect uvRect, Material mat, int pass = 0)
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x86AEBC", Offset = "0x86AEBC", VA = "0x86AEBC")]
		public static void DrawTriangle(RenderTexture rt, Vector2 v0, Vector2 v1, Vector2 v2, Color c)
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x86B000", Offset = "0x86B000", VA = "0x86B000")]
		public static void DrawQuad(RenderTexture rt, Vector2[] quadCorners, Material mat, int pass)
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x86B1C8", Offset = "0x86B1C8", VA = "0x86B1C8")]
		public static List<Type> GetAllLoadedTypes()
		{
			return null;
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x85F594", Offset = "0x85F594", VA = "0x85F594")]
		public static IEnumerable<Rect> CompareHeightMap(int gridSize, Color[] oldValues, Color[] newValues)
		{
			return null;
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x86B468", Offset = "0x86B468", VA = "0x86B468")]
		public static IEnumerable<Rect> CompareTerrainTexture(int gridSize, Color32[] oldValues, Color32[] newValues)
		{
			return null;
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x86B38C", Offset = "0x86B38C", VA = "0x86B38C")]
		public static Rect GetUvRange(int gridSize, int x, int z)
		{
			return default(Rect);
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x86B9F0", Offset = "0x86B9F0", VA = "0x86B9F0")]
		public static Texture2D CreateTextureFromCurve(AnimationCurve curve, int width, int height)
		{
			return null;
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x86BBE8", Offset = "0x86BBE8", VA = "0x86BBE8")]
		public static Vector3[] GetBrushQuadCorners(Vector3 center, float radius, float rotation)
		{
			return null;
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x86BF18", Offset = "0x86BF18", VA = "0x86BF18")]
		public static GTerrainGeneratedData GetTerrainGeneratedDataAsset(GTerrainData terrainData, string namePrefix = "Generated")
		{
			return null;
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x86BF60", Offset = "0x86BF60", VA = "0x86BF60")]
		public static void RegisterBeginRender(Camera.CameraCallback callback)
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x86BFEC", Offset = "0x86BFEC", VA = "0x86BFEC")]
		public static void UnregisterBeginRender(Camera.CameraCallback callback)
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x86C078", Offset = "0x86C078", VA = "0x86C078")]
		public static void RegisterEndRender(Camera.CameraCallback callback)
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x86C104", Offset = "0x86C104", VA = "0x86C104")]
		public static void UnregisterEndRender(Camera.CameraCallback callback)
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x86C190", Offset = "0x86C190", VA = "0x86C190")]
		public static void RegisterBeginRenderSRP(Action<ScriptableRenderContext, Camera> callback)
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x86C1F8", Offset = "0x86C1F8", VA = "0x86C1F8")]
		public static void UnregisterBeginRenderSRP(Action<ScriptableRenderContext, Camera> callback)
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x86C260", Offset = "0x86C260", VA = "0x86C260")]
		public static void RegisterEndRenderSRP(Action<ScriptableRenderContext, Camera> callback)
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x86C2C8", Offset = "0x86C2C8", VA = "0x86C2C8")]
		public static void UnregisterEndRenderSRP(Action<ScriptableRenderContext, Camera> callback)
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x86C330", Offset = "0x86C330", VA = "0x86C330")]
		public static void ClearRT(RenderTexture rt)
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x86C368", Offset = "0x86C368", VA = "0x86C368")]
		public static void SetMaterialKeywordActive(Material mat, string keyword, bool active)
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x86C38C", Offset = "0x86C38C", VA = "0x86C38C")]
		public static GStylizedTerrain CreateTerrain(GTerrainData data)
		{
			return null;
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x86C534", Offset = "0x86C534", VA = "0x86C534")]
		public static GTreeCollider CreateTreeCollider(GStylizedTerrain terrain)
		{
			return null;
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x86C6F0", Offset = "0x86C6F0", VA = "0x86C6F0")]
		public static void UpdateMaterials(int groupId)
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x86C9D0", Offset = "0x86C9D0", VA = "0x86C9D0")]
		public static Bounds GetLevelBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x86CD8C", Offset = "0x86CD8C", VA = "0x86CD8C")]
		public static void ForEachTerrain(int groupId, Action<GStylizedTerrain> action)
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x86CFCC", Offset = "0x86CFCC", VA = "0x86CFCC")]
		public static float Frac(float v)
		{
			return default(float);
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x86D03C", Offset = "0x86D03C", VA = "0x86D03C")]
		public static Vector2 Frac(Vector2 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x85F4BC", Offset = "0x85F4BC", VA = "0x85F4BC")]
		public static Vector2 EncodeFloatRG(float v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x85E5A4", Offset = "0x85E5A4", VA = "0x85E5A4")]
		public static float DecodeFloatRG(Vector2 enc)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200014A")]
	public static class GFoliageRenderer
	{
		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GRendererResourceManager resourceManager;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Plane[] frustumPlanes;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Matrix4x4[] batchMatrices;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Matrix4x4[] batchMatricesShadowCaster;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static MaterialPropertyBlock grassMaterialPropertyBlock;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static List<int> preprocessFlags;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static List<Vector3> preprocessWorldPositions;

		[Token(Token = "0x4000BCE")]
		private const string COLOR_PROPERTY = "_Color";

		[Token(Token = "0x4000BCF")]
		private const string MAINTEX_PROPERTY = "_MainTex";

		[Token(Token = "0x4000BD0")]
		private const string BEND_FACTOR_PROPERTY = "_BendFactor";

		[Token(Token = "0x4000BD1")]
		private const string IMAGE_TEXCOORDS_PROPERTY = "_ImageTexcoords";

		[Token(Token = "0x4000BD2")]
		private const string IMAGE_COUNT_PROPERTY = "_ImageCount";

		[Token(Token = "0x4000BD3")]
		private const string NOISETEX_PROPERTY = "_NoiseTex";

		[Token(Token = "0x4000BD4")]
		private const string VECTOR_FIELD_PROPERTY = "_VectorField";

		[Token(Token = "0x4000BD5")]
		private const string WORLD_TO_NORMALIZED_PROPERTY = "_WorldToNormalized";

		[Token(Token = "0x4000BD6")]
		private const string WIND_PROPERTY = "_Wind";

		[Token(Token = "0x4000BD7")]
		private const int FLAG_CULLED = 0;

		[Token(Token = "0x4000BD8")]
		private const int FLAG_NON_INSTANCED = 1;

		[Token(Token = "0x4000BD9")]
		private const int FLAG_NON_INSTANCED_BILLBOARD = 2;

		[Token(Token = "0x4000BDA")]
		private const int FLAG_INSTANCED = 3;

		[Token(Token = "0x4000BDB")]
		private const int FLAG_INSTANCED_BILLBOARD = 4;

		[Token(Token = "0x4000BDC")]
		private const int MAX_INSTANCE_PER_BATCH = 1023;

		[Token(Token = "0x17000035")]
		private static GRendererResourceManager ResourceManager
		{
			[Token(Token = "0x60007BB")]
			[Address(RVA = "0xA7E158", Offset = "0xA7E158", VA = "0xA7E158")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xA7E00C", Offset = "0xA7E00C", VA = "0xA7E00C")]
		static GFoliageRenderer()
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xA7E228", Offset = "0xA7E228", VA = "0xA7E228")]
		public static void Render(GStylizedTerrain t, Camera cam)
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xA80BEC", Offset = "0xA80BEC", VA = "0xA80BEC")]
		public static void RenderPreview(GStylizedTerrain t, Camera cam)
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xA7FC20", Offset = "0xA7FC20", VA = "0xA7FC20")]
		private static void RenderTreesNonInstanced(GStylizedTerrain t, Camera cam)
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xA7E4EC", Offset = "0xA7E4EC", VA = "0xA7E4EC")]
		public static bool IsInstancingAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xA7E66C", Offset = "0xA7E66C", VA = "0xA7E66C")]
		private static void RenderGrass(GStylizedTerrain t, Camera cam)
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xA80CC8", Offset = "0xA80CC8", VA = "0xA80CC8")]
		private static void RenderPreviewGrass(GStylizedTerrain t, Camera cam)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xA7E4F4", Offset = "0xA7E4F4", VA = "0xA7E4F4")]
		private static void RenderTreesInstanced(GStylizedTerrain t, Camera cam)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xA81604", Offset = "0xA81604", VA = "0xA81604")]
		private static void PreprocessRendering(GStylizedTerrain t, Camera cam, List<int> flags, List<Vector3> worldPositions)
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xA81EAC", Offset = "0xA81EAC", VA = "0xA81EAC")]
		private static void RenderTreesInstanced_NonInstanced(GStylizedTerrain t, Camera cam, List<int> flags, List<Vector3> worldPositions)
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xA8232C", Offset = "0xA8232C", VA = "0xA8232C")]
		private static void RenderTreesInstanced_NonInstancedBillboard(GStylizedTerrain t, Camera cam, List<int> flags, List<Vector3> worldPositions)
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xA82978", Offset = "0xA82978", VA = "0xA82978")]
		private static void RenderTreesInstanced_Instanced(GStylizedTerrain t, Camera cam, List<int> flags, List<Vector3> worldPositions)
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xA83068", Offset = "0xA83068", VA = "0xA83068")]
		private static void RenderTreesInstanced_InstancedBillboard(GStylizedTerrain t, Camera cam, List<int> flags, List<Vector3> worldPositions)
		{
		}
	}
	[Token(Token = "0x200014B")]
	public class GGeometryGenerationContext
	{
		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Color[] heightMapData;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int heightMapResolution;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color[] subDivMapData;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int subDivMapResolution;

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xA86370", Offset = "0xA86370", VA = "0xA86370")]
		public GGeometryGenerationContext(GStylizedTerrain terrain, GTerrainData data)
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xA863CC", Offset = "0xA863CC", VA = "0xA863CC")]
		public Color GetSubdivData(Vector2 uv)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x200014C")]
	public class GGriffinSettings : ScriptableObject
	{
		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GGriffinSettings instance;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x571714", Offset = "0x571714")]
		[SerializeField]
		private bool enableEditorAnalytics;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool debugMode;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool showLivePreview;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Mesh[] livePreviewMeshes;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Mesh[] livePreviewWireframeMeshes;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Mesh grassQuad;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Mesh grassCross;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Mesh grassTriCross;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool showGeometryChunksInHierarchy;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int triangulateIteration;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve lodTransition;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GTerrainDataDefault terrainDataDefault;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool isHidingFoliageOnEditing;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private string defaultTerrainDataDirectory;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private Texture2D defaultNoiseTexture;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x571830", Offset = "0x571830")]
		[SerializeField]
		private GBackupToolSettings backupToolSettings;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57187C", Offset = "0x57187C")]
		[SerializeField]
		private GPaintToolSettings paintToolSettings;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5718C8", Offset = "0x5718C8")]
		[SerializeField]
		private GSplineToolSettings splineToolSettings;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x571914", Offset = "0x571914")]
		[SerializeField]
		private GBillboardToolSettings billboardToolSettings;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x571960", Offset = "0x571960")]
		[SerializeField]
		private GStampToolSettings stampToolSettings;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5719AC", Offset = "0x5719AC")]
		[SerializeField]
		private GCreateTerrainWizardSettings wizardSettings;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5719F8", Offset = "0x5719F8")]
		[SerializeField]
		private GInternalShaderSettings internalShaderSettings;

		[Token(Token = "0x17000036")]
		public static GGriffinSettings Instance
		{
			[Token(Token = "0x60007CA")]
			[Address(RVA = "0xA7E3D8", Offset = "0xA7E3D8", VA = "0xA7E3D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		public bool EnableEditorAnalytics
		{
			[Token(Token = "0x60007CB")]
			[Address(RVA = "0xA89A24", Offset = "0xA89A24", VA = "0xA89A24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007CC")]
			[Address(RVA = "0xA89A2C", Offset = "0xA89A2C", VA = "0xA89A2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000038")]
		public bool DebugMode
		{
			[Token(Token = "0x60007CD")]
			[Address(RVA = "0xA89A38", Offset = "0xA89A38", VA = "0xA89A38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007CE")]
			[Address(RVA = "0xA89A40", Offset = "0xA89A40", VA = "0xA89A40")]
			set
			{
			}
		}

		[Token(Token = "0x17000039")]
		public bool ShowLivePreview
		{
			[Token(Token = "0x60007CF")]
			[Address(RVA = "0xA89A4C", Offset = "0xA89A4C", VA = "0xA89A4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007D0")]
			[Address(RVA = "0xA89A54", Offset = "0xA89A54", VA = "0xA89A54")]
			set
			{
			}
		}

		[Token(Token = "0x1700003A")]
		public bool ShowGeometryChunksInHierarchy
		{
			[Token(Token = "0x60007D1")]
			[Address(RVA = "0xA89A60", Offset = "0xA89A60", VA = "0xA89A60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007D2")]
			[Address(RVA = "0xA89A68", Offset = "0xA89A68", VA = "0xA89A68")]
			set
			{
			}
		}

		[Token(Token = "0x1700003B")]
		public int TriangulateIteration
		{
			[Token(Token = "0x60007D3")]
			[Address(RVA = "0xA89C68", Offset = "0xA89C68", VA = "0xA89C68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007D4")]
			[Address(RVA = "0xA89C70", Offset = "0xA89C70", VA = "0xA89C70")]
			set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public AnimationCurve LodTransition
		{
			[Token(Token = "0x60007D5")]
			[Address(RVA = "0xA89CF0", Offset = "0xA89CF0", VA = "0xA89CF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003D")]
		public GTerrainDataDefault TerrainDataDefault
		{
			[Token(Token = "0x60007D6")]
			[Address(RVA = "0xA89D2C", Offset = "0xA89D2C", VA = "0xA89D2C")]
			get
			{
				return default(GTerrainDataDefault);
			}
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0xA89D3C", Offset = "0xA89D3C", VA = "0xA89D3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700003E")]
		public bool IsHidingFoliageOnEditing
		{
			[Token(Token = "0x60007D8")]
			[Address(RVA = "0xA89D58", Offset = "0xA89D58", VA = "0xA89D58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007D9")]
			[Address(RVA = "0xA89D60", Offset = "0xA89D60", VA = "0xA89D60")]
			set
			{
			}
		}

		[Token(Token = "0x1700003F")]
		public string DefaultTerrainDataDirectory
		{
			[Token(Token = "0x60007DA")]
			[Address(RVA = "0xA89D6C", Offset = "0xA89D6C", VA = "0xA89D6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007DB")]
			[Address(RVA = "0xA89DD0", Offset = "0xA89DD0", VA = "0xA89DD0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000040")]
		public Texture2D DefaultNoiseTexture
		{
			[Token(Token = "0x60007DC")]
			[Address(RVA = "0xA89DD8", Offset = "0xA89DD8", VA = "0xA89DD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007DD")]
			[Address(RVA = "0xA89DE0", Offset = "0xA89DE0", VA = "0xA89DE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000041")]
		public GBackupToolSettings BackupToolSettings
		{
			[Token(Token = "0x60007DE")]
			[Address(RVA = "0xA89DE8", Offset = "0xA89DE8", VA = "0xA89DE8")]
			get
			{
				return default(GBackupToolSettings);
			}
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0xA89DF0", Offset = "0xA89DF0", VA = "0xA89DF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000042")]
		public GPaintToolSettings PaintToolSettings
		{
			[Token(Token = "0x60007E0")]
			[Address(RVA = "0xA89DF8", Offset = "0xA89DF8", VA = "0xA89DF8")]
			get
			{
				return default(GPaintToolSettings);
			}
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0xA89E08", Offset = "0xA89E08", VA = "0xA89E08")]
			set
			{
			}
		}

		[Token(Token = "0x17000043")]
		public GSplineToolSettings SplineToolSettings
		{
			[Token(Token = "0x60007E2")]
			[Address(RVA = "0xA89E24", Offset = "0xA89E24", VA = "0xA89E24")]
			get
			{
				return default(GSplineToolSettings);
			}
			[Token(Token = "0x60007E3")]
			[Address(RVA = "0xA89E34", Offset = "0xA89E34", VA = "0xA89E34")]
			set
			{
			}
		}

		[Token(Token = "0x17000044")]
		public GBillboardToolSettings BillboardToolSettings
		{
			[Token(Token = "0x60007E4")]
			[Address(RVA = "0xA89E50", Offset = "0xA89E50", VA = "0xA89E50")]
			get
			{
				return default(GBillboardToolSettings);
			}
			[Token(Token = "0x60007E5")]
			[Address(RVA = "0xA89E60", Offset = "0xA89E60", VA = "0xA89E60")]
			set
			{
			}
		}

		[Token(Token = "0x17000045")]
		public GStampToolSettings StampToolSettings
		{
			[Token(Token = "0x60007E6")]
			[Address(RVA = "0xA89E6C", Offset = "0xA89E6C", VA = "0xA89E6C")]
			get
			{
				return default(GStampToolSettings);
			}
			[Token(Token = "0x60007E7")]
			[Address(RVA = "0xA89E90", Offset = "0xA89E90", VA = "0xA89E90")]
			set
			{
			}
		}

		[Token(Token = "0x17000046")]
		public GCreateTerrainWizardSettings WizardSettings
		{
			[Token(Token = "0x60007E8")]
			[Address(RVA = "0xA89EB4", Offset = "0xA89EB4", VA = "0xA89EB4")]
			get
			{
				return default(GCreateTerrainWizardSettings);
			}
			[Token(Token = "0x60007E9")]
			[Address(RVA = "0xA89ED4", Offset = "0xA89ED4", VA = "0xA89ED4")]
			set
			{
			}
		}

		[Token(Token = "0x17000047")]
		public GInternalShaderSettings InternalShaderSettings
		{
			[Token(Token = "0x60007EA")]
			[Address(RVA = "0xA89EF4", Offset = "0xA89EF4", VA = "0xA89EF4")]
			get
			{
				return default(GInternalShaderSettings);
			}
			[Token(Token = "0x60007EB")]
			[Address(RVA = "0xA89F04", Offset = "0xA89F04", VA = "0xA89F04")]
			set
			{
			}
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xA89F20", Offset = "0xA89F20", VA = "0xA89F20")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xA89F28", Offset = "0xA89F28", VA = "0xA89F28")]
		public void Reset()
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xA89F8C", Offset = "0xA89F8C", VA = "0xA89F8C")]
		public Mesh GetLivePreviewMesh(int detail)
		{
			return null;
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xA8A054", Offset = "0xA8A054", VA = "0xA8A054")]
		public Mesh GetLivePreviewWireframeMesh(int detail)
		{
			return null;
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xA88178", Offset = "0xA88178", VA = "0xA88178")]
		public Mesh GetGrassMesh(GGrassShape shape)
		{
			return null;
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xA8A11C", Offset = "0xA8A11C", VA = "0xA8A11C")]
		public GGriffinSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014D")]
	[ExecuteInEditMode]
	public class GHeightMapFilter : MonoBehaviour
	{
		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private GStylizedTerrain terrain;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool useBlur;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int blurRadius;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool useStep;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int stepCount;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture heightMapBackup;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture rt;

		[Token(Token = "0x17000048")]
		public GStylizedTerrain Terrain
		{
			[Token(Token = "0x60007F2")]
			[Address(RVA = "0xA8A124", Offset = "0xA8A124", VA = "0xA8A124")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007F3")]
			[Address(RVA = "0xA8A12C", Offset = "0xA8A12C", VA = "0xA8A12C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000049")]
		public bool UseBlur
		{
			[Token(Token = "0x60007F4")]
			[Address(RVA = "0xA8A134", Offset = "0xA8A134", VA = "0xA8A134")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007F5")]
			[Address(RVA = "0xA8A13C", Offset = "0xA8A13C", VA = "0xA8A13C")]
			set
			{
			}
		}

		[Token(Token = "0x1700004A")]
		public int BlurRadius
		{
			[Token(Token = "0x60007F6")]
			[Address(RVA = "0xA8A148", Offset = "0xA8A148", VA = "0xA8A148")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007F7")]
			[Address(RVA = "0xA8A150", Offset = "0xA8A150", VA = "0xA8A150")]
			set
			{
			}
		}

		[Token(Token = "0x1700004B")]
		public bool UseStep
		{
			[Token(Token = "0x60007F8")]
			[Address(RVA = "0xA8A1D4", Offset = "0xA8A1D4", VA = "0xA8A1D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007F9")]
			[Address(RVA = "0xA8A1DC", Offset = "0xA8A1DC", VA = "0xA8A1DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public int StepCount
		{
			[Token(Token = "0x60007FA")]
			[Address(RVA = "0xA8A1E8", Offset = "0xA8A1E8", VA = "0xA8A1E8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007FB")]
			[Address(RVA = "0xA8A1F0", Offset = "0xA8A1F0", VA = "0xA8A1F0")]
			set
			{
			}
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xA8A274", Offset = "0xA8A274", VA = "0xA8A274")]
		private void Reset()
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xA8A2A8", Offset = "0xA8A2A8", VA = "0xA8A2A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xA8A3D0", Offset = "0xA8A3D0", VA = "0xA8A3D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xA8A54C", Offset = "0xA8A54C", VA = "0xA8A54C")]
		private void OnPreProcessHeightMap(Texture2D heightMap)
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0xA8AA60", Offset = "0xA8AA60", VA = "0xA8AA60")]
		private void OnPostProcessHeightMap(Texture2D heightMap)
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0xA8A7AC", Offset = "0xA8A7AC", VA = "0xA8A7AC")]
		private void CopyTo(Texture2D heightMap, RenderTexture targetRt)
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0xA8AB54", Offset = "0xA8AB54", VA = "0xA8AB54")]
		private void CopyTo(RenderTexture rt, Texture2D targetTex)
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xA8A5A8", Offset = "0xA8A5A8", VA = "0xA8A5A8")]
		private void InitRtSize(Texture src, ref RenderTexture targetRt)
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xA8AA78", Offset = "0xA8AA78", VA = "0xA8AA78")]
		private void RestoreHeightMap(Texture2D heightMap)
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xA8A824", Offset = "0xA8A824", VA = "0xA8A824")]
		private void ApplyFilters(Texture2D heightMap)
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xA8ABE0", Offset = "0xA8ABE0", VA = "0xA8ABE0")]
		public GHeightMapFilter()
		{
		}
	}
	[Token(Token = "0x200014E")]
	[ExecuteInEditMode]
	public class GInteractiveGrassAgent : MonoBehaviour
	{
		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float radius;

		[Token(Token = "0x1700004D")]
		public float Radius
		{
			[Token(Token = "0x6000807")]
			[Address(RVA = "0xA8ABE8", Offset = "0xA8ABE8", VA = "0xA8ABE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000808")]
			[Address(RVA = "0xA8ABF0", Offset = "0xA8ABF0", VA = "0xA8ABF0")]
			set
			{
			}
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xA8AC70", Offset = "0xA8AC70", VA = "0xA8AC70")]
		private void Update()
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xA8AE8C", Offset = "0xA8AE8C", VA = "0xA8AE8C")]
		private void DrawOnTerrain(GStylizedTerrain t)
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0xA8B1C8", Offset = "0xA8B1C8", VA = "0xA8B1C8")]
		public GInteractiveGrassAgent()
		{
		}
	}
	[Token(Token = "0x200014F")]
	internal class GJob
	{
		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x571ACC", Offset = "0x571ACC")]
		private int <Order>k__BackingField;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x571ADC", Offset = "0x571ADC")]
		private Action <Action>k__BackingField;

		[Token(Token = "0x1700004E")]
		internal int Order
		{
			[Token(Token = "0x600080C")]
			[Address(RVA = "0xA8D5D4", Offset = "0xA8D5D4", VA = "0xA8D5D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BE90", Offset = "0x57BE90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600080D")]
			[Address(RVA = "0xA8D5DC", Offset = "0xA8D5DC", VA = "0xA8D5DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BEA0", Offset = "0x57BEA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700004F")]
		internal Action Action
		{
			[Token(Token = "0x600080E")]
			[Address(RVA = "0xA8D5E4", Offset = "0xA8D5E4", VA = "0xA8D5E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BEB0", Offset = "0x57BEB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600080F")]
			[Address(RVA = "0xA8D5EC", Offset = "0xA8D5EC", VA = "0xA8D5EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BEC0", Offset = "0x57BEC0")]
			set
			{
			}
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xA8D5F4", Offset = "0xA8D5F4", VA = "0xA8D5F4")]
		internal void Run()
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0xA8D608", Offset = "0xA8D608", VA = "0xA8D608")]
		public GJob()
		{
		}
	}
	[Token(Token = "0x2000150")]
	[ExecuteInEditMode]
	public static class GJobSystem
	{
		[Token(Token = "0x2000324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F830", Offset = "0x56F830")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40019EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action a;

			[Token(Token = "0x6001C33")]
			[Address(RVA = "0xA8D878", Offset = "0xA8D878", VA = "0xA8D878")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001C34")]
			[Address(RVA = "0xA8DF84", Offset = "0xA8DF84", VA = "0xA8DF84")]
			internal void <RunOnBackground>b__0()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000325")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F840", Offset = "0x56F840")]
		private sealed class <>c
		{
			[Token(Token = "0x40019EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40019ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GJob> <>9__12_0;

			[Token(Token = "0x40019EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<GJob> <>9__12_1;

			[Token(Token = "0x40019EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Comparison<GJob> <>9__12_2;

			[Token(Token = "0x6001C36")]
			[Address(RVA = "0xA8DF00", Offset = "0xA8DF00", VA = "0xA8DF00")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C37")]
			[Address(RVA = "0xA8DF08", Offset = "0xA8DF08", VA = "0xA8DF08")]
			internal bool <Tick>b__12_0(GJob j)
			{
				return default(bool);
			}

			[Token(Token = "0x6001C38")]
			[Address(RVA = "0xA8DF24", Offset = "0xA8DF24", VA = "0xA8DF24")]
			internal bool <Tick>b__12_1(GJob j)
			{
				return default(bool);
			}

			[Token(Token = "0x6001C39")]
			[Address(RVA = "0xA8DF40", Offset = "0xA8DF40", VA = "0xA8DF40")]
			internal int <Tick>b__12_2(GJob j0, GJob j1)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<GJob> runOnMainThreadJobs;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<GJob> scheduleOnMainThreadJobs;

		[Token(Token = "0x17000050")]
		private static List<GJob> RunOnMainThreadJobs
		{
			[Token(Token = "0x6000813")]
			[Address(RVA = "0xA8D680", Offset = "0xA8D680", VA = "0xA8D680")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000814")]
			[Address(RVA = "0xA8D720", Offset = "0xA8D720", VA = "0xA8D720")]
			set
			{
			}
		}

		[Token(Token = "0x17000051")]
		private static List<GJob> ScheduleOnMainThreadJobs
		{
			[Token(Token = "0x6000815")]
			[Address(RVA = "0xA8D778", Offset = "0xA8D778", VA = "0xA8D778")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000816")]
			[Address(RVA = "0xA8D820", Offset = "0xA8D820", VA = "0xA8D820")]
			set
			{
			}
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0xA8D610", Offset = "0xA8D610", VA = "0xA8D610")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x57BED0", Offset = "0x57BED0")]
		private static void Init()
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0xA877EC", Offset = "0xA877EC", VA = "0xA877EC")]
		public static void RunOnMainThread(Action a)
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0xA878F8", Offset = "0xA878F8", VA = "0xA878F8")]
		public static void ScheduleOnMainThread(Action a, int order = 10)
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xA874B4", Offset = "0xA874B4", VA = "0xA874B4")]
		public static void RunOnBackground(Action a)
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0xA8D880", Offset = "0xA8D880", VA = "0xA8D880")]
		private static void Tick()
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xA8DE94", Offset = "0xA8DE94", VA = "0xA8DE94")]
		public static void Sleep(int milis)
		{
		}
	}
	[Token(Token = "0x2000151")]
	public struct GSelectionGridArgs
	{
		[Token(Token = "0x2000326")]
		public delegate void DrawHandler(Rect r, object o);

		[Token(Token = "0x2000327")]
		public delegate void ItemHandler(Rect r, int index, ICollection collection);

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ICollection collection;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int selectedIndex;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> selectedIndices;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int itemPerRow;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 itemSize;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool simpleMode;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DrawHandler drawPreviewFunction;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ItemHandler contextClickFunction;
	}
	[Token(Token = "0x2000152")]
	public struct _GSelectionGridArgs
	{
		[Token(Token = "0x2000328")]
		public delegate void DrawHandler(Rect r, object o);

		[Token(Token = "0x2000329")]
		public delegate object CategorizeHandler(object o);

		[Token(Token = "0x200032A")]
		public delegate string TooltipHandler(object o);

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ICollection collection;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int selectedIndex;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> selectedIndices;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 tileSize;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float windowWidth;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DrawHandler drawPreviewFunction;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DrawHandler drawLabelFunction;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DrawHandler customDrawFunction;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CategorizeHandler categorizeFunction;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TooltipHandler tooltipFunction;
	}
	[Token(Token = "0x2000153")]
	public static class GSpawner
	{
		[Token(Token = "0x600081C")]
		[Address(RVA = "0x7FD08C", Offset = "0x7FD08C", VA = "0x7FD08C")]
		public static string GetPrototypeRootName(GameObject prototype)
		{
			return null;
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x7FD0F8", Offset = "0x7FD0F8", VA = "0x7FD0F8")]
		public static GameObject Spawn(GStylizedTerrain terrain, GameObject prototype, Vector3 worldPos, [Optional] Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x7FD434", Offset = "0x7FD434", VA = "0x7FD434")]
		public static void DestroyIf(GStylizedTerrain terrain, GameObject prototype, Predicate<GameObject> condition)
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x7FD57C", Offset = "0x7FD57C", VA = "0x7FD57C")]
		public static void DestroyIf(GStylizedTerrain terrain, Predicate<GameObject> condition)
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x7FD2B0", Offset = "0x7FD2B0", VA = "0x7FD2B0")]
		public static GameObject GetRoot(GStylizedTerrain terrain, GameObject prototype)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000154")]
	[ExecuteInEditMode]
	public class GStylizedTerrain : MonoBehaviour
	{
		[Token(Token = "0x200032B")]
		public delegate void HeightMapProcessCallback(Texture2D heightmap);

		[Token(Token = "0x200032C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F850", Offset = "0x56F850")]
		private sealed class <>c__DisplayClass73_0
		{
			[Token(Token = "0x40019F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<GTerrainChunk> chunksToUpdate;

			[Token(Token = "0x40019F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool useDynamicPolygon;

			[Token(Token = "0x40019F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HashSet<Vector2> vertexPool;

			[Token(Token = "0x40019F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GStylizedTerrain <>4__this;

			[Token(Token = "0x40019F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action <>9__1;

			[Token(Token = "0x6001C52")]
			[Address(RVA = "0x802A44", Offset = "0x802A44", VA = "0x802A44")]
			public <>c__DisplayClass73_0()
			{
			}

			[Token(Token = "0x6001C53")]
			[Address(RVA = "0x807E78", Offset = "0x807E78", VA = "0x807E78")]
			internal void <OnGeometryAsyncDirty>b__0()
			{
			}

			[Token(Token = "0x6001C54")]
			[Address(RVA = "0x8081B0", Offset = "0x8081B0", VA = "0x8081B0")]
			internal void <OnGeometryAsyncDirty>b__1()
			{
			}
		}

		[Token(Token = "0x200032D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F860", Offset = "0x56F860")]
		private sealed class <>c__DisplayClass80_0
		{
			[Token(Token = "0x40019F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 origin;

			[Token(Token = "0x6001C55")]
			[Address(RVA = "0x802ED4", Offset = "0x802ED4", VA = "0x802ED4")]
			public <>c__DisplayClass80_0()
			{
			}

			[Token(Token = "0x6001C56")]
			[Address(RVA = "0x8084FC", Offset = "0x8084FC", VA = "0x8084FC")]
			internal int <GetChunksSortedByDistance>b__0(GTerrainChunk c1, GTerrainChunk c2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x200032E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F870", Offset = "0x56F870")]
		private sealed class <>c__DisplayClass83_0
		{
			[Token(Token = "0x40019F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Ray ray;

			[Token(Token = "0x6001C57")]
			[Address(RVA = "0x8032DC", Offset = "0x8032DC", VA = "0x8032DC")]
			public <>c__DisplayClass83_0()
			{
			}

			[Token(Token = "0x6001C58")]
			[Address(RVA = "0x808680", Offset = "0x808680", VA = "0x808680")]
			internal int <Raycast>b__0(RaycastHit h0, RaycastHit h1)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<GStylizedTerrain> activeTerrainSet;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GTerrainData terrainData;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GStylizedTerrain topNeighbor;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GStylizedTerrain bottomNeighbor;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GStylizedTerrain leftNeighbor;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GStylizedTerrain rightNeighbor;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int groupId;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool autoConnect;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public float geometryVersion;

		[Token(Token = "0x4000C21")]
		public const float GEOMETRY_VERSION_CHUNK_POSITION_AT_CHUNK_CENTER = 245f;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Texture2D heightMap2D;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture heightMap;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderTexture normalMap;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture normalMapInterpolated;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RenderTexture normalMapPerPixel;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RenderTexture grassVectorFieldMap;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RenderTexture grassVectorFieldMapTmp;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x571B8C", Offset = "0x571B8C")]
		private GGeometryGenerationContext <GenerationContext>k__BackingField;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x571B9C", Offset = "0x571B9C")]
		private bool <Internal_IsGeneratingInBackground>k__BackingField;

		[Token(Token = "0x17000052")]
		private static HashSet<GStylizedTerrain> ActiveTerrainSet
		{
			[Token(Token = "0x6000825")]
			[Address(RVA = "0x7FE984", Offset = "0x7FE984", VA = "0x7FE984")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		public static IEnumerable<GStylizedTerrain> ActiveTerrains
		{
			[Token(Token = "0x6000826")]
			[Address(RVA = "0x7F60F4", Offset = "0x7F60F4", VA = "0x7F60F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000054")]
		public GTerrainData TerrainData
		{
			[Token(Token = "0x6000827")]
			[Address(RVA = "0x7FEA14", Offset = "0x7FEA14", VA = "0x7FEA14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000828")]
			[Address(RVA = "0x7FEA1C", Offset = "0x7FEA1C", VA = "0x7FEA1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000055")]
		public GStylizedTerrain TopNeighbor
		{
			[Token(Token = "0x6000829")]
			[Address(RVA = "0x7FEFA8", Offset = "0x7FEFA8", VA = "0x7FEFA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600082A")]
			[Address(RVA = "0x7FEFB0", Offset = "0x7FEFB0", VA = "0x7FEFB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000056")]
		public GStylizedTerrain BottomNeighbor
		{
			[Token(Token = "0x600082B")]
			[Address(RVA = "0x7FEFB8", Offset = "0x7FEFB8", VA = "0x7FEFB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600082C")]
			[Address(RVA = "0x7FEFC0", Offset = "0x7FEFC0", VA = "0x7FEFC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000057")]
		public GStylizedTerrain LeftNeighbor
		{
			[Token(Token = "0x600082D")]
			[Address(RVA = "0x7FEFC8", Offset = "0x7FEFC8", VA = "0x7FEFC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600082E")]
			[Address(RVA = "0x7FEFD0", Offset = "0x7FEFD0", VA = "0x7FEFD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000058")]
		public GStylizedTerrain RightNeighbor
		{
			[Token(Token = "0x600082F")]
			[Address(RVA = "0x7FEFD8", Offset = "0x7FEFD8", VA = "0x7FEFD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000830")]
			[Address(RVA = "0x7FEFE0", Offset = "0x7FEFE0", VA = "0x7FEFE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000059")]
		public int GroupId
		{
			[Token(Token = "0x6000831")]
			[Address(RVA = "0x7FEFE8", Offset = "0x7FEFE8", VA = "0x7FEFE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000832")]
			[Address(RVA = "0x7FEFF0", Offset = "0x7FEFF0", VA = "0x7FEFF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700005A")]
		public bool AutoConnect
		{
			[Token(Token = "0x6000833")]
			[Address(RVA = "0x7FF070", Offset = "0x7FF070", VA = "0x7FF070")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000834")]
			[Address(RVA = "0x7FF078", Offset = "0x7FF078", VA = "0x7FF078")]
			set
			{
			}
		}

		[Token(Token = "0x1700005B")]
		public Bounds Bounds
		{
			[Token(Token = "0x6000835")]
			[Address(RVA = "0x7FF084", Offset = "0x7FF084", VA = "0x7FF084")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x1700005C")]
		internal GGeometryGenerationContext GenerationContext
		{
			[Token(Token = "0x6000836")]
			[Address(RVA = "0x7FF290", Offset = "0x7FF290", VA = "0x7FF290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BF24", Offset = "0x57BF24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000837")]
			[Address(RVA = "0x7FF298", Offset = "0x7FF298", VA = "0x7FF298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BF34", Offset = "0x57BF34")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005D")]
		public bool Internal_IsGeneratingInBackground
		{
			[Token(Token = "0x6000838")]
			[Address(RVA = "0x7FF2A0", Offset = "0x7FF2A0", VA = "0x7FF2A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BF44", Offset = "0x57BF44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000839")]
			[Address(RVA = "0x7FF2A8", Offset = "0x7FF2A8", VA = "0x7FF2A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BF54", Offset = "0x57BF54")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005E")]
		public Transform Internal_ChunkRoot
		{
			[Token(Token = "0x600083A")]
			[Address(RVA = "0x7FEE60", Offset = "0x7FEE60", VA = "0x7FEE60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000001")]
		public event HeightMapProcessCallback PreProcessHeightMap
		{
			[Token(Token = "0x6000821")]
			[Address(RVA = "0x7FE6F4", Offset = "0x7FE6F4", VA = "0x7FE6F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BEE4", Offset = "0x57BEE4")]
			add
			{
			}
			[Token(Token = "0x6000822")]
			[Address(RVA = "0x7FE798", Offset = "0x7FE798", VA = "0x7FE798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BEF4", Offset = "0x57BEF4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000002")]
		public event HeightMapProcessCallback PostProcessHeightMap
		{
			[Token(Token = "0x6000823")]
			[Address(RVA = "0x7FE83C", Offset = "0x7FE83C", VA = "0x7FE83C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BF04", Offset = "0x57BF04")]
			add
			{
			}
			[Token(Token = "0x6000824")]
			[Address(RVA = "0x7FE8E0", Offset = "0x7FE8E0", VA = "0x7FE8E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BF14", Offset = "0x57BF14")]
			remove
			{
			}
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x7FF2B4", Offset = "0x7FF2B4", VA = "0x7FF2B4")]
		public static void ConnectAdjacentTiles()
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x7FF458", Offset = "0x7FF458", VA = "0x7FF458")]
		public void ConnectNeighbor()
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x7FFA80", Offset = "0x7FFA80", VA = "0x7FFA80")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x7FFC98", Offset = "0x7FFC98", VA = "0x7FFC98")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x8000DC", Offset = "0x8000DC", VA = "0x8000DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x8000E0", Offset = "0x8000E0", VA = "0x8000E0")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x7FFE5C", Offset = "0x7FFE5C", VA = "0x7FFE5C")]
		private void ReleaseTemporaryTextures()
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x800108", Offset = "0x800108", VA = "0x800108")]
		private void OnBeginCameraRendering(Camera cam)
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x800180", Offset = "0x800180", VA = "0x800180")]
		private void OnBeginCameraRenderingSRP(ScriptableRenderContext context, Camera cam)
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x800188", Offset = "0x800188", VA = "0x800188")]
		private void OnEndCameraRendering(Camera cam)
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x7FED98", Offset = "0x7FED98", VA = "0x7FED98")]
		private void OnTerrainDataDirty(GTerrainData.DirtyFlags dirtyFlag)
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x800200", Offset = "0x800200", VA = "0x800200")]
		private void OnGeometryDirty()
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x800970", Offset = "0x800970", VA = "0x800970")]
		private void OnGeometryAsyncDirty()
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x802A4C", Offset = "0x802A4C", VA = "0x802A4C")]
		private void CreateGenerationContext()
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x800E50", Offset = "0x800E50", VA = "0x800E50")]
		private void OnRenderingDirty()
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x800DBC", Offset = "0x800DBC", VA = "0x800DBC")]
		private void OnShadingDirty()
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x800EC8", Offset = "0x800EC8", VA = "0x800EC8")]
		private void OnFoliageDirty()
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x8012AC", Offset = "0x8012AC", VA = "0x8012AC")]
		private void InitChunks()
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x801900", Offset = "0x801900", VA = "0x801900")]
		public GTerrainChunk[] GetChunks()
		{
			return null;
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x802DB8", Offset = "0x802DB8", VA = "0x802DB8")]
		private List<GTerrainChunk> GetChunksSortedByDistance(Vector3 origin)
		{
			return null;
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x7F7018", Offset = "0x7F7018", VA = "0x7F7018")]
		public bool Raycast(Ray ray, out RaycastHit hit, float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x802F74", Offset = "0x802F74", VA = "0x802F74")]
		public bool Raycast(Vector3 normalizePoint, out RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x7F8A7C", Offset = "0x7F8A7C", VA = "0x7F8A7C")]
		public static bool Raycast(Ray ray, out RaycastHit hit, float distance, int groupId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x8032E4", Offset = "0x8032E4", VA = "0x8032E4")]
		private List<Vector2> GetVertexPool(bool left, bool top, bool right, bool bottom)
		{
			return null;
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x803494", Offset = "0x803494", VA = "0x803494")]
		public Vector2 WorldPointToUV(Vector3 point)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x803668", Offset = "0x803668", VA = "0x803668")]
		public Vector3 WorldPointToNormalized(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x803074", Offset = "0x803074", VA = "0x803074")]
		public Vector3 NormalizedToWorldPoint(Vector3 normalizedPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x803878", Offset = "0x803878", VA = "0x803878")]
		public Matrix4x4 GetWorldToNormalizedMatrix()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x803A84", Offset = "0x803A84", VA = "0x803A84")]
		public void ForceLOD(int level)
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x80224C", Offset = "0x80224C", VA = "0x80224C")]
		private void GetNeighborEdgeVertices(HashSet<Vector2> vertexPool)
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x803BA4", Offset = "0x803BA4", VA = "0x803BA4")]
		public Vector4 GetHeightMapSample(Vector2 uv)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x803C84", Offset = "0x803C84", VA = "0x803C84")]
		private static Vector4 GetHeightMapSample(GStylizedTerrain t, Vector2 uv)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x803D60", Offset = "0x803D60", VA = "0x803D60")]
		public Vector4 GetInterpolatedHeightMapSample(Vector2 uv)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x8050B8", Offset = "0x8050B8", VA = "0x8050B8")]
		public static void MatchEdges(int groupId)
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x8055A4", Offset = "0x8055A4", VA = "0x8055A4")]
		public void UpdateTreesPosition(bool showProgressBar = false)
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x805C2C", Offset = "0x805C2C", VA = "0x805C2C")]
		public void UpdateGrassPatches(int prototypeIndex = -1, bool showProgressBar = false)
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x805EC0", Offset = "0x805EC0", VA = "0x805EC0")]
		private void UpdateGrassPatch(GGrassPatch patch, int prototypeIndex)
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x806650", Offset = "0x806650", VA = "0x806650")]
		public RenderTexture GetHeightMap(int resolution)
		{
			return null;
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x80689C", Offset = "0x80689C", VA = "0x80689C")]
		private void RenderHeightMap(RenderTexture rt)
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x806928", Offset = "0x806928", VA = "0x806928")]
		private void RenderHeightMap(RenderTexture rt, GTerrainChunk chunk)
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x806B5C", Offset = "0x806B5C", VA = "0x806B5C")]
		private void CreateHeightMap2D()
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x806D08", Offset = "0x806D08", VA = "0x806D08")]
		public RenderTexture GetSharpNormalMap(int resolution)
		{
			return null;
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x806EAC", Offset = "0x806EAC", VA = "0x806EAC")]
		private void RenderSharpNormalMap(RenderTexture rt)
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x806F30", Offset = "0x806F30", VA = "0x806F30")]
		public RenderTexture GetInterpolatedNormalMap(int resolution)
		{
			return null;
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x8070D4", Offset = "0x8070D4", VA = "0x8070D4")]
		private void RenderInterpolatedNormalMap(RenderTexture rt)
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x807158", Offset = "0x807158", VA = "0x807158")]
		public RenderTexture GetPerPixelNormalMap(int resolution)
		{
			return null;
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x8072FC", Offset = "0x8072FC", VA = "0x8072FC")]
		private void RenderPerPixelNormalMap(RenderTexture rt)
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x807380", Offset = "0x807380", VA = "0x807380")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x8074D0", Offset = "0x8074D0", VA = "0x8074D0")]
		private void DrawChunkUpdateDebug(Camera cam)
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x807788", Offset = "0x807788", VA = "0x807788")]
		public RenderTexture GetGrassVectorFieldRenderTexture()
		{
			return null;
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x807B84", Offset = "0x807B84", VA = "0x807B84")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x807D64", Offset = "0x807D64", VA = "0x807D64")]
		private void FadeGrassVectorField()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x807E68", Offset = "0x807E68", VA = "0x807E68")]
		public GStylizedTerrain()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public class GSubDivisionTree
	{
		[Token(Token = "0x200032F")]
		public class Node
		{
			[Token(Token = "0x40019F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57B3F0", Offset = "0x57B3F0")]
			private int <Level>k__BackingField;

			[Token(Token = "0x40019F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Vector2 v0;

			[Token(Token = "0x40019F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Vector2 v1;

			[Token(Token = "0x40019FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Vector2 v2;

			[Token(Token = "0x40019FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Node leftNode;

			[Token(Token = "0x40019FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Node rightNode;

			[Token(Token = "0x1700063F")]
			public int Level
			{
				[Token(Token = "0x6001C59")]
				[Address(RVA = "0x809184", Offset = "0x809184", VA = "0x809184")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F41C", Offset = "0x57F41C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001C5A")]
				[Address(RVA = "0x80918C", Offset = "0x80918C", VA = "0x80918C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F42C", Offset = "0x57F42C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000640")]
			public Vector2 V0
			{
				[Token(Token = "0x6001C5B")]
				[Address(RVA = "0x809194", Offset = "0x809194", VA = "0x809194")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6001C5C")]
				[Address(RVA = "0x80919C", Offset = "0x80919C", VA = "0x80919C")]
				set
				{
				}
			}

			[Token(Token = "0x17000641")]
			public Vector2 V1
			{
				[Token(Token = "0x6001C5D")]
				[Address(RVA = "0x80925C", Offset = "0x80925C", VA = "0x80925C")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6001C5E")]
				[Address(RVA = "0x809264", Offset = "0x809264", VA = "0x809264")]
				set
				{
				}
			}

			[Token(Token = "0x17000642")]
			public Vector2 V2
			{
				[Token(Token = "0x6001C5F")]
				[Address(RVA = "0x809324", Offset = "0x809324", VA = "0x809324")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6001C60")]
				[Address(RVA = "0x80932C", Offset = "0x80932C", VA = "0x80932C")]
				set
				{
				}
			}

			[Token(Token = "0x17000643")]
			public Vector2 VC
			{
				[Token(Token = "0x6001C61")]
				[Address(RVA = "0x8093EC", Offset = "0x8093EC", VA = "0x8093EC")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000644")]
			public Vector2 V01
			{
				[Token(Token = "0x6001C62")]
				[Address(RVA = "0x809508", Offset = "0x809508", VA = "0x809508")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000645")]
			public Vector2 V12
			{
				[Token(Token = "0x6001C63")]
				[Address(RVA = "0x809618", Offset = "0x809618", VA = "0x809618")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000646")]
			public Vector2 V20
			{
				[Token(Token = "0x6001C64")]
				[Address(RVA = "0x809728", Offset = "0x809728", VA = "0x809728")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000647")]
			public Node LeftNode
			{
				[Token(Token = "0x6001C65")]
				[Address(RVA = "0x809838", Offset = "0x809838", VA = "0x809838")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001C66")]
				[Address(RVA = "0x808AE8", Offset = "0x808AE8", VA = "0x808AE8")]
				set
				{
				}
			}

			[Token(Token = "0x17000648")]
			public Node RightNode
			{
				[Token(Token = "0x6001C67")]
				[Address(RVA = "0x809840", Offset = "0x809840", VA = "0x809840")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001C68")]
				[Address(RVA = "0x808B00", Offset = "0x808B00", VA = "0x808B00")]
				set
				{
				}
			}

			[Token(Token = "0x6001C69")]
			[Address(RVA = "0x8089C0", Offset = "0x8089C0", VA = "0x8089C0")]
			public Node()
			{
			}

			[Token(Token = "0x6001C6A")]
			[Address(RVA = "0x808A60", Offset = "0x808A60", VA = "0x808A60")]
			public Node(Vector2 v0, Vector2 v1, Vector2 v2)
			{
			}

			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0x809848", Offset = "0x809848", VA = "0x809848")]
			public void Split()
			{
			}

			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0x808FB4", Offset = "0x808FB4", VA = "0x808FB4")]
			public Node Clone()
			{
				return null;
			}
		}

		[Token(Token = "0x2000330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F880", Offset = "0x56F880")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40019FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int max;

			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0x809154", Offset = "0x809154", VA = "0x809154")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0x80915C", Offset = "0x80915C", VA = "0x80915C")]
			internal void <GetMaxLevel>b__0(Node n)
			{
			}
		}

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Node Root;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<Node> st;

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x80880C", Offset = "0x80880C", VA = "0x80880C")]
		public GSubDivisionTree()
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x808B18", Offset = "0x808B18", VA = "0x808B18")]
		public static GSubDivisionTree Rect(Rect r)
		{
			return null;
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x808D18", Offset = "0x808D18", VA = "0x808D18")]
		public void ForEachLeaf(Action<Node> action)
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x808E58", Offset = "0x808E58", VA = "0x808E58")]
		public GSubDivisionTree Clone(int maxLevel)
		{
			return null;
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x80909C", Offset = "0x80909C", VA = "0x80909C")]
		public int GetMaxLevel()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000156")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56DE2C", Offset = "0x56DE2C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56DE2C", Offset = "0x56DE2C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56DE2C", Offset = "0x56DE2C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56DE2C", Offset = "0x56DE2C")]
	public class GTerrainChunk : MonoBehaviour
	{
		[Token(Token = "0x2000331")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F890", Offset = "0x56F890")]
		private sealed class <>c__DisplayClass57_0
		{
			[Token(Token = "0x40019FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Stack<GSubDivisionTree.Node> nodes0;

			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0x8890CC", Offset = "0x8890CC", VA = "0x8890CC")]
			public <>c__DisplayClass57_0()
			{
			}

			[Token(Token = "0x6001C70")]
			[Address(RVA = "0x8890D4", Offset = "0x8890D4", VA = "0x8890D4")]
			internal void <Internal_CreateSubDivTree>b__0(GSubDivisionTree.Node n)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000332")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F8A0", Offset = "0x56F8A0")]
		private sealed class <>c
		{
			[Token(Token = "0x40019FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<GSubDivisionTree.Node> <>9__57_1;

			[Token(Token = "0x6001C72")]
			[Address(RVA = "0x8890A8", Offset = "0x8890A8", VA = "0x8890A8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C73")]
			[Address(RVA = "0x8890B0", Offset = "0x8890B0", VA = "0x8890B0")]
			internal void <Internal_CreateSubDivTree>b__57_1(GSubDivisionTree.Node n)
			{
			}
		}

		[Token(Token = "0x2000333")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F8B0", Offset = "0x56F8B0")]
		private sealed class <>c__DisplayClass60_0
		{
			[Token(Token = "0x4001A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 uv0;

			[Token(Token = "0x4001A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 uv1;

			[Token(Token = "0x4001A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector2 uv2;

			[Token(Token = "0x4001A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float dispStrength;

			[Token(Token = "0x4001A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float r;

			[Token(Token = "0x4001A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Texture2D subdivMap;

			[Token(Token = "0x4001A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int level;

			[Token(Token = "0x4001A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int baseResolution;

			[Token(Token = "0x4001A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int resolution;

			[Token(Token = "0x4001A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public System.Random rand;

			[Token(Token = "0x4001A0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int dispSeed;

			[Token(Token = "0x4001A0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public double radius;

			[Token(Token = "0x4001A0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public double triangleBaseLength;

			[Token(Token = "0x4001A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public GTerrainChunk <>4__this;

			[Token(Token = "0x4001A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public IGPolygonProcessor pp;

			[Token(Token = "0x4001A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public GPolygon polygon;

			[Token(Token = "0x4001A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Vector3 v0;

			[Token(Token = "0x4001A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public Vector3 terrainSize;

			[Token(Token = "0x4001A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public Vector3 v1;

			[Token(Token = "0x4001A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public Vector3 v2;

			[Token(Token = "0x6001C74")]
			[Address(RVA = "0x88913C", Offset = "0x88913C", VA = "0x88913C")]
			public <>c__DisplayClass60_0()
			{
			}

			[Token(Token = "0x6001C75")]
			[Address(RVA = "0x889144", Offset = "0x889144", VA = "0x889144")]
			internal void <CreatePolygons>b__0(GSubDivisionTree.Node n)
			{
			}
		}

		[Token(Token = "0x2000334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F8C0", Offset = "0x56F8C0")]
		private sealed class <>c__DisplayClass65_0
		{
			[Token(Token = "0x4001A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Vector2> verts;

			[Token(Token = "0x6001C76")]
			[Address(RVA = "0x889E00", Offset = "0x889E00", VA = "0x889E00")]
			public <>c__DisplayClass65_0()
			{
			}

			[Token(Token = "0x6001C77")]
			[Address(RVA = "0x889E08", Offset = "0x889E08", VA = "0x889E08")]
			internal void <FlattenSubDivTree>b__0(GSubDivisionTree.Node n)
			{
			}
		}

		[Token(Token = "0x2000335")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F8D0", Offset = "0x56F8D0")]
		private sealed class <>c__DisplayClass66_0
		{
			[Token(Token = "0x4001A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int maxLevel;

			[Token(Token = "0x4001A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Stack<GSubDivisionTree.Node> nodes;

			[Token(Token = "0x4001A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HashSet<Vector2> verts;

			[Token(Token = "0x6001C78")]
			[Address(RVA = "0x889E9C", Offset = "0x889E9C", VA = "0x889E9C")]
			public <>c__DisplayClass66_0()
			{
			}

			[Token(Token = "0x6001C79")]
			[Address(RVA = "0x889EA4", Offset = "0x889EA4", VA = "0x889EA4")]
			internal void <StitchGeometrySeamsOnSubDivTree>b__0(GSubDivisionTree.Node n)
			{
			}

			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0x889F30", Offset = "0x889F30", VA = "0x889F30")]
			internal void <StitchGeometrySeamsOnSubDivTree>b__1(GSubDivisionTree.Node n)
			{
			}
		}

		[Token(Token = "0x2000336")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F8E0", Offset = "0x56F8E0")]
		private sealed class <>c__DisplayClass68_0
		{
			[Token(Token = "0x4001A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rect uvRange;

			[Token(Token = "0x4001A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HashSet<Vector2> seamVertices;

			[Token(Token = "0x4001A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int meshResolution;

			[Token(Token = "0x4001A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GTerrainChunk <>4__this;

			[Token(Token = "0x4001A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action <>9__2;

			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0x88A000", Offset = "0x88A000", VA = "0x88A000")]
			public <>c__DisplayClass68_0()
			{
			}

			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0x88A008", Offset = "0x88A008", VA = "0x88A008")]
			internal void <Internal_UpdateLODsAsync>b__0(GSubDivisionTree.Node n)
			{
			}

			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0x88A260", Offset = "0x88A260", VA = "0x88A260")]
			internal void <Internal_UpdateLODsAsync>b__1(object state)
			{
			}

			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0x88A840", Offset = "0x88A840", VA = "0x88A840")]
			internal void <Internal_UpdateLODsAsync>b__2()
			{
			}
		}

		[Token(Token = "0x2000337")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F8F0", Offset = "0x56F8F0")]
		private sealed class <>c__DisplayClass68_1
		{
			[Token(Token = "0x4001A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GSubDivisionTree[] lodTrees;

			[Token(Token = "0x4001A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass68_0 CS$<>8__locals1;

			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0x88A744", Offset = "0x88A744", VA = "0x88A744")]
			public <>c__DisplayClass68_1()
			{
			}
		}

		[Token(Token = "0x2000338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F900", Offset = "0x56F900")]
		private sealed class <>c__DisplayClass68_2
		{
			[Token(Token = "0x4001A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass68_1 CS$<>8__locals2;

			[Token(Token = "0x6001C80")]
			[Address(RVA = "0x88A838", Offset = "0x88A838", VA = "0x88A838")]
			public <>c__DisplayClass68_2()
			{
			}

			[Token(Token = "0x6001C81")]
			[Address(RVA = "0x88ABCC", Offset = "0x88ABCC", VA = "0x88ABCC")]
			internal void <Internal_UpdateLODsAsync>b__3()
			{
			}
		}

		[Token(Token = "0x2000339")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F910", Offset = "0x56F910")]
		private sealed class <>c__DisplayClass69_0
		{
			[Token(Token = "0x4001A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Stack<GSubDivisionTree.Node> dirtyNode;

			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x88AD34", Offset = "0x88AD34", VA = "0x88AD34")]
			public <>c__DisplayClass69_0()
			{
			}

			[Token(Token = "0x6001C83")]
			[Address(RVA = "0x88AD3C", Offset = "0x88AD3C", VA = "0x88AD3C")]
			internal void <StitchSeamLOD>b__0(GSubDivisionTree.Node n)
			{
			}

			[Token(Token = "0x6001C84")]
			[Address(RVA = "0x88ADA4", Offset = "0x88ADA4", VA = "0x88ADA4")]
			internal void <StitchSeamLOD>b__1(GSubDivisionTree.Node n)
			{
			}
		}

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GStylizedTerrain terrain;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter meshFilterComponent;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer meshRendererComponent;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshCollider meshColliderComponent;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LODGroup lodGroupComponent;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 index;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GTerrainChunkLOD[] chunkLowerLOD;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GSubDivisionTree subDivTree;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Queue<Action> mainThreadJobs;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GTerrainChunk[] neighborChunks;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static double[] triangleEdgeLength;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Vector2> generatedUv;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Vector3> generatedVertices;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Color32> generatedVertexColors;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<int> generatedTriangles;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int[] indexGrid;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private DateTime lastUpdatedTime;

		[Token(Token = "0x1700005F")]
		public GStylizedTerrain Terrain
		{
			[Token(Token = "0x6000875")]
			[Address(RVA = "0x80A120", Offset = "0x80A120", VA = "0x80A120")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000876")]
			[Address(RVA = "0x80A128", Offset = "0x80A128", VA = "0x80A128")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public MeshFilter MeshFilterComponent
		{
			[Token(Token = "0x6000877")]
			[Address(RVA = "0x806AC4", Offset = "0x806AC4", VA = "0x806AC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		public MeshRenderer MeshRendererComponent
		{
			[Token(Token = "0x6000878")]
			[Address(RVA = "0x80A130", Offset = "0x80A130", VA = "0x80A130")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		public MeshCollider MeshColliderComponent
		{
			[Token(Token = "0x6000879")]
			[Address(RVA = "0x802EDC", Offset = "0x802EDC", VA = "0x802EDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		public LODGroup LodGroupComponent
		{
			[Token(Token = "0x600087A")]
			[Address(RVA = "0x803B0C", Offset = "0x803B0C", VA = "0x803B0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		public Vector2 Index
		{
			[Token(Token = "0x600087B")]
			[Address(RVA = "0x80A1C8", Offset = "0x80A1C8", VA = "0x80A1C8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600087C")]
			[Address(RVA = "0x80A1D0", Offset = "0x80A1D0", VA = "0x80A1D0")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000065")]
		private GTerrainChunkLOD[] ChunkLowerLOD
		{
			[Token(Token = "0x600087D")]
			[Address(RVA = "0x80A1D8", Offset = "0x80A1D8", VA = "0x80A1D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		internal GTerrainChunk[] Internal_NeighborChunks
		{
			[Token(Token = "0x600087E")]
			[Address(RVA = "0x8020E8", Offset = "0x8020E8", VA = "0x8020E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600087F")]
			[Address(RVA = "0x80A2D0", Offset = "0x80A2D0", VA = "0x80A2D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000067")]
		private static double[] TriangleEdgeLength
		{
			[Token(Token = "0x6000880")]
			[Address(RVA = "0x80A2D8", Offset = "0x80A2D8", VA = "0x80A2D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000068")]
		private List<Vector2> GeneratedUv
		{
			[Token(Token = "0x6000881")]
			[Address(RVA = "0x80A418", Offset = "0x80A418", VA = "0x80A418")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private List<Vector3> GeneratedVertices
		{
			[Token(Token = "0x6000882")]
			[Address(RVA = "0x80A48C", Offset = "0x80A48C", VA = "0x80A48C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		private List<Color32> GeneratedVertexColors
		{
			[Token(Token = "0x6000883")]
			[Address(RVA = "0x80A500", Offset = "0x80A500", VA = "0x80A500")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private List<int> GeneratedTriangles
		{
			[Token(Token = "0x6000884")]
			[Address(RVA = "0x80A574", Offset = "0x80A574", VA = "0x80A574")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006C")]
		public DateTime LastUpdatedTime
		{
			[Token(Token = "0x6000885")]
			[Address(RVA = "0x80A5E8", Offset = "0x80A5E8", VA = "0x80A5E8")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000886")]
			[Address(RVA = "0x80A5F0", Offset = "0x80A5F0", VA = "0x80A5F0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public Matrix4x4 LocalToTerrainMatrix
		{
			[Token(Token = "0x6000887")]
			[Address(RVA = "0x80A5F8", Offset = "0x80A5F8", VA = "0x80A5F8")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x80195C", Offset = "0x80195C", VA = "0x80195C")]
		public Rect GetUvRange()
		{
			return default(Rect);
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x80A6E0", Offset = "0x80A6E0", VA = "0x80A6E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x80A6E4", Offset = "0x80A6E4", VA = "0x80A6E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x80A6E8", Offset = "0x80A6E8", VA = "0x80A6E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x80A80C", Offset = "0x80A80C", VA = "0x80A80C")]
		private void ManageSeamStitchingInBackground()
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x80A810", Offset = "0x80A810", VA = "0x80A810")]
		private void StitchSeamInBackground()
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x801B08", Offset = "0x801B08", VA = "0x801B08")]
		internal void Internal_CreateSubDivTree()
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x80A814", Offset = "0x80A814", VA = "0x80A814")]
		private void UpdateMesh(Mesh m, GSubDivisionTree tree)
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x80AE2C", Offset = "0x80AE2C", VA = "0x80AE2C")]
		private void RecalculateTangentIfNeeded(Mesh m)
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x80A984", Offset = "0x80A984", VA = "0x80A984")]
		private void CreatePolygons(GSubDivisionTree tree)
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x8026B0", Offset = "0x8026B0", VA = "0x8026B0")]
		internal void Internal_UpdateMeshLOD0()
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x802AC0", Offset = "0x802AC0", VA = "0x802AC0")]
		internal void Internal_UpdateRenderer()
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x802C50", Offset = "0x802C50", VA = "0x802C50")]
		internal void Internal_UpdateMaterial()
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x80B2F4", Offset = "0x80B2F4", VA = "0x80B2F4")]
		public void SetupLocalToTerrainMatrix(MaterialPropertyBlock props)
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x802154", Offset = "0x802154", VA = "0x802154")]
		public IEnumerable<Vector2> FlattenSubDivTree()
		{
			return null;
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x80B38C", Offset = "0x80B38C", VA = "0x80B38C")]
		private bool StitchGeometrySeamsOnSubDivTree(HashSet<Vector2> vertexPool, GSubDivisionTree tree)
		{
			return default(bool);
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x802674", Offset = "0x802674", VA = "0x802674")]
		internal bool Internal_StitchGeometrySeamsOnSubDivTree(HashSet<Vector2> vertexPool)
		{
			return default(bool);
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x80277C", Offset = "0x80277C", VA = "0x80277C")]
		internal void Internal_UpdateLODsAsync(HashSet<Vector2> vertexPool)
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x80B788", Offset = "0x80B788", VA = "0x80B788")]
		private void StitchSeamLOD(GSubDivisionTree tree, HashSet<Vector2> seamVertices)
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x80BA68", Offset = "0x80BA68", VA = "0x80BA68")]
		private void EnqueueMainThreadJob(Action a)
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x80B0D8", Offset = "0x80B0D8", VA = "0x80B0D8")]
		private GTerrainChunkLOD GetChunkLOD(int level)
		{
			return null;
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x80AF78", Offset = "0x80AF78", VA = "0x80AF78")]
		private Mesh GetMesh(int lod)
		{
			return null;
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x80BB14", Offset = "0x80BB14", VA = "0x80BB14")]
		public static string GetChunkMeshName(Vector2 index, int lod)
		{
			return null;
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x8073F8", Offset = "0x8073F8", VA = "0x8073F8")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x80AF0C", Offset = "0x80AF0C", VA = "0x80AF0C")]
		private void SetLastUpdatedTimeNow()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x80BCB8", Offset = "0x80BCB8", VA = "0x80BCB8")]
		public GTerrainChunk()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000157")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56DF18", Offset = "0x56DF18")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56DF18", Offset = "0x56DF18")]
	public class GTerrainChunkLOD : MonoBehaviour
	{
		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshFilter meshFilterComponent;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer meshRendererComponent;

		[Token(Token = "0x1700006E")]
		public MeshFilter MeshFilterComponent
		{
			[Token(Token = "0x60008A2")]
			[Address(RVA = "0x88AC9C", Offset = "0x88AC9C", VA = "0x88AC9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		public MeshRenderer MeshRendererComponent
		{
			[Token(Token = "0x60008A3")]
			[Address(RVA = "0x88AB34", Offset = "0x88AB34", VA = "0x88AB34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x88AE0C", Offset = "0x88AE0C", VA = "0x88AE0C")]
		public GTerrainChunkLOD()
		{
		}
	}
	[Token(Token = "0x2000158")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56DFB4", Offset = "0x56DFB4")]
	[ExecuteInEditMode]
	public class GTicker : MonoBehaviour
	{
		[Token(Token = "0x200033A")]
		public delegate void TickHandler();

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GTicker instance;

		[Token(Token = "0x17000070")]
		private static GTicker Instance
		{
			[Token(Token = "0x60008A7")]
			[Address(RVA = "0x88D178", Offset = "0x88D178", VA = "0x88D178")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000003")]
		private event TickHandler Tick
		{
			[Token(Token = "0x60008A5")]
			[Address(RVA = "0x88D030", Offset = "0x88D030", VA = "0x88D030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BF64", Offset = "0x57BF64")]
			add
			{
			}
			[Token(Token = "0x60008A6")]
			[Address(RVA = "0x88D0D4", Offset = "0x88D0D4", VA = "0x88D0D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BF74", Offset = "0x57BF74")]
			remove
			{
			}
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x88D284", Offset = "0x88D284", VA = "0x88D284")]
		public static void AddListener(TickHandler callback)
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x88D2B0", Offset = "0x88D2B0", VA = "0x88D2B0")]
		public static void RemoveListener(TickHandler callback)
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x88D2DC", Offset = "0x88D2DC", VA = "0x88D2DC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x88D57C", Offset = "0x88D57C", VA = "0x88D57C")]
		public GTicker()
		{
		}
	}
	[Token(Token = "0x2000159")]
	[ExecuteInEditMode]
	public class GTreeCollider : MonoBehaviour
	{
		[Token(Token = "0x200033B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F920", Offset = "0x56F920")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 targetNormalizePos;

			[Token(Token = "0x6001C89")]
			[Address(RVA = "0x88E664", Offset = "0x88E664", VA = "0x88E664")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0x88E90C", Offset = "0x88E90C", VA = "0x88E90C")]
			internal int <LateUpdate>b__0(GTreeInstance t0, GTreeInstance t1)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GStylizedTerrain terrain;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject target;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int colliderBudget;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float distance;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CapsuleCollider[] colliders;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<GTreeInstance> treeInstances;

		[Token(Token = "0x17000071")]
		public GStylizedTerrain Terrain
		{
			[Token(Token = "0x60008AC")]
			[Address(RVA = "0x88D5CC", Offset = "0x88D5CC", VA = "0x88D5CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008AD")]
			[Address(RVA = "0x88D5D4", Offset = "0x88D5D4", VA = "0x88D5D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public GameObject Target
		{
			[Token(Token = "0x60008AE")]
			[Address(RVA = "0x88D81C", Offset = "0x88D81C", VA = "0x88D81C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0x88D824", Offset = "0x88D824", VA = "0x88D824")]
			set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public int ColliderBudget
		{
			[Token(Token = "0x60008B0")]
			[Address(RVA = "0x88D82C", Offset = "0x88D82C", VA = "0x88D82C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008B1")]
			[Address(RVA = "0x88D834", Offset = "0x88D834", VA = "0x88D834")]
			set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public float Distance
		{
			[Token(Token = "0x60008B2")]
			[Address(RVA = "0x88D8C0", Offset = "0x88D8C0", VA = "0x88D8C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008B3")]
			[Address(RVA = "0x88D8C8", Offset = "0x88D8C8", VA = "0x88D8C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000075")]
		private CapsuleCollider[] Colliders
		{
			[Token(Token = "0x60008B4")]
			[Address(RVA = "0x88D948", Offset = "0x88D948", VA = "0x88D948")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		private List<GTreeInstance> TreeInstances
		{
			[Token(Token = "0x60008B5")]
			[Address(RVA = "0x88DAB0", Offset = "0x88DAB0", VA = "0x88DAB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008B6")]
			[Address(RVA = "0x88DB24", Offset = "0x88DB24", VA = "0x88DB24")]
			set
			{
			}
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x88DB2C", Offset = "0x88DB2C", VA = "0x88DB2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x88DB9C", Offset = "0x88DB9C", VA = "0x88DB9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x88DC04", Offset = "0x88DC04", VA = "0x88DC04")]
		private void OnTerrainDataDirty(GTerrainData data, GTerrainData.DirtyFlags flag)
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x88D670", Offset = "0x88D670", VA = "0x88D670")]
		private void CopyTreeInstances()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x88DD70", Offset = "0x88DD70", VA = "0x88DD70")]
		public void Reset()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x88DE4C", Offset = "0x88DE4C", VA = "0x88DE4C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x88E66C", Offset = "0x88E66C", VA = "0x88E66C")]
		private CapsuleCollider GetCollider(int index)
		{
			return null;
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x88E904", Offset = "0x88E904", VA = "0x88E904")]
		public GTreeCollider()
		{
		}
	}
	[Token(Token = "0x200015A")]
	[AttributeAttribute(Name = "GDisplayName", RVA = "0x56E010", Offset = "0x56E010")]
	public class GAlbedoToSharpVertexColorPolygonProcessor : IGPolygonProcessor
	{
		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x866CAC", Offset = "0x866CAC", VA = "0x866CAC", Slot = "4")]
		public void Process(GTerrainChunk chunk, ref GPolygon p)
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x866F30", Offset = "0x866F30", VA = "0x866F30")]
		public GAlbedoToSharpVertexColorPolygonProcessor()
		{
		}
	}
	[Token(Token = "0x200015B")]
	[AttributeAttribute(Name = "GDisplayName", RVA = "0x56E048", Offset = "0x56E048")]
	public class GAlbedoToVertexColorPolygonProcessor : IGPolygonProcessor
	{
		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x866F38", Offset = "0x866F38", VA = "0x866F38", Slot = "4")]
		public void Process(GTerrainChunk chunk, ref GPolygon p)
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x867250", Offset = "0x867250", VA = "0x867250")]
		public GAlbedoToVertexColorPolygonProcessor()
		{
		}
	}
	[Token(Token = "0x200015C")]
	[AttributeAttribute(Name = "GDisplayName", RVA = "0x56E080", Offset = "0x56E080")]
	public class GMidpointSplitPolygonProcessor : IGPolygonProcessor
	{
		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xA8E0B0", Offset = "0xA8E0B0", VA = "0xA8E0B0", Slot = "4")]
		public void Process(GTerrainChunk chunk, ref GPolygon p)
		{
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xA8EA70", Offset = "0xA8EA70", VA = "0xA8EA70")]
		public GMidpointSplitPolygonProcessor()
		{
		}
	}
	[Token(Token = "0x200015D")]
	public class GPolygon
	{
		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vector3> vertices;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Vector2> uvs;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Color32> vertexColors;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<int> triangles;

		[Token(Token = "0x17000077")]
		public List<Vector3> Vertices
		{
			[Token(Token = "0x60008C5")]
			[Address(RVA = "0x7F7140", Offset = "0x7F7140", VA = "0x7F7140")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008C6")]
			[Address(RVA = "0x7F71B8", Offset = "0x7F71B8", VA = "0x7F71B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000078")]
		public List<Vector2> Uvs
		{
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0x7F71C0", Offset = "0x7F71C0", VA = "0x7F71C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008C8")]
			[Address(RVA = "0x7F7238", Offset = "0x7F7238", VA = "0x7F7238")]
			set
			{
			}
		}

		[Token(Token = "0x17000079")]
		public List<Color32> VertexColors
		{
			[Token(Token = "0x60008C9")]
			[Address(RVA = "0x7F7240", Offset = "0x7F7240", VA = "0x7F7240")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008CA")]
			[Address(RVA = "0x7F7248", Offset = "0x7F7248", VA = "0x7F7248")]
			set
			{
			}
		}

		[Token(Token = "0x1700007A")]
		public List<int> Triangles
		{
			[Token(Token = "0x60008CB")]
			[Address(RVA = "0x7F7250", Offset = "0x7F7250", VA = "0x7F7250")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008CC")]
			[Address(RVA = "0x7F72C8", Offset = "0x7F72C8", VA = "0x7F72C8")]
			set
			{
			}
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x7F72D0", Offset = "0x7F72D0", VA = "0x7F72D0")]
		public void Clear()
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x7F73AC", Offset = "0x7F73AC", VA = "0x7F73AC")]
		public GPolygon()
		{
		}
	}
	[Token(Token = "0x200015E")]
	public interface IGPolygonProcessor
	{
		[Token(Token = "0x60008CF")]
		void Process(GTerrainChunk chunk, ref GPolygon p);
	}
	[Token(Token = "0x200015F")]
	public class GFoliage : ScriptableObject
	{
		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GTerrainData terrainData;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GTreePrototypeGroup trees;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<GTreeInstance> treeInstances;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GSnapMode treeSnapMode;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private LayerMask treeSnapLayerMask;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GGrassPrototypeGroup grasses;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GSnapMode grassSnapMode;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private LayerMask grassSnapLayerMask;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int patchGridSize;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GGrassPatch[] grassPatches;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Rect> treeDirtyRegions;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Rect> grassDirtyRegions;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float estimatedGrassStorageMB;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private bool enableInteractiveGrass;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private int vectorFieldMapResolution;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float bendSensitive;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float restoreSensitive;

		[Token(Token = "0x1700007B")]
		public GTerrainData TerrainData
		{
			[Token(Token = "0x60008D0")]
			[Address(RVA = "0x86D7F0", Offset = "0x86D7F0", VA = "0x86D7F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008D1")]
			[Address(RVA = "0x86D7F8", Offset = "0x86D7F8", VA = "0x86D7F8")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public GTreePrototypeGroup Trees
		{
			[Token(Token = "0x60008D2")]
			[Address(RVA = "0x86D800", Offset = "0x86D800", VA = "0x86D800")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008D3")]
			[Address(RVA = "0x86D808", Offset = "0x86D808", VA = "0x86D808")]
			set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public List<GTreeInstance> TreeInstances
		{
			[Token(Token = "0x60008D4")]
			[Address(RVA = "0x862CA8", Offset = "0x862CA8", VA = "0x862CA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008D5")]
			[Address(RVA = "0x86D810", Offset = "0x86D810", VA = "0x86D810")]
			set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public GSnapMode TreeSnapMode
		{
			[Token(Token = "0x60008D6")]
			[Address(RVA = "0x86D818", Offset = "0x86D818", VA = "0x86D818")]
			get
			{
				return default(GSnapMode);
			}
			[Token(Token = "0x60008D7")]
			[Address(RVA = "0x86D820", Offset = "0x86D820", VA = "0x86D820")]
			set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public LayerMask TreeSnapLayerMask
		{
			[Token(Token = "0x60008D8")]
			[Address(RVA = "0x86D828", Offset = "0x86D828", VA = "0x86D828")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60008D9")]
			[Address(RVA = "0x86D830", Offset = "0x86D830", VA = "0x86D830")]
			set
			{
			}
		}

		[Token(Token = "0x17000080")]
		public GGrassPrototypeGroup Grasses
		{
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0x86D838", Offset = "0x86D838", VA = "0x86D838")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008DB")]
			[Address(RVA = "0x86D840", Offset = "0x86D840", VA = "0x86D840")]
			set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public GSnapMode GrassSnapMode
		{
			[Token(Token = "0x60008DC")]
			[Address(RVA = "0x86D848", Offset = "0x86D848", VA = "0x86D848")]
			get
			{
				return default(GSnapMode);
			}
			[Token(Token = "0x60008DD")]
			[Address(RVA = "0x86D850", Offset = "0x86D850", VA = "0x86D850")]
			set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public LayerMask GrassSnapLayerMask
		{
			[Token(Token = "0x60008DE")]
			[Address(RVA = "0x86D858", Offset = "0x86D858", VA = "0x86D858")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60008DF")]
			[Address(RVA = "0x86D860", Offset = "0x86D860", VA = "0x86D860")]
			set
			{
			}
		}

		[Token(Token = "0x17000083")]
		public int PatchGridSize
		{
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0x86D868", Offset = "0x86D868", VA = "0x86D868")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008E1")]
			[Address(RVA = "0x86D870", Offset = "0x86D870", VA = "0x86D870")]
			set
			{
			}
		}

		[Token(Token = "0x17000084")]
		public GGrassPatch[] GrassPatches
		{
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0x864AA0", Offset = "0x864AA0", VA = "0x864AA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		private List<Rect> TreeDirtyRegions
		{
			[Token(Token = "0x60008E3")]
			[Address(RVA = "0x86DAE4", Offset = "0x86DAE4", VA = "0x86DAE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0x86DB58", Offset = "0x86DB58", VA = "0x86DB58")]
			set
			{
			}
		}

		[Token(Token = "0x17000086")]
		private List<Rect> GrassDirtyRegions
		{
			[Token(Token = "0x60008E5")]
			[Address(RVA = "0x86DB60", Offset = "0x86DB60", VA = "0x86DB60")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0x86DBD4", Offset = "0x86DBD4", VA = "0x86DBD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public float EstimatedGrassStorageMB
		{
			[Token(Token = "0x60008E7")]
			[Address(RVA = "0x86DBDC", Offset = "0x86DBDC", VA = "0x86DBDC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008E8")]
			[Address(RVA = "0x86DBE4", Offset = "0x86DBE4", VA = "0x86DBE4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public bool EnableInteractiveGrass
		{
			[Token(Token = "0x60008E9")]
			[Address(RVA = "0x86DC64", Offset = "0x86DC64", VA = "0x86DC64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008EA")]
			[Address(RVA = "0x86DC6C", Offset = "0x86DC6C", VA = "0x86DC6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public int VectorFieldMapResolution
		{
			[Token(Token = "0x60008EB")]
			[Address(RVA = "0x86DC78", Offset = "0x86DC78", VA = "0x86DC78")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008EC")]
			[Address(RVA = "0x86DC80", Offset = "0x86DC80", VA = "0x86DC80")]
			set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public float BendSensitive
		{
			[Token(Token = "0x60008ED")]
			[Address(RVA = "0x86DD0C", Offset = "0x86DD0C", VA = "0x86DD0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008EE")]
			[Address(RVA = "0x86DD14", Offset = "0x86DD14", VA = "0x86DD14")]
			set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		public float RestoreSensitive
		{
			[Token(Token = "0x60008EF")]
			[Address(RVA = "0x86DD90", Offset = "0x86DD90", VA = "0x86DD90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008F0")]
			[Address(RVA = "0x86DD98", Offset = "0x86DD98", VA = "0x86DD98")]
			set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public int GrassInstanceCount
		{
			[Token(Token = "0x60008F1")]
			[Address(RVA = "0x86DE14", Offset = "0x86DE14", VA = "0x86DE14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x86DED8", Offset = "0x86DED8", VA = "0x86DED8")]
		private void Reset()
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x86E030", Offset = "0x86E030", VA = "0x86E030")]
		public void ResetFull()
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x86E0BC", Offset = "0x86E0BC", VA = "0x86E0BC")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x86D8F0", Offset = "0x86D8F0", VA = "0x86D8F0")]
		private void ResampleGrassPatches()
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x86483C", Offset = "0x86483C", VA = "0x86483C")]
		public void AddGrassInstances(List<GGrassInstance> instances)
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x862D1C", Offset = "0x862D1C", VA = "0x862D1C")]
		public List<GGrassInstance> GetGrassInstances()
		{
			return null;
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x864778", Offset = "0x864778", VA = "0x864778")]
		public void ClearGrassInstances()
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x86E2FC", Offset = "0x86E2FC", VA = "0x86E2FC")]
		public void CleanUp()
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x85F2EC", Offset = "0x85F2EC", VA = "0x85F2EC")]
		public void SetTreeRegionDirty(Rect uvRect)
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x86E674", Offset = "0x86E674", VA = "0x86E674")]
		public void SetTreeRegionDirty(IEnumerable<Rect> uvRects)
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x86E6E0", Offset = "0x86E6E0", VA = "0x86E6E0")]
		public Rect[] GetTreeDirtyRegions()
		{
			return null;
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x85F404", Offset = "0x85F404", VA = "0x85F404")]
		public void ClearTreeDirtyRegions()
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x85F378", Offset = "0x85F378", VA = "0x85F378")]
		public void SetGrassRegionDirty(Rect uvRect)
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x86E73C", Offset = "0x86E73C", VA = "0x86E73C")]
		public void SetGrassRegionDirty(IEnumerable<Rect> uvRects)
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x86E7A8", Offset = "0x86E7A8", VA = "0x86E7A8")]
		public Rect[] GetGrassDirtyRegions()
		{
			return null;
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x85F460", Offset = "0x85F460", VA = "0x85F460")]
		public void ClearGrassDirtyRegions()
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x86E0B8", Offset = "0x86E0B8", VA = "0x86E0B8")]
		private void CalculateEstimatedGrassStorage()
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x86E804", Offset = "0x86E804", VA = "0x86E804")]
		public void CopyTo(GFoliage des)
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x86E854", Offset = "0x86E854", VA = "0x86E854")]
		public GFoliage()
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x86E85C", Offset = "0x86E85C", VA = "0x86E85C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BF84", Offset = "0x57BF84")]
		private bool <Refresh>b__71_0(GTreeInstance t)
		{
			return default(bool);
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x86E8DC", Offset = "0x86E8DC", VA = "0x86E8DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BF94", Offset = "0x57BF94")]
		private bool <Refresh>b__71_1(GGrassInstance g)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000160")]
	public struct GFoliageDefault
	{
		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Material treeBillboardMaterial;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private Material treeBillboardMaterialLWRP;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Material treeBillboardMaterialURP;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material grassMaterial;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material grassInteractiveMaterial;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material grassMaterialLWRP;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Material grassInteractiveMaterialLWRP;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material grassMaterialURP;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material grassInteractiveMaterialURP;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material grassPreviewMaterial;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GTreePrototypeGroup trees;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GSnapMode treeSnapMode;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private LayerMask treeSnapLayerMask;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GGrassPrototypeGroup grasses;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GSnapMode grassSnapMode;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private LayerMask grassSnapLayerMask;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private int patchGridSize;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private bool enableInteractiveGrass;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private int vectorFieldMapResolution;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float bendSensitive;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float restoreSensitive;

		[Token(Token = "0x1700008D")]
		public Material TreeBillboardMaterial
		{
			[Token(Token = "0x6000907")]
			[Address(RVA = "0x5F3BEC", Offset = "0x5F3BEC", VA = "0x5F3BEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000908")]
			[Address(RVA = "0x5F3BF4", Offset = "0x5F3BF4", VA = "0x5F3BF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public Material TreeBillboardMaterialLWRP
		{
			[Token(Token = "0x6000909")]
			[Address(RVA = "0x5F3BFC", Offset = "0x5F3BFC", VA = "0x5F3BFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600090A")]
			[Address(RVA = "0x5F3C04", Offset = "0x5F3C04", VA = "0x5F3C04")]
			set
			{
			}
		}

		[Token(Token = "0x1700008F")]
		public Material TreeBillboardMaterialURP
		{
			[Token(Token = "0x600090B")]
			[Address(RVA = "0x5F3C0C", Offset = "0x5F3C0C", VA = "0x5F3C0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600090C")]
			[Address(RVA = "0x5F3C14", Offset = "0x5F3C14", VA = "0x5F3C14")]
			set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public Material GrassMaterial
		{
			[Token(Token = "0x600090D")]
			[Address(RVA = "0x5F3C1C", Offset = "0x5F3C1C", VA = "0x5F3C1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600090E")]
			[Address(RVA = "0x5F3C24", Offset = "0x5F3C24", VA = "0x5F3C24")]
			set
			{
			}
		}

		[Token(Token = "0x17000091")]
		public Material GrassInteractiveMaterial
		{
			[Token(Token = "0x600090F")]
			[Address(RVA = "0x5F3C2C", Offset = "0x5F3C2C", VA = "0x5F3C2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000910")]
			[Address(RVA = "0x5F3C34", Offset = "0x5F3C34", VA = "0x5F3C34")]
			set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public Material GrassMaterialLWRP
		{
			[Token(Token = "0x6000911")]
			[Address(RVA = "0x5F3C3C", Offset = "0x5F3C3C", VA = "0x5F3C3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000912")]
			[Address(RVA = "0x5F3C44", Offset = "0x5F3C44", VA = "0x5F3C44")]
			set
			{
			}
		}

		[Token(Token = "0x17000093")]
		public Material GrassInteractiveMaterialLWRP
		{
			[Token(Token = "0x6000913")]
			[Address(RVA = "0x5F3C4C", Offset = "0x5F3C4C", VA = "0x5F3C4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000914")]
			[Address(RVA = "0x5F3C54", Offset = "0x5F3C54", VA = "0x5F3C54")]
			set
			{
			}
		}

		[Token(Token = "0x17000094")]
		public Material GrassMaterialURP
		{
			[Token(Token = "0x6000915")]
			[Address(RVA = "0x5F3C5C", Offset = "0x5F3C5C", VA = "0x5F3C5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000916")]
			[Address(RVA = "0x5F3C64", Offset = "0x5F3C64", VA = "0x5F3C64")]
			set
			{
			}
		}

		[Token(Token = "0x17000095")]
		public Material GrassInteractiveMaterialURP
		{
			[Token(Token = "0x6000917")]
			[Address(RVA = "0x5F3C6C", Offset = "0x5F3C6C", VA = "0x5F3C6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000918")]
			[Address(RVA = "0x5F3C74", Offset = "0x5F3C74", VA = "0x5F3C74")]
			set
			{
			}
		}

		[Token(Token = "0x17000096")]
		public Material GrassPreviewMaterial
		{
			[Token(Token = "0x6000919")]
			[Address(RVA = "0x5F3C7C", Offset = "0x5F3C7C", VA = "0x5F3C7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600091A")]
			[Address(RVA = "0x5F3C84", Offset = "0x5F3C84", VA = "0x5F3C84")]
			set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public GTreePrototypeGroup Trees
		{
			[Token(Token = "0x600091B")]
			[Address(RVA = "0x5F3C8C", Offset = "0x5F3C8C", VA = "0x5F3C8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600091C")]
			[Address(RVA = "0x5F3C94", Offset = "0x5F3C94", VA = "0x5F3C94")]
			set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public GSnapMode TreeSnapMode
		{
			[Token(Token = "0x600091D")]
			[Address(RVA = "0x5F3C9C", Offset = "0x5F3C9C", VA = "0x5F3C9C")]
			get
			{
				return default(GSnapMode);
			}
			[Token(Token = "0x600091E")]
			[Address(RVA = "0x5F3CA4", Offset = "0x5F3CA4", VA = "0x5F3CA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public LayerMask TreeSnapLayerMask
		{
			[Token(Token = "0x600091F")]
			[Address(RVA = "0x5F3CAC", Offset = "0x5F3CAC", VA = "0x5F3CAC")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000920")]
			[Address(RVA = "0x5F3CB4", Offset = "0x5F3CB4", VA = "0x5F3CB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public GGrassPrototypeGroup Grasses
		{
			[Token(Token = "0x6000921")]
			[Address(RVA = "0x5F3CBC", Offset = "0x5F3CBC", VA = "0x5F3CBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000922")]
			[Address(RVA = "0x5F3CC4", Offset = "0x5F3CC4", VA = "0x5F3CC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public GSnapMode GrassSnapMode
		{
			[Token(Token = "0x6000923")]
			[Address(RVA = "0x5F3CCC", Offset = "0x5F3CCC", VA = "0x5F3CCC")]
			get
			{
				return default(GSnapMode);
			}
			[Token(Token = "0x6000924")]
			[Address(RVA = "0x5F3CD4", Offset = "0x5F3CD4", VA = "0x5F3CD4")]
			set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public LayerMask GrassSnapLayerMask
		{
			[Token(Token = "0x6000925")]
			[Address(RVA = "0x5F3CDC", Offset = "0x5F3CDC", VA = "0x5F3CDC")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000926")]
			[Address(RVA = "0x5F3CE4", Offset = "0x5F3CE4", VA = "0x5F3CE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public int PatchGridSize
		{
			[Token(Token = "0x6000927")]
			[Address(RVA = "0x5F3CEC", Offset = "0x5F3CEC", VA = "0x5F3CEC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000928")]
			[Address(RVA = "0x5F3CF4", Offset = "0x5F3CF4", VA = "0x5F3CF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700009E")]
		public bool EnableInteractiveGrass
		{
			[Token(Token = "0x6000929")]
			[Address(RVA = "0x5F3CFC", Offset = "0x5F3CFC", VA = "0x5F3CFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600092A")]
			[Address(RVA = "0x5F3D04", Offset = "0x5F3D04", VA = "0x5F3D04")]
			set
			{
			}
		}

		[Token(Token = "0x1700009F")]
		public int VectorFieldMapResolution
		{
			[Token(Token = "0x600092B")]
			[Address(RVA = "0x5F3D10", Offset = "0x5F3D10", VA = "0x5F3D10")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600092C")]
			[Address(RVA = "0x5F3D18", Offset = "0x5F3D18", VA = "0x5F3D18")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public float BendSensitive
		{
			[Token(Token = "0x600092D")]
			[Address(RVA = "0x5F3D20", Offset = "0x5F3D20", VA = "0x5F3D20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600092E")]
			[Address(RVA = "0x5F3D28", Offset = "0x5F3D28", VA = "0x5F3D28")]
			set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public float RestoreSensitive
		{
			[Token(Token = "0x600092F")]
			[Address(RVA = "0x5F3D30", Offset = "0x5F3D30", VA = "0x5F3D30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000930")]
			[Address(RVA = "0x5F3D38", Offset = "0x5F3D38", VA = "0x5F3D38")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000161")]
	public class GGeometry : ScriptableObject
	{
		[Token(Token = "0x4000C72")]
		public const string HEIGHT_MAP_NAME = "Height Map";

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GTerrainData terrainData;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float width;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float height;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float length;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int heightMapResolution;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Texture2D heightMap;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float heightmapVersion;

		[Token(Token = "0x4000C7A")]
		private const float HEIGHT_MAP_VERSION_ENCODE_RG = 246f;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture2D subDivisionMap;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int meshBaseResolution;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int meshResolution;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int chunkGridSize;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private int lodCount;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int displacementSeed;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float displacementStrength;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GPolygonDistributionMode polygonDistribution;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string polygonProcessorName;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Type> polygonProcessorTypeCollection;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Rect> dirtyRegion;

		[Token(Token = "0x170000A2")]
		public GTerrainData TerrainData
		{
			[Token(Token = "0x6000931")]
			[Address(RVA = "0xA83E4C", Offset = "0xA83E4C", VA = "0xA83E4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000932")]
			[Address(RVA = "0xA83E54", Offset = "0xA83E54", VA = "0xA83E54")]
			internal set
			{
			}
		}

		[Token(Token = "0x170000A3")]
		public float Width
		{
			[Token(Token = "0x6000933")]
			[Address(RVA = "0xA83E5C", Offset = "0xA83E5C", VA = "0xA83E5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000934")]
			[Address(RVA = "0xA83E64", Offset = "0xA83E64", VA = "0xA83E64")]
			set
			{
			}
		}

		[Token(Token = "0x170000A4")]
		public float Height
		{
			[Token(Token = "0x6000935")]
			[Address(RVA = "0xA83EE4", Offset = "0xA83EE4", VA = "0xA83EE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000936")]
			[Address(RVA = "0xA83EEC", Offset = "0xA83EEC", VA = "0xA83EEC")]
			set
			{
			}
		}

		[Token(Token = "0x170000A5")]
		public float Length
		{
			[Token(Token = "0x6000937")]
			[Address(RVA = "0xA83F6C", Offset = "0xA83F6C", VA = "0xA83F6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000938")]
			[Address(RVA = "0xA83F74", Offset = "0xA83F74", VA = "0xA83F74")]
			set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public int HeightMapResolution
		{
			[Token(Token = "0x6000939")]
			[Address(RVA = "0xA83FF4", Offset = "0xA83FF4", VA = "0xA83FF4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600093A")]
			[Address(RVA = "0xA83FFC", Offset = "0xA83FFC", VA = "0xA83FFC")]
			set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public Texture2D HeightMap
		{
			[Token(Token = "0x600093B")]
			[Address(RVA = "0xA842DC", Offset = "0xA842DC", VA = "0xA842DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		public static TextureFormat HeightMapFormat
		{
			[Token(Token = "0x600093C")]
			[Address(RVA = "0xA844C4", Offset = "0xA844C4", VA = "0xA844C4")]
			get
			{
				return default(TextureFormat);
			}
		}

		[Token(Token = "0x170000A9")]
		public static RenderTextureFormat HeightMapRTFormat
		{
			[Token(Token = "0x600093D")]
			[Address(RVA = "0xA84768", Offset = "0xA84768", VA = "0xA84768")]
			get
			{
				return default(RenderTextureFormat);
			}
		}

		[Token(Token = "0x170000AA")]
		internal Texture2D Internal_SubDivisionMap
		{
			[Token(Token = "0x600093E")]
			[Address(RVA = "0xA84770", Offset = "0xA84770", VA = "0xA84770")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		public int MeshBaseResolution
		{
			[Token(Token = "0x600093F")]
			[Address(RVA = "0xA84A1C", Offset = "0xA84A1C", VA = "0xA84A1C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000940")]
			[Address(RVA = "0xA84A24", Offset = "0xA84A24", VA = "0xA84A24")]
			set
			{
			}
		}

		[Token(Token = "0x170000AC")]
		public int MeshResolution
		{
			[Token(Token = "0x6000941")]
			[Address(RVA = "0xA84AA8", Offset = "0xA84AA8", VA = "0xA84AA8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000942")]
			[Address(RVA = "0xA84AB0", Offset = "0xA84AB0", VA = "0xA84AB0")]
			set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		public int ChunkGridSize
		{
			[Token(Token = "0x6000943")]
			[Address(RVA = "0xA84B34", Offset = "0xA84B34", VA = "0xA84B34")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000944")]
			[Address(RVA = "0xA84B3C", Offset = "0xA84B3C", VA = "0xA84B3C")]
			set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public int LODCount
		{
			[Token(Token = "0x6000945")]
			[Address(RVA = "0xA84BBC", Offset = "0xA84BBC", VA = "0xA84BBC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000946")]
			[Address(RVA = "0xA84BC4", Offset = "0xA84BC4", VA = "0xA84BC4")]
			set
			{
			}
		}

		[Token(Token = "0x170000AF")]
		public int DisplacementSeed
		{
			[Token(Token = "0x6000947")]
			[Address(RVA = "0xA84C48", Offset = "0xA84C48", VA = "0xA84C48")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000948")]
			[Address(RVA = "0xA84C50", Offset = "0xA84C50", VA = "0xA84C50")]
			set
			{
			}
		}

		[Token(Token = "0x170000B0")]
		public float DisplacementStrength
		{
			[Token(Token = "0x6000949")]
			[Address(RVA = "0xA84C58", Offset = "0xA84C58", VA = "0xA84C58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600094A")]
			[Address(RVA = "0xA84C60", Offset = "0xA84C60", VA = "0xA84C60")]
			set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		public GPolygonDistributionMode PolygonDistribution
		{
			[Token(Token = "0x600094B")]
			[Address(RVA = "0xA84CDC", Offset = "0xA84CDC", VA = "0xA84CDC")]
			get
			{
				return default(GPolygonDistributionMode);
			}
			[Token(Token = "0x600094C")]
			[Address(RVA = "0xA84CE4", Offset = "0xA84CE4", VA = "0xA84CE4")]
			set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public string PolygonProcessorName
		{
			[Token(Token = "0x600094D")]
			[Address(RVA = "0xA84CEC", Offset = "0xA84CEC", VA = "0xA84CEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600094E")]
			[Address(RVA = "0xA84CF4", Offset = "0xA84CF4", VA = "0xA84CF4")]
			set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		private static string PolygonProcessorInterfaceName
		{
			[Token(Token = "0x600094F")]
			[Address(RVA = "0xA84CFC", Offset = "0xA84CFC", VA = "0xA84CFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		internal IGPolygonProcessor PolygonProcessor
		{
			[Token(Token = "0x6000950")]
			[Address(RVA = "0xA84D84", Offset = "0xA84D84", VA = "0xA84D84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		public static List<Type> PolygonProcessorTypeCollection
		{
			[Token(Token = "0x6000951")]
			[Address(RVA = "0xA84E98", Offset = "0xA84E98", VA = "0xA84E98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000952")]
			[Address(RVA = "0xA84F70", Offset = "0xA84F70", VA = "0xA84F70")]
			set
			{
			}
		}

		[Token(Token = "0x170000B6")]
		private List<Rect> DirtyRegion
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0xA84FDC", Offset = "0xA84FDC", VA = "0xA84FDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000954")]
			[Address(RVA = "0xA85050", Offset = "0xA85050", VA = "0xA85050")]
			set
			{
			}
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xA85058", Offset = "0xA85058", VA = "0xA85058")]
		static GGeometry()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xA8505C", Offset = "0xA8505C", VA = "0xA8505C")]
		private static void InitPolygonProcessorCollection()
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xA851C8", Offset = "0xA851C8", VA = "0xA851C8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xA85308", Offset = "0xA85308", VA = "0xA85308")]
		public void ResetFull()
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0xA840A8", Offset = "0xA840A8", VA = "0xA840A8")]
		private void ResampleHeightMap()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xA844CC", Offset = "0xA844CC", VA = "0xA844CC")]
		private void ReFormatHeightMap()
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xA847F4", Offset = "0xA847F4", VA = "0xA847F4")]
		internal void Internal_CreateNewSubDivisionMap()
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0xA8569C", Offset = "0xA8569C", VA = "0xA8569C")]
		internal void Internal_CreateNewSubDivisionMap(Texture altHeightMap)
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0xA858BC", Offset = "0xA858BC", VA = "0xA858BC")]
		public void CleanUp()
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xA853E4", Offset = "0xA853E4", VA = "0xA853E4")]
		public void SetRegionDirty(Rect uvRect)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0xA85BC4", Offset = "0xA85BC4", VA = "0xA85BC4")]
		public void SetRegionDirty(IEnumerable<Rect> uvRects)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xA85C30", Offset = "0xA85C30", VA = "0xA85C30")]
		public Rect[] GetDirtyRegions()
		{
			return null;
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xA85C8C", Offset = "0xA85C8C", VA = "0xA85C8C")]
		public void ClearDirtyRegions()
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0xA85CE8", Offset = "0xA85CE8", VA = "0xA85CE8")]
		public void CopyTo(GGeometry des)
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0xA85D8C", Offset = "0xA85D8C", VA = "0xA85D8C")]
		public Vector4 GetDecodedHeightMapSample(Vector2 uv)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0xA85E5C", Offset = "0xA85E5C", VA = "0xA85E5C")]
		public GGeometry()
		{
		}
	}
	[Token(Token = "0x2000162")]
	[Flags]
	public enum GGeometryChannel
	{
		[Token(Token = "0x4000C87")]
		Texcoord = 1,
		[Token(Token = "0x4000C88")]
		Tangent = 2,
		[Token(Token = "0x4000C89")]
		VertexColor = 4
	}
	[Serializable]
	[Token(Token = "0x2000163")]
	public struct GGeometryDefault
	{
		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float width;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private float height;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private float length;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private int heightMapResolution;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int meshBaseResolution;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int meshResolution;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int chunkGridSize;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int lodCount;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int displacementSeed;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float displacementStrength;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GPolygonDistributionMode polygonDistribution;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string polygonProcessorName;

		[Token(Token = "0x170000B7")]
		public float Width
		{
			[Token(Token = "0x6000965")]
			[Address(RVA = "0x5F3E68", Offset = "0x5F3E68", VA = "0x5F3E68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000966")]
			[Address(RVA = "0x5F3E70", Offset = "0x5F3E70", VA = "0x5F3E70")]
			set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public float Height
		{
			[Token(Token = "0x6000967")]
			[Address(RVA = "0x5F3E78", Offset = "0x5F3E78", VA = "0x5F3E78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000968")]
			[Address(RVA = "0x5F3E80", Offset = "0x5F3E80", VA = "0x5F3E80")]
			set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public float Length
		{
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x5F3E88", Offset = "0x5F3E88", VA = "0x5F3E88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600096A")]
			[Address(RVA = "0x5F3E90", Offset = "0x5F3E90", VA = "0x5F3E90")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public int HeightMapResolution
		{
			[Token(Token = "0x600096B")]
			[Address(RVA = "0x5F3E98", Offset = "0x5F3E98", VA = "0x5F3E98")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600096C")]
			[Address(RVA = "0x5F3EA0", Offset = "0x5F3EA0", VA = "0x5F3EA0")]
			set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public int MeshBaseResolution
		{
			[Token(Token = "0x600096D")]
			[Address(RVA = "0x5F3EA8", Offset = "0x5F3EA8", VA = "0x5F3EA8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600096E")]
			[Address(RVA = "0x5F3EB0", Offset = "0x5F3EB0", VA = "0x5F3EB0")]
			set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public int MeshResolution
		{
			[Token(Token = "0x600096F")]
			[Address(RVA = "0x5F3EB8", Offset = "0x5F3EB8", VA = "0x5F3EB8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000970")]
			[Address(RVA = "0x5F3EC0", Offset = "0x5F3EC0", VA = "0x5F3EC0")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public int ChunkGridSize
		{
			[Token(Token = "0x6000971")]
			[Address(RVA = "0x5F3EC8", Offset = "0x5F3EC8", VA = "0x5F3EC8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000972")]
			[Address(RVA = "0x5F3ED0", Offset = "0x5F3ED0", VA = "0x5F3ED0")]
			set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public int LODCount
		{
			[Token(Token = "0x6000973")]
			[Address(RVA = "0x5F3ED8", Offset = "0x5F3ED8", VA = "0x5F3ED8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000974")]
			[Address(RVA = "0x5F3EE0", Offset = "0x5F3EE0", VA = "0x5F3EE0")]
			set
			{
			}
		}

		[Token(Token = "0x170000BF")]
		public int DisplacementSeed
		{
			[Token(Token = "0x6000975")]
			[Address(RVA = "0x5F3EE8", Offset = "0x5F3EE8", VA = "0x5F3EE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000976")]
			[Address(RVA = "0x5F3EF0", Offset = "0x5F3EF0", VA = "0x5F3EF0")]
			set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public float DisplacementStrength
		{
			[Token(Token = "0x6000977")]
			[Address(RVA = "0x5F3EF8", Offset = "0x5F3EF8", VA = "0x5F3EF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000978")]
			[Address(RVA = "0x5F3F00", Offset = "0x5F3F00", VA = "0x5F3F00")]
			set
			{
			}
		}

		[Token(Token = "0x170000C1")]
		public GPolygonDistributionMode PolygonDistribution
		{
			[Token(Token = "0x6000979")]
			[Address(RVA = "0x5F3F08", Offset = "0x5F3F08", VA = "0x5F3F08")]
			get
			{
				return default(GPolygonDistributionMode);
			}
			[Token(Token = "0x600097A")]
			[Address(RVA = "0x5F3F10", Offset = "0x5F3F10", VA = "0x5F3F10")]
			set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public string PolygonProcessorName
		{
			[Token(Token = "0x600097B")]
			[Address(RVA = "0x5F3F18", Offset = "0x5F3F18", VA = "0x5F3F18")]
			get
			{
				return null;
			}
			[Token(Token = "0x600097C")]
			[Address(RVA = "0x5F3F20", Offset = "0x5F3F20", VA = "0x5F3F20")]
			set
			{
			}
		}
	}
	[Serializable]
	[Token(Token = "0x2000164")]
	public struct GGrassInstance
	{
		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int prototypeIndex;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private Vector3 position;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Quaternion rotation;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 scale;

		[Token(Token = "0x170000C3")]
		public int PrototypeIndex
		{
			[Token(Token = "0x600097D")]
			[Address(RVA = "0x5F3F28", Offset = "0x5F3F28", VA = "0x5F3F28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600097E")]
			[Address(RVA = "0x5F3F30", Offset = "0x5F3F30", VA = "0x5F3F30")]
			set
			{
			}
		}

		[Token(Token = "0x170000C4")]
		public Vector3 Position
		{
			[Token(Token = "0x600097F")]
			[Address(RVA = "0x5F3F38", Offset = "0x5F3F38", VA = "0x5F3F38")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000980")]
			[Address(RVA = "0x5F3F44", Offset = "0x5F3F44", VA = "0x5F3F44")]
			set
			{
			}
		}

		[Token(Token = "0x170000C5")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6000981")]
			[Address(RVA = "0x5F3F50", Offset = "0x5F3F50", VA = "0x5F3F50")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000982")]
			[Address(RVA = "0x5F3F5C", Offset = "0x5F3F5C", VA = "0x5F3F5C")]
			set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		public Vector3 Scale
		{
			[Token(Token = "0x6000983")]
			[Address(RVA = "0x5F3F68", Offset = "0x5F3F68", VA = "0x5F3F68")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000984")]
			[Address(RVA = "0x5F3F74", Offset = "0x5F3F74", VA = "0x5F3F74")]
			set
			{
			}
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0xA864B4", Offset = "0xA864B4", VA = "0xA864B4")]
		public static GGrassInstance Create(int prototypeIndex)
		{
			return default(GGrassInstance);
		}
	}
	[Serializable]
	[Token(Token = "0x2000165")]
	public class GGrassPatch
	{
		[Token(Token = "0x200033C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F930", Offset = "0x56F930")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GCombineInfo meshTemplate;

			[Token(Token = "0x4001A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public List<Matrix4x4> transforms;

			[Token(Token = "0x4001A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public GGrassPatch <>4__this;

			[Token(Token = "0x4001A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Vector3Int key;

			[Token(Token = "0x4001A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Mesh m;

			[Token(Token = "0x6001C8B")]
			[Address(RVA = "0xA86DD8", Offset = "0xA86DD8", VA = "0xA86DD8")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0xA876D8", Offset = "0xA876D8", VA = "0xA876D8")]
			internal void <UpdateMesh>b__0()
			{
			}
		}

		[Token(Token = "0x200033D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F940", Offset = "0x56F940")]
		private sealed class <>c__DisplayClass19_1
		{
			[Token(Token = "0x4001A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GCombineInfo result;

			[Token(Token = "0x4001A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public <>c__DisplayClass19_0 CS$<>8__locals1;

			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0xA877E4", Offset = "0xA877E4", VA = "0xA877E4")]
			public <>c__DisplayClass19_1()
			{
			}

			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0xA87A14", Offset = "0xA87A14", VA = "0xA87A14")]
			internal void <UpdateMesh>b__1()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200033E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F950", Offset = "0x56F950")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GGrassInstance> <>9__23_0;

			[Token(Token = "0x6001C90")]
			[Address(RVA = "0xA876C4", Offset = "0xA876C4", VA = "0xA876C4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C91")]
			[Address(RVA = "0xA876CC", Offset = "0xA876CC", VA = "0xA876CC")]
			internal bool <StripInstances>b__23_0(GGrassInstance g)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GFoliage foliage;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector2 index;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<GGrassInstance> instances;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool requireFullUpdate;

		[Token(Token = "0x170000C7")]
		public GFoliage Foliage
		{
			[Token(Token = "0x6000986")]
			[Address(RVA = "0xA865AC", Offset = "0xA865AC", VA = "0xA865AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000987")]
			[Address(RVA = "0xA865B4", Offset = "0xA865B4", VA = "0xA865B4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public Vector2 Index
		{
			[Token(Token = "0x6000988")]
			[Address(RVA = "0xA865BC", Offset = "0xA865BC", VA = "0xA865BC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000989")]
			[Address(RVA = "0xA865C4", Offset = "0xA865C4", VA = "0xA865C4")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public List<GGrassInstance> Instances
		{
			[Token(Token = "0x600098A")]
			[Address(RVA = "0xA814AC", Offset = "0xA814AC", VA = "0xA814AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600098B")]
			[Address(RVA = "0xA865CC", Offset = "0xA865CC", VA = "0xA865CC")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		internal bool RequireFullUpdate
		{
			[Token(Token = "0x600098C")]
			[Address(RVA = "0xA865D4", Offset = "0xA865D4", VA = "0xA865D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600098D")]
			[Address(RVA = "0xA865DC", Offset = "0xA865DC", VA = "0xA865DC")]
			set
			{
			}
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0xA865E8", Offset = "0xA865E8", VA = "0xA865E8")]
		internal GGrassPatch(GFoliage owner, int indexX, int indexY)
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0xA813A8", Offset = "0xA813A8", VA = "0xA813A8")]
		public Rect GetUvRange()
		{
			return default(Rect);
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0xA8664C", Offset = "0xA8664C", VA = "0xA8664C")]
		public void UpdateMeshes()
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0xA86724", Offset = "0xA86724", VA = "0xA86724")]
		public void UpdateMesh(int prototypeIndex)
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0xA81434", Offset = "0xA81434", VA = "0xA81434")]
		public Mesh GetMesh(int prototypeIndex)
		{
			return null;
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0xA873E8", Offset = "0xA873E8", VA = "0xA873E8")]
		public static string GetPatchMeshName(Vector2 index, int prototypeIndex)
		{
			return null;
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0xA8758C", Offset = "0xA8758C", VA = "0xA8758C")]
		private void StripInstances()
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0xA86DE0", Offset = "0xA86DE0", VA = "0xA86DE0")]
		private void StripInstances(int prototypeIndex)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000166")]
	public class GGrassPrototype
	{
		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Texture2D texture;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject prefab;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 size;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int layer;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GGrassShape shape;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Mesh customMesh;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Mesh detailMesh;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material detailMaterial;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ShadowCastingMode shadowCastingMode;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool receiveShadow;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[SerializeField]
		private bool alignToSurface;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float pivotOffset;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float bendFactor;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color color;

		[Token(Token = "0x170000CB")]
		public Texture2D Texture
		{
			[Token(Token = "0x6000996")]
			[Address(RVA = "0xA87C1C", Offset = "0xA87C1C", VA = "0xA87C1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000997")]
			[Address(RVA = "0xA87C24", Offset = "0xA87C24", VA = "0xA87C24")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public GameObject Prefab
		{
			[Token(Token = "0x6000998")]
			[Address(RVA = "0xA87C2C", Offset = "0xA87C2C", VA = "0xA87C2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000999")]
			[Address(RVA = "0xA87C34", Offset = "0xA87C34", VA = "0xA87C34")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public Vector3 Size
		{
			[Token(Token = "0x600099A")]
			[Address(RVA = "0xA87DA4", Offset = "0xA87DA4", VA = "0xA87DA4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600099B")]
			[Address(RVA = "0xA87DB0", Offset = "0xA87DB0", VA = "0xA87DB0")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public int Layer
		{
			[Token(Token = "0x600099C")]
			[Address(RVA = "0xA87DBC", Offset = "0xA87DBC", VA = "0xA87DBC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600099D")]
			[Address(RVA = "0xA87DC4", Offset = "0xA87DC4", VA = "0xA87DC4")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public GGrassShape Shape
		{
			[Token(Token = "0x600099E")]
			[Address(RVA = "0xA87DCC", Offset = "0xA87DCC", VA = "0xA87DCC")]
			get
			{
				return default(GGrassShape);
			}
			[Token(Token = "0x600099F")]
			[Address(RVA = "0xA87DD4", Offset = "0xA87DD4", VA = "0xA87DD4")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public Mesh CustomMesh
		{
			[Token(Token = "0x60009A0")]
			[Address(RVA = "0xA87DDC", Offset = "0xA87DDC", VA = "0xA87DDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009A1")]
			[Address(RVA = "0xA87DE4", Offset = "0xA87DE4", VA = "0xA87DE4")]
			set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		public Mesh DetailMesh
		{
			[Token(Token = "0x60009A2")]
			[Address(RVA = "0xA87DEC", Offset = "0xA87DEC", VA = "0xA87DEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009A3")]
			[Address(RVA = "0xA87DF4", Offset = "0xA87DF4", VA = "0xA87DF4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public Material DetailMaterial
		{
			[Token(Token = "0x60009A4")]
			[Address(RVA = "0xA87DFC", Offset = "0xA87DFC", VA = "0xA87DFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009A5")]
			[Address(RVA = "0xA87E04", Offset = "0xA87E04", VA = "0xA87E04")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public ShadowCastingMode ShadowCastingMode
		{
			[Token(Token = "0x60009A6")]
			[Address(RVA = "0xA87E0C", Offset = "0xA87E0C", VA = "0xA87E0C")]
			get
			{
				return default(ShadowCastingMode);
			}
			[Token(Token = "0x60009A7")]
			[Address(RVA = "0xA87E14", Offset = "0xA87E14", VA = "0xA87E14")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public bool ReceiveShadow
		{
			[Token(Token = "0x60009A8")]
			[Address(RVA = "0xA87E1C", Offset = "0xA87E1C", VA = "0xA87E1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009A9")]
			[Address(RVA = "0xA87E24", Offset = "0xA87E24", VA = "0xA87E24")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public bool AlignToSurface
		{
			[Token(Token = "0x60009AA")]
			[Address(RVA = "0xA87E30", Offset = "0xA87E30", VA = "0xA87E30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0xA87E38", Offset = "0xA87E38", VA = "0xA87E38")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public float PivotOffset
		{
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0xA87E44", Offset = "0xA87E44", VA = "0xA87E44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0xA87E4C", Offset = "0xA87E4C", VA = "0xA87E4C")]
			set
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public float BendFactor
		{
			[Token(Token = "0x60009AE")]
			[Address(RVA = "0xA87ED0", Offset = "0xA87ED0", VA = "0xA87ED0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009AF")]
			[Address(RVA = "0xA87ED8", Offset = "0xA87ED8", VA = "0xA87ED8")]
			set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public Color Color
		{
			[Token(Token = "0x60009B0")]
			[Address(RVA = "0xA87F58", Offset = "0xA87F58", VA = "0xA87F58")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0xA87F64", Offset = "0xA87F64", VA = "0xA87F64")]
			set
			{
			}
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xA87F70", Offset = "0xA87F70", VA = "0xA87F70")]
		public static GGrassPrototype Create(Texture2D tex)
		{
			return null;
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xA8808C", Offset = "0xA8808C", VA = "0xA8808C")]
		public static GGrassPrototype Create(GameObject prefab)
		{
			return null;
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xA81520", Offset = "0xA81520", VA = "0xA81520")]
		public Mesh GetBaseMesh()
		{
			return null;
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xA87C3C", Offset = "0xA87C3C", VA = "0xA87C3C")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xA881B0", Offset = "0xA881B0", VA = "0xA881B0")]
		public static explicit operator GGrassPrototype(DetailPrototype p)
		{
			return null;
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0xA882E4", Offset = "0xA882E4", VA = "0xA882E4")]
		public static explicit operator DetailPrototype(GGrassPrototype p)
		{
			return null;
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0xA883D0", Offset = "0xA883D0", VA = "0xA883D0")]
		public bool Equals(DetailPrototype detailPrototype)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0xA88050", Offset = "0xA88050", VA = "0xA88050")]
		public GGrassPrototype()
		{
		}
	}
	[Token(Token = "0x2000167")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x56E0C8", Offset = "0x56E0C8")]
	public class GGrassPrototypeGroup : ScriptableObject
	{
		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GGrassPrototype> prototypes;

		[Token(Token = "0x170000D9")]
		public List<GGrassPrototype> Prototypes
		{
			[Token(Token = "0x60009BA")]
			[Address(RVA = "0xA81334", Offset = "0xA81334", VA = "0xA81334")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009BB")]
			[Address(RVA = "0xA885B0", Offset = "0xA885B0", VA = "0xA885B0")]
			set
			{
			}
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xA885B8", Offset = "0xA885B8", VA = "0xA885B8")]
		public bool Equals(DetailPrototype[] detailPrototypes)
		{
			return default(bool);
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xA886C0", Offset = "0xA886C0", VA = "0xA886C0")]
		public static GGrassPrototypeGroup Create(DetailPrototype[] detailPrototypes)
		{
			return null;
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xA887A0", Offset = "0xA887A0", VA = "0xA887A0")]
		public GGrassPrototypeGroup()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public enum GGrassShape
	{
		[Token(Token = "0x4000CAE")]
		Quad,
		[Token(Token = "0x4000CAF")]
		Cross,
		[Token(Token = "0x4000CB0")]
		TriCross,
		[Token(Token = "0x4000CB1")]
		DetailObject,
		[Token(Token = "0x4000CB2")]
		CustomMesh
	}
	[Token(Token = "0x2000169")]
	public enum GPolygonDistributionMode
	{
		[Token(Token = "0x4000CB4")]
		Dynamic,
		[Token(Token = "0x4000CB5")]
		Uniform
	}
	[Token(Token = "0x200016A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x56E114", Offset = "0x56E114")]
	public class GPrefabPrototypeGroup : ScriptableObject
	{
		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> prototypes;

		[Token(Token = "0x170000DA")]
		public List<GameObject> Prototypes
		{
			[Token(Token = "0x60009BF")]
			[Address(RVA = "0x7F73B4", Offset = "0x7F73B4", VA = "0x7F73B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009C0")]
			[Address(RVA = "0x7F7428", Offset = "0x7F7428", VA = "0x7F7428")]
			set
			{
			}
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x7F7430", Offset = "0x7F7430", VA = "0x7F7430")]
		public GPrefabPrototypeGroup()
		{
		}
	}
	[Token(Token = "0x200016B")]
	public class GRendering : ScriptableObject
	{
		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GTerrainData terrainData;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool castShadow;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool receiveShadow;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool drawFoliage;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[SerializeField]
		private bool enableInstancing;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float billboardStart;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float treeDistance;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float grassDistance;

		[Token(Token = "0x170000DB")]
		public GTerrainData TerrainData
		{
			[Token(Token = "0x60009C2")]
			[Address(RVA = "0x7F7C68", Offset = "0x7F7C68", VA = "0x7F7C68")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009C3")]
			[Address(RVA = "0x7F7C70", Offset = "0x7F7C70", VA = "0x7F7C70")]
			internal set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public bool CastShadow
		{
			[Token(Token = "0x60009C4")]
			[Address(RVA = "0x7F7C78", Offset = "0x7F7C78", VA = "0x7F7C78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009C5")]
			[Address(RVA = "0x7F7C80", Offset = "0x7F7C80", VA = "0x7F7C80")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public bool ReceiveShadow
		{
			[Token(Token = "0x60009C6")]
			[Address(RVA = "0x7F7C8C", Offset = "0x7F7C8C", VA = "0x7F7C8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009C7")]
			[Address(RVA = "0x7F7C94", Offset = "0x7F7C94", VA = "0x7F7C94")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public bool DrawFoliage
		{
			[Token(Token = "0x60009C8")]
			[Address(RVA = "0x7F7CA0", Offset = "0x7F7CA0", VA = "0x7F7CA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009C9")]
			[Address(RVA = "0x7F7CA8", Offset = "0x7F7CA8", VA = "0x7F7CA8")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public bool EnableInstancing
		{
			[Token(Token = "0x60009CA")]
			[Address(RVA = "0x7F7CB4", Offset = "0x7F7CB4", VA = "0x7F7CB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009CB")]
			[Address(RVA = "0x7F7CF4", Offset = "0x7F7CF4", VA = "0x7F7CF4")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public float BillboardStart
		{
			[Token(Token = "0x60009CC")]
			[Address(RVA = "0x7F7D28", Offset = "0x7F7D28", VA = "0x7F7D28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009CD")]
			[Address(RVA = "0x7F7D30", Offset = "0x7F7D30", VA = "0x7F7D30")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public float TreeDistance
		{
			[Token(Token = "0x60009CE")]
			[Address(RVA = "0x7F7DB8", Offset = "0x7F7DB8", VA = "0x7F7DB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009CF")]
			[Address(RVA = "0x7F7DC0", Offset = "0x7F7DC0", VA = "0x7F7DC0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public float GrassDistance
		{
			[Token(Token = "0x60009D0")]
			[Address(RVA = "0x7F7E48", Offset = "0x7F7E48", VA = "0x7F7E48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009D1")]
			[Address(RVA = "0x7F7E50", Offset = "0x7F7E50", VA = "0x7F7E50")]
			set
			{
			}
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x7F7ED8", Offset = "0x7F7ED8", VA = "0x7F7ED8")]
		private void Reset()
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x7F8040", Offset = "0x7F8040", VA = "0x7F8040")]
		public void ResetFull()
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x7F8044", Offset = "0x7F8044", VA = "0x7F8044")]
		public void CopyTo(GRendering des)
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x7F80E0", Offset = "0x7F80E0", VA = "0x7F80E0")]
		public GRendering()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016C")]
	public struct GRenderingDefault
	{
		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool castShadow;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		[SerializeField]
		private bool receiveShadow;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		[SerializeField]
		private bool drawFoliage;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		[SerializeField]
		private bool enableInstancing;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private float billboardStart;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private float treeDistance;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private float grassDistance;

		[Token(Token = "0x170000E3")]
		public bool CastShadow
		{
			[Token(Token = "0x60009D6")]
			[Address(RVA = "0x5E79E8", Offset = "0x5E79E8", VA = "0x5E79E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009D7")]
			[Address(RVA = "0x5E79F0", Offset = "0x5E79F0", VA = "0x5E79F0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public bool ReceiveShadow
		{
			[Token(Token = "0x60009D8")]
			[Address(RVA = "0x5E79FC", Offset = "0x5E79FC", VA = "0x5E79FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009D9")]
			[Address(RVA = "0x5E7A04", Offset = "0x5E7A04", VA = "0x5E7A04")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public bool DrawFoliage
		{
			[Token(Token = "0x60009DA")]
			[Address(RVA = "0x5E7A10", Offset = "0x5E7A10", VA = "0x5E7A10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0x5E7A18", Offset = "0x5E7A18", VA = "0x5E7A18")]
			set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		public bool EnableInstancing
		{
			[Token(Token = "0x60009DC")]
			[Address(RVA = "0x5E7A24", Offset = "0x5E7A24", VA = "0x5E7A24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0x5E7A64", Offset = "0x5E7A64", VA = "0x5E7A64")]
			set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public float BillboardStart
		{
			[Token(Token = "0x60009DE")]
			[Address(RVA = "0x5E7A98", Offset = "0x5E7A98", VA = "0x5E7A98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0x5E7AA0", Offset = "0x5E7AA0", VA = "0x5E7AA0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public float TreeDistance
		{
			[Token(Token = "0x60009E0")]
			[Address(RVA = "0x5E7AA8", Offset = "0x5E7AA8", VA = "0x5E7AA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0x5E7AB0", Offset = "0x5E7AB0", VA = "0x5E7AB0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public float GrassDistance
		{
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0x5E7AB8", Offset = "0x5E7AB8", VA = "0x5E7AB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0x5E7AC0", Offset = "0x5E7AC0", VA = "0x5E7AC0")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200016D")]
	public class GShading : ScriptableObject
	{
		[Token(Token = "0x4000CC6")]
		public const string ALBEDO_MAP_NAME = "Albedo Map";

		[Token(Token = "0x4000CC7")]
		public const string METALLIC_MAP_NAME = "Metallic Map";

		[Token(Token = "0x4000CC8")]
		public const string COLOR_BY_HEIGHT_MAP_NAME = "Color By Height Map";

		[Token(Token = "0x4000CC9")]
		public const string COLOR_BY_NORMAL_MAP_NAME = "Color By Normal Map";

		[Token(Token = "0x4000CCA")]
		public const string COLOR_BLEND_MAP_NAME = "Color Blend Map";

		[Token(Token = "0x4000CCB")]
		public const string SPLAT_CONTROL_MAP_NAME = "Splat Control Map";

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GTerrainData terrainData;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GShadingSystem shadingSystem;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material customMaterial;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int albedoMapResolution;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Texture2D albedoMap;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int metallicMapResolution;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x57235C", Offset = "0x57235C")]
		private Texture2D metallicMap;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string albedoMapPropertyName;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string metallicMapPropertyName;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Gradient colorByHeight;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Gradient colorByNormal;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AnimationCurve colorBlendCurve;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string colorByHeightPropertyName;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string colorByNormalPropertyName;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private string colorBlendPropertyName;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string dimensionPropertyName;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Texture2D colorByHeightMap;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Texture2D colorByNormalMap;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Texture2D colorBlendMap;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GSplatPrototypeGroup splats;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private int splatControlResolution;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Texture2D[] splatControls;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private string splatControlMapPropertyName;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private string splatMapPropertyName;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private string splatNormalPropertyName;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private string splatMetallicPropertyName;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private string splatSmoothnessPropertyName;

		[Token(Token = "0x170000EA")]
		public GTerrainData TerrainData
		{
			[Token(Token = "0x60009E4")]
			[Address(RVA = "0x7F9BFC", Offset = "0x7F9BFC", VA = "0x7F9BFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009E5")]
			[Address(RVA = "0x7F9C04", Offset = "0x7F9C04", VA = "0x7F9C04")]
			internal set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public GShadingSystem ShadingSystem
		{
			[Token(Token = "0x60009E6")]
			[Address(RVA = "0x7F9C0C", Offset = "0x7F9C0C", VA = "0x7F9C0C")]
			get
			{
				return default(GShadingSystem);
			}
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0x7F9C18", Offset = "0x7F9C18", VA = "0x7F9C18")]
			set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public Material MaterialToRender
		{
			[Token(Token = "0x60009E8")]
			[Address(RVA = "0x7F9C20", Offset = "0x7F9C20", VA = "0x7F9C20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		public Material CustomMaterial
		{
			[Token(Token = "0x60009E9")]
			[Address(RVA = "0x7F9C28", Offset = "0x7F9C28", VA = "0x7F9C28")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009EA")]
			[Address(RVA = "0x7F9C30", Offset = "0x7F9C30", VA = "0x7F9C30")]
			set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public int AlbedoMapResolution
		{
			[Token(Token = "0x60009EB")]
			[Address(RVA = "0x7F9C38", Offset = "0x7F9C38", VA = "0x7F9C38")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009EC")]
			[Address(RVA = "0x7F9C40", Offset = "0x7F9C40", VA = "0x7F9C40")]
			set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public Texture2D AlbedoMap
		{
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0x7F9F20", Offset = "0x7F9F20", VA = "0x7F9F20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		public int MetallicMapResolution
		{
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x7FA094", Offset = "0x7FA094", VA = "0x7FA094")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009EF")]
			[Address(RVA = "0x7FA09C", Offset = "0x7FA09C", VA = "0x7FA09C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public Texture2D MetallicMap
		{
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0x7FA37C", Offset = "0x7FA37C", VA = "0x7FA37C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		public string AlbedoMapPropertyName
		{
			[Token(Token = "0x60009F1")]
			[Address(RVA = "0x7FA4F0", Offset = "0x7FA4F0", VA = "0x7FA4F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009F2")]
			[Address(RVA = "0x7FA4F8", Offset = "0x7FA4F8", VA = "0x7FA4F8")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public string MetallicMapPropertyName
		{
			[Token(Token = "0x60009F3")]
			[Address(RVA = "0x7FA500", Offset = "0x7FA500", VA = "0x7FA500")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009F4")]
			[Address(RVA = "0x7FA508", Offset = "0x7FA508", VA = "0x7FA508")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public Gradient ColorByHeight
		{
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0x7FA510", Offset = "0x7FA510", VA = "0x7FA510")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009F6")]
			[Address(RVA = "0x7FA66C", Offset = "0x7FA66C", VA = "0x7FA66C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public Gradient ColorByNormal
		{
			[Token(Token = "0x60009F7")]
			[Address(RVA = "0x7FA674", Offset = "0x7FA674", VA = "0x7FA674")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009F8")]
			[Address(RVA = "0x7FA7D0", Offset = "0x7FA7D0", VA = "0x7FA7D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public AnimationCurve ColorBlendCurve
		{
			[Token(Token = "0x60009F9")]
			[Address(RVA = "0x7FA7D8", Offset = "0x7FA7D8", VA = "0x7FA7D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009FA")]
			[Address(RVA = "0x7FA8BC", Offset = "0x7FA8BC", VA = "0x7FA8BC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		public string ColorByHeightPropertyName
		{
			[Token(Token = "0x60009FB")]
			[Address(RVA = "0x7FA8C4", Offset = "0x7FA8C4", VA = "0x7FA8C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009FC")]
			[Address(RVA = "0x7FA8CC", Offset = "0x7FA8CC", VA = "0x7FA8CC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public string ColorByNormalPropertyName
		{
			[Token(Token = "0x60009FD")]
			[Address(RVA = "0x7FA8D4", Offset = "0x7FA8D4", VA = "0x7FA8D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009FE")]
			[Address(RVA = "0x7FA8DC", Offset = "0x7FA8DC", VA = "0x7FA8DC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public string ColorBlendPropertyName
		{
			[Token(Token = "0x60009FF")]
			[Address(RVA = "0x7FA8E4", Offset = "0x7FA8E4", VA = "0x7FA8E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A00")]
			[Address(RVA = "0x7FA8EC", Offset = "0x7FA8EC", VA = "0x7FA8EC")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public string DimensionPropertyName
		{
			[Token(Token = "0x6000A01")]
			[Address(RVA = "0x7FA8F4", Offset = "0x7FA8F4", VA = "0x7FA8F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0x7FA8FC", Offset = "0x7FA8FC", VA = "0x7FA8FC")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public Texture2D ColorByHeightMap
		{
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0x7FA904", Offset = "0x7FA904", VA = "0x7FA904")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		public Texture2D ColorByNormalMap
		{
			[Token(Token = "0x6000A04")]
			[Address(RVA = "0x7FAF48", Offset = "0x7FAF48", VA = "0x7FAF48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		public Texture2D ColorBlendMap
		{
			[Token(Token = "0x6000A05")]
			[Address(RVA = "0x7FAFCC", Offset = "0x7FAFCC", VA = "0x7FAFCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		public GSplatPrototypeGroup Splats
		{
			[Token(Token = "0x6000A06")]
			[Address(RVA = "0x7FB050", Offset = "0x7FB050", VA = "0x7FB050")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A07")]
			[Address(RVA = "0x7FB058", Offset = "0x7FB058", VA = "0x7FB058")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public int SplatControlResolution
		{
			[Token(Token = "0x6000A08")]
			[Address(RVA = "0x7FB060", Offset = "0x7FB060", VA = "0x7FB060")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A09")]
			[Address(RVA = "0x7FB068", Offset = "0x7FB068", VA = "0x7FB068")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public Texture2D[] SplatControls
		{
			[Token(Token = "0x6000A0A")]
			[Address(RVA = "0x7FB3DC", Offset = "0x7FB3DC", VA = "0x7FB3DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000101")]
		public string SplatControlMapPropertyName
		{
			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0x7FB698", Offset = "0x7FB698", VA = "0x7FB698")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A0C")]
			[Address(RVA = "0x7FB6A0", Offset = "0x7FB6A0", VA = "0x7FB6A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public string SplatMapPropertyName
		{
			[Token(Token = "0x6000A0D")]
			[Address(RVA = "0x7FB6A8", Offset = "0x7FB6A8", VA = "0x7FB6A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A0E")]
			[Address(RVA = "0x7FB6B0", Offset = "0x7FB6B0", VA = "0x7FB6B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public string SplatNormalPropertyName
		{
			[Token(Token = "0x6000A0F")]
			[Address(RVA = "0x7FB6B8", Offset = "0x7FB6B8", VA = "0x7FB6B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A10")]
			[Address(RVA = "0x7FB6C0", Offset = "0x7FB6C0", VA = "0x7FB6C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public string SplatMetallicPropertyName
		{
			[Token(Token = "0x6000A11")]
			[Address(RVA = "0x7FB6C8", Offset = "0x7FB6C8", VA = "0x7FB6C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A12")]
			[Address(RVA = "0x7FB6D0", Offset = "0x7FB6D0", VA = "0x7FB6D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public string SplatSmoothnessPropertyName
		{
			[Token(Token = "0x6000A13")]
			[Address(RVA = "0x7FB6D8", Offset = "0x7FB6D8", VA = "0x7FB6D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A14")]
			[Address(RVA = "0x7FB6E0", Offset = "0x7FB6E0", VA = "0x7FB6E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public int SplatControlMapCount
		{
			[Token(Token = "0x6000A15")]
			[Address(RVA = "0x7FB5EC", Offset = "0x7FB5EC", VA = "0x7FB5EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x7FB75C", Offset = "0x7FB75C", VA = "0x7FB75C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x7FBC40", Offset = "0x7FBC40", VA = "0x7FBC40")]
		public void ResetFull()
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x7F9CEC", Offset = "0x7F9CEC", VA = "0x7F9CEC")]
		private void ResizeAlbedoMap()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x7FBD3C", Offset = "0x7FBD3C", VA = "0x7FBD3C")]
		public void UpdateMaterials()
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x7FA148", Offset = "0x7FA148", VA = "0x7FA148")]
		private void ResizeMetallicMap()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x7FA988", Offset = "0x7FA988", VA = "0x7FA988")]
		public void UpdateLookupTextures()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x7FC45C", Offset = "0x7FC45C", VA = "0x7FC45C")]
		public Texture2D GetSplatControl(int index)
		{
			return null;
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x7FB114", Offset = "0x7FB114", VA = "0x7FB114")]
		private void ResizeSplatControlMaps()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x7FC6FC", Offset = "0x7FC6FC", VA = "0x7FC6FC")]
		public void ConvertSplatsToAlbedo()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x7FCBD8", Offset = "0x7FCBD8", VA = "0x7FCBD8")]
		public void CopyTo(GShading des)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x7FCD18", Offset = "0x7FCD18", VA = "0x7FCD18")]
		public bool IsMaterialUseNormalMap()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x7FCDD0", Offset = "0x7FCDD0", VA = "0x7FCDD0")]
		public GShading()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016E")]
	public struct GShadingDefault
	{
		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GShadingSystem shadingSystem;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private Material customMaterial;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int albedoMapResolution;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int metallicMapResolution;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string albedoMapPropertyName;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string metallicMapPropertyName;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Gradient colorByHeight;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Gradient colorByNormal;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve colorBlendCurve;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string colorByHeightPropertyName;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string colorByNormalPropertyName;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string colorBlendPropertyName;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string dimensionPropertyName;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private int splatControlResolution;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string splatControlMapPropertyName;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string splatMapPropertyName;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string splatNormalPropertyName;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string splatMetallicPropertyName;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private string splatSmoothnessPropertyName;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GSplatPrototypeGroup splats;

		[Token(Token = "0x17000107")]
		public GShadingSystem ShadingSystem
		{
			[Token(Token = "0x6000A22")]
			[Address(RVA = "0x5E7B40", Offset = "0x5E7B40", VA = "0x5E7B40")]
			get
			{
				return default(GShadingSystem);
			}
			[Token(Token = "0x6000A23")]
			[Address(RVA = "0x5E7B48", Offset = "0x5E7B48", VA = "0x5E7B48")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public Material CustomMaterial
		{
			[Token(Token = "0x6000A24")]
			[Address(RVA = "0x5E7B50", Offset = "0x5E7B50", VA = "0x5E7B50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A25")]
			[Address(RVA = "0x5E7B58", Offset = "0x5E7B58", VA = "0x5E7B58")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public int AlbedoMapResolution
		{
			[Token(Token = "0x6000A26")]
			[Address(RVA = "0x5E7B60", Offset = "0x5E7B60", VA = "0x5E7B60")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A27")]
			[Address(RVA = "0x5E7B68", Offset = "0x5E7B68", VA = "0x5E7B68")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public int MetallicMapResolution
		{
			[Token(Token = "0x6000A28")]
			[Address(RVA = "0x5E7B70", Offset = "0x5E7B70", VA = "0x5E7B70")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A29")]
			[Address(RVA = "0x5E7B78", Offset = "0x5E7B78", VA = "0x5E7B78")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public string AlbedoMapPropertyName
		{
			[Token(Token = "0x6000A2A")]
			[Address(RVA = "0x5E7B80", Offset = "0x5E7B80", VA = "0x5E7B80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0x5E7B88", Offset = "0x5E7B88", VA = "0x5E7B88")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public string MetallicMapPropertyName
		{
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0x5E7B90", Offset = "0x5E7B90", VA = "0x5E7B90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0x5E7B98", Offset = "0x5E7B98", VA = "0x5E7B98")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public Gradient ColorByHeight
		{
			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0x5E7BA0", Offset = "0x5E7BA0", VA = "0x5E7BA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0x5E7BA8", Offset = "0x5E7BA8", VA = "0x5E7BA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public Gradient ColorByNormal
		{
			[Token(Token = "0x6000A30")]
			[Address(RVA = "0x5E7BB0", Offset = "0x5E7BB0", VA = "0x5E7BB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x5E7BB8", Offset = "0x5E7BB8", VA = "0x5E7BB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public AnimationCurve ColorBlendCurve
		{
			[Token(Token = "0x6000A32")]
			[Address(RVA = "0x5E7BC0", Offset = "0x5E7BC0", VA = "0x5E7BC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A33")]
			[Address(RVA = "0x5E7BFC", Offset = "0x5E7BFC", VA = "0x5E7BFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public string ColorByHeightPropertyName
		{
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0x5E7C04", Offset = "0x5E7C04", VA = "0x5E7C04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A35")]
			[Address(RVA = "0x5E7C0C", Offset = "0x5E7C0C", VA = "0x5E7C0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public string ColorByNormalPropertyName
		{
			[Token(Token = "0x6000A36")]
			[Address(RVA = "0x5E7C14", Offset = "0x5E7C14", VA = "0x5E7C14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A37")]
			[Address(RVA = "0x5E7C1C", Offset = "0x5E7C1C", VA = "0x5E7C1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public string ColorBlendPropertyName
		{
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0x5E7C24", Offset = "0x5E7C24", VA = "0x5E7C24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A39")]
			[Address(RVA = "0x5E7C2C", Offset = "0x5E7C2C", VA = "0x5E7C2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public string DimensionPropertyName
		{
			[Token(Token = "0x6000A3A")]
			[Address(RVA = "0x5E7C34", Offset = "0x5E7C34", VA = "0x5E7C34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A3B")]
			[Address(RVA = "0x5E7C3C", Offset = "0x5E7C3C", VA = "0x5E7C3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public int SplatControlResolution
		{
			[Token(Token = "0x6000A3C")]
			[Address(RVA = "0x5E7C44", Offset = "0x5E7C44", VA = "0x5E7C44")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0x5E7C4C", Offset = "0x5E7C4C", VA = "0x5E7C4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public string SplatControlMapPropertyName
		{
			[Token(Token = "0x6000A3E")]
			[Address(RVA = "0x5E7C54", Offset = "0x5E7C54", VA = "0x5E7C54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A3F")]
			[Address(RVA = "0x5E7C5C", Offset = "0x5E7C5C", VA = "0x5E7C5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public string SplatMapPropertyName
		{
			[Token(Token = "0x6000A40")]
			[Address(RVA = "0x5E7C64", Offset = "0x5E7C64", VA = "0x5E7C64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A41")]
			[Address(RVA = "0x5E7C6C", Offset = "0x5E7C6C", VA = "0x5E7C6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public string SplatNormalPropertyName
		{
			[Token(Token = "0x6000A42")]
			[Address(RVA = "0x5E7C74", Offset = "0x5E7C74", VA = "0x5E7C74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A43")]
			[Address(RVA = "0x5E7C7C", Offset = "0x5E7C7C", VA = "0x5E7C7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public string SplatMetallicPropertyName
		{
			[Token(Token = "0x6000A44")]
			[Address(RVA = "0x5E7C84", Offset = "0x5E7C84", VA = "0x5E7C84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A45")]
			[Address(RVA = "0x5E7C8C", Offset = "0x5E7C8C", VA = "0x5E7C8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public string SplatSmoothnessPropertyName
		{
			[Token(Token = "0x6000A46")]
			[Address(RVA = "0x5E7C94", Offset = "0x5E7C94", VA = "0x5E7C94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A47")]
			[Address(RVA = "0x5E7C9C", Offset = "0x5E7C9C", VA = "0x5E7C9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public GSplatPrototypeGroup Splats
		{
			[Token(Token = "0x6000A48")]
			[Address(RVA = "0x5E7CA4", Offset = "0x5E7CA4", VA = "0x5E7CA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A49")]
			[Address(RVA = "0x5E7CAC", Offset = "0x5E7CAC", VA = "0x5E7CAC")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200016F")]
	public enum GShadingSystem
	{
		[Token(Token = "0x4000CFC")]
		Polaris
	}
	[Serializable]
	[Token(Token = "0x2000170")]
	public class GSplatPrototype
	{
		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Texture2D texture;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Texture2D normalMap;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector2 tileSize;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector2 tileOffset;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float metallic;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float smoothness;

		[Token(Token = "0x1700011B")]
		public Texture2D Texture
		{
			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0x7FD97C", Offset = "0x7FD97C", VA = "0x7FD97C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A4B")]
			[Address(RVA = "0x7FD984", Offset = "0x7FD984", VA = "0x7FD984")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public Texture2D NormalMap
		{
			[Token(Token = "0x6000A4C")]
			[Address(RVA = "0x7FD98C", Offset = "0x7FD98C", VA = "0x7FD98C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0x7FD994", Offset = "0x7FD994", VA = "0x7FD994")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public Vector2 TileSize
		{
			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0x7FD99C", Offset = "0x7FD99C", VA = "0x7FD99C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0x7FD9A4", Offset = "0x7FD9A4", VA = "0x7FD9A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public Vector2 TileOffset
		{
			[Token(Token = "0x6000A50")]
			[Address(RVA = "0x7FD9AC", Offset = "0x7FD9AC", VA = "0x7FD9AC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000A51")]
			[Address(RVA = "0x7FD9B4", Offset = "0x7FD9B4", VA = "0x7FD9B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public float Metallic
		{
			[Token(Token = "0x6000A52")]
			[Address(RVA = "0x7FD9BC", Offset = "0x7FD9BC", VA = "0x7FD9BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A53")]
			[Address(RVA = "0x7FD9C4", Offset = "0x7FD9C4", VA = "0x7FD9C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public float Smoothness
		{
			[Token(Token = "0x6000A54")]
			[Address(RVA = "0x7FDA40", Offset = "0x7FDA40", VA = "0x7FDA40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A55")]
			[Address(RVA = "0x7FDA48", Offset = "0x7FDA48", VA = "0x7FDA48")]
			set
			{
			}
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x7FDAC4", Offset = "0x7FDAC4", VA = "0x7FDAC4")]
		public bool Equals(SplatPrototype layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x7FDC98", Offset = "0x7FDC98", VA = "0x7FDC98")]
		public void CopyTo(SplatPrototype layer)
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x7FDD1C", Offset = "0x7FDD1C", VA = "0x7FDD1C")]
		public static explicit operator GSplatPrototype(SplatPrototype layer)
		{
			return null;
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x7FDE6C", Offset = "0x7FDE6C", VA = "0x7FDE6C")]
		public static explicit operator SplatPrototype(GSplatPrototype proto)
		{
			return null;
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x7FDF38", Offset = "0x7FDF38", VA = "0x7FDF38")]
		public bool Equals(TerrainLayer layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x7FE10C", Offset = "0x7FE10C", VA = "0x7FE10C")]
		public void CopyTo(TerrainLayer layer)
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x7FE190", Offset = "0x7FE190", VA = "0x7FE190")]
		public static explicit operator GSplatPrototype(TerrainLayer layer)
		{
			return null;
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x7FE260", Offset = "0x7FE260", VA = "0x7FE260")]
		public static explicit operator TerrainLayer(GSplatPrototype proto)
		{
			return null;
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x7FDDEC", Offset = "0x7FDDEC", VA = "0x7FDDEC")]
		public GSplatPrototype()
		{
		}
	}
	[Token(Token = "0x2000171")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x56E160", Offset = "0x56E160")]
	public class GSplatPrototypeGroup : ScriptableObject
	{
		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GSplatPrototype> prototypes;

		[Token(Token = "0x17000121")]
		public List<GSplatPrototype> Prototypes
		{
			[Token(Token = "0x6000A5F")]
			[Address(RVA = "0x7FB6E8", Offset = "0x7FB6E8", VA = "0x7FB6E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A60")]
			[Address(RVA = "0x7FE32C", Offset = "0x7FE32C", VA = "0x7FE32C")]
			set
			{
			}
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x7FE334", Offset = "0x7FE334", VA = "0x7FE334")]
		public bool Equals(SplatPrototype[] layers)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x7FE430", Offset = "0x7FE430", VA = "0x7FE430")]
		public static GSplatPrototypeGroup Create(SplatPrototype[] layers)
		{
			return null;
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x7FE510", Offset = "0x7FE510", VA = "0x7FE510")]
		public bool Equals(TerrainLayer[] layers)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x7FE60C", Offset = "0x7FE60C", VA = "0x7FE60C")]
		public static GSplatPrototypeGroup Create(TerrainLayer[] layers)
		{
			return null;
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x7FE6EC", Offset = "0x7FE6EC", VA = "0x7FE6EC")]
		public GSplatPrototypeGroup()
		{
		}
	}
	[Token(Token = "0x2000172")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x56E1AC", Offset = "0x56E1AC")]
	public class GTerrainData : ScriptableObject
	{
		[Token(Token = "0x200033F")]
		public delegate void GlobalDirtyHandler(GTerrainData data, DirtyFlags flag);

		[Token(Token = "0x2000340")]
		public delegate void DirtyHandler(DirtyFlags flag);

		[Token(Token = "0x2000341")]
		[Flags]
		public enum DirtyFlags : byte
		{
			[Token(Token = "0x4001A2E")]
			None = 0,
			[Token(Token = "0x4001A2F")]
			Geometry = 1,
			[Token(Token = "0x4001A30")]
			GeometryAsync = 2,
			[Token(Token = "0x4001A31")]
			Rendering = 4,
			[Token(Token = "0x4001A32")]
			Shading = 8,
			[Token(Token = "0x4001A33")]
			Foliage = 0x10,
			[Token(Token = "0x4001A34")]
			All = byte.MaxValue
		}

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string id;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GGeometry geometry;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GShading shading;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GRendering rendering;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GFoliage foliage;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x572708", Offset = "0x572708")]
		private GTerrainGeneratedData geometryData;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GTerrainGeneratedData foliageData;

		[Token(Token = "0x17000122")]
		public string Id
		{
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0x88B0C4", Offset = "0x88B0C4", VA = "0x88B0C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A6B")]
			[Address(RVA = "0x88B0CC", Offset = "0x88B0CC", VA = "0x88B0CC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000123")]
		public GGeometry Geometry
		{
			[Token(Token = "0x6000A6C")]
			[Address(RVA = "0x88A74C", Offset = "0x88A74C", VA = "0x88A74C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		public GShading Shading
		{
			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0x88B0D4", Offset = "0x88B0D4", VA = "0x88B0D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		public GRendering Rendering
		{
			[Token(Token = "0x6000A6E")]
			[Address(RVA = "0x88B1C0", Offset = "0x88B1C0", VA = "0x88B1C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		public GFoliage Foliage
		{
			[Token(Token = "0x6000A6F")]
			[Address(RVA = "0x88B2AC", Offset = "0x88B2AC", VA = "0x88B2AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		public GTerrainGeneratedData GeometryData
		{
			[Token(Token = "0x6000A70")]
			[Address(RVA = "0x88B398", Offset = "0x88B398", VA = "0x88B398")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		public GTerrainGeneratedData FoliageData
		{
			[Token(Token = "0x6000A71")]
			[Address(RVA = "0x88B468", Offset = "0x88B468", VA = "0x88B468")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000004")]
		public static event GlobalDirtyHandler GlobalDirty
		{
			[Token(Token = "0x6000A66")]
			[Address(RVA = "0x88AE14", Offset = "0x88AE14", VA = "0x88AE14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BFA4", Offset = "0x57BFA4")]
			add
			{
			}
			[Token(Token = "0x6000A67")]
			[Address(RVA = "0x88AEC8", Offset = "0x88AEC8", VA = "0x88AEC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BFB4", Offset = "0x57BFB4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000005")]
		public event DirtyHandler Dirty
		{
			[Token(Token = "0x6000A68")]
			[Address(RVA = "0x88AF7C", Offset = "0x88AF7C", VA = "0x88AF7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BFC4", Offset = "0x57BFC4")]
			add
			{
			}
			[Token(Token = "0x6000A69")]
			[Address(RVA = "0x88B020", Offset = "0x88B020", VA = "0x88B020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BFD4", Offset = "0x57BFD4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x88B538", Offset = "0x88B538", VA = "0x88B538")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x88B5A4", Offset = "0x88B5A4", VA = "0x88B5A4")]
		public void SetDirty(DirtyFlags flag)
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x88BCE0", Offset = "0x88BCE0", VA = "0x88BCE0")]
		public void CopyTo(GTerrainData des)
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x88BDA8", Offset = "0x88BDA8", VA = "0x88BDA8")]
		public GTerrainData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000173")]
	public struct GTerrainDataDefault
	{
		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GGeometryDefault geometry;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GShadingDefault shading;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private GRenderingDefault rendering;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GFoliageDefault foliage;

		[Token(Token = "0x17000129")]
		public GGeometryDefault Geometry
		{
			[Token(Token = "0x6000A76")]
			[Address(RVA = "0x5E87BC", Offset = "0x5E87BC", VA = "0x5E87BC")]
			get
			{
				return default(GGeometryDefault);
			}
			[Token(Token = "0x6000A77")]
			[Address(RVA = "0x5E87D8", Offset = "0x5E87D8", VA = "0x5E87D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public GShadingDefault Shading
		{
			[Token(Token = "0x6000A78")]
			[Address(RVA = "0x5E87F4", Offset = "0x5E87F4", VA = "0x5E87F4")]
			get
			{
				return default(GShadingDefault);
			}
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0x5E8804", Offset = "0x5E8804", VA = "0x5E8804")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public GRenderingDefault Rendering
		{
			[Token(Token = "0x6000A7A")]
			[Address(RVA = "0x5E8820", Offset = "0x5E8820", VA = "0x5E8820")]
			get
			{
				return default(GRenderingDefault);
			}
			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0x5E882C", Offset = "0x5E882C", VA = "0x5E882C")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public GFoliageDefault Foliage
		{
			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0x5E8834", Offset = "0x5E8834", VA = "0x5E8834")]
			get
			{
				return default(GFoliageDefault);
			}
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0x5E8844", Offset = "0x5E8844", VA = "0x5E8844")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000174")]
	[PreferBinarySerialization]
	public class GTerrainGeneratedData : ScriptableObject, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private GTerrainData terrainData;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, Mesh> generatedMeshes;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Vector3Int, Mesh> meshes;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private List<string> generatedMeshesKeys;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private List<Mesh> generatedMeshesValues;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<Vector3Int> meshesKeys;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<Mesh> meshesValues;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float serializeVersion;

		[Token(Token = "0x4000D19")]
		private const float SERIALIZE_VERSION_KEY_INT3 = 253f;

		[Token(Token = "0x1700012D")]
		public GTerrainData TerrainData
		{
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0x88BFB4", Offset = "0x88BFB4", VA = "0x88BFB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0x88BFBC", Offset = "0x88BFBC", VA = "0x88BFBC")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		private Dictionary<string, Mesh> GeneratedMeshes
		{
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0x88BFC4", Offset = "0x88BFC4", VA = "0x88BFC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		private Dictionary<Vector3Int, Mesh> Meshes
		{
			[Token(Token = "0x6000A81")]
			[Address(RVA = "0x88C038", Offset = "0x88C038", VA = "0x88C038")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x88C0AC", Offset = "0x88C0AC", VA = "0x88C0AC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x88C1E8", Offset = "0x88C1E8", VA = "0x88C1E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x88C540", Offset = "0x88C540", VA = "0x88C540", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x88C938", Offset = "0x88C938", VA = "0x88C938", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x88CB60", Offset = "0x88CB60", VA = "0x88CB60")]
		public void SetMesh(Vector3Int key, Mesh mesh)
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x88CD60", Offset = "0x88CD60", VA = "0x88CD60")]
		public Mesh GetMesh(Vector3Int key)
		{
			return null;
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x88CE0C", Offset = "0x88CE0C", VA = "0x88CE0C")]
		public void DeleteMesh(Vector3Int key)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x88CF70", Offset = "0x88CF70", VA = "0x88CF70")]
		public List<Vector3Int> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x88C204", Offset = "0x88C204", VA = "0x88C204")]
		private void UpgradeSerializeVersion()
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x88D004", Offset = "0x88D004", VA = "0x88D004")]
		public GTerrainGeneratedData()
		{
		}
	}
	[Token(Token = "0x2000175")]
	public enum GTerrainResourceFlag
	{
		[Token(Token = "0x4000D1B")]
		HeightMap,
		[Token(Token = "0x4000D1C")]
		AlbedoMap,
		[Token(Token = "0x4000D1D")]
		MetallicMap,
		[Token(Token = "0x4000D1E")]
		SplatControlMaps,
		[Token(Token = "0x4000D1F")]
		TreeInstances,
		[Token(Token = "0x4000D20")]
		GrassInstances
	}
	[Serializable]
	[Token(Token = "0x2000176")]
	public struct GTreeColliderInfo
	{
		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Vector3 center;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private float radius;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float height;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int direction;

		[Token(Token = "0x17000130")]
		public Vector3 Center
		{
			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0x5E886C", Offset = "0x5E886C", VA = "0x5E886C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0x5E8878", Offset = "0x5E8878", VA = "0x5E8878")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public float Radius
		{
			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0x5E8884", Offset = "0x5E8884", VA = "0x5E8884")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A8F")]
			[Address(RVA = "0x5E888C", Offset = "0x5E888C", VA = "0x5E888C")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public float Height
		{
			[Token(Token = "0x6000A90")]
			[Address(RVA = "0x5E8894", Offset = "0x5E8894", VA = "0x5E8894")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A91")]
			[Address(RVA = "0x5E889C", Offset = "0x5E889C", VA = "0x5E889C")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public int Direction
		{
			[Token(Token = "0x6000A92")]
			[Address(RVA = "0x5E88A4", Offset = "0x5E88A4", VA = "0x5E88A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A93")]
			[Address(RVA = "0x5E88AC", Offset = "0x5E88AC", VA = "0x5E88AC")]
			set
			{
			}
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x5E88B4", Offset = "0x5E88B4", VA = "0x5E88B4")]
		public GTreeColliderInfo(CapsuleCollider col)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000177")]
	public struct GTreeInstance
	{
		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int prototypeIndex;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private Vector3 position;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Quaternion rotation;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 scale;

		[Token(Token = "0x17000134")]
		public int PrototypeIndex
		{
			[Token(Token = "0x6000A95")]
			[Address(RVA = "0x5E88BC", Offset = "0x5E88BC", VA = "0x5E88BC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0x5E88C4", Offset = "0x5E88C4", VA = "0x5E88C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public Vector3 Position
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0x5E88CC", Offset = "0x5E88CC", VA = "0x5E88CC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0x5E88D8", Offset = "0x5E88D8", VA = "0x5E88D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0x5E88E4", Offset = "0x5E88E4", VA = "0x5E88E4")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000A9A")]
			[Address(RVA = "0x5E88F0", Offset = "0x5E88F0", VA = "0x5E88F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public Vector3 Scale
		{
			[Token(Token = "0x6000A9B")]
			[Address(RVA = "0x5E88FC", Offset = "0x5E88FC", VA = "0x5E88FC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0x5E8908", Offset = "0x5E8908", VA = "0x5E8908")]
			set
			{
			}
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x88EB14", Offset = "0x88EB14", VA = "0x88EB14")]
		public static GTreeInstance Create(int prototypeIndex)
		{
			return default(GTreeInstance);
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x88EC0C", Offset = "0x88EC0C", VA = "0x88EC0C")]
		public static explicit operator GTreeInstance(TreeInstance t)
		{
			return default(GTreeInstance);
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x88ED20", Offset = "0x88ED20", VA = "0x88ED20")]
		public static explicit operator TreeInstance(GTreeInstance t)
		{
			return default(TreeInstance);
		}
	}
	[Serializable]
	[Token(Token = "0x2000178")]
	public class GTreePrototype
	{
		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject prefab;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Mesh sharedMesh;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private Material[] sharedMaterials;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private ShadowCastingMode shadowCastingMode;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		[SerializeField]
		private bool receiveShadow;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int layer;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool keepPrefabLayer;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BillboardAsset billboard;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool hasCollider;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private GTreeColliderInfo colliderInfo;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float pivotOffset;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Quaternion baseRotation;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Vector3 baseScale;

		[Token(Token = "0x17000138")]
		public GameObject Prefab
		{
			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0x88ED84", Offset = "0x88ED84", VA = "0x88ED84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0x88ED8C", Offset = "0x88ED8C", VA = "0x88ED8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public Mesh SharedMesh
		{
			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0x88F044", Offset = "0x88F044", VA = "0x88F044")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0x88F04C", Offset = "0x88F04C", VA = "0x88F04C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public Material[] SharedMaterials
		{
			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0x88F054", Offset = "0x88F054", VA = "0x88F054")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0x88F05C", Offset = "0x88F05C", VA = "0x88F05C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public ShadowCastingMode ShadowCastingMode
		{
			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0x88F064", Offset = "0x88F064", VA = "0x88F064")]
			get
			{
				return default(ShadowCastingMode);
			}
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x88F06C", Offset = "0x88F06C", VA = "0x88F06C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public bool ReceiveShadow
		{
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0x88F074", Offset = "0x88F074", VA = "0x88F074")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0x88F07C", Offset = "0x88F07C", VA = "0x88F07C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public int Layer
		{
			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0x88F088", Offset = "0x88F088", VA = "0x88F088")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0x88F090", Offset = "0x88F090", VA = "0x88F090")]
			set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public bool KeepPrefabLayer
		{
			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0x88F098", Offset = "0x88F098", VA = "0x88F098")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0x88F0A0", Offset = "0x88F0A0", VA = "0x88F0A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public BillboardAsset Billboard
		{
			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0x88F0AC", Offset = "0x88F0AC", VA = "0x88F0AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0x88F0B4", Offset = "0x88F0B4", VA = "0x88F0B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public bool HasCollider
		{
			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0x88F0BC", Offset = "0x88F0BC", VA = "0x88F0BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0x88F0C4", Offset = "0x88F0C4", VA = "0x88F0C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public GTreeColliderInfo ColliderInfo
		{
			[Token(Token = "0x6000AB2")]
			[Address(RVA = "0x88F0D0", Offset = "0x88F0D0", VA = "0x88F0D0")]
			get
			{
				return default(GTreeColliderInfo);
			}
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0x88F0E4", Offset = "0x88F0E4", VA = "0x88F0E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public float PivotOffset
		{
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0x88F0F8", Offset = "0x88F0F8", VA = "0x88F0F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0x88F100", Offset = "0x88F100", VA = "0x88F100")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public Quaternion BaseRotation
		{
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0x88F184", Offset = "0x88F184", VA = "0x88F184")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000AB7")]
			[Address(RVA = "0x88F224", Offset = "0x88F224", VA = "0x88F224")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public Vector3 BaseScale
		{
			[Token(Token = "0x6000AB8")]
			[Address(RVA = "0x88F2DC", Offset = "0x88F2DC", VA = "0x88F2DC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0x88F2E8", Offset = "0x88F2E8", VA = "0x88F2E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public bool IsValid
		{
			[Token(Token = "0x6000ABA")]
			[Address(RVA = "0x88F2F4", Offset = "0x88F2F4", VA = "0x88F2F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x88F3B8", Offset = "0x88F3B8", VA = "0x88F3B8")]
		public static GTreePrototype Create(GameObject g)
		{
			return null;
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x88ED94", Offset = "0x88ED94", VA = "0x88ED94")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x88F53C", Offset = "0x88F53C", VA = "0x88F53C")]
		public static explicit operator GTreePrototype(TreePrototype p)
		{
			return null;
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x88F55C", Offset = "0x88F55C", VA = "0x88F55C")]
		public static explicit operator TreePrototype(GTreePrototype p)
		{
			return null;
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x88F5D8", Offset = "0x88F5D8", VA = "0x88F5D8")]
		public bool Equals(TreePrototype treePrototype)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x88F494", Offset = "0x88F494", VA = "0x88F494")]
		public GTreePrototype()
		{
		}
	}
	[Token(Token = "0x2000179")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x56E208", Offset = "0x56E208")]
	public class GTreePrototypeGroup : ScriptableObject
	{
		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GTreePrototype> prototypes;

		[Token(Token = "0x17000146")]
		public List<GTreePrototype> Prototypes
		{
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0x88DCFC", Offset = "0x88DCFC", VA = "0x88DCFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0x88F670", Offset = "0x88F670", VA = "0x88F670")]
			set
			{
			}
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x88F678", Offset = "0x88F678", VA = "0x88F678")]
		public bool Equals(TreePrototype[] treePrototypes)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x88F780", Offset = "0x88F780", VA = "0x88F780")]
		public static GTreePrototypeGroup Create(TreePrototype[] treePrototypes)
		{
			return null;
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x88F860", Offset = "0x88F860", VA = "0x88F860")]
		public GTreePrototypeGroup()
		{
		}
	}
	[Token(Token = "0x200017A")]
	public static class GAnalytics
	{
		[Token(Token = "0x4000D37")]
		public const string OS_WINDOWS = "http://bit.ly/34fMuhb";

		[Token(Token = "0x4000D38")]
		public const string OS_MAC = "http://bit.ly/31XORUx";

		[Token(Token = "0x4000D39")]
		public const string OS_LINUX = "http://bit.ly/34cUYWg";

		[Token(Token = "0x4000D3A")]
		public const string PLATFORM_PC = "http://bit.ly/333nKZq";

		[Token(Token = "0x4000D3B")]
		public const string PLATFORM_MOBILE = "http://bit.ly/349N0gA";

		[Token(Token = "0x4000D3C")]
		public const string PLATFORM_CONSOLE = "http://bit.ly/2NrXvVN";

		[Token(Token = "0x4000D3D")]
		public const string PLATFORM_WEB = "http://bit.ly/36dOsQZ";

		[Token(Token = "0x4000D3E")]
		public const string PLATFORM_OTHER = "http://bit.ly/2MZnuFm";

		[Token(Token = "0x4000D3F")]
		public const string XR_PROJECT = "http://bit.ly/2qYUhlr";

		[Token(Token = "0x4000D40")]
		public const string COLOR_SPACE_GAMMA = "http://bit.ly/330OHwG";

		[Token(Token = "0x4000D41")]
		public const string COLOR_SPACE_LINEAR = "http://bit.ly/349O7wM";

		[Token(Token = "0x4000D42")]
		public const string RENDER_PIPELINE_BUILTIN = "http://bit.ly/2N091Jg";

		[Token(Token = "0x4000D43")]
		public const string RENDER_PIPELINE_LIGHTWEIGHT = "http://bit.ly/36hxUro";

		[Token(Token = "0x4000D44")]
		public const string RENDER_PIPELINE_UNIVERSAL = "http://bit.ly/34fbaX7";

		[Token(Token = "0x4000D45")]
		public const string RENDER_PIPELINE_OTHER = "http://bit.ly/2piMkaf";

		[Token(Token = "0x4000D46")]
		public const string INTEGRATION_AMPLIFY_SHADER_EDITOR = "http://bit.ly/2JBwfDw";

		[Token(Token = "0x4000D47")]
		public const string INTEGRATION_POSEIDON = "http://bit.ly/2WrPEMc";

		[Token(Token = "0x4000D48")]
		public const string INTEGRATION_CSHARP_WIZARD = "http://bit.ly/2MZsqdh";

		[Token(Token = "0x4000D49")]
		public const string INTEGRATION_MESH_TO_FILE = "http://bit.ly/2Nr35b1";

		[Token(Token = "0x4000D4A")]
		public const string MULTI_TERRAIN = "http://bit.ly/2q2M2Eh";

		[Token(Token = "0x4000D4B")]
		public const string WIND_ZONE = "http://bit.ly/2JCtjWY";

		[Token(Token = "0x4000D4C")]
		public const string CONVERT_FROM_UNITY_TERRAIN = "http://bit.ly/2WrphpN";

		[Token(Token = "0x4000D4D")]
		public const string WIZARD_CREATE_TERRAIN = "http://bit.ly/2PurvTT";

		[Token(Token = "0x4000D4E")]
		public const string WIZARD_SET_SHADER = "http://bit.ly/326NG5j";

		[Token(Token = "0x4000D4F")]
		public const string SHADING_COLOR_MAP = "http://bit.ly/323pzEg";

		[Token(Token = "0x4000D50")]
		public const string SHADING_GRADIENT_LOOKUP = "http://bit.ly/2PB1WR0";

		[Token(Token = "0x4000D51")]
		public const string SHADING_SPLAT = "http://bit.ly/2C0jmi1";

		[Token(Token = "0x4000D52")]
		public const string SHADING_VERTEX_COLOR = "http://bit.ly/2q6Ty13";

		[Token(Token = "0x4000D53")]
		public const string ENABLE_INSTANCING = "http://bit.ly/2PAjM6C";

		[Token(Token = "0x4000D54")]
		public const string ENABLE_INTERACTIVE_GRASS = "http://bit.ly/2BWRMSD";

		[Token(Token = "0x4000D55")]
		public const string IMPORT_UNITY_TERRAIN_DATA = "http://bit.ly/2JApdPl";

		[Token(Token = "0x4000D56")]
		public const string IMPORT_POLARIS_V1_DATA = "http://bit.ly/34bKdDI";

		[Token(Token = "0x4000D57")]
		public const string IMPORT_RAW = "http://bit.ly/2qZK5sO";

		[Token(Token = "0x4000D58")]
		public const string IMPORT_TEXTURES = "http://bit.ly/2NqHYFY";

		[Token(Token = "0x4000D59")]
		public const string EXPORT_UNITY_TERRAIN_DATA = "http://bit.ly/2N34cyT";

		[Token(Token = "0x4000D5A")]
		public const string EXPORT_RAW = "http://bit.ly/2Ws3XAg";

		[Token(Token = "0x4000D5B")]
		public const string EXPORT_TEXTURES = "http://bit.ly/335KGak";

		[Token(Token = "0x4000D5C")]
		public const string GROUP_OVERRIDE_GEOMETRY = "http://bit.ly/2N4ho6G";

		[Token(Token = "0x4000D5D")]
		public const string GROUP_OVERRIDE_SHADING = "http://bit.ly/31VkuOs";

		[Token(Token = "0x4000D5E")]
		public const string GROUP_OVERRIDE_RENDERING = "http://bit.ly/2NpGf3C";

		[Token(Token = "0x4000D5F")]
		public const string GROUP_OVERRIDE_FOLIAGE = "http://bit.ly/2qZMhR4";

		[Token(Token = "0x4000D60")]
		public const string GROUP_REARRANGE = "http://bit.ly/2JDdW0t";

		[Token(Token = "0x4000D61")]
		public const string GROUP_MATCH_EDGE = "http://bit.ly/2rDM46g";

		[Token(Token = "0x4000D62")]
		public const string TPAINTER_ELEVATION = "http://bit.ly/2pg6dPe";

		[Token(Token = "0x4000D63")]
		public const string TPAINTER_HEIGHT_SAMPLING = "http://bit.ly/36ihqiH";

		[Token(Token = "0x4000D64")]
		public const string TPAINTER_TERRACE = "http://bit.ly/32XeeqE";

		[Token(Token = "0x4000D65")]
		public const string TPAINTER_REMAP = "http://bit.ly/34fXZ8t";

		[Token(Token = "0x4000D66")]
		public const string TPAINTER_NOISE = "http://bit.ly/2ptazlQ";

		[Token(Token = "0x4000D67")]
		public const string TPAINTER_SUBDIV = "http://bit.ly/2qPboWu";

		[Token(Token = "0x4000D68")]
		public const string TPAINTER_ALBEDO = "http://bit.ly/2otnoMz";

		[Token(Token = "0x4000D69")]
		public const string TPAINTER_METALLIC = "http://bit.ly/2JwqyGG";

		[Token(Token = "0x4000D6A")]
		public const string TPAINTER_SMOOTHNESS = "http://bit.ly/2NpLkJm";

		[Token(Token = "0x4000D6B")]
		public const string TPAINTER_SPLAT = "http://bit.ly/36aCDLo";

		[Token(Token = "0x4000D6C")]
		public const string TPAINTER_CUSTOM = "http://bit.ly/33bdH4o";

		[Token(Token = "0x4000D6D")]
		public const string FPAINTER_PAINT_TREE = "http://bit.ly/36dGwzb";

		[Token(Token = "0x4000D6E")]
		public const string FPAINTER_SCALE_TREE = "http://bit.ly/2JzHJHt";

		[Token(Token = "0x4000D6F")]
		public const string FPAINTER_PAINT_GRASS = "http://bit.ly/2MWmfqm";

		[Token(Token = "0x4000D70")]
		public const string FPAINTER_SCALE_GRASS = "http://bit.ly/2Pv2EiH";

		[Token(Token = "0x4000D71")]
		public const string FPAINTER_CUSTOM = "http://bit.ly/34dvJ6f";

		[Token(Token = "0x4000D72")]
		public const string OPAINTER_SPAWN = "http://bit.ly/36mPn1R";

		[Token(Token = "0x4000D73")]
		public const string OPAINTER_SCALE = "http://bit.ly/2BRbHCC";

		[Token(Token = "0x4000D74")]
		public const string OPAINTER_CUSTOM = "http://bit.ly/2PtNhHi";

		[Token(Token = "0x4000D75")]
		public const string SPLINE_RAMP_MAKER = "http://bit.ly/3337V50";

		[Token(Token = "0x4000D76")]
		public const string SPLINE_PATH_PAINTER = "http://bit.ly/2NsN7gD";

		[Token(Token = "0x4000D77")]
		public const string SPLINE_FOLIAGE_SPAWNER = "http://bit.ly/3307hW0";

		[Token(Token = "0x4000D78")]
		public const string SPLINE_FOLIAGE_REMOVER = "http://bit.ly/2WqoeGC";

		[Token(Token = "0x4000D79")]
		public const string SPLINE_OBJECT_SPAWNER = "http://bit.ly/2qbnFEg";

		[Token(Token = "0x4000D7A")]
		public const string SPLINE_OBJECT_REMOVER = "http://bit.ly/2BVVxI4";

		[Token(Token = "0x4000D7B")]
		public const string STAMPER_GEOMETRY = "http://bit.ly/2q5nOJy";

		[Token(Token = "0x4000D7C")]
		public const string STAMPER_TEXTURE = "http://bit.ly/2JDEU8a";

		[Token(Token = "0x4000D7D")]
		public const string STAMPER_FOLIAGE = "http://bit.ly/321JIe3";

		[Token(Token = "0x4000D7E")]
		public const string STAMPER_OBJECT = "http://bit.ly/34ia3WC";

		[Token(Token = "0x4000D7F")]
		public const string NAVIGATION_HELPER = "http://bit.ly/2NqLwrM";

		[Token(Token = "0x4000D80")]
		public const string BACKUP_CREATE = "http://bit.ly/2N2NzDf";

		[Token(Token = "0x4000D81")]
		public const string BACKUP_RESTORE = "http://bit.ly/2r20Ofb";

		[Token(Token = "0x4000D82")]
		public const string ASSET_EXPLORER_LINK_CLICK = "http://bit.ly/34iwLhr";

		[Token(Token = "0x4000D83")]
		public const string HELP_OPEN_WINDOW = "http://bit.ly/2pv2i0N";

		[Token(Token = "0x4000D84")]
		public const string BILLBOARD_SAVE = "http://bit.ly/333aaVY";

		[Token(Token = "0x4000D85")]
		public const string TEXTURE_CREATOR_HEIGHT_MAP = "http://bit.ly/2WqqWvM";

		[Token(Token = "0x4000D86")]
		public const string TEXTURE_CREATOR_HEIGHT_MAP_FROM_MESH = "http://bit.ly/2pv2YmR";

		[Token(Token = "0x4000D87")]
		public const string TEXTURE_CREATOR_NORMAL_MAP = "http://bit.ly/2WrJdIW";

		[Token(Token = "0x4000D88")]
		public const string TEXTURE_CREATOR_STEEPNESS_MAP = "http://bit.ly/2Py71cT";

		[Token(Token = "0x4000D89")]
		public const string TEXTURE_CREATOR_NOISE_MAP = "http://bit.ly/2JzBtQ8";

		[Token(Token = "0x4000D8A")]
		public const string TEXTURE_CREATOR_COLOR_MAP = "http://bit.ly/2N37emP";

		[Token(Token = "0x4000D8B")]
		public const string TEXTURE_CREATOR_BLEND_MAP = "http://bit.ly/2Ws8H92";

		[Token(Token = "0x4000D8C")]
		public const string TEXTURE_CREATOR_FOLIAGE_DISTRIBUTION_MAP = "http://bit.ly/322zCJU";

		[Token(Token = "0x4000D8D")]
		public const string LINK_ONLINE_MANUAL = "http://bit.ly/2NvamGK";

		[Token(Token = "0x4000D8E")]
		public const string LINK_YOUTUBE = "http://bit.ly/2N0s2uU";

		[Token(Token = "0x4000D8F")]
		public const string LINK_FACEBOOK = "http://bit.ly/2pjN278";

		[Token(Token = "0x4000D90")]
		public const string LINK_EXPLORE_ASSET = "http://bit.ly/2PFqDvs";

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x867258", Offset = "0x867258", VA = "0x867258")]
		public static void Record(string url, bool perProject = false)
		{
		}
	}
	[Token(Token = "0x200017B")]
	public class GAssetExplorer : MonoBehaviour
	{
		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string PINWHEEL_ASSETS_LINK;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string VEGETATION_LINK;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string ROCK_PROPS_LINK;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string WATER_LINK;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string SKY_AMBIENT_LINK;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string CHARACTER_LINK;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string POLARIS_LINK;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string POSEIDON_LINK;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string JUPITER_LINK;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string CSHARP_WIZARD_LINK;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string MESH_TO_FILE_LINK;

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x86725C", Offset = "0x86725C", VA = "0x86725C")]
		public static void ShowPolarisLink()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x8672C8", Offset = "0x8672C8", VA = "0x8672C8")]
		public static void ShowPoseidonLink()
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x867334", Offset = "0x867334", VA = "0x867334")]
		public static void ShowJupiterLink()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x8673A0", Offset = "0x8673A0", VA = "0x8673A0")]
		public static void ShowCSharpWizardLink()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x86740C", Offset = "0x86740C", VA = "0x86740C")]
		public static void ShowMeshToFileLink()
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x867478", Offset = "0x867478", VA = "0x867478")]
		public static void ShowPinwheelAssets()
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x8674E4", Offset = "0x8674E4", VA = "0x8674E4")]
		public static void ShowVegetationLink()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x867550", Offset = "0x867550", VA = "0x867550")]
		public static void ShowRockPropsLink()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x8675BC", Offset = "0x8675BC", VA = "0x8675BC")]
		public static void ShowWaterLink()
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x867628", Offset = "0x867628", VA = "0x867628")]
		public static void ShowSkyAmbientLink()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x867694", Offset = "0x867694", VA = "0x867694")]
		public static void ShowCharacterLink()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x867700", Offset = "0x867700", VA = "0x867700")]
		public GAssetExplorer()
		{
		}
	}
	[Token(Token = "0x200017C")]
	public struct GCombineInfo
	{
		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3[] vertices;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Vector2[] uvs;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Color32[] colors;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] triangles;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Matrix4x4 transform;

		[Token(Token = "0x17000147")]
		public Vector3[] Vertices
		{
			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0x5E860C", Offset = "0x5E860C", VA = "0x5E860C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0x5E8614", Offset = "0x5E8614", VA = "0x5E8614")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public Vector2[] UVs
		{
			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0x5E861C", Offset = "0x5E861C", VA = "0x5E861C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0x5E8624", Offset = "0x5E8624", VA = "0x5E8624")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public Color32[] Colors
		{
			[Token(Token = "0x6000AD8")]
			[Address(RVA = "0x5E862C", Offset = "0x5E862C", VA = "0x5E862C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0x5E8634", Offset = "0x5E8634", VA = "0x5E8634")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public int[] Triangles
		{
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0x5E863C", Offset = "0x5E863C", VA = "0x5E863C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0x5E8644", Offset = "0x5E8644", VA = "0x5E8644")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public Matrix4x4 Transform
		{
			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0x5E864C", Offset = "0x5E864C", VA = "0x5E864C")]
			get
			{
				return default(Matrix4x4);
			}
			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0x5E8660", Offset = "0x5E8660", VA = "0x5E8660")]
			set
			{
			}
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x5E8674", Offset = "0x5E8674", VA = "0x5E8674")]
		public GCombineInfo(Mesh m)
		{
		}
	}
	[Token(Token = "0x200017D")]
	public static class GCombiner
	{
		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x867C24", Offset = "0x867C24", VA = "0x867C24")]
		public static GCombineInfo Combine(List<GCombineInfo> combines)
		{
			return default(GCombineInfo);
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x867FB4", Offset = "0x867FB4", VA = "0x867FB4")]
		public static GCombineInfo Combine(GCombineInfo meshTemplate, List<Matrix4x4> transforms)
		{
			return default(GCombineInfo);
		}
	}
	[Serializable]
	[Token(Token = "0x200017E")]
	public struct GCreateTerrainWizardSettings
	{
		[Token(Token = "0x2000342")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F970", Offset = "0x56F970")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GLightingModel light;

			[Token(Token = "0x4001A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public GTexturingModel texturing;

			[Token(Token = "0x4001A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GSplatsModel splats;

			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0x86D31C", Offset = "0x86D31C", VA = "0x86D31C")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0x86D608", Offset = "0x86D608", VA = "0x86D608")]
			internal bool <GetClonedMaterial>b__0(GWizardMaterialTemplate m)
			{
				return default(bool);
			}

			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0x86D634", Offset = "0x86D634", VA = "0x86D634")]
			internal bool <GetClonedMaterial>b__1(GWizardMaterialTemplate m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000343")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F980", Offset = "0x56F980")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4001A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GLightingModel light;

			[Token(Token = "0x4001A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public GTexturingModel texturing;

			[Token(Token = "0x4001A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GSplatsModel splats;

			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0x86D4B0", Offset = "0x86D4B0", VA = "0x86D4B0")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0x86D670", Offset = "0x86D670", VA = "0x86D670")]
			internal bool <GetClonedMaterial>b__0(GWizardMaterialTemplate m)
			{
				return default(bool);
			}

			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0x86D69C", Offset = "0x86D69C", VA = "0x86D69C")]
			internal bool <GetClonedMaterial>b__1(GWizardMaterialTemplate m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000344")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F990", Offset = "0x56F990")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4001A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Shader shader;

			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0x86D600", Offset = "0x86D600", VA = "0x86D600")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0x86D6D8", Offset = "0x86D6D8", VA = "0x86D6D8")]
			internal bool <FindMaterialTemplate>b__0(GWizardMaterialTemplate t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GLightingModel lightingModel;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private GTexturingModel texturingModel;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private GSplatsModel splatsModel;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<GWizardMaterialTemplate> builtinRPMaterials;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GWizardMaterialTemplate> lightweightRPMaterials;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<GWizardMaterialTemplate> universalRPMaterials;

		[Token(Token = "0x1700014C")]
		public GLightingModel LightingModel
		{
			[Token(Token = "0x6000AE1")]
			[Address(RVA = "0x5E86B8", Offset = "0x5E86B8", VA = "0x5E86B8")]
			get
			{
				return default(GLightingModel);
			}
			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0x5E86C0", Offset = "0x5E86C0", VA = "0x5E86C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public GTexturingModel TexturingModel
		{
			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0x5E86C8", Offset = "0x5E86C8", VA = "0x5E86C8")]
			get
			{
				return default(GTexturingModel);
			}
			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0x5E86D0", Offset = "0x5E86D0", VA = "0x5E86D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public GSplatsModel SplatsModel
		{
			[Token(Token = "0x6000AE5")]
			[Address(RVA = "0x5E86D8", Offset = "0x5E86D8", VA = "0x5E86D8")]
			get
			{
				return default(GSplatsModel);
			}
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0x5E86E0", Offset = "0x5E86E0", VA = "0x5E86E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public List<GWizardMaterialTemplate> BuiltinRPMaterials
		{
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x5E86E8", Offset = "0x5E86E8", VA = "0x5E86E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x5E86F0", Offset = "0x5E86F0", VA = "0x5E86F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public List<GWizardMaterialTemplate> LightweightRPMaterials
		{
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x5E86F8", Offset = "0x5E86F8", VA = "0x5E86F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0x5E8700", Offset = "0x5E8700", VA = "0x5E8700")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public List<GWizardMaterialTemplate> UniversalRPMaterials
		{
			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0x5E8708", Offset = "0x5E8708", VA = "0x5E8708")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x5E8710", Offset = "0x5E8710", VA = "0x5E8710")]
			set
			{
			}
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x5E8718", Offset = "0x5E8718", VA = "0x5E8718")]
		public Material GetClonedMaterial()
		{
			return null;
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x5E874C", Offset = "0x5E874C", VA = "0x5E874C")]
		public Material GetClonedMaterial(GLightingModel light, GTexturingModel texturing, GSplatsModel splats = GSplatsModel.Splats4)
		{
			return null;
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x5E8754", Offset = "0x5E8754", VA = "0x5E8754")]
		public Material GetClonedMaterial(GRenderPipelineType pipeline, GLightingModel light, GTexturingModel texturing, GSplatsModel splats = GSplatsModel.Splats4)
		{
			return null;
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x5E875C", Offset = "0x5E875C", VA = "0x5E875C")]
		public bool FindMaterialTemplate(Shader shader, GRenderPipelineType pipeline, out GWizardMaterialTemplate template)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200017F")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x56E254", Offset = "0x56E254")]
	public class GDisplayName : Attribute
	{
		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572ADC", Offset = "0x572ADC")]
		private string <DisplayName>k__BackingField;

		[Token(Token = "0x17000152")]
		public string DisplayName
		{
			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0x86D7B4", Offset = "0x86D7B4", VA = "0x86D7B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BFE4", Offset = "0x57BFE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AF2")]
			[Address(RVA = "0x86D7BC", Offset = "0x86D7BC", VA = "0x86D7BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BFF4", Offset = "0x57BFF4")]
			set
			{
			}
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x86D7C4", Offset = "0x86D7C4", VA = "0x86D7C4")]
		public GDisplayName(string name)
		{
		}
	}
	[Token(Token = "0x2000180")]
	public static class GGrassUtilities
	{
		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xA887A8", Offset = "0xA887A8", VA = "0xA887A8")]
		public static Vector3[] GetVertices(GGrassShape shape, Matrix4x4 matrix)
		{
			return null;
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xA890C8", Offset = "0xA890C8", VA = "0xA890C8")]
		public static Vector2[] GetUVs(GGrassShape shape)
		{
			return null;
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xA89554", Offset = "0xA89554", VA = "0xA89554")]
		public static Color[] GetColors(GGrassShape shape)
		{
			return null;
		}
	}
	[Token(Token = "0x2000181")]
	public static class GInternalMaterials
	{
		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material unlitTextureMaterial;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material unlitTransparentMaterial;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Material copyTextureMaterial;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Material subDivisionMapMaterial;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Material blurMaterial;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Material blurRadiusMaterial;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Material elevationPainterMaterial;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Material heightSamplingPainterMaterial;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Material subDivPainterMaterial;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Material painterCursorProjectorMaterial;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Material albedoPainterMaterial;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static Material metallicPainterMaterial;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static Material smoothnessPainterMaterial;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static Material solidColorMaterial;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static Material splatPainterMaterial;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static Material rampMakerMaterial;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static Material pathPainterMaterial;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static Material geometryLivePreviewMaterial;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private static Material geometricalHeightMapMaterial;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private static Material foliageRemoverMaterial;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private static Material maskVisualizerMaterial;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private static Material stamperMaterial;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private static Material terrainNormalMapRendererMaterial;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private static Material terrainPerPixelNormalMapRendererMaterial;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private static Material textureStamperBrushMaterial;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private static Material visibilityPainterMaterial;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private static Material grassPreviewMaterial;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private static Material navHelperDummyGameObjectMaterial;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private static Material splatsToAlbedoMaterial;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private static Material unlitChannelMaskMaterial;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private static Material channelToGrayscaleMaterial;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private static Material heightMapFromMeshMaterial;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private static Material interactiveGrassVectorFieldMaterial;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private static Material subdivLivePreviewMaterial;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private static Material visibilityLivePreviewMaterial;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private static Material terracePainterMaterial;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private static Material remapPainterMaterial;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private static Material noisePainterMaterial;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private static Material heightmapConverterEncodeRGMaterial;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private static Material heightmapDecodeGrayscaleMaterial;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private static Material drawTex2DArraySliceMaterial;

		[Token(Token = "0x17000153")]
		public static Material UnlitTextureMaterial
		{
			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0xA8B1D0", Offset = "0xA8B1D0", VA = "0xA8B1D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		public static Material UnlitTransparentMaterial
		{
			[Token(Token = "0x6000AF8")]
			[Address(RVA = "0xA8B2B0", Offset = "0xA8B2B0", VA = "0xA8B2B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		public static Material CopyTextureMaterial
		{
			[Token(Token = "0x6000AF9")]
			[Address(RVA = "0xA8B398", Offset = "0xA8B398", VA = "0xA8B398")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		public static Material SubDivisionMapMaterial
		{
			[Token(Token = "0x6000AFA")]
			[Address(RVA = "0xA8554C", Offset = "0xA8554C", VA = "0xA8554C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		public static Material BlurMaterial
		{
			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0xA8B474", Offset = "0xA8B474", VA = "0xA8B474")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		public static Material BlurRadiusMaterial
		{
			[Token(Token = "0x6000AFC")]
			[Address(RVA = "0xA8B550", Offset = "0xA8B550", VA = "0xA8B550")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		public static Material ElevationPainterMaterial
		{
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0xA8B62C", Offset = "0xA8B62C", VA = "0xA8B62C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		public static Material HeightSamplingPainterMaterial
		{
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0xA8B708", Offset = "0xA8B708", VA = "0xA8B708")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		public static Material SubDivPainterMaterial
		{
			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0xA8B7E4", Offset = "0xA8B7E4", VA = "0xA8B7E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		public static Material PainterCursorProjectorMaterial
		{
			[Token(Token = "0x6000B00")]
			[Address(RVA = "0xA8B8C0", Offset = "0xA8B8C0", VA = "0xA8B8C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		public static Material AlbedoPainterMaterial
		{
			[Token(Token = "0x6000B01")]
			[Address(RVA = "0xA8B99C", Offset = "0xA8B99C", VA = "0xA8B99C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015E")]
		public static Material MetallicPainterMaterial
		{
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0xA8BA78", Offset = "0xA8BA78", VA = "0xA8BA78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		public static Material SmoothnessPainterMaterial
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0xA8BB54", Offset = "0xA8BB54", VA = "0xA8BB54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		public static Material SolidColorMaterial
		{
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0xA8BC30", Offset = "0xA8BC30", VA = "0xA8BC30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		public static Material SplatPainterMaterial
		{
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0xA8BD0C", Offset = "0xA8BD0C", VA = "0xA8BD0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		public static Material RampMakerMaterial
		{
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0xA8BDE8", Offset = "0xA8BDE8", VA = "0xA8BDE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		public static Material PathPainterMaterial
		{
			[Token(Token = "0x6000B07")]
			[Address(RVA = "0xA8BEC4", Offset = "0xA8BEC4", VA = "0xA8BEC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		public static Material GeometryLivePreviewMaterial
		{
			[Token(Token = "0x6000B08")]
			[Address(RVA = "0xA8BFA0", Offset = "0xA8BFA0", VA = "0xA8BFA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		public static Material GeometricalHeightMapMaterial
		{
			[Token(Token = "0x6000B09")]
			[Address(RVA = "0xA8C07C", Offset = "0xA8C07C", VA = "0xA8C07C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000166")]
		public static Material FoliageRemoverMaterial
		{
			[Token(Token = "0x6000B0A")]
			[Address(RVA = "0xA8C158", Offset = "0xA8C158", VA = "0xA8C158")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		public static Material MaskVisualizerMaterial
		{
			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0xA8C234", Offset = "0xA8C234", VA = "0xA8C234")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000168")]
		public static Material StamperMaterial
		{
			[Token(Token = "0x6000B0C")]
			[Address(RVA = "0xA8C310", Offset = "0xA8C310", VA = "0xA8C310")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		public static Material TerrainNormalMapRendererMaterial
		{
			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0xA8C3EC", Offset = "0xA8C3EC", VA = "0xA8C3EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016A")]
		public static Material TerrainPerPixelNormalMapRendererMaterial
		{
			[Token(Token = "0x6000B0E")]
			[Address(RVA = "0xA8C4C8", Offset = "0xA8C4C8", VA = "0xA8C4C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		public static Material TextureStamperBrushMaterial
		{
			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0xA8C5A4", Offset = "0xA8C5A4", VA = "0xA8C5A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		public static Material VisibilityPainterMaterial
		{
			[Token(Token = "0x6000B10")]
			[Address(RVA = "0xA8C680", Offset = "0xA8C680", VA = "0xA8C680")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		public static Material GrassPreviewMaterial
		{
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0xA8C75C", Offset = "0xA8C75C", VA = "0xA8C75C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		public static Material NavHelperDummyGameObjectMaterial
		{
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0xA8C838", Offset = "0xA8C838", VA = "0xA8C838")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		public static Material SplatsToAlbedoMaterial
		{
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0xA8C960", Offset = "0xA8C960", VA = "0xA8C960")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		public static Material UnlitChannelMaskMaterial
		{
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0xA8CA3C", Offset = "0xA8CA3C", VA = "0xA8CA3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		public static Material ChannelToGrayscaleMaterial
		{
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0xA8CB18", Offset = "0xA8CB18", VA = "0xA8CB18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		public static Material HeightMapFromMeshMaterial
		{
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0xA8CBF4", Offset = "0xA8CBF4", VA = "0xA8CBF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		public static Material InteractiveGrassVectorFieldMaterial
		{
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0xA8B0EC", Offset = "0xA8B0EC", VA = "0xA8B0EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		public static Material SubdivLivePreviewMaterial
		{
			[Token(Token = "0x6000B18")]
			[Address(RVA = "0xA8CCD0", Offset = "0xA8CCD0", VA = "0xA8CCD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		public static Material VisibilityLivePreviewMaterial
		{
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0xA8CDAC", Offset = "0xA8CDAC", VA = "0xA8CDAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000176")]
		public static Material TerracePainterMaterial
		{
			[Token(Token = "0x6000B1A")]
			[Address(RVA = "0xA8CE88", Offset = "0xA8CE88", VA = "0xA8CE88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		public static Material RemapPainterMaterial
		{
			[Token(Token = "0x6000B1B")]
			[Address(RVA = "0xA8CF64", Offset = "0xA8CF64", VA = "0xA8CF64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		public static Material NoisePainterMaterial
		{
			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0xA8D040", Offset = "0xA8D040", VA = "0xA8D040")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		public static Material HeightmapConverterEncodeRGMaterial
		{
			[Token(Token = "0x6000B1D")]
			[Address(RVA = "0xA85470", Offset = "0xA85470", VA = "0xA85470")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		public static Material HeightmapDecodeGrayscaleMaterial
		{
			[Token(Token = "0x6000B1E")]
			[Address(RVA = "0xA8D11C", Offset = "0xA8D11C", VA = "0xA8D11C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		public static Material DrawTex2DArraySliceMaterial
		{
			[Token(Token = "0x6000B1F")]
			[Address(RVA = "0xA8D1F8", Offset = "0xA8D1F8", VA = "0xA8D1F8")]
			get
			{
				return null;
			}
		}
	}
	[Serializable]
	[Token(Token = "0x2000182")]
	public struct GInternalShaderSettings
	{
		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Shader solidColorShader;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private Shader copyTextureShader;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Shader subDivisionMapShader;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Shader blurShader;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Shader blurRadiusShader;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Shader elevationPainterShader;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Shader heightSamplingPainterShader;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Shader subdivPainterShader;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Shader painterCursorProjectorShader;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Shader albedoPainterShader;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Shader metallicPainterShader;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Shader smoothnessPainterShader;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Shader splatPainterShader;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Shader visibilityPainterShader;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Shader rampMakerShader;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Shader pathPainterShader;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Shader geometryLivePreviewShader;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Shader geometricalHeightMapShader;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Shader foliageRemoverShader;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Shader maskVisualizerShader;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Shader stamperShader;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Shader terrainNormalMapShader;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Shader terrainPerPixelNormalMapShader;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Shader textureStamperBrushShader;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Shader grassPreviewShader;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Shader navHelperDummyGameObjectShader;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Shader splatsToAlbedoShader;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Shader unlitChannelMaskShader;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Shader channelToGrayscaleShader;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Shader heightMapFromMeshShader;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Shader curveFilterShader;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Shader invertFilterShader;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Shader stepFilterShader;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Shader warpFilterShader;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Shader steepnessMapGeneratorShader;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Shader noiseMapGeneratorShader;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Shader hydraulicErosionFilter;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Shader blendMapGeneratorShader;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private Shader distributionMapGeneratorShader;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Shader interactiveGrassVectorFieldShader;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private Shader subdivLivePreviewShader;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Shader visibilityLivePreviewShader;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private Shader terracePainterShader;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private Shader remapPainterShader;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private Shader noisePainterShader;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Shader heightmapConverterEncodeRGShader;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private Shader heightmapDecodeGrayscaleShader;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private Shader drawTex2DArraySliceShader;

		[Token(Token = "0x1700017C")]
		public Shader SolidColorShader
		{
			[Token(Token = "0x6000B20")]
			[Address(RVA = "0x5F3FBC", Offset = "0x5F3FBC", VA = "0x5F3FBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B21")]
			[Address(RVA = "0x5F3FC4", Offset = "0x5F3FC4", VA = "0x5F3FC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public Shader CopyTextureShader
		{
			[Token(Token = "0x6000B22")]
			[Address(RVA = "0x5F3FCC", Offset = "0x5F3FCC", VA = "0x5F3FCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B23")]
			[Address(RVA = "0x5F3FD4", Offset = "0x5F3FD4", VA = "0x5F3FD4")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public Shader SubDivisionMapShader
		{
			[Token(Token = "0x6000B24")]
			[Address(RVA = "0x5F3FDC", Offset = "0x5F3FDC", VA = "0x5F3FDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B25")]
			[Address(RVA = "0x5F3FE4", Offset = "0x5F3FE4", VA = "0x5F3FE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public Shader BlurShader
		{
			[Token(Token = "0x6000B26")]
			[Address(RVA = "0x5F3FEC", Offset = "0x5F3FEC", VA = "0x5F3FEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B27")]
			[Address(RVA = "0x5F3FF4", Offset = "0x5F3FF4", VA = "0x5F3FF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public Shader BlurRadiusShader
		{
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0x5F3FFC", Offset = "0x5F3FFC", VA = "0x5F3FFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B29")]
			[Address(RVA = "0x5F4004", Offset = "0x5F4004", VA = "0x5F4004")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public Shader ElevationPainterShader
		{
			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0x5F400C", Offset = "0x5F400C", VA = "0x5F400C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0x5F4014", Offset = "0x5F4014", VA = "0x5F4014")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public Shader HeightSamplingPainterShader
		{
			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0x5F401C", Offset = "0x5F401C", VA = "0x5F401C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0x5F4024", Offset = "0x5F4024", VA = "0x5F4024")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public Shader SubdivPainterShader
		{
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0x5F402C", Offset = "0x5F402C", VA = "0x5F402C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B2F")]
			[Address(RVA = "0x5F4034", Offset = "0x5F4034", VA = "0x5F4034")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public Shader PainterCursorProjectorShader
		{
			[Token(Token = "0x6000B30")]
			[Address(RVA = "0x5F403C", Offset = "0x5F403C", VA = "0x5F403C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B31")]
			[Address(RVA = "0x5F4044", Offset = "0x5F4044", VA = "0x5F4044")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public Shader AlbedoPainterShader
		{
			[Token(Token = "0x6000B32")]
			[Address(RVA = "0x5F404C", Offset = "0x5F404C", VA = "0x5F404C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B33")]
			[Address(RVA = "0x5F4054", Offset = "0x5F4054", VA = "0x5F4054")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public Shader MetallicPainterShader
		{
			[Token(Token = "0x6000B34")]
			[Address(RVA = "0x5F405C", Offset = "0x5F405C", VA = "0x5F405C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B35")]
			[Address(RVA = "0x5F4064", Offset = "0x5F4064", VA = "0x5F4064")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public Shader SmoothnessPainterShader
		{
			[Token(Token = "0x6000B36")]
			[Address(RVA = "0x5F406C", Offset = "0x5F406C", VA = "0x5F406C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B37")]
			[Address(RVA = "0x5F4074", Offset = "0x5F4074", VA = "0x5F4074")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public Shader SplatPainterShader
		{
			[Token(Token = "0x6000B38")]
			[Address(RVA = "0x5F407C", Offset = "0x5F407C", VA = "0x5F407C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B39")]
			[Address(RVA = "0x5F4084", Offset = "0x5F4084", VA = "0x5F4084")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public Shader VisibilityPainterShader
		{
			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0x5F408C", Offset = "0x5F408C", VA = "0x5F408C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0x5F4094", Offset = "0x5F4094", VA = "0x5F4094")]
			set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		public Shader RampMakerShader
		{
			[Token(Token = "0x6000B3C")]
			[Address(RVA = "0x5F409C", Offset = "0x5F409C", VA = "0x5F409C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B3D")]
			[Address(RVA = "0x5F40A4", Offset = "0x5F40A4", VA = "0x5F40A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		public Shader PathPainterShader
		{
			[Token(Token = "0x6000B3E")]
			[Address(RVA = "0x5F40AC", Offset = "0x5F40AC", VA = "0x5F40AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B3F")]
			[Address(RVA = "0x5F40B4", Offset = "0x5F40B4", VA = "0x5F40B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public Shader GeometryLivePreviewShader
		{
			[Token(Token = "0x6000B40")]
			[Address(RVA = "0x5F40BC", Offset = "0x5F40BC", VA = "0x5F40BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B41")]
			[Address(RVA = "0x5F40C4", Offset = "0x5F40C4", VA = "0x5F40C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public Shader GeometricalHeightMapShader
		{
			[Token(Token = "0x6000B42")]
			[Address(RVA = "0x5F40CC", Offset = "0x5F40CC", VA = "0x5F40CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B43")]
			[Address(RVA = "0x5F40D4", Offset = "0x5F40D4", VA = "0x5F40D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public Shader FoliageRemoverShader
		{
			[Token(Token = "0x6000B44")]
			[Address(RVA = "0x5F40DC", Offset = "0x5F40DC", VA = "0x5F40DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B45")]
			[Address(RVA = "0x5F40E4", Offset = "0x5F40E4", VA = "0x5F40E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public Shader MaskVisualizerShader
		{
			[Token(Token = "0x6000B46")]
			[Address(RVA = "0x5F40EC", Offset = "0x5F40EC", VA = "0x5F40EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B47")]
			[Address(RVA = "0x5F40F4", Offset = "0x5F40F4", VA = "0x5F40F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public Shader StamperShader
		{
			[Token(Token = "0x6000B48")]
			[Address(RVA = "0x5F40FC", Offset = "0x5F40FC", VA = "0x5F40FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B49")]
			[Address(RVA = "0x5F4104", Offset = "0x5F4104", VA = "0x5F4104")]
			set
			{
			}
		}

		[Token(Token = "0x17000191")]
		public Shader TerrainNormalMapShader
		{
			[Token(Token = "0x6000B4A")]
			[Address(RVA = "0x5F410C", Offset = "0x5F410C", VA = "0x5F410C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B4B")]
			[Address(RVA = "0x5F4114", Offset = "0x5F4114", VA = "0x5F4114")]
			set
			{
			}
		}

		[Token(Token = "0x17000192")]
		public Shader TerrainPerPixelNormalMapShader
		{
			[Token(Token = "0x6000B4C")]
			[Address(RVA = "0x5F411C", Offset = "0x5F411C", VA = "0x5F411C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0x5F4124", Offset = "0x5F4124", VA = "0x5F4124")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public Shader TextureStamperBrushShader
		{
			[Token(Token = "0x6000B4E")]
			[Address(RVA = "0x5F412C", Offset = "0x5F412C", VA = "0x5F412C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B4F")]
			[Address(RVA = "0x5F4134", Offset = "0x5F4134", VA = "0x5F4134")]
			set
			{
			}
		}

		[Token(Token = "0x17000194")]
		public Shader GrassPreviewShader
		{
			[Token(Token = "0x6000B50")]
			[Address(RVA = "0x5F413C", Offset = "0x5F413C", VA = "0x5F413C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B51")]
			[Address(RVA = "0x5F4144", Offset = "0x5F4144", VA = "0x5F4144")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public Shader NavHelperDummyGameObjectShader
		{
			[Token(Token = "0x6000B52")]
			[Address(RVA = "0x5F414C", Offset = "0x5F414C", VA = "0x5F414C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B53")]
			[Address(RVA = "0x5F4154", Offset = "0x5F4154", VA = "0x5F4154")]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public Shader SplatsToAlbedoShader
		{
			[Token(Token = "0x6000B54")]
			[Address(RVA = "0x5F415C", Offset = "0x5F415C", VA = "0x5F415C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B55")]
			[Address(RVA = "0x5F4164", Offset = "0x5F4164", VA = "0x5F4164")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public Shader UnlitChannelMaskShader
		{
			[Token(Token = "0x6000B56")]
			[Address(RVA = "0x5F416C", Offset = "0x5F416C", VA = "0x5F416C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B57")]
			[Address(RVA = "0x5F4174", Offset = "0x5F4174", VA = "0x5F4174")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public Shader ChannelToGrayscaleShader
		{
			[Token(Token = "0x6000B58")]
			[Address(RVA = "0x5F417C", Offset = "0x5F417C", VA = "0x5F417C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B59")]
			[Address(RVA = "0x5F4184", Offset = "0x5F4184", VA = "0x5F4184")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public Shader HeightMapFromMeshShader
		{
			[Token(Token = "0x6000B5A")]
			[Address(RVA = "0x5F418C", Offset = "0x5F418C", VA = "0x5F418C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B5B")]
			[Address(RVA = "0x5F4194", Offset = "0x5F4194", VA = "0x5F4194")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public Shader CurveFilterShader
		{
			[Token(Token = "0x6000B5C")]
			[Address(RVA = "0x5F419C", Offset = "0x5F419C", VA = "0x5F419C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B5D")]
			[Address(RVA = "0x5F41A4", Offset = "0x5F41A4", VA = "0x5F41A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public Shader InvertFilterShader
		{
			[Token(Token = "0x6000B5E")]
			[Address(RVA = "0x5F41AC", Offset = "0x5F41AC", VA = "0x5F41AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B5F")]
			[Address(RVA = "0x5F41B4", Offset = "0x5F41B4", VA = "0x5F41B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		public Shader StepFilterShader
		{
			[Token(Token = "0x6000B60")]
			[Address(RVA = "0x5F41BC", Offset = "0x5F41BC", VA = "0x5F41BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B61")]
			[Address(RVA = "0x5F41C4", Offset = "0x5F41C4", VA = "0x5F41C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public Shader WarpFilterShader
		{
			[Token(Token = "0x6000B62")]
			[Address(RVA = "0x5F41CC", Offset = "0x5F41CC", VA = "0x5F41CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B63")]
			[Address(RVA = "0x5F41D4", Offset = "0x5F41D4", VA = "0x5F41D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		public Shader SteepnessMapGeneratorShader
		{
			[Token(Token = "0x6000B64")]
			[Address(RVA = "0x5F41DC", Offset = "0x5F41DC", VA = "0x5F41DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B65")]
			[Address(RVA = "0x5F41E4", Offset = "0x5F41E4", VA = "0x5F41E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public Shader NoiseMapGeneratorShader
		{
			[Token(Token = "0x6000B66")]
			[Address(RVA = "0x5F41EC", Offset = "0x5F41EC", VA = "0x5F41EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B67")]
			[Address(RVA = "0x5F41F4", Offset = "0x5F41F4", VA = "0x5F41F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001A0")]
		public Shader HydraulicErosionFilter
		{
			[Token(Token = "0x6000B68")]
			[Address(RVA = "0x5F41FC", Offset = "0x5F41FC", VA = "0x5F41FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0x5F4204", Offset = "0x5F4204", VA = "0x5F4204")]
			set
			{
			}
		}

		[Token(Token = "0x170001A1")]
		public Shader BlendMapGeneratorShader
		{
			[Token(Token = "0x6000B6A")]
			[Address(RVA = "0x5F420C", Offset = "0x5F420C", VA = "0x5F420C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0x5F4214", Offset = "0x5F4214", VA = "0x5F4214")]
			set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		public Shader DistributionMapGeneratorShader
		{
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0x5F421C", Offset = "0x5F421C", VA = "0x5F421C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0x5F4224", Offset = "0x5F4224", VA = "0x5F4224")]
			set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public Shader InteractiveGrassVectorFieldShader
		{
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0x5F422C", Offset = "0x5F422C", VA = "0x5F422C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0x5F4234", Offset = "0x5F4234", VA = "0x5F4234")]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public Shader SubdivLivePreviewShader
		{
			[Token(Token = "0x6000B70")]
			[Address(RVA = "0x5F423C", Offset = "0x5F423C", VA = "0x5F423C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B71")]
			[Address(RVA = "0x5F4244", Offset = "0x5F4244", VA = "0x5F4244")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public Shader VisibilityLivePreviewShader
		{
			[Token(Token = "0x6000B72")]
			[Address(RVA = "0x5F424C", Offset = "0x5F424C", VA = "0x5F424C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B73")]
			[Address(RVA = "0x5F4254", Offset = "0x5F4254", VA = "0x5F4254")]
			set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		public Shader TerracePainterShader
		{
			[Token(Token = "0x6000B74")]
			[Address(RVA = "0x5F425C", Offset = "0x5F425C", VA = "0x5F425C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B75")]
			[Address(RVA = "0x5F4264", Offset = "0x5F4264", VA = "0x5F4264")]
			set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public Shader RemapPainterShader
		{
			[Token(Token = "0x6000B76")]
			[Address(RVA = "0x5F426C", Offset = "0x5F426C", VA = "0x5F426C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B77")]
			[Address(RVA = "0x5F4274", Offset = "0x5F4274", VA = "0x5F4274")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public Shader NoisePainterShader
		{
			[Token(Token = "0x6000B78")]
			[Address(RVA = "0x5F427C", Offset = "0x5F427C", VA = "0x5F427C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B79")]
			[Address(RVA = "0x5F4284", Offset = "0x5F4284", VA = "0x5F4284")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public Shader HeightmapConverterEncodeRGShader
		{
			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0x5F428C", Offset = "0x5F428C", VA = "0x5F428C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0x5F4294", Offset = "0x5F4294", VA = "0x5F4294")]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public Shader HeightmapDecodeGrayscaleShader
		{
			[Token(Token = "0x6000B7C")]
			[Address(RVA = "0x5F429C", Offset = "0x5F429C", VA = "0x5F429C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0x5F42A4", Offset = "0x5F42A4", VA = "0x5F42A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public Shader DrawTex2DArraySliceShader
		{
			[Token(Token = "0x6000B7E")]
			[Address(RVA = "0x5F42AC", Offset = "0x5F42AC", VA = "0x5F42AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0x5F42B4", Offset = "0x5F42B4", VA = "0x5F42B4")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000183")]
	public enum GLightingModel
	{
		[Token(Token = "0x4000E02")]
		PBR,
		[Token(Token = "0x4000E03")]
		Lambert,
		[Token(Token = "0x4000E04")]
		BlinnPhong
	}
	[Token(Token = "0x2000184")]
	public class GNavigationHelper : MonoBehaviour
	{
		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int groupId;

		[Token(Token = "0x170001AC")]
		public int GroupId
		{
			[Token(Token = "0x6000B80")]
			[Address(RVA = "0x7F5CF0", Offset = "0x7F5CF0", VA = "0x7F5CF0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B81")]
			[Address(RVA = "0x7F5CF8", Offset = "0x7F5CF8", VA = "0x7F5CF8")]
			set
			{
			}
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x7F5D00", Offset = "0x7F5D00", VA = "0x7F5D00")]
		public void CreateStaticObstacles()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x7F60F8", Offset = "0x7F60F8", VA = "0x7F60F8")]
		private void CreateStaticObstacles(GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x7F68EC", Offset = "0x7F68EC", VA = "0x7F68EC")]
		public void DeleteStaticObstacles()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x7F6AB0", Offset = "0x7F6AB0", VA = "0x7F6AB0")]
		private void DeleteStaticObstacles(GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x7F6BB8", Offset = "0x7F6BB8", VA = "0x7F6BB8")]
		public GNavigationHelper()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class GObjectHelper : MonoBehaviour
	{
		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GStylizedTerrain terrain;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GSnapMode snapMode;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private LayerMask layerMask;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool alignToSurface;

		[Token(Token = "0x170001AD")]
		public GStylizedTerrain Terrain
		{
			[Token(Token = "0x6000B87")]
			[Address(RVA = "0x7F6BC0", Offset = "0x7F6BC0", VA = "0x7F6BC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B88")]
			[Address(RVA = "0x7F6BC8", Offset = "0x7F6BC8", VA = "0x7F6BC8")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public GSnapMode SnapMode
		{
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0x7F6BD0", Offset = "0x7F6BD0", VA = "0x7F6BD0")]
			get
			{
				return default(GSnapMode);
			}
			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0x7F6BD8", Offset = "0x7F6BD8", VA = "0x7F6BD8")]
			set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		public LayerMask LayerMask
		{
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0x7F6BE0", Offset = "0x7F6BE0", VA = "0x7F6BE0")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0x7F6BE8", Offset = "0x7F6BE8", VA = "0x7F6BE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public bool AlignToSurface
		{
			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0x7F6BF0", Offset = "0x7F6BF0", VA = "0x7F6BF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0x7F6BF8", Offset = "0x7F6BF8", VA = "0x7F6BF8")]
			set
			{
			}
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x7F6C04", Offset = "0x7F6C04", VA = "0x7F6C04")]
		public void Snap()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x7F7138", Offset = "0x7F7138", VA = "0x7F7138")]
		public GObjectHelper()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class GProgressCancelledException : Exception
	{
		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x7F7438", Offset = "0x7F7438", VA = "0x7F7438")]
		public GProgressCancelledException()
		{
		}
	}
	[Token(Token = "0x2000187")]
	public enum GRenderPipelineType
	{
		[Token(Token = "0x4000E0B")]
		Builtin,
		[Token(Token = "0x4000E0C")]
		Lightweight,
		[Token(Token = "0x4000E0D")]
		Universal
	}
	[Token(Token = "0x2000188")]
	public class GRendererResourceManager
	{
		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<GRendererResourceManager> activeInstances;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<BillboardAsset, Mesh> billboardMeshes;

		[Token(Token = "0x170001B1")]
		public static List<GRendererResourceManager> ActiveInstances
		{
			[Token(Token = "0x6000B92")]
			[Address(RVA = "0x7F74A0", Offset = "0x7F74A0", VA = "0x7F74A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		private static Dictionary<BillboardAsset, Mesh> BillboardMeshes
		{
			[Token(Token = "0x6000B93")]
			[Address(RVA = "0x7F7530", Offset = "0x7F7530", VA = "0x7F7530")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x7F75BC", Offset = "0x7F75BC", VA = "0x7F75BC")]
		public GRendererResourceManager()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x7F765C", Offset = "0x7F765C", VA = "0x7F765C", Slot = "1")]
		~GRendererResourceManager()
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x7F7704", Offset = "0x7F7704", VA = "0x7F7704")]
		private void Release()
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x7F7708", Offset = "0x7F7708", VA = "0x7F7708")]
		public Mesh GetBillboardMesh(BillboardAsset billboard)
		{
			return null;
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x7F78A4", Offset = "0x7F78A4", VA = "0x7F78A4")]
		private Mesh CreateBillboardMesh(BillboardAsset billboard)
		{
			return null;
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x7F7B18", Offset = "0x7F7B18", VA = "0x7F7B18")]
		public void UpdateBillboardMesh(BillboardAsset billboard)
		{
		}
	}
	[Token(Token = "0x2000189")]
	public enum GSnapMode
	{
		[Token(Token = "0x4000E11")]
		Terrain,
		[Token(Token = "0x4000E12")]
		World
	}
	[Token(Token = "0x200018A")]
	public enum GSplatsModel
	{
		[Token(Token = "0x4000E14")]
		Splats4,
		[Token(Token = "0x4000E15")]
		Splats4Normals4,
		[Token(Token = "0x4000E16")]
		Splats8
	}
	[Token(Token = "0x200018B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56E288", Offset = "0x56E288")]
	public class GTerrainTools : MonoBehaviour
	{
		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x88D00C", Offset = "0x88D00C", VA = "0x88D00C")]
		public GTerrainTools()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class GTextAsset : ScriptableObject
	{
		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string text;

		[Token(Token = "0x170001B3")]
		public string Text
		{
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0x88D014", Offset = "0x88D014", VA = "0x88D014")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0x88D01C", Offset = "0x88D01C", VA = "0x88D01C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x88D024", Offset = "0x88D024", VA = "0x88D024")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x88D028", Offset = "0x88D028", VA = "0x88D028")]
		public GTextAsset()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public enum GTexturingModel
	{
		[Token(Token = "0x4000E19")]
		GradientLookup,
		[Token(Token = "0x4000E1A")]
		ColorMap,
		[Token(Token = "0x4000E1B")]
		Splat,
		[Token(Token = "0x4000E1C")]
		VertexColor
	}
	[Token(Token = "0x200018E")]
	public static class GUtilities
	{
		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float DELTA_TIME;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Mesh quadMesh;

		[Token(Token = "0x170001B4")]
		public static Mesh QuadMesh
		{
			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0x88F868", Offset = "0x88F868", VA = "0x88F868")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA0")]
		public static string ListElementsToString<T>(this IEnumerable<T> list, string separator)
		{
			return null;
		}

		[Token(Token = "0x6000BA1")]
		public static T[][] CreateJaggedArray<T>(int dimension1, int dimension2)
		{
			return null;
		}

		[Token(Token = "0x6000BA2")]
		public static T[] To1dArray<T>(T[][] jaggedArray)
		{
			return null;
		}

		[Token(Token = "0x6000BA3")]
		public static T[] To1dArray<T>(T[,] grid)
		{
			return null;
		}

		[Token(Token = "0x6000BA4")]
		public static void Fill<T>(T[] array, T value)
		{
		}

		[Token(Token = "0x6000BA5")]
		public static void CopyTo<T>(T[] src, T[] des)
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x88FA04", Offset = "0x88FA04", VA = "0x88FA04")]
		public static int Sum(int[,] array)
		{
			return default(int);
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x88FAD4", Offset = "0x88FAD4", VA = "0x88FAD4")]
		public static int To1DIndex(int x, int z, int width)
		{
			return default(int);
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x88FADC", Offset = "0x88FADC", VA = "0x88FADC")]
		public static bool IsInRange(float number, float minValue, float maxValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x88FAF4", Offset = "0x88FAF4", VA = "0x88FAF4")]
		public static bool IsInRangeExclusive(float number, float minValue, float maxValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x88FB0C", Offset = "0x88FB0C", VA = "0x88FB0C")]
		public static float GetFraction(float value, float floor, float ceil)
		{
			return default(float);
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x88D9F4", Offset = "0x88D9F4", VA = "0x88D9F4")]
		public static void ClearChildren(Transform t)
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x88FB1C", Offset = "0x88FB1C", VA = "0x88FB1C")]
		public static Gradient CreateFullWhiteGradient()
		{
			return null;
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x88FC6C", Offset = "0x88FC6C", VA = "0x88FC6C")]
		public static Gradient CreateFullTransparentGradient()
		{
			return null;
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x88FDBC", Offset = "0x88FDBC", VA = "0x88FDBC")]
		public static void CalculateBarycentricCoord(Vector2 p, Vector2 p1, Vector2 p2, Vector2 p3, ref Vector3 bary)
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x88FF94", Offset = "0x88FF94", VA = "0x88FF94")]
		public static void ExpandTrisUvCoord(Texture2D tex, Vector2[] trisUv)
		{
		}

		[Token(Token = "0x6000BB0")]
		public static bool ContainIdenticalElements<T>(T[] arr1, T[] arr2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x8902FC", Offset = "0x8902FC", VA = "0x8902FC")]
		public static float GetNearestMultiple(float number, float multipleOf)
		{
			return default(float);
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x890334", Offset = "0x890334", VA = "0x890334")]
		public static Transform GetChildrenWithName(Transform parent, string name)
		{
			return null;
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x88E828", Offset = "0x88E828", VA = "0x88E828")]
		public static void ResetTransform(Transform t, Transform parent)
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x890470", Offset = "0x890470", VA = "0x890470")]
		public static void DestroyGameobject(GameObject g)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x8904D8", Offset = "0x8904D8", VA = "0x8904D8")]
		public static void DestroyGameObjectWithUndo(GameObject g)
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x88CCF8", Offset = "0x88CCF8", VA = "0x88CCF8")]
		public static void DestroyObject(UnityEngine.Object o)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x89053C", Offset = "0x89053C", VA = "0x89053C")]
		public static string Repeat(char src, int count)
		{
			return null;
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x8905CC", Offset = "0x8905CC", VA = "0x8905CC")]
		public static void MarkCurrentSceneDirty()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x8905D0", Offset = "0x8905D0", VA = "0x8905D0")]
		public static GameObject[] GetChildrenGameObjects(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x8906EC", Offset = "0x8906EC", VA = "0x8906EC")]
		public static Transform[] GetChildrenTransforms(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x8907FC", Offset = "0x8907FC", VA = "0x8907FC")]
		public static Vector3 RotateVectorAroundNormal(Vector3 vector, Vector3 normal, float angleDegree)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x88F95C", Offset = "0x88F95C", VA = "0x88F95C")]
		public static Mesh GetPrimitiveMesh(PrimitiveType type)
		{
			return null;
		}

		[Token(Token = "0x6000BBD")]
		public static void ShuffleList<T>(List<T> list)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x8909D0", Offset = "0x8909D0", VA = "0x8909D0")]
		public static int[] GetShuffleIndicesArray(int length)
		{
			return null;
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x890AC0", Offset = "0x890AC0", VA = "0x890AC0")]
		public static int[] GetIndicesArray(int length)
		{
			return null;
		}

		[Token(Token = "0x6000BC0")]
		public static void ResetArray<T>(ref T[] array, int count, T defaultValue)
		{
		}

		[Token(Token = "0x6000BC1")]
		public static bool EnsureArrayLength<T>(ref T[] array, int count)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x890B58", Offset = "0x890B58", VA = "0x890B58")]
		public static float GetValueBilinear(float[] data, int width, int height, Vector2 uv)
		{
			return default(float);
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x890D68", Offset = "0x890D68", VA = "0x890D68")]
		public static Color GetColorBilinear(Color[] textureData, int width, int height, Vector2 uv)
		{
			return default(Color);
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x8910FC", Offset = "0x8910FC", VA = "0x8910FC")]
		public static GameObject CreatePreviewGameObject(Mesh m, Material mat, Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x8912C0", Offset = "0x8912C0", VA = "0x8912C0")]
		public static Camera CreatePreviewCamera(GameObject target, float distance, float padding)
		{
			return null;
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x8915F8", Offset = "0x8915F8", VA = "0x8915F8")]
		public static void EnsureDirectoryExists(string dir)
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x891634", Offset = "0x891634", VA = "0x891634")]
		public static void SetStaticRecursively(GameObject g, bool isStatic)
		{
		}

		[Token(Token = "0x6000BC8")]
		public static void EnsureLengthSufficient<T>(List<T> list, int preferredLength) where T : UnityEngine.Object
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x891638", Offset = "0x891638", VA = "0x891638")]
		public static void EnsureLengthSufficient(List<string> list, int preferredLength)
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x8916F4", Offset = "0x8916F4", VA = "0x8916F4")]
		public static void EnsureLengthSufficient(List<bool> list, int preferredLength)
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x8917A0", Offset = "0x8917A0", VA = "0x8917A0")]
		public static string Ellipsis(string s, int length)
		{
			return null;
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x88A1D8", Offset = "0x88A1D8", VA = "0x88A1D8")]
		public static bool IsRectContainPointExclusive(Rect r, Vector2 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x891834", Offset = "0x891834", VA = "0x891834")]
		public static Color GetColor(Color baseColor, float alpha)
		{
			return default(Color);
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x891868", Offset = "0x891868", VA = "0x891868")]
		public static Rect GetRectContainsPoints(params Vector2[] points)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x891914", Offset = "0x891914", VA = "0x891914")]
		public static float InverseLerpUnclamped(float a, float b, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x891934", Offset = "0x891934", VA = "0x891934")]
		public static Vector2 PointToNormalizedUnclampled(Rect r, Vector2 point)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x891A48", Offset = "0x891A48", VA = "0x891A48")]
		public static Rect GetUvRect(Vector2 v0, Vector2 v1, Vector2 v2)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x891C0C", Offset = "0x891C0C", VA = "0x891C0C")]
		public static Gradient Clone(Gradient src)
		{
			return null;
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x891CB8", Offset = "0x891CB8", VA = "0x891CB8")]
		public static AnimationCurve Clone(AnimationCurve src)
		{
			return null;
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x891E04", Offset = "0x891E04", VA = "0x891E04")]
		public static bool IsPointInsideQuadXZ(Vector3 point, Vector3[] quad)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x892064", Offset = "0x892064", VA = "0x892064")]
		public static void DestroyMeshArray(Mesh[] meshes)
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x892168", Offset = "0x892168", VA = "0x892168")]
		public static Vector2 FlipY(Vector2 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x89219C", Offset = "0x89219C", VA = "0x89219C")]
		public static bool IsPointInCircumcircle(Vector2 v0, Vector2 v1, Vector2 v2, Vector2 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x892308", Offset = "0x892308", VA = "0x892308")]
		public static bool IsPointInCircumcircleXZ(Vector3 v0, Vector3 v1, Vector3 v2, Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x892478", Offset = "0x892478", VA = "0x892478")]
		public static bool AreSetEqual(ushort[] setA, ushort[] setB)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDA")]
		public static void AddIfNotContains<T>(this IList<T> list, IEnumerable<T> items)
		{
		}

		[Token(Token = "0x6000BDB")]
		public static void AddIfNotContains<T>(this IList<T> list, T item)
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x892528", Offset = "0x892528", VA = "0x892528")]
		public static Vector3 ToX0Y(this Vector2 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x892564", Offset = "0x892564", VA = "0x892564")]
		public static Vector3 Mul(this Vector3 v0, Vector3 v1)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200018F")]
	public static class GVersionInfo
	{
		[Token(Token = "0x170001B5")]
		public static float Number
		{
			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0x88C1DC", Offset = "0x88C1DC", VA = "0x88C1DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B6")]
		public static string Code
		{
			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0x8925FC", Offset = "0x8925FC", VA = "0x8925FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		public static string ProductName
		{
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x892644", Offset = "0x892644", VA = "0x892644")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B8")]
		public static string ProductNameAndVersion
		{
			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0x89268C", Offset = "0x89268C", VA = "0x89268C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		public static string ProductNameShort
		{
			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0x89273C", Offset = "0x89273C", VA = "0x89273C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BA")]
		public static string ProductNameAndVersionShort
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x892784", Offset = "0x892784", VA = "0x892784")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x2000190")]
	[ExecuteInEditMode]
	public class GWindZone : MonoBehaviour
	{
		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<GWindZone> activeWindZoneSet;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float directionX;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float directionZ;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float spread;

		[Token(Token = "0x170001BB")]
		private static HashSet<GWindZone> ActiveWindZoneSet
		{
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0x892834", Offset = "0x892834", VA = "0x892834")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		public static IEnumerable<GWindZone> ActiveWindZones
		{
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0x8928C4", Offset = "0x8928C4", VA = "0x8928C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		public float DirectionX
		{
			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0x8928C8", Offset = "0x8928C8", VA = "0x8928C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BE8")]
			[Address(RVA = "0x8928D0", Offset = "0x8928D0", VA = "0x8928D0")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public float DirectionZ
		{
			[Token(Token = "0x6000BE9")]
			[Address(RVA = "0x8928D8", Offset = "0x8928D8", VA = "0x8928D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BEA")]
			[Address(RVA = "0x8928E0", Offset = "0x8928E0", VA = "0x8928E0")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public float Speed
		{
			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0x8928E8", Offset = "0x8928E8", VA = "0x8928E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0x8928F0", Offset = "0x8928F0", VA = "0x8928F0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public float Spread
		{
			[Token(Token = "0x6000BED")]
			[Address(RVA = "0x8928F8", Offset = "0x8928F8", VA = "0x8928F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0x892900", Offset = "0x892900", VA = "0x892900")]
			set
			{
			}
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x892908", Offset = "0x892908", VA = "0x892908")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x892918", Offset = "0x892918", VA = "0x892918")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x892974", Offset = "0x892974", VA = "0x892974")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x8929D0", Offset = "0x8929D0", VA = "0x8929D0")]
		public Vector4 GetWindParams()
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x892A38", Offset = "0x892A38", VA = "0x892A38")]
		public void SyncTransform()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x892B30", Offset = "0x892B30", VA = "0x892B30")]
		public void SyncDirection()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x892C44", Offset = "0x892C44", VA = "0x892C44")]
		public GWindZone()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000191")]
	public struct GWizardMaterialTemplate
	{
		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GRenderPipelineType pipeline;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private GLightingModel lightingModel;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private GTexturingModel texturingModel;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private GSplatsModel splatsModel;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Material material;

		[Token(Token = "0x170001C1")]
		public GRenderPipelineType Pipeline
		{
			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0x5E8950", Offset = "0x5E8950", VA = "0x5E8950")]
			get
			{
				return default(GRenderPipelineType);
			}
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0x5E8958", Offset = "0x5E8958", VA = "0x5E8958")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public GLightingModel LightingModel
		{
			[Token(Token = "0x6000BF8")]
			[Address(RVA = "0x5E8960", Offset = "0x5E8960", VA = "0x5E8960")]
			get
			{
				return default(GLightingModel);
			}
			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0x5E8968", Offset = "0x5E8968", VA = "0x5E8968")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public GTexturingModel TexturingModel
		{
			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0x5E8970", Offset = "0x5E8970", VA = "0x5E8970")]
			get
			{
				return default(GTexturingModel);
			}
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0x5E8978", Offset = "0x5E8978", VA = "0x5E8978")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public GSplatsModel SplatsModel
		{
			[Token(Token = "0x6000BFC")]
			[Address(RVA = "0x5E8980", Offset = "0x5E8980", VA = "0x5E8980")]
			get
			{
				return default(GSplatsModel);
			}
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0x5E8988", Offset = "0x5E8988", VA = "0x5E8988")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public Material Material
		{
			[Token(Token = "0x6000BFE")]
			[Address(RVA = "0x5E8990", Offset = "0x5E8990", VA = "0x5E8990")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0x5E8998", Offset = "0x5E8998", VA = "0x5E8998")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000192")]
	public class GFpsCounter : MonoBehaviour
	{
		[Token(Token = "0x2000345")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F9A0", Offset = "0x56F9A0")]
		private sealed class <ResetCounter>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float period;

			[Token(Token = "0x17000649")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CA5")]
				[Address(RVA = "0xA83DDC", Offset = "0xA83DDC", VA = "0xA83DDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700064A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CA7")]
				[Address(RVA = "0xA83E44", Offset = "0xA83E44", VA = "0xA83E44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CA2")]
			[Address(RVA = "0xA83C74", Offset = "0xA83C74", VA = "0xA83C74")]
			[DebuggerHidden]
			public <ResetCounter>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0xA83D08", Offset = "0xA83D08", VA = "0xA83D08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0xA83D0C", Offset = "0xA83D0C", VA = "0xA83D0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0xA83DE4", Offset = "0xA83DE4", VA = "0xA83DE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float msec;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float fps;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float maxFps;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float minFps;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool showFPS;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text text;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float deltaTime;

		[Token(Token = "0x170001C6")]
		public static float avgFps
		{
			[Token(Token = "0x6000C00")]
			[Address(RVA = "0xA838EC", Offset = "0xA838EC", VA = "0xA838EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xA83960", Offset = "0xA83960", VA = "0xA83960")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xA83A08", Offset = "0xA83A08", VA = "0xA83A08")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xA83990", Offset = "0xA83990", VA = "0xA83990")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57C054", Offset = "0x57C054")]
		public IEnumerator ResetCounter(float period)
		{
			return null;
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xA83CA0", Offset = "0xA83CA0", VA = "0xA83CA0")]
		public GFpsCounter()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class GRuntimeTexturePainter : MonoBehaviour
	{
		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GTerrainTexturePainter painter;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject cursorPrefab;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private KeyCode alternativeKey;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private KeyCode negativeKey;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Dropdown modeDropdown;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Slider redSlider;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Slider greenSlider;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Slider blueSlider;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Slider alphaSlider;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image colorImage;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Slider radiusSlider;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Slider opacitySlider;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button resetButton;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Text logText;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject cursorInstance;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<string> logs;

		[Token(Token = "0x170001C7")]
		public GTerrainTexturePainter Painter
		{
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0x7F8308", Offset = "0x7F8308", VA = "0x7F8308")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0x7F8310", Offset = "0x7F8310", VA = "0x7F8310")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public GameObject CursorPrefab
		{
			[Token(Token = "0x6000C08")]
			[Address(RVA = "0x7F8318", Offset = "0x7F8318", VA = "0x7F8318")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C09")]
			[Address(RVA = "0x7F8320", Offset = "0x7F8320", VA = "0x7F8320")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public KeyCode AlternativeKey
		{
			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0x7F8328", Offset = "0x7F8328", VA = "0x7F8328")]
			get
			{
				return default(KeyCode);
			}
			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0x7F8330", Offset = "0x7F8330", VA = "0x7F8330")]
			set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public KeyCode NegativeKey
		{
			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0x7F8338", Offset = "0x7F8338", VA = "0x7F8338")]
			get
			{
				return default(KeyCode);
			}
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0x7F8340", Offset = "0x7F8340", VA = "0x7F8340")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public Dropdown ModeDropdown
		{
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0x7F8348", Offset = "0x7F8348", VA = "0x7F8348")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0x7F8350", Offset = "0x7F8350", VA = "0x7F8350")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public Slider RedSlider
		{
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x7F8358", Offset = "0x7F8358", VA = "0x7F8358")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x7F8360", Offset = "0x7F8360", VA = "0x7F8360")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public Slider GreenSlider
		{
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0x7F8368", Offset = "0x7F8368", VA = "0x7F8368")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C13")]
			[Address(RVA = "0x7F8370", Offset = "0x7F8370", VA = "0x7F8370")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public Slider BlueSlider
		{
			[Token(Token = "0x6000C14")]
			[Address(RVA = "0x7F8378", Offset = "0x7F8378", VA = "0x7F8378")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0x7F8380", Offset = "0x7F8380", VA = "0x7F8380")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public Slider AlphaSlider
		{
			[Token(Token = "0x6000C16")]
			[Address(RVA = "0x7F8388", Offset = "0x7F8388", VA = "0x7F8388")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C17")]
			[Address(RVA = "0x7F8390", Offset = "0x7F8390", VA = "0x7F8390")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public Image ColorImage
		{
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0x7F8398", Offset = "0x7F8398", VA = "0x7F8398")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0x7F83A0", Offset = "0x7F83A0", VA = "0x7F83A0")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public Slider RadiusSlider
		{
			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0x7F83A8", Offset = "0x7F83A8", VA = "0x7F83A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0x7F83B0", Offset = "0x7F83B0", VA = "0x7F83B0")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public Slider OpacitySlider
		{
			[Token(Token = "0x6000C1C")]
			[Address(RVA = "0x7F83B8", Offset = "0x7F83B8", VA = "0x7F83B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0x7F83C0", Offset = "0x7F83C0", VA = "0x7F83C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public Button ResetButton
		{
			[Token(Token = "0x6000C1E")]
			[Address(RVA = "0x7F83C8", Offset = "0x7F83C8", VA = "0x7F83C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0x7F83D0", Offset = "0x7F83D0", VA = "0x7F83D0")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public Text LogText
		{
			[Token(Token = "0x6000C20")]
			[Address(RVA = "0x7F83D8", Offset = "0x7F83D8", VA = "0x7F83D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0x7F83E0", Offset = "0x7F83E0", VA = "0x7F83E0")]
			set
			{
			}
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x7F83E8", Offset = "0x7F83E8", VA = "0x7F83E8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x7F844C", Offset = "0x7F844C", VA = "0x7F844C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x7F8544", Offset = "0x7F8544", VA = "0x7F8544")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x7F8620", Offset = "0x7F8620", VA = "0x7F8620")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x7F88B0", Offset = "0x7F88B0", VA = "0x7F88B0")]
		private void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x7F8E50", Offset = "0x7F8E50", VA = "0x7F8E50")]
		private void DrawCursor(RaycastHit hit, bool isHit)
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x7F9080", Offset = "0x7F9080", VA = "0x7F9080")]
		private void Paint(RaycastHit hit)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x7F92B8", Offset = "0x7F92B8", VA = "0x7F92B8")]
		private void OnResetButtonClicked()
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x7F9214", Offset = "0x7F9214", VA = "0x7F9214")]
		private void ShowLogs()
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x7F94B8", Offset = "0x7F94B8", VA = "0x7F94B8")]
		public GRuntimeTexturePainter()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class GTakeScreenshot : MonoBehaviour
	{
		[Token(Token = "0x2000346")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F9B0", Offset = "0x56F9B0")]
		private sealed class <CrTakeScreenshot>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GTakeScreenshot <>4__this;

			[Token(Token = "0x4001A42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Texture2D <texture>5__2;

			[Token(Token = "0x1700064B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CAB")]
				[Address(RVA = "0x80A0B0", Offset = "0x80A0B0", VA = "0x80A0B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700064C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CAD")]
				[Address(RVA = "0x80A118", Offset = "0x80A118", VA = "0x80A118", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0x809AC0", Offset = "0x809AC0", VA = "0x809AC0")]
			[DebuggerHidden]
			public <CrTakeScreenshot>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0x809AF4", Offset = "0x809AF4", VA = "0x809AF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0x809AF8", Offset = "0x809AF8", VA = "0x809AF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0x80A0B8", Offset = "0x80A0B8", VA = "0x80A0B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private KeyCode hotKey;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string fileNamePrefix;

		[Token(Token = "0x170001D5")]
		public KeyCode HotKey
		{
			[Token(Token = "0x6000C2C")]
			[Address(RVA = "0x80998C", Offset = "0x80998C", VA = "0x80998C")]
			get
			{
				return default(KeyCode);
			}
			[Token(Token = "0x6000C2D")]
			[Address(RVA = "0x809994", Offset = "0x809994", VA = "0x809994")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public string FileNamePrefix
		{
			[Token(Token = "0x6000C2E")]
			[Address(RVA = "0x80999C", Offset = "0x80999C", VA = "0x80999C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0x8099A4", Offset = "0x8099A4", VA = "0x8099A4")]
			set
			{
			}
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x8099AC", Offset = "0x8099AC", VA = "0x8099AC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x809A04", Offset = "0x809A04", VA = "0x809A04")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x809A50", Offset = "0x809A50", VA = "0x809A50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57C0B8", Offset = "0x57C0B8")]
		private IEnumerator CrTakeScreenshot()
		{
			return null;
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x809AEC", Offset = "0x809AEC", VA = "0x809AEC")]
		public GTakeScreenshot()
		{
		}
	}
}
namespace Pinwheel.Griffin.Debugging
{
	[Token(Token = "0x2000195")]
	public static class GDebug
	{
		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stopwatch st;

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x866A70", Offset = "0x866A70", VA = "0x866A70")]
		public static void StartStopwatch()
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x866AE4", Offset = "0x866AE4", VA = "0x866AE4")]
		public static void EndStopwatch()
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x866B58", Offset = "0x866B58", VA = "0x866B58")]
		public static void LogStopwatchTimeMilis()
		{
		}
	}
}
namespace Pinwheel.Griffin.TextureTool
{
	[Serializable]
	[Token(Token = "0x2000196")]
	public struct GGeneralParams
	{
		[Token(Token = "0x4000E43")]
		public const string DEFAULT_DIRECTORY = "Assets/Polaris V2 Exported/";

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GTextureGenerationMode mode;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private int resolution;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private GImageFileExtension extension;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private bool useHighPrecisionTexture;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string directory;

		[Token(Token = "0x170001D7")]
		public GTextureGenerationMode Mode
		{
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0x5ED708", Offset = "0x5ED708", VA = "0x5ED708")]
			get
			{
				return default(GTextureGenerationMode);
			}
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0x5ED710", Offset = "0x5ED710", VA = "0x5ED710")]
			set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public int Resolution
		{
			[Token(Token = "0x6000C3A")]
			[Address(RVA = "0x5ED718", Offset = "0x5ED718", VA = "0x5ED718")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0x5ED720", Offset = "0x5ED720", VA = "0x5ED720")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public GImageFileExtension Extension
		{
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0x5ED728", Offset = "0x5ED728", VA = "0x5ED728")]
			get
			{
				return default(GImageFileExtension);
			}
			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0x5ED730", Offset = "0x5ED730", VA = "0x5ED730")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public bool UseHighPrecisionTexture
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0x5ED738", Offset = "0x5ED738", VA = "0x5ED738")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0x5ED740", Offset = "0x5ED740", VA = "0x5ED740")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public string Directory
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x5ED74C", Offset = "0x5ED74C", VA = "0x5ED74C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C41")]
			[Address(RVA = "0x5ED754", Offset = "0x5ED754", VA = "0x5ED754")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000197")]
	public enum GImageFileExtension
	{
		[Token(Token = "0x4000E4A")]
		PNG,
		[Token(Token = "0x4000E4B")]
		JPG,
		[Token(Token = "0x4000E4C")]
		EXR,
		[Token(Token = "0x4000E4D")]
		TGA
	}
	[Token(Token = "0x2000198")]
	public enum GLivePreviewMode
	{
		[Token(Token = "0x4000E4F")]
		Mask,
		[Token(Token = "0x4000E50")]
		ColorMap,
		[Token(Token = "0x4000E51")]
		Geometry
	}
	[Serializable]
	[Token(Token = "0x2000199")]
	public struct GLivePreviewParams
	{
		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool enable;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private GStylizedTerrain terrain;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Color color;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GLivePreviewMode mode;

		[Token(Token = "0x170001DC")]
		public bool Enable
		{
			[Token(Token = "0x6000C42")]
			[Address(RVA = "0x5EDA1C", Offset = "0x5EDA1C", VA = "0x5EDA1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C43")]
			[Address(RVA = "0x5EDA24", Offset = "0x5EDA24", VA = "0x5EDA24")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public GStylizedTerrain Terrain
		{
			[Token(Token = "0x6000C44")]
			[Address(RVA = "0x5EDA30", Offset = "0x5EDA30", VA = "0x5EDA30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C45")]
			[Address(RVA = "0x5EDA38", Offset = "0x5EDA38", VA = "0x5EDA38")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public Color Color
		{
			[Token(Token = "0x6000C46")]
			[Address(RVA = "0x5EDA40", Offset = "0x5EDA40", VA = "0x5EDA40")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0x5EDA4C", Offset = "0x5EDA4C", VA = "0x5EDA4C")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public GLivePreviewMode Mode
		{
			[Token(Token = "0x6000C48")]
			[Address(RVA = "0x5EDA58", Offset = "0x5EDA58", VA = "0x5EDA58")]
			get
			{
				return default(GLivePreviewMode);
			}
			[Token(Token = "0x6000C49")]
			[Address(RVA = "0x5EDA60", Offset = "0x5EDA60", VA = "0x5EDA60")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200019A")]
	public class GTextureToolParams : ScriptableObject
	{
		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GTextureToolParams instance;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GGeneralParams general;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GLivePreviewParams livePreview;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GHeightMapGeneratorParams heightMap;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GHeightMapFromMeshGeneratorParams heightMapFromMesh;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GNormalMapGeneratorParams normalMap;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GSteepnessMapGeneratorParams steepness;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GNoiseMapGeneratorParams noise;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GColorMapGeneratorParams colorMap;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private GBlendMapGeneratorParams blend;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private GFoliageDistributionMapGeneratorParams treeDistribution;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private List<GTextureFilterLayer> filters;

		[Token(Token = "0x170001E0")]
		public static GTextureToolParams Instance
		{
			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0x991CF0", Offset = "0x991CF0", VA = "0x991CF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		public GGeneralParams General
		{
			[Token(Token = "0x6000C4B")]
			[Address(RVA = "0x997DC8", Offset = "0x997DC8", VA = "0x997DC8")]
			get
			{
				return default(GGeneralParams);
			}
			[Token(Token = "0x6000C4C")]
			[Address(RVA = "0x997DDC", Offset = "0x997DDC", VA = "0x997DDC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public GLivePreviewParams LivePreview
		{
			[Token(Token = "0x6000C4D")]
			[Address(RVA = "0x997DF0", Offset = "0x997DF0", VA = "0x997DF0")]
			get
			{
				return default(GLivePreviewParams);
			}
			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0x997E04", Offset = "0x997E04", VA = "0x997E04")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public GHeightMapGeneratorParams HeightMap
		{
			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0x997E18", Offset = "0x997E18", VA = "0x997E18")]
			get
			{
				return default(GHeightMapGeneratorParams);
			}
			[Token(Token = "0x6000C50")]
			[Address(RVA = "0x997E24", Offset = "0x997E24", VA = "0x997E24")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public GHeightMapFromMeshGeneratorParams HeightMapFromMesh
		{
			[Token(Token = "0x6000C51")]
			[Address(RVA = "0x997E2C", Offset = "0x997E2C", VA = "0x997E2C")]
			get
			{
				return default(GHeightMapFromMeshGeneratorParams);
			}
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x997E4C", Offset = "0x997E4C", VA = "0x997E4C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public GNormalMapGeneratorParams NormalMap
		{
			[Token(Token = "0x6000C53")]
			[Address(RVA = "0x997E6C", Offset = "0x997E6C", VA = "0x997E6C")]
			get
			{
				return default(GNormalMapGeneratorParams);
			}
			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x997E78", Offset = "0x997E78", VA = "0x997E78")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public GSteepnessMapGeneratorParams Steepness
		{
			[Token(Token = "0x6000C55")]
			[Address(RVA = "0x997E80", Offset = "0x997E80", VA = "0x997E80")]
			get
			{
				return default(GSteepnessMapGeneratorParams);
			}
			[Token(Token = "0x6000C56")]
			[Address(RVA = "0x997E8C", Offset = "0x997E8C", VA = "0x997E8C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public GNoiseMapGeneratorParams Noise
		{
			[Token(Token = "0x6000C57")]
			[Address(RVA = "0x997E94", Offset = "0x997E94", VA = "0x997E94")]
			get
			{
				return default(GNoiseMapGeneratorParams);
			}
			[Token(Token = "0x6000C58")]
			[Address(RVA = "0x997EA0", Offset = "0x997EA0", VA = "0x997EA0")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public GColorMapGeneratorParams ColorMap
		{
			[Token(Token = "0x6000C59")]
			[Address(RVA = "0x997EAC", Offset = "0x997EAC", VA = "0x997EAC")]
			get
			{
				return default(GColorMapGeneratorParams);
			}
			[Token(Token = "0x6000C5A")]
			[Address(RVA = "0x997EB4", Offset = "0x997EB4", VA = "0x997EB4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public GBlendMapGeneratorParams Blend
		{
			[Token(Token = "0x6000C5B")]
			[Address(RVA = "0x997EBC", Offset = "0x997EBC", VA = "0x997EBC")]
			get
			{
				return default(GBlendMapGeneratorParams);
			}
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0x997EC4", Offset = "0x997EC4", VA = "0x997EC4")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public GFoliageDistributionMapGeneratorParams TreeDistribution
		{
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0x997ECC", Offset = "0x997ECC", VA = "0x997ECC")]
			get
			{
				return default(GFoliageDistributionMapGeneratorParams);
			}
			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0x997EE0", Offset = "0x997EE0", VA = "0x997EE0")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public List<GTextureFilterLayer> Filters
		{
			[Token(Token = "0x6000C5F")]
			[Address(RVA = "0x997EF4", Offset = "0x997EF4", VA = "0x997EF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C60")]
			[Address(RVA = "0x997F68", Offset = "0x997F68", VA = "0x997F68")]
			set
			{
			}
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x997F70", Offset = "0x997F70", VA = "0x997F70")]
		public GTextureToolParams()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class GBlurFilter : IGTextureFilter
	{
		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RenderTexture bgRt;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material mat;

		[Token(Token = "0x170001EC")]
		private static Material Mat
		{
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0x991E88", Offset = "0x991E88", VA = "0x991E88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x991F68", Offset = "0x991F68", VA = "0x991F68", Slot = "4")]
		public void Apply(RenderTexture targetRt, GTextureFilterParams param)
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x99202C", Offset = "0x99202C", VA = "0x99202C")]
		private RenderTexture CloneBg(RenderTexture targetRt)
		{
			return null;
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x992228", Offset = "0x992228", VA = "0x992228")]
		public GBlurFilter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019C")]
	public struct GBlurParams
	{
		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int radius;

		[Token(Token = "0x170001ED")]
		public int Radius
		{
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0x5ED3DC", Offset = "0x5ED3DC", VA = "0x5ED3DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C67")]
			[Address(RVA = "0x5ED3E4", Offset = "0x5ED3E4", VA = "0x5ED3E4")]
			set
			{
			}
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x9922BC", Offset = "0x9922BC", VA = "0x9922BC")]
		public static GBlurParams Create()
		{
			return default(GBlurParams);
		}
	}
	[Token(Token = "0x200019D")]
	public class GCurveFilter : IGTextureFilter
	{
		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RenderTexture bgRt;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material mat;

		[Token(Token = "0x170001EE")]
		private static Material Mat
		{
			[Token(Token = "0x6000C69")]
			[Address(RVA = "0x992878", Offset = "0x992878", VA = "0x992878")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x992958", Offset = "0x992958", VA = "0x992958", Slot = "4")]
		public void Apply(RenderTexture targetRt, GTextureFilterParams param)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x992C48", Offset = "0x992C48", VA = "0x992C48")]
		private RenderTexture CloneBg(RenderTexture targetRt)
		{
			return null;
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x992F70", Offset = "0x992F70", VA = "0x992F70")]
		public GCurveFilter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019E")]
	public struct GCurveParams
	{
		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AnimationCurve masterCurve;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private AnimationCurve redCurve;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private AnimationCurve greenCurve;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationCurve blueCurve;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve alphaCurve;

		[Token(Token = "0x170001EF")]
		public AnimationCurve MasterCurve
		{
			[Token(Token = "0x6000C6D")]
			[Address(RVA = "0x5ED438", Offset = "0x5ED438", VA = "0x5ED438")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0x5ED474", Offset = "0x5ED474", VA = "0x5ED474")]
			set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public AnimationCurve RedCurve
		{
			[Token(Token = "0x6000C6F")]
			[Address(RVA = "0x5ED47C", Offset = "0x5ED47C", VA = "0x5ED47C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C70")]
			[Address(RVA = "0x5ED4B8", Offset = "0x5ED4B8", VA = "0x5ED4B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public AnimationCurve GreenCurve
		{
			[Token(Token = "0x6000C71")]
			[Address(RVA = "0x5ED4C0", Offset = "0x5ED4C0", VA = "0x5ED4C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C72")]
			[Address(RVA = "0x5ED4FC", Offset = "0x5ED4FC", VA = "0x5ED4FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public AnimationCurve BlueCurve
		{
			[Token(Token = "0x6000C73")]
			[Address(RVA = "0x5ED504", Offset = "0x5ED504", VA = "0x5ED504")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0x5ED540", Offset = "0x5ED540", VA = "0x5ED540")]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public AnimationCurve AlphaCurve
		{
			[Token(Token = "0x6000C75")]
			[Address(RVA = "0x5ED548", Offset = "0x5ED548", VA = "0x5ED548")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0x5ED584", Offset = "0x5ED584", VA = "0x5ED584")]
			set
			{
			}
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x992FA0", Offset = "0x992FA0", VA = "0x992FA0")]
		public static GCurveParams Create()
		{
			return default(GCurveParams);
		}
	}
	[Token(Token = "0x200019F")]
	public class GHydraulicErosionFilter : IGTextureFilter
	{
		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RenderTexture bgRt0;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static RenderTexture bgRt1;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Material mat;

		[Token(Token = "0x170001F4")]
		private static Material Mat
		{
			[Token(Token = "0x6000C78")]
			[Address(RVA = "0x994E80", Offset = "0x994E80", VA = "0x994E80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x994F60", Offset = "0x994F60", VA = "0x994F60", Slot = "4")]
		public void Apply(RenderTexture targetRt, GTextureFilterParams param)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x9952C8", Offset = "0x9952C8", VA = "0x9952C8")]
		private void CloneBg(RenderTexture targetRt, out RenderTexture bg0, out RenderTexture bg1)
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x99560C", Offset = "0x99560C", VA = "0x99560C")]
		public GHydraulicErosionFilter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A0")]
	public struct GHydraulicErosionParams
	{
		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int iteration;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private float rain;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private float transportation;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private float angleMin;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float evaporation;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Vector3 dimension;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture2D waterSourceMap;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Texture2D hardnessMap;

		[Token(Token = "0x170001F5")]
		public int Iteration
		{
			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0x5ED89C", Offset = "0x5ED89C", VA = "0x5ED89C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0x5ED8A4", Offset = "0x5ED8A4", VA = "0x5ED8A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public float Rain
		{
			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0x5ED8AC", Offset = "0x5ED8AC", VA = "0x5ED8AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C7F")]
			[Address(RVA = "0x5ED8B4", Offset = "0x5ED8B4", VA = "0x5ED8B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public float Transportation
		{
			[Token(Token = "0x6000C80")]
			[Address(RVA = "0x5ED8BC", Offset = "0x5ED8BC", VA = "0x5ED8BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C81")]
			[Address(RVA = "0x5ED8C4", Offset = "0x5ED8C4", VA = "0x5ED8C4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public float AngleMin
		{
			[Token(Token = "0x6000C82")]
			[Address(RVA = "0x5ED8CC", Offset = "0x5ED8CC", VA = "0x5ED8CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C83")]
			[Address(RVA = "0x5ED8D4", Offset = "0x5ED8D4", VA = "0x5ED8D4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public float Evaporation
		{
			[Token(Token = "0x6000C84")]
			[Address(RVA = "0x5ED8DC", Offset = "0x5ED8DC", VA = "0x5ED8DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C85")]
			[Address(RVA = "0x5ED8E4", Offset = "0x5ED8E4", VA = "0x5ED8E4")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public Vector3 Dimension
		{
			[Token(Token = "0x6000C86")]
			[Address(RVA = "0x5ED8EC", Offset = "0x5ED8EC", VA = "0x5ED8EC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000C87")]
			[Address(RVA = "0x5ED8F8", Offset = "0x5ED8F8", VA = "0x5ED8F8")]
			set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public Texture2D WaterSourceMap
		{
			[Token(Token = "0x6000C88")]
			[Address(RVA = "0x5ED904", Offset = "0x5ED904", VA = "0x5ED904")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C89")]
			[Address(RVA = "0x5ED90C", Offset = "0x5ED90C", VA = "0x5ED90C")]
			set
			{
			}
		}

		[Token(Token = "0x170001FC")]
		public Texture2D HardnessMap
		{
			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0x5ED914", Offset = "0x5ED914", VA = "0x5ED914")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0x5ED91C", Offset = "0x5ED91C", VA = "0x5ED91C")]
			set
			{
			}
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x9958F0", Offset = "0x9958F0", VA = "0x9958F0")]
		public static GHydraulicErosionParams Create()
		{
			return default(GHydraulicErosionParams);
		}
	}
	[Token(Token = "0x20001A1")]
	public class GInvertFilter : IGTextureFilter
	{
		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RenderTexture bgRt;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material mat;

		[Token(Token = "0x170001FD")]
		private static Material Mat
		{
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0x9959D0", Offset = "0x9959D0", VA = "0x9959D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x995AB0", Offset = "0x995AB0", VA = "0x995AB0", Slot = "4")]
		public void Apply(RenderTexture targetRt, GTextureFilterParams param)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x995C08", Offset = "0x995C08", VA = "0x995C08")]
		private RenderTexture CloneBg(RenderTexture targetRt)
		{
			return null;
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x995E04", Offset = "0x995E04", VA = "0x995E04")]
		public GInvertFilter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A2")]
	public struct GInvertParams
	{
		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool invertRed;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		[SerializeField]
		private bool invertGreen;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		[SerializeField]
		private bool invertBlue;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		[SerializeField]
		private bool invertAlpha;

		[Token(Token = "0x170001FE")]
		public bool InvertRed
		{
			[Token(Token = "0x6000C91")]
			[Address(RVA = "0x5ED990", Offset = "0x5ED990", VA = "0x5ED990")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C92")]
			[Address(RVA = "0x5ED998", Offset = "0x5ED998", VA = "0x5ED998")]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public bool InvertGreen
		{
			[Token(Token = "0x6000C93")]
			[Address(RVA = "0x5ED9A4", Offset = "0x5ED9A4", VA = "0x5ED9A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C94")]
			[Address(RVA = "0x5ED9AC", Offset = "0x5ED9AC", VA = "0x5ED9AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public bool InvertBlue
		{
			[Token(Token = "0x6000C95")]
			[Address(RVA = "0x5ED9B8", Offset = "0x5ED9B8", VA = "0x5ED9B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C96")]
			[Address(RVA = "0x5ED9C0", Offset = "0x5ED9C0", VA = "0x5ED9C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public bool InvertAlpha
		{
			[Token(Token = "0x6000C97")]
			[Address(RVA = "0x5ED9CC", Offset = "0x5ED9CC", VA = "0x5ED9CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C98")]
			[Address(RVA = "0x5ED9D4", Offset = "0x5ED9D4", VA = "0x5ED9D4")]
			set
			{
			}
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x995E5C", Offset = "0x995E5C", VA = "0x995E5C")]
		public static GInvertParams Create()
		{
			return default(GInvertParams);
		}
	}
	[Token(Token = "0x20001A3")]
	public class GStepFilter : IGTextureFilter
	{
		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RenderTexture bgRt;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material mat;

		[Token(Token = "0x17000202")]
		private static Material Mat
		{
			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0x997310", Offset = "0x997310", VA = "0x997310")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x9973F0", Offset = "0x9973F0", VA = "0x9973F0", Slot = "4")]
		public void Apply(RenderTexture targetRt, GTextureFilterParams param)
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x9974D4", Offset = "0x9974D4", VA = "0x9974D4")]
		private RenderTexture CloneBg(RenderTexture targetRt)
		{
			return null;
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x9976D0", Offset = "0x9976D0", VA = "0x9976D0")]
		public GStepFilter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A4")]
	public struct GStepParams
	{
		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int count;

		[Token(Token = "0x17000203")]
		public int Count
		{
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x5EDBA0", Offset = "0x5EDBA0", VA = "0x5EDBA0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C9F")]
			[Address(RVA = "0x5EDBA8", Offset = "0x5EDBA8", VA = "0x5EDBA8")]
			set
			{
			}
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x997764", Offset = "0x997764", VA = "0x997764")]
		public static GStepParams Create()
		{
			return default(GStepParams);
		}
	}
	[Serializable]
	[Token(Token = "0x20001A5")]
	public class GTextureFilterLayer
	{
		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool enabled;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private GTextureFilterType type;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GTextureFilterParams param;

		[Token(Token = "0x17000204")]
		public bool Enabled
		{
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0x997790", Offset = "0x997790", VA = "0x997790")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0x997798", Offset = "0x997798", VA = "0x997798")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public GTextureFilterType Type
		{
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0x9977A4", Offset = "0x9977A4", VA = "0x9977A4")]
			get
			{
				return default(GTextureFilterType);
			}
		}

		[Token(Token = "0x17000206")]
		public GTextureFilterParams Param
		{
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0x9977AC", Offset = "0x9977AC", VA = "0x9977AC")]
			get
			{
				return default(GTextureFilterParams);
			}
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0x9977BC", Offset = "0x9977BC", VA = "0x9977BC")]
			set
			{
			}
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x9977D8", Offset = "0x9977D8", VA = "0x9977D8")]
		private GTextureFilterLayer()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x997808", Offset = "0x997808", VA = "0x997808")]
		public GTextureFilterLayer(GTextureFilterType t)
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x997958", Offset = "0x997958", VA = "0x997958")]
		public void Apply(RenderTexture targetRt)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A6")]
	public struct GTextureFilterParams
	{
		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GBlurParams blur;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private GCurveParams curve;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GInvertParams invert;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private GStepParams step;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GWarpParams warp;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GHydraulicErosionParams hydraulicErosion;

		[Token(Token = "0x17000207")]
		public static GTextureFilterParams Default
		{
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0x99785C", Offset = "0x99785C", VA = "0x99785C")]
			get
			{
				return default(GTextureFilterParams);
			}
		}

		[Token(Token = "0x17000208")]
		public GBlurParams Blur
		{
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0x5EDBEC", Offset = "0x5EDBEC", VA = "0x5EDBEC")]
			get
			{
				return default(GBlurParams);
			}
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x5EDBF4", Offset = "0x5EDBF4", VA = "0x5EDBF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000209")]
		public GCurveParams Curve
		{
			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0x5EDBFC", Offset = "0x5EDBFC", VA = "0x5EDBFC")]
			get
			{
				return default(GCurveParams);
			}
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0x5EDC14", Offset = "0x5EDC14", VA = "0x5EDC14")]
			set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		public GInvertParams Invert
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0x5EDC2C", Offset = "0x5EDC2C", VA = "0x5EDC2C")]
			get
			{
				return default(GInvertParams);
			}
			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0x5EDC34", Offset = "0x5EDC34", VA = "0x5EDC34")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public GStepParams Step
		{
			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0x5EDC3C", Offset = "0x5EDC3C", VA = "0x5EDC3C")]
			get
			{
				return default(GStepParams);
			}
			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0x5EDC44", Offset = "0x5EDC44", VA = "0x5EDC44")]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public GWarpParams Warp
		{
			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0x5EDC4C", Offset = "0x5EDC4C", VA = "0x5EDC4C")]
			get
			{
				return default(GWarpParams);
			}
			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0x5EDC60", Offset = "0x5EDC60", VA = "0x5EDC60")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public GHydraulicErosionParams HydraulicErosion
		{
			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0x5EDC74", Offset = "0x5EDC74", VA = "0x5EDC74")]
			get
			{
				return default(GHydraulicErosionParams);
			}
			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0x5EDC88", Offset = "0x5EDC88", VA = "0x5EDC88")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001A7")]
	public enum GTextureFilterType
	{
		[Token(Token = "0x4000E8A")]
		Curve,
		[Token(Token = "0x4000E8B")]
		Blur,
		[Token(Token = "0x4000E8C")]
		Invert,
		[Token(Token = "0x4000E8D")]
		Step,
		[Token(Token = "0x4000E8E")]
		Warp
	}
	[Token(Token = "0x20001A8")]
	public class GWarpFilter : IGTextureFilter
	{
		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RenderTexture bgRt;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material mat;

		[Token(Token = "0x1700020E")]
		private static Material Mat
		{
			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0x997F78", Offset = "0x997F78", VA = "0x997F78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x997B80", Offset = "0x997B80", VA = "0x997B80", Slot = "4")]
		public void Apply(RenderTexture targetRt, GTextureFilterParams param)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x998058", Offset = "0x998058", VA = "0x998058")]
		private RenderTexture CloneBg(RenderTexture targetRt)
		{
			return null;
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x997B78", Offset = "0x997B78", VA = "0x997B78")]
		public GWarpFilter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A9")]
	public struct GWarpParams
	{
		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Texture2D mask;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private bool maskIsNormalMap;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private float strength;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool useBackgroundAsMask;

		[Token(Token = "0x1700020F")]
		public Texture2D Mask
		{
			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0x5EDCD8", Offset = "0x5EDCD8", VA = "0x5EDCD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0x5EDCE0", Offset = "0x5EDCE0", VA = "0x5EDCE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public bool MaskIsNormalMap
		{
			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0x5EDCE8", Offset = "0x5EDCE8", VA = "0x5EDCE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0x5EDCF0", Offset = "0x5EDCF0", VA = "0x5EDCF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public float Strength
		{
			[Token(Token = "0x6000CBE")]
			[Address(RVA = "0x5EDCFC", Offset = "0x5EDCFC", VA = "0x5EDCFC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0x5EDD04", Offset = "0x5EDD04", VA = "0x5EDD04")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public bool UseBackgroundAsMask
		{
			[Token(Token = "0x6000CC0")]
			[Address(RVA = "0x5EDD0C", Offset = "0x5EDD0C", VA = "0x5EDD0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CC1")]
			[Address(RVA = "0x5EDD14", Offset = "0x5EDD14", VA = "0x5EDD14")]
			set
			{
			}
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x997CD0", Offset = "0x997CD0", VA = "0x997CD0")]
		public static GWarpParams Create()
		{
			return default(GWarpParams);
		}
	}
	[Token(Token = "0x20001AA")]
	public interface IGTextureFilter
	{
		[Token(Token = "0x6000CC3")]
		void Apply(RenderTexture targetRt, GTextureFilterParams param);
	}
	[Token(Token = "0x20001AB")]
	public enum GBlendDataSource
	{
		[Token(Token = "0x4000E96")]
		Texture,
		[Token(Token = "0x4000E97")]
		Number,
		[Token(Token = "0x4000E98")]
		Vector
	}
	[Serializable]
	[Token(Token = "0x20001AC")]
	public class GBlendLayer
	{
		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GBlendDataSource dataSource;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Texture2D texture;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float number;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector4 vector;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private GBlendOperation blendOps;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float lerpFactor;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Texture2D lerpMask;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool saturate;

		[Token(Token = "0x17000213")]
		public GBlendDataSource DataSource
		{
			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0x99177C", Offset = "0x99177C", VA = "0x99177C")]
			get
			{
				return default(GBlendDataSource);
			}
			[Token(Token = "0x6000CC5")]
			[Address(RVA = "0x991784", Offset = "0x991784", VA = "0x991784")]
			set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public Texture2D Texture
		{
			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0x99178C", Offset = "0x99178C", VA = "0x99178C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CC7")]
			[Address(RVA = "0x991794", Offset = "0x991794", VA = "0x991794")]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public float Number
		{
			[Token(Token = "0x6000CC8")]
			[Address(RVA = "0x99179C", Offset = "0x99179C", VA = "0x99179C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CC9")]
			[Address(RVA = "0x9917A4", Offset = "0x9917A4", VA = "0x9917A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public Vector4 Vector
		{
			[Token(Token = "0x6000CCA")]
			[Address(RVA = "0x9917AC", Offset = "0x9917AC", VA = "0x9917AC")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0x9917B8", Offset = "0x9917B8", VA = "0x9917B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public GBlendOperation BlendOps
		{
			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0x9917C4", Offset = "0x9917C4", VA = "0x9917C4")]
			get
			{
				return default(GBlendOperation);
			}
			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0x9917CC", Offset = "0x9917CC", VA = "0x9917CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public float LerpFactor
		{
			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0x9917D4", Offset = "0x9917D4", VA = "0x9917D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0x9917DC", Offset = "0x9917DC", VA = "0x9917DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public Texture2D LerpMask
		{
			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0x991858", Offset = "0x991858", VA = "0x991858")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0x991860", Offset = "0x991860", VA = "0x991860")]
			set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public bool Saturate
		{
			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0x991868", Offset = "0x991868", VA = "0x991868")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0x991870", Offset = "0x991870", VA = "0x991870")]
			set
			{
			}
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x99187C", Offset = "0x99187C", VA = "0x99187C")]
		public static GBlendLayer Create()
		{
			return null;
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x991930", Offset = "0x991930", VA = "0x991930")]
		public GBlendLayer()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class GBlendMapGenerator : IGTextureGenerator
	{
		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material mat;

		[Token(Token = "0x1700021B")]
		public static Material Mat
		{
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0x991938", Offset = "0x991938", VA = "0x991938")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x991A10", Offset = "0x991A10", VA = "0x991A10", Slot = "4")]
		public void Generate(RenderTexture targetRt)
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x991E78", Offset = "0x991E78", VA = "0x991E78")]
		public GBlendMapGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AE")]
	public struct GBlendMapGeneratorParams
	{
		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<GBlendLayer> layers;

		[Token(Token = "0x1700021C")]
		public List<GBlendLayer> Layers
		{
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x5ED3CC", Offset = "0x5ED3CC", VA = "0x5ED3CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0x5ED3D4", Offset = "0x5ED3D4", VA = "0x5ED3D4")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001AF")]
	public enum GBlendOperation
	{
		[Token(Token = "0x4000EA4")]
		Add,
		[Token(Token = "0x4000EA5")]
		Subtract,
		[Token(Token = "0x4000EA6")]
		Multiply,
		[Token(Token = "0x4000EA7")]
		Divide,
		[Token(Token = "0x4000EA8")]
		Min,
		[Token(Token = "0x4000EA9")]
		Max,
		[Token(Token = "0x4000EAA")]
		Different,
		[Token(Token = "0x4000EAB")]
		Lerp
	}
	[Token(Token = "0x20001B0")]
	public class GColorMapGenerator : IGTextureGenerator
	{
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x9922C4", Offset = "0x9922C4", VA = "0x9922C4", Slot = "4")]
		public void Generate(RenderTexture targetRt)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x992408", Offset = "0x992408", VA = "0x992408")]
		private void RenderColorMap(GStylizedTerrain t, RenderTexture targetRt)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x992860", Offset = "0x992860", VA = "0x992860")]
		public GColorMapGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B1")]
	public struct GColorMapGeneratorParams
	{
		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GStylizedTerrain terrain;

		[Token(Token = "0x1700021D")]
		public GStylizedTerrain Terrain
		{
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x5ED428", Offset = "0x5ED428", VA = "0x5ED428")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x5ED430", Offset = "0x5ED430", VA = "0x5ED430")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001B2")]
	public class GFoliageDistributionMapGenerator : IGTextureGenerator
	{
		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Material mat;

		[Token(Token = "0x1700021E")]
		private Material Mat
		{
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0x99306C", Offset = "0x99306C", VA = "0x99306C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x993130", Offset = "0x993130", VA = "0x993130", Slot = "4")]
		public void Generate(RenderTexture targetRt)
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x993530", Offset = "0x993530", VA = "0x993530")]
		private void GetTreePosition(GFoliageDistributionMapGeneratorParams param, List<Vector2> pos)
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x993D1C", Offset = "0x993D1C", VA = "0x993D1C")]
		private void GetGrassPosition(GFoliageDistributionMapGeneratorParams param, GGrassPatch patch, List<Vector2> pos)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x9936E8", Offset = "0x9936E8", VA = "0x9936E8")]
		private void Draw(RenderTexture targetRt, GFoliageDistributionMapGeneratorParams param, List<Vector2> pos)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x993FAC", Offset = "0x993FAC", VA = "0x993FAC")]
		public GFoliageDistributionMapGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B3")]
	public struct GFoliageDistributionMapGeneratorParams
	{
		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GStylizedTerrain terrain;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private List<int> treePrototypeIndices;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<int> grassPrototypeIndices;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float size;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float opacity;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture2D brushMask;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float rotationMin;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float rotationMax;

		[Token(Token = "0x1700021F")]
		public GStylizedTerrain Terrain
		{
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0x5ED5C8", Offset = "0x5ED5C8", VA = "0x5ED5C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0x5ED5D0", Offset = "0x5ED5D0", VA = "0x5ED5D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public List<int> TreePrototypeIndices
		{
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0x5ED5D8", Offset = "0x5ED5D8", VA = "0x5ED5D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0x5ED5E0", Offset = "0x5ED5E0", VA = "0x5ED5E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000221")]
		public List<int> GrassPrototypeIndices
		{
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0x5ED5E8", Offset = "0x5ED5E8", VA = "0x5ED5E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0x5ED5F0", Offset = "0x5ED5F0", VA = "0x5ED5F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public float Size
		{
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x5ED5F8", Offset = "0x5ED5F8", VA = "0x5ED5F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x5ED600", Offset = "0x5ED600", VA = "0x5ED600")]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public float Opacity
		{
			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0x5ED608", Offset = "0x5ED608", VA = "0x5ED608")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0x5ED610", Offset = "0x5ED610", VA = "0x5ED610")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public Texture2D BrushMask
		{
			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0x5ED618", Offset = "0x5ED618", VA = "0x5ED618")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0x5ED620", Offset = "0x5ED620", VA = "0x5ED620")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public float RotationMin
		{
			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0x5ED628", Offset = "0x5ED628", VA = "0x5ED628")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0x5ED630", Offset = "0x5ED630", VA = "0x5ED630")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public float RotationMax
		{
			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0x5ED638", Offset = "0x5ED638", VA = "0x5ED638")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0x5ED640", Offset = "0x5ED640", VA = "0x5ED640")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001B4")]
	public class GHeightMapFromMeshGenerator : IGTextureGenerator
	{
		[Token(Token = "0x4000EB6")]
		public const float DEFAULT_CAMERA_ORTHO_SIZE = 10f;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Camera camera;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject gameObject;

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x994244", Offset = "0x994244", VA = "0x994244", Slot = "4")]
		public void Generate(RenderTexture targetRt)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x994480", Offset = "0x994480", VA = "0x994480")]
		private void SetUp(GHeightMapFromMeshGeneratorParams param, RenderTexture targetRt)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x994934", Offset = "0x994934", VA = "0x994934")]
		private void Render(GHeightMapFromMeshGeneratorParams param, RenderTexture targetRt)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x994974", Offset = "0x994974", VA = "0x994974")]
		private void CleanUp()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x994ABC", Offset = "0x994ABC", VA = "0x994ABC")]
		public GHeightMapFromMeshGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B5")]
	public struct GHeightMapFromMeshGeneratorParams
	{
		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Mesh srcMesh;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private Vector3 offset;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Quaternion rotation;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 scale;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float projectionDepth;

		[Token(Token = "0x17000227")]
		public Mesh SrcMesh
		{
			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0x5ED798", Offset = "0x5ED798", VA = "0x5ED798")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0x5ED7A0", Offset = "0x5ED7A0", VA = "0x5ED7A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public Vector3 Offset
		{
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0x5ED7A8", Offset = "0x5ED7A8", VA = "0x5ED7A8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x5ED7B4", Offset = "0x5ED7B4", VA = "0x5ED7B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x5ED7C0", Offset = "0x5ED7C0", VA = "0x5ED7C0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000D00")]
			[Address(RVA = "0x5ED7CC", Offset = "0x5ED7CC", VA = "0x5ED7CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public Vector3 Scale
		{
			[Token(Token = "0x6000D01")]
			[Address(RVA = "0x5ED7D8", Offset = "0x5ED7D8", VA = "0x5ED7D8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D02")]
			[Address(RVA = "0x5ED7E4", Offset = "0x5ED7E4", VA = "0x5ED7E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public float ProjectionDepth
		{
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0x5ED7F0", Offset = "0x5ED7F0", VA = "0x5ED7F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0x5ED7F8", Offset = "0x5ED7F8", VA = "0x5ED7F8")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001B6")]
	public class GHeightMapGenerator : IGTextureGenerator
	{
		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x994BA4", Offset = "0x994BA4", VA = "0x994BA4", Slot = "4")]
		public void Generate(RenderTexture targetRt)
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x994CD4", Offset = "0x994CD4", VA = "0x994CD4")]
		private void RenderGeometryHeightMap(GStylizedTerrain terrain, RenderTexture targetRt)
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x994D74", Offset = "0x994D74", VA = "0x994D74")]
		private void RenderPixelHeightMap(GStylizedTerrain terrain, RenderTexture targetRt)
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x994E54", Offset = "0x994E54", VA = "0x994E54")]
		public GHeightMapGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B7")]
	public struct GHeightMapGeneratorParams
	{
		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GStylizedTerrain terrain;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private bool useRealGeometry;

		[Token(Token = "0x1700022C")]
		public GStylizedTerrain Terrain
		{
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0x5ED83C", Offset = "0x5ED83C", VA = "0x5ED83C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0x5ED844", Offset = "0x5ED844", VA = "0x5ED844")]
			set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public bool UseRealGeometry
		{
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0x5ED84C", Offset = "0x5ED84C", VA = "0x5ED84C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0x5ED854", Offset = "0x5ED854", VA = "0x5ED854")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001B8")]
	public class GNoiseMapGenerator : IGTextureGenerator
	{
		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material mat;

		[Token(Token = "0x1700022E")]
		public static Material Mat
		{
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x995EB0", Offset = "0x995EB0", VA = "0x995EB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x995F88", Offset = "0x995F88", VA = "0x995F88", Slot = "4")]
		public void Generate(RenderTexture targetRt)
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x995FCC", Offset = "0x995FCC", VA = "0x995FCC")]
		public void Generate(RenderTexture targetRt, GNoiseMapGeneratorParams param)
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x996164", Offset = "0x996164", VA = "0x996164")]
		public GNoiseMapGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B9")]
	public struct GNoiseMapGeneratorParams
	{
		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GNoiseType type;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private Vector2 origin;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private float frequency;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float laccunarity;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float persistent;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int octaves;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float seed;

		[Token(Token = "0x1700022F")]
		public GNoiseType Type
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x5EDA68", Offset = "0x5EDA68", VA = "0x5EDA68")]
			get
			{
				return default(GNoiseType);
			}
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0x5EDA70", Offset = "0x5EDA70", VA = "0x5EDA70")]
			set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public Vector2 Origin
		{
			[Token(Token = "0x6000D13")]
			[Address(RVA = "0x5EDA78", Offset = "0x5EDA78", VA = "0x5EDA78")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0x5EDA80", Offset = "0x5EDA80", VA = "0x5EDA80")]
			set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public float Frequency
		{
			[Token(Token = "0x6000D15")]
			[Address(RVA = "0x5EDA88", Offset = "0x5EDA88", VA = "0x5EDA88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x5EDA90", Offset = "0x5EDA90", VA = "0x5EDA90")]
			set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public float Lacunarity
		{
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x5EDA98", Offset = "0x5EDA98", VA = "0x5EDA98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x5EDAA0", Offset = "0x5EDAA0", VA = "0x5EDAA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public float Persistence
		{
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x5EDAA8", Offset = "0x5EDAA8", VA = "0x5EDAA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0x5EDAB0", Offset = "0x5EDAB0", VA = "0x5EDAB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public int Octaves
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x5EDAB8", Offset = "0x5EDAB8", VA = "0x5EDAB8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x5EDAC0", Offset = "0x5EDAC0", VA = "0x5EDAC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public float Seed
		{
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0x5EDAC8", Offset = "0x5EDAC8", VA = "0x5EDAC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0x5EDAD0", Offset = "0x5EDAD0", VA = "0x5EDAD0")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001BA")]
	public enum GNoiseType
	{
		[Token(Token = "0x4000EC9")]
		Perlin,
		[Token(Token = "0x4000ECA")]
		Billow,
		[Token(Token = "0x4000ECB")]
		Ridged,
		[Token(Token = "0x4000ECC")]
		Voronoi,
		[Token(Token = "0x4000ECD")]
		Value
	}
	[Token(Token = "0x20001BB")]
	public class GNormalMapGenerator : IGTextureGenerator
	{
		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x9963C8", Offset = "0x9963C8", VA = "0x9963C8", Slot = "4")]
		public void Generate(RenderTexture targetRt)
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x996578", Offset = "0x996578", VA = "0x996578")]
		public void RenderSharpNormalMap(GNormalMapGeneratorParams param, RenderTexture targetRt)
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x996798", Offset = "0x996798", VA = "0x996798")]
		public void RenderInterpolatedNormalMap(GNormalMapGeneratorParams param, RenderTexture targetRt)
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x996DC8", Offset = "0x996DC8", VA = "0x996DC8")]
		public void RenderPerPixelNormalMap(GNormalMapGeneratorParams param, RenderTexture targetRt)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x996F58", Offset = "0x996F58", VA = "0x996F58")]
		public GNormalMapGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BC")]
	public struct GNormalMapGeneratorParams
	{
		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GStylizedTerrain terrain;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private GNormalMapMode mode;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private GNormalMapSpace space;

		[Token(Token = "0x17000236")]
		public GStylizedTerrain Terrain
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x5EDB14", Offset = "0x5EDB14", VA = "0x5EDB14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x5EDB1C", Offset = "0x5EDB1C", VA = "0x5EDB1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public GNormalMapMode Mode
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0x5EDB24", Offset = "0x5EDB24", VA = "0x5EDB24")]
			get
			{
				return default(GNormalMapMode);
			}
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x5EDB2C", Offset = "0x5EDB2C", VA = "0x5EDB2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public GNormalMapSpace Space
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0x5EDB34", Offset = "0x5EDB34", VA = "0x5EDB34")]
			get
			{
				return default(GNormalMapSpace);
			}
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x5EDB3C", Offset = "0x5EDB3C", VA = "0x5EDB3C")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001BD")]
	public enum GNormalMapMode
	{
		[Token(Token = "0x4000ED2")]
		Sharp,
		[Token(Token = "0x4000ED3")]
		Interpolated,
		[Token(Token = "0x4000ED4")]
		PerPixel
	}
	[Token(Token = "0x20001BE")]
	public enum GNormalMapSpace
	{
		[Token(Token = "0x4000ED6")]
		Local,
		[Token(Token = "0x4000ED7")]
		Tangent
	}
	[Token(Token = "0x20001BF")]
	public class GSteepnessMapGenerator : IGTextureGenerator
	{
		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material mat;

		[Token(Token = "0x17000239")]
		private static Material Mat
		{
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0x996F90", Offset = "0x996F90", VA = "0x996F90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x997068", Offset = "0x997068", VA = "0x997068", Slot = "4")]
		public void Generate(RenderTexture targetRt)
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x9972E8", Offset = "0x9972E8", VA = "0x9972E8")]
		public GSteepnessMapGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C0")]
	public struct GSteepnessMapGeneratorParams
	{
		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GStylizedTerrain terrain;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private GNormalMapMode mode;

		[Token(Token = "0x1700023A")]
		public GStylizedTerrain Terrain
		{
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x5EDB80", Offset = "0x5EDB80", VA = "0x5EDB80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x5EDB88", Offset = "0x5EDB88", VA = "0x5EDB88")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public GNormalMapMode Mode
		{
			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0x5EDB90", Offset = "0x5EDB90", VA = "0x5EDB90")]
			get
			{
				return default(GNormalMapMode);
			}
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x5EDB98", Offset = "0x5EDB98", VA = "0x5EDB98")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001C1")]
	public enum GTextureGenerationMode
	{
		[Token(Token = "0x4000EDC")]
		HeightMap,
		[Token(Token = "0x4000EDD")]
		HeightMapFromMesh,
		[Token(Token = "0x4000EDE")]
		NormalMap,
		[Token(Token = "0x4000EDF")]
		SteepnessMap,
		[Token(Token = "0x4000EE0")]
		NoiseMap,
		[Token(Token = "0x4000EE1")]
		ColorMap,
		[Token(Token = "0x4000EE2")]
		BlendMap,
		[Token(Token = "0x4000EE3")]
		FoliageDistributionMap
	}
	[Token(Token = "0x20001C2")]
	public interface IGTextureGenerator
	{
		[Token(Token = "0x6000D31")]
		void Generate(RenderTexture targetRt);
	}
}
namespace Pinwheel.Griffin.StampTool
{
	[Token(Token = "0x20001C3")]
	public class GConditionalStampLayer
	{
		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string name;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool ignore;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool blendHeight;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float minHeight;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float maxHeight;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve heightTransition;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool blendSlope;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool smoothSlope;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private GNormalMapMode normalMapMode;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float minSlope;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float maxSlope;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve slopeTransition;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool blendNoise;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Vector2 noiseOrigin;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float noiseFrequency;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int noiseOctaves;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float noiseLacunarity;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float noisePersistence;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AnimationCurve noiseRemap;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal Texture2D heightTransitionTexture;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal Texture2D slopeTransitionTexture;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal Texture2D noiseRemapTexture;

		[Token(Token = "0x1700023C")]
		public string Name
		{
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0x9DF2A0", Offset = "0x9DF2A0", VA = "0x9DF2A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0x9DF2A8", Offset = "0x9DF2A8", VA = "0x9DF2A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public bool Ignore
		{
			[Token(Token = "0x6000D34")]
			[Address(RVA = "0x9DF2B0", Offset = "0x9DF2B0", VA = "0x9DF2B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D35")]
			[Address(RVA = "0x9DF2B8", Offset = "0x9DF2B8", VA = "0x9DF2B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public bool BlendHeight
		{
			[Token(Token = "0x6000D36")]
			[Address(RVA = "0x9DF2C4", Offset = "0x9DF2C4", VA = "0x9DF2C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D37")]
			[Address(RVA = "0x9DF2CC", Offset = "0x9DF2CC", VA = "0x9DF2CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public float MinHeight
		{
			[Token(Token = "0x6000D38")]
			[Address(RVA = "0x9DF2D8", Offset = "0x9DF2D8", VA = "0x9DF2D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x9DF2E0", Offset = "0x9DF2E0", VA = "0x9DF2E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public float MaxHeight
		{
			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x9DF360", Offset = "0x9DF360", VA = "0x9DF360")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0x9DF368", Offset = "0x9DF368", VA = "0x9DF368")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public AnimationCurve HeightTransition
		{
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0x9DF3E8", Offset = "0x9DF3E8", VA = "0x9DF3E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0x9DF424", Offset = "0x9DF424", VA = "0x9DF424")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public bool BlendSlope
		{
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0x9DF42C", Offset = "0x9DF42C", VA = "0x9DF42C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0x9DF434", Offset = "0x9DF434", VA = "0x9DF434")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x57FB3C", Offset = "0x57FB3C")]
		public bool SmoothSlope
		{
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0x9DF440", Offset = "0x9DF440", VA = "0x9DF440")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D41")]
			[Address(RVA = "0x9DF448", Offset = "0x9DF448", VA = "0x9DF448")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public GNormalMapMode NormalMapMode
		{
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0x9DF454", Offset = "0x9DF454", VA = "0x9DF454")]
			get
			{
				return default(GNormalMapMode);
			}
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0x9DF45C", Offset = "0x9DF45C", VA = "0x9DF45C")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public float MinSlope
		{
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0x9DF464", Offset = "0x9DF464", VA = "0x9DF464")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0x9DF46C", Offset = "0x9DF46C", VA = "0x9DF46C")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public float MaxSlope
		{
			[Token(Token = "0x6000D46")]
			[Address(RVA = "0x9DF4F4", Offset = "0x9DF4F4", VA = "0x9DF4F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0x9DF4FC", Offset = "0x9DF4FC", VA = "0x9DF4FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public AnimationCurve SlopeTransition
		{
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0x9DF584", Offset = "0x9DF584", VA = "0x9DF584")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0x9DF5C0", Offset = "0x9DF5C0", VA = "0x9DF5C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public bool BlendNoise
		{
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0x9DF5C8", Offset = "0x9DF5C8", VA = "0x9DF5C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0x9DF5D0", Offset = "0x9DF5D0", VA = "0x9DF5D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public Vector2 NoiseOrigin
		{
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0x9DF5DC", Offset = "0x9DF5DC", VA = "0x9DF5DC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0x9DF5E4", Offset = "0x9DF5E4", VA = "0x9DF5E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public float NoiseFrequency
		{
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0x9DF5EC", Offset = "0x9DF5EC", VA = "0x9DF5EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0x9DF5F4", Offset = "0x9DF5F4", VA = "0x9DF5F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public int NoiseOctaves
		{
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0x9DF5FC", Offset = "0x9DF5FC", VA = "0x9DF5FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D51")]
			[Address(RVA = "0x9DF604", Offset = "0x9DF604", VA = "0x9DF604")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public float NoiseLacunarity
		{
			[Token(Token = "0x6000D52")]
			[Address(RVA = "0x9DF688", Offset = "0x9DF688", VA = "0x9DF688")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D53")]
			[Address(RVA = "0x9DF690", Offset = "0x9DF690", VA = "0x9DF690")]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public float NoisePersistence
		{
			[Token(Token = "0x6000D54")]
			[Address(RVA = "0x9DF710", Offset = "0x9DF710", VA = "0x9DF710")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D55")]
			[Address(RVA = "0x9DF718", Offset = "0x9DF718", VA = "0x9DF718")]
			set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public AnimationCurve NoiseRemap
		{
			[Token(Token = "0x6000D56")]
			[Address(RVA = "0x9DF7A0", Offset = "0x9DF7A0", VA = "0x9DF7A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D57")]
			[Address(RVA = "0x9DF7DC", Offset = "0x9DF7DC", VA = "0x9DF7DC")]
			set
			{
			}
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x9DF7E4", Offset = "0x9DF7E4", VA = "0x9DF7E4", Slot = "1")]
		~GConditionalStampLayer()
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x9DF9C0", Offset = "0x9DF9C0", VA = "0x9DF9C0")]
		public void UpdateCurveTextures()
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x9DFC10", Offset = "0x9DFC10", VA = "0x9DFC10")]
		public GConditionalStampLayer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C4")]
	public class GFoliageStampLayer : GConditionalStampLayer
	{
		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Color visualizeColor;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private bool stampTrees;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private List<int> treeIndices;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool stampGrass;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private List<int> grassIndices;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private int treeInstanceCount;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private int grassInstanceCount;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private float minRotation;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float maxRotation;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Vector3 minScale;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private Vector3 maxScale;

		[Token(Token = "0x1700024F")]
		public Color VisualizeColor
		{
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0x9DFD60", Offset = "0x9DFD60", VA = "0x9DFD60")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0x9DFD6C", Offset = "0x9DFD6C", VA = "0x9DFD6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public bool StampTrees
		{
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0x9DFD78", Offset = "0x9DFD78", VA = "0x9DFD78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0x9DFD80", Offset = "0x9DFD80", VA = "0x9DFD80")]
			set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public List<int> TreeIndices
		{
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0x9DFD8C", Offset = "0x9DFD8C", VA = "0x9DFD8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D60")]
			[Address(RVA = "0x9DFE00", Offset = "0x9DFE00", VA = "0x9DFE00")]
			set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public bool StampGrasses
		{
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0x9DFE08", Offset = "0x9DFE08", VA = "0x9DFE08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D62")]
			[Address(RVA = "0x9DFE10", Offset = "0x9DFE10", VA = "0x9DFE10")]
			set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public List<int> GrassIndices
		{
			[Token(Token = "0x6000D63")]
			[Address(RVA = "0x9DFE1C", Offset = "0x9DFE1C", VA = "0x9DFE1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D64")]
			[Address(RVA = "0x9DFE90", Offset = "0x9DFE90", VA = "0x9DFE90")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public int TreeInstanceCount
		{
			[Token(Token = "0x6000D65")]
			[Address(RVA = "0x9DFE98", Offset = "0x9DFE98", VA = "0x9DFE98")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D66")]
			[Address(RVA = "0x9DFEA0", Offset = "0x9DFEA0", VA = "0x9DFEA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public int GrassInstanceCount
		{
			[Token(Token = "0x6000D67")]
			[Address(RVA = "0x9DFF20", Offset = "0x9DFF20", VA = "0x9DFF20")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D68")]
			[Address(RVA = "0x9DFF28", Offset = "0x9DFF28", VA = "0x9DFF28")]
			set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public float MinRotation
		{
			[Token(Token = "0x6000D69")]
			[Address(RVA = "0x9DFF30", Offset = "0x9DFF30", VA = "0x9DFF30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0x9DFF38", Offset = "0x9DFF38", VA = "0x9DFF38")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public float MaxRotation
		{
			[Token(Token = "0x6000D6B")]
			[Address(RVA = "0x9DFF40", Offset = "0x9DFF40", VA = "0x9DFF40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0x9DFF48", Offset = "0x9DFF48", VA = "0x9DFF48")]
			set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public Vector3 MinScale
		{
			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0x9DFF50", Offset = "0x9DFF50", VA = "0x9DFF50")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0x9DFF5C", Offset = "0x9DFF5C", VA = "0x9DFF5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public Vector3 MaxScale
		{
			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0x9DFF68", Offset = "0x9DFF68", VA = "0x9DFF68")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D70")]
			[Address(RVA = "0x9DFF74", Offset = "0x9DFF74", VA = "0x9DFF74")]
			set
			{
			}
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x9DFF80", Offset = "0x9DFF80", VA = "0x9DFF80")]
		public GFoliageStampLayer()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x9DFF84", Offset = "0x9DFF84", VA = "0x9DFF84")]
		public static GFoliageStampLayer Create()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20001C5")]
	[ExecuteInEditMode]
	public class GFoliageStamper : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000347")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F9C0", Offset = "0x56F9C0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GFoliageStampLayer> <>9__43_0;

			[Token(Token = "0x4001A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<GFoliageStampLayer> <>9__43_1;

			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0x98A34C", Offset = "0x98A34C", VA = "0x98A34C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0x98A354", Offset = "0x98A354", VA = "0x98A354")]
			internal bool <Apply>b__43_0(GFoliageStampLayer l)
			{
				return default(bool);
			}

			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0x98A384", Offset = "0x98A384", VA = "0x98A384")]
			internal bool <Apply>b__43_1(GFoliageStampLayer l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F9D0", Offset = "0x56F9D0")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x4001A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Matrix4x4 normalizeToStamp;

			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0x98A3B4", Offset = "0x98A3B4", VA = "0x98A3B4")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0x98A3BC", Offset = "0x98A3BC", VA = "0x98A3BC")]
			internal bool <ClearTrees>b__0(GTreeInstance tree)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000349")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F9E0", Offset = "0x56F9E0")]
		private sealed class <>c__DisplayClass58_0
		{
			[Token(Token = "0x4001A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Matrix4x4 normalizeToStamp;

			[Token(Token = "0x4001A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Predicate<GGrassInstance> <>9__0;

			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0x98A42C", Offset = "0x98A42C", VA = "0x98A42C")]
			public <>c__DisplayClass58_0()
			{
			}

			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0x98A434", Offset = "0x98A434", VA = "0x98A434")]
			internal bool <ClearGrasses>b__0(GGrassInstance grass)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int groupId;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 position;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Quaternion rotation;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector3 scale;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Texture2D mask;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve falloff;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<GFoliageStampLayer> layers;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private int maskResolution;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Texture2D falloffTexture;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3[] worldPoints;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2[] uvPoints;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<string, RenderTexture> tempRt;

		[Token(Token = "0x1700025A")]
		public int GroupId
		{
			[Token(Token = "0x6000D73")]
			[Address(RVA = "0x9E0088", Offset = "0x9E0088", VA = "0x9E0088")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D74")]
			[Address(RVA = "0x9E0090", Offset = "0x9E0090", VA = "0x9E0090")]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public Vector3 Position
		{
			[Token(Token = "0x6000D75")]
			[Address(RVA = "0x9E0098", Offset = "0x9E0098", VA = "0x9E0098")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D76")]
			[Address(RVA = "0x9E00A4", Offset = "0x9E00A4", VA = "0x9E00A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6000D77")]
			[Address(RVA = "0x9E00F8", Offset = "0x9E00F8", VA = "0x9E00F8")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000D78")]
			[Address(RVA = "0x9E0104", Offset = "0x9E0104", VA = "0x9E0104")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public Vector3 Scale
		{
			[Token(Token = "0x6000D79")]
			[Address(RVA = "0x9E0160", Offset = "0x9E0160", VA = "0x9E0160")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0x9E016C", Offset = "0x9E016C", VA = "0x9E016C")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public Texture2D Mask
		{
			[Token(Token = "0x6000D7B")]
			[Address(RVA = "0x9E01C0", Offset = "0x9E01C0", VA = "0x9E01C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0x9E01C8", Offset = "0x9E01C8", VA = "0x9E01C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public AnimationCurve Falloff
		{
			[Token(Token = "0x6000D7D")]
			[Address(RVA = "0x9E01D0", Offset = "0x9E01D0", VA = "0x9E01D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0x9E01D8", Offset = "0x9E01D8", VA = "0x9E01D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public List<GFoliageStampLayer> Layers
		{
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x9E01E0", Offset = "0x9E01E0", VA = "0x9E01E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D80")]
			[Address(RVA = "0x9E0254", Offset = "0x9E0254", VA = "0x9E0254")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public int MaskResolution
		{
			[Token(Token = "0x6000D81")]
			[Address(RVA = "0x9E025C", Offset = "0x9E025C", VA = "0x9E025C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D82")]
			[Address(RVA = "0x9E0264", Offset = "0x9E0264", VA = "0x9E0264")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		private Dictionary<string, RenderTexture> TempRt
		{
			[Token(Token = "0x6000D83")]
			[Address(RVA = "0x9E02F0", Offset = "0x9E02F0", VA = "0x9E02F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x9E0364", Offset = "0x9E0364", VA = "0x9E0364")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x9E044C", Offset = "0x9E044C", VA = "0x9E044C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x9E05D8", Offset = "0x9E05D8", VA = "0x9E05D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x9E0450", Offset = "0x9E0450", VA = "0x9E0450")]
		private void ReleaseResources()
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x9E05DC", Offset = "0x9E05DC", VA = "0x9E05DC")]
		public void Apply()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x9E0A70", Offset = "0x9E0A70", VA = "0x9E0A70")]
		private void Apply(GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x9E16D8", Offset = "0x9E16D8", VA = "0x9E16D8")]
		private void StampLayer(GStylizedTerrain t, RenderTexture brush, int layerIndex)
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x9E1944", Offset = "0x9E1944", VA = "0x9E1944")]
		private void SpawnTreeOnTerrain(GStylizedTerrain t, Color[] maskData, int layerIndex)
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x9E1ED4", Offset = "0x9E1ED4", VA = "0x9E1ED4")]
		private void SpawnGrassOnTerrain(GStylizedTerrain t, Color[] maskData, int layerIndex)
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x9E152C", Offset = "0x9E152C", VA = "0x9E152C")]
		public void Internal_RenderBrushes(RenderTexture[] brushes, GStylizedTerrain t, Vector2[] uvPoints)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x9E08DC", Offset = "0x9E08DC", VA = "0x9E08DC")]
		public void Internal_UpdateFalloffTexture()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x9E09C0", Offset = "0x9E09C0", VA = "0x9E09C0")]
		public void Internal_UpdateLayerTransitionTextures()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x9E2488", Offset = "0x9E2488", VA = "0x9E2488")]
		public Vector3[] GetQuad()
		{
			return null;
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x9E1028", Offset = "0x9E1028", VA = "0x9E1028")]
		public void GetQuad(Vector3[] quad)
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x9E124C", Offset = "0x9E124C", VA = "0x9E124C")]
		private void GetUvPoints(GStylizedTerrain t, Vector3[] worldPoint, Vector2[] uvPoint)
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x9E26C4", Offset = "0x9E26C4", VA = "0x9E26C4")]
		public void GetBox(Vector3[] box)
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x9E1304", Offset = "0x9E1304", VA = "0x9E1304")]
		private RenderTexture GetRenderTexture(string key)
		{
			return null;
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x9E2A08", Offset = "0x9E2A08", VA = "0x9E2A08")]
		public void ClearTrees()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x9E2BD0", Offset = "0x9E2BD0", VA = "0x9E2BD0")]
		private void ClearTrees(GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x9E2F28", Offset = "0x9E2F28", VA = "0x9E2F28")]
		public void ClearGrasses()
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x9E30F0", Offset = "0x9E30F0", VA = "0x9E30F0")]
		private void ClearGrasses(GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x9E3520", Offset = "0x9E3520", VA = "0x9E3520")]
		public GFoliageStamper()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C6")]
	[ExecuteInEditMode]
	public class GGeometryStamper : MonoBehaviour
	{
		[Token(Token = "0x200034A")]
		public enum GStampChannel
		{
			[Token(Token = "0x4001A4A")]
			Elevation,
			[Token(Token = "0x4001A4B")]
			Visibility
		}

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int groupId;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 position;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Quaternion rotation;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector3 scale;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Texture2D stamp;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GStampChannel channel;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AnimationCurve falloff;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool inverseStamp;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[SerializeField]
		private bool useFalloffAsBlendFactor;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private GStampOperation operation;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float lerpFactor;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private int additionalMeshResolution;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Texture2D falloffTexture;

		[Token(Token = "0x17000263")]
		public int GroupId
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0x98A4A4", Offset = "0x98A4A4", VA = "0x98A4A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0x98A4AC", Offset = "0x98A4AC", VA = "0x98A4AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public Vector3 Position
		{
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0x98A4B4", Offset = "0x98A4B4", VA = "0x98A4B4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0x98A4C0", Offset = "0x98A4C0", VA = "0x98A4C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0x98A514", Offset = "0x98A514", VA = "0x98A514")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0x98A520", Offset = "0x98A520", VA = "0x98A520")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public Vector3 Scale
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0x98A57C", Offset = "0x98A57C", VA = "0x98A57C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0x98A588", Offset = "0x98A588", VA = "0x98A588")]
			set
			{
			}
		}

		[Token(Token = "0x17000267")]
		public Texture2D Stamp
		{
			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0x98A5DC", Offset = "0x98A5DC", VA = "0x98A5DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0x98A5E4", Offset = "0x98A5E4", VA = "0x98A5E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public GStampChannel Channel
		{
			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0x98A5EC", Offset = "0x98A5EC", VA = "0x98A5EC")]
			get
			{
				return default(GStampChannel);
			}
			[Token(Token = "0x6000DA5")]
			[Address(RVA = "0x98A5F4", Offset = "0x98A5F4", VA = "0x98A5F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public AnimationCurve Falloff
		{
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0x98A5FC", Offset = "0x98A5FC", VA = "0x98A5FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0x98A604", Offset = "0x98A604", VA = "0x98A604")]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public bool InverseStamp
		{
			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0x98A60C", Offset = "0x98A60C", VA = "0x98A60C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0x98A614", Offset = "0x98A614", VA = "0x98A614")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public bool UseFalloffAsBlendFactor
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x98A620", Offset = "0x98A620", VA = "0x98A620")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0x98A628", Offset = "0x98A628", VA = "0x98A628")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public GStampOperation Operation
		{
			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0x98A634", Offset = "0x98A634", VA = "0x98A634")]
			get
			{
				return default(GStampOperation);
			}
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0x98A63C", Offset = "0x98A63C", VA = "0x98A63C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public float LerpFactor
		{
			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0x98A644", Offset = "0x98A644", VA = "0x98A644")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0x98A64C", Offset = "0x98A64C", VA = "0x98A64C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		public int AdditionalMeshResolution
		{
			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0x98A6C8", Offset = "0x98A6C8", VA = "0x98A6C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x98A6D0", Offset = "0x98A6D0", VA = "0x98A6D0")]
			set
			{
			}
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x98A754", Offset = "0x98A754", VA = "0x98A754")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x98A84C", Offset = "0x98A84C", VA = "0x98A84C")]
		public void Apply()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x98AB00", Offset = "0x98AB00", VA = "0x98AB00")]
		private void Apply(GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x98AF7C", Offset = "0x98AF7C", VA = "0x98AF7C")]
		public void Internal_Apply(GStylizedTerrain t, RenderTexture rt)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x98AA84", Offset = "0x98AA84", VA = "0x98AA84")]
		public void Internal_UpdateFalloffTexture()
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x98B368", Offset = "0x98B368", VA = "0x98B368")]
		public Vector3[] GetQuad()
		{
			return null;
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x98B5A4", Offset = "0x98B5A4", VA = "0x98B5A4")]
		public void GetQuad(Vector3[] quad)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x98B7C8", Offset = "0x98B7C8", VA = "0x98B7C8")]
		public void GetBox(Vector3[] box)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x98BB0C", Offset = "0x98BB0C", VA = "0x98BB0C")]
		public GGeometryStamper()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C7")]
	public class GObjectStampLayer : GConditionalStampLayer
	{
		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Color visualizeColor;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public List<GameObject> prototypes;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private List<int> prototypeIndices;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private int instanceCount;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float minRotation;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private float maxRotation;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private Vector3 minScale;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Vector3 maxScale;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool alignToSurface;

		[Token(Token = "0x1700026F")]
		public Color VisualizeColor
		{
			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0x98BB14", Offset = "0x98BB14", VA = "0x98BB14")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0x98BB20", Offset = "0x98BB20", VA = "0x98BB20")]
			set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public List<GameObject> Prototypes
		{
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0x98BB2C", Offset = "0x98BB2C", VA = "0x98BB2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0x98BBA0", Offset = "0x98BBA0", VA = "0x98BBA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public List<int> PrototypeIndices
		{
			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0x98BBA8", Offset = "0x98BBA8", VA = "0x98BBA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0x98BC1C", Offset = "0x98BC1C", VA = "0x98BC1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public int InstanceCount
		{
			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0x98BC24", Offset = "0x98BC24", VA = "0x98BC24")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0x98BC2C", Offset = "0x98BC2C", VA = "0x98BC2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public float MinRotation
		{
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0x98BCAC", Offset = "0x98BCAC", VA = "0x98BCAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0x98BCB4", Offset = "0x98BCB4", VA = "0x98BCB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public float MaxRotation
		{
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x98BCBC", Offset = "0x98BCBC", VA = "0x98BCBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0x98BCC4", Offset = "0x98BCC4", VA = "0x98BCC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public Vector3 MinScale
		{
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0x98BCCC", Offset = "0x98BCCC", VA = "0x98BCCC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x98BCD8", Offset = "0x98BCD8", VA = "0x98BCD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public Vector3 MaxScale
		{
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0x98BCE4", Offset = "0x98BCE4", VA = "0x98BCE4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0x98BCF0", Offset = "0x98BCF0", VA = "0x98BCF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public bool AlignToSurface
		{
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0x98BCFC", Offset = "0x98BCFC", VA = "0x98BCFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x98BD04", Offset = "0x98BD04", VA = "0x98BD04")]
			set
			{
			}
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x98BD10", Offset = "0x98BD10", VA = "0x98BD10")]
		public GObjectStampLayer()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x98BD18", Offset = "0x98BD18", VA = "0x98BD18")]
		public static GObjectStampLayer Create()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20001C8")]
	[ExecuteInEditMode]
	public class GObjectStamper : MonoBehaviour
	{
		[Token(Token = "0x200034B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56F9F0", Offset = "0x56F9F0")]
		private sealed class <>c__DisplayClass55_0
		{
			[Token(Token = "0x4001A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GStylizedTerrain t;

			[Token(Token = "0x4001A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Matrix4x4 normalizeToStamp;

			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0x98E920", Offset = "0x98E920", VA = "0x98E920")]
			public <>c__DisplayClass55_0()
			{
			}

			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0x98E9A0", Offset = "0x98E9A0", VA = "0x98E9A0")]
			internal bool <ClearObjects>b__0(GameObject g)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int groupId;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 position;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Quaternion rotation;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector3 scale;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Texture2D mask;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve falloff;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<GObjectStampLayer> layers;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private int maskResolution;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Texture2D falloffTexture;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3[] worldPoints;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2[] uvPoints;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<string, RenderTexture> tempRt;

		[Token(Token = "0x17000278")]
		public int GroupId
		{
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x98BE18", Offset = "0x98BE18", VA = "0x98BE18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x98BE20", Offset = "0x98BE20", VA = "0x98BE20")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public Vector3 Position
		{
			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x98BE28", Offset = "0x98BE28", VA = "0x98BE28")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0x98BE34", Offset = "0x98BE34", VA = "0x98BE34")]
			set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x98BE88", Offset = "0x98BE88", VA = "0x98BE88")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x98BE94", Offset = "0x98BE94", VA = "0x98BE94")]
			set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public Vector3 Scale
		{
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0x98BEF0", Offset = "0x98BEF0", VA = "0x98BEF0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x98BEFC", Offset = "0x98BEFC", VA = "0x98BEFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public Texture2D Mask
		{
			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0x98BF50", Offset = "0x98BF50", VA = "0x98BF50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0x98BF58", Offset = "0x98BF58", VA = "0x98BF58")]
			set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public AnimationCurve Falloff
		{
			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x98BF60", Offset = "0x98BF60", VA = "0x98BF60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x98BF68", Offset = "0x98BF68", VA = "0x98BF68")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public List<GObjectStampLayer> Layers
		{
			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0x98BF70", Offset = "0x98BF70", VA = "0x98BF70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x98BFE4", Offset = "0x98BFE4", VA = "0x98BFE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public int MaskResolution
		{
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0x98BFEC", Offset = "0x98BFEC", VA = "0x98BFEC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0x98BFF4", Offset = "0x98BFF4", VA = "0x98BFF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000280")]
		private Dictionary<string, RenderTexture> TempRt
		{
			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0x98C080", Offset = "0x98C080", VA = "0x98C080")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x98C0F4", Offset = "0x98C0F4", VA = "0x98C0F4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x98C1DC", Offset = "0x98C1DC", VA = "0x98C1DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x98C368", Offset = "0x98C368", VA = "0x98C368")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x98C1E0", Offset = "0x98C1E0", VA = "0x98C1E0")]
		private void ReleaseResources()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x98C36C", Offset = "0x98C36C", VA = "0x98C36C")]
		public void Apply()
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x98C804", Offset = "0x98C804", VA = "0x98C804")]
		private void Apply(GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x98D13C", Offset = "0x98D13C", VA = "0x98D13C")]
		private void StampLayer(GStylizedTerrain t, RenderTexture brush, int layerIndex)
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x98D2D8", Offset = "0x98D2D8", VA = "0x98D2D8")]
		private void SpawnObjectOnTerrain(GStylizedTerrain t, Color[] maskData, int layerIndex)
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x98CF94", Offset = "0x98CF94", VA = "0x98CF94")]
		public void Internal_RenderBrushes(RenderTexture[] brushes, GStylizedTerrain t, Vector2[] uvPoints)
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x98C66C", Offset = "0x98C66C", VA = "0x98C66C")]
		public void Internal_UpdateFalloffTexture()
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x98C750", Offset = "0x98C750", VA = "0x98C750")]
		public void Internal_UpdateLayerTransitionTextures()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x98DEE8", Offset = "0x98DEE8", VA = "0x98DEE8")]
		public Vector3[] GetQuad()
		{
			return null;
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x98CA90", Offset = "0x98CA90", VA = "0x98CA90")]
		public void GetQuad(Vector3[] quad)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x98CCB4", Offset = "0x98CCB4", VA = "0x98CCB4")]
		private void GetUvPoints(GStylizedTerrain t, Vector3[] worldPoint, Vector2[] uvPoint)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x98E124", Offset = "0x98E124", VA = "0x98E124")]
		public void GetBox(Vector3[] box)
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x98CD6C", Offset = "0x98CD6C", VA = "0x98CD6C")]
		private RenderTexture GetRenderTexture(string key)
		{
			return null;
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x98E468", Offset = "0x98E468", VA = "0x98E468")]
		public void ClearObjects()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x98E630", Offset = "0x98E630", VA = "0x98E630")]
		private void ClearObjects(GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x98E928", Offset = "0x98E928", VA = "0x98E928")]
		public GObjectStamper()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public static class GStampLayerMaskRenderer
	{
		[Token(Token = "0x4000F33")]
		private const string BLEND_HEIGHT_KW = "BLEND_HEIGHT";

		[Token(Token = "0x4000F34")]
		private const string BLEND_SLOPE_KW = "BLEND_SLOPE";

		[Token(Token = "0x4000F35")]
		private const string BLEND_NOISE_KW = "BLEND_NOISE";

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x98D8FC", Offset = "0x98D8FC", VA = "0x98D8FC")]
		public static void Render(RenderTexture rt, GConditionalStampLayer layer, GStylizedTerrain terrain, Matrix4x4 stamperTransform, Texture mask, Texture falloffTexture, Vector2[] uvPoints)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x98EA44", Offset = "0x98EA44", VA = "0x98EA44")]
		private static void DrawOnBrushTexture(RenderTexture rt, Vector2[] quadCorners, Material mat, int pass)
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public enum GStampOperation
	{
		[Token(Token = "0x4000F37")]
		Add,
		[Token(Token = "0x4000F38")]
		Subtract,
		[Token(Token = "0x4000F39")]
		ReverseSubtract,
		[Token(Token = "0x4000F3A")]
		Max,
		[Token(Token = "0x4000F3B")]
		Min,
		[Token(Token = "0x4000F3C")]
		Lerp,
		[Token(Token = "0x4000F3D")]
		Different
	}
	[Serializable]
	[Token(Token = "0x20001CB")]
	public struct GStampToolSettings
	{
		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Color visualizeColor;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float minRotation;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float maxRotation;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 minScale;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 maxScale;

		[Token(Token = "0x17000281")]
		public Color VisualizeColor
		{
			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0x5ED328", Offset = "0x5ED328", VA = "0x5ED328")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x5ED334", Offset = "0x5ED334", VA = "0x5ED334")]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public float MinRotation
		{
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x5ED340", Offset = "0x5ED340", VA = "0x5ED340")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0x5ED348", Offset = "0x5ED348", VA = "0x5ED348")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public float MaxRotation
		{
			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0x5ED350", Offset = "0x5ED350", VA = "0x5ED350")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0x5ED358", Offset = "0x5ED358", VA = "0x5ED358")]
			set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public Vector3 MinScale
		{
			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0x5ED360", Offset = "0x5ED360", VA = "0x5ED360")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0x5ED36C", Offset = "0x5ED36C", VA = "0x5ED36C")]
			set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public Vector3 MaxScale
		{
			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0x5ED378", Offset = "0x5ED378", VA = "0x5ED378")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0x5ED384", Offset = "0x5ED384", VA = "0x5ED384")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001CC")]
	public enum GTextureStampChannel
	{
		[Token(Token = "0x4000F44")]
		AlbedoMetallicSmoothness,
		[Token(Token = "0x4000F45")]
		Splat
	}
	[Serializable]
	[Token(Token = "0x20001CD")]
	public class GTextureStampLayer : GConditionalStampLayer
	{
		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Color color;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float metallic;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float smoothness;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private int splatIndex;

		[Token(Token = "0x17000286")]
		public Color Color
		{
			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0x98EC84", Offset = "0x98EC84", VA = "0x98EC84")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E00")]
			[Address(RVA = "0x98EC90", Offset = "0x98EC90", VA = "0x98EC90")]
			set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public float Metallic
		{
			[Token(Token = "0x6000E01")]
			[Address(RVA = "0x98EC9C", Offset = "0x98EC9C", VA = "0x98EC9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E02")]
			[Address(RVA = "0x98ECA4", Offset = "0x98ECA4", VA = "0x98ECA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public float Smoothness
		{
			[Token(Token = "0x6000E03")]
			[Address(RVA = "0x98ED20", Offset = "0x98ED20", VA = "0x98ED20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0x98ED28", Offset = "0x98ED28", VA = "0x98ED28")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public int SplatIndex
		{
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0x98EDA4", Offset = "0x98EDA4", VA = "0x98EDA4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0x98EDAC", Offset = "0x98EDAC", VA = "0x98EDAC")]
			set
			{
			}
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x98EDB4", Offset = "0x98EDB4", VA = "0x98EDB4")]
		public GTextureStampLayer()
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x98EDBC", Offset = "0x98EDBC", VA = "0x98EDBC")]
		public static GTextureStampLayer Create()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20001CE")]
	[ExecuteInEditMode]
	public class GTextureStamper : MonoBehaviour
	{
		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int groupId;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 position;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Quaternion rotation;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector3 scale;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Texture2D mask;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve falloff;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GTextureStampChannel channel;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<GTextureStampLayer> layers;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Texture2D falloffTexture;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3[] worldPoints;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2[] uvPoints;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<string, RenderTexture> tempRt;

		[Token(Token = "0x1700028A")]
		public int GroupId
		{
			[Token(Token = "0x6000E09")]
			[Address(RVA = "0x98EE58", Offset = "0x98EE58", VA = "0x98EE58")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0x98EE60", Offset = "0x98EE60", VA = "0x98EE60")]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public Vector3 Position
		{
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0x98EE68", Offset = "0x98EE68", VA = "0x98EE68")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0x98EE74", Offset = "0x98EE74", VA = "0x98EE74")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0x98EEC8", Offset = "0x98EEC8", VA = "0x98EEC8")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0x98EED4", Offset = "0x98EED4", VA = "0x98EED4")]
			set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public Vector3 Scale
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0x98EF30", Offset = "0x98EF30", VA = "0x98EF30")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0x98EF3C", Offset = "0x98EF3C", VA = "0x98EF3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public Texture2D Mask
		{
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0x98EF90", Offset = "0x98EF90", VA = "0x98EF90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0x98EF98", Offset = "0x98EF98", VA = "0x98EF98")]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public AnimationCurve Falloff
		{
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0x98EFA0", Offset = "0x98EFA0", VA = "0x98EFA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0x98EFA8", Offset = "0x98EFA8", VA = "0x98EFA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000290")]
		public GTextureStampChannel Channel
		{
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0x98EFB0", Offset = "0x98EFB0", VA = "0x98EFB0")]
			get
			{
				return default(GTextureStampChannel);
			}
			[Token(Token = "0x6000E16")]
			[Address(RVA = "0x98EFB8", Offset = "0x98EFB8", VA = "0x98EFB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000291")]
		public List<GTextureStampLayer> Layers
		{
			[Token(Token = "0x6000E17")]
			[Address(RVA = "0x98EFC0", Offset = "0x98EFC0", VA = "0x98EFC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E18")]
			[Address(RVA = "0x98F034", Offset = "0x98F034", VA = "0x98F034")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		private Dictionary<string, RenderTexture> TempRt
		{
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0x98F03C", Offset = "0x98F03C", VA = "0x98F03C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x98F0B0", Offset = "0x98F0B0", VA = "0x98F0B0")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x98F194", Offset = "0x98F194", VA = "0x98F194")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x98F320", Offset = "0x98F320", VA = "0x98F320")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x98F198", Offset = "0x98F198", VA = "0x98F198")]
		private void ReleaseResources()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x98F324", Offset = "0x98F324", VA = "0x98F324")]
		public void Apply()
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x98F6F4", Offset = "0x98F6F4", VA = "0x98F6F4")]
		private void Apply(GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x98FA78", Offset = "0x98FA78", VA = "0x98FA78")]
		private void ApplySplat(GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x9902A0", Offset = "0x9902A0", VA = "0x9902A0")]
		private RenderTexture[] RenderBrushes(GStylizedTerrain t, Vector2[] uvPoints, int brushResolution)
		{
			return null;
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x98FD2C", Offset = "0x98FD2C", VA = "0x98FD2C")]
		public void Internal_ApplySplat(GStylizedTerrain t, RenderTexture[] rtControls)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x98F7E0", Offset = "0x98F7E0", VA = "0x98F7E0")]
		private void ApplyAlbedoMetallicSmoothness(GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x990A08", Offset = "0x990A08", VA = "0x990A08")]
		public void Internal_ApplyAlbedoMetallicSmoothness(GStylizedTerrain t, RenderTexture albedoRt, RenderTexture metallicRt)
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x98F55C", Offset = "0x98F55C", VA = "0x98F55C")]
		public void Internal_UpdateFalloffTexture()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x98F640", Offset = "0x98F640", VA = "0x98F640")]
		public void Internal_UpdateLayerTransitionTextures()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x991184", Offset = "0x991184", VA = "0x991184")]
		public Vector3[] GetQuad()
		{
			return null;
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x99072C", Offset = "0x99072C", VA = "0x99072C")]
		public void GetQuad(Vector3[] quad)
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x990950", Offset = "0x990950", VA = "0x990950")]
		private void GetUvPoints(GStylizedTerrain t, Vector3[] worldPoint, Vector2[] uvPoint)
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x9913C0", Offset = "0x9913C0", VA = "0x9913C0")]
		public void GetBox(Vector3[] box)
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x990504", Offset = "0x990504", VA = "0x990504")]
		private RenderTexture GetRenderTexture(string key, int resolution)
		{
			return null;
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x991704", Offset = "0x991704", VA = "0x991704")]
		public GTextureStamper()
		{
		}
	}
}
namespace Pinwheel.Griffin.SplineTool
{
	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "GDisplayName", RVA = "0x56E320", Offset = "0x56E320")]
	public class GFoliageRemover : GSplineModifier
	{
		[Token(Token = "0x200034C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FA00", Offset = "0x56FA00")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4001A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color[] maskData;

			[Token(Token = "0x4001A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GFoliageRemover <>4__this;

			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0x9D3AFC", Offset = "0x9D3AFC", VA = "0x9D3AFC")]
			public <>c__DisplayClass35_0()
			{
			}
		}

		[Token(Token = "0x200034D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FA10", Offset = "0x56FA10")]
		private sealed class <>c__DisplayClass35_1
		{
			[Token(Token = "0x4001A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int treeIndex;

			[Token(Token = "0x4001A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass35_0 CS$<>8__locals1;

			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0x9D3B04", Offset = "0x9D3B04", VA = "0x9D3B04")]
			public <>c__DisplayClass35_1()
			{
			}

			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0x9D44BC", Offset = "0x9D44BC", VA = "0x9D44BC")]
			internal bool <RemoveTreeOnTerrain>b__0(GTreeInstance tree)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200034E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FA20", Offset = "0x56FA20")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color[] maskData;

			[Token(Token = "0x4001A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GFoliageRemover <>4__this;

			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0x9D3B0C", Offset = "0x9D3B0C", VA = "0x9D3B0C")]
			public <>c__DisplayClass36_0()
			{
			}
		}

		[Token(Token = "0x200034F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FA30", Offset = "0x56FA30")]
		private sealed class <>c__DisplayClass36_1
		{
			[Token(Token = "0x4001A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int grassIndex;

			[Token(Token = "0x4001A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass36_0 CS$<>8__locals1;

			[Token(Token = "0x6001CBC")]
			[Address(RVA = "0x9D3B14", Offset = "0x9D3B14", VA = "0x9D3B14")]
			public <>c__DisplayClass36_1()
			{
			}

			[Token(Token = "0x6001CBD")]
			[Address(RVA = "0x9D45B0", Offset = "0x9D45B0", VA = "0x9D45B0")]
			internal bool <RemoveGrassOnTerrain>b__0(GGrassInstance grass)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve falloff;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool removeTrees;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool removeGrasses;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<int> treePrototypeIndices;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<int> grassPrototypeIndices;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Texture2D falloffNoise;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector2 falloffNoiseSize;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int maskResolution;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Texture2D falloffTexture;

		[Token(Token = "0x17000293")]
		public AnimationCurve Falloff
		{
			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0x9D2430", Offset = "0x9D2430", VA = "0x9D2430")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0x9D246C", Offset = "0x9D246C", VA = "0x9D246C")]
			set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public bool RemoveTrees
		{
			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0x9D2474", Offset = "0x9D2474", VA = "0x9D2474")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E30")]
			[Address(RVA = "0x9D247C", Offset = "0x9D247C", VA = "0x9D247C")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public bool RemoveGrasses
		{
			[Token(Token = "0x6000E31")]
			[Address(RVA = "0x9D2488", Offset = "0x9D2488", VA = "0x9D2488")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E32")]
			[Address(RVA = "0x9D2490", Offset = "0x9D2490", VA = "0x9D2490")]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public List<int> TreePrototypeIndices
		{
			[Token(Token = "0x6000E33")]
			[Address(RVA = "0x9D249C", Offset = "0x9D249C", VA = "0x9D249C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E34")]
			[Address(RVA = "0x9D2510", Offset = "0x9D2510", VA = "0x9D2510")]
			set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public List<int> GrassPrototypeIndices
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x9D2518", Offset = "0x9D2518", VA = "0x9D2518")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x9D258C", Offset = "0x9D258C", VA = "0x9D258C")]
			set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public Texture2D FalloffNoise
		{
			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x9D2594", Offset = "0x9D2594", VA = "0x9D2594")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x9D259C", Offset = "0x9D259C", VA = "0x9D259C")]
			set
			{
			}
		}

		[Token(Token = "0x17000299")]
		public Vector2 FalloffNoiseSize
		{
			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x9D25A4", Offset = "0x9D25A4", VA = "0x9D25A4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x9D25AC", Offset = "0x9D25AC", VA = "0x9D25AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		public int MaskResolution
		{
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x9D25B4", Offset = "0x9D25B4", VA = "0x9D25B4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x9D25BC", Offset = "0x9D25BC", VA = "0x9D25BC")]
			set
			{
			}
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x9D2648", Offset = "0x9D2648", VA = "0x9D2648", Slot = "4")]
		public override void Apply()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x9D2958", Offset = "0x9D2958", VA = "0x9D2958")]
		private void Apply(GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x9D3740", Offset = "0x9D3740", VA = "0x9D3740")]
		private void RemoveTreeOnTerrain(GStylizedTerrain t, Color[] maskData)
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x9D38CC", Offset = "0x9D38CC", VA = "0x9D38CC")]
		private void RemoveGrassOnTerrain(GStylizedTerrain t, Color[] maskData)
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x9D35CC", Offset = "0x9D35CC", VA = "0x9D35CC")]
		public void Internal_Apply(GStylizedTerrain t, RenderTexture rt, List<Vector4> vertices)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x9D3B1C", Offset = "0x9D3B1C", VA = "0x9D3B1C")]
		private void DrawOnTexture(RenderTexture rt, Material mat, int pass, List<Vector4> worldPoints, GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x9D4424", Offset = "0x9D4424", VA = "0x9D4424")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x9D28B8", Offset = "0x9D28B8", VA = "0x9D28B8")]
		public void Internal_UpdateFalloffTexture()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x9D44AC", Offset = "0x9D44AC", VA = "0x9D44AC")]
		public GFoliageRemover()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "GDisplayName", RVA = "0x56E358", Offset = "0x56E358")]
	public class GFoliageSpawner : GSplineModifier
	{
		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve falloff;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool spawnTrees;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool spawnGrasses;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<int> treePrototypeIndices;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<int> grassPrototypeIndices;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Texture2D falloffNoise;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector2 falloffNoiseSize;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int maskResolution;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private int treeDensity;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int grassDensity;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float minRotation;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float maxRotation;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Vector3 minScale;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Vector3 maxScale;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Texture2D falloffTexture;

		[Token(Token = "0x1700029B")]
		public AnimationCurve Falloff
		{
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x9D46A4", Offset = "0x9D46A4", VA = "0x9D46A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E47")]
			[Address(RVA = "0x9D46E0", Offset = "0x9D46E0", VA = "0x9D46E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public bool SpawnTrees
		{
			[Token(Token = "0x6000E48")]
			[Address(RVA = "0x9D46E8", Offset = "0x9D46E8", VA = "0x9D46E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0x9D46F0", Offset = "0x9D46F0", VA = "0x9D46F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public bool SpawnGrasses
		{
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0x9D46FC", Offset = "0x9D46FC", VA = "0x9D46FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x9D4704", Offset = "0x9D4704", VA = "0x9D4704")]
			set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public List<int> TreePrototypeIndices
		{
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x9D4710", Offset = "0x9D4710", VA = "0x9D4710")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0x9D4784", Offset = "0x9D4784", VA = "0x9D4784")]
			set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		public List<int> GrassPrototypeIndices
		{
			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0x9D478C", Offset = "0x9D478C", VA = "0x9D478C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0x9D4800", Offset = "0x9D4800", VA = "0x9D4800")]
			set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public Texture2D FalloffNoise
		{
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x9D4808", Offset = "0x9D4808", VA = "0x9D4808")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E51")]
			[Address(RVA = "0x9D4810", Offset = "0x9D4810", VA = "0x9D4810")]
			set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public Vector2 FalloffNoiseSize
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x9D4818", Offset = "0x9D4818", VA = "0x9D4818")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x9D4820", Offset = "0x9D4820", VA = "0x9D4820")]
			set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public int MaskResolution
		{
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x9D4828", Offset = "0x9D4828", VA = "0x9D4828")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x9D4830", Offset = "0x9D4830", VA = "0x9D4830")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public int TreeDensity
		{
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x9D48BC", Offset = "0x9D48BC", VA = "0x9D48BC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0x9D48C4", Offset = "0x9D48C4", VA = "0x9D48C4")]
			set
			{
			}
		}

		[Token(Token = "0x170002A4")]
		public int GrassDensity
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x9D4948", Offset = "0x9D4948", VA = "0x9D4948")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x9D4950", Offset = "0x9D4950", VA = "0x9D4950")]
			set
			{
			}
		}

		[Token(Token = "0x170002A5")]
		public float MinRotation
		{
			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0x9D49D4", Offset = "0x9D49D4", VA = "0x9D49D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0x9D49DC", Offset = "0x9D49DC", VA = "0x9D49DC")]
			set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		public float MaxRotation
		{
			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0x9D49E4", Offset = "0x9D49E4", VA = "0x9D49E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x9D49EC", Offset = "0x9D49EC", VA = "0x9D49EC")]
			set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public Vector3 MinScale
		{
			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0x9D49F4", Offset = "0x9D49F4", VA = "0x9D49F4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x9D4A00", Offset = "0x9D4A00", VA = "0x9D4A00")]
			set
			{
			}
		}

		[Token(Token = "0x170002A8")]
		public Vector3 MaxScale
		{
			[Token(Token = "0x6000E60")]
			[Address(RVA = "0x9D4A0C", Offset = "0x9D4A0C", VA = "0x9D4A0C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0x9D4A18", Offset = "0x9D4A18", VA = "0x9D4A18")]
			set
			{
			}
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x9D4A24", Offset = "0x9D4A24", VA = "0x9D4A24", Slot = "4")]
		public override void Apply()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x9D4D34", Offset = "0x9D4D34", VA = "0x9D4D34")]
		private void Apply(GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x9D57B4", Offset = "0x9D57B4", VA = "0x9D57B4")]
		private void SpawnTreesOnTerrain(GStylizedTerrain t, Color[] maskData, List<Vector4> vertices)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x9D5D80", Offset = "0x9D5D80", VA = "0x9D5D80")]
		private void SpawnGrassesOnTerrain(GStylizedTerrain t, Color[] maskData, List<Vector4> vertices)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x9D5110", Offset = "0x9D5110", VA = "0x9D5110")]
		public void Internal_Apply(GStylizedTerrain t, RenderTexture rt, List<Vector4> vertices)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x9D63B4", Offset = "0x9D63B4", VA = "0x9D63B4")]
		private void DrawOnTexture(RenderTexture rt, Material mat, int pass, List<Vector4> worldPoints, GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x9D6CBC", Offset = "0x9D6CBC", VA = "0x9D6CBC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x9D4C94", Offset = "0x9D4C94", VA = "0x9D4C94")]
		public void Internal_UpdateFalloffTexture()
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x9D6DC4", Offset = "0x9D6DC4", VA = "0x9D6DC4")]
		public GFoliageSpawner()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	[AttributeAttribute(Name = "GDisplayName", RVA = "0x56E390", Offset = "0x56E390")]
	public class GObjectRemover : GSplineModifier
	{
		[Token(Token = "0x2000350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FA40", Offset = "0x56FA40")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4001A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GStylizedTerrain t;

			[Token(Token = "0x4001A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color[] maskData;

			[Token(Token = "0x4001A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GObjectRemover <>4__this;

			[Token(Token = "0x4001A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Predicate<GameObject> <>9__0;

			[Token(Token = "0x6001CBE")]
			[Address(RVA = "0x9D781C", Offset = "0x9D781C", VA = "0x9D781C")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6001CBF")]
			[Address(RVA = "0x9D81B4", Offset = "0x9D81B4", VA = "0x9D81B4")]
			internal bool <RemoveObjectFromTerrain>b__0(GameObject instance)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve falloff;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<GameObject> prototypes;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<int> prototypeIndices;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Texture2D falloffNoise;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 falloffNoiseSize;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int maskResolution;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture2D falloffTexture;

		[Token(Token = "0x170002A9")]
		public AnimationCurve Falloff
		{
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0x9D6DCC", Offset = "0x9D6DCC", VA = "0x9D6DCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0x9D6E08", Offset = "0x9D6E08", VA = "0x9D6E08")]
			set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public List<GameObject> Prototypes
		{
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0x9D6E10", Offset = "0x9D6E10", VA = "0x9D6E10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0x9D6E84", Offset = "0x9D6E84", VA = "0x9D6E84")]
			set
			{
			}
		}

		[Token(Token = "0x170002AB")]
		public List<int> PrototypeIndices
		{
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x9D6E8C", Offset = "0x9D6E8C", VA = "0x9D6E8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0x9D6F00", Offset = "0x9D6F00", VA = "0x9D6F00")]
			set
			{
			}
		}

		[Token(Token = "0x170002AC")]
		public Texture2D FalloffNoise
		{
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0x9D6F08", Offset = "0x9D6F08", VA = "0x9D6F08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E72")]
			[Address(RVA = "0x9D6F10", Offset = "0x9D6F10", VA = "0x9D6F10")]
			set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		public Vector2 FalloffNoiseSize
		{
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0x9D6F18", Offset = "0x9D6F18", VA = "0x9D6F18")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x9D6F20", Offset = "0x9D6F20", VA = "0x9D6F20")]
			set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public int MaskResolution
		{
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x9D6F28", Offset = "0x9D6F28", VA = "0x9D6F28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x9D6F30", Offset = "0x9D6F30", VA = "0x9D6F30")]
			set
			{
			}
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x9D6FBC", Offset = "0x9D6FBC", VA = "0x9D6FBC", Slot = "4")]
		public override void Apply()
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x9D72CC", Offset = "0x9D72CC", VA = "0x9D72CC")]
		private void Apply(GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x9D7654", Offset = "0x9D7654", VA = "0x9D7654")]
		private void RemoveObjectFromTerrain(GStylizedTerrain t, Color[] maskData)
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x9D74E0", Offset = "0x9D74E0", VA = "0x9D74E0")]
		public void Internal_Apply(GStylizedTerrain t, RenderTexture rt, List<Vector4> vertices)
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x9D7824", Offset = "0x9D7824", VA = "0x9D7824")]
		private void DrawOnTexture(RenderTexture rt, Material mat, int pass, List<Vector4> worldPoints, GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x9D812C", Offset = "0x9D812C", VA = "0x9D812C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x9D722C", Offset = "0x9D722C", VA = "0x9D722C")]
		public void Internal_UpdateFalloffTexture()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x9D81AC", Offset = "0x9D81AC", VA = "0x9D81AC")]
		public GObjectRemover()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "GDisplayName", RVA = "0x56E3C8", Offset = "0x56E3C8")]
	public class GObjectSpawner : GSplineModifier
	{
		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve falloff;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<GameObject> prototypes;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<int> prototypeIndices;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Texture2D falloffNoise;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 falloffNoiseSize;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int maskResolution;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int density;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float minRotation;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float maxRotation;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Vector3 minScale;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Vector3 maxScale;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool alignToSurface;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Texture2D falloffTexture;

		[Token(Token = "0x170002AF")]
		public AnimationCurve Falloff
		{
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x9D82A4", Offset = "0x9D82A4", VA = "0x9D82A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x9D82E0", Offset = "0x9D82E0", VA = "0x9D82E0")]
			set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public List<GameObject> Prototypes
		{
			[Token(Token = "0x6000E81")]
			[Address(RVA = "0x9D82E8", Offset = "0x9D82E8", VA = "0x9D82E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x9D835C", Offset = "0x9D835C", VA = "0x9D835C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public List<int> PrototypeIndices
		{
			[Token(Token = "0x6000E83")]
			[Address(RVA = "0x9D8364", Offset = "0x9D8364", VA = "0x9D8364")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x9D83D8", Offset = "0x9D83D8", VA = "0x9D83D8")]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public Texture2D FalloffNoise
		{
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x9D83E0", Offset = "0x9D83E0", VA = "0x9D83E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x9D83E8", Offset = "0x9D83E8", VA = "0x9D83E8")]
			set
			{
			}
		}

		[Token(Token = "0x170002B3")]
		public Vector2 FalloffNoiseSize
		{
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x9D83F0", Offset = "0x9D83F0", VA = "0x9D83F0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x9D83F8", Offset = "0x9D83F8", VA = "0x9D83F8")]
			set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		public int MaskResolution
		{
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0x9D8400", Offset = "0x9D8400", VA = "0x9D8400")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0x9D8408", Offset = "0x9D8408", VA = "0x9D8408")]
			set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public int Density
		{
			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0x9D8494", Offset = "0x9D8494", VA = "0x9D8494")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x9D849C", Offset = "0x9D849C", VA = "0x9D849C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public float MinRotation
		{
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0x9D8520", Offset = "0x9D8520", VA = "0x9D8520")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x9D8528", Offset = "0x9D8528", VA = "0x9D8528")]
			set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		public float MaxRotation
		{
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0x9D8530", Offset = "0x9D8530", VA = "0x9D8530")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x9D8538", Offset = "0x9D8538", VA = "0x9D8538")]
			set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public Vector3 MinScale
		{
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0x9D8540", Offset = "0x9D8540", VA = "0x9D8540")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x9D854C", Offset = "0x9D854C", VA = "0x9D854C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public Vector3 MaxScale
		{
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x9D8558", Offset = "0x9D8558", VA = "0x9D8558")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x9D8564", Offset = "0x9D8564", VA = "0x9D8564")]
			set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public bool AlignToSurface
		{
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0x9D8570", Offset = "0x9D8570", VA = "0x9D8570")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E96")]
			[Address(RVA = "0x9D8578", Offset = "0x9D8578", VA = "0x9D8578")]
			set
			{
			}
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x9D8584", Offset = "0x9D8584", VA = "0x9D8584", Slot = "4")]
		public override void Apply()
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x9D8894", Offset = "0x9D8894", VA = "0x9D8894")]
		private void Apply(GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x9D8C30", Offset = "0x9D8C30", VA = "0x9D8C30")]
		private void SpawnObjectsOnTerrain(GStylizedTerrain t, Color[] maskData, List<Vector4> vertices)
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x9D8ABC", Offset = "0x9D8ABC", VA = "0x9D8ABC")]
		public void Internal_Apply(GStylizedTerrain t, RenderTexture rt, List<Vector4> vertices)
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x9D9298", Offset = "0x9D9298", VA = "0x9D9298")]
		private void DrawOnTexture(RenderTexture rt, Material mat, int pass, List<Vector4> worldPoints, GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x9D9BA0", Offset = "0x9D9BA0", VA = "0x9D9BA0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x9D87F4", Offset = "0x9D87F4", VA = "0x9D87F4")]
		public void Internal_UpdateFalloffTexture()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x9D9CB0", Offset = "0x9D9CB0", VA = "0x9D9CB0")]
		public GObjectSpawner()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "GDisplayName", RVA = "0x56E400", Offset = "0x56E400")]
	public class GPathPainter : GSplineModifier
	{
		[Token(Token = "0x2000351")]
		public enum PaintChannel
		{
			[Token(Token = "0x4001A5B")]
			AlbedoAndMetallic,
			[Token(Token = "0x4001A5C")]
			Splat
		}

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve falloff;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PaintChannel channel;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Color color;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float metallic;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float smoothness;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int splatIndex;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Texture2D falloffNoise;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector2 falloffNoiseSize;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Texture2D falloffTexture;

		[Token(Token = "0x170002BB")]
		public AnimationCurve Falloff
		{
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x9D9CB8", Offset = "0x9D9CB8", VA = "0x9D9CB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x9D9CF4", Offset = "0x9D9CF4", VA = "0x9D9CF4")]
			set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		public PaintChannel Channel
		{
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0x9D9CFC", Offset = "0x9D9CFC", VA = "0x9D9CFC")]
			get
			{
				return default(PaintChannel);
			}
			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0x9D9D04", Offset = "0x9D9D04", VA = "0x9D9D04")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public Color Color
		{
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0x9D9D0C", Offset = "0x9D9D0C", VA = "0x9D9D0C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x9D9D18", Offset = "0x9D9D18", VA = "0x9D9D18")]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public float Metallic
		{
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x9D9D24", Offset = "0x9D9D24", VA = "0x9D9D24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x9D9D2C", Offset = "0x9D9D2C", VA = "0x9D9D2C")]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public float Smoothness
		{
			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0x9D9DA8", Offset = "0x9D9DA8", VA = "0x9D9DA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x9D9DB0", Offset = "0x9D9DB0", VA = "0x9D9DB0")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public int SplatIndex
		{
			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0x9D9E2C", Offset = "0x9D9E2C", VA = "0x9D9E2C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x9D9E34", Offset = "0x9D9E34", VA = "0x9D9E34")]
			set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		public Texture2D FalloffNoise
		{
			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x9D9EB4", Offset = "0x9D9EB4", VA = "0x9D9EB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x9D9EBC", Offset = "0x9D9EBC", VA = "0x9D9EBC")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public Vector2 FalloffNoiseSize
		{
			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0x9D9EC4", Offset = "0x9D9EC4", VA = "0x9D9EC4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x9D9ECC", Offset = "0x9D9ECC", VA = "0x9D9ECC")]
			set
			{
			}
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x9D9ED4", Offset = "0x9D9ED4", VA = "0x9D9ED4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x9D9F70", Offset = "0x9D9F70", VA = "0x9D9F70", Slot = "4")]
		public override void Apply()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x9DA280", Offset = "0x9DA280", VA = "0x9DA280")]
		private void Apply(GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x9DA368", Offset = "0x9DA368", VA = "0x9DA368")]
		private void ApplyAlbedoAndMetallic(GStylizedTerrain t, List<Vector4> worldPoints)
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x9DA8E4", Offset = "0x9DA8E4", VA = "0x9DA8E4")]
		public void Internal_ApplyAlbedo(GStylizedTerrain t, List<Vector4> worldPoints, RenderTexture rtAlbedo)
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x9DAB30", Offset = "0x9DAB30", VA = "0x9DAB30")]
		public void Internal_ApplyMetallic(GStylizedTerrain t, List<Vector4> worldPoints, RenderTexture rtMetallic)
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x9DA1E0", Offset = "0x9DA1E0", VA = "0x9DA1E0")]
		public void Internal_UpdateFalloffTexture()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x9DA620", Offset = "0x9DA620", VA = "0x9DA620")]
		private void ApplySplat(GStylizedTerrain t, List<Vector4> worldPoints)
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x9DB638", Offset = "0x9DB638", VA = "0x9DB638")]
		public void Internal_ApplySplat(GStylizedTerrain t, List<Vector4> worldPoints, RenderTexture[] rtControls)
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x9DAD40", Offset = "0x9DAD40", VA = "0x9DAD40")]
		private void DrawOnTexture(RenderTexture rt, Material mat, int pass, List<Vector4> worldPoints, GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x9DB89C", Offset = "0x9DB89C", VA = "0x9DB89C")]
		public GPathPainter()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "GDisplayName", RVA = "0x56E438", Offset = "0x56E438")]
	public class GRampMaker : GSplineModifier
	{
		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve falloff;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool lowerHeight;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool raiseHeight;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int additionalMeshResolution;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Texture2D falloffNoise;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 falloffNoiseSize;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture2D falloffTexture;

		[Token(Token = "0x170002C3")]
		public AnimationCurve Falloff
		{
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x9DB8A4", Offset = "0x9DB8A4", VA = "0x9DB8A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x9DB8E0", Offset = "0x9DB8E0", VA = "0x9DB8E0")]
			set
			{
			}
		}

		[Token(Token = "0x170002C4")]
		public bool LowerHeight
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x9DB8E8", Offset = "0x9DB8E8", VA = "0x9DB8E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x9DB8F0", Offset = "0x9DB8F0", VA = "0x9DB8F0")]
			set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		public bool RaiseHeight
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x9DB8FC", Offset = "0x9DB8FC", VA = "0x9DB8FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0x9DB904", Offset = "0x9DB904", VA = "0x9DB904")]
			set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public int AdditionalMeshResolution
		{
			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0x9DB910", Offset = "0x9DB910", VA = "0x9DB910")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0x9DB918", Offset = "0x9DB918", VA = "0x9DB918")]
			set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public Texture2D FalloffNoise
		{
			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0x9DB99C", Offset = "0x9DB99C", VA = "0x9DB99C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0x9DB9A4", Offset = "0x9DB9A4", VA = "0x9DB9A4")]
			set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		public Vector2 FalloffNoiseSize
		{
			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0x9DB9AC", Offset = "0x9DB9AC", VA = "0x9DB9AC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0x9DB9B4", Offset = "0x9DB9B4", VA = "0x9DB9B4")]
			set
			{
			}
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x9DB9BC", Offset = "0x9DB9BC", VA = "0x9DB9BC", Slot = "4")]
		public override void Apply()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x9DBCE8", Offset = "0x9DBCE8", VA = "0x9DBCE8")]
		private void Apply(GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x9DC174", Offset = "0x9DC174", VA = "0x9DC174")]
		public void Internal_Apply(GStylizedTerrain t, RenderTexture rt, List<Vector4> vertices)
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x9DBC48", Offset = "0x9DBC48", VA = "0x9DBC48")]
		public void Internal_UpdateFalloffTexture()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x9DC3B8", Offset = "0x9DC3B8", VA = "0x9DC3B8")]
		private void DrawOnTexture(RenderTexture rt, Material mat, int pass, List<Vector4> worldPoints, GStylizedTerrain t)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x9DCCB0", Offset = "0x9DCCB0", VA = "0x9DCCB0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x9DCD2C", Offset = "0x9DCD2C", VA = "0x9DCD2C")]
		public GRampMaker()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D5")]
	public class GSpline
	{
		[Token(Token = "0x2000352")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FA50", Offset = "0x56FA50")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001A5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x6001CC0")]
			[Address(RVA = "0x9DD268", Offset = "0x9DD268", VA = "0x9DD268")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001CC1")]
			[Address(RVA = "0x9DDBE8", Offset = "0x9DDBE8", VA = "0x9DDBE8")]
			internal bool <RemoveAnchor>b__0(GSplineSegment s)
			{
				return default(bool);
			}

			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0x9DDC20", Offset = "0x9DDC20", VA = "0x9DDC20")]
			internal void <RemoveAnchor>b__1(GSplineSegment s)
			{
			}
		}

		[Token(Token = "0x2000353")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FA60", Offset = "0x56FA60")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int startIndex;

			[Token(Token = "0x4001A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int endIndex;

			[Token(Token = "0x6001CC3")]
			[Address(RVA = "0x9DD4A0", Offset = "0x9DD4A0", VA = "0x9DD4A0")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0x9DDB8C", Offset = "0x9DDB8C", VA = "0x9DDB8C")]
			internal bool <AddSegment>b__0(GSplineSegment s0)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<GSplineAnchor> anchors;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GSplineSegment> segments;

		[Token(Token = "0x170002C9")]
		public List<GSplineAnchor> Anchors
		{
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x9DCD34", Offset = "0x9DCD34", VA = "0x9DCD34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CA")]
		public List<GSplineSegment> Segments
		{
			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0x9DCDA8", Offset = "0x9DCDA8", VA = "0x9DCDA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CB")]
		public bool HasBranch
		{
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x9DCE1C", Offset = "0x9DCE1C", VA = "0x9DCE1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x9DCF98", Offset = "0x9DCF98", VA = "0x9DCF98")]
		public bool IsSegmentValid(int segmentIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x9DD0F4", Offset = "0x9DD0F4", VA = "0x9DD0F4")]
		public void RemoveAnchor(int index)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x9DD270", Offset = "0x9DD270", VA = "0x9DD270")]
		public GSplineSegment AddSegment(int startIndex, int endIndex)
		{
			return null;
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x9DD4B0", Offset = "0x9DD4B0", VA = "0x9DD4B0")]
		public Vector3 EvaluatePosition(int segmentIndex, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x9DD784", Offset = "0x9DD784", VA = "0x9DD784")]
		public Quaternion EvaluateRotation(int segmentIndex, float t)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x9DD908", Offset = "0x9DD908", VA = "0x9DD908")]
		public Vector3 EvaluateScale(int segmentIndex, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x9DDA70", Offset = "0x9DDA70", VA = "0x9DDA70")]
		public Vector3 EvaluateUpVector(int segmentIndex, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x9DCE20", Offset = "0x9DCE20", VA = "0x9DCE20")]
		private bool CheckHasBranch()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x9DDB84", Offset = "0x9DDB84", VA = "0x9DDB84")]
		public GSpline()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D6")]
	public class GSplineAnchor
	{
		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Vector3 position;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Quaternion rotation;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 scale;

		[Token(Token = "0x170002CC")]
		public Vector3 Position
		{
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0x9DDC64", Offset = "0x9DDC64", VA = "0x9DDC64")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x9DDC70", Offset = "0x9DDC70", VA = "0x9DDC70")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0x9DDC7C", Offset = "0x9DDC7C", VA = "0x9DDC7C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0x9DDC88", Offset = "0x9DDC88", VA = "0x9DDC88")]
			set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public Vector3 Scale
		{
			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0x9DDC94", Offset = "0x9DDC94", VA = "0x9DDC94")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0x9DDCA0", Offset = "0x9DDCA0", VA = "0x9DDCA0")]
			set
			{
			}
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x9DDCAC", Offset = "0x9DDCAC", VA = "0x9DDCAC")]
		public GSplineAnchor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D7")]
	[ExecuteInEditMode]
	public class GSplineCreator : MonoBehaviour
	{
		[Token(Token = "0x2000354")]
		public delegate void SplineChangedHandler(GSplineCreator sender);

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int groupId;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 positionOffset;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Quaternion initialRotation;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector3 initialScale;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int smoothness;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float width;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float falloffWidth;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GSpline spline;

		[Token(Token = "0x170002CF")]
		public int GroupId
		{
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x9DDE1C", Offset = "0x9DDE1C", VA = "0x9DDE1C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x9DDE24", Offset = "0x9DDE24", VA = "0x9DDE24")]
			set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		public Vector3 PositionOffset
		{
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x9DDE2C", Offset = "0x9DDE2C", VA = "0x9DDE2C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x9DDE38", Offset = "0x9DDE38", VA = "0x9DDE38")]
			set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		public Quaternion InitialRotation
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x9DDE44", Offset = "0x9DDE44", VA = "0x9DDE44")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x9DDE50", Offset = "0x9DDE50", VA = "0x9DDE50")]
			set
			{
			}
		}

		[Token(Token = "0x170002D2")]
		public Vector3 InitialScale
		{
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x9DDE5C", Offset = "0x9DDE5C", VA = "0x9DDE5C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x9DDE68", Offset = "0x9DDE68", VA = "0x9DDE68")]
			set
			{
			}
		}

		[Token(Token = "0x170002D3")]
		public int Smoothness
		{
			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x9DDE74", Offset = "0x9DDE74", VA = "0x9DDE74")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0x9DDE7C", Offset = "0x9DDE7C", VA = "0x9DDE7C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D4")]
		public float Width
		{
			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x9DDEFC", Offset = "0x9DDEFC", VA = "0x9DDEFC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x9DDF04", Offset = "0x9DDF04", VA = "0x9DDF04")]
			set
			{
			}
		}

		[Token(Token = "0x170002D5")]
		public float FalloffWidth
		{
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x9DDF84", Offset = "0x9DDF84", VA = "0x9DDF84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x9DDF8C", Offset = "0x9DDF8C", VA = "0x9DDF8C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		public GSpline Spline
		{
			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0x9DE00C", Offset = "0x9DE00C", VA = "0x9DE00C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EF1")]
			[Address(RVA = "0x9DE078", Offset = "0x9DE078", VA = "0x9DE078")]
			set
			{
			}
		}

		[Token(Token = "0x14000006")]
		public static event SplineChangedHandler Editor_SplineChanged
		{
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x9DDCB4", Offset = "0x9DDCB4", VA = "0x9DDCB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C11C", Offset = "0x57C11C")]
			add
			{
			}
			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x9DDD68", Offset = "0x9DDD68", VA = "0x9DDD68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C12C", Offset = "0x57C12C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x9DE080", Offset = "0x9DE080", VA = "0x9DE080")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x9DE15C", Offset = "0x9DE15C", VA = "0x9DE15C")]
		public GSplineAnchor AddAnchorAutoTangent(Vector3 worldPositionNoOffset, int activeAnchorIndex = -1)
		{
			return null;
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x9DE304", Offset = "0x9DE304", VA = "0x9DE304")]
		public void AdjustTangent(int segmentIndex)
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x9DE8A4", Offset = "0x9DE8A4", VA = "0x9DE8A4")]
		public List<Vector3> GenerateVertices()
		{
			return null;
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x9D2BB8", Offset = "0x9D2BB8", VA = "0x9D2BB8")]
		public List<Vector4> GenerateVerticesWithFalloff()
		{
			return null;
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x9D5284", Offset = "0x9D5284", VA = "0x9D5284")]
		public IEnumerable<Rect> SweepDirtyRect(GStylizedTerrain terrain)
		{
			return null;
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x9DED34", Offset = "0x9DED34", VA = "0x9DED34")]
		public static void MarkSplineChanged(GSplineCreator sender)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x9DF154", Offset = "0x9DF154", VA = "0x9DF154")]
		public GSplineCreator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56E480", Offset = "0x56E480")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56E480", Offset = "0x56E480")]
	public abstract class GSplineModifier : MonoBehaviour
	{
		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GSplineCreator splineCreator;

		[Token(Token = "0x170002D7")]
		public GSplineCreator SplineCreator
		{
			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x9DF19C", Offset = "0x9DF19C", VA = "0x9DF19C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0x9DF1A4", Offset = "0x9DF1A4", VA = "0x9DF1A4")]
			set
			{
			}
		}

		[Token(Token = "0x6000EFC")]
		public abstract void Apply();

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x9D44B4", Offset = "0x9D44B4", VA = "0x9D44B4")]
		protected GSplineModifier()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D9")]
	public class GSplineSegment
	{
		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int startIndex;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int endIndex;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 startTangent;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 endTangent;

		[Token(Token = "0x170002D8")]
		public int StartIndex
		{
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x9DF1AC", Offset = "0x9DF1AC", VA = "0x9DF1AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x9DF1B4", Offset = "0x9DF1B4", VA = "0x9DF1B4")]
			set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public int EndIndex
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x9DF1BC", Offset = "0x9DF1BC", VA = "0x9DF1BC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x9DF1C4", Offset = "0x9DF1C4", VA = "0x9DF1C4")]
			set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public Vector3 StartTangent
		{
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x9DF1CC", Offset = "0x9DF1CC", VA = "0x9DF1CC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x9DF1D8", Offset = "0x9DF1D8", VA = "0x9DF1D8")]
			set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public Vector3 EndTangent
		{
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x9DF1E4", Offset = "0x9DF1E4", VA = "0x9DF1E4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F05")]
			[Address(RVA = "0x9DF1F0", Offset = "0x9DF1F0", VA = "0x9DF1F0")]
			set
			{
			}
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x9DD4A8", Offset = "0x9DD4A8", VA = "0x9DD4A8")]
		public GSplineSegment()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DA")]
	public struct GSplineToolSettings
	{
		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Color anchorColor;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Color segmentColor;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color meshColor;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color selectedElementColor;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color positiveHighlightColor;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color negativeHighlighColor;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool showMesh;

		[Token(Token = "0x170002DC")]
		public Color AnchorColor
		{
			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x5EF7A4", Offset = "0x5EF7A4", VA = "0x5EF7A4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000F08")]
			[Address(RVA = "0x5EF7B0", Offset = "0x5EF7B0", VA = "0x5EF7B0")]
			set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public Color SegmentColor
		{
			[Token(Token = "0x6000F09")]
			[Address(RVA = "0x5EF7BC", Offset = "0x5EF7BC", VA = "0x5EF7BC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0x5EF7C8", Offset = "0x5EF7C8", VA = "0x5EF7C8")]
			set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public Color MeshColor
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x5EF7D4", Offset = "0x5EF7D4", VA = "0x5EF7D4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0x5EF7E0", Offset = "0x5EF7E0", VA = "0x5EF7E0")]
			set
			{
			}
		}

		[Token(Token = "0x170002DF")]
		public Color SelectedElementColor
		{
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x5EF7EC", Offset = "0x5EF7EC", VA = "0x5EF7EC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0x5EF7F8", Offset = "0x5EF7F8", VA = "0x5EF7F8")]
			set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public Color PositiveHighlightColor
		{
			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0x5EF804", Offset = "0x5EF804", VA = "0x5EF804")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0x5EF810", Offset = "0x5EF810", VA = "0x5EF810")]
			set
			{
			}
		}

		[Token(Token = "0x170002E1")]
		public Color NegativeHighlightColor
		{
			[Token(Token = "0x6000F11")]
			[Address(RVA = "0x5EF81C", Offset = "0x5EF81C", VA = "0x5EF81C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0x5EF828", Offset = "0x5EF828", VA = "0x5EF828")]
			set
			{
			}
		}

		[Token(Token = "0x170002E2")]
		public bool ShowMesh
		{
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0x5EF834", Offset = "0x5EF834", VA = "0x5EF834")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x5EF83C", Offset = "0x5EF83C", VA = "0x5EF83C")]
			set
			{
			}
		}
	}
}
namespace Pinwheel.Griffin.PaintTool
{
	[Serializable]
	[Token(Token = "0x20001DB")]
	public struct GPaintToolSettings
	{
		[Token(Token = "0x2000355")]
		public enum GPaintModeSelectorType
		{
			[Token(Token = "0x4001A61")]
			Grid,
			[Token(Token = "0x4001A62")]
			Dropdown
		}

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool useSimpleCursor;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private Color normalActionCursorColor;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Color negativeActionCursorColor;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color alternativeActionCursorColor;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float radiusStep;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float rotationStep;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float opacityStep;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int densityStep;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private GPaintModeSelectorType paintModeSelectorType;

		[Token(Token = "0x170002E3")]
		public bool UseSimpleCursor
		{
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x5F68FC", Offset = "0x5F68FC", VA = "0x5F68FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F16")]
			[Address(RVA = "0x5F6904", Offset = "0x5F6904", VA = "0x5F6904")]
			set
			{
			}
		}

		[Token(Token = "0x170002E4")]
		public Color NormalActionCursorColor
		{
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0x5F6910", Offset = "0x5F6910", VA = "0x5F6910")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x5F691C", Offset = "0x5F691C", VA = "0x5F691C")]
			set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public Color NegativeActionCursorColor
		{
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x5F6928", Offset = "0x5F6928", VA = "0x5F6928")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0x5F6934", Offset = "0x5F6934", VA = "0x5F6934")]
			set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		public Color AlternativeActionCursorColor
		{
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0x5F6940", Offset = "0x5F6940", VA = "0x5F6940")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x5F694C", Offset = "0x5F694C", VA = "0x5F694C")]
			set
			{
			}
		}

		[Token(Token = "0x170002E7")]
		public float RadiusStep
		{
			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0x5F6958", Offset = "0x5F6958", VA = "0x5F6958")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0x5F6960", Offset = "0x5F6960", VA = "0x5F6960")]
			set
			{
			}
		}

		[Token(Token = "0x170002E8")]
		public float RotationStep
		{
			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0x5F6968", Offset = "0x5F6968", VA = "0x5F6968")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F20")]
			[Address(RVA = "0x5F6970", Offset = "0x5F6970", VA = "0x5F6970")]
			set
			{
			}
		}

		[Token(Token = "0x170002E9")]
		public float OpacityStep
		{
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0x5F6978", Offset = "0x5F6978", VA = "0x5F6978")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F22")]
			[Address(RVA = "0x5F6980", Offset = "0x5F6980", VA = "0x5F6980")]
			set
			{
			}
		}

		[Token(Token = "0x170002EA")]
		public int DensityStep
		{
			[Token(Token = "0x6000F23")]
			[Address(RVA = "0x5F6988", Offset = "0x5F6988", VA = "0x5F6988")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F24")]
			[Address(RVA = "0x5F6990", Offset = "0x5F6990", VA = "0x5F6990")]
			set
			{
			}
		}

		[Token(Token = "0x170002EB")]
		public GPaintModeSelectorType PaintModeSelectorType
		{
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0x5F6998", Offset = "0x5F6998", VA = "0x5F6998")]
			get
			{
				return default(GPaintModeSelectorType);
			}
			[Token(Token = "0x6000F26")]
			[Address(RVA = "0x5F69A0", Offset = "0x5F69A0", VA = "0x5F69A0")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001DC")]
	public enum GPainterActionType
	{
		[Token(Token = "0x4000FB6")]
		Normal,
		[Token(Token = "0x4000FB7")]
		Negative,
		[Token(Token = "0x4000FB8")]
		Alternative
	}
	[Token(Token = "0x20001DD")]
	public enum GPainterMouseEventType
	{
		[Token(Token = "0x4000FBA")]
		Down,
		[Token(Token = "0x4000FBB")]
		Drag,
		[Token(Token = "0x4000FBC")]
		Up
	}
	[Serializable]
	[Token(Token = "0x20001DE")]
	[ExecuteInEditMode]
	public class GFoliagePainter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000356")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FA70", Offset = "0x56FA70")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Type> <>9__8_0;

			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0xBC26C0", Offset = "0xBC26C0", VA = "0xBC26C0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0xBC26C8", Offset = "0xBC26C8", VA = "0xBC26C8")]
			internal bool <RefreshCustomPainterTypes>b__8_0(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<string> BUILTIN_PAINTER_NAME;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Type> customPainterTypes;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int groupId;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private GFoliagePaintingMode mode;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int customPainterIndex;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string customPainterArgs;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float brushRadius;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float brushRadiusJitter;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float brushRotation;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float brushRotationJitter;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int brushDensity;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float brushDensityJitter;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float brushScatter;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float brushScatterJitter;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<Texture2D> brushMasks;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int selectedBrushMaskIndex;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<int> selectedTreeIndices;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private List<int> selectedGrassIndices;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float eraseRatio;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float scaleStrength;

		[Token(Token = "0x170002EC")]
		public static List<Type> CustomPainterTypes
		{
			[Token(Token = "0x6000F27")]
			[Address(RVA = "0xBC1084", Offset = "0xBC1084", VA = "0xBC1084")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F28")]
			[Address(RVA = "0xBC1158", Offset = "0xBC1158", VA = "0xBC1158")]
			private set
			{
			}
		}

		[Token(Token = "0x170002ED")]
		public static string FoliagePainterInterfaceName
		{
			[Token(Token = "0x6000F29")]
			[Address(RVA = "0xBC11C4", Offset = "0xBC11C4", VA = "0xBC11C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EE")]
		public int GroupId
		{
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0xBC155C", Offset = "0xBC155C", VA = "0xBC155C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0xBC1564", Offset = "0xBC1564", VA = "0xBC1564")]
			set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		public GFoliagePaintingMode Mode
		{
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0xBC156C", Offset = "0xBC156C", VA = "0xBC156C")]
			get
			{
				return default(GFoliagePaintingMode);
			}
			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0xBC1574", Offset = "0xBC1574", VA = "0xBC1574")]
			set
			{
			}
		}

		[Token(Token = "0x170002F0")]
		public int CustomPainterIndex
		{
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0xBC157C", Offset = "0xBC157C", VA = "0xBC157C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F31")]
			[Address(RVA = "0xBC1584", Offset = "0xBC1584", VA = "0xBC1584")]
			set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		public string CustomPainterArgs
		{
			[Token(Token = "0x6000F32")]
			[Address(RVA = "0xBC158C", Offset = "0xBC158C", VA = "0xBC158C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F33")]
			[Address(RVA = "0xBC1594", Offset = "0xBC1594", VA = "0xBC1594")]
			set
			{
			}
		}

		[Token(Token = "0x170002F2")]
		public IGFoliagePainter ActivePainter
		{
			[Token(Token = "0x6000F34")]
			[Address(RVA = "0xBC159C", Offset = "0xBC159C", VA = "0xBC159C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F3")]
		public float BrushRadius
		{
			[Token(Token = "0x6000F35")]
			[Address(RVA = "0xBC1734", Offset = "0xBC1734", VA = "0xBC1734")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F36")]
			[Address(RVA = "0xBC173C", Offset = "0xBC173C", VA = "0xBC173C")]
			set
			{
			}
		}

		[Token(Token = "0x170002F4")]
		public float BrushRadiusJitter
		{
			[Token(Token = "0x6000F37")]
			[Address(RVA = "0xBC17C0", Offset = "0xBC17C0", VA = "0xBC17C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F38")]
			[Address(RVA = "0xBC17C8", Offset = "0xBC17C8", VA = "0xBC17C8")]
			set
			{
			}
		}

		[Token(Token = "0x170002F5")]
		public float BrushRotation
		{
			[Token(Token = "0x6000F39")]
			[Address(RVA = "0xBC1844", Offset = "0xBC1844", VA = "0xBC1844")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0xBC184C", Offset = "0xBC184C", VA = "0xBC184C")]
			set
			{
			}
		}

		[Token(Token = "0x170002F6")]
		public float BrushRotationJitter
		{
			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0xBC1854", Offset = "0xBC1854", VA = "0xBC1854")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0xBC185C", Offset = "0xBC185C", VA = "0xBC185C")]
			set
			{
			}
		}

		[Token(Token = "0x170002F7")]
		public int BrushDensity
		{
			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0xBC18D8", Offset = "0xBC18D8", VA = "0xBC18D8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0xBC18E0", Offset = "0xBC18E0", VA = "0xBC18E0")]
			set
			{
			}
		}

		[Token(Token = "0x170002F8")]
		public float BrushDensityJitter
		{
			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0xBC1964", Offset = "0xBC1964", VA = "0xBC1964")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F40")]
			[Address(RVA = "0xBC196C", Offset = "0xBC196C", VA = "0xBC196C")]
			set
			{
			}
		}

		[Token(Token = "0x170002F9")]
		public float BrushScatter
		{
			[Token(Token = "0x6000F41")]
			[Address(RVA = "0xBC19E8", Offset = "0xBC19E8", VA = "0xBC19E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0xBC19F0", Offset = "0xBC19F0", VA = "0xBC19F0")]
			set
			{
			}
		}

		[Token(Token = "0x170002FA")]
		public float BrushScatterJitter
		{
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0xBC1A6C", Offset = "0xBC1A6C", VA = "0xBC1A6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F44")]
			[Address(RVA = "0xBC1A74", Offset = "0xBC1A74", VA = "0xBC1A74")]
			set
			{
			}
		}

		[Token(Token = "0x170002FB")]
		public List<Texture2D> BrushMasks
		{
			[Token(Token = "0x6000F45")]
			[Address(RVA = "0xBC1AF0", Offset = "0xBC1AF0", VA = "0xBC1AF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F46")]
			[Address(RVA = "0xBC1B64", Offset = "0xBC1B64", VA = "0xBC1B64")]
			set
			{
			}
		}

		[Token(Token = "0x170002FC")]
		public int SelectedBrushMaskIndex
		{
			[Token(Token = "0x6000F47")]
			[Address(RVA = "0xBC1B6C", Offset = "0xBC1B6C", VA = "0xBC1B6C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F48")]
			[Address(RVA = "0xBC1B74", Offset = "0xBC1B74", VA = "0xBC1B74")]
			set
			{
			}
		}

		[Token(Token = "0x170002FD")]
		public List<int> SelectedTreeIndices
		{
			[Token(Token = "0x6000F49")]
			[Address(RVA = "0xBC1C30", Offset = "0xBC1C30", VA = "0xBC1C30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F4A")]
			[Address(RVA = "0xBC1CA4", Offset = "0xBC1CA4", VA = "0xBC1CA4")]
			set
			{
			}
		}

		[Token(Token = "0x170002FE")]
		public List<int> SelectedGrassIndices
		{
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0xBC1CAC", Offset = "0xBC1CAC", VA = "0xBC1CAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0xBC1D20", Offset = "0xBC1D20", VA = "0xBC1D20")]
			set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public float EraseRatio
		{
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0xBC1D28", Offset = "0xBC1D28", VA = "0xBC1D28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0xBC1D30", Offset = "0xBC1D30", VA = "0xBC1D30")]
			set
			{
			}
		}

		[Token(Token = "0x17000300")]
		public float ScaleStrength
		{
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0xBC1DAC", Offset = "0xBC1DAC", VA = "0xBC1DAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F50")]
			[Address(RVA = "0xBC1DB4", Offset = "0xBC1DB4", VA = "0xBC1DB4")]
			set
			{
			}
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xBC1248", Offset = "0xBC1248", VA = "0xBC1248")]
		static GFoliagePainter()
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xBC13C4", Offset = "0xBC13C4", VA = "0xBC13C4")]
		public static void RefreshCustomPainterTypes()
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xBC1E34", Offset = "0xBC1E34", VA = "0xBC1E34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xBC1ED0", Offset = "0xBC1ED0", VA = "0xBC1ED0")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xBC1E38", Offset = "0xBC1E38", VA = "0xBC1E38")]
		public void ReloadBrushMasks()
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xBC1F50", Offset = "0xBC1F50", VA = "0xBC1F50")]
		public void Paint(GFoliagePainterArgs args)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xBC25E4", Offset = "0xBC25E4", VA = "0xBC25E4")]
		private System.Random GetRandomGenerator()
		{
			return null;
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xBC2368", Offset = "0xBC2368", VA = "0xBC2368")]
		private void ProcessBrushDynamic(ref GFoliagePainterArgs args)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xBC2654", Offset = "0xBC2654", VA = "0xBC2654")]
		public GFoliagePainter()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public struct GFoliagePainterArgs
	{
		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57415C", Offset = "0x57415C")]
		private Vector3 <HitPoint>k__BackingField;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57416C", Offset = "0x57416C")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57417C", Offset = "0x57417C")]
		private Transform <Transform>k__BackingField;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57418C", Offset = "0x57418C")]
		private Vector2 <UV>k__BackingField;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57419C", Offset = "0x57419C")]
		private int <TriangleIndex>k__BackingField;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5741AC", Offset = "0x5741AC")]
		private Vector3 <BarycentricCoord>k__BackingField;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5741BC", Offset = "0x5741BC")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5741CC", Offset = "0x5741CC")]
		private Vector3 <Normal>k__BackingField;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5741DC", Offset = "0x5741DC")]
		private Vector2 <LightMapCoord>k__BackingField;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5741EC", Offset = "0x5741EC")]
		private Rect <UvRect>k__BackingField;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5741FC", Offset = "0x5741FC")]
		private Vector3[] <WorldPointCorners>k__BackingField;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57420C", Offset = "0x57420C")]
		private Texture2D <Mask>k__BackingField;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57421C", Offset = "0x57421C")]
		private float <Radius>k__BackingField;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57422C", Offset = "0x57422C")]
		private float <Rotation>k__BackingField;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57423C", Offset = "0x57423C")]
		private int <Density>k__BackingField;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57424C", Offset = "0x57424C")]
		private float <EraseRatio>k__BackingField;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57425C", Offset = "0x57425C")]
		private float <ScaleStrength>k__BackingField;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57426C", Offset = "0x57426C")]
		private List<int> <TreeIndices>k__BackingField;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57427C", Offset = "0x57427C")]
		private List<int> <GrassIndices>k__BackingField;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57428C", Offset = "0x57428C")]
		private string <CustomArgs>k__BackingField;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57429C", Offset = "0x57429C")]
		private GPainterMouseEventType <MouseEventType>k__BackingField;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5742AC", Offset = "0x5742AC")]
		private GPainterActionType <ActionType>k__BackingField;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5742BC", Offset = "0x5742BC")]
		private GSpawnFilter[] <Filters>k__BackingField;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5742CC", Offset = "0x5742CC")]
		private bool <ShouldCommitNow>k__BackingField;

		[Token(Token = "0x17000301")]
		public Vector3 HitPoint
		{
			[Token(Token = "0x6000F58")]
			[Address(RVA = "0x5F63D0", Offset = "0x5F63D0", VA = "0x5F63D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C13C", Offset = "0x57C13C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x5F63DC", Offset = "0x5F63DC", VA = "0x5F63DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C14C", Offset = "0x57C14C")]
			set
			{
			}
		}

		[Token(Token = "0x17000302")]
		public Collider Collider
		{
			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x5F63E8", Offset = "0x5F63E8", VA = "0x5F63E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C15C", Offset = "0x57C15C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x5F63F0", Offset = "0x5F63F0", VA = "0x5F63F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C16C", Offset = "0x57C16C")]
			set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public Transform Transform
		{
			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x5F63F8", Offset = "0x5F63F8", VA = "0x5F63F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C17C", Offset = "0x57C17C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x5F6400", Offset = "0x5F6400", VA = "0x5F6400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C18C", Offset = "0x57C18C")]
			set
			{
			}
		}

		[Token(Token = "0x17000304")]
		public Vector2 UV
		{
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x5F6408", Offset = "0x5F6408", VA = "0x5F6408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C19C", Offset = "0x57C19C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x5F6410", Offset = "0x5F6410", VA = "0x5F6410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C1AC", Offset = "0x57C1AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000305")]
		public int TriangleIndex
		{
			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x5F6418", Offset = "0x5F6418", VA = "0x5F6418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C1BC", Offset = "0x57C1BC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x5F6420", Offset = "0x5F6420", VA = "0x5F6420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C1CC", Offset = "0x57C1CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000306")]
		public Vector3 BarycentricCoord
		{
			[Token(Token = "0x6000F62")]
			[Address(RVA = "0x5F6428", Offset = "0x5F6428", VA = "0x5F6428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C1DC", Offset = "0x57C1DC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F63")]
			[Address(RVA = "0x5F6434", Offset = "0x5F6434", VA = "0x5F6434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C1EC", Offset = "0x57C1EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000307")]
		public float Distance
		{
			[Token(Token = "0x6000F64")]
			[Address(RVA = "0x5F6440", Offset = "0x5F6440", VA = "0x5F6440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C1FC", Offset = "0x57C1FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F65")]
			[Address(RVA = "0x5F6448", Offset = "0x5F6448", VA = "0x5F6448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C20C", Offset = "0x57C20C")]
			set
			{
			}
		}

		[Token(Token = "0x17000308")]
		public Vector3 Normal
		{
			[Token(Token = "0x6000F66")]
			[Address(RVA = "0x5F6450", Offset = "0x5F6450", VA = "0x5F6450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C21C", Offset = "0x57C21C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F67")]
			[Address(RVA = "0x5F645C", Offset = "0x5F645C", VA = "0x5F645C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C22C", Offset = "0x57C22C")]
			set
			{
			}
		}

		[Token(Token = "0x17000309")]
		public Vector2 LightMapCoord
		{
			[Token(Token = "0x6000F68")]
			[Address(RVA = "0x5F6468", Offset = "0x5F6468", VA = "0x5F6468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C23C", Offset = "0x57C23C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000F69")]
			[Address(RVA = "0x5F6470", Offset = "0x5F6470", VA = "0x5F6470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C24C", Offset = "0x57C24C")]
			set
			{
			}
		}

		[Token(Token = "0x1700030A")]
		public Rect UvRect
		{
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0x5F6478", Offset = "0x5F6478", VA = "0x5F6478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C25C", Offset = "0x57C25C")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0x5F6484", Offset = "0x5F6484", VA = "0x5F6484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C26C", Offset = "0x57C26C")]
			set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		public Vector3[] WorldPointCorners
		{
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x5F6490", Offset = "0x5F6490", VA = "0x5F6490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C27C", Offset = "0x57C27C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0x5F6498", Offset = "0x5F6498", VA = "0x5F6498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C28C", Offset = "0x57C28C")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700030C")]
		public Texture2D Mask
		{
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0x5F64A0", Offset = "0x5F64A0", VA = "0x5F64A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C29C", Offset = "0x57C29C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F6F")]
			[Address(RVA = "0x5F64A8", Offset = "0x5F64A8", VA = "0x5F64A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C2AC", Offset = "0x57C2AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public float Radius
		{
			[Token(Token = "0x6000F70")]
			[Address(RVA = "0x5F64B0", Offset = "0x5F64B0", VA = "0x5F64B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C2BC", Offset = "0x57C2BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F71")]
			[Address(RVA = "0x5F64B8", Offset = "0x5F64B8", VA = "0x5F64B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C2CC", Offset = "0x57C2CC")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public float Rotation
		{
			[Token(Token = "0x6000F72")]
			[Address(RVA = "0x5F64C0", Offset = "0x5F64C0", VA = "0x5F64C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C2DC", Offset = "0x57C2DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F73")]
			[Address(RVA = "0x5F64C8", Offset = "0x5F64C8", VA = "0x5F64C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C2EC", Offset = "0x57C2EC")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700030F")]
		public int Density
		{
			[Token(Token = "0x6000F74")]
			[Address(RVA = "0x5F64D0", Offset = "0x5F64D0", VA = "0x5F64D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C2FC", Offset = "0x57C2FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F75")]
			[Address(RVA = "0x5F64D8", Offset = "0x5F64D8", VA = "0x5F64D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C30C", Offset = "0x57C30C")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000310")]
		public float EraseRatio
		{
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0x5F64E0", Offset = "0x5F64E0", VA = "0x5F64E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C31C", Offset = "0x57C31C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F77")]
			[Address(RVA = "0x5F64E8", Offset = "0x5F64E8", VA = "0x5F64E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C32C", Offset = "0x57C32C")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000311")]
		public float ScaleStrength
		{
			[Token(Token = "0x6000F78")]
			[Address(RVA = "0x5F64F0", Offset = "0x5F64F0", VA = "0x5F64F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C33C", Offset = "0x57C33C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0x5F64F8", Offset = "0x5F64F8", VA = "0x5F64F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C34C", Offset = "0x57C34C")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000312")]
		public List<int> TreeIndices
		{
			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0x5F6500", Offset = "0x5F6500", VA = "0x5F6500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C35C", Offset = "0x57C35C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0x5F6508", Offset = "0x5F6508", VA = "0x5F6508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C36C", Offset = "0x57C36C")]
			set
			{
			}
		}

		[Token(Token = "0x17000313")]
		public List<int> GrassIndices
		{
			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0x5F6510", Offset = "0x5F6510", VA = "0x5F6510")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C37C", Offset = "0x57C37C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0x5F6518", Offset = "0x5F6518", VA = "0x5F6518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C38C", Offset = "0x57C38C")]
			set
			{
			}
		}

		[Token(Token = "0x17000314")]
		public string CustomArgs
		{
			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0x5F6520", Offset = "0x5F6520", VA = "0x5F6520")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C39C", Offset = "0x57C39C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0x5F6528", Offset = "0x5F6528", VA = "0x5F6528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C3AC", Offset = "0x57C3AC")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000315")]
		public GPainterMouseEventType MouseEventType
		{
			[Token(Token = "0x6000F80")]
			[Address(RVA = "0x5F6530", Offset = "0x5F6530", VA = "0x5F6530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C3BC", Offset = "0x57C3BC")]
			get
			{
				return default(GPainterMouseEventType);
			}
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0x5F6538", Offset = "0x5F6538", VA = "0x5F6538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C3CC", Offset = "0x57C3CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000316")]
		public GPainterActionType ActionType
		{
			[Token(Token = "0x6000F82")]
			[Address(RVA = "0x5F6540", Offset = "0x5F6540", VA = "0x5F6540")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C3DC", Offset = "0x57C3DC")]
			get
			{
				return default(GPainterActionType);
			}
			[Token(Token = "0x6000F83")]
			[Address(RVA = "0x5F6548", Offset = "0x5F6548", VA = "0x5F6548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C3EC", Offset = "0x57C3EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000317")]
		public GSpawnFilter[] Filters
		{
			[Token(Token = "0x6000F84")]
			[Address(RVA = "0x5F6550", Offset = "0x5F6550", VA = "0x5F6550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C3FC", Offset = "0x57C3FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F85")]
			[Address(RVA = "0x5F6558", Offset = "0x5F6558", VA = "0x5F6558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C40C", Offset = "0x57C40C")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000318")]
		public bool ShouldCommitNow
		{
			[Token(Token = "0x6000F86")]
			[Address(RVA = "0x5F6560", Offset = "0x5F6560", VA = "0x5F6560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C41C", Offset = "0x57C41C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x5F6568", Offset = "0x5F6568", VA = "0x5F6568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C42C", Offset = "0x57C42C")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001E0")]
	public enum GFoliagePaintingMode
	{
		[Token(Token = "0x4000FEA")]
		PaintTree,
		[Token(Token = "0x4000FEB")]
		ScaleTree,
		[Token(Token = "0x4000FEC")]
		PaintGrass,
		[Token(Token = "0x4000FED")]
		ScaleGrass,
		[Token(Token = "0x4000FEE")]
		Custom
	}
	[Token(Token = "0x20001E1")]
	public class GGrassPainter : IGFoliagePainter
	{
		[Token(Token = "0x2000357")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FA80", Offset = "0x56FA80")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int grassIndex;

			[Token(Token = "0x4001A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GFoliagePainterArgs args;

			[Token(Token = "0x4001A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public Vector3 localPos;

			[Token(Token = "0x4001A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			public Vector3 terrainSize;

			[Token(Token = "0x4001A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public Vector3 worldPos;

			[Token(Token = "0x4001A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			public GStylizedTerrain terrain;

			[Token(Token = "0x4001A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public Vector3 bary0;

			[Token(Token = "0x4001A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
			public Vector3 bary1;

			[Token(Token = "0x4001A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			public Vector2 maskUv;

			[Token(Token = "0x4001A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			public Texture2D clonedMask;

			[Token(Token = "0x4001A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			public Color maskColor;

			[Token(Token = "0x4001A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			public Predicate<GGrassInstance> <>9__0;

			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0xBC4140", Offset = "0xBC4140", VA = "0xBC4140")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0xBC4148", Offset = "0xBC4148", VA = "0xBC4148")]
			internal bool <HandleEraseGrass>b__0(GGrassInstance grass)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000319")]
		public string Instruction
		{
			[Token(Token = "0x6000F88")]
			[Address(RVA = "0xBC298C", Offset = "0xBC298C", VA = "0xBC298C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031A")]
		public string HistoryPrefix
		{
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0xBC2A64", Offset = "0xBC2A64", VA = "0xBC2A64", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031B")]
		public List<Type> SuitableFilterTypes
		{
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0xBC2AAC", Offset = "0xBC2AAC", VA = "0xBC2AAC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xBC2CB0", Offset = "0xBC2CB0", VA = "0xBC2CB0", Slot = "8")]
		public List<GTerrainResourceFlag> GetResourceFlagForHistory(GFoliagePainterArgs args)
		{
			return null;
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xBC2D10", Offset = "0xBC2D10", VA = "0xBC2D10", Slot = "7")]
		public void Paint(GStylizedTerrain terrain, GFoliagePainterArgs args)
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xBC303C", Offset = "0xBC303C", VA = "0xBC303C")]
		private void HandleSpawnGrass(GStylizedTerrain terrain, GFoliagePainterArgs args)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xBC3A98", Offset = "0xBC3A98", VA = "0xBC3A98")]
		private void HandleEraseGrass(GStylizedTerrain terrain, GFoliagePainterArgs args)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xBC1724", Offset = "0xBC1724", VA = "0xBC1724")]
		public GGrassPainter()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class GGrassScaler : IGFoliagePainter
	{
		[Token(Token = "0x1700031C")]
		public string Instruction
		{
			[Token(Token = "0x6000F90")]
			[Address(RVA = "0xBC4664", Offset = "0xBC4664", VA = "0xBC4664", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031D")]
		public string HistoryPrefix
		{
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0xBC473C", Offset = "0xBC473C", VA = "0xBC473C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031E")]
		public List<Type> SuitableFilterTypes
		{
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0xBC4784", Offset = "0xBC4784", VA = "0xBC4784", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xBC4888", Offset = "0xBC4888", VA = "0xBC4888", Slot = "8")]
		public List<GTerrainResourceFlag> GetResourceFlagForHistory(GFoliagePainterArgs args)
		{
			return null;
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xBC48E8", Offset = "0xBC48E8", VA = "0xBC48E8", Slot = "7")]
		public void Paint(GStylizedTerrain terrain, GFoliagePainterArgs args)
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xBC172C", Offset = "0xBC172C", VA = "0xBC172C")]
		public GGrassScaler()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class GTreePainter : IGFoliagePainter
	{
		[Token(Token = "0x2000358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FA90", Offset = "0x56FA90")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int treeIndex;

			[Token(Token = "0x4001A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GFoliagePainterArgs args;

			[Token(Token = "0x4001A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public Vector3 localPos;

			[Token(Token = "0x4001A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			public Vector3 terrainSize;

			[Token(Token = "0x4001A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public Vector3 worldPos;

			[Token(Token = "0x4001A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			public GStylizedTerrain terrain;

			[Token(Token = "0x4001A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public Vector3 bary0;

			[Token(Token = "0x4001A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
			public Vector3 bary1;

			[Token(Token = "0x4001A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			public Vector2 maskUv;

			[Token(Token = "0x4001A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			public Texture2D clonedMask;

			[Token(Token = "0x4001A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			public Color maskColor;

			[Token(Token = "0x6001CCE")]
			[Address(RVA = "0x9CFE80", Offset = "0x9CFE80", VA = "0x9CFE80")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0x9CFE90", Offset = "0x9CFE90", VA = "0x9CFE90")]
			internal bool <HandleEraseTree>b__0(GTreeInstance tree)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031F")]
		public string Instruction
		{
			[Token(Token = "0x6000F96")]
			[Address(RVA = "0x9CEA9C", Offset = "0x9CEA9C", VA = "0x9CEA9C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000320")]
		public string HistoryPrefix
		{
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x9CEB74", Offset = "0x9CEB74", VA = "0x9CEB74", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000321")]
		public List<Type> SuitableFilterTypes
		{
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x9CEBBC", Offset = "0x9CEBBC", VA = "0x9CEBBC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x9CEDC0", Offset = "0x9CEDC0", VA = "0x9CEDC0", Slot = "8")]
		public List<GTerrainResourceFlag> GetResourceFlagForHistory(GFoliagePainterArgs args)
		{
			return null;
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x9CEE20", Offset = "0x9CEE20", VA = "0x9CEE20", Slot = "7")]
		public void Paint(GStylizedTerrain terrain, GFoliagePainterArgs args)
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x9CF148", Offset = "0x9CF148", VA = "0x9CF148")]
		private void HandleSpawnTree(GStylizedTerrain terrain, GFoliagePainterArgs args)
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x9CFB3C", Offset = "0x9CFB3C", VA = "0x9CFB3C")]
		private void HandleEraseTree(GStylizedTerrain terrain, GFoliagePainterArgs args)
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x9CFE88", Offset = "0x9CFE88", VA = "0x9CFE88")]
		public GTreePainter()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class GTreeScaler : IGFoliagePainter
	{
		[Token(Token = "0x17000322")]
		public string Instruction
		{
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x9D03AC", Offset = "0x9D03AC", VA = "0x9D03AC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000323")]
		public string HistoryPrefix
		{
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0x9D0484", Offset = "0x9D0484", VA = "0x9D0484", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000324")]
		public List<Type> SuitableFilterTypes
		{
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x9D04CC", Offset = "0x9D04CC", VA = "0x9D04CC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x9D05D0", Offset = "0x9D05D0", VA = "0x9D05D0", Slot = "8")]
		public List<GTerrainResourceFlag> GetResourceFlagForHistory(GFoliagePainterArgs args)
		{
			return null;
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x9D0630", Offset = "0x9D0630", VA = "0x9D0630", Slot = "7")]
		public void Paint(GStylizedTerrain terrain, GFoliagePainterArgs args)
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x9D12D0", Offset = "0x9D12D0", VA = "0x9D12D0")]
		public GTreeScaler()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public interface IGFoliagePainter
	{
		[Token(Token = "0x17000325")]
		string HistoryPrefix
		{
			[Token(Token = "0x6000FA4")]
			get;
		}

		[Token(Token = "0x17000326")]
		string Instruction
		{
			[Token(Token = "0x6000FA5")]
			get;
		}

		[Token(Token = "0x17000327")]
		List<Type> SuitableFilterTypes
		{
			[Token(Token = "0x6000FA6")]
			get;
		}

		[Token(Token = "0x6000FA7")]
		void Paint(GStylizedTerrain terrain, GFoliagePainterArgs args);

		[Token(Token = "0x6000FA8")]
		List<GTerrainResourceFlag> GetResourceFlagForHistory(GFoliagePainterArgs args);
	}
	[Token(Token = "0x20001E6")]
	public class GAlbedoPainter : IGTexturePainter, IGTexturePainterWithLivePreview
	{
		[Token(Token = "0x17000328")]
		public string Instruction
		{
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x8968EC", Offset = "0x8968EC", VA = "0x8968EC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000329")]
		public string HistoryPrefix
		{
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x8969C4", Offset = "0x8969C4", VA = "0x8969C4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x896A0C", Offset = "0x896A0C", VA = "0x896A0C", Slot = "7")]
		public List<GTerrainResourceFlag> GetResourceFlagForHistory(GTexturePainterArgs args)
		{
			return null;
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x896A6C", Offset = "0x896A6C", VA = "0x896A6C")]
		private void SetupTextureGrid(GStylizedTerrain t, Material mat)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x8974E0", Offset = "0x8974E0", VA = "0x8974E0", Slot = "6")]
		public void Paint(GStylizedTerrain terrain, GTexturePainterArgs args)
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x8978EC", Offset = "0x8978EC", VA = "0x8978EC", Slot = "8")]
		public void Editor_DrawLivePreview(GStylizedTerrain terrain, GTexturePainterArgs args, Camera cam)
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x8978F0", Offset = "0x8978F0", VA = "0x8978F0")]
		public GAlbedoPainter()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class GElevationPainter : IGTexturePainter, IGTexturePainterWithLivePreview
	{
		[Token(Token = "0x1700032A")]
		public string Instruction
		{
			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0x897A0C", Offset = "0x897A0C", VA = "0x897A0C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032B")]
		public string HistoryPrefix
		{
			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0x897A70", Offset = "0x897A70", VA = "0x897A70", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x897AB8", Offset = "0x897AB8", VA = "0x897AB8", Slot = "7")]
		public List<GTerrainResourceFlag> GetResourceFlagForHistory(GTexturePainterArgs args)
		{
			return null;
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x897B18", Offset = "0x897B18", VA = "0x897B18")]
		private void SetupTextureGrid(GStylizedTerrain t, Material mat)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x89858C", Offset = "0x89858C", VA = "0x89858C", Slot = "6")]
		public void Paint(GStylizedTerrain terrain, GTexturePainterArgs args)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x898A78", Offset = "0x898A78", VA = "0x898A78", Slot = "8")]
		public void Editor_DrawLivePreview(GStylizedTerrain terrain, GTexturePainterArgs args, Camera cam)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x898A7C", Offset = "0x898A7C", VA = "0x898A7C")]
		public GElevationPainter()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class GHeightSamplingPainter : IGTexturePainter, IGTexturePainterWithLivePreview
	{
		[Token(Token = "0x1700032C")]
		public string Instruction
		{
			[Token(Token = "0x6000FB7")]
			[Address(RVA = "0xBC5744", Offset = "0xBC5744", VA = "0xBC5744", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032D")]
		public string HistoryPrefix
		{
			[Token(Token = "0x6000FB8")]
			[Address(RVA = "0xBC581C", Offset = "0xBC581C", VA = "0xBC581C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xBC5864", Offset = "0xBC5864", VA = "0xBC5864", Slot = "7")]
		public List<GTerrainResourceFlag> GetResourceFlagForHistory(GTexturePainterArgs args)
		{
			return null;
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xBC58F0", Offset = "0xBC58F0", VA = "0xBC58F0", Slot = "6")]
		public void Paint(GStylizedTerrain terrain, GTexturePainterArgs args)
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xBC5EAC", Offset = "0xBC5EAC", VA = "0xBC5EAC", Slot = "8")]
		public void Editor_DrawLivePreview(GStylizedTerrain terrain, GTexturePainterArgs args, Camera cam)
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xBC5EB0", Offset = "0xBC5EB0", VA = "0xBC5EB0")]
		public GHeightSamplingPainter()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class GMetallicPainter : IGTexturePainter, IGTexturePainterWithLivePreview
	{
		[Token(Token = "0x1700032E")]
		public string Instruction
		{
			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0xBC5EB8", Offset = "0xBC5EB8", VA = "0xBC5EB8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032F")]
		public string HistoryPrefix
		{
			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0xBC5F90", Offset = "0xBC5F90", VA = "0xBC5F90", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xBC5FD8", Offset = "0xBC5FD8", VA = "0xBC5FD8", Slot = "7")]
		public List<GTerrainResourceFlag> GetResourceFlagForHistory(GTexturePainterArgs args)
		{
			return null;
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xBC6038", Offset = "0xBC6038", VA = "0xBC6038")]
		private void SetupTextureGrid(GStylizedTerrain t, Material mat)
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xBC6ADC", Offset = "0xBC6ADC", VA = "0xBC6ADC", Slot = "6")]
		public void Paint(GStylizedTerrain terrain, GTexturePainterArgs args)
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xBC6F04", Offset = "0xBC6F04", VA = "0xBC6F04", Slot = "8")]
		public void Editor_DrawLivePreview(GStylizedTerrain terrain, GTexturePainterArgs args, Camera cam)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xBC6F08", Offset = "0xBC6F08", VA = "0xBC6F08")]
		public GMetallicPainter()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class GNoisePainter : IGTexturePainter, IGTexturePainterWithCustomParams, IGTexturePainterWithLivePreview
	{
		[Token(Token = "0x17000330")]
		public string HistoryPrefix
		{
			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0xBC6F10", Offset = "0xBC6F10", VA = "0xBC6F10", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000331")]
		public string Instruction
		{
			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0xBC6F58", Offset = "0xBC6F58", VA = "0xBC6F58", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xBC7030", Offset = "0xBC7030", VA = "0xBC7030", Slot = "7")]
		public List<GTerrainResourceFlag> GetResourceFlagForHistory(GTexturePainterArgs args)
		{
			return null;
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xBC7090", Offset = "0xBC7090", VA = "0xBC7090", Slot = "6")]
		public void Paint(GStylizedTerrain terrain, GTexturePainterArgs args)
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xBC7DC0", Offset = "0xBC7DC0", VA = "0xBC7DC0", Slot = "8")]
		public void Editor_DrawCustomParamsGUI()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xBC7DC4", Offset = "0xBC7DC4", VA = "0xBC7DC4", Slot = "9")]
		public void Editor_DrawLivePreview(GStylizedTerrain terrain, GTexturePainterArgs args, Camera cam)
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xBC7B38", Offset = "0xBC7B38", VA = "0xBC7B38")]
		private void RenderNoiseTexture(RenderTexture noiseMap, GStylizedTerrain terrain)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xBC7DC8", Offset = "0xBC7DC8", VA = "0xBC7DC8")]
		public GNoisePainter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001EB")]
	public struct GNoisePainterParams
	{
		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GNoiseType type;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private Vector2 origin;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private float frequency;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float laccunarity;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float persistent;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int octaves;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float seed;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool useWorldSpace;

		[Token(Token = "0x17000332")]
		public GNoiseType Type
		{
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0x5F6608", Offset = "0x5F6608", VA = "0x5F6608")]
			get
			{
				return default(GNoiseType);
			}
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x5F6610", Offset = "0x5F6610", VA = "0x5F6610")]
			set
			{
			}
		}

		[Token(Token = "0x17000333")]
		public Vector2 Origin
		{
			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0x5F6618", Offset = "0x5F6618", VA = "0x5F6618")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0x5F6620", Offset = "0x5F6620", VA = "0x5F6620")]
			set
			{
			}
		}

		[Token(Token = "0x17000334")]
		public float Frequency
		{
			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0x5F6628", Offset = "0x5F6628", VA = "0x5F6628")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0x5F6630", Offset = "0x5F6630", VA = "0x5F6630")]
			set
			{
			}
		}

		[Token(Token = "0x17000335")]
		public float Lacunarity
		{
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0x5F6638", Offset = "0x5F6638", VA = "0x5F6638")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x5F6640", Offset = "0x5F6640", VA = "0x5F6640")]
			set
			{
			}
		}

		[Token(Token = "0x17000336")]
		public float Persistence
		{
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0x5F6648", Offset = "0x5F6648", VA = "0x5F6648")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0x5F6650", Offset = "0x5F6650", VA = "0x5F6650")]
			set
			{
			}
		}

		[Token(Token = "0x17000337")]
		public int Octaves
		{
			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0x5F6658", Offset = "0x5F6658", VA = "0x5F6658")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0x5F6660", Offset = "0x5F6660", VA = "0x5F6660")]
			set
			{
			}
		}

		[Token(Token = "0x17000338")]
		public float Seed
		{
			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x5F6668", Offset = "0x5F6668", VA = "0x5F6668")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x5F6670", Offset = "0x5F6670", VA = "0x5F6670")]
			set
			{
			}
		}

		[Token(Token = "0x17000339")]
		public bool UseWorldSpace
		{
			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0x5F6678", Offset = "0x5F6678", VA = "0x5F6678")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0x5F6680", Offset = "0x5F6680", VA = "0x5F6680")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001EC")]
	public class GRemapPainter : IGTexturePainter, IGTexturePainterWithCustomParams, IGTexturePainterWithLivePreview
	{
		[Token(Token = "0x1700033A")]
		public string HistoryPrefix
		{
			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0xBCBE7C", Offset = "0xBCBE7C", VA = "0xBCBE7C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033B")]
		public string Instruction
		{
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0xBCBEC4", Offset = "0xBCBEC4", VA = "0xBCBEC4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xBCBF9C", Offset = "0xBCBF9C", VA = "0xBCBF9C", Slot = "6")]
		public void Paint(GStylizedTerrain terrain, GTexturePainterArgs args)
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xBCC530", Offset = "0xBCC530", VA = "0xBCC530", Slot = "7")]
		public List<GTerrainResourceFlag> GetResourceFlagForHistory(GTexturePainterArgs args)
		{
			return null;
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xBCC590", Offset = "0xBCC590", VA = "0xBCC590", Slot = "8")]
		public void Editor_DrawCustomParamsGUI()
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xBCC594", Offset = "0xBCC594", VA = "0xBCC594", Slot = "9")]
		public void Editor_DrawLivePreview(GStylizedTerrain terrain, GTexturePainterArgs args, Camera cam)
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xBCC598", Offset = "0xBCC598", VA = "0xBCC598")]
		public GRemapPainter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001ED")]
	public struct GRemapPainterParams
	{
		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AnimationCurve curve;

		[Token(Token = "0x1700033C")]
		public AnimationCurve Curve
		{
			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x5F69A8", Offset = "0x5F69A8", VA = "0x5F69A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x5F69E4", Offset = "0x5F69E4", VA = "0x5F69E4")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001EE")]
	public class GSmoothnessPainter : IGTexturePainter, IGTexturePainterWithLivePreview
	{
		[Token(Token = "0x1700033D")]
		public string Instruction
		{
			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0xBCCC08", Offset = "0xBCCC08", VA = "0xBCCC08", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033E")]
		public string HistoryPrefix
		{
			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0xBCCCE0", Offset = "0xBCCCE0", VA = "0xBCCCE0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xBCCD28", Offset = "0xBCCD28", VA = "0xBCCD28", Slot = "7")]
		public List<GTerrainResourceFlag> GetResourceFlagForHistory(GTexturePainterArgs args)
		{
			return null;
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xBCCD88", Offset = "0xBCCD88", VA = "0xBCCD88")]
		private void SetupTextureGrid(GStylizedTerrain t, Material mat)
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xBCD82C", Offset = "0xBCD82C", VA = "0xBCD82C", Slot = "6")]
		public void Paint(GStylizedTerrain terrain, GTexturePainterArgs args)
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xBCDC54", Offset = "0xBCDC54", VA = "0xBCDC54", Slot = "8")]
		public void Editor_DrawLivePreview(GStylizedTerrain terrain, GTexturePainterArgs args, Camera cam)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xBCDC58", Offset = "0xBCDC58", VA = "0xBCDC58")]
		public GSmoothnessPainter()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class GSplatPainter : IGTexturePainter, IGTexturePainterWithLivePreview
	{
		[Token(Token = "0x1700033F")]
		public string Instruction
		{
			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0xBCDD20", Offset = "0xBCDD20", VA = "0xBCDD20", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000340")]
		public string HistoryPrefix
		{
			[Token(Token = "0x6000FED")]
			[Address(RVA = "0xBCDDF8", Offset = "0xBCDDF8", VA = "0xBCDDF8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xBCDE40", Offset = "0xBCDE40", VA = "0xBCDE40", Slot = "7")]
		public List<GTerrainResourceFlag> GetResourceFlagForHistory(GTexturePainterArgs args)
		{
			return null;
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xBCDEA0", Offset = "0xBCDEA0", VA = "0xBCDEA0", Slot = "6")]
		public void Paint(GStylizedTerrain terrain, GTexturePainterArgs args)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xBCE344", Offset = "0xBCE344", VA = "0xBCE344", Slot = "8")]
		public void Editor_DrawLivePreview(GStylizedTerrain terrain, GTexturePainterArgs args, Camera cam)
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xBCE348", Offset = "0xBCE348", VA = "0xBCE348")]
		public GSplatPainter()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class GSubDivPainter : IGTexturePainter, IGTexturePainterWithLivePreview
	{
		[Token(Token = "0x17000341")]
		public string Instruction
		{
			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0xBCE350", Offset = "0xBCE350", VA = "0xBCE350", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000342")]
		public string HistoryPrefix
		{
			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0xBCE3A8", Offset = "0xBCE3A8", VA = "0xBCE3A8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xBCE3F0", Offset = "0xBCE3F0", VA = "0xBCE3F0", Slot = "7")]
		public List<GTerrainResourceFlag> GetResourceFlagForHistory(GTexturePainterArgs args)
		{
			return null;
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xBCE450", Offset = "0xBCE450", VA = "0xBCE450", Slot = "6")]
		public void Paint(GStylizedTerrain terrain, GTexturePainterArgs args)
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xBCE948", Offset = "0xBCE948", VA = "0xBCE948", Slot = "8")]
		public void Editor_DrawLivePreview(GStylizedTerrain terrain, GTexturePainterArgs args, Camera cam)
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xBCE94C", Offset = "0xBCE94C", VA = "0xBCE94C")]
		public GSubDivPainter()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class GTerracePainter : IGTexturePainter, IGTexturePainterWithCustomParams, IGTexturePainterWithLivePreview
	{
		[Token(Token = "0x17000343")]
		public string Instruction
		{
			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0xBCE954", Offset = "0xBCE954", VA = "0xBCE954", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000344")]
		public string HistoryPrefix
		{
			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0xBCEA2C", Offset = "0xBCEA2C", VA = "0xBCEA2C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xBCEA74", Offset = "0xBCEA74", VA = "0xBCEA74", Slot = "7")]
		public List<GTerrainResourceFlag> GetResourceFlagForHistory(GTexturePainterArgs args)
		{
			return null;
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xBCEAD4", Offset = "0xBCEAD4", VA = "0xBCEAD4", Slot = "6")]
		public void Paint(GStylizedTerrain terrain, GTexturePainterArgs args)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0xBCEFD0", Offset = "0xBCEFD0", VA = "0xBCEFD0", Slot = "8")]
		public void Editor_DrawCustomParamsGUI()
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xBCEFD4", Offset = "0xBCEFD4", VA = "0xBCEFD4", Slot = "9")]
		public void Editor_DrawLivePreview(GStylizedTerrain terrain, GTexturePainterArgs args, Camera cam)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xBCEFD8", Offset = "0xBCEFD8", VA = "0xBCEFD8")]
		public GTerracePainter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F2")]
	public struct GTerracePainterParams
	{
		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int stepCount;

		[Token(Token = "0x17000345")]
		public int StepCount
		{
			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0x5F6AD4", Offset = "0x5F6AD4", VA = "0x5F6AD4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001000")]
			[Address(RVA = "0x5F6ADC", Offset = "0x5F6ADC", VA = "0x5F6ADC")]
			set
			{
			}
		}
	}
	[Serializable]
	[Token(Token = "0x20001F3")]
	[ExecuteInEditMode]
	public class GTerrainTexturePainter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000359")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FAA0", Offset = "0x56FAA0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Type> <>9__9_0;

			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0xBD0AB0", Offset = "0xBD0AB0", VA = "0xBD0AB0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0xBD0AB8", Offset = "0xBD0AB8", VA = "0xBD0AB8")]
			internal bool <RefreshCustomPainterTypes>b__9_0(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000FF9")]
		public const float GEOMETRY_OPACITY_EXPONENT = 3f;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<string> BUILTIN_PAINTER_NAME;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Type> customPainterTypes;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int groupId;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private GTexturePaintingMode mode;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int customPainterIndex;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string customPainterArgs;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool forceUpdateGeometry;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float brushRadius;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float brushRadiusJitter;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float brushRotation;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float brushRotationJitter;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float brushOpacity;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float brushOpacityJitter;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float brushTargetStrength;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float brushScatter;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float brushScatterJitter;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color brushColor;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private List<Texture2D> brushMasks;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private int selectedBrushMaskIndex;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private int selectedSplatIndex;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Vector3 samplePoint;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static Dictionary<string, RenderTexture> internal_RenderTextures;

		[Token(Token = "0x17000346")]
		private static List<Type> CustomPainterTypes
		{
			[Token(Token = "0x6001001")]
			[Address(RVA = "0xBCF068", Offset = "0xBCF068", VA = "0xBCF068")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001002")]
			[Address(RVA = "0xBCF13C", Offset = "0xBCF13C", VA = "0xBCF13C")]
			set
			{
			}
		}

		[Token(Token = "0x17000347")]
		public static string TexturePainterInterfaceName
		{
			[Token(Token = "0x6001003")]
			[Address(RVA = "0xBCF1A8", Offset = "0xBCF1A8", VA = "0xBCF1A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000348")]
		public int GroupId
		{
			[Token(Token = "0x6001007")]
			[Address(RVA = "0xBCF708", Offset = "0xBCF708", VA = "0xBCF708")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001008")]
			[Address(RVA = "0xBCF710", Offset = "0xBCF710", VA = "0xBCF710")]
			set
			{
			}
		}

		[Token(Token = "0x17000349")]
		public GTexturePaintingMode Mode
		{
			[Token(Token = "0x6001009")]
			[Address(RVA = "0xBCF718", Offset = "0xBCF718", VA = "0xBCF718")]
			get
			{
				return default(GTexturePaintingMode);
			}
			[Token(Token = "0x600100A")]
			[Address(RVA = "0xBCF720", Offset = "0xBCF720", VA = "0xBCF720")]
			set
			{
			}
		}

		[Token(Token = "0x1700034A")]
		public int CustomPainterIndex
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0xBCF728", Offset = "0xBCF728", VA = "0xBCF728")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600100C")]
			[Address(RVA = "0xBCF730", Offset = "0xBCF730", VA = "0xBCF730")]
			set
			{
			}
		}

		[Token(Token = "0x1700034B")]
		public string CustomPainterArgs
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0xBCF738", Offset = "0xBCF738", VA = "0xBCF738")]
			get
			{
				return null;
			}
			[Token(Token = "0x600100E")]
			[Address(RVA = "0xBCF740", Offset = "0xBCF740", VA = "0xBCF740")]
			set
			{
			}
		}

		[Token(Token = "0x1700034C")]
		public bool ForceUpdateGeometry
		{
			[Token(Token = "0x600100F")]
			[Address(RVA = "0xBCF748", Offset = "0xBCF748", VA = "0xBCF748")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001010")]
			[Address(RVA = "0xBCF750", Offset = "0xBCF750", VA = "0xBCF750")]
			set
			{
			}
		}

		[Token(Token = "0x1700034D")]
		public IGTexturePainter ActivePainter
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0xBCF75C", Offset = "0xBCF75C", VA = "0xBCF75C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034E")]
		public float BrushRadius
		{
			[Token(Token = "0x6001012")]
			[Address(RVA = "0xBCF94C", Offset = "0xBCF94C", VA = "0xBCF94C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001013")]
			[Address(RVA = "0xBCF954", Offset = "0xBCF954", VA = "0xBCF954")]
			set
			{
			}
		}

		[Token(Token = "0x1700034F")]
		public float BrushRadiusJitter
		{
			[Token(Token = "0x6001014")]
			[Address(RVA = "0xBCF9D8", Offset = "0xBCF9D8", VA = "0xBCF9D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001015")]
			[Address(RVA = "0xBCF9E0", Offset = "0xBCF9E0", VA = "0xBCF9E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000350")]
		public float BrushRotation
		{
			[Token(Token = "0x6001016")]
			[Address(RVA = "0xBCFA5C", Offset = "0xBCFA5C", VA = "0xBCFA5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001017")]
			[Address(RVA = "0xBCFA64", Offset = "0xBCFA64", VA = "0xBCFA64")]
			set
			{
			}
		}

		[Token(Token = "0x17000351")]
		public float BrushRotationJitter
		{
			[Token(Token = "0x6001018")]
			[Address(RVA = "0xBCFA6C", Offset = "0xBCFA6C", VA = "0xBCFA6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001019")]
			[Address(RVA = "0xBCFA74", Offset = "0xBCFA74", VA = "0xBCFA74")]
			set
			{
			}
		}

		[Token(Token = "0x17000352")]
		public float BrushOpacity
		{
			[Token(Token = "0x600101A")]
			[Address(RVA = "0xBCFAF0", Offset = "0xBCFAF0", VA = "0xBCFAF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600101B")]
			[Address(RVA = "0xBCFAF8", Offset = "0xBCFAF8", VA = "0xBCFAF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000353")]
		public float BrushOpacityJitter
		{
			[Token(Token = "0x600101C")]
			[Address(RVA = "0xBCFB74", Offset = "0xBCFB74", VA = "0xBCFB74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600101D")]
			[Address(RVA = "0xBCFB7C", Offset = "0xBCFB7C", VA = "0xBCFB7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000354")]
		public float BrushTargetStrength
		{
			[Token(Token = "0x600101E")]
			[Address(RVA = "0xBCFBF8", Offset = "0xBCFBF8", VA = "0xBCFBF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600101F")]
			[Address(RVA = "0xBCFC00", Offset = "0xBCFC00", VA = "0xBCFC00")]
			set
			{
			}
		}

		[Token(Token = "0x17000355")]
		public float BrushScatter
		{
			[Token(Token = "0x6001020")]
			[Address(RVA = "0xBCFC7C", Offset = "0xBCFC7C", VA = "0xBCFC7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001021")]
			[Address(RVA = "0xBCFC84", Offset = "0xBCFC84", VA = "0xBCFC84")]
			set
			{
			}
		}

		[Token(Token = "0x17000356")]
		public float BrushScatterJitter
		{
			[Token(Token = "0x6001022")]
			[Address(RVA = "0xBCFD00", Offset = "0xBCFD00", VA = "0xBCFD00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001023")]
			[Address(RVA = "0xBCFD08", Offset = "0xBCFD08", VA = "0xBCFD08")]
			set
			{
			}
		}

		[Token(Token = "0x17000357")]
		public Color BrushColor
		{
			[Token(Token = "0x6001024")]
			[Address(RVA = "0xBCFD84", Offset = "0xBCFD84", VA = "0xBCFD84")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001025")]
			[Address(RVA = "0xBCFD90", Offset = "0xBCFD90", VA = "0xBCFD90")]
			set
			{
			}
		}

		[Token(Token = "0x17000358")]
		public List<Texture2D> BrushMasks
		{
			[Token(Token = "0x6001026")]
			[Address(RVA = "0xBCFD9C", Offset = "0xBCFD9C", VA = "0xBCFD9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001027")]
			[Address(RVA = "0xBCFE10", Offset = "0xBCFE10", VA = "0xBCFE10")]
			set
			{
			}
		}

		[Token(Token = "0x17000359")]
		public int SelectedBrushMaskIndex
		{
			[Token(Token = "0x6001028")]
			[Address(RVA = "0xBCFE18", Offset = "0xBCFE18", VA = "0xBCFE18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001029")]
			[Address(RVA = "0xBCFE20", Offset = "0xBCFE20", VA = "0xBCFE20")]
			set
			{
			}
		}

		[Token(Token = "0x1700035A")]
		public int SelectedSplatIndex
		{
			[Token(Token = "0x600102A")]
			[Address(RVA = "0xBCFEDC", Offset = "0xBCFEDC", VA = "0xBCFEDC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600102B")]
			[Address(RVA = "0xBCFEE4", Offset = "0xBCFEE4", VA = "0xBCFEE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700035B")]
		public Vector3 SamplePoint
		{
			[Token(Token = "0x600102C")]
			[Address(RVA = "0xBCFEEC", Offset = "0xBCFEEC", VA = "0xBCFEEC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600102D")]
			[Address(RVA = "0xBCFEF8", Offset = "0xBCFEF8", VA = "0xBCFEF8")]
			set
			{
			}
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xBCF22C", Offset = "0xBCF22C", VA = "0xBCF22C")]
		static GTerrainTexturePainter()
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0xBCF514", Offset = "0xBCF514", VA = "0xBCF514")]
		public static void RefreshCustomPainterTypes()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0xBCF6AC", Offset = "0xBCF6AC", VA = "0xBCF6AC")]
		public static List<Type> GetCustomPainterTypes()
		{
			return null;
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xBCFF04", Offset = "0xBCFF04", VA = "0xBCFF04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xBCFFA0", Offset = "0xBCFFA0", VA = "0xBCFFA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xBD022C", Offset = "0xBD022C", VA = "0xBD022C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0xBCFF08", Offset = "0xBCFF08", VA = "0xBCFF08")]
		public void ReloadBrushMasks()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xBD02A8", Offset = "0xBD02A8", VA = "0xBD02A8")]
		public void Paint(GTexturePainterArgs args)
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xBC75FC", Offset = "0xBC75FC", VA = "0xBC75FC")]
		internal static RenderTexture Internal_GetRenderTexture(GStylizedTerrain t, int resolution, int id = 0)
		{
			return null;
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0xBCFFFC", Offset = "0xBCFFFC", VA = "0xBCFFFC")]
		public static void Internal_ReleaseRenderTextures()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xBC5E34", Offset = "0xBC5E34", VA = "0xBC5E34")]
		internal static RenderTexture Internal_GetRenderTexture(int resolution, int id = 0)
		{
			return null;
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xBD075C", Offset = "0xBD075C", VA = "0xBD075C")]
		private System.Random GetRandomGenerator()
		{
			return null;
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xBD07CC", Offset = "0xBD07CC", VA = "0xBD07CC")]
		private void ProcessBrushDynamic(ref GTexturePainterArgs args)
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xBD05A8", Offset = "0xBD05A8", VA = "0xBD05A8")]
		public void FillArgs(ref GTexturePainterArgs args, bool useBrushDynamic = true)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xBD0A3C", Offset = "0xBD0A3C", VA = "0xBD0A3C")]
		public GTerrainTexturePainter()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public struct GTexturePainterArgs
	{
		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5744AC", Offset = "0x5744AC")]
		private Vector3 <HitPoint>k__BackingField;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5744BC", Offset = "0x5744BC")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5744CC", Offset = "0x5744CC")]
		private Transform <Transform>k__BackingField;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5744DC", Offset = "0x5744DC")]
		private Vector2 <UV>k__BackingField;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5744EC", Offset = "0x5744EC")]
		private int <TriangleIndex>k__BackingField;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5744FC", Offset = "0x5744FC")]
		private Vector3 <BarycentricCoord>k__BackingField;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57450C", Offset = "0x57450C")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57451C", Offset = "0x57451C")]
		private Vector3 <Normal>k__BackingField;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57452C", Offset = "0x57452C")]
		private Vector2 <LightMapCoord>k__BackingField;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57453C", Offset = "0x57453C")]
		private Rect <UvRect>k__BackingField;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57454C", Offset = "0x57454C")]
		private Vector3[] <WorldPointCorners>k__BackingField;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57455C", Offset = "0x57455C")]
		private Texture <Mask>k__BackingField;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57456C", Offset = "0x57456C")]
		private float <Radius>k__BackingField;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57457C", Offset = "0x57457C")]
		private float <Rotation>k__BackingField;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57458C", Offset = "0x57458C")]
		private float <Opacity>k__BackingField;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57459C", Offset = "0x57459C")]
		private Color <Color>k__BackingField;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5745AC", Offset = "0x5745AC")]
		private int <SplatIndex>k__BackingField;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5745BC", Offset = "0x5745BC")]
		private Vector3 <SamplePoint>k__BackingField;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5745CC", Offset = "0x5745CC")]
		private string <CustomArgs>k__BackingField;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5745DC", Offset = "0x5745DC")]
		private GPainterMouseEventType <MouseEventType>k__BackingField;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5745EC", Offset = "0x5745EC")]
		private GPainterActionType <ActionType>k__BackingField;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5745FC", Offset = "0x5745FC")]
		private bool <ForceUpdateGeometry>k__BackingField;

		[Token(Token = "0x1700035C")]
		public Vector3 HitPoint
		{
			[Token(Token = "0x600103A")]
			[Address(RVA = "0x5EF58C", Offset = "0x5EF58C", VA = "0x5EF58C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C43C", Offset = "0x57C43C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600103B")]
			[Address(RVA = "0x5EF598", Offset = "0x5EF598", VA = "0x5EF598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C44C", Offset = "0x57C44C")]
			set
			{
			}
		}

		[Token(Token = "0x1700035D")]
		public Collider Collider
		{
			[Token(Token = "0x600103C")]
			[Address(RVA = "0x5EF5A4", Offset = "0x5EF5A4", VA = "0x5EF5A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C45C", Offset = "0x57C45C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600103D")]
			[Address(RVA = "0x5EF5AC", Offset = "0x5EF5AC", VA = "0x5EF5AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C46C", Offset = "0x57C46C")]
			set
			{
			}
		}

		[Token(Token = "0x1700035E")]
		public Transform Transform
		{
			[Token(Token = "0x600103E")]
			[Address(RVA = "0x5EF5B4", Offset = "0x5EF5B4", VA = "0x5EF5B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C47C", Offset = "0x57C47C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600103F")]
			[Address(RVA = "0x5EF5BC", Offset = "0x5EF5BC", VA = "0x5EF5BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C48C", Offset = "0x57C48C")]
			set
			{
			}
		}

		[Token(Token = "0x1700035F")]
		public Vector2 UV
		{
			[Token(Token = "0x6001040")]
			[Address(RVA = "0x5EF5C4", Offset = "0x5EF5C4", VA = "0x5EF5C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C49C", Offset = "0x57C49C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001041")]
			[Address(RVA = "0x5EF5CC", Offset = "0x5EF5CC", VA = "0x5EF5CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C4AC", Offset = "0x57C4AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000360")]
		public int TriangleIndex
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0x5EF5D4", Offset = "0x5EF5D4", VA = "0x5EF5D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C4BC", Offset = "0x57C4BC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001043")]
			[Address(RVA = "0x5EF5DC", Offset = "0x5EF5DC", VA = "0x5EF5DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C4CC", Offset = "0x57C4CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000361")]
		public Vector3 BarycentricCoord
		{
			[Token(Token = "0x6001044")]
			[Address(RVA = "0x5EF5E4", Offset = "0x5EF5E4", VA = "0x5EF5E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C4DC", Offset = "0x57C4DC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001045")]
			[Address(RVA = "0x5EF5F0", Offset = "0x5EF5F0", VA = "0x5EF5F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C4EC", Offset = "0x57C4EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000362")]
		public float Distance
		{
			[Token(Token = "0x6001046")]
			[Address(RVA = "0x5EF5FC", Offset = "0x5EF5FC", VA = "0x5EF5FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C4FC", Offset = "0x57C4FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001047")]
			[Address(RVA = "0x5EF604", Offset = "0x5EF604", VA = "0x5EF604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C50C", Offset = "0x57C50C")]
			set
			{
			}
		}

		[Token(Token = "0x17000363")]
		public Vector3 Normal
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0x5EF60C", Offset = "0x5EF60C", VA = "0x5EF60C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C51C", Offset = "0x57C51C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001049")]
			[Address(RVA = "0x5EF618", Offset = "0x5EF618", VA = "0x5EF618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C52C", Offset = "0x57C52C")]
			set
			{
			}
		}

		[Token(Token = "0x17000364")]
		public Vector2 LightMapCoord
		{
			[Token(Token = "0x600104A")]
			[Address(RVA = "0x5EF624", Offset = "0x5EF624", VA = "0x5EF624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C53C", Offset = "0x57C53C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600104B")]
			[Address(RVA = "0x5EF62C", Offset = "0x5EF62C", VA = "0x5EF62C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C54C", Offset = "0x57C54C")]
			set
			{
			}
		}

		[Token(Token = "0x17000365")]
		public Rect UvRect
		{
			[Token(Token = "0x600104C")]
			[Address(RVA = "0x5EF634", Offset = "0x5EF634", VA = "0x5EF634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C55C", Offset = "0x57C55C")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x600104D")]
			[Address(RVA = "0x5EF640", Offset = "0x5EF640", VA = "0x5EF640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C56C", Offset = "0x57C56C")]
			set
			{
			}
		}

		[Token(Token = "0x17000366")]
		public Vector3[] WorldPointCorners
		{
			[Token(Token = "0x600104E")]
			[Address(RVA = "0x5EF64C", Offset = "0x5EF64C", VA = "0x5EF64C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C57C", Offset = "0x57C57C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600104F")]
			[Address(RVA = "0x5EF654", Offset = "0x5EF654", VA = "0x5EF654")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C58C", Offset = "0x57C58C")]
			set
			{
			}
		}

		[Token(Token = "0x17000367")]
		public Texture Mask
		{
			[Token(Token = "0x6001050")]
			[Address(RVA = "0x5EF65C", Offset = "0x5EF65C", VA = "0x5EF65C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C59C", Offset = "0x57C59C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001051")]
			[Address(RVA = "0x5EF664", Offset = "0x5EF664", VA = "0x5EF664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C5AC", Offset = "0x57C5AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000368")]
		public float Radius
		{
			[Token(Token = "0x6001052")]
			[Address(RVA = "0x5EF66C", Offset = "0x5EF66C", VA = "0x5EF66C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C5BC", Offset = "0x57C5BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001053")]
			[Address(RVA = "0x5EF674", Offset = "0x5EF674", VA = "0x5EF674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C5CC", Offset = "0x57C5CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000369")]
		public float Rotation
		{
			[Token(Token = "0x6001054")]
			[Address(RVA = "0x5EF67C", Offset = "0x5EF67C", VA = "0x5EF67C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C5DC", Offset = "0x57C5DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001055")]
			[Address(RVA = "0x5EF684", Offset = "0x5EF684", VA = "0x5EF684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C5EC", Offset = "0x57C5EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700036A")]
		public float Opacity
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0x5EF68C", Offset = "0x5EF68C", VA = "0x5EF68C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C5FC", Offset = "0x57C5FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001057")]
			[Address(RVA = "0x5EF694", Offset = "0x5EF694", VA = "0x5EF694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C60C", Offset = "0x57C60C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036B")]
		public Color Color
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0x5EF69C", Offset = "0x5EF69C", VA = "0x5EF69C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C61C", Offset = "0x57C61C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001059")]
			[Address(RVA = "0x5EF6A8", Offset = "0x5EF6A8", VA = "0x5EF6A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C62C", Offset = "0x57C62C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036C")]
		public int SplatIndex
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0x5EF6B4", Offset = "0x5EF6B4", VA = "0x5EF6B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C63C", Offset = "0x57C63C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600105B")]
			[Address(RVA = "0x5EF6BC", Offset = "0x5EF6BC", VA = "0x5EF6BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C64C", Offset = "0x57C64C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036D")]
		public Vector3 SamplePoint
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0x5EF6C4", Offset = "0x5EF6C4", VA = "0x5EF6C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C65C", Offset = "0x57C65C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600105D")]
			[Address(RVA = "0x5EF6D0", Offset = "0x5EF6D0", VA = "0x5EF6D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C66C", Offset = "0x57C66C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036E")]
		public string CustomArgs
		{
			[Token(Token = "0x600105E")]
			[Address(RVA = "0x5EF6DC", Offset = "0x5EF6DC", VA = "0x5EF6DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C67C", Offset = "0x57C67C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600105F")]
			[Address(RVA = "0x5EF6E4", Offset = "0x5EF6E4", VA = "0x5EF6E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C68C", Offset = "0x57C68C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036F")]
		public GPainterMouseEventType MouseEventType
		{
			[Token(Token = "0x6001060")]
			[Address(RVA = "0x5EF6EC", Offset = "0x5EF6EC", VA = "0x5EF6EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C69C", Offset = "0x57C69C")]
			get
			{
				return default(GPainterMouseEventType);
			}
			[Token(Token = "0x6001061")]
			[Address(RVA = "0x5EF6F4", Offset = "0x5EF6F4", VA = "0x5EF6F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C6AC", Offset = "0x57C6AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000370")]
		public GPainterActionType ActionType
		{
			[Token(Token = "0x6001062")]
			[Address(RVA = "0x5EF6FC", Offset = "0x5EF6FC", VA = "0x5EF6FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C6BC", Offset = "0x57C6BC")]
			get
			{
				return default(GPainterActionType);
			}
			[Token(Token = "0x6001063")]
			[Address(RVA = "0x5EF704", Offset = "0x5EF704", VA = "0x5EF704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C6CC", Offset = "0x57C6CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000371")]
		public bool ForceUpdateGeometry
		{
			[Token(Token = "0x6001064")]
			[Address(RVA = "0x5EF70C", Offset = "0x5EF70C", VA = "0x5EF70C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C6DC", Offset = "0x57C6DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001065")]
			[Address(RVA = "0x5EF714", Offset = "0x5EF714", VA = "0x5EF714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C6EC", Offset = "0x57C6EC")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001F5")]
	public class GTexturePainterCustomParams : ScriptableObject
	{
		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GTexturePainterCustomParams instance;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GTerracePainterParams terrace;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GRemapPainterParams remap;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GNoisePainterParams noise;

		[Token(Token = "0x17000372")]
		public static GTexturePainterCustomParams Instance
		{
			[Token(Token = "0x6001066")]
			[Address(RVA = "0x9CE930", Offset = "0x9CE930", VA = "0x9CE930")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000373")]
		public GTerracePainterParams Terrace
		{
			[Token(Token = "0x6001067")]
			[Address(RVA = "0x9CEA44", Offset = "0x9CEA44", VA = "0x9CEA44")]
			get
			{
				return default(GTerracePainterParams);
			}
			[Token(Token = "0x6001068")]
			[Address(RVA = "0x9CEA4C", Offset = "0x9CEA4C", VA = "0x9CEA4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000374")]
		public GRemapPainterParams Remap
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0x9CEA54", Offset = "0x9CEA54", VA = "0x9CEA54")]
			get
			{
				return default(GRemapPainterParams);
			}
			[Token(Token = "0x600106A")]
			[Address(RVA = "0x9CEA5C", Offset = "0x9CEA5C", VA = "0x9CEA5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000375")]
		public GNoisePainterParams Noise
		{
			[Token(Token = "0x600106B")]
			[Address(RVA = "0x9CEA64", Offset = "0x9CEA64", VA = "0x9CEA64")]
			get
			{
				return default(GNoisePainterParams);
			}
			[Token(Token = "0x600106C")]
			[Address(RVA = "0x9CEA7C", Offset = "0x9CEA7C", VA = "0x9CEA7C")]
			set
			{
			}
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x9CEA94", Offset = "0x9CEA94", VA = "0x9CEA94")]
		public GTexturePainterCustomParams()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public enum GTexturePaintingMode
	{
		[Token(Token = "0x400102B")]
		Elevation,
		[Token(Token = "0x400102C")]
		HeightSampling,
		[Token(Token = "0x400102D")]
		Terrace,
		[Token(Token = "0x400102E")]
		Remap,
		[Token(Token = "0x400102F")]
		Noise,
		[Token(Token = "0x4001030")]
		SubDivision,
		[Token(Token = "0x4001031")]
		Visibility,
		[Token(Token = "0x4001032")]
		Albedo,
		[Token(Token = "0x4001033")]
		Metallic,
		[Token(Token = "0x4001034")]
		Smoothness,
		[Token(Token = "0x4001035")]
		Splat,
		[Token(Token = "0x4001036")]
		Custom
	}
	[Token(Token = "0x20001F7")]
	[AttributeAttribute(Name = "GDisplayName", RVA = "0x56E528", Offset = "0x56E528")]
	public class GTriangleAlbedoPainter : IGTexturePainter
	{
		[Token(Token = "0x17000376")]
		public string Instruction
		{
			[Token(Token = "0x600106E")]
			[Address(RVA = "0x9D12D8", Offset = "0x9D12D8", VA = "0x9D12D8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000377")]
		public string HistoryPrefix
		{
			[Token(Token = "0x600106F")]
			[Address(RVA = "0x9D13B0", Offset = "0x9D13B0", VA = "0x9D13B0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x9D13F8", Offset = "0x9D13F8", VA = "0x9D13F8", Slot = "7")]
		public List<GTerrainResourceFlag> GetResourceFlagForHistory(GTexturePainterArgs args)
		{
			return null;
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x9D1458", Offset = "0x9D1458", VA = "0x9D1458", Slot = "6")]
		public void Paint(GStylizedTerrain terrain, GTexturePainterArgs args)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x9D18C0", Offset = "0x9D18C0", VA = "0x9D18C0")]
		public GTriangleAlbedoPainter()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "GDisplayName", RVA = "0x56E560", Offset = "0x56E560")]
	public class GTriangleMetallicSmoothnessPainter : IGTexturePainter
	{
		[Token(Token = "0x17000378")]
		public string Instruction
		{
			[Token(Token = "0x6001073")]
			[Address(RVA = "0x9D18C8", Offset = "0x9D18C8", VA = "0x9D18C8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000379")]
		public string HistoryPrefix
		{
			[Token(Token = "0x6001074")]
			[Address(RVA = "0x9D19A0", Offset = "0x9D19A0", VA = "0x9D19A0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x9D19E8", Offset = "0x9D19E8", VA = "0x9D19E8", Slot = "7")]
		public List<GTerrainResourceFlag> GetResourceFlagForHistory(GTexturePainterArgs args)
		{
			return null;
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x9D1A48", Offset = "0x9D1A48", VA = "0x9D1A48", Slot = "6")]
		public void Paint(GStylizedTerrain terrain, GTexturePainterArgs args)
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x9D1E44", Offset = "0x9D1E44", VA = "0x9D1E44")]
		public GTriangleMetallicSmoothnessPainter()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class GVisibilityPainter : IGTexturePainter, IGTexturePainterWithLivePreview
	{
		[Token(Token = "0x1700037A")]
		public string Instruction
		{
			[Token(Token = "0x6001078")]
			[Address(RVA = "0x9D1E4C", Offset = "0x9D1E4C", VA = "0x9D1E4C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037B")]
		public string HistoryPrefix
		{
			[Token(Token = "0x6001079")]
			[Address(RVA = "0x9D1F24", Offset = "0x9D1F24", VA = "0x9D1F24", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x9D1F6C", Offset = "0x9D1F6C", VA = "0x9D1F6C", Slot = "7")]
		public List<GTerrainResourceFlag> GetResourceFlagForHistory(GTexturePainterArgs args)
		{
			return null;
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x9D1FCC", Offset = "0x9D1FCC", VA = "0x9D1FCC", Slot = "6")]
		public void Paint(GStylizedTerrain terrain, GTexturePainterArgs args)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x9D2424", Offset = "0x9D2424", VA = "0x9D2424", Slot = "8")]
		public void Editor_DrawLivePreview(GStylizedTerrain terrain, GTexturePainterArgs args, Camera cam)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x9D2428", Offset = "0x9D2428", VA = "0x9D2428")]
		public GVisibilityPainter()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public interface IGTexturePainter
	{
		[Token(Token = "0x1700037C")]
		string HistoryPrefix
		{
			[Token(Token = "0x600107E")]
			get;
		}

		[Token(Token = "0x1700037D")]
		string Instruction
		{
			[Token(Token = "0x600107F")]
			get;
		}

		[Token(Token = "0x6001080")]
		void Paint(GStylizedTerrain terrain, GTexturePainterArgs args);

		[Token(Token = "0x6001081")]
		List<GTerrainResourceFlag> GetResourceFlagForHistory(GTexturePainterArgs args);
	}
	[Token(Token = "0x20001FB")]
	public interface IGTexturePainterWithCustomParams
	{
		[Token(Token = "0x6001082")]
		void Editor_DrawCustomParamsGUI();
	}
	[Token(Token = "0x20001FC")]
	public interface IGTexturePainterWithLivePreview
	{
		[Token(Token = "0x6001083")]
		void Editor_DrawLivePreview(GStylizedTerrain terrain, GTexturePainterArgs args, Camera cam);
	}
	[Serializable]
	[Token(Token = "0x20001FD")]
	[ExecuteInEditMode]
	public class GObjectPainter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200035A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FAB0", Offset = "0x56FAB0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Type> <>9__8_0;

			[Token(Token = "0x6001CD4")]
			[Address(RVA = "0xBC95E0", Offset = "0xBC95E0", VA = "0xBC95E0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001CD5")]
			[Address(RVA = "0xBC95E8", Offset = "0xBC95E8", VA = "0xBC95E8")]
			internal bool <RefreshCustomPainterTypes>b__8_0(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<string> BUILTIN_PAINTER_NAME;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Type> customPainterTypes;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int groupId;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private GObjectPaintingMode mode;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int customPainterIndex;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string customPainterArgs;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float brushRadius;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float brushRadiusJitter;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float brushRotation;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float brushRotationJitter;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int brushDensity;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float brushDensityJitter;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float brushScatter;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float brushScatterJitter;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<Texture2D> brushMasks;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int selectedBrushMaskIndex;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<GameObject> prototypes;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private List<int> selectedPrototypeIndices;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float eraseRatio;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float scaleStrength;

		[Token(Token = "0x1700037E")]
		public static List<Type> CustomPainterTypes
		{
			[Token(Token = "0x6001084")]
			[Address(RVA = "0xBC8040", Offset = "0xBC8040", VA = "0xBC8040")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001085")]
			[Address(RVA = "0xBC8114", Offset = "0xBC8114", VA = "0xBC8114")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037F")]
		public static string ObjectPainterInterfaceName
		{
			[Token(Token = "0x6001086")]
			[Address(RVA = "0xBC8180", Offset = "0xBC8180", VA = "0xBC8180")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000380")]
		public int GroupId
		{
			[Token(Token = "0x6001089")]
			[Address(RVA = "0xBC84B0", Offset = "0xBC84B0", VA = "0xBC84B0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600108A")]
			[Address(RVA = "0xBC84B8", Offset = "0xBC84B8", VA = "0xBC84B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000381")]
		public GObjectPaintingMode Mode
		{
			[Token(Token = "0x600108B")]
			[Address(RVA = "0xBC84C0", Offset = "0xBC84C0", VA = "0xBC84C0")]
			get
			{
				return default(GObjectPaintingMode);
			}
			[Token(Token = "0x600108C")]
			[Address(RVA = "0xBC84C8", Offset = "0xBC84C8", VA = "0xBC84C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000382")]
		public int CustomPainterIndex
		{
			[Token(Token = "0x600108D")]
			[Address(RVA = "0xBC84D0", Offset = "0xBC84D0", VA = "0xBC84D0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600108E")]
			[Address(RVA = "0xBC84D8", Offset = "0xBC84D8", VA = "0xBC84D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000383")]
		public string CustomPainterArgs
		{
			[Token(Token = "0x600108F")]
			[Address(RVA = "0xBC84E0", Offset = "0xBC84E0", VA = "0xBC84E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001090")]
			[Address(RVA = "0xBC84E8", Offset = "0xBC84E8", VA = "0xBC84E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000384")]
		public IGObjectPainter ActivePainter
		{
			[Token(Token = "0x6001091")]
			[Address(RVA = "0xBC84F0", Offset = "0xBC84F0", VA = "0xBC84F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000385")]
		public float BrushRadius
		{
			[Token(Token = "0x6001092")]
			[Address(RVA = "0xBC8640", Offset = "0xBC8640", VA = "0xBC8640")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001093")]
			[Address(RVA = "0xBC8648", Offset = "0xBC8648", VA = "0xBC8648")]
			set
			{
			}
		}

		[Token(Token = "0x17000386")]
		public float BrushRadiusJitter
		{
			[Token(Token = "0x6001094")]
			[Address(RVA = "0xBC86CC", Offset = "0xBC86CC", VA = "0xBC86CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001095")]
			[Address(RVA = "0xBC86D4", Offset = "0xBC86D4", VA = "0xBC86D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000387")]
		public float BrushRotation
		{
			[Token(Token = "0x6001096")]
			[Address(RVA = "0xBC8750", Offset = "0xBC8750", VA = "0xBC8750")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001097")]
			[Address(RVA = "0xBC8758", Offset = "0xBC8758", VA = "0xBC8758")]
			set
			{
			}
		}

		[Token(Token = "0x17000388")]
		public float BrushRotationJitter
		{
			[Token(Token = "0x6001098")]
			[Address(RVA = "0xBC8760", Offset = "0xBC8760", VA = "0xBC8760")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001099")]
			[Address(RVA = "0xBC8768", Offset = "0xBC8768", VA = "0xBC8768")]
			set
			{
			}
		}

		[Token(Token = "0x17000389")]
		public int BrushDensity
		{
			[Token(Token = "0x600109A")]
			[Address(RVA = "0xBC87E4", Offset = "0xBC87E4", VA = "0xBC87E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600109B")]
			[Address(RVA = "0xBC87EC", Offset = "0xBC87EC", VA = "0xBC87EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700038A")]
		public float BrushDensityJitter
		{
			[Token(Token = "0x600109C")]
			[Address(RVA = "0xBC8870", Offset = "0xBC8870", VA = "0xBC8870")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600109D")]
			[Address(RVA = "0xBC8878", Offset = "0xBC8878", VA = "0xBC8878")]
			set
			{
			}
		}

		[Token(Token = "0x1700038B")]
		public float BrushScatter
		{
			[Token(Token = "0x600109E")]
			[Address(RVA = "0xBC88F4", Offset = "0xBC88F4", VA = "0xBC88F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600109F")]
			[Address(RVA = "0xBC88FC", Offset = "0xBC88FC", VA = "0xBC88FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700038C")]
		public float BrushScatterJitter
		{
			[Token(Token = "0x60010A0")]
			[Address(RVA = "0xBC8978", Offset = "0xBC8978", VA = "0xBC8978")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0xBC8980", Offset = "0xBC8980", VA = "0xBC8980")]
			set
			{
			}
		}

		[Token(Token = "0x1700038D")]
		public List<Texture2D> BrushMasks
		{
			[Token(Token = "0x60010A2")]
			[Address(RVA = "0xBC89FC", Offset = "0xBC89FC", VA = "0xBC89FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0xBC8A70", Offset = "0xBC8A70", VA = "0xBC8A70")]
			set
			{
			}
		}

		[Token(Token = "0x1700038E")]
		public int SelectedBrushMaskIndex
		{
			[Token(Token = "0x60010A4")]
			[Address(RVA = "0xBC8A78", Offset = "0xBC8A78", VA = "0xBC8A78")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010A5")]
			[Address(RVA = "0xBC8A80", Offset = "0xBC8A80", VA = "0xBC8A80")]
			set
			{
			}
		}

		[Token(Token = "0x1700038F")]
		public List<GameObject> Prototypes
		{
			[Token(Token = "0x60010A6")]
			[Address(RVA = "0xBC8B3C", Offset = "0xBC8B3C", VA = "0xBC8B3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010A7")]
			[Address(RVA = "0xBC8BB0", Offset = "0xBC8BB0", VA = "0xBC8BB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000390")]
		public List<int> SelectedPrototypeIndices
		{
			[Token(Token = "0x60010A8")]
			[Address(RVA = "0xBC8BB8", Offset = "0xBC8BB8", VA = "0xBC8BB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0xBC8C2C", Offset = "0xBC8C2C", VA = "0xBC8C2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000391")]
		public float EraseRatio
		{
			[Token(Token = "0x60010AA")]
			[Address(RVA = "0xBC8C34", Offset = "0xBC8C34", VA = "0xBC8C34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010AB")]
			[Address(RVA = "0xBC8C3C", Offset = "0xBC8C3C", VA = "0xBC8C3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000392")]
		public float ScaleStrength
		{
			[Token(Token = "0x60010AC")]
			[Address(RVA = "0xBC8CB8", Offset = "0xBC8CB8", VA = "0xBC8CB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0xBC8CC0", Offset = "0xBC8CC0", VA = "0xBC8CC0")]
			set
			{
			}
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xBC8204", Offset = "0xBC8204", VA = "0xBC8204")]
		static GObjectPainter()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xBC8318", Offset = "0xBC8318", VA = "0xBC8318")]
		public static void RefreshCustomPainterTypes()
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xBC8D40", Offset = "0xBC8D40", VA = "0xBC8D40")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xBC8DDC", Offset = "0xBC8DDC", VA = "0xBC8DDC")]
		private void Reset()
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xBC8D44", Offset = "0xBC8D44", VA = "0xBC8D44")]
		public void ReloadBrushMasks()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xBC8E5C", Offset = "0xBC8E5C", VA = "0xBC8E5C")]
		public void Paint(GObjectPainterArgs args)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xBC9504", Offset = "0xBC9504", VA = "0xBC9504")]
		private System.Random GetRandomGenerator()
		{
			return null;
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xBC9288", Offset = "0xBC9288", VA = "0xBC9288")]
		private void ProcessBrushDynamic(ref GObjectPainterArgs args)
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xBC9574", Offset = "0xBC9574", VA = "0xBC9574")]
		public GObjectPainter()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public struct GObjectPainterArgs
	{
		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57475C", Offset = "0x57475C")]
		private Vector3 <HitPoint>k__BackingField;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57476C", Offset = "0x57476C")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57477C", Offset = "0x57477C")]
		private Transform <Transform>k__BackingField;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57478C", Offset = "0x57478C")]
		private Vector2 <UV>k__BackingField;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57479C", Offset = "0x57479C")]
		private int <TriangleIndex>k__BackingField;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5747AC", Offset = "0x5747AC")]
		private Vector3 <BarycentricCoord>k__BackingField;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5747BC", Offset = "0x5747BC")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5747CC", Offset = "0x5747CC")]
		private Vector3 <Normal>k__BackingField;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5747DC", Offset = "0x5747DC")]
		private Vector2 <LightMapCoord>k__BackingField;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5747EC", Offset = "0x5747EC")]
		private Rect <UvRect>k__BackingField;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5747FC", Offset = "0x5747FC")]
		private Vector3[] <WorldPointCorners>k__BackingField;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57480C", Offset = "0x57480C")]
		private Texture2D <Mask>k__BackingField;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57481C", Offset = "0x57481C")]
		private float <Radius>k__BackingField;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57482C", Offset = "0x57482C")]
		private float <Rotation>k__BackingField;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57483C", Offset = "0x57483C")]
		private int <Density>k__BackingField;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57484C", Offset = "0x57484C")]
		private float <EraseRatio>k__BackingField;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57485C", Offset = "0x57485C")]
		private float <ScaleStrength>k__BackingField;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57486C", Offset = "0x57486C")]
		private List<GameObject> <Prototypes>k__BackingField;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57487C", Offset = "0x57487C")]
		private List<int> <PrototypeIndices>k__BackingField;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57488C", Offset = "0x57488C")]
		private GSpawnFilter[] <Filters>k__BackingField;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57489C", Offset = "0x57489C")]
		private string <CustomArgs>k__BackingField;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5748AC", Offset = "0x5748AC")]
		private GPainterMouseEventType <MouseEventType>k__BackingField;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5748BC", Offset = "0x5748BC")]
		private GPainterActionType <ActionType>k__BackingField;

		[Token(Token = "0x17000393")]
		public Vector3 HitPoint
		{
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x5F66C8", Offset = "0x5F66C8", VA = "0x5F66C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C6FC", Offset = "0x57C6FC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0x5F66D4", Offset = "0x5F66D4", VA = "0x5F66D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C70C", Offset = "0x57C70C")]
			set
			{
			}
		}

		[Token(Token = "0x17000394")]
		public Collider Collider
		{
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x5F66E0", Offset = "0x5F66E0", VA = "0x5F66E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C71C", Offset = "0x57C71C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0x5F66E8", Offset = "0x5F66E8", VA = "0x5F66E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C72C", Offset = "0x57C72C")]
			set
			{
			}
		}

		[Token(Token = "0x17000395")]
		public Transform Transform
		{
			[Token(Token = "0x60010B9")]
			[Address(RVA = "0x5F66F0", Offset = "0x5F66F0", VA = "0x5F66F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C73C", Offset = "0x57C73C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010BA")]
			[Address(RVA = "0x5F66F8", Offset = "0x5F66F8", VA = "0x5F66F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C74C", Offset = "0x57C74C")]
			set
			{
			}
		}

		[Token(Token = "0x17000396")]
		public Vector2 UV
		{
			[Token(Token = "0x60010BB")]
			[Address(RVA = "0x5F6700", Offset = "0x5F6700", VA = "0x5F6700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C75C", Offset = "0x57C75C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0x5F6708", Offset = "0x5F6708", VA = "0x5F6708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C76C", Offset = "0x57C76C")]
			set
			{
			}
		}

		[Token(Token = "0x17000397")]
		public int TriangleIndex
		{
			[Token(Token = "0x60010BD")]
			[Address(RVA = "0x5F6710", Offset = "0x5F6710", VA = "0x5F6710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C77C", Offset = "0x57C77C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x5F6718", Offset = "0x5F6718", VA = "0x5F6718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C78C", Offset = "0x57C78C")]
			set
			{
			}
		}

		[Token(Token = "0x17000398")]
		public Vector3 BarycentricCoord
		{
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x5F6720", Offset = "0x5F6720", VA = "0x5F6720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C79C", Offset = "0x57C79C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x5F672C", Offset = "0x5F672C", VA = "0x5F672C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C7AC", Offset = "0x57C7AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000399")]
		public float Distance
		{
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x5F6738", Offset = "0x5F6738", VA = "0x5F6738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C7BC", Offset = "0x57C7BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x5F6740", Offset = "0x5F6740", VA = "0x5F6740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C7CC", Offset = "0x57C7CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700039A")]
		public Vector3 Normal
		{
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x5F6748", Offset = "0x5F6748", VA = "0x5F6748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C7DC", Offset = "0x57C7DC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x5F6754", Offset = "0x5F6754", VA = "0x5F6754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C7EC", Offset = "0x57C7EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700039B")]
		public Vector2 LightMapCoord
		{
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x5F6760", Offset = "0x5F6760", VA = "0x5F6760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C7FC", Offset = "0x57C7FC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60010C6")]
			[Address(RVA = "0x5F6768", Offset = "0x5F6768", VA = "0x5F6768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C80C", Offset = "0x57C80C")]
			set
			{
			}
		}

		[Token(Token = "0x1700039C")]
		public Rect UvRect
		{
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x5F6770", Offset = "0x5F6770", VA = "0x5F6770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C81C", Offset = "0x57C81C")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x60010C8")]
			[Address(RVA = "0x5F677C", Offset = "0x5F677C", VA = "0x5F677C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C82C", Offset = "0x57C82C")]
			set
			{
			}
		}

		[Token(Token = "0x1700039D")]
		public Vector3[] WorldPointCorners
		{
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x5F6788", Offset = "0x5F6788", VA = "0x5F6788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C83C", Offset = "0x57C83C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0x5F6790", Offset = "0x5F6790", VA = "0x5F6790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C84C", Offset = "0x57C84C")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700039E")]
		public Texture2D Mask
		{
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0x5F6798", Offset = "0x5F6798", VA = "0x5F6798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C85C", Offset = "0x57C85C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010CC")]
			[Address(RVA = "0x5F67A0", Offset = "0x5F67A0", VA = "0x5F67A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C86C", Offset = "0x57C86C")]
			set
			{
			}
		}

		[Token(Token = "0x1700039F")]
		public float Radius
		{
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0x5F67A8", Offset = "0x5F67A8", VA = "0x5F67A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C87C", Offset = "0x57C87C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010CE")]
			[Address(RVA = "0x5F67B0", Offset = "0x5F67B0", VA = "0x5F67B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C88C", Offset = "0x57C88C")]
			internal set
			{
			}
		}

		[Token(Token = "0x170003A0")]
		public float Rotation
		{
			[Token(Token = "0x60010CF")]
			[Address(RVA = "0x5F67B8", Offset = "0x5F67B8", VA = "0x5F67B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C89C", Offset = "0x57C89C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0x5F67C0", Offset = "0x5F67C0", VA = "0x5F67C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C8AC", Offset = "0x57C8AC")]
			internal set
			{
			}
		}

		[Token(Token = "0x170003A1")]
		public int Density
		{
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0x5F67C8", Offset = "0x5F67C8", VA = "0x5F67C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C8BC", Offset = "0x57C8BC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0x5F67D0", Offset = "0x5F67D0", VA = "0x5F67D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C8CC", Offset = "0x57C8CC")]
			internal set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		public float EraseRatio
		{
			[Token(Token = "0x60010D3")]
			[Address(RVA = "0x5F67D8", Offset = "0x5F67D8", VA = "0x5F67D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C8DC", Offset = "0x57C8DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010D4")]
			[Address(RVA = "0x5F67E0", Offset = "0x5F67E0", VA = "0x5F67E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C8EC", Offset = "0x57C8EC")]
			internal set
			{
			}
		}

		[Token(Token = "0x170003A3")]
		public float ScaleStrength
		{
			[Token(Token = "0x60010D5")]
			[Address(RVA = "0x5F67E8", Offset = "0x5F67E8", VA = "0x5F67E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C8FC", Offset = "0x57C8FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010D6")]
			[Address(RVA = "0x5F67F0", Offset = "0x5F67F0", VA = "0x5F67F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C90C", Offset = "0x57C90C")]
			internal set
			{
			}
		}

		[Token(Token = "0x170003A4")]
		public List<GameObject> Prototypes
		{
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0x5F67F8", Offset = "0x5F67F8", VA = "0x5F67F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C91C", Offset = "0x57C91C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D8")]
			[Address(RVA = "0x5F6800", Offset = "0x5F6800", VA = "0x5F6800")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C92C", Offset = "0x57C92C")]
			set
			{
			}
		}

		[Token(Token = "0x170003A5")]
		public List<int> PrototypeIndices
		{
			[Token(Token = "0x60010D9")]
			[Address(RVA = "0x5F6808", Offset = "0x5F6808", VA = "0x5F6808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C93C", Offset = "0x57C93C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010DA")]
			[Address(RVA = "0x5F6810", Offset = "0x5F6810", VA = "0x5F6810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C94C", Offset = "0x57C94C")]
			set
			{
			}
		}

		[Token(Token = "0x170003A6")]
		public GSpawnFilter[] Filters
		{
			[Token(Token = "0x60010DB")]
			[Address(RVA = "0x5F6818", Offset = "0x5F6818", VA = "0x5F6818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C95C", Offset = "0x57C95C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010DC")]
			[Address(RVA = "0x5F6820", Offset = "0x5F6820", VA = "0x5F6820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C96C", Offset = "0x57C96C")]
			set
			{
			}
		}

		[Token(Token = "0x170003A7")]
		public string CustomArgs
		{
			[Token(Token = "0x60010DD")]
			[Address(RVA = "0x5F6828", Offset = "0x5F6828", VA = "0x5F6828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C97C", Offset = "0x57C97C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010DE")]
			[Address(RVA = "0x5F6830", Offset = "0x5F6830", VA = "0x5F6830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C98C", Offset = "0x57C98C")]
			internal set
			{
			}
		}

		[Token(Token = "0x170003A8")]
		public GPainterMouseEventType MouseEventType
		{
			[Token(Token = "0x60010DF")]
			[Address(RVA = "0x5F6838", Offset = "0x5F6838", VA = "0x5F6838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C99C", Offset = "0x57C99C")]
			get
			{
				return default(GPainterMouseEventType);
			}
			[Token(Token = "0x60010E0")]
			[Address(RVA = "0x5F6840", Offset = "0x5F6840", VA = "0x5F6840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C9AC", Offset = "0x57C9AC")]
			set
			{
			}
		}

		[Token(Token = "0x170003A9")]
		public GPainterActionType ActionType
		{
			[Token(Token = "0x60010E1")]
			[Address(RVA = "0x5F6848", Offset = "0x5F6848", VA = "0x5F6848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C9BC", Offset = "0x57C9BC")]
			get
			{
				return default(GPainterActionType);
			}
			[Token(Token = "0x60010E2")]
			[Address(RVA = "0x5F6850", Offset = "0x5F6850", VA = "0x5F6850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C9CC", Offset = "0x57C9CC")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001FF")]
	public enum GObjectPaintingMode
	{
		[Token(Token = "0x4001063")]
		Spawn,
		[Token(Token = "0x4001064")]
		Scale,
		[Token(Token = "0x4001065")]
		Custom
	}
	[Token(Token = "0x2000200")]
	public class GObjectScaler : IGObjectPainter
	{
		[Token(Token = "0x170003AA")]
		public string Instruction
		{
			[Token(Token = "0x60010E3")]
			[Address(RVA = "0xBC9898", Offset = "0xBC9898", VA = "0xBC9898", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AB")]
		public List<Type> SuitableFilterTypes
		{
			[Token(Token = "0x60010E4")]
			[Address(RVA = "0xBC9970", Offset = "0xBC9970", VA = "0xBC9970", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xBC9A74", Offset = "0xBC9A74", VA = "0xBC9A74", Slot = "6")]
		public void Paint(GStylizedTerrain terrain, GObjectPainterArgs args)
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xBC8638", Offset = "0xBC8638", VA = "0xBC8638")]
		public GObjectScaler()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class GObjectSpawner : IGObjectPainter
	{
		[Token(Token = "0x200035B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FAC0", Offset = "0x56FAC0")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 worldPos;

			[Token(Token = "0x4001A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GObjectPainterArgs args;

			[Token(Token = "0x4001A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public Vector3 bary0;

			[Token(Token = "0x4001A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			public Vector3 bary1;

			[Token(Token = "0x4001A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public Vector2 maskUv;

			[Token(Token = "0x4001A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public Texture2D clonedMask;

			[Token(Token = "0x4001A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			public Color maskColor;

			[Token(Token = "0x4001A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			public Predicate<GameObject> <>9__0;

			[Token(Token = "0x6001CD6")]
			[Address(RVA = "0xBCB7E8", Offset = "0xBCB7E8", VA = "0xBCB7E8")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001CD7")]
			[Address(RVA = "0xBCB7F0", Offset = "0xBCB7F0", VA = "0xBCB7F0")]
			internal bool <HandleEraseObject>b__0(GameObject instance)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003AC")]
		public string Instruction
		{
			[Token(Token = "0x60010E7")]
			[Address(RVA = "0xBCA5A8", Offset = "0xBCA5A8", VA = "0xBCA5A8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AD")]
		public List<Type> SuitableFilterTypes
		{
			[Token(Token = "0x60010E8")]
			[Address(RVA = "0xBCA680", Offset = "0xBCA680", VA = "0xBCA680", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xBCA8C4", Offset = "0xBCA8C4", VA = "0xBCA8C4", Slot = "6")]
		public void Paint(GStylizedTerrain terrain, GObjectPainterArgs args)
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xBCAA90", Offset = "0xBCAA90", VA = "0xBCAA90")]
		private void HandleSpawnObject(GStylizedTerrain terrain, GObjectPainterArgs args)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xBCB4BC", Offset = "0xBCB4BC", VA = "0xBCB4BC")]
		private void HandleEraseObject(GStylizedTerrain terrain, GObjectPainterArgs args)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xBC8630", Offset = "0xBC8630", VA = "0xBC8630")]
		public GObjectSpawner()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public interface IGObjectPainter
	{
		[Token(Token = "0x170003AE")]
		string Instruction
		{
			[Token(Token = "0x60010ED")]
			get;
		}

		[Token(Token = "0x170003AF")]
		List<Type> SuitableFilterTypes
		{
			[Token(Token = "0x60010EE")]
			get;
		}

		[Token(Token = "0x60010EF")]
		void Paint(GStylizedTerrain terrain, GObjectPainterArgs args);
	}
	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "GDisplayName", RVA = "0x56E5A8", Offset = "0x56E5A8")]
	public class GAlignToSurfaceFilter : GSpawnFilter
	{
		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x8978F8", Offset = "0x8978F8", VA = "0x8978F8", Slot = "4")]
		public override void Apply(ref GSpawnFilterArgs args)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x897A04", Offset = "0x897A04", VA = "0x897A04")]
		public GAlignToSurfaceFilter()
		{
		}
	}
	[Token(Token = "0x2000204")]
	[AttributeAttribute(Name = "GDisplayName", RVA = "0x56E5E0", Offset = "0x56E5E0")]
	public class GHeightConstraintFilter : GSpawnFilter
	{
		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Space space;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float minHeight;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float maxHeight;

		[Token(Token = "0x170003B0")]
		public Space Space
		{
			[Token(Token = "0x60010F2")]
			[Address(RVA = "0xBC5670", Offset = "0xBC5670", VA = "0xBC5670")]
			get
			{
				return default(Space);
			}
			[Token(Token = "0x60010F3")]
			[Address(RVA = "0xBC5678", Offset = "0xBC5678", VA = "0xBC5678")]
			set
			{
			}
		}

		[Token(Token = "0x170003B1")]
		public float MinHeight
		{
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0xBC5680", Offset = "0xBC5680", VA = "0xBC5680")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010F5")]
			[Address(RVA = "0xBC5688", Offset = "0xBC5688", VA = "0xBC5688")]
			set
			{
			}
		}

		[Token(Token = "0x170003B2")]
		public float MaxHeight
		{
			[Token(Token = "0x60010F6")]
			[Address(RVA = "0xBC5690", Offset = "0xBC5690", VA = "0xBC5690")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0xBC5698", Offset = "0xBC5698", VA = "0xBC5698")]
			set
			{
			}
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xBC56A0", Offset = "0xBC56A0", VA = "0xBC56A0", Slot = "4")]
		public override void Apply(ref GSpawnFilterArgs args)
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xBC571C", Offset = "0xBC571C", VA = "0xBC571C")]
		private void Reset()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xBC5734", Offset = "0xBC5734", VA = "0xBC5734")]
		public GHeightConstraintFilter()
		{
		}
	}
	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "GDisplayName", RVA = "0x56E618", Offset = "0x56E618")]
	public class GRotationRandomizeFilter : GSpawnFilter
	{
		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float minAngle;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float maxAngle;

		[Token(Token = "0x170003B3")]
		public float MinAngle
		{
			[Token(Token = "0x60010FB")]
			[Address(RVA = "0xBCC5A8", Offset = "0xBCC5A8", VA = "0xBCC5A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010FC")]
			[Address(RVA = "0xBCC5B0", Offset = "0xBCC5B0", VA = "0xBCC5B0")]
			set
			{
			}
		}

		[Token(Token = "0x170003B4")]
		public float MaxAngle
		{
			[Token(Token = "0x60010FD")]
			[Address(RVA = "0xBCC5B8", Offset = "0xBCC5B8", VA = "0xBCC5B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010FE")]
			[Address(RVA = "0xBCC5C0", Offset = "0xBCC5C0", VA = "0xBCC5C0")]
			set
			{
			}
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xBCC5C8", Offset = "0xBCC5C8", VA = "0xBCC5C8", Slot = "4")]
		public override void Apply(ref GSpawnFilterArgs args)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xBCC668", Offset = "0xBCC668", VA = "0xBCC668")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xBCC678", Offset = "0xBCC678", VA = "0xBCC678")]
		public GRotationRandomizeFilter()
		{
		}
	}
	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "GDisplayName", RVA = "0x56E650", Offset = "0x56E650")]
	public class GScaleClampFilter : GSpawnFilter
	{
		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 minScale;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 maxScale;

		[Token(Token = "0x170003B5")]
		public Vector3 MinScale
		{
			[Token(Token = "0x6001102")]
			[Address(RVA = "0xBCC680", Offset = "0xBCC680", VA = "0xBCC680")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001103")]
			[Address(RVA = "0xBCC68C", Offset = "0xBCC68C", VA = "0xBCC68C")]
			set
			{
			}
		}

		[Token(Token = "0x170003B6")]
		public Vector3 MaxScale
		{
			[Token(Token = "0x6001104")]
			[Address(RVA = "0xBCC698", Offset = "0xBCC698", VA = "0xBCC698")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001105")]
			[Address(RVA = "0xBCC6A4", Offset = "0xBCC6A4", VA = "0xBCC6A4")]
			set
			{
			}
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xBCC6B0", Offset = "0xBCC6B0", VA = "0xBCC6B0", Slot = "4")]
		public override void Apply(ref GSpawnFilterArgs args)
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xBCC7BC", Offset = "0xBCC7BC", VA = "0xBCC7BC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xBCC840", Offset = "0xBCC840", VA = "0xBCC840")]
		public GScaleClampFilter()
		{
		}
	}
	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "GDisplayName", RVA = "0x56E688", Offset = "0x56E688")]
	public class GScaleRandomizeFilter : GSpawnFilter
	{
		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 minScale;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 maxScale;

		[Token(Token = "0x170003B7")]
		public Vector3 MinScale
		{
			[Token(Token = "0x6001109")]
			[Address(RVA = "0xBCC848", Offset = "0xBCC848", VA = "0xBCC848")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600110A")]
			[Address(RVA = "0xBCC854", Offset = "0xBCC854", VA = "0xBCC854")]
			set
			{
			}
		}

		[Token(Token = "0x170003B8")]
		public Vector3 MaxScale
		{
			[Token(Token = "0x600110B")]
			[Address(RVA = "0xBCC860", Offset = "0xBCC860", VA = "0xBCC860")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600110C")]
			[Address(RVA = "0xBCC86C", Offset = "0xBCC86C", VA = "0xBCC86C")]
			set
			{
			}
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xBCC878", Offset = "0xBCC878", VA = "0xBCC878", Slot = "4")]
		public override void Apply(ref GSpawnFilterArgs args)
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xBCC948", Offset = "0xBCC948", VA = "0xBCC948")]
		private void Reset()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xBCC9D8", Offset = "0xBCC9D8", VA = "0xBCC9D8")]
		public GScaleRandomizeFilter()
		{
		}
	}
	[Token(Token = "0x2000208")]
	[AttributeAttribute(Name = "GDisplayName", RVA = "0x56E6C0", Offset = "0x56E6C0")]
	public class GSlopeConstraintFilter : GSpawnFilter
	{
		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57495C", Offset = "0x57495C")]
		private float minSlopeAngle;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5749A0", Offset = "0x5749A0")]
		private float maxSlopeAngle;

		[Token(Token = "0x170003B9")]
		public float MinSlopeAngle
		{
			[Token(Token = "0x6001110")]
			[Address(RVA = "0xBCC9E0", Offset = "0xBCC9E0", VA = "0xBCC9E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001111")]
			[Address(RVA = "0xBCC9E8", Offset = "0xBCC9E8", VA = "0xBCC9E8")]
			set
			{
			}
		}

		[Token(Token = "0x170003BA")]
		public float MaxSlopeAngle
		{
			[Token(Token = "0x6001112")]
			[Address(RVA = "0xBCCA70", Offset = "0xBCCA70", VA = "0xBCCA70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001113")]
			[Address(RVA = "0xBCCA78", Offset = "0xBCCA78", VA = "0xBCCA78")]
			set
			{
			}
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xBCCB00", Offset = "0xBCCB00", VA = "0xBCCB00", Slot = "4")]
		public override void Apply(ref GSpawnFilterArgs args)
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xBCCBD0", Offset = "0xBCCBD0", VA = "0xBCCBD0")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xBCCC00", Offset = "0xBCCC00", VA = "0xBCCC00")]
		public GSlopeConstraintFilter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56E6F8", Offset = "0x56E6F8")]
	public abstract class GSpawnFilter : MonoBehaviour
	{
		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool ignore;

		[Token(Token = "0x170003BB")]
		public bool Ignore
		{
			[Token(Token = "0x6001117")]
			[Address(RVA = "0xBCDC60", Offset = "0xBCDC60", VA = "0xBCDC60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001118")]
			[Address(RVA = "0xBCDC68", Offset = "0xBCDC68", VA = "0xBCDC68")]
			set
			{
			}
		}

		[Token(Token = "0x6001119")]
		public abstract void Apply(ref GSpawnFilterArgs args);

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xBC573C", Offset = "0xBC573C", VA = "0xBC573C")]
		protected GSpawnFilter()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public struct GSpawnFilterArgs
	{
		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5749F4", Offset = "0x5749F4")]
		private GStylizedTerrain <Terrain>k__BackingField;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x574A04", Offset = "0x574A04")]
		private Vector3 <Position>k__BackingField;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x574A14", Offset = "0x574A14")]
		private Quaternion <Rotation>k__BackingField;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x574A24", Offset = "0x574A24")]
		private Vector3 <Scale>k__BackingField;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x574A34", Offset = "0x574A34")]
		private Color <Color>k__BackingField;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x574A44", Offset = "0x574A44")]
		private Vector3 <SurfaceNormal>k__BackingField;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x574A54", Offset = "0x574A54")]
		private Vector2 <SurfaceTexcoord>k__BackingField;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x574A64", Offset = "0x574A64")]
		private bool <ShouldExclude>k__BackingField;

		[Token(Token = "0x170003BC")]
		public GStylizedTerrain Terrain
		{
			[Token(Token = "0x600111B")]
			[Address(RVA = "0x5F6A28", Offset = "0x5F6A28", VA = "0x5F6A28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C9DC", Offset = "0x57C9DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600111C")]
			[Address(RVA = "0x5F6A30", Offset = "0x5F6A30", VA = "0x5F6A30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C9EC", Offset = "0x57C9EC")]
			set
			{
			}
		}

		[Token(Token = "0x170003BD")]
		public Vector3 Position
		{
			[Token(Token = "0x600111D")]
			[Address(RVA = "0x5F6A38", Offset = "0x5F6A38", VA = "0x5F6A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C9FC", Offset = "0x57C9FC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600111E")]
			[Address(RVA = "0x5F6A44", Offset = "0x5F6A44", VA = "0x5F6A44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CA0C", Offset = "0x57CA0C")]
			set
			{
			}
		}

		[Token(Token = "0x170003BE")]
		public Quaternion Rotation
		{
			[Token(Token = "0x600111F")]
			[Address(RVA = "0x5F6A50", Offset = "0x5F6A50", VA = "0x5F6A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CA1C", Offset = "0x57CA1C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001120")]
			[Address(RVA = "0x5F6A5C", Offset = "0x5F6A5C", VA = "0x5F6A5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CA2C", Offset = "0x57CA2C")]
			set
			{
			}
		}

		[Token(Token = "0x170003BF")]
		public Vector3 Scale
		{
			[Token(Token = "0x6001121")]
			[Address(RVA = "0x5F6A68", Offset = "0x5F6A68", VA = "0x5F6A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CA3C", Offset = "0x57CA3C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001122")]
			[Address(RVA = "0x5F6A74", Offset = "0x5F6A74", VA = "0x5F6A74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CA4C", Offset = "0x57CA4C")]
			set
			{
			}
		}

		[Token(Token = "0x170003C0")]
		public Color Color
		{
			[Token(Token = "0x6001123")]
			[Address(RVA = "0x5F6A80", Offset = "0x5F6A80", VA = "0x5F6A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CA5C", Offset = "0x57CA5C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001124")]
			[Address(RVA = "0x5F6A8C", Offset = "0x5F6A8C", VA = "0x5F6A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CA6C", Offset = "0x57CA6C")]
			set
			{
			}
		}

		[Token(Token = "0x170003C1")]
		public Vector3 SurfaceNormal
		{
			[Token(Token = "0x6001125")]
			[Address(RVA = "0x5F6A98", Offset = "0x5F6A98", VA = "0x5F6A98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CA7C", Offset = "0x57CA7C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001126")]
			[Address(RVA = "0x5F6AA4", Offset = "0x5F6AA4", VA = "0x5F6AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CA8C", Offset = "0x57CA8C")]
			set
			{
			}
		}

		[Token(Token = "0x170003C2")]
		public Vector2 SurfaceTexcoord
		{
			[Token(Token = "0x6001127")]
			[Address(RVA = "0x5F6AB0", Offset = "0x5F6AB0", VA = "0x5F6AB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CA9C", Offset = "0x57CA9C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001128")]
			[Address(RVA = "0x5F6AB8", Offset = "0x5F6AB8", VA = "0x5F6AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CAAC", Offset = "0x57CAAC")]
			set
			{
			}
		}

		[Token(Token = "0x170003C3")]
		public bool ShouldExclude
		{
			[Token(Token = "0x6001129")]
			[Address(RVA = "0x5F6AC0", Offset = "0x5F6AC0", VA = "0x5F6AC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CABC", Offset = "0x57CABC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600112A")]
			[Address(RVA = "0x5F6AC8", Offset = "0x5F6AC8", VA = "0x5F6AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CACC", Offset = "0x57CACC")]
			set
			{
			}
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xBC3F9C", Offset = "0xBC3F9C", VA = "0xBC3F9C")]
		public static GSpawnFilterArgs Create()
		{
			return default(GSpawnFilterArgs);
		}
	}
}
namespace Pinwheel.Griffin.HelpTool
{
	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56E730", Offset = "0x56E730")]
	public class GHelpComponent : MonoBehaviour
	{
		[Token(Token = "0x600112C")]
		[Address(RVA = "0x8968E4", Offset = "0x8968E4", VA = "0x8968E4")]
		public GHelpComponent()
		{
		}
	}
}
namespace Pinwheel.Griffin.GroupTool
{
	[Serializable]
	[Token(Token = "0x200020C")]
	public struct GFoliageOverride
	{
		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool overrideTrees;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private GTreePrototypeGroup trees;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool overrideGrasses;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GGrassPrototypeGroup grasses;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool overridePatchGridSize;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int patchGridSize;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool overrideTreeSnapMode;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private GSnapMode treeSnapMode;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool overrideTreeSnapLayerMask;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private LayerMask treeSnapLayerMask;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool overrideGrassSnapMode;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private GSnapMode grassSnapMode;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool overrideGrassSnapLayerMask;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private LayerMask grassSnapLayerMask;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool overrideEnableInteractiveGrass;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		private bool enableInteractiveGrass;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		private bool overrideVectorFieldMapResolution;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int vectorFieldMapResolution;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool overrideBendSensitive;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float bendSensitive;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool overrideRestoreSensitive;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float restoreSensitive;

		[Token(Token = "0x170003C4")]
		public bool OverrideTrees
		{
			[Token(Token = "0x600112D")]
			[Address(RVA = "0x5E89DC", Offset = "0x5E89DC", VA = "0x5E89DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600112E")]
			[Address(RVA = "0x5E89E4", Offset = "0x5E89E4", VA = "0x5E89E4")]
			set
			{
			}
		}

		[Token(Token = "0x170003C5")]
		public GTreePrototypeGroup Trees
		{
			[Token(Token = "0x600112F")]
			[Address(RVA = "0x5E89F0", Offset = "0x5E89F0", VA = "0x5E89F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x5E89F8", Offset = "0x5E89F8", VA = "0x5E89F8")]
			set
			{
			}
		}

		[Token(Token = "0x170003C6")]
		public bool OverrideGrasses
		{
			[Token(Token = "0x6001131")]
			[Address(RVA = "0x5E8A00", Offset = "0x5E8A00", VA = "0x5E8A00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001132")]
			[Address(RVA = "0x5E8A08", Offset = "0x5E8A08", VA = "0x5E8A08")]
			set
			{
			}
		}

		[Token(Token = "0x170003C7")]
		public GGrassPrototypeGroup Grasses
		{
			[Token(Token = "0x6001133")]
			[Address(RVA = "0x5E8A14", Offset = "0x5E8A14", VA = "0x5E8A14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001134")]
			[Address(RVA = "0x5E8A1C", Offset = "0x5E8A1C", VA = "0x5E8A1C")]
			set
			{
			}
		}

		[Token(Token = "0x170003C8")]
		public bool OverridePatchGridSize
		{
			[Token(Token = "0x6001135")]
			[Address(RVA = "0x5E8A24", Offset = "0x5E8A24", VA = "0x5E8A24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001136")]
			[Address(RVA = "0x5E8A2C", Offset = "0x5E8A2C", VA = "0x5E8A2C")]
			set
			{
			}
		}

		[Token(Token = "0x170003C9")]
		public int PatchGridSize
		{
			[Token(Token = "0x6001137")]
			[Address(RVA = "0x5E8A38", Offset = "0x5E8A38", VA = "0x5E8A38")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001138")]
			[Address(RVA = "0x5E8A40", Offset = "0x5E8A40", VA = "0x5E8A40")]
			set
			{
			}
		}

		[Token(Token = "0x170003CA")]
		public bool OverrideTreeSnapMode
		{
			[Token(Token = "0x6001139")]
			[Address(RVA = "0x5E8A48", Offset = "0x5E8A48", VA = "0x5E8A48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600113A")]
			[Address(RVA = "0x5E8A50", Offset = "0x5E8A50", VA = "0x5E8A50")]
			set
			{
			}
		}

		[Token(Token = "0x170003CB")]
		public GSnapMode TreeSnapMode
		{
			[Token(Token = "0x600113B")]
			[Address(RVA = "0x5E8A5C", Offset = "0x5E8A5C", VA = "0x5E8A5C")]
			get
			{
				return default(GSnapMode);
			}
			[Token(Token = "0x600113C")]
			[Address(RVA = "0x5E8A64", Offset = "0x5E8A64", VA = "0x5E8A64")]
			set
			{
			}
		}

		[Token(Token = "0x170003CC")]
		public bool OverrideTreeSnapLayerMask
		{
			[Token(Token = "0x600113D")]
			[Address(RVA = "0x5E8A6C", Offset = "0x5E8A6C", VA = "0x5E8A6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600113E")]
			[Address(RVA = "0x5E8A74", Offset = "0x5E8A74", VA = "0x5E8A74")]
			set
			{
			}
		}

		[Token(Token = "0x170003CD")]
		public LayerMask TreeSnapLayerMask
		{
			[Token(Token = "0x600113F")]
			[Address(RVA = "0x5E8A80", Offset = "0x5E8A80", VA = "0x5E8A80")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001140")]
			[Address(RVA = "0x5E8A88", Offset = "0x5E8A88", VA = "0x5E8A88")]
			set
			{
			}
		}

		[Token(Token = "0x170003CE")]
		public bool OverrideGrassSnapMode
		{
			[Token(Token = "0x6001141")]
			[Address(RVA = "0x5E8A90", Offset = "0x5E8A90", VA = "0x5E8A90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001142")]
			[Address(RVA = "0x5E8A98", Offset = "0x5E8A98", VA = "0x5E8A98")]
			set
			{
			}
		}

		[Token(Token = "0x170003CF")]
		public GSnapMode GrassSnapMode
		{
			[Token(Token = "0x6001143")]
			[Address(RVA = "0x5E8AA4", Offset = "0x5E8AA4", VA = "0x5E8AA4")]
			get
			{
				return default(GSnapMode);
			}
			[Token(Token = "0x6001144")]
			[Address(RVA = "0x5E8AAC", Offset = "0x5E8AAC", VA = "0x5E8AAC")]
			set
			{
			}
		}

		[Token(Token = "0x170003D0")]
		public bool OverrideGrassSnapLayerMask
		{
			[Token(Token = "0x6001145")]
			[Address(RVA = "0x5E8AB4", Offset = "0x5E8AB4", VA = "0x5E8AB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001146")]
			[Address(RVA = "0x5E8ABC", Offset = "0x5E8ABC", VA = "0x5E8ABC")]
			set
			{
			}
		}

		[Token(Token = "0x170003D1")]
		public LayerMask GrassSnapLayerMask
		{
			[Token(Token = "0x6001147")]
			[Address(RVA = "0x5E8AC8", Offset = "0x5E8AC8", VA = "0x5E8AC8")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001148")]
			[Address(RVA = "0x5E8AD0", Offset = "0x5E8AD0", VA = "0x5E8AD0")]
			set
			{
			}
		}

		[Token(Token = "0x170003D2")]
		public bool OverrideEnableInteractiveGrass
		{
			[Token(Token = "0x6001149")]
			[Address(RVA = "0x5E8AD8", Offset = "0x5E8AD8", VA = "0x5E8AD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600114A")]
			[Address(RVA = "0x5E8AE0", Offset = "0x5E8AE0", VA = "0x5E8AE0")]
			set
			{
			}
		}

		[Token(Token = "0x170003D3")]
		public bool EnableInteractiveGrass
		{
			[Token(Token = "0x600114B")]
			[Address(RVA = "0x5E8AEC", Offset = "0x5E8AEC", VA = "0x5E8AEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600114C")]
			[Address(RVA = "0x5E8AF4", Offset = "0x5E8AF4", VA = "0x5E8AF4")]
			set
			{
			}
		}

		[Token(Token = "0x170003D4")]
		public bool OverrideVectorFieldMapResolution
		{
			[Token(Token = "0x600114D")]
			[Address(RVA = "0x5E8B00", Offset = "0x5E8B00", VA = "0x5E8B00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600114E")]
			[Address(RVA = "0x5E8B08", Offset = "0x5E8B08", VA = "0x5E8B08")]
			set
			{
			}
		}

		[Token(Token = "0x170003D5")]
		public int VectorFieldMapResolution
		{
			[Token(Token = "0x600114F")]
			[Address(RVA = "0x5E8B14", Offset = "0x5E8B14", VA = "0x5E8B14")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001150")]
			[Address(RVA = "0x5E8B1C", Offset = "0x5E8B1C", VA = "0x5E8B1C")]
			set
			{
			}
		}

		[Token(Token = "0x170003D6")]
		public bool OverrideBendSensitive
		{
			[Token(Token = "0x6001151")]
			[Address(RVA = "0x5E8B24", Offset = "0x5E8B24", VA = "0x5E8B24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001152")]
			[Address(RVA = "0x5E8B2C", Offset = "0x5E8B2C", VA = "0x5E8B2C")]
			set
			{
			}
		}

		[Token(Token = "0x170003D7")]
		public float BendSensitive
		{
			[Token(Token = "0x6001153")]
			[Address(RVA = "0x5E8B38", Offset = "0x5E8B38", VA = "0x5E8B38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001154")]
			[Address(RVA = "0x5E8B40", Offset = "0x5E8B40", VA = "0x5E8B40")]
			set
			{
			}
		}

		[Token(Token = "0x170003D8")]
		public bool OverrideRestoreSensitive
		{
			[Token(Token = "0x6001155")]
			[Address(RVA = "0x5E8B48", Offset = "0x5E8B48", VA = "0x5E8B48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001156")]
			[Address(RVA = "0x5E8B50", Offset = "0x5E8B50", VA = "0x5E8B50")]
			set
			{
			}
		}

		[Token(Token = "0x170003D9")]
		public float RestoreSensitive
		{
			[Token(Token = "0x6001157")]
			[Address(RVA = "0x5E8B5C", Offset = "0x5E8B5C", VA = "0x5E8B5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001158")]
			[Address(RVA = "0x5E8B64", Offset = "0x5E8B64", VA = "0x5E8B64")]
			set
			{
			}
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x5E8B6C", Offset = "0x5E8B6C", VA = "0x5E8B6C")]
		public void Reset()
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x5E8B74", Offset = "0x5E8B74", VA = "0x5E8B74")]
		public void Override(GFoliage s)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020D")]
	public struct GGeometryOverride
	{
		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool overrideWidth;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private float width;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private bool overrideHeight;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private float height;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool overrideLength;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float length;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool overrideHeightMapResolution;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int heightMapResolution;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool overrideMeshBaseResolution;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int meshBaseResolution;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool overrideMeshResolution;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int meshResolution;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool overrideChunkGridSize;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int chunkGridSize;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool overrideLodCount;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int lodCount;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool overrideDisplacementSeed;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int displacementSeed;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool overrideDisplacementStrength;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float displacementStrength;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool overridePolygonDistribution;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private GPolygonDistributionMode polygonDistribution;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool overrideTriangulatorName;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string polygonProcessorName;

		[Token(Token = "0x170003DA")]
		public bool OverrideWidth
		{
			[Token(Token = "0x600115B")]
			[Address(RVA = "0x5E8DC4", Offset = "0x5E8DC4", VA = "0x5E8DC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600115C")]
			[Address(RVA = "0x5E8DCC", Offset = "0x5E8DCC", VA = "0x5E8DCC")]
			set
			{
			}
		}

		[Token(Token = "0x170003DB")]
		public float Width
		{
			[Token(Token = "0x600115D")]
			[Address(RVA = "0x5E8DD8", Offset = "0x5E8DD8", VA = "0x5E8DD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600115E")]
			[Address(RVA = "0x5E8DE0", Offset = "0x5E8DE0", VA = "0x5E8DE0")]
			set
			{
			}
		}

		[Token(Token = "0x170003DC")]
		public bool OverrideHeight
		{
			[Token(Token = "0x600115F")]
			[Address(RVA = "0x5E8DE8", Offset = "0x5E8DE8", VA = "0x5E8DE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001160")]
			[Address(RVA = "0x5E8DF0", Offset = "0x5E8DF0", VA = "0x5E8DF0")]
			set
			{
			}
		}

		[Token(Token = "0x170003DD")]
		public float Height
		{
			[Token(Token = "0x6001161")]
			[Address(RVA = "0x5E8DFC", Offset = "0x5E8DFC", VA = "0x5E8DFC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001162")]
			[Address(RVA = "0x5E8E04", Offset = "0x5E8E04", VA = "0x5E8E04")]
			set
			{
			}
		}

		[Token(Token = "0x170003DE")]
		public bool OverrideLength
		{
			[Token(Token = "0x6001163")]
			[Address(RVA = "0x5E8E0C", Offset = "0x5E8E0C", VA = "0x5E8E0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001164")]
			[Address(RVA = "0x5E8E14", Offset = "0x5E8E14", VA = "0x5E8E14")]
			set
			{
			}
		}

		[Token(Token = "0x170003DF")]
		public float Length
		{
			[Token(Token = "0x6001165")]
			[Address(RVA = "0x5E8E20", Offset = "0x5E8E20", VA = "0x5E8E20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001166")]
			[Address(RVA = "0x5E8E28", Offset = "0x5E8E28", VA = "0x5E8E28")]
			set
			{
			}
		}

		[Token(Token = "0x170003E0")]
		public bool OverrideHeightMapResolution
		{
			[Token(Token = "0x6001167")]
			[Address(RVA = "0x5E8E30", Offset = "0x5E8E30", VA = "0x5E8E30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001168")]
			[Address(RVA = "0x5E8E38", Offset = "0x5E8E38", VA = "0x5E8E38")]
			set
			{
			}
		}

		[Token(Token = "0x170003E1")]
		public int HeightMapResolution
		{
			[Token(Token = "0x6001169")]
			[Address(RVA = "0x5E8E44", Offset = "0x5E8E44", VA = "0x5E8E44")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600116A")]
			[Address(RVA = "0x5E8E4C", Offset = "0x5E8E4C", VA = "0x5E8E4C")]
			set
			{
			}
		}

		[Token(Token = "0x170003E2")]
		public bool OverrideMeshBaseResolution
		{
			[Token(Token = "0x600116B")]
			[Address(RVA = "0x5E8E54", Offset = "0x5E8E54", VA = "0x5E8E54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600116C")]
			[Address(RVA = "0x5E8E5C", Offset = "0x5E8E5C", VA = "0x5E8E5C")]
			set
			{
			}
		}

		[Token(Token = "0x170003E3")]
		public int MeshBaseResolution
		{
			[Token(Token = "0x600116D")]
			[Address(RVA = "0x5E8E68", Offset = "0x5E8E68", VA = "0x5E8E68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600116E")]
			[Address(RVA = "0x5E8E70", Offset = "0x5E8E70", VA = "0x5E8E70")]
			set
			{
			}
		}

		[Token(Token = "0x170003E4")]
		public bool OverrideMeshResolution
		{
			[Token(Token = "0x600116F")]
			[Address(RVA = "0x5E8E78", Offset = "0x5E8E78", VA = "0x5E8E78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001170")]
			[Address(RVA = "0x5E8E80", Offset = "0x5E8E80", VA = "0x5E8E80")]
			set
			{
			}
		}

		[Token(Token = "0x170003E5")]
		public int MeshResolution
		{
			[Token(Token = "0x6001171")]
			[Address(RVA = "0x5E8E8C", Offset = "0x5E8E8C", VA = "0x5E8E8C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001172")]
			[Address(RVA = "0x5E8E94", Offset = "0x5E8E94", VA = "0x5E8E94")]
			set
			{
			}
		}

		[Token(Token = "0x170003E6")]
		public bool OverrideChunkGridSize
		{
			[Token(Token = "0x6001173")]
			[Address(RVA = "0x5E8E9C", Offset = "0x5E8E9C", VA = "0x5E8E9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001174")]
			[Address(RVA = "0x5E8EA4", Offset = "0x5E8EA4", VA = "0x5E8EA4")]
			set
			{
			}
		}

		[Token(Token = "0x170003E7")]
		public int ChunkGridSize
		{
			[Token(Token = "0x6001175")]
			[Address(RVA = "0x5E8EB0", Offset = "0x5E8EB0", VA = "0x5E8EB0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001176")]
			[Address(RVA = "0x5E8EB8", Offset = "0x5E8EB8", VA = "0x5E8EB8")]
			set
			{
			}
		}

		[Token(Token = "0x170003E8")]
		public bool OverrideLodCount
		{
			[Token(Token = "0x6001177")]
			[Address(RVA = "0x5E8EC0", Offset = "0x5E8EC0", VA = "0x5E8EC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001178")]
			[Address(RVA = "0x5E8EC8", Offset = "0x5E8EC8", VA = "0x5E8EC8")]
			set
			{
			}
		}

		[Token(Token = "0x170003E9")]
		public int LODCount
		{
			[Token(Token = "0x6001179")]
			[Address(RVA = "0x5E8ED4", Offset = "0x5E8ED4", VA = "0x5E8ED4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600117A")]
			[Address(RVA = "0x5E8EDC", Offset = "0x5E8EDC", VA = "0x5E8EDC")]
			set
			{
			}
		}

		[Token(Token = "0x170003EA")]
		public bool OverrideDisplacementSeed
		{
			[Token(Token = "0x600117B")]
			[Address(RVA = "0x5E8EE4", Offset = "0x5E8EE4", VA = "0x5E8EE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600117C")]
			[Address(RVA = "0x5E8EEC", Offset = "0x5E8EEC", VA = "0x5E8EEC")]
			set
			{
			}
		}

		[Token(Token = "0x170003EB")]
		public int DisplacementSeed
		{
			[Token(Token = "0x600117D")]
			[Address(RVA = "0x5E8EF8", Offset = "0x5E8EF8", VA = "0x5E8EF8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600117E")]
			[Address(RVA = "0x5E8F00", Offset = "0x5E8F00", VA = "0x5E8F00")]
			set
			{
			}
		}

		[Token(Token = "0x170003EC")]
		public bool OverrideDisplacementStrength
		{
			[Token(Token = "0x600117F")]
			[Address(RVA = "0x5E8F08", Offset = "0x5E8F08", VA = "0x5E8F08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001180")]
			[Address(RVA = "0x5E8F10", Offset = "0x5E8F10", VA = "0x5E8F10")]
			set
			{
			}
		}

		[Token(Token = "0x170003ED")]
		public float DisplacementStrength
		{
			[Token(Token = "0x6001181")]
			[Address(RVA = "0x5E8F1C", Offset = "0x5E8F1C", VA = "0x5E8F1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001182")]
			[Address(RVA = "0x5E8F24", Offset = "0x5E8F24", VA = "0x5E8F24")]
			set
			{
			}
		}

		[Token(Token = "0x170003EE")]
		public bool OverridePolygonDistribution
		{
			[Token(Token = "0x6001183")]
			[Address(RVA = "0x5E8F2C", Offset = "0x5E8F2C", VA = "0x5E8F2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001184")]
			[Address(RVA = "0x5E8F34", Offset = "0x5E8F34", VA = "0x5E8F34")]
			set
			{
			}
		}

		[Token(Token = "0x170003EF")]
		public GPolygonDistributionMode PolygonDistribution
		{
			[Token(Token = "0x6001185")]
			[Address(RVA = "0x5E8F40", Offset = "0x5E8F40", VA = "0x5E8F40")]
			get
			{
				return default(GPolygonDistributionMode);
			}
			[Token(Token = "0x6001186")]
			[Address(RVA = "0x5E8F48", Offset = "0x5E8F48", VA = "0x5E8F48")]
			set
			{
			}
		}

		[Token(Token = "0x170003F0")]
		public bool OverridePolygonProcessorName
		{
			[Token(Token = "0x6001187")]
			[Address(RVA = "0x5E8F50", Offset = "0x5E8F50", VA = "0x5E8F50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001188")]
			[Address(RVA = "0x5E8F58", Offset = "0x5E8F58", VA = "0x5E8F58")]
			set
			{
			}
		}

		[Token(Token = "0x170003F1")]
		public string PolygonProcessorName
		{
			[Token(Token = "0x6001189")]
			[Address(RVA = "0x5E8F64", Offset = "0x5E8F64", VA = "0x5E8F64")]
			get
			{
				return null;
			}
			[Token(Token = "0x600118A")]
			[Address(RVA = "0x5E8F6C", Offset = "0x5E8F6C", VA = "0x5E8F6C")]
			set
			{
			}
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x5E8F74", Offset = "0x5E8F74", VA = "0x5E8F74")]
		public void Reset()
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x5E8F7C", Offset = "0x5E8F7C", VA = "0x5E8F7C")]
		public void Override(GGeometry g)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020E")]
	public struct GRenderingOverride
	{
		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool overrideCastShadow;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		[SerializeField]
		private bool castShadow;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		[SerializeField]
		private bool overrideReceiveShadow;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		[SerializeField]
		private bool receiveShadow;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private bool overrideDrawFoliage;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		[SerializeField]
		private bool drawFoliage;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		[SerializeField]
		private bool overrideEnableInstancing;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		[SerializeField]
		private bool enableInstancing;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private bool overrideBillboardStart;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private float billboardStart;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool overrideTreeDistance;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float treeDistance;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool overrideGrassDistance;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float grassDistance;

		[Token(Token = "0x170003F2")]
		public bool OverrideCastShadow
		{
			[Token(Token = "0x600118D")]
			[Address(RVA = "0x5E90C8", Offset = "0x5E90C8", VA = "0x5E90C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600118E")]
			[Address(RVA = "0x5E90D0", Offset = "0x5E90D0", VA = "0x5E90D0")]
			set
			{
			}
		}

		[Token(Token = "0x170003F3")]
		public bool CastShadow
		{
			[Token(Token = "0x600118F")]
			[Address(RVA = "0x5E90DC", Offset = "0x5E90DC", VA = "0x5E90DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001190")]
			[Address(RVA = "0x5E90E4", Offset = "0x5E90E4", VA = "0x5E90E4")]
			set
			{
			}
		}

		[Token(Token = "0x170003F4")]
		public bool OverrideReceiveShadow
		{
			[Token(Token = "0x6001191")]
			[Address(RVA = "0x5E90F0", Offset = "0x5E90F0", VA = "0x5E90F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001192")]
			[Address(RVA = "0x5E90F8", Offset = "0x5E90F8", VA = "0x5E90F8")]
			set
			{
			}
		}

		[Token(Token = "0x170003F5")]
		public bool ReceiveShadow
		{
			[Token(Token = "0x6001193")]
			[Address(RVA = "0x5E9104", Offset = "0x5E9104", VA = "0x5E9104")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001194")]
			[Address(RVA = "0x5E910C", Offset = "0x5E910C", VA = "0x5E910C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F6")]
		public bool OverrideDrawFoliage
		{
			[Token(Token = "0x6001195")]
			[Address(RVA = "0x5E9118", Offset = "0x5E9118", VA = "0x5E9118")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001196")]
			[Address(RVA = "0x5E9120", Offset = "0x5E9120", VA = "0x5E9120")]
			set
			{
			}
		}

		[Token(Token = "0x170003F7")]
		public bool DrawFoliage
		{
			[Token(Token = "0x6001197")]
			[Address(RVA = "0x5E912C", Offset = "0x5E912C", VA = "0x5E912C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001198")]
			[Address(RVA = "0x5E9134", Offset = "0x5E9134", VA = "0x5E9134")]
			set
			{
			}
		}

		[Token(Token = "0x170003F8")]
		public bool OverrideEnableInstancing
		{
			[Token(Token = "0x6001199")]
			[Address(RVA = "0x5E9140", Offset = "0x5E9140", VA = "0x5E9140")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600119A")]
			[Address(RVA = "0x5E9148", Offset = "0x5E9148", VA = "0x5E9148")]
			set
			{
			}
		}

		[Token(Token = "0x170003F9")]
		public bool EnableInstancing
		{
			[Token(Token = "0x600119B")]
			[Address(RVA = "0x5E9154", Offset = "0x5E9154", VA = "0x5E9154")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600119C")]
			[Address(RVA = "0x5E915C", Offset = "0x5E915C", VA = "0x5E915C")]
			set
			{
			}
		}

		[Token(Token = "0x170003FA")]
		public bool OverrideBillboardStart
		{
			[Token(Token = "0x600119D")]
			[Address(RVA = "0x5E9168", Offset = "0x5E9168", VA = "0x5E9168")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600119E")]
			[Address(RVA = "0x5E9170", Offset = "0x5E9170", VA = "0x5E9170")]
			set
			{
			}
		}

		[Token(Token = "0x170003FB")]
		public float BillboardStart
		{
			[Token(Token = "0x600119F")]
			[Address(RVA = "0x5E917C", Offset = "0x5E917C", VA = "0x5E917C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011A0")]
			[Address(RVA = "0x5E9184", Offset = "0x5E9184", VA = "0x5E9184")]
			set
			{
			}
		}

		[Token(Token = "0x170003FC")]
		public bool OverrideTreeDistance
		{
			[Token(Token = "0x60011A1")]
			[Address(RVA = "0x5E918C", Offset = "0x5E918C", VA = "0x5E918C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011A2")]
			[Address(RVA = "0x5E9194", Offset = "0x5E9194", VA = "0x5E9194")]
			set
			{
			}
		}

		[Token(Token = "0x170003FD")]
		public float TreeDistance
		{
			[Token(Token = "0x60011A3")]
			[Address(RVA = "0x5E91A0", Offset = "0x5E91A0", VA = "0x5E91A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011A4")]
			[Address(RVA = "0x5E91A8", Offset = "0x5E91A8", VA = "0x5E91A8")]
			set
			{
			}
		}

		[Token(Token = "0x170003FE")]
		public bool OverrideGrassDistance
		{
			[Token(Token = "0x60011A5")]
			[Address(RVA = "0x5E91B0", Offset = "0x5E91B0", VA = "0x5E91B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011A6")]
			[Address(RVA = "0x5E91B8", Offset = "0x5E91B8", VA = "0x5E91B8")]
			set
			{
			}
		}

		[Token(Token = "0x170003FF")]
		public float GrassDistance
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x5E91C4", Offset = "0x5E91C4", VA = "0x5E91C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x5E91CC", Offset = "0x5E91CC", VA = "0x5E91CC")]
			set
			{
			}
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x5E91D4", Offset = "0x5E91D4", VA = "0x5E91D4")]
		public void Reset()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x5E91DC", Offset = "0x5E91DC", VA = "0x5E91DC")]
		public void Override(GRendering r)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020F")]
	public struct GShadingOverride
	{
		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool overrideCustomMaterial;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private Material customMaterial;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool overrideAlbedoMapResolution;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int albedoMapResolution;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool overrideMetallicMapResolution;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int metallicMapResolution;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool overrideAlbedoMapPropertyName;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string albedoMapPropertyName;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool overrideMetallicMapPropertyName;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string metallicMapPropertyName;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool overrideColorByHeight;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Gradient colorByHeight;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool overrideColorByNormal;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Gradient colorByNormal;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool overrideColorBlendCurve;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AnimationCurve colorBlendCurve;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool overrideColorByHeightPropertyName;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string colorByHeightPropertyName;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool overrideColorByNormalPropertyName;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private string colorByNormalPropertyName;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool overrideColorBlendPropertyName;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string colorBlendPropertyName;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool overrideDimensionPropertyName;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private string dimensionPropertyName;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private bool overrideSplats;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GSplatPrototypeGroup splats;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private bool overrideSplatControlResolution;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private int splatControlResolution;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private bool overrideSplatControlMapPropertyName;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private string splatControlMapPropertyName;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private bool overrideSplatMapPropertyName;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private string splatMapPropertyName;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private bool overrideSplatNormalPropertyName;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private string splatNormalPropertyName;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private bool overrideSplatMetallicPropertyName;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private string splatMetallicPropertyName;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private bool overrideSplatSmoothnessPropertyName;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private string splatSmoothnessPropertyName;

		[Token(Token = "0x17000400")]
		public bool OverrideCustomMaterial
		{
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x5E9220", Offset = "0x5E9220", VA = "0x5E9220")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011AC")]
			[Address(RVA = "0x5E9228", Offset = "0x5E9228", VA = "0x5E9228")]
			set
			{
			}
		}

		[Token(Token = "0x17000401")]
		public Material CustomMaterial
		{
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0x5E9234", Offset = "0x5E9234", VA = "0x5E9234")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011AE")]
			[Address(RVA = "0x5E923C", Offset = "0x5E923C", VA = "0x5E923C")]
			set
			{
			}
		}

		[Token(Token = "0x17000402")]
		public bool OverrideAlbedoMapResolution
		{
			[Token(Token = "0x60011AF")]
			[Address(RVA = "0x5E9244", Offset = "0x5E9244", VA = "0x5E9244")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011B0")]
			[Address(RVA = "0x5E924C", Offset = "0x5E924C", VA = "0x5E924C")]
			set
			{
			}
		}

		[Token(Token = "0x17000403")]
		public int AlbedoMapResolution
		{
			[Token(Token = "0x60011B1")]
			[Address(RVA = "0x5E9258", Offset = "0x5E9258", VA = "0x5E9258")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011B2")]
			[Address(RVA = "0x5E9260", Offset = "0x5E9260", VA = "0x5E9260")]
			set
			{
			}
		}

		[Token(Token = "0x17000404")]
		public bool OverrideMetallicMapResolution
		{
			[Token(Token = "0x60011B3")]
			[Address(RVA = "0x5E9268", Offset = "0x5E9268", VA = "0x5E9268")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011B4")]
			[Address(RVA = "0x5E9270", Offset = "0x5E9270", VA = "0x5E9270")]
			set
			{
			}
		}

		[Token(Token = "0x17000405")]
		public int MetallicMapResolution
		{
			[Token(Token = "0x60011B5")]
			[Address(RVA = "0x5E927C", Offset = "0x5E927C", VA = "0x5E927C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011B6")]
			[Address(RVA = "0x5E9284", Offset = "0x5E9284", VA = "0x5E9284")]
			set
			{
			}
		}

		[Token(Token = "0x17000406")]
		public bool OverrideAlbedoMapPropertyName
		{
			[Token(Token = "0x60011B7")]
			[Address(RVA = "0x5E928C", Offset = "0x5E928C", VA = "0x5E928C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0x5E9294", Offset = "0x5E9294", VA = "0x5E9294")]
			set
			{
			}
		}

		[Token(Token = "0x17000407")]
		public string AlbedoMapPropertyName
		{
			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x5E92A0", Offset = "0x5E92A0", VA = "0x5E92A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011BA")]
			[Address(RVA = "0x5E92A8", Offset = "0x5E92A8", VA = "0x5E92A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000408")]
		public bool OverrideMetallicMapPropertyName
		{
			[Token(Token = "0x60011BB")]
			[Address(RVA = "0x5E92B0", Offset = "0x5E92B0", VA = "0x5E92B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011BC")]
			[Address(RVA = "0x5E92B8", Offset = "0x5E92B8", VA = "0x5E92B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000409")]
		public string MetallicMapPropertyName
		{
			[Token(Token = "0x60011BD")]
			[Address(RVA = "0x5E92C4", Offset = "0x5E92C4", VA = "0x5E92C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0x5E92CC", Offset = "0x5E92CC", VA = "0x5E92CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700040A")]
		public bool OverrideColorByHeight
		{
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0x5E92D4", Offset = "0x5E92D4", VA = "0x5E92D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0x5E92DC", Offset = "0x5E92DC", VA = "0x5E92DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700040B")]
		public Gradient ColorByHeight
		{
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0x5E92E8", Offset = "0x5E92E8", VA = "0x5E92E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0x5E92F0", Offset = "0x5E92F0", VA = "0x5E92F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700040C")]
		public bool OverrideColorByNormal
		{
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0x5E92F8", Offset = "0x5E92F8", VA = "0x5E92F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0x5E9300", Offset = "0x5E9300", VA = "0x5E9300")]
			set
			{
			}
		}

		[Token(Token = "0x1700040D")]
		public Gradient ColorByNormal
		{
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0x5E930C", Offset = "0x5E930C", VA = "0x5E930C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0x5E9314", Offset = "0x5E9314", VA = "0x5E9314")]
			set
			{
			}
		}

		[Token(Token = "0x1700040E")]
		public bool OverrideColorBlendCurve
		{
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0x5E931C", Offset = "0x5E931C", VA = "0x5E931C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0x5E9324", Offset = "0x5E9324", VA = "0x5E9324")]
			set
			{
			}
		}

		[Token(Token = "0x1700040F")]
		public AnimationCurve ColorBlendCurve
		{
			[Token(Token = "0x60011C9")]
			[Address(RVA = "0x5E9330", Offset = "0x5E9330", VA = "0x5E9330")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011CA")]
			[Address(RVA = "0x5E9338", Offset = "0x5E9338", VA = "0x5E9338")]
			set
			{
			}
		}

		[Token(Token = "0x17000410")]
		public bool OverrideColorByHeightPropertyName
		{
			[Token(Token = "0x60011CB")]
			[Address(RVA = "0x5E9340", Offset = "0x5E9340", VA = "0x5E9340")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011CC")]
			[Address(RVA = "0x5E9348", Offset = "0x5E9348", VA = "0x5E9348")]
			set
			{
			}
		}

		[Token(Token = "0x17000411")]
		public string ColorByHeightPropertyName
		{
			[Token(Token = "0x60011CD")]
			[Address(RVA = "0x5E9354", Offset = "0x5E9354", VA = "0x5E9354")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011CE")]
			[Address(RVA = "0x5E935C", Offset = "0x5E935C", VA = "0x5E935C")]
			set
			{
			}
		}

		[Token(Token = "0x17000412")]
		public bool OverrideColorByNormalPropertyName
		{
			[Token(Token = "0x60011CF")]
			[Address(RVA = "0x5E9364", Offset = "0x5E9364", VA = "0x5E9364")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x5E936C", Offset = "0x5E936C", VA = "0x5E936C")]
			set
			{
			}
		}

		[Token(Token = "0x17000413")]
		public string ColorByNormalPropertyName
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x5E9378", Offset = "0x5E9378", VA = "0x5E9378")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x5E9380", Offset = "0x5E9380", VA = "0x5E9380")]
			set
			{
			}
		}

		[Token(Token = "0x17000414")]
		public bool OverrideColorBlendPropertyName
		{
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x5E9388", Offset = "0x5E9388", VA = "0x5E9388")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011D4")]
			[Address(RVA = "0x5E9390", Offset = "0x5E9390", VA = "0x5E9390")]
			set
			{
			}
		}

		[Token(Token = "0x17000415")]
		public string ColorBlendPropertyName
		{
			[Token(Token = "0x60011D5")]
			[Address(RVA = "0x5E939C", Offset = "0x5E939C", VA = "0x5E939C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011D6")]
			[Address(RVA = "0x5E93A4", Offset = "0x5E93A4", VA = "0x5E93A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000416")]
		public bool OverrideDimensionPropertyName
		{
			[Token(Token = "0x60011D7")]
			[Address(RVA = "0x5E93AC", Offset = "0x5E93AC", VA = "0x5E93AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011D8")]
			[Address(RVA = "0x5E93B4", Offset = "0x5E93B4", VA = "0x5E93B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000417")]
		public string DimensionPropertyName
		{
			[Token(Token = "0x60011D9")]
			[Address(RVA = "0x5E93C0", Offset = "0x5E93C0", VA = "0x5E93C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011DA")]
			[Address(RVA = "0x5E93C8", Offset = "0x5E93C8", VA = "0x5E93C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000418")]
		public bool OverrideSplats
		{
			[Token(Token = "0x60011DB")]
			[Address(RVA = "0x5E93D0", Offset = "0x5E93D0", VA = "0x5E93D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011DC")]
			[Address(RVA = "0x5E93D8", Offset = "0x5E93D8", VA = "0x5E93D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000419")]
		public GSplatPrototypeGroup Splats
		{
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x5E93E4", Offset = "0x5E93E4", VA = "0x5E93E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0x5E93EC", Offset = "0x5E93EC", VA = "0x5E93EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700041A")]
		public bool OverrideSplatControlResolution
		{
			[Token(Token = "0x60011DF")]
			[Address(RVA = "0x5E93F4", Offset = "0x5E93F4", VA = "0x5E93F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0x5E93FC", Offset = "0x5E93FC", VA = "0x5E93FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700041B")]
		public int SplatControlResolution
		{
			[Token(Token = "0x60011E1")]
			[Address(RVA = "0x5E9408", Offset = "0x5E9408", VA = "0x5E9408")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011E2")]
			[Address(RVA = "0x5E9410", Offset = "0x5E9410", VA = "0x5E9410")]
			set
			{
			}
		}

		[Token(Token = "0x1700041C")]
		public bool OverrideSplatControlMapPropertyName
		{
			[Token(Token = "0x60011E3")]
			[Address(RVA = "0x5E9418", Offset = "0x5E9418", VA = "0x5E9418")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0x5E9420", Offset = "0x5E9420", VA = "0x5E9420")]
			set
			{
			}
		}

		[Token(Token = "0x1700041D")]
		public string SplatControlMapPropertyName
		{
			[Token(Token = "0x60011E5")]
			[Address(RVA = "0x5E942C", Offset = "0x5E942C", VA = "0x5E942C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0x5E9434", Offset = "0x5E9434", VA = "0x5E9434")]
			set
			{
			}
		}

		[Token(Token = "0x1700041E")]
		public bool OverrideSplatMapPropertyName
		{
			[Token(Token = "0x60011E7")]
			[Address(RVA = "0x5E943C", Offset = "0x5E943C", VA = "0x5E943C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E8")]
			[Address(RVA = "0x5E9444", Offset = "0x5E9444", VA = "0x5E9444")]
			set
			{
			}
		}

		[Token(Token = "0x1700041F")]
		public string SplatMapPropertyName
		{
			[Token(Token = "0x60011E9")]
			[Address(RVA = "0x5E9450", Offset = "0x5E9450", VA = "0x5E9450")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011EA")]
			[Address(RVA = "0x5E9458", Offset = "0x5E9458", VA = "0x5E9458")]
			set
			{
			}
		}

		[Token(Token = "0x17000420")]
		public bool OverrideSplatNormalPropertyName
		{
			[Token(Token = "0x60011EB")]
			[Address(RVA = "0x5E9460", Offset = "0x5E9460", VA = "0x5E9460")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011EC")]
			[Address(RVA = "0x5E9468", Offset = "0x5E9468", VA = "0x5E9468")]
			set
			{
			}
		}

		[Token(Token = "0x17000421")]
		public string SplatNormalPropertyName
		{
			[Token(Token = "0x60011ED")]
			[Address(RVA = "0x5E9474", Offset = "0x5E9474", VA = "0x5E9474")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011EE")]
			[Address(RVA = "0x5E947C", Offset = "0x5E947C", VA = "0x5E947C")]
			set
			{
			}
		}

		[Token(Token = "0x17000422")]
		public bool OverrideSplatMetallicPropertyName
		{
			[Token(Token = "0x60011EF")]
			[Address(RVA = "0x5E9484", Offset = "0x5E9484", VA = "0x5E9484")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x5E948C", Offset = "0x5E948C", VA = "0x5E948C")]
			set
			{
			}
		}

		[Token(Token = "0x17000423")]
		public string SplatMetallicPropertyName
		{
			[Token(Token = "0x60011F1")]
			[Address(RVA = "0x5E9498", Offset = "0x5E9498", VA = "0x5E9498")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x5E94A0", Offset = "0x5E94A0", VA = "0x5E94A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000424")]
		public bool OverrideSplatSmoothnessPropertyName
		{
			[Token(Token = "0x60011F3")]
			[Address(RVA = "0x5E94A8", Offset = "0x5E94A8", VA = "0x5E94A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011F4")]
			[Address(RVA = "0x5E94B0", Offset = "0x5E94B0", VA = "0x5E94B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000425")]
		public string SplatSmoothnessPropertyName
		{
			[Token(Token = "0x60011F5")]
			[Address(RVA = "0x5E94BC", Offset = "0x5E94BC", VA = "0x5E94BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0x5E94C4", Offset = "0x5E94C4", VA = "0x5E94C4")]
			set
			{
			}
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x5E94CC", Offset = "0x5E94CC", VA = "0x5E94CC")]
		public void Reset()
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x5E94D4", Offset = "0x5E94D4", VA = "0x5E94D4")]
		public void Override(GShading s)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000210")]
	[ExecuteInEditMode]
	public class GTerrainGroup : MonoBehaviour
	{
		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int groupId;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool deferredUpdate;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GGeometryOverride geometryOverride;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GShadingOverride shadingOverride;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private GRenderingOverride renderingOverride;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private GFoliageOverride foliageOverride;

		[Token(Token = "0x17000426")]
		public int GroupId
		{
			[Token(Token = "0x60011F9")]
			[Address(RVA = "0x894F1C", Offset = "0x894F1C", VA = "0x894F1C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011FA")]
			[Address(RVA = "0x894F24", Offset = "0x894F24", VA = "0x894F24")]
			set
			{
			}
		}

		[Token(Token = "0x17000427")]
		public bool DeferredUpdate
		{
			[Token(Token = "0x60011FB")]
			[Address(RVA = "0x894F2C", Offset = "0x894F2C", VA = "0x894F2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011FC")]
			[Address(RVA = "0x894F34", Offset = "0x894F34", VA = "0x894F34")]
			set
			{
			}
		}

		[Token(Token = "0x17000428")]
		public GGeometryOverride GeometryOverride
		{
			[Token(Token = "0x60011FD")]
			[Address(RVA = "0x894F40", Offset = "0x894F40", VA = "0x894F40")]
			get
			{
				return default(GGeometryOverride);
			}
			[Token(Token = "0x60011FE")]
			[Address(RVA = "0x894F50", Offset = "0x894F50", VA = "0x894F50")]
			set
			{
			}
		}

		[Token(Token = "0x17000429")]
		public GShadingOverride ShadingOverride
		{
			[Token(Token = "0x60011FF")]
			[Address(RVA = "0x894F6C", Offset = "0x894F6C", VA = "0x894F6C")]
			get
			{
				return default(GShadingOverride);
			}
			[Token(Token = "0x6001200")]
			[Address(RVA = "0x894F7C", Offset = "0x894F7C", VA = "0x894F7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700042A")]
		public GRenderingOverride RenderingOverride
		{
			[Token(Token = "0x6001201")]
			[Address(RVA = "0x894F98", Offset = "0x894F98", VA = "0x894F98")]
			get
			{
				return default(GRenderingOverride);
			}
			[Token(Token = "0x6001202")]
			[Address(RVA = "0x894FA4", Offset = "0x894FA4", VA = "0x894FA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700042B")]
		public GFoliageOverride FoliageOverride
		{
			[Token(Token = "0x6001203")]
			[Address(RVA = "0x894FB0", Offset = "0x894FB0", VA = "0x894FB0")]
			get
			{
				return default(GFoliageOverride);
			}
			[Token(Token = "0x6001204")]
			[Address(RVA = "0x894FC0", Offset = "0x894FC0", VA = "0x894FC0")]
			set
			{
			}
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x894FDC", Offset = "0x894FDC", VA = "0x894FDC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x895014", Offset = "0x895014", VA = "0x895014")]
		public void ResetGeometry()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x89501C", Offset = "0x89501C", VA = "0x89501C")]
		public void ResetShading()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x895024", Offset = "0x895024", VA = "0x895024")]
		public void ResetRendering()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x89502C", Offset = "0x89502C", VA = "0x89502C")]
		public void ResetFoliage()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x895034", Offset = "0x895034", VA = "0x895034")]
		public void OverrideGeometry()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x895480", Offset = "0x895480", VA = "0x895480")]
		public void OverrideShading()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x895808", Offset = "0x895808", VA = "0x895808")]
		public void OverrideRendering()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x895B80", Offset = "0x895B80", VA = "0x895B80")]
		public void OverrideFoliage()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x895F08", Offset = "0x895F08", VA = "0x895F08")]
		public void ReArrange()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x8968DC", Offset = "0x8968DC", VA = "0x8968DC")]
		public GTerrainGroup()
		{
		}
	}
}
namespace Pinwheel.Griffin.DataTool
{
	[Token(Token = "0x2000211")]
	public enum GBitDepth
	{
		[Token(Token = "0x40010E3")]
		Bit8,
		[Token(Token = "0x40010E4")]
		Bit16
	}
	[Token(Token = "0x2000212")]
	public class GRawExporter
	{
		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5750F4", Offset = "0x5750F4")]
		private GTerrainData <SrcData>k__BackingField;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575104", Offset = "0x575104")]
		private GBitDepth <BitDepth>k__BackingField;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575114", Offset = "0x575114")]
		private string <DataDirectory>k__BackingField;

		[Token(Token = "0x1700042C")]
		public GTerrainData SrcData
		{
			[Token(Token = "0x6001210")]
			[Address(RVA = "0x85DE00", Offset = "0x85DE00", VA = "0x85DE00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CADC", Offset = "0x57CADC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001211")]
			[Address(RVA = "0x85DE08", Offset = "0x85DE08", VA = "0x85DE08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CAEC", Offset = "0x57CAEC")]
			set
			{
			}
		}

		[Token(Token = "0x1700042D")]
		public GBitDepth BitDepth
		{
			[Token(Token = "0x6001212")]
			[Address(RVA = "0x85DE10", Offset = "0x85DE10", VA = "0x85DE10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CAFC", Offset = "0x57CAFC")]
			get
			{
				return default(GBitDepth);
			}
			[Token(Token = "0x6001213")]
			[Address(RVA = "0x85DE18", Offset = "0x85DE18", VA = "0x85DE18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CB0C", Offset = "0x57CB0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700042E")]
		public string DataDirectory
		{
			[Token(Token = "0x6001214")]
			[Address(RVA = "0x85DE20", Offset = "0x85DE20", VA = "0x85DE20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CB1C", Offset = "0x57CB1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001215")]
			[Address(RVA = "0x85DE28", Offset = "0x85DE28", VA = "0x85DE28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CB2C", Offset = "0x57CB2C")]
			set
			{
			}
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x85DE30", Offset = "0x85DE30", VA = "0x85DE30")]
		public void Export()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x85DF34", Offset = "0x85DF34", VA = "0x85DF34")]
		private void DoExportRaw8()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x85E258", Offset = "0x85E258", VA = "0x85E258")]
		private void DoExportRaw16()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x85E650", Offset = "0x85E650", VA = "0x85E650")]
		public GRawExporter()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class GRawImporter
	{
		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575124", Offset = "0x575124")]
		private GStylizedTerrain <Terrain>k__BackingField;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575134", Offset = "0x575134")]
		private GTerrainData <DesData>k__BackingField;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575144", Offset = "0x575144")]
		private GBitDepth <BitDepth>k__BackingField;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575154", Offset = "0x575154")]
		private bool <UseRawResolution>k__BackingField;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575164", Offset = "0x575164")]
		private string <FilePath>k__BackingField;

		[Token(Token = "0x1700042F")]
		public GStylizedTerrain Terrain
		{
			[Token(Token = "0x600121A")]
			[Address(RVA = "0x85E658", Offset = "0x85E658", VA = "0x85E658")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CB3C", Offset = "0x57CB3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600121B")]
			[Address(RVA = "0x85E660", Offset = "0x85E660", VA = "0x85E660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CB4C", Offset = "0x57CB4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000430")]
		public GTerrainData DesData
		{
			[Token(Token = "0x600121C")]
			[Address(RVA = "0x85E668", Offset = "0x85E668", VA = "0x85E668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CB5C", Offset = "0x57CB5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600121D")]
			[Address(RVA = "0x85E670", Offset = "0x85E670", VA = "0x85E670")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CB6C", Offset = "0x57CB6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000431")]
		public GBitDepth BitDepth
		{
			[Token(Token = "0x600121E")]
			[Address(RVA = "0x85E678", Offset = "0x85E678", VA = "0x85E678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CB7C", Offset = "0x57CB7C")]
			get
			{
				return default(GBitDepth);
			}
			[Token(Token = "0x600121F")]
			[Address(RVA = "0x85E680", Offset = "0x85E680", VA = "0x85E680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CB8C", Offset = "0x57CB8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000432")]
		public bool UseRawResolution
		{
			[Token(Token = "0x6001220")]
			[Address(RVA = "0x85E688", Offset = "0x85E688", VA = "0x85E688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CB9C", Offset = "0x57CB9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001221")]
			[Address(RVA = "0x85E690", Offset = "0x85E690", VA = "0x85E690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CBAC", Offset = "0x57CBAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000433")]
		public string FilePath
		{
			[Token(Token = "0x6001222")]
			[Address(RVA = "0x85E69C", Offset = "0x85E69C", VA = "0x85E69C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CBBC", Offset = "0x57CBBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001223")]
			[Address(RVA = "0x85E6A4", Offset = "0x85E6A4", VA = "0x85E6A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CBCC", Offset = "0x57CBCC")]
			set
			{
			}
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x85E6AC", Offset = "0x85E6AC", VA = "0x85E6AC")]
		public void Import()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x85E90C", Offset = "0x85E90C", VA = "0x85E90C")]
		private void ImportRaw8()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x85EDC0", Offset = "0x85EDC0", VA = "0x85EDC0")]
		private void ImportRaw16()
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x85FAE0", Offset = "0x85FAE0", VA = "0x85FAE0")]
		public GRawImporter()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class GTextureExporter
	{
		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575174", Offset = "0x575174")]
		private GTerrainData <SrcData>k__BackingField;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575184", Offset = "0x575184")]
		private bool <ExportHeightMap>k__BackingField;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575194", Offset = "0x575194")]
		private bool <ExportVisibilityMap>k__BackingField;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5751A4", Offset = "0x5751A4")]
		private bool <ExportAlbedoMap>k__BackingField;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5751B4", Offset = "0x5751B4")]
		private bool <ExportMetallicMap>k__BackingField;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5751C4", Offset = "0x5751C4")]
		private bool <ExportGradientLookupMaps>k__BackingField;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5751D4", Offset = "0x5751D4")]
		private bool <ExportSplatControlMaps>k__BackingField;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5751E4", Offset = "0x5751E4")]
		private string <DataDirectory>k__BackingField;

		[Token(Token = "0x17000434")]
		public GTerrainData SrcData
		{
			[Token(Token = "0x6001228")]
			[Address(RVA = "0x85FAE8", Offset = "0x85FAE8", VA = "0x85FAE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CBDC", Offset = "0x57CBDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001229")]
			[Address(RVA = "0x85FAF0", Offset = "0x85FAF0", VA = "0x85FAF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CBEC", Offset = "0x57CBEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000435")]
		public bool ExportHeightMap
		{
			[Token(Token = "0x600122A")]
			[Address(RVA = "0x85FAF8", Offset = "0x85FAF8", VA = "0x85FAF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CBFC", Offset = "0x57CBFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600122B")]
			[Address(RVA = "0x85FB00", Offset = "0x85FB00", VA = "0x85FB00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CC0C", Offset = "0x57CC0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000436")]
		public bool ExportVisibilityMap
		{
			[Token(Token = "0x600122C")]
			[Address(RVA = "0x85FB0C", Offset = "0x85FB0C", VA = "0x85FB0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CC1C", Offset = "0x57CC1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600122D")]
			[Address(RVA = "0x85FB14", Offset = "0x85FB14", VA = "0x85FB14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CC2C", Offset = "0x57CC2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000437")]
		public bool ExportAlbedoMap
		{
			[Token(Token = "0x600122E")]
			[Address(RVA = "0x85FB20", Offset = "0x85FB20", VA = "0x85FB20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CC3C", Offset = "0x57CC3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600122F")]
			[Address(RVA = "0x85FB28", Offset = "0x85FB28", VA = "0x85FB28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CC4C", Offset = "0x57CC4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000438")]
		public bool ExportMetallicMap
		{
			[Token(Token = "0x6001230")]
			[Address(RVA = "0x85FB34", Offset = "0x85FB34", VA = "0x85FB34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CC5C", Offset = "0x57CC5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001231")]
			[Address(RVA = "0x85FB3C", Offset = "0x85FB3C", VA = "0x85FB3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CC6C", Offset = "0x57CC6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000439")]
		public bool ExportGradientLookupMaps
		{
			[Token(Token = "0x6001232")]
			[Address(RVA = "0x85FB48", Offset = "0x85FB48", VA = "0x85FB48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CC7C", Offset = "0x57CC7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001233")]
			[Address(RVA = "0x85FB50", Offset = "0x85FB50", VA = "0x85FB50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CC8C", Offset = "0x57CC8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700043A")]
		public bool ExportSplatControlMaps
		{
			[Token(Token = "0x6001234")]
			[Address(RVA = "0x85FB5C", Offset = "0x85FB5C", VA = "0x85FB5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CC9C", Offset = "0x57CC9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001235")]
			[Address(RVA = "0x85FB64", Offset = "0x85FB64", VA = "0x85FB64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CCAC", Offset = "0x57CCAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700043B")]
		public string DataDirectory
		{
			[Token(Token = "0x6001236")]
			[Address(RVA = "0x85FB70", Offset = "0x85FB70", VA = "0x85FB70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CCBC", Offset = "0x57CCBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001237")]
			[Address(RVA = "0x85FB78", Offset = "0x85FB78", VA = "0x85FB78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CCCC", Offset = "0x57CCCC")]
			set
			{
			}
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x85FB80", Offset = "0x85FB80", VA = "0x85FB80")]
		public void Export()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x85FCC0", Offset = "0x85FCC0", VA = "0x85FCC0")]
		private void DoExportHeightMap()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x85FFB4", Offset = "0x85FFB4", VA = "0x85FFB4")]
		private void DoExportVisibilityMap()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x86023C", Offset = "0x86023C", VA = "0x86023C")]
		private void DoExportAlbedoMap()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x860380", Offset = "0x860380", VA = "0x860380")]
		private void DoExportMetallicMap()
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x8604C4", Offset = "0x8604C4", VA = "0x8604C4")]
		private void DoExportGradientLookupMaps()
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x860898", Offset = "0x860898", VA = "0x860898")]
		private void DoExportSplatControlMaps()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x860B6C", Offset = "0x860B6C", VA = "0x860B6C")]
		public GTextureExporter()
		{
		}
	}
	[Token(Token = "0x2000215")]
	public class GTextureImporter
	{
		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5751F4", Offset = "0x5751F4")]
		private GStylizedTerrain <Terrain>k__BackingField;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575204", Offset = "0x575204")]
		private GTerrainData <DesData>k__BackingField;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575214", Offset = "0x575214")]
		private Texture2D <HeightMap>k__BackingField;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575224", Offset = "0x575224")]
		private Texture2D <VisibilityMap>k__BackingField;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575234", Offset = "0x575234")]
		private Texture2D <AlbedoMap>k__BackingField;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575244", Offset = "0x575244")]
		private Texture2D <MetallicMap>k__BackingField;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575254", Offset = "0x575254")]
		private Texture2D[] <SplatControlMaps>k__BackingField;

		[Token(Token = "0x1700043C")]
		public GStylizedTerrain Terrain
		{
			[Token(Token = "0x6001240")]
			[Address(RVA = "0x860B74", Offset = "0x860B74", VA = "0x860B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CCDC", Offset = "0x57CCDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001241")]
			[Address(RVA = "0x860B7C", Offset = "0x860B7C", VA = "0x860B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CCEC", Offset = "0x57CCEC")]
			set
			{
			}
		}

		[Token(Token = "0x1700043D")]
		public GTerrainData DesData
		{
			[Token(Token = "0x6001242")]
			[Address(RVA = "0x860B84", Offset = "0x860B84", VA = "0x860B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CCFC", Offset = "0x57CCFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001243")]
			[Address(RVA = "0x860B8C", Offset = "0x860B8C", VA = "0x860B8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CD0C", Offset = "0x57CD0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700043E")]
		public Texture2D HeightMap
		{
			[Token(Token = "0x6001244")]
			[Address(RVA = "0x860B94", Offset = "0x860B94", VA = "0x860B94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CD1C", Offset = "0x57CD1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001245")]
			[Address(RVA = "0x860B9C", Offset = "0x860B9C", VA = "0x860B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CD2C", Offset = "0x57CD2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700043F")]
		public Texture2D VisibilityMap
		{
			[Token(Token = "0x6001246")]
			[Address(RVA = "0x860BA4", Offset = "0x860BA4", VA = "0x860BA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CD3C", Offset = "0x57CD3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001247")]
			[Address(RVA = "0x860BAC", Offset = "0x860BAC", VA = "0x860BAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CD4C", Offset = "0x57CD4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000440")]
		public Texture2D AlbedoMap
		{
			[Token(Token = "0x6001248")]
			[Address(RVA = "0x860BB4", Offset = "0x860BB4", VA = "0x860BB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CD5C", Offset = "0x57CD5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001249")]
			[Address(RVA = "0x860BBC", Offset = "0x860BBC", VA = "0x860BBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CD6C", Offset = "0x57CD6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000441")]
		public Texture2D MetallicMap
		{
			[Token(Token = "0x600124A")]
			[Address(RVA = "0x860BC4", Offset = "0x860BC4", VA = "0x860BC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CD7C", Offset = "0x57CD7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600124B")]
			[Address(RVA = "0x860BCC", Offset = "0x860BCC", VA = "0x860BCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CD8C", Offset = "0x57CD8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000442")]
		public Texture2D[] SplatControlMaps
		{
			[Token(Token = "0x600124C")]
			[Address(RVA = "0x860BD4", Offset = "0x860BD4", VA = "0x860BD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CD9C", Offset = "0x57CD9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600124D")]
			[Address(RVA = "0x860BDC", Offset = "0x860BDC", VA = "0x860BDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CDAC", Offset = "0x57CDAC")]
			set
			{
			}
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x860BE4", Offset = "0x860BE4", VA = "0x860BE4")]
		public void Import()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x861BF8", Offset = "0x861BF8", VA = "0x861BF8")]
		public GTextureImporter()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class GUnityTerrainDataExporter
	{
		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575264", Offset = "0x575264")]
		private GTerrainData <SrcData>k__BackingField;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575274", Offset = "0x575274")]
		private TerrainData <DesData>k__BackingField;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575284", Offset = "0x575284")]
		private bool <CreateNewAsset>k__BackingField;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575294", Offset = "0x575294")]
		private bool <ExportGeometry>k__BackingField;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5752A4", Offset = "0x5752A4")]
		private bool <ExportTerrainSize>k__BackingField;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5752B4", Offset = "0x5752B4")]
		private bool <ExportSplats>k__BackingField;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5752C4", Offset = "0x5752C4")]
		private bool <OverwriteSplatLayers>k__BackingField;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5752D4", Offset = "0x5752D4")]
		private bool <ExportTrees>k__BackingField;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5752E4", Offset = "0x5752E4")]
		private bool <ExportGrasses>k__BackingField;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5752F4", Offset = "0x5752F4")]
		private string <DataDirectory>k__BackingField;

		[Token(Token = "0x17000443")]
		public GTerrainData SrcData
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0x861C00", Offset = "0x861C00", VA = "0x861C00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CDBC", Offset = "0x57CDBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001251")]
			[Address(RVA = "0x861C08", Offset = "0x861C08", VA = "0x861C08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CDCC", Offset = "0x57CDCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000444")]
		public TerrainData DesData
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0x861C10", Offset = "0x861C10", VA = "0x861C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CDDC", Offset = "0x57CDDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001253")]
			[Address(RVA = "0x861C18", Offset = "0x861C18", VA = "0x861C18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CDEC", Offset = "0x57CDEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000445")]
		public bool CreateNewAsset
		{
			[Token(Token = "0x6001254")]
			[Address(RVA = "0x861C20", Offset = "0x861C20", VA = "0x861C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CDFC", Offset = "0x57CDFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001255")]
			[Address(RVA = "0x861C28", Offset = "0x861C28", VA = "0x861C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CE0C", Offset = "0x57CE0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000446")]
		public bool ExportGeometry
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0x861C34", Offset = "0x861C34", VA = "0x861C34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CE1C", Offset = "0x57CE1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001257")]
			[Address(RVA = "0x861C3C", Offset = "0x861C3C", VA = "0x861C3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CE2C", Offset = "0x57CE2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000447")]
		public bool ExportTerrainSize
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0x861C48", Offset = "0x861C48", VA = "0x861C48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CE3C", Offset = "0x57CE3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001259")]
			[Address(RVA = "0x861C50", Offset = "0x861C50", VA = "0x861C50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CE4C", Offset = "0x57CE4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000448")]
		public bool ExportSplats
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0x861C5C", Offset = "0x861C5C", VA = "0x861C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CE5C", Offset = "0x57CE5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600125B")]
			[Address(RVA = "0x861C64", Offset = "0x861C64", VA = "0x861C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CE6C", Offset = "0x57CE6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000449")]
		public bool OverwriteSplatLayers
		{
			[Token(Token = "0x600125C")]
			[Address(RVA = "0x861C70", Offset = "0x861C70", VA = "0x861C70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CE7C", Offset = "0x57CE7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600125D")]
			[Address(RVA = "0x861C78", Offset = "0x861C78", VA = "0x861C78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CE8C", Offset = "0x57CE8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700044A")]
		public bool ExportTrees
		{
			[Token(Token = "0x600125E")]
			[Address(RVA = "0x861C84", Offset = "0x861C84", VA = "0x861C84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CE9C", Offset = "0x57CE9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600125F")]
			[Address(RVA = "0x861C8C", Offset = "0x861C8C", VA = "0x861C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CEAC", Offset = "0x57CEAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700044B")]
		public bool ExportGrasses
		{
			[Token(Token = "0x6001260")]
			[Address(RVA = "0x861C98", Offset = "0x861C98", VA = "0x861C98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CEBC", Offset = "0x57CEBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001261")]
			[Address(RVA = "0x861CA0", Offset = "0x861CA0", VA = "0x861CA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CECC", Offset = "0x57CECC")]
			set
			{
			}
		}

		[Token(Token = "0x1700044C")]
		public string DataDirectory
		{
			[Token(Token = "0x6001262")]
			[Address(RVA = "0x861CAC", Offset = "0x861CAC", VA = "0x861CAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CEDC", Offset = "0x57CEDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001263")]
			[Address(RVA = "0x861CB4", Offset = "0x861CB4", VA = "0x861CB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CEEC", Offset = "0x57CEEC")]
			set
			{
			}
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x861CBC", Offset = "0x861CBC", VA = "0x861CBC")]
		public void Export()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x862CA4", Offset = "0x862CA4", VA = "0x862CA4")]
		private void SaveAssets()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x861E04", Offset = "0x861E04", VA = "0x861E04")]
		private void InitializeAssets()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x8620FC", Offset = "0x8620FC", VA = "0x8620FC")]
		private void DoExportGeometry()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x862440", Offset = "0x862440", VA = "0x862440")]
		private void DoExportSplats()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x862570", Offset = "0x862570", VA = "0x862570")]
		private void DoExportTrees()
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x862888", Offset = "0x862888", VA = "0x862888")]
		private void DoExportGrasses()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x862E10", Offset = "0x862E10", VA = "0x862E10")]
		public GUnityTerrainDataExporter()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class GUnityTerrainDataImporter
	{
		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575304", Offset = "0x575304")]
		private Terrain <SrcTerrain>k__BackingField;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575314", Offset = "0x575314")]
		private TerrainData <SrcData>k__BackingField;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575324", Offset = "0x575324")]
		private GTerrainData <DesData>k__BackingField;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575334", Offset = "0x575334")]
		private GStylizedTerrain <DesTerrain>k__BackingField;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575344", Offset = "0x575344")]
		private bool <ImportGeometry>k__BackingField;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575354", Offset = "0x575354")]
		private bool <UseUnityTerrainSize>k__BackingField;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575364", Offset = "0x575364")]
		private bool <ImportSplats>k__BackingField;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575374", Offset = "0x575374")]
		private bool <ImportSplatsAsAlbedo>k__BackingField;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575384", Offset = "0x575384")]
		private bool <CreateNewSplatPrototypesGroup>k__BackingField;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575394", Offset = "0x575394")]
		private bool <ImportTrees>k__BackingField;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5753A4", Offset = "0x5753A4")]
		private bool <CreateNewTreePrototypesGroup>k__BackingField;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5753B4", Offset = "0x5753B4")]
		private bool <ImportGrasses>k__BackingField;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5753C4", Offset = "0x5753C4")]
		private bool <CreateNewGrassPrototypesGroup>k__BackingField;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5753D4", Offset = "0x5753D4")]
		private float <GrassDensity>k__BackingField;

		[Token(Token = "0x1700044D")]
		public Terrain SrcTerrain
		{
			[Token(Token = "0x600126C")]
			[Address(RVA = "0x862E18", Offset = "0x862E18", VA = "0x862E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CEFC", Offset = "0x57CEFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600126D")]
			[Address(RVA = "0x862E20", Offset = "0x862E20", VA = "0x862E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CF0C", Offset = "0x57CF0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700044E")]
		public TerrainData SrcData
		{
			[Token(Token = "0x600126E")]
			[Address(RVA = "0x862E28", Offset = "0x862E28", VA = "0x862E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CF1C", Offset = "0x57CF1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600126F")]
			[Address(RVA = "0x862E30", Offset = "0x862E30", VA = "0x862E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CF2C", Offset = "0x57CF2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700044F")]
		public GTerrainData DesData
		{
			[Token(Token = "0x6001270")]
			[Address(RVA = "0x862E38", Offset = "0x862E38", VA = "0x862E38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CF3C", Offset = "0x57CF3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001271")]
			[Address(RVA = "0x862E40", Offset = "0x862E40", VA = "0x862E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CF4C", Offset = "0x57CF4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000450")]
		public GStylizedTerrain DesTerrain
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0x862E48", Offset = "0x862E48", VA = "0x862E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CF5C", Offset = "0x57CF5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001273")]
			[Address(RVA = "0x862E50", Offset = "0x862E50", VA = "0x862E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CF6C", Offset = "0x57CF6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000451")]
		public bool ImportGeometry
		{
			[Token(Token = "0x6001274")]
			[Address(RVA = "0x862E58", Offset = "0x862E58", VA = "0x862E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CF7C", Offset = "0x57CF7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001275")]
			[Address(RVA = "0x862E60", Offset = "0x862E60", VA = "0x862E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CF8C", Offset = "0x57CF8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000452")]
		public bool UseUnityTerrainSize
		{
			[Token(Token = "0x6001276")]
			[Address(RVA = "0x862E6C", Offset = "0x862E6C", VA = "0x862E6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CF9C", Offset = "0x57CF9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001277")]
			[Address(RVA = "0x862E74", Offset = "0x862E74", VA = "0x862E74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CFAC", Offset = "0x57CFAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000453")]
		public bool ImportSplats
		{
			[Token(Token = "0x6001278")]
			[Address(RVA = "0x862E80", Offset = "0x862E80", VA = "0x862E80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CFBC", Offset = "0x57CFBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001279")]
			[Address(RVA = "0x862E88", Offset = "0x862E88", VA = "0x862E88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CFCC", Offset = "0x57CFCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000454")]
		public bool ImportSplatsAsAlbedo
		{
			[Token(Token = "0x600127A")]
			[Address(RVA = "0x862E94", Offset = "0x862E94", VA = "0x862E94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CFDC", Offset = "0x57CFDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600127B")]
			[Address(RVA = "0x862E9C", Offset = "0x862E9C", VA = "0x862E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CFEC", Offset = "0x57CFEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000455")]
		public bool CreateNewSplatPrototypesGroup
		{
			[Token(Token = "0x600127C")]
			[Address(RVA = "0x862EA8", Offset = "0x862EA8", VA = "0x862EA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CFFC", Offset = "0x57CFFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600127D")]
			[Address(RVA = "0x862EB0", Offset = "0x862EB0", VA = "0x862EB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D00C", Offset = "0x57D00C")]
			set
			{
			}
		}

		[Token(Token = "0x17000456")]
		public bool ImportTrees
		{
			[Token(Token = "0x600127E")]
			[Address(RVA = "0x862EBC", Offset = "0x862EBC", VA = "0x862EBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D01C", Offset = "0x57D01C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600127F")]
			[Address(RVA = "0x862EC4", Offset = "0x862EC4", VA = "0x862EC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D02C", Offset = "0x57D02C")]
			set
			{
			}
		}

		[Token(Token = "0x17000457")]
		public bool CreateNewTreePrototypesGroup
		{
			[Token(Token = "0x6001280")]
			[Address(RVA = "0x862ED0", Offset = "0x862ED0", VA = "0x862ED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D03C", Offset = "0x57D03C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001281")]
			[Address(RVA = "0x862ED8", Offset = "0x862ED8", VA = "0x862ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D04C", Offset = "0x57D04C")]
			set
			{
			}
		}

		[Token(Token = "0x17000458")]
		public bool ImportGrasses
		{
			[Token(Token = "0x6001282")]
			[Address(RVA = "0x862EE4", Offset = "0x862EE4", VA = "0x862EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D05C", Offset = "0x57D05C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001283")]
			[Address(RVA = "0x862EEC", Offset = "0x862EEC", VA = "0x862EEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D06C", Offset = "0x57D06C")]
			set
			{
			}
		}

		[Token(Token = "0x17000459")]
		public bool CreateNewGrassPrototypesGroup
		{
			[Token(Token = "0x6001284")]
			[Address(RVA = "0x862EF8", Offset = "0x862EF8", VA = "0x862EF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D07C", Offset = "0x57D07C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001285")]
			[Address(RVA = "0x862F00", Offset = "0x862F00", VA = "0x862F00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D08C", Offset = "0x57D08C")]
			set
			{
			}
		}

		[Token(Token = "0x1700045A")]
		public float GrassDensity
		{
			[Token(Token = "0x6001286")]
			[Address(RVA = "0x862F0C", Offset = "0x862F0C", VA = "0x862F0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D09C", Offset = "0x57D09C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001287")]
			[Address(RVA = "0x862F14", Offset = "0x862F14", VA = "0x862F14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D0AC", Offset = "0x57D0AC")]
			set
			{
			}
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x862F1C", Offset = "0x862F1C", VA = "0x862F1C")]
		public void Import()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x8630B8", Offset = "0x8630B8", VA = "0x8630B8")]
		private void DoImportGeometry()
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x8635C8", Offset = "0x8635C8", VA = "0x8635C8")]
		private void DoImportSplats()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x863B18", Offset = "0x863B18", VA = "0x863B18")]
		private void DoImportTrees()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x863EF0", Offset = "0x863EF0", VA = "0x863EF0")]
		private void DoImportGrasses()
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x8642FC", Offset = "0x8642FC", VA = "0x8642FC")]
		private void DoImportDetailLayer(int layerIndex, int[,] density, List<GGrassInstance> grasses)
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x864C30", Offset = "0x864C30", VA = "0x864C30")]
		public static int CalculateEstimatedGrassStorage(TerrainData srcData, float grassDensity)
		{
			return default(int);
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x864DC0", Offset = "0x864DC0", VA = "0x864DC0")]
		public static float GetAdjustedGrassDensity(TerrainData srcData, float grassDensity = 1f, int desiredStorageBytes = 50000000)
		{
			return default(float);
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x864E10", Offset = "0x864E10", VA = "0x864E10")]
		public GUnityTerrainDataImporter()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class GUnityTerrainGroupConverter
	{
		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5753E4", Offset = "0x5753E4")]
		private GameObject <Root>k__BackingField;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5753F4", Offset = "0x5753F4")]
		private bool <ImportGeometry>k__BackingField;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575404", Offset = "0x575404")]
		private bool <ImportSplats>k__BackingField;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575414", Offset = "0x575414")]
		private bool <ImportSplatsAsAlbedo>k__BackingField;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575424", Offset = "0x575424")]
		private bool <ImportTrees>k__BackingField;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575434", Offset = "0x575434")]
		private bool <ImportGrasses>k__BackingField;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575444", Offset = "0x575444")]
		private string <DataDirectory>k__BackingField;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string conversionName;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Terrain> terrains;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<GSplatPrototypeGroup> splatGroups;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<int> splatGroupIndices;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GTreePrototypeGroup> treeGroups;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<int> treeGroupIndices;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<GGrassPrototypeGroup> grassGroups;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<int> grassGroupIndices;

		[Token(Token = "0x1700045B")]
		public GameObject Root
		{
			[Token(Token = "0x6001291")]
			[Address(RVA = "0x864E18", Offset = "0x864E18", VA = "0x864E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D0BC", Offset = "0x57D0BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001292")]
			[Address(RVA = "0x864E20", Offset = "0x864E20", VA = "0x864E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D0CC", Offset = "0x57D0CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700045C")]
		public bool ImportGeometry
		{
			[Token(Token = "0x6001293")]
			[Address(RVA = "0x864E28", Offset = "0x864E28", VA = "0x864E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D0DC", Offset = "0x57D0DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001294")]
			[Address(RVA = "0x864E30", Offset = "0x864E30", VA = "0x864E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D0EC", Offset = "0x57D0EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700045D")]
		public bool ImportSplats
		{
			[Token(Token = "0x6001295")]
			[Address(RVA = "0x864E3C", Offset = "0x864E3C", VA = "0x864E3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D0FC", Offset = "0x57D0FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001296")]
			[Address(RVA = "0x864E44", Offset = "0x864E44", VA = "0x864E44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D10C", Offset = "0x57D10C")]
			set
			{
			}
		}

		[Token(Token = "0x1700045E")]
		public bool ImportSplatsAsAlbedo
		{
			[Token(Token = "0x6001297")]
			[Address(RVA = "0x864E50", Offset = "0x864E50", VA = "0x864E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D11C", Offset = "0x57D11C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001298")]
			[Address(RVA = "0x864E58", Offset = "0x864E58", VA = "0x864E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D12C", Offset = "0x57D12C")]
			set
			{
			}
		}

		[Token(Token = "0x1700045F")]
		public bool ImportTrees
		{
			[Token(Token = "0x6001299")]
			[Address(RVA = "0x864E64", Offset = "0x864E64", VA = "0x864E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D13C", Offset = "0x57D13C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600129A")]
			[Address(RVA = "0x864E6C", Offset = "0x864E6C", VA = "0x864E6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D14C", Offset = "0x57D14C")]
			set
			{
			}
		}

		[Token(Token = "0x17000460")]
		public bool ImportGrasses
		{
			[Token(Token = "0x600129B")]
			[Address(RVA = "0x864E78", Offset = "0x864E78", VA = "0x864E78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D15C", Offset = "0x57D15C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600129C")]
			[Address(RVA = "0x864E80", Offset = "0x864E80", VA = "0x864E80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D16C", Offset = "0x57D16C")]
			set
			{
			}
		}

		[Token(Token = "0x17000461")]
		public string DataDirectory
		{
			[Token(Token = "0x600129D")]
			[Address(RVA = "0x864E8C", Offset = "0x864E8C", VA = "0x864E8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D17C", Offset = "0x57D17C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600129E")]
			[Address(RVA = "0x864E94", Offset = "0x864E94", VA = "0x864E94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D18C", Offset = "0x57D18C")]
			set
			{
			}
		}

		[Token(Token = "0x17000462")]
		private string ConversionName
		{
			[Token(Token = "0x600129F")]
			[Address(RVA = "0x864E9C", Offset = "0x864E9C", VA = "0x864E9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012A0")]
			[Address(RVA = "0x864F4C", Offset = "0x864F4C", VA = "0x864F4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000463")]
		private List<Terrain> Terrains
		{
			[Token(Token = "0x60012A1")]
			[Address(RVA = "0x864F54", Offset = "0x864F54", VA = "0x864F54")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012A2")]
			[Address(RVA = "0x864FC8", Offset = "0x864FC8", VA = "0x864FC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000464")]
		private List<GSplatPrototypeGroup> SplatGroups
		{
			[Token(Token = "0x60012A3")]
			[Address(RVA = "0x864FD0", Offset = "0x864FD0", VA = "0x864FD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0x865044", Offset = "0x865044", VA = "0x865044")]
			set
			{
			}
		}

		[Token(Token = "0x17000465")]
		private List<int> SplatGroupIndices
		{
			[Token(Token = "0x60012A5")]
			[Address(RVA = "0x86504C", Offset = "0x86504C", VA = "0x86504C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012A6")]
			[Address(RVA = "0x8650C0", Offset = "0x8650C0", VA = "0x8650C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000466")]
		private List<GTreePrototypeGroup> TreeGroups
		{
			[Token(Token = "0x60012A7")]
			[Address(RVA = "0x8650C8", Offset = "0x8650C8", VA = "0x8650C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012A8")]
			[Address(RVA = "0x86513C", Offset = "0x86513C", VA = "0x86513C")]
			set
			{
			}
		}

		[Token(Token = "0x17000467")]
		private List<int> TreeGroupIndices
		{
			[Token(Token = "0x60012A9")]
			[Address(RVA = "0x865144", Offset = "0x865144", VA = "0x865144")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012AA")]
			[Address(RVA = "0x8651B8", Offset = "0x8651B8", VA = "0x8651B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000468")]
		private List<GGrassPrototypeGroup> GrassGroups
		{
			[Token(Token = "0x60012AB")]
			[Address(RVA = "0x8651C0", Offset = "0x8651C0", VA = "0x8651C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012AC")]
			[Address(RVA = "0x865234", Offset = "0x865234", VA = "0x865234")]
			set
			{
			}
		}

		[Token(Token = "0x17000469")]
		private List<int> GrassGroupIndices
		{
			[Token(Token = "0x60012AD")]
			[Address(RVA = "0x86523C", Offset = "0x86523C", VA = "0x86523C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012AE")]
			[Address(RVA = "0x8652B0", Offset = "0x8652B0", VA = "0x8652B0")]
			set
			{
			}
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x8652B8", Offset = "0x8652B8", VA = "0x8652B8")]
		public void Convert()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x86543C", Offset = "0x86543C", VA = "0x86543C")]
		private void Validate()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x8655F4", Offset = "0x8655F4", VA = "0x8655F4")]
		private void SaveAssets()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x8655F8", Offset = "0x8655F8", VA = "0x8655F8")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x865778", Offset = "0x865778", VA = "0x865778")]
		private void CreateSharedData()
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x865E90", Offset = "0x865E90", VA = "0x865E90")]
		private void CreateSharedSplats()
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x866094", Offset = "0x866094", VA = "0x866094")]
		private void CreateSharedTrees()
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x866298", Offset = "0x866298", VA = "0x866298")]
		private void CreateSharedGrasses()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x8657CC", Offset = "0x8657CC", VA = "0x8657CC")]
		private void CreateTerrainAndImportData()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x86649C", Offset = "0x86649C", VA = "0x86649C")]
		private GStylizedTerrain CreateTerrain()
		{
			return null;
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x865E40", Offset = "0x865E40", VA = "0x865E40")]
		private void FinishingUp()
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x866A68", Offset = "0x866A68", VA = "0x866A68")]
		public GUnityTerrainGroupConverter()
		{
		}
	}
}
namespace Pinwheel.Griffin.BillboardTool
{
	[Token(Token = "0x2000219")]
	public static class GBillboardCreator
	{
		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MaterialPropertyBlock materialProperties;

		[Token(Token = "0x1700046A")]
		private static MaterialPropertyBlock MaterialProperties
		{
			[Token(Token = "0x60012BB")]
			[Address(RVA = "0x85B2E8", Offset = "0x85B2E8", VA = "0x85B2E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x85B370", Offset = "0x85B370", VA = "0x85B370")]
		public static void PrepareRenderTexture(ref RenderTexture rt, GBillboardCreatorArgs args)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x85B510", Offset = "0x85B510", VA = "0x85B510")]
		public static void RenderPreview(RenderTexture rt, GBillboardCreatorArgs args)
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x85B59C", Offset = "0x85B59C", VA = "0x85B59C")]
		private static void RenderPreviewAtlas(RenderTexture rt, GBillboardCreatorArgs args)
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x85B9B4", Offset = "0x85B9B4", VA = "0x85B9B4")]
		private static void RenderPreviewNormal(RenderTexture rt, GBillboardCreatorArgs args)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x85BE20", Offset = "0x85BE20", VA = "0x85BE20")]
		private static void RenderPreviewFlipbook(RenderTexture rt, GBillboardCreatorArgs args)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x85C0A8", Offset = "0x85C0A8", VA = "0x85C0A8")]
		private static Camera CreatePreviewCamera(GBillboardCreatorArgs args)
		{
			return null;
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x85C2CC", Offset = "0x85C2CC", VA = "0x85C2CC")]
		private static GameObject CreatePreviewGameObject(Transform cameraTransform, GBillboardCreatorArgs args)
		{
			return null;
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x85C048", Offset = "0x85C048", VA = "0x85C048")]
		private static void Clear(RenderTexture rt, Color backgroundColor)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x85CB78", Offset = "0x85CB78", VA = "0x85CB78")]
		public static ushort[] Triangulate(Vector2[] vertices)
		{
			return null;
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x85D070", Offset = "0x85D070", VA = "0x85D070")]
		private static bool IsTriangleAdded(List<ushort> tris, ushort[] newTris)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x85D210", Offset = "0x85D210", VA = "0x85D210")]
		public static GBillboardCreatorArgs FitCameraToTarget(GBillboardCreatorArgs args)
		{
			return default(GBillboardCreatorArgs);
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x85D654", Offset = "0x85D654", VA = "0x85D654")]
		public static BillboardAsset CreateBillboardAsset(GBillboardCreatorArgs args)
		{
			return null;
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x85D8B4", Offset = "0x85D8B4", VA = "0x85D8B4")]
		public static Texture2D RenderAtlas(GBillboardCreatorArgs args)
		{
			return null;
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x85DB14", Offset = "0x85DB14", VA = "0x85DB14")]
		public static Texture2D RenderNormal(GBillboardCreatorArgs args)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200021A")]
	public struct GBillboardCreatorArgs
	{
		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575454", Offset = "0x575454")]
		private GBillboardRenderMode <Mode>k__BackingField;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575464", Offset = "0x575464")]
		private GameObject <Target>k__BackingField;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575474", Offset = "0x575474")]
		private int <Row>k__BackingField;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575484", Offset = "0x575484")]
		private int <Column>k__BackingField;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575494", Offset = "0x575494")]
		private int <CellSize>k__BackingField;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5754A4", Offset = "0x5754A4")]
		private Vector3 <CameraOffset>k__BackingField;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5754B4", Offset = "0x5754B4")]
		private float <CameraSize>k__BackingField;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5754C4", Offset = "0x5754C4")]
		private Material <AtlasMaterial>k__BackingField;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5754D4", Offset = "0x5754D4")]
		private Material <NormalMaterial>k__BackingField;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5754E4", Offset = "0x5754E4")]
		private string <SrcColorProps>k__BackingField;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5754F4", Offset = "0x5754F4")]
		private string <DesColorProps>k__BackingField;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575504", Offset = "0x575504")]
		private string <SrcTextureProps>k__BackingField;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575514", Offset = "0x575514")]
		private string <DesTextureProps>k__BackingField;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575524", Offset = "0x575524")]
		private int <CellIndex>k__BackingField;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575534", Offset = "0x575534")]
		private Vector2[] <Vertices>k__BackingField;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575544", Offset = "0x575544")]
		private float <Width>k__BackingField;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575554", Offset = "0x575554")]
		private float <Height>k__BackingField;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575564", Offset = "0x575564")]
		private float <Bottom>k__BackingField;

		[Token(Token = "0x1700046B")]
		public GBillboardRenderMode Mode
		{
			[Token(Token = "0x60012CA")]
			[Address(RVA = "0x5E80B8", Offset = "0x5E80B8", VA = "0x5E80B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D19C", Offset = "0x57D19C")]
			get
			{
				return default(GBillboardRenderMode);
			}
			[Token(Token = "0x60012CB")]
			[Address(RVA = "0x5E80C0", Offset = "0x5E80C0", VA = "0x5E80C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D1AC", Offset = "0x57D1AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700046C")]
		public GameObject Target
		{
			[Token(Token = "0x60012CC")]
			[Address(RVA = "0x5E80C8", Offset = "0x5E80C8", VA = "0x5E80C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D1BC", Offset = "0x57D1BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012CD")]
			[Address(RVA = "0x5E80D0", Offset = "0x5E80D0", VA = "0x5E80D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D1CC", Offset = "0x57D1CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700046D")]
		public int Row
		{
			[Token(Token = "0x60012CE")]
			[Address(RVA = "0x5E80D8", Offset = "0x5E80D8", VA = "0x5E80D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D1DC", Offset = "0x57D1DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012CF")]
			[Address(RVA = "0x5E80E0", Offset = "0x5E80E0", VA = "0x5E80E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D1EC", Offset = "0x57D1EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700046E")]
		public int Column
		{
			[Token(Token = "0x60012D0")]
			[Address(RVA = "0x5E80E8", Offset = "0x5E80E8", VA = "0x5E80E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D1FC", Offset = "0x57D1FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012D1")]
			[Address(RVA = "0x5E80F0", Offset = "0x5E80F0", VA = "0x5E80F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D20C", Offset = "0x57D20C")]
			set
			{
			}
		}

		[Token(Token = "0x1700046F")]
		public int CellSize
		{
			[Token(Token = "0x60012D2")]
			[Address(RVA = "0x5E80F8", Offset = "0x5E80F8", VA = "0x5E80F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D21C", Offset = "0x57D21C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012D3")]
			[Address(RVA = "0x5E8100", Offset = "0x5E8100", VA = "0x5E8100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D22C", Offset = "0x57D22C")]
			set
			{
			}
		}

		[Token(Token = "0x17000470")]
		public Vector3 CameraOffset
		{
			[Token(Token = "0x60012D4")]
			[Address(RVA = "0x5E8108", Offset = "0x5E8108", VA = "0x5E8108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D23C", Offset = "0x57D23C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60012D5")]
			[Address(RVA = "0x5E8114", Offset = "0x5E8114", VA = "0x5E8114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D24C", Offset = "0x57D24C")]
			set
			{
			}
		}

		[Token(Token = "0x17000471")]
		public float CameraSize
		{
			[Token(Token = "0x60012D6")]
			[Address(RVA = "0x5E8120", Offset = "0x5E8120", VA = "0x5E8120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D25C", Offset = "0x57D25C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012D7")]
			[Address(RVA = "0x5E8128", Offset = "0x5E8128", VA = "0x5E8128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D26C", Offset = "0x57D26C")]
			set
			{
			}
		}

		[Token(Token = "0x17000472")]
		public Material AtlasMaterial
		{
			[Token(Token = "0x60012D8")]
			[Address(RVA = "0x5E8130", Offset = "0x5E8130", VA = "0x5E8130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D27C", Offset = "0x57D27C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012D9")]
			[Address(RVA = "0x5E8138", Offset = "0x5E8138", VA = "0x5E8138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D28C", Offset = "0x57D28C")]
			set
			{
			}
		}

		[Token(Token = "0x17000473")]
		public Material NormalMaterial
		{
			[Token(Token = "0x60012DA")]
			[Address(RVA = "0x5E8140", Offset = "0x5E8140", VA = "0x5E8140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D29C", Offset = "0x57D29C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012DB")]
			[Address(RVA = "0x5E8148", Offset = "0x5E8148", VA = "0x5E8148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D2AC", Offset = "0x57D2AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000474")]
		public string SrcColorProps
		{
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0x5E8150", Offset = "0x5E8150", VA = "0x5E8150")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D2BC", Offset = "0x57D2BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0x5E8158", Offset = "0x5E8158", VA = "0x5E8158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D2CC", Offset = "0x57D2CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000475")]
		public string DesColorProps
		{
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0x5E8160", Offset = "0x5E8160", VA = "0x5E8160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D2DC", Offset = "0x57D2DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012DF")]
			[Address(RVA = "0x5E8168", Offset = "0x5E8168", VA = "0x5E8168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D2EC", Offset = "0x57D2EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000476")]
		public string SrcTextureProps
		{
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0x5E8170", Offset = "0x5E8170", VA = "0x5E8170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D2FC", Offset = "0x57D2FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012E1")]
			[Address(RVA = "0x5E8178", Offset = "0x5E8178", VA = "0x5E8178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D30C", Offset = "0x57D30C")]
			set
			{
			}
		}

		[Token(Token = "0x17000477")]
		public string DesTextureProps
		{
			[Token(Token = "0x60012E2")]
			[Address(RVA = "0x5E8180", Offset = "0x5E8180", VA = "0x5E8180")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D31C", Offset = "0x57D31C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012E3")]
			[Address(RVA = "0x5E8188", Offset = "0x5E8188", VA = "0x5E8188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D32C", Offset = "0x57D32C")]
			set
			{
			}
		}

		[Token(Token = "0x17000478")]
		public int CellIndex
		{
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0x5E8190", Offset = "0x5E8190", VA = "0x5E8190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D33C", Offset = "0x57D33C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012E5")]
			[Address(RVA = "0x5E8198", Offset = "0x5E8198", VA = "0x5E8198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D34C", Offset = "0x57D34C")]
			set
			{
			}
		}

		[Token(Token = "0x17000479")]
		public Vector2[] Vertices
		{
			[Token(Token = "0x60012E6")]
			[Address(RVA = "0x5E81A0", Offset = "0x5E81A0", VA = "0x5E81A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D35C", Offset = "0x57D35C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0x5E81A8", Offset = "0x5E81A8", VA = "0x5E81A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D36C", Offset = "0x57D36C")]
			set
			{
			}
		}

		[Token(Token = "0x1700047A")]
		public float Width
		{
			[Token(Token = "0x60012E8")]
			[Address(RVA = "0x5E81B0", Offset = "0x5E81B0", VA = "0x5E81B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D37C", Offset = "0x57D37C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012E9")]
			[Address(RVA = "0x5E81B8", Offset = "0x5E81B8", VA = "0x5E81B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D38C", Offset = "0x57D38C")]
			set
			{
			}
		}

		[Token(Token = "0x1700047B")]
		public float Height
		{
			[Token(Token = "0x60012EA")]
			[Address(RVA = "0x5E81C0", Offset = "0x5E81C0", VA = "0x5E81C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D39C", Offset = "0x57D39C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012EB")]
			[Address(RVA = "0x5E81C8", Offset = "0x5E81C8", VA = "0x5E81C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D3AC", Offset = "0x57D3AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700047C")]
		public float Bottom
		{
			[Token(Token = "0x60012EC")]
			[Address(RVA = "0x5E81D0", Offset = "0x5E81D0", VA = "0x5E81D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D3BC", Offset = "0x57D3BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012ED")]
			[Address(RVA = "0x5E81D8", Offset = "0x5E81D8", VA = "0x5E81D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D3CC", Offset = "0x57D3CC")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200021B")]
	public enum GBillboardRenderMode
	{
		[Token(Token = "0x4001137")]
		Atlas,
		[Token(Token = "0x4001138")]
		Normal,
		[Token(Token = "0x4001139")]
		Flipbook
	}
	[Serializable]
	[Token(Token = "0x200021C")]
	public struct GBillboardToolSettings
	{
		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Material atlasMaterial;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private Material normalMaterial;

		[Token(Token = "0x1700047D")]
		public Material AtlasMaterial
		{
			[Token(Token = "0x60012EE")]
			[Address(RVA = "0x5E821C", Offset = "0x5E821C", VA = "0x5E821C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0x5E8224", Offset = "0x5E8224", VA = "0x5E8224")]
			set
			{
			}
		}

		[Token(Token = "0x1700047E")]
		public Material NormalMaterial
		{
			[Token(Token = "0x60012F0")]
			[Address(RVA = "0x5E822C", Offset = "0x5E822C", VA = "0x5E822C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0x5E8234", Offset = "0x5E8234", VA = "0x5E8234")]
			set
			{
			}
		}
	}
}
namespace Pinwheel.Griffin.BackupTool
{
	[Token(Token = "0x200021D")]
	public class GBackupData : ScriptableObject
	{
		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GBackupData instance;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GHistoryEntry> historyEntries;

		[Token(Token = "0x1700047F")]
		public static GBackupData Instance
		{
			[Token(Token = "0x60012F2")]
			[Address(RVA = "0x85AEAC", Offset = "0x85AEAC", VA = "0x85AEAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000480")]
		public List<GHistoryEntry> HistoryEntries
		{
			[Token(Token = "0x60012F3")]
			[Address(RVA = "0x85AF98", Offset = "0x85AF98", VA = "0x85AF98")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012F4")]
			[Address(RVA = "0x85B00C", Offset = "0x85B00C", VA = "0x85B00C")]
			set
			{
			}
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x85B014", Offset = "0x85B014", VA = "0x85B014")]
		public GBackupData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021E")]
	public struct GBackupToolSettings
	{
		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int bufferSizeMB;

		[Token(Token = "0x17000481")]
		public int BufferSizeMB
		{
			[Token(Token = "0x60012F6")]
			[Address(RVA = "0x5E806C", Offset = "0x5E806C", VA = "0x5E806C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012F7")]
			[Address(RVA = "0x5E8074", Offset = "0x5E8074", VA = "0x5E8074")]
			set
			{
			}
		}
	}
	[Serializable]
	[Token(Token = "0x200021F")]
	public class GHistoryBuffer
	{
		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string name;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private byte[] bytes;

		[Token(Token = "0x17000482")]
		public string Name
		{
			[Token(Token = "0x60012F8")]
			[Address(RVA = "0x85B02C", Offset = "0x85B02C", VA = "0x85B02C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012F9")]
			[Address(RVA = "0x85B034", Offset = "0x85B034", VA = "0x85B034")]
			set
			{
			}
		}

		[Token(Token = "0x17000483")]
		public byte[] Bytes
		{
			[Token(Token = "0x60012FA")]
			[Address(RVA = "0x85B03C", Offset = "0x85B03C", VA = "0x85B03C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0x85B044", Offset = "0x85B044", VA = "0x85B044")]
			set
			{
			}
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x85B04C", Offset = "0x85B04C", VA = "0x85B04C")]
		public GHistoryBuffer(string bufferName, byte[] data)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000220")]
	public class GHistoryEntry
	{
		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string name;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DateTime creationTime;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<GHistoryBuffer> buffers;

		[Token(Token = "0x17000484")]
		public string Name
		{
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0x85B084", Offset = "0x85B084", VA = "0x85B084")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0x85B08C", Offset = "0x85B08C", VA = "0x85B08C")]
			set
			{
			}
		}

		[Token(Token = "0x17000485")]
		public DateTime CreationTime
		{
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0x85B094", Offset = "0x85B094", VA = "0x85B094")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6001300")]
			[Address(RVA = "0x85B09C", Offset = "0x85B09C", VA = "0x85B09C")]
			set
			{
			}
		}

		[Token(Token = "0x17000486")]
		public List<GHistoryBuffer> Buffers
		{
			[Token(Token = "0x6001301")]
			[Address(RVA = "0x85B0A4", Offset = "0x85B0A4", VA = "0x85B0A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001302")]
			[Address(RVA = "0x85B118", Offset = "0x85B118", VA = "0x85B118")]
			set
			{
			}
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x85B120", Offset = "0x85B120", VA = "0x85B120")]
		public GHistoryEntry(string n)
		{
		}
	}
	[Token(Token = "0x2000221")]
	public class GUndoCompatibleBuffer : ScriptableObject
	{
		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GUndoCompatibleBuffer instance;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string currentBackupName;

		[Token(Token = "0x17000487")]
		public static GUndoCompatibleBuffer Instance
		{
			[Token(Token = "0x6001304")]
			[Address(RVA = "0x85B1D0", Offset = "0x85B1D0", VA = "0x85B1D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000488")]
		public string CurrentBackupName
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0x85B2BC", Offset = "0x85B2BC", VA = "0x85B2BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001306")]
			[Address(RVA = "0x85B2C4", Offset = "0x85B2C4", VA = "0x85B2C4")]
			set
			{
			}
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x85B2CC", Offset = "0x85B2CC", VA = "0x85B2CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x85B2D0", Offset = "0x85B2D0", VA = "0x85B2D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x85B2D4", Offset = "0x85B2D4", VA = "0x85B2D4")]
		public void RecordUndo()
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x85B2D8", Offset = "0x85B2D8", VA = "0x85B2D8")]
		private void OnWillUndoFlush()
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x85B2E0", Offset = "0x85B2E0", VA = "0x85B2E0")]
		public GUndoCompatibleBuffer()
		{
		}
	}
}
namespace Pinwheel.Jupiter
{
	[Token(Token = "0x2000222")]
	public static class JCommon
	{
		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string SUPPORT_EMAIL;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string BUSINESS_EMAIL;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string YOUTUBE_CHANNEL;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string ONLINE_MANUAL;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string FORUM;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string DISCORD;

		[Token(Token = "0x400114C")]
		public const int PREVIEW_TEXTURE_SIZE = 512;

		[Token(Token = "0x400114D")]
		public const int TEXTURE_SIZE_MIN = 1;

		[Token(Token = "0x400114E")]
		public const int TEXTURE_SIZE_MAX = 8192;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Vector2[] fullRectUvPoints;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Mesh emptyMesh;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Material[] emptyMaterials;

		[Token(Token = "0x17000489")]
		public static JRenderPipelineType CurrentRenderPipeline
		{
			[Token(Token = "0x600130C")]
			[Address(RVA = "0x9991A0", Offset = "0x9991A0", VA = "0x9991A0")]
			get
			{
				return default(JRenderPipelineType);
			}
		}

		[Token(Token = "0x1700048A")]
		public static Vector2[] FullRectUvPoints
		{
			[Token(Token = "0x600130D")]
			[Address(RVA = "0x99922C", Offset = "0x99922C", VA = "0x99922C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048B")]
		public static Mesh EmptyMesh
		{
			[Token(Token = "0x600130E")]
			[Address(RVA = "0x999388", Offset = "0x999388", VA = "0x999388")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048C")]
		public static Material[] EmptyMaterials
		{
			[Token(Token = "0x600130F")]
			[Address(RVA = "0x999490", Offset = "0x999490", VA = "0x999490")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048D")]
		public static Rect UnitRect
		{
			[Token(Token = "0x6001310")]
			[Address(RVA = "0x999564", Offset = "0x999564", VA = "0x999564")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x9995A4", Offset = "0x9995A4", VA = "0x9995A4")]
		public static string GetUniqueID()
		{
			return null;
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x99961C", Offset = "0x99961C", VA = "0x99961C")]
		public static long GetTimeTick()
		{
			return default(long);
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x999694", Offset = "0x999694", VA = "0x999694")]
		public static string Reverse(string s)
		{
			return null;
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x9996D4", Offset = "0x9996D4", VA = "0x9996D4")]
		public static void SetDirty(UnityEngine.Object o)
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x9996D8", Offset = "0x9996D8", VA = "0x9996D8")]
		public static void AddObjectToAsset(UnityEngine.Object objectToAdd, UnityEngine.Object asset)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x9996DC", Offset = "0x9996DC", VA = "0x9996DC")]
		public static Texture2D CreateTexture(int resolution, Color fill, TextureFormat format = TextureFormat.ARGB32)
		{
			return null;
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x9997FC", Offset = "0x9997FC", VA = "0x9997FC")]
		public static void CopyToRT(Texture t, RenderTexture rt)
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x99988C", Offset = "0x99988C", VA = "0x99988C")]
		public static void CopyFromRT(Texture2D t, RenderTexture rt)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x99994C", Offset = "0x99994C", VA = "0x99994C")]
		public static void CopyTexture(Texture2D src, Texture2D des)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x999A74", Offset = "0x999A74", VA = "0x999A74")]
		public static Texture2D CloneTexture(Texture2D t)
		{
			return null;
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x999C30", Offset = "0x999C30", VA = "0x999C30")]
		public static void FillTexture(Texture2D t, Color c)
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x999D38", Offset = "0x999D38", VA = "0x999D38")]
		public static void FillTexture(RenderTexture rt, Color c)
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x999E50", Offset = "0x999E50", VA = "0x999E50")]
		public static Texture2D CloneAndResizeTexture(Texture2D t, int width, int height)
		{
			return null;
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x999FBC", Offset = "0x999FBC", VA = "0x999FBC")]
		public static RenderTexture CopyToRT(Texture src, int startX, int startY, int width, int height, Color defaultColor)
		{
			return null;
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x99A2B4", Offset = "0x99A2B4", VA = "0x99A2B4")]
		public static void DrawTexture(RenderTexture rt, Texture texture, Rect uvRect, Material mat, int pass = 0)
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x99A554", Offset = "0x99A554", VA = "0x99A554")]
		public static void DrawTriangle(RenderTexture rt, Vector2 v0, Vector2 v1, Vector2 v2, Color c)
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x99A698", Offset = "0x99A698", VA = "0x99A698")]
		public static void DrawQuad(RenderTexture rt, Vector2[] quadCorners, Material mat, int pass)
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x99A860", Offset = "0x99A860", VA = "0x99A860")]
		public static List<Type> GetAllLoadedTypes()
		{
			return null;
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x99AA24", Offset = "0x99AA24", VA = "0x99AA24")]
		public static IEnumerable<Rect> CompareHeightMap(int gridSize, Color[] oldValues, Color[] newValues)
		{
			return null;
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x99AF70", Offset = "0x99AF70", VA = "0x99AF70")]
		public static Rect GetUvRange(int gridSize, int x, int z)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x99B04C", Offset = "0x99B04C", VA = "0x99B04C")]
		public static Texture2D CreateTextureFromCurve(AnimationCurve curve, int width, int height)
		{
			return null;
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x99B240", Offset = "0x99B240", VA = "0x99B240")]
		public static Vector3[] GetBrushQuadCorners(Vector3 center, float radius, float rotation)
		{
			return null;
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x99B570", Offset = "0x99B570", VA = "0x99B570")]
		public static void ClearRT(RenderTexture rt)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x99B5A8", Offset = "0x99B5A8", VA = "0x99B5A8")]
		public static void SetMaterialKeywordActive(Material mat, string keyword, bool active)
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x99B5CC", Offset = "0x99B5CC", VA = "0x99B5CC")]
		public static void Editor_ProgressBar(string title, string detail, float percent)
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x99B5D0", Offset = "0x99B5D0", VA = "0x99B5D0")]
		public static void Editor_CancelableProgressBar(string title, string detail, float percent)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x99B5D4", Offset = "0x99B5D4", VA = "0x99B5D4")]
		public static void Editor_ClearProgressBar()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x99B5D8", Offset = "0x99B5D8", VA = "0x99B5D8")]
		public static Camera CreateCamera()
		{
			return null;
		}
	}
	[Token(Token = "0x2000223")]
	public enum JDetailOverlayLayer
	{
		[Token(Token = "0x4001153")]
		AfterSky,
		[Token(Token = "0x4001154")]
		AfterStars,
		[Token(Token = "0x4001155")]
		AfterSun,
		[Token(Token = "0x4001156")]
		AfterMoon,
		[Token(Token = "0x4001157")]
		AfterHorizonCloud,
		[Token(Token = "0x4001158")]
		AfterOverheadCloud
	}
	[Token(Token = "0x2000224")]
	public enum JFogSyncOption
	{
		[Token(Token = "0x400115A")]
		DontSync,
		[Token(Token = "0x400115B")]
		SkyColor,
		[Token(Token = "0x400115C")]
		HorizonColor,
		[Token(Token = "0x400115D")]
		GroundColor,
		[Token(Token = "0x400115E")]
		CustomColor
	}
	[Token(Token = "0x2000225")]
	public class JJupiterSettings : ScriptableObject
	{
		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JJupiterSettings instance;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material defaultSkybox;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture2D noiseTexture;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Texture2D cloudTexture;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private JSkyProfile defaultProfileSunnyDay;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private JSkyProfile defaultProfileStarryNight;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private JDayNightCycleProfile defaultDayNightCycleProfile;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private JInternalShaderSettings internalShaders;

		[Token(Token = "0x1700048E")]
		public static JJupiterSettings Instance
		{
			[Token(Token = "0x600132E")]
			[Address(RVA = "0x8E1310", Offset = "0x8E1310", VA = "0x8E1310")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048F")]
		public Material DefaultSkybox
		{
			[Token(Token = "0x600132F")]
			[Address(RVA = "0x8E2038", Offset = "0x8E2038", VA = "0x8E2038")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001330")]
			[Address(RVA = "0x8E2040", Offset = "0x8E2040", VA = "0x8E2040")]
			set
			{
			}
		}

		[Token(Token = "0x17000490")]
		public Texture2D NoiseTexture
		{
			[Token(Token = "0x6001331")]
			[Address(RVA = "0x8E2048", Offset = "0x8E2048", VA = "0x8E2048")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001332")]
			[Address(RVA = "0x8E2050", Offset = "0x8E2050", VA = "0x8E2050")]
			set
			{
			}
		}

		[Token(Token = "0x17000491")]
		public Texture2D CloudTexture
		{
			[Token(Token = "0x6001333")]
			[Address(RVA = "0x8E2058", Offset = "0x8E2058", VA = "0x8E2058")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001334")]
			[Address(RVA = "0x8E2060", Offset = "0x8E2060", VA = "0x8E2060")]
			set
			{
			}
		}

		[Token(Token = "0x17000492")]
		public JSkyProfile DefaultProfileSunnyDay
		{
			[Token(Token = "0x6001335")]
			[Address(RVA = "0x8E2068", Offset = "0x8E2068", VA = "0x8E2068")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001336")]
			[Address(RVA = "0x8E2070", Offset = "0x8E2070", VA = "0x8E2070")]
			set
			{
			}
		}

		[Token(Token = "0x17000493")]
		public JSkyProfile DefaultProfileStarryNight
		{
			[Token(Token = "0x6001337")]
			[Address(RVA = "0x8E2078", Offset = "0x8E2078", VA = "0x8E2078")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001338")]
			[Address(RVA = "0x8E2080", Offset = "0x8E2080", VA = "0x8E2080")]
			set
			{
			}
		}

		[Token(Token = "0x17000494")]
		public JDayNightCycleProfile DefaultDayNightCycleProfile
		{
			[Token(Token = "0x6001339")]
			[Address(RVA = "0x8E2088", Offset = "0x8E2088", VA = "0x8E2088")]
			get
			{
				return null;
			}
			[Token(Token = "0x600133A")]
			[Address(RVA = "0x8E2090", Offset = "0x8E2090", VA = "0x8E2090")]
			set
			{
			}
		}

		[Token(Token = "0x17000495")]
		public JInternalShaderSettings InternalShaders
		{
			[Token(Token = "0x600133B")]
			[Address(RVA = "0x8E2098", Offset = "0x8E2098", VA = "0x8E2098")]
			get
			{
				return default(JInternalShaderSettings);
			}
			[Token(Token = "0x600133C")]
			[Address(RVA = "0x8E20AC", Offset = "0x8E20AC", VA = "0x8E20AC")]
			set
			{
			}
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x8E20C0", Offset = "0x8E20C0", VA = "0x8E20C0")]
		public JJupiterSettings()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public static class JMat
	{
		[Token(Token = "0x4001167")]
		public const string NOISE_TEX = "_NoiseTex";

		[Token(Token = "0x4001168")]
		public const string CLOUD_TEX = "_CloudTex";

		[Token(Token = "0x4001169")]
		public const string SKY_COLOR = "_SkyColor";

		[Token(Token = "0x400116A")]
		public const string HORIZON_COLOR = "_HorizonColor";

		[Token(Token = "0x400116B")]
		public const string GROUND_COLOR = "_GroundColor";

		[Token(Token = "0x400116C")]
		public const string HORIZON_THICKNESS = "_HorizonThickness";

		[Token(Token = "0x400116D")]
		public const string HORIZON_EXPONENT = "_HorizonExponent";

		[Token(Token = "0x400116E")]
		public const string HORIZON_STEP = "_HorizonStep";

		[Token(Token = "0x400116F")]
		public const string KW_STARS = "STARS";

		[Token(Token = "0x4001170")]
		public const string KW_STARS_LAYER_0 = "STARS_LAYER_0";

		[Token(Token = "0x4001171")]
		public const string KW_STARS_LAYER_1 = "STARS_LAYER_1";

		[Token(Token = "0x4001172")]
		public const string KW_STARS_LAYER_2 = "STARS_LAYER_2";

		[Token(Token = "0x4001173")]
		public const string STARS_START = "_StarsStart";

		[Token(Token = "0x4001174")]
		public const string STARS_END = "_StarsEnd";

		[Token(Token = "0x4001175")]
		public const string STARS_OPACITY = "_StarsOpacity";

		[Token(Token = "0x4001176")]
		public const string STARS_COLOR_0 = "_StarsColor0";

		[Token(Token = "0x4001177")]
		public const string STARS_COLOR_1 = "_StarsColor1";

		[Token(Token = "0x4001178")]
		public const string STARS_COLOR_2 = "_StarsColor2";

		[Token(Token = "0x4001179")]
		public const string STARS_DENSITY_0 = "_StarsDensity0";

		[Token(Token = "0x400117A")]
		public const string STARS_DENSITY_1 = "_StarsDensity1";

		[Token(Token = "0x400117B")]
		public const string STARS_DENSITY_2 = "_StarsDensity2";

		[Token(Token = "0x400117C")]
		public const string STARS_SIZE_0 = "_StarsSize0";

		[Token(Token = "0x400117D")]
		public const string STARS_SIZE_1 = "_StarsSize1";

		[Token(Token = "0x400117E")]
		public const string STARS_SIZE_2 = "_StarsSize2";

		[Token(Token = "0x400117F")]
		public const string STARS_GLOW_0 = "_StarsGlow0";

		[Token(Token = "0x4001180")]
		public const string STARS_GLOW_1 = "_StarsGlow1";

		[Token(Token = "0x4001181")]
		public const string STARS_GLOW_2 = "_StarsGlow2";

		[Token(Token = "0x4001182")]
		public const string STARS_TWINKLE_0 = "_StarsTwinkle0";

		[Token(Token = "0x4001183")]
		public const string STARS_TWINKLE_1 = "_StarsTwinkle1";

		[Token(Token = "0x4001184")]
		public const string STARS_TWINKLE_2 = "_StarsTwinkle2";

		[Token(Token = "0x4001185")]
		public const string KW_STARS_BAKED = "STARS_BAKED";

		[Token(Token = "0x4001186")]
		public const string STARS_CUBEMAP = "_StarsCubemap";

		[Token(Token = "0x4001187")]
		public const string STARS_TWINKLE_MAP = "_StarsTwinkleMap";

		[Token(Token = "0x4001188")]
		public const string KW_SUN = "SUN";

		[Token(Token = "0x4001189")]
		public const string KW_SUN_USE_TEXTURE = "SUN_USE_TEXTURE";

		[Token(Token = "0x400118A")]
		public const string SUN_TEX = "_SunTex";

		[Token(Token = "0x400118B")]
		public const string SUN_COLOR = "_SunColor";

		[Token(Token = "0x400118C")]
		public const string SUN_SIZE = "_SunSize";

		[Token(Token = "0x400118D")]
		public const string SUN_SOFT_EDGE = "_SunSoftEdge";

		[Token(Token = "0x400118E")]
		public const string SUN_GLOW = "_SunGlow";

		[Token(Token = "0x400118F")]
		public const string SUN_DIRECTION = "_SunDirection";

		[Token(Token = "0x4001190")]
		public const string SUN_TRANSFORM_MATRIX = "_PositionToSunUV";

		[Token(Token = "0x4001191")]
		public const string KW_SUN_BAKED = "SUN_BAKED";

		[Token(Token = "0x4001192")]
		public const string SUN_CUBEMAP = "_SunCubemap";

		[Token(Token = "0x4001193")]
		public const string SUN_ROTATION_MATRIX = "_SunRotationMatrix";

		[Token(Token = "0x4001194")]
		public const string KW_MOON = "MOON";

		[Token(Token = "0x4001195")]
		public const string KW_MOON_USE_TEXTURE = "MOON_USE_TEXTURE";

		[Token(Token = "0x4001196")]
		public const string MOON_TEX = "_MoonTex";

		[Token(Token = "0x4001197")]
		public const string MOON_COLOR = "_MoonColor";

		[Token(Token = "0x4001198")]
		public const string MOON_SIZE = "_MoonSize";

		[Token(Token = "0x4001199")]
		public const string MOON_SOFT_EDGE = "_MoonSoftEdge";

		[Token(Token = "0x400119A")]
		public const string MOON_GLOW = "_MoonGlow";

		[Token(Token = "0x400119B")]
		public const string MOON_DIRECTION = "_MoonDirection";

		[Token(Token = "0x400119C")]
		public const string MOON_TRANSFORM_MATRIX = "_PositionToMoonUV";

		[Token(Token = "0x400119D")]
		public const string KW_MOON_BAKED = "MOON_BAKED";

		[Token(Token = "0x400119E")]
		public const string MOON_CUBEMAP = "_MoonCubemap";

		[Token(Token = "0x400119F")]
		public const string MOON_ROTATION_MATRIX = "_MoonRotationMatrix";

		[Token(Token = "0x40011A0")]
		public const string KW_HORIZON_CLOUD = "HORIZON_CLOUD";

		[Token(Token = "0x40011A1")]
		public const string HORIZON_CLOUD_COLOR = "_HorizonCloudColor";

		[Token(Token = "0x40011A2")]
		public const string HORIZON_CLOUD_START = "_HorizonCloudStart";

		[Token(Token = "0x40011A3")]
		public const string HORIZON_CLOUD_END = "_HorizonCloudEnd";

		[Token(Token = "0x40011A4")]
		public const string HORIZON_CLOUD_SIZE = "_HorizonCloudSize";

		[Token(Token = "0x40011A5")]
		public const string HORIZON_CLOUD_STEP = "_HorizonCloudStep";

		[Token(Token = "0x40011A6")]
		public const string HORIZON_CLOUD_ANIMATION_SPEED = "_HorizonCloudAnimationSpeed";

		[Token(Token = "0x40011A7")]
		public const string KW_OVERHEAD_CLOUD = "OVERHEAD_CLOUD";

		[Token(Token = "0x40011A8")]
		public const string OVERHEAD_CLOUD_COLOR = "_OverheadCloudColor";

		[Token(Token = "0x40011A9")]
		public const string OVERHEAD_CLOUD_ALTITUDE = "_OverheadCloudAltitude";

		[Token(Token = "0x40011AA")]
		public const string OVERHEAD_CLOUD_SIZE = "_OverheadCloudSize";

		[Token(Token = "0x40011AB")]
		public const string OVERHEAD_CLOUD_STEP = "_OverheadCloudStep";

		[Token(Token = "0x40011AC")]
		public const string OVERHEAD_CLOUD_ANIMATION_SPEED = "_OverheadCloudAnimationSpeed";

		[Token(Token = "0x40011AD")]
		public const string OVERHEAD_CLOUD_FLOW_X = "_OverheadCloudFlowX";

		[Token(Token = "0x40011AE")]
		public const string OVERHEAD_CLOUD_FLOW_Z = "_OverheadCloudFlowZ";

		[Token(Token = "0x40011AF")]
		public const string KW_DETAIL_OVERLAY = "DETAIL_OVERLAY";

		[Token(Token = "0x40011B0")]
		public const string KW_DETAIL_OVERLAY_ROTATION = "DETAIL_OVERLAY_ROTATION";

		[Token(Token = "0x40011B1")]
		public const string DETAIL_OVERLAY_COLOR = "_DetailOverlayColor";

		[Token(Token = "0x40011B2")]
		public const string DETAIL_OVERLAY_CUBEMAP = "_DetailOverlayCubemap";

		[Token(Token = "0x40011B3")]
		public const string DETAIL_OVERLAY_LAYER = "_DetailOverlayLayer";

		[Token(Token = "0x40011B4")]
		public const string DETAIL_OVERLAY_ROTATION_SPEED = "_DetailOverlayRotationSpeed";

		[Token(Token = "0x40011B5")]
		public const string KW_ALLOW_STEP_EFFECT = "ALLOW_STEP_EFFECT";

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material activeMaterial;

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x8E20C8", Offset = "0x8E20C8", VA = "0x8E20C8")]
		public static void SetActiveMaterial(Material mat)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x8E211C", Offset = "0x8E211C", VA = "0x8E211C")]
		public static void GetColor(string prop, ref Color value)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x8E22B8", Offset = "0x8E22B8", VA = "0x8E22B8")]
		public static void GetFloat(string prop, ref float value)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x8E2450", Offset = "0x8E2450", VA = "0x8E2450")]
		public static void GetVector(string prop, ref Vector4 value)
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x8E25EC", Offset = "0x8E25EC", VA = "0x8E25EC")]
		public static void GetTexture(string prop, ref Texture value)
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x8E2784", Offset = "0x8E2784", VA = "0x8E2784")]
		public static void GetKeywordEnabled(string kw, ref bool value)
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x8E28F4", Offset = "0x8E28F4", VA = "0x8E28F4")]
		public static void SetColor(string prop, Color value)
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x8E2AB0", Offset = "0x8E2AB0", VA = "0x8E2AB0")]
		public static void SetFloat(string prop, float value)
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x8E2C44", Offset = "0x8E2C44", VA = "0x8E2C44")]
		public static void SetVector(string prop, Vector4 value)
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x8E2E00", Offset = "0x8E2E00", VA = "0x8E2E00")]
		public static void SetTexture(string prop, Texture value)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x8E2F94", Offset = "0x8E2F94", VA = "0x8E2F94")]
		public static void SetMatrix(string prop, Matrix4x4 value)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x8E3140", Offset = "0x8E3140", VA = "0x8E3140")]
		public static void SetKeywordEnable(string kw, bool enable)
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x8E32C4", Offset = "0x8E32C4", VA = "0x8E32C4")]
		public static void SetOverrideTag(string tag, string value)
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x8E3338", Offset = "0x8E3338", VA = "0x8E3338")]
		public static void SetRenderQueue(int queue)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x8E339C", Offset = "0x8E339C", VA = "0x8E339C")]
		public static void SetRenderQueue(RenderQueue queue)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x8E3400", Offset = "0x8E3400", VA = "0x8E3400")]
		public static void SetSourceBlend(BlendMode mode)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x8E3470", Offset = "0x8E3470", VA = "0x8E3470")]
		public static void SetDestBlend(BlendMode mode)
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x8E34E0", Offset = "0x8E34E0", VA = "0x8E34E0")]
		public static void SetZWrite(bool value)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x8E3550", Offset = "0x8E3550", VA = "0x8E3550")]
		public static void SetBlend(bool value)
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x8E35C0", Offset = "0x8E35C0", VA = "0x8E35C0")]
		public static void SetShader(Shader shader)
		{
		}
	}
	[Token(Token = "0x2000227")]
	[ExecuteInEditMode]
	public class JSky : MonoBehaviour
	{
		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 DefaultSunDirection;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly Vector3 DefaultMoonDirection;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private JSkyProfile profile;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Light sunLightSource;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Light moonLightSource;

		[Token(Token = "0x17000496")]
		public JSkyProfile Profile
		{
			[Token(Token = "0x6001352")]
			[Address(RVA = "0x8E368C", Offset = "0x8E368C", VA = "0x8E368C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001353")]
			[Address(RVA = "0x8E3694", Offset = "0x8E3694", VA = "0x8E3694")]
			set
			{
			}
		}

		[Token(Token = "0x17000497")]
		public Light SunLightSource
		{
			[Token(Token = "0x6001354")]
			[Address(RVA = "0x8E369C", Offset = "0x8E369C", VA = "0x8E369C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001355")]
			[Address(RVA = "0x8E36A4", Offset = "0x8E36A4", VA = "0x8E36A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000498")]
		public Light MoonLightSource
		{
			[Token(Token = "0x6001356")]
			[Address(RVA = "0x8E3748", Offset = "0x8E3748", VA = "0x8E3748")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001357")]
			[Address(RVA = "0x8E3750", Offset = "0x8E3750", VA = "0x8E3750")]
			set
			{
			}
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x8E37F4", Offset = "0x8E37F4", VA = "0x8E37F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x8E3914", Offset = "0x8E3914", VA = "0x8E3914")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x8E3A4C", Offset = "0x8E3A4C", VA = "0x8E3A4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x8E3A70", Offset = "0x8E3A70", VA = "0x8E3A70")]
		private void Reset()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x8E3B68", Offset = "0x8E3B68", VA = "0x8E3B68")]
		private void OnCameraPreCull(Camera cam)
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x8E465C", Offset = "0x8E465C", VA = "0x8E465C")]
		private void OnBeginFrameRenderingSRP(ScriptableRenderContext context, Camera[] cameras)
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x8E3B8C", Offset = "0x8E3B8C", VA = "0x8E3B8C")]
		private void SetupSkyMaterial()
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x8E4578", Offset = "0x8E4578", VA = "0x8E4578")]
		private void SyncFog()
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x8E4770", Offset = "0x8E4770", VA = "0x8E4770")]
		public JSky()
		{
		}
	}
	[Token(Token = "0x2000228")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x56E788", Offset = "0x56E788")]
	public class JSkyProfile : ScriptableObject
	{
		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color skyColor;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color horizonColor;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color groundColor;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float horizonThickness;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float horizonExponent;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int horizonStep;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private JFogSyncOption fogSyncOption;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color fogColor;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool enableStars;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float starsStartPosition;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float starsEndPosition;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float starsOpacity;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private int starsLayerCount;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Color starsColor0;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private Color starsColor1;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private Color starsColor2;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float starsDensity0;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private float starsDensity1;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private float starsDensity2;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private float starsSize0;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private float starsSize1;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private float starsSize2;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float starsGlow0;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float starsGlow1;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private float starsGlow2;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float starsTwinkle0;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float starsTwinkle1;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float starsTwinkle2;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool useBakedStars;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Cubemap starsCubemap;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Texture2D starsTwinkleMap;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private bool enableSun;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Texture2D sunTexture;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Color sunColor;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private float sunSize;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		private float sunSoftEdge;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private float sunGlow;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private bool useBakedSun;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Cubemap sunCubemap;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Color sunLightColor;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private float sunLightIntensity;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		private bool enableMoon;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private Texture2D moonTexture;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Color moonColor;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private float moonSize;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[SerializeField]
		private float moonSoftEdge;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private float moonGlow;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		private bool useBakedMoon;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Cubemap moonCubemap;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private Color moonLightColor;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private float moonLightIntensity;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private Texture2D customCloudTexture;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private bool enableHorizonCloud;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[SerializeField]
		private Color horizonCloudColor;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		[SerializeField]
		private float horizonCloudStartPosition;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private float horizonCloudEndPosition;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[SerializeField]
		private float horizonCloudSize;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private int horizonCloudStep;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[SerializeField]
		private float horizonCloudAnimationSpeed;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private bool enableOverheadCloud;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[SerializeField]
		private Color overheadCloudColor;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[SerializeField]
		private float overheadCloudAltitude;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private float overheadCloudSize;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[SerializeField]
		private int overheadCloudStep;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private float overheadCloudAnimationSpeed;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[SerializeField]
		private float overheadCloudFlowDirectionX;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private float overheadCloudFlowDirectionZ;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[SerializeField]
		private bool enableDetailOverlay;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private Color detailOverlayTintColor;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private Cubemap detailOverlayCubeMap;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private JDetailOverlayLayer detailOverlayLayer;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[SerializeField]
		private float detailOverlayRotationSpeed;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private bool allowStepEffect;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private Material material;

		[Token(Token = "0x17000499")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FB74", Offset = "0x57FB74")]
		public Color SkyColor
		{
			[Token(Token = "0x6001362")]
			[Address(RVA = "0x8E480C", Offset = "0x8E480C", VA = "0x8E480C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001363")]
			[Address(RVA = "0x8E4818", Offset = "0x8E4818", VA = "0x8E4818")]
			set
			{
			}
		}

		[Token(Token = "0x1700049A")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FBB0", Offset = "0x57FBB0")]
		public Color HorizonColor
		{
			[Token(Token = "0x6001364")]
			[Address(RVA = "0x8E4824", Offset = "0x8E4824", VA = "0x8E4824")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001365")]
			[Address(RVA = "0x8E4830", Offset = "0x8E4830", VA = "0x8E4830")]
			set
			{
			}
		}

		[Token(Token = "0x1700049B")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FBEC", Offset = "0x57FBEC")]
		public Color GroundColor
		{
			[Token(Token = "0x6001366")]
			[Address(RVA = "0x8E483C", Offset = "0x8E483C", VA = "0x8E483C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001367")]
			[Address(RVA = "0x8E4848", Offset = "0x8E4848", VA = "0x8E4848")]
			set
			{
			}
		}

		[Token(Token = "0x1700049C")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FC28", Offset = "0x57FC28")]
		public float HorizonThickness
		{
			[Token(Token = "0x6001368")]
			[Address(RVA = "0x8E4854", Offset = "0x8E4854", VA = "0x8E4854")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001369")]
			[Address(RVA = "0x8E485C", Offset = "0x8E485C", VA = "0x8E485C")]
			set
			{
			}
		}

		[Token(Token = "0x1700049D")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FC64", Offset = "0x57FC64")]
		public float HorizonExponent
		{
			[Token(Token = "0x600136A")]
			[Address(RVA = "0x8E48D8", Offset = "0x8E48D8", VA = "0x8E48D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600136B")]
			[Address(RVA = "0x8E48E0", Offset = "0x8E48E0", VA = "0x8E48E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700049E")]
		public int HorizonStep
		{
			[Token(Token = "0x600136C")]
			[Address(RVA = "0x8E4964", Offset = "0x8E4964", VA = "0x8E4964")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600136D")]
			[Address(RVA = "0x8E496C", Offset = "0x8E496C", VA = "0x8E496C")]
			set
			{
			}
		}

		[Token(Token = "0x1700049F")]
		public JFogSyncOption FogSyncOption
		{
			[Token(Token = "0x600136E")]
			[Address(RVA = "0x8E49EC", Offset = "0x8E49EC", VA = "0x8E49EC")]
			get
			{
				return default(JFogSyncOption);
			}
			[Token(Token = "0x600136F")]
			[Address(RVA = "0x8E49F4", Offset = "0x8E49F4", VA = "0x8E49F4")]
			set
			{
			}
		}

		[Token(Token = "0x170004A0")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FCA0", Offset = "0x57FCA0")]
		public Color FogColor
		{
			[Token(Token = "0x6001370")]
			[Address(RVA = "0x8E49FC", Offset = "0x8E49FC", VA = "0x8E49FC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001371")]
			[Address(RVA = "0x8E4A08", Offset = "0x8E4A08", VA = "0x8E4A08")]
			set
			{
			}
		}

		[Token(Token = "0x170004A1")]
		public bool EnableStars
		{
			[Token(Token = "0x6001372")]
			[Address(RVA = "0x8E4A14", Offset = "0x8E4A14", VA = "0x8E4A14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001373")]
			[Address(RVA = "0x8E4A1C", Offset = "0x8E4A1C", VA = "0x8E4A1C")]
			set
			{
			}
		}

		[Token(Token = "0x170004A2")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FCDC", Offset = "0x57FCDC")]
		public float StarsStartPosition
		{
			[Token(Token = "0x6001374")]
			[Address(RVA = "0x8E4A28", Offset = "0x8E4A28", VA = "0x8E4A28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001375")]
			[Address(RVA = "0x8E4A30", Offset = "0x8E4A30", VA = "0x8E4A30")]
			set
			{
			}
		}

		[Token(Token = "0x170004A3")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FD18", Offset = "0x57FD18")]
		public float StarsEndPosition
		{
			[Token(Token = "0x6001376")]
			[Address(RVA = "0x8E4ABC", Offset = "0x8E4ABC", VA = "0x8E4ABC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001377")]
			[Address(RVA = "0x8E4AC4", Offset = "0x8E4AC4", VA = "0x8E4AC4")]
			set
			{
			}
		}

		[Token(Token = "0x170004A4")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FD54", Offset = "0x57FD54")]
		public float StarsOpacity
		{
			[Token(Token = "0x6001378")]
			[Address(RVA = "0x8E4B50", Offset = "0x8E4B50", VA = "0x8E4B50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001379")]
			[Address(RVA = "0x8E4B58", Offset = "0x8E4B58", VA = "0x8E4B58")]
			set
			{
			}
		}

		[Token(Token = "0x170004A5")]
		public int StarsLayerCount
		{
			[Token(Token = "0x600137A")]
			[Address(RVA = "0x8E4BD4", Offset = "0x8E4BD4", VA = "0x8E4BD4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600137B")]
			[Address(RVA = "0x8E4BDC", Offset = "0x8E4BDC", VA = "0x8E4BDC")]
			set
			{
			}
		}

		[Token(Token = "0x170004A6")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FD90", Offset = "0x57FD90")]
		public Color StarsColor0
		{
			[Token(Token = "0x600137C")]
			[Address(RVA = "0x8E4C60", Offset = "0x8E4C60", VA = "0x8E4C60")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600137D")]
			[Address(RVA = "0x8E4C6C", Offset = "0x8E4C6C", VA = "0x8E4C6C")]
			set
			{
			}
		}

		[Token(Token = "0x170004A7")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FDCC", Offset = "0x57FDCC")]
		public Color StarsColor1
		{
			[Token(Token = "0x600137E")]
			[Address(RVA = "0x8E4C78", Offset = "0x8E4C78", VA = "0x8E4C78")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600137F")]
			[Address(RVA = "0x8E4C84", Offset = "0x8E4C84", VA = "0x8E4C84")]
			set
			{
			}
		}

		[Token(Token = "0x170004A8")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FE08", Offset = "0x57FE08")]
		public Color StarsColor2
		{
			[Token(Token = "0x6001380")]
			[Address(RVA = "0x8E4C90", Offset = "0x8E4C90", VA = "0x8E4C90")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001381")]
			[Address(RVA = "0x8E4C9C", Offset = "0x8E4C9C", VA = "0x8E4C9C")]
			set
			{
			}
		}

		[Token(Token = "0x170004A9")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FE44", Offset = "0x57FE44")]
		public float StarsDensity0
		{
			[Token(Token = "0x6001382")]
			[Address(RVA = "0x8E4CA8", Offset = "0x8E4CA8", VA = "0x8E4CA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001383")]
			[Address(RVA = "0x8E4CB0", Offset = "0x8E4CB0", VA = "0x8E4CB0")]
			set
			{
			}
		}

		[Token(Token = "0x170004AA")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FE80", Offset = "0x57FE80")]
		public float StarsDensity1
		{
			[Token(Token = "0x6001384")]
			[Address(RVA = "0x8E4D2C", Offset = "0x8E4D2C", VA = "0x8E4D2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001385")]
			[Address(RVA = "0x8E4D34", Offset = "0x8E4D34", VA = "0x8E4D34")]
			set
			{
			}
		}

		[Token(Token = "0x170004AB")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FEBC", Offset = "0x57FEBC")]
		public float StarsDensity2
		{
			[Token(Token = "0x6001386")]
			[Address(RVA = "0x8E4DB0", Offset = "0x8E4DB0", VA = "0x8E4DB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001387")]
			[Address(RVA = "0x8E4DB8", Offset = "0x8E4DB8", VA = "0x8E4DB8")]
			set
			{
			}
		}

		[Token(Token = "0x170004AC")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FEF8", Offset = "0x57FEF8")]
		public float StarsSize0
		{
			[Token(Token = "0x6001388")]
			[Address(RVA = "0x8E4E34", Offset = "0x8E4E34", VA = "0x8E4E34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001389")]
			[Address(RVA = "0x8E4E3C", Offset = "0x8E4E3C", VA = "0x8E4E3C")]
			set
			{
			}
		}

		[Token(Token = "0x170004AD")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FF34", Offset = "0x57FF34")]
		public float StarsSize1
		{
			[Token(Token = "0x600138A")]
			[Address(RVA = "0x8E4EC0", Offset = "0x8E4EC0", VA = "0x8E4EC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600138B")]
			[Address(RVA = "0x8E4EC8", Offset = "0x8E4EC8", VA = "0x8E4EC8")]
			set
			{
			}
		}

		[Token(Token = "0x170004AE")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FF70", Offset = "0x57FF70")]
		public float StarsSize2
		{
			[Token(Token = "0x600138C")]
			[Address(RVA = "0x8E4F4C", Offset = "0x8E4F4C", VA = "0x8E4F4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600138D")]
			[Address(RVA = "0x8E4F54", Offset = "0x8E4F54", VA = "0x8E4F54")]
			set
			{
			}
		}

		[Token(Token = "0x170004AF")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FFAC", Offset = "0x57FFAC")]
		public float StarsGlow0
		{
			[Token(Token = "0x600138E")]
			[Address(RVA = "0x8E4FD8", Offset = "0x8E4FD8", VA = "0x8E4FD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600138F")]
			[Address(RVA = "0x8E4FE0", Offset = "0x8E4FE0", VA = "0x8E4FE0")]
			set
			{
			}
		}

		[Token(Token = "0x170004B0")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x57FFE8", Offset = "0x57FFE8")]
		public float StarsGlow1
		{
			[Token(Token = "0x6001390")]
			[Address(RVA = "0x8E5064", Offset = "0x8E5064", VA = "0x8E5064")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001391")]
			[Address(RVA = "0x8E506C", Offset = "0x8E506C", VA = "0x8E506C")]
			set
			{
			}
		}

		[Token(Token = "0x170004B1")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x580024", Offset = "0x580024")]
		public float StarsGlow2
		{
			[Token(Token = "0x6001392")]
			[Address(RVA = "0x8E50F0", Offset = "0x8E50F0", VA = "0x8E50F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001393")]
			[Address(RVA = "0x8E50F8", Offset = "0x8E50F8", VA = "0x8E50F8")]
			set
			{
			}
		}

		[Token(Token = "0x170004B2")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x580060", Offset = "0x580060")]
		public float StarsTwinkle0
		{
			[Token(Token = "0x6001394")]
			[Address(RVA = "0x8E517C", Offset = "0x8E517C", VA = "0x8E517C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001395")]
			[Address(RVA = "0x8E5184", Offset = "0x8E5184", VA = "0x8E5184")]
			set
			{
			}
		}

		[Token(Token = "0x170004B3")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x58009C", Offset = "0x58009C")]
		public float StarsTwinkle1
		{
			[Token(Token = "0x6001396")]
			[Address(RVA = "0x8E518C", Offset = "0x8E518C", VA = "0x8E518C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001397")]
			[Address(RVA = "0x8E5194", Offset = "0x8E5194", VA = "0x8E5194")]
			set
			{
			}
		}

		[Token(Token = "0x170004B4")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x5800D8", Offset = "0x5800D8")]
		public float StarsTwinkle2
		{
			[Token(Token = "0x6001398")]
			[Address(RVA = "0x8E519C", Offset = "0x8E519C", VA = "0x8E519C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001399")]
			[Address(RVA = "0x8E51A4", Offset = "0x8E51A4", VA = "0x8E51A4")]
			set
			{
			}
		}

		[Token(Token = "0x170004B5")]
		public bool UseBakedStars
		{
			[Token(Token = "0x600139A")]
			[Address(RVA = "0x8E51AC", Offset = "0x8E51AC", VA = "0x8E51AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600139B")]
			[Address(RVA = "0x8E51B4", Offset = "0x8E51B4", VA = "0x8E51B4")]
			set
			{
			}
		}

		[Token(Token = "0x170004B6")]
		public Cubemap StarsCubemap
		{
			[Token(Token = "0x600139C")]
			[Address(RVA = "0x8E51C0", Offset = "0x8E51C0", VA = "0x8E51C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139D")]
			[Address(RVA = "0x8E51C8", Offset = "0x8E51C8", VA = "0x8E51C8")]
			set
			{
			}
		}

		[Token(Token = "0x170004B7")]
		public Texture2D StarsTwinkleMap
		{
			[Token(Token = "0x600139E")]
			[Address(RVA = "0x8E51D0", Offset = "0x8E51D0", VA = "0x8E51D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139F")]
			[Address(RVA = "0x8E51D8", Offset = "0x8E51D8", VA = "0x8E51D8")]
			set
			{
			}
		}

		[Token(Token = "0x170004B8")]
		public bool EnableSun
		{
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0x8E51E0", Offset = "0x8E51E0", VA = "0x8E51E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0x8E51E8", Offset = "0x8E51E8", VA = "0x8E51E8")]
			set
			{
			}
		}

		[Token(Token = "0x170004B9")]
		public Texture2D SunTexture
		{
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0x8E51F4", Offset = "0x8E51F4", VA = "0x8E51F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0x8E51FC", Offset = "0x8E51FC", VA = "0x8E51FC")]
			set
			{
			}
		}

		[Token(Token = "0x170004BA")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x580114", Offset = "0x580114")]
		public Color SunColor
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x8E5204", Offset = "0x8E5204", VA = "0x8E5204")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0x8E5218", Offset = "0x8E5218", VA = "0x8E5218")]
			set
			{
			}
		}

		[Token(Token = "0x170004BB")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x580150", Offset = "0x580150")]
		public float SunSize
		{
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0x8E522C", Offset = "0x8E522C", VA = "0x8E522C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0x8E5234", Offset = "0x8E5234", VA = "0x8E5234")]
			set
			{
			}
		}

		[Token(Token = "0x170004BC")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x58018C", Offset = "0x58018C")]
		public float SunSoftEdge
		{
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0x8E52B0", Offset = "0x8E52B0", VA = "0x8E52B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013A9")]
			[Address(RVA = "0x8E52B8", Offset = "0x8E52B8", VA = "0x8E52B8")]
			set
			{
			}
		}

		[Token(Token = "0x170004BD")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x5801C8", Offset = "0x5801C8")]
		public float SunGlow
		{
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0x8E5334", Offset = "0x8E5334", VA = "0x8E5334")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0x8E533C", Offset = "0x8E533C", VA = "0x8E533C")]
			set
			{
			}
		}

		[Token(Token = "0x170004BE")]
		public bool UseBakedSun
		{
			[Token(Token = "0x60013AC")]
			[Address(RVA = "0x8E53B8", Offset = "0x8E53B8", VA = "0x8E53B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0x8E53C0", Offset = "0x8E53C0", VA = "0x8E53C0")]
			set
			{
			}
		}

		[Token(Token = "0x170004BF")]
		public Cubemap SunCubemap
		{
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0x8E53CC", Offset = "0x8E53CC", VA = "0x8E53CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013AF")]
			[Address(RVA = "0x8E53D4", Offset = "0x8E53D4", VA = "0x8E53D4")]
			set
			{
			}
		}

		[Token(Token = "0x170004C0")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x580204", Offset = "0x580204")]
		public Color SunLightColor
		{
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0x8E53DC", Offset = "0x8E53DC", VA = "0x8E53DC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0x8E53F0", Offset = "0x8E53F0", VA = "0x8E53F0")]
			set
			{
			}
		}

		[Token(Token = "0x170004C1")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x580240", Offset = "0x580240")]
		public float SunLightIntensity
		{
			[Token(Token = "0x60013B2")]
			[Address(RVA = "0x8E5404", Offset = "0x8E5404", VA = "0x8E5404")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x8E540C", Offset = "0x8E540C", VA = "0x8E540C")]
			set
			{
			}
		}

		[Token(Token = "0x170004C2")]
		public bool EnableMoon
		{
			[Token(Token = "0x60013B4")]
			[Address(RVA = "0x8E5414", Offset = "0x8E5414", VA = "0x8E5414")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x8E541C", Offset = "0x8E541C", VA = "0x8E541C")]
			set
			{
			}
		}

		[Token(Token = "0x170004C3")]
		public Texture2D MoonTexture
		{
			[Token(Token = "0x60013B6")]
			[Address(RVA = "0x8E5428", Offset = "0x8E5428", VA = "0x8E5428")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B7")]
			[Address(RVA = "0x8E5430", Offset = "0x8E5430", VA = "0x8E5430")]
			set
			{
			}
		}

		[Token(Token = "0x170004C4")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x58027C", Offset = "0x58027C")]
		public Color MoonColor
		{
			[Token(Token = "0x60013B8")]
			[Address(RVA = "0x8E5438", Offset = "0x8E5438", VA = "0x8E5438")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0x8E544C", Offset = "0x8E544C", VA = "0x8E544C")]
			set
			{
			}
		}

		[Token(Token = "0x170004C5")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x5802B8", Offset = "0x5802B8")]
		public float MoonSize
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x8E5460", Offset = "0x8E5460", VA = "0x8E5460")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0x8E5468", Offset = "0x8E5468", VA = "0x8E5468")]
			set
			{
			}
		}

		[Token(Token = "0x170004C6")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x5802F4", Offset = "0x5802F4")]
		public float MoonSoftEdge
		{
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x8E54E4", Offset = "0x8E54E4", VA = "0x8E54E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0x8E54EC", Offset = "0x8E54EC", VA = "0x8E54EC")]
			set
			{
			}
		}

		[Token(Token = "0x170004C7")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x580330", Offset = "0x580330")]
		public float MoonGlow
		{
			[Token(Token = "0x60013BE")]
			[Address(RVA = "0x8E5568", Offset = "0x8E5568", VA = "0x8E5568")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0x8E5570", Offset = "0x8E5570", VA = "0x8E5570")]
			set
			{
			}
		}

		[Token(Token = "0x170004C8")]
		public bool UseBakedMoon
		{
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x8E55EC", Offset = "0x8E55EC", VA = "0x8E55EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0x8E55F4", Offset = "0x8E55F4", VA = "0x8E55F4")]
			set
			{
			}
		}

		[Token(Token = "0x170004C9")]
		public Cubemap MoonCubemap
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0x8E5600", Offset = "0x8E5600", VA = "0x8E5600")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0x8E5608", Offset = "0x8E5608", VA = "0x8E5608")]
			set
			{
			}
		}

		[Token(Token = "0x170004CA")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x58036C", Offset = "0x58036C")]
		public Color MoonLightColor
		{
			[Token(Token = "0x60013C4")]
			[Address(RVA = "0x8E5610", Offset = "0x8E5610", VA = "0x8E5610")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60013C5")]
			[Address(RVA = "0x8E5624", Offset = "0x8E5624", VA = "0x8E5624")]
			set
			{
			}
		}

		[Token(Token = "0x170004CB")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x5803A8", Offset = "0x5803A8")]
		public float MoonLightIntensity
		{
			[Token(Token = "0x60013C6")]
			[Address(RVA = "0x8E5638", Offset = "0x8E5638", VA = "0x8E5638")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013C7")]
			[Address(RVA = "0x8E5640", Offset = "0x8E5640", VA = "0x8E5640")]
			set
			{
			}
		}

		[Token(Token = "0x170004CC")]
		public Texture2D CustomCloudTexture
		{
			[Token(Token = "0x60013C8")]
			[Address(RVA = "0x8E5648", Offset = "0x8E5648", VA = "0x8E5648")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013C9")]
			[Address(RVA = "0x8E5650", Offset = "0x8E5650", VA = "0x8E5650")]
			set
			{
			}
		}

		[Token(Token = "0x170004CD")]
		public bool EnableHorizonCloud
		{
			[Token(Token = "0x60013CA")]
			[Address(RVA = "0x8E5658", Offset = "0x8E5658", VA = "0x8E5658")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0x8E5660", Offset = "0x8E5660", VA = "0x8E5660")]
			set
			{
			}
		}

		[Token(Token = "0x170004CE")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x5803E4", Offset = "0x5803E4")]
		public Color HorizonCloudColor
		{
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0x8E566C", Offset = "0x8E566C", VA = "0x8E566C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0x8E5680", Offset = "0x8E5680", VA = "0x8E5680")]
			set
			{
			}
		}

		[Token(Token = "0x170004CF")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x580420", Offset = "0x580420")]
		public float HorizonCloudStartPosition
		{
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0x8E5694", Offset = "0x8E5694", VA = "0x8E5694")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013CF")]
			[Address(RVA = "0x8E569C", Offset = "0x8E569C", VA = "0x8E569C")]
			set
			{
			}
		}

		[Token(Token = "0x170004D0")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x58045C", Offset = "0x58045C")]
		public float HorizonCloudEndPosition
		{
			[Token(Token = "0x60013D0")]
			[Address(RVA = "0x8E5720", Offset = "0x8E5720", VA = "0x8E5720")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013D1")]
			[Address(RVA = "0x8E5728", Offset = "0x8E5728", VA = "0x8E5728")]
			set
			{
			}
		}

		[Token(Token = "0x170004D1")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x580498", Offset = "0x580498")]
		public float HorizonCloudSize
		{
			[Token(Token = "0x60013D2")]
			[Address(RVA = "0x8E57AC", Offset = "0x8E57AC", VA = "0x8E57AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013D3")]
			[Address(RVA = "0x8E57B4", Offset = "0x8E57B4", VA = "0x8E57B4")]
			set
			{
			}
		}

		[Token(Token = "0x170004D2")]
		public int HorizonCloudStep
		{
			[Token(Token = "0x60013D4")]
			[Address(RVA = "0x8E5834", Offset = "0x8E5834", VA = "0x8E5834")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013D5")]
			[Address(RVA = "0x8E583C", Offset = "0x8E583C", VA = "0x8E583C")]
			set
			{
			}
		}

		[Token(Token = "0x170004D3")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x5804D4", Offset = "0x5804D4")]
		public float HorizonCloudAnimationSpeed
		{
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0x8E58BC", Offset = "0x8E58BC", VA = "0x8E58BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0x8E58C4", Offset = "0x8E58C4", VA = "0x8E58C4")]
			set
			{
			}
		}

		[Token(Token = "0x170004D4")]
		public bool EnableOverheadCloud
		{
			[Token(Token = "0x60013D8")]
			[Address(RVA = "0x8E58CC", Offset = "0x8E58CC", VA = "0x8E58CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013D9")]
			[Address(RVA = "0x8E58D4", Offset = "0x8E58D4", VA = "0x8E58D4")]
			set
			{
			}
		}

		[Token(Token = "0x170004D5")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x580510", Offset = "0x580510")]
		public Color OverheadCloudColor
		{
			[Token(Token = "0x60013DA")]
			[Address(RVA = "0x8E58E0", Offset = "0x8E58E0", VA = "0x8E58E0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60013DB")]
			[Address(RVA = "0x8E58F4", Offset = "0x8E58F4", VA = "0x8E58F4")]
			set
			{
			}
		}

		[Token(Token = "0x170004D6")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x58054C", Offset = "0x58054C")]
		public float OverheadCloudAltitude
		{
			[Token(Token = "0x60013DC")]
			[Address(RVA = "0x8E5908", Offset = "0x8E5908", VA = "0x8E5908")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0x8E5910", Offset = "0x8E5910", VA = "0x8E5910")]
			set
			{
			}
		}

		[Token(Token = "0x170004D7")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x580588", Offset = "0x580588")]
		public float OverheadCloudSize
		{
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0x8E5990", Offset = "0x8E5990", VA = "0x8E5990")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0x8E5998", Offset = "0x8E5998", VA = "0x8E5998")]
			set
			{
			}
		}

		[Token(Token = "0x170004D8")]
		public int OverheadCloudStep
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0x8E5A18", Offset = "0x8E5A18", VA = "0x8E5A18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x8E5A20", Offset = "0x8E5A20", VA = "0x8E5A20")]
			set
			{
			}
		}

		[Token(Token = "0x170004D9")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x5805C4", Offset = "0x5805C4")]
		public float OverheadCloudAnimationSpeed
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x8E5AA0", Offset = "0x8E5AA0", VA = "0x8E5AA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0x8E5AA8", Offset = "0x8E5AA8", VA = "0x8E5AA8")]
			set
			{
			}
		}

		[Token(Token = "0x170004DA")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x580600", Offset = "0x580600")]
		public float OverheadCloudFlowDirectionX
		{
			[Token(Token = "0x60013E4")]
			[Address(RVA = "0x8E5AB0", Offset = "0x8E5AB0", VA = "0x8E5AB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013E5")]
			[Address(RVA = "0x8E5AB8", Offset = "0x8E5AB8", VA = "0x8E5AB8")]
			set
			{
			}
		}

		[Token(Token = "0x170004DB")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x58063C", Offset = "0x58063C")]
		public float OverheadCloudFlowDirectionZ
		{
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0x8E5B3C", Offset = "0x8E5B3C", VA = "0x8E5B3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013E7")]
			[Address(RVA = "0x8E5B44", Offset = "0x8E5B44", VA = "0x8E5B44")]
			set
			{
			}
		}

		[Token(Token = "0x170004DC")]
		public bool EnableDetailOverlay
		{
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0x8E5BC8", Offset = "0x8E5BC8", VA = "0x8E5BC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0x8E5BD0", Offset = "0x8E5BD0", VA = "0x8E5BD0")]
			set
			{
			}
		}

		[Token(Token = "0x170004DD")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x580678", Offset = "0x580678")]
		public Color DetailOverlayTintColor
		{
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0x8E5BDC", Offset = "0x8E5BDC", VA = "0x8E5BDC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60013EB")]
			[Address(RVA = "0x8E5BF0", Offset = "0x8E5BF0", VA = "0x8E5BF0")]
			set
			{
			}
		}

		[Token(Token = "0x170004DE")]
		public Cubemap DetailOverlayCubeMap
		{
			[Token(Token = "0x60013EC")]
			[Address(RVA = "0x8E5C04", Offset = "0x8E5C04", VA = "0x8E5C04")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013ED")]
			[Address(RVA = "0x8E5C0C", Offset = "0x8E5C0C", VA = "0x8E5C0C")]
			set
			{
			}
		}

		[Token(Token = "0x170004DF")]
		public JDetailOverlayLayer DetailOverlayLayer
		{
			[Token(Token = "0x60013EE")]
			[Address(RVA = "0x8E5C14", Offset = "0x8E5C14", VA = "0x8E5C14")]
			get
			{
				return default(JDetailOverlayLayer);
			}
			[Token(Token = "0x60013EF")]
			[Address(RVA = "0x8E5C1C", Offset = "0x8E5C1C", VA = "0x8E5C1C")]
			set
			{
			}
		}

		[Token(Token = "0x170004E0")]
		[AttributeAttribute(Name = "JAnimatableAttribute", RVA = "0x5806B4", Offset = "0x5806B4")]
		public float DetailOverlayRotationSpeed
		{
			[Token(Token = "0x60013F0")]
			[Address(RVA = "0x8E5C24", Offset = "0x8E5C24", VA = "0x8E5C24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013F1")]
			[Address(RVA = "0x8E5C2C", Offset = "0x8E5C2C", VA = "0x8E5C2C")]
			set
			{
			}
		}

		[Token(Token = "0x170004E1")]
		public bool AllowStepEffect
		{
			[Token(Token = "0x60013F2")]
			[Address(RVA = "0x8E5C34", Offset = "0x8E5C34", VA = "0x8E5C34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013F3")]
			[Address(RVA = "0x8E5C3C", Offset = "0x8E5C3C", VA = "0x8E5C3C")]
			set
			{
			}
		}

		[Token(Token = "0x170004E2")]
		public Material Material
		{
			[Token(Token = "0x60013F4")]
			[Address(RVA = "0x8E4680", Offset = "0x8E4680", VA = "0x8E4680")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x8E5C48", Offset = "0x8E5C48", VA = "0x8E5C48")]
		public void Reset()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x8E1558", Offset = "0x8E1558", VA = "0x8E1558")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x8E5CE4", Offset = "0x8E5CE4", VA = "0x8E5CE4")]
		public void CopyFrom(JSkyProfile p)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x8E6000", Offset = "0x8E6000", VA = "0x8E6000")]
		public JSkyProfile()
		{
		}
	}
	[Token(Token = "0x2000229")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x56E7C4", Offset = "0x56E7C4")]
	public class JAnimatableAttribute : Attribute
	{
		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575B54", Offset = "0x575B54")]
		private string <DisplayName>k__BackingField;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575B64", Offset = "0x575B64")]
		private JCurveOrGradient <CurveOrGradient>k__BackingField;

		[Token(Token = "0x170004E3")]
		public string DisplayName
		{
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0x998E94", Offset = "0x998E94", VA = "0x998E94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D3DC", Offset = "0x57D3DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013FA")]
			[Address(RVA = "0x998E9C", Offset = "0x998E9C", VA = "0x998E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D3EC", Offset = "0x57D3EC")]
			set
			{
			}
		}

		[Token(Token = "0x170004E4")]
		public JCurveOrGradient CurveOrGradient
		{
			[Token(Token = "0x60013FB")]
			[Address(RVA = "0x998EA4", Offset = "0x998EA4", VA = "0x998EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D3FC", Offset = "0x57D3FC")]
			get
			{
				return default(JCurveOrGradient);
			}
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0x998EAC", Offset = "0x998EAC", VA = "0x998EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D40C", Offset = "0x57D40C")]
			set
			{
			}
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x998EB4", Offset = "0x998EB4", VA = "0x998EB4")]
		public JAnimatableAttribute(string displayName, JCurveOrGradient curveOrGradient)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200022A")]
	public class JAnimatedProperty
	{
		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string name;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string displayName;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private JCurveOrGradient curveOrGradient;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve curve;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Gradient gradient;

		[Token(Token = "0x170004E5")]
		public string Name
		{
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0x998EF0", Offset = "0x998EF0", VA = "0x998EF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0x998F50", Offset = "0x998F50", VA = "0x998F50")]
			set
			{
			}
		}

		[Token(Token = "0x170004E6")]
		public string DisplayName
		{
			[Token(Token = "0x6001400")]
			[Address(RVA = "0x998F58", Offset = "0x998F58", VA = "0x998F58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001401")]
			[Address(RVA = "0x998FB8", Offset = "0x998FB8", VA = "0x998FB8")]
			set
			{
			}
		}

		[Token(Token = "0x170004E7")]
		public JCurveOrGradient CurveOrGradient
		{
			[Token(Token = "0x6001402")]
			[Address(RVA = "0x998FC0", Offset = "0x998FC0", VA = "0x998FC0")]
			get
			{
				return default(JCurveOrGradient);
			}
			[Token(Token = "0x6001403")]
			[Address(RVA = "0x998FC8", Offset = "0x998FC8", VA = "0x998FC8")]
			set
			{
			}
		}

		[Token(Token = "0x170004E8")]
		public AnimationCurve Curve
		{
			[Token(Token = "0x6001404")]
			[Address(RVA = "0x998FD0", Offset = "0x998FD0", VA = "0x998FD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001405")]
			[Address(RVA = "0x99900C", Offset = "0x99900C", VA = "0x99900C")]
			set
			{
			}
		}

		[Token(Token = "0x170004E9")]
		public Gradient Gradient
		{
			[Token(Token = "0x6001406")]
			[Address(RVA = "0x999014", Offset = "0x999014", VA = "0x999014")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001407")]
			[Address(RVA = "0x999088", Offset = "0x999088", VA = "0x999088")]
			set
			{
			}
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x999090", Offset = "0x999090", VA = "0x999090")]
		public float EvaluateFloat(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x9990E8", Offset = "0x9990E8", VA = "0x9990E8")]
		public Color EvaluateColor(float t)
		{
			return default(Color);
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x999118", Offset = "0x999118", VA = "0x999118")]
		public static JAnimatedProperty Create(string name, string displayName, JCurveOrGradient curveOrGradient)
		{
			return null;
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x999198", Offset = "0x999198", VA = "0x999198")]
		public JAnimatedProperty()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public enum JCurveOrGradient
	{
		[Token(Token = "0x400120E")]
		Curve,
		[Token(Token = "0x400120F")]
		Gradient
	}
	[Token(Token = "0x200022C")]
	[ExecuteInEditMode]
	public class JDayNightCycle : MonoBehaviour
	{
		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private JDayNightCycleProfile profile;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private JSky sky;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool useSunPivot;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform sunOrbitPivot;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool useMoonPivot;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform moonOrbitPivot;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float startTime;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float timeIncrement;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool autoTimeIncrement;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float time;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ReflectionProbe environmentProbe;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Cubemap environmentReflection;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int probeRenderId;

		[Token(Token = "0x170004EA")]
		public JDayNightCycleProfile Profile
		{
			[Token(Token = "0x600140C")]
			[Address(RVA = "0x8DFB44", Offset = "0x8DFB44", VA = "0x8DFB44")]
			get
			{
				return null;
			}
			[Token(Token = "0x600140D")]
			[Address(RVA = "0x8DFB4C", Offset = "0x8DFB4C", VA = "0x8DFB4C")]
			set
			{
			}
		}

		[Token(Token = "0x170004EB")]
		public JSky Sky
		{
			[Token(Token = "0x600140E")]
			[Address(RVA = "0x8DFB54", Offset = "0x8DFB54", VA = "0x8DFB54")]
			get
			{
				return null;
			}
			[Token(Token = "0x600140F")]
			[Address(RVA = "0x8DFB5C", Offset = "0x8DFB5C", VA = "0x8DFB5C")]
			set
			{
			}
		}

		[Token(Token = "0x170004EC")]
		public bool UseSunPivot
		{
			[Token(Token = "0x6001410")]
			[Address(RVA = "0x8DFB64", Offset = "0x8DFB64", VA = "0x8DFB64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001411")]
			[Address(RVA = "0x8DFB6C", Offset = "0x8DFB6C", VA = "0x8DFB6C")]
			set
			{
			}
		}

		[Token(Token = "0x170004ED")]
		public Transform SunOrbitPivot
		{
			[Token(Token = "0x6001412")]
			[Address(RVA = "0x8DFB78", Offset = "0x8DFB78", VA = "0x8DFB78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001413")]
			[Address(RVA = "0x8DFB80", Offset = "0x8DFB80", VA = "0x8DFB80")]
			set
			{
			}
		}

		[Token(Token = "0x170004EE")]
		public bool UseMoonPivot
		{
			[Token(Token = "0x6001414")]
			[Address(RVA = "0x8DFB88", Offset = "0x8DFB88", VA = "0x8DFB88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001415")]
			[Address(RVA = "0x8DFB90", Offset = "0x8DFB90", VA = "0x8DFB90")]
			set
			{
			}
		}

		[Token(Token = "0x170004EF")]
		public Transform MoonOrbitPivot
		{
			[Token(Token = "0x6001416")]
			[Address(RVA = "0x8DFB9C", Offset = "0x8DFB9C", VA = "0x8DFB9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001417")]
			[Address(RVA = "0x8DFBA4", Offset = "0x8DFBA4", VA = "0x8DFBA4")]
			set
			{
			}
		}

		[Token(Token = "0x170004F0")]
		public float StartTime
		{
			[Token(Token = "0x6001418")]
			[Address(RVA = "0x8DFBAC", Offset = "0x8DFBAC", VA = "0x8DFBAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001419")]
			[Address(RVA = "0x8DFBB4", Offset = "0x8DFBB4", VA = "0x8DFBB4")]
			set
			{
			}
		}

		[Token(Token = "0x170004F1")]
		public float TimeIncrement
		{
			[Token(Token = "0x600141A")]
			[Address(RVA = "0x8DFC38", Offset = "0x8DFC38", VA = "0x8DFC38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600141B")]
			[Address(RVA = "0x8DFC40", Offset = "0x8DFC40", VA = "0x8DFC40")]
			set
			{
			}
		}

		[Token(Token = "0x170004F2")]
		public bool AutoTimeIncrement
		{
			[Token(Token = "0x600141C")]
			[Address(RVA = "0x8DFCC0", Offset = "0x8DFCC0", VA = "0x8DFCC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600141D")]
			[Address(RVA = "0x8DFCC8", Offset = "0x8DFCC8", VA = "0x8DFCC8")]
			set
			{
			}
		}

		[Token(Token = "0x170004F3")]
		public float Time
		{
			[Token(Token = "0x600141E")]
			[Address(RVA = "0x8DFCD4", Offset = "0x8DFCD4", VA = "0x8DFCD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600141F")]
			[Address(RVA = "0x8DFCE0", Offset = "0x8DFCE0", VA = "0x8DFCE0")]
			set
			{
			}
		}

		[Token(Token = "0x170004F4")]
		private ReflectionProbe EnvironmentProbe
		{
			[Token(Token = "0x6001420")]
			[Address(RVA = "0x8DFD08", Offset = "0x8DFD08", VA = "0x8DFD08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F5")]
		private Cubemap EnvironmentReflection
		{
			[Token(Token = "0x6001421")]
			[Address(RVA = "0x8DFFA0", Offset = "0x8DFFA0", VA = "0x8DFFA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x8E0098", Offset = "0x8E0098", VA = "0x8E0098")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x8E0114", Offset = "0x8E0114", VA = "0x8E0114")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x8E023C", Offset = "0x8E023C", VA = "0x8E023C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x8E0364", Offset = "0x8E0364", VA = "0x8E0364")]
		private void CleanUp()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x8E0560", Offset = "0x8E0560", VA = "0x8E0560")]
		private void OnCameraPreCull(Camera cam)
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x8E0564", Offset = "0x8E0564", VA = "0x8E0564")]
		private void OnBeginFrameRenderingSRP(ScriptableRenderContext context, Camera[] cameras)
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x8E0568", Offset = "0x8E0568", VA = "0x8E0568")]
		private void Update()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x8E058C", Offset = "0x8E058C", VA = "0x8E058C")]
		private void AnimateSky()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x8E0B14", Offset = "0x8E0B14", VA = "0x8E0B14")]
		private void UpdateEnvironmentReflection()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x8E0EF0", Offset = "0x8E0EF0", VA = "0x8E0EF0")]
		public JDayNightCycle()
		{
		}
	}
	[Token(Token = "0x200022D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x56E7E8", Offset = "0x56E7E8")]
	public class JDayNightCycleProfile : ScriptableObject
	{
		[Token(Token = "0x200035C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FAD0", Offset = "0x56FAD0")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JAnimatedProperty p;

			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0x8E1308", Offset = "0x8E1308", VA = "0x8E1308")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0x8E1CBC", Offset = "0x8E1CBC", VA = "0x8E1CBC")]
			internal bool <AddProperty>b__0(JAnimatedProperty p0)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<PropertyInfo> propertiesInfo;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<JAnimatedProperty> animatedProperties;

		[Token(Token = "0x170004F6")]
		private static List<PropertyInfo> PropertiesInfo
		{
			[Token(Token = "0x600142C")]
			[Address(RVA = "0x8E0EF8", Offset = "0x8E0EF8", VA = "0x8E0EF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600142D")]
			[Address(RVA = "0x8E0FD0", Offset = "0x8E0FD0", VA = "0x8E0FD0")]
			set
			{
			}
		}

		[Token(Token = "0x170004F7")]
		public List<JAnimatedProperty> AnimatedProperties
		{
			[Token(Token = "0x6001430")]
			[Address(RVA = "0x8E1118", Offset = "0x8E1118", VA = "0x8E1118")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001431")]
			[Address(RVA = "0x8E118C", Offset = "0x8E118C", VA = "0x8E118C")]
			set
			{
			}
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x8E103C", Offset = "0x8E103C", VA = "0x8E103C")]
		static JDayNightCycleProfile()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x8E1040", Offset = "0x8E1040", VA = "0x8E1040")]
		private static void InitPropertiesInfo()
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x8E1194", Offset = "0x8E1194", VA = "0x8E1194")]
		public void AddProperty(JAnimatedProperty p, bool setDefaultValue = true)
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x8E0C3C", Offset = "0x8E0C3C", VA = "0x8E0C3C")]
		public void Animate(JSky sky, float t)
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x8E1424", Offset = "0x8E1424", VA = "0x8E1424")]
		private void CheckDefaultProfileAndThrow(JSkyProfile p)
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x8E1CB4", Offset = "0x8E1CB4", VA = "0x8E1CB4")]
		public JDayNightCycleProfile()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public static class JCubemapRenderer
	{
		[Token(Token = "0x6001436")]
		[Address(RVA = "0x99B70C", Offset = "0x99B70C", VA = "0x99B70C")]
		public static bool Render(JCubemapRendererArgs args)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200022F")]
	public struct JCubemapRendererArgs
	{
		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575C74", Offset = "0x575C74")]
		private Cubemap <Cubemap>k__BackingField;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575C84", Offset = "0x575C84")]
		private Vector3 <CameraPosition>k__BackingField;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575C94", Offset = "0x575C94")]
		private float <CameraNearPlane>k__BackingField;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575CA4", Offset = "0x575CA4")]
		private float <CameraFarPlane>k__BackingField;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575CB4", Offset = "0x575CB4")]
		private CameraClearFlags <CameraClearFlag>k__BackingField;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575CC4", Offset = "0x575CC4")]
		private Color <CameraBackgroundColor>k__BackingField;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575CD4", Offset = "0x575CD4")]
		private int <Resolution>k__BackingField;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575CE4", Offset = "0x575CE4")]
		private CubemapFace <Face>k__BackingField;

		[Token(Token = "0x170004F8")]
		public Cubemap Cubemap
		{
			[Token(Token = "0x6001437")]
			[Address(RVA = "0x5EDD98", Offset = "0x5EDD98", VA = "0x5EDD98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D41C", Offset = "0x57D41C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001438")]
			[Address(RVA = "0x5EDDA0", Offset = "0x5EDDA0", VA = "0x5EDDA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D42C", Offset = "0x57D42C")]
			set
			{
			}
		}

		[Token(Token = "0x170004F9")]
		public Vector3 CameraPosition
		{
			[Token(Token = "0x6001439")]
			[Address(RVA = "0x5EDDA8", Offset = "0x5EDDA8", VA = "0x5EDDA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D43C", Offset = "0x57D43C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600143A")]
			[Address(RVA = "0x5EDDB4", Offset = "0x5EDDB4", VA = "0x5EDDB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D44C", Offset = "0x57D44C")]
			set
			{
			}
		}

		[Token(Token = "0x170004FA")]
		public float CameraNearPlane
		{
			[Token(Token = "0x600143B")]
			[Address(RVA = "0x5EDDC0", Offset = "0x5EDDC0", VA = "0x5EDDC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D45C", Offset = "0x57D45C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600143C")]
			[Address(RVA = "0x5EDDC8", Offset = "0x5EDDC8", VA = "0x5EDDC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D46C", Offset = "0x57D46C")]
			set
			{
			}
		}

		[Token(Token = "0x170004FB")]
		public float CameraFarPlane
		{
			[Token(Token = "0x600143D")]
			[Address(RVA = "0x5EDDD0", Offset = "0x5EDDD0", VA = "0x5EDDD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D47C", Offset = "0x57D47C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600143E")]
			[Address(RVA = "0x5EDDD8", Offset = "0x5EDDD8", VA = "0x5EDDD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D48C", Offset = "0x57D48C")]
			set
			{
			}
		}

		[Token(Token = "0x170004FC")]
		public CameraClearFlags CameraClearFlag
		{
			[Token(Token = "0x600143F")]
			[Address(RVA = "0x5EDDE0", Offset = "0x5EDDE0", VA = "0x5EDDE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D49C", Offset = "0x57D49C")]
			get
			{
				return default(CameraClearFlags);
			}
			[Token(Token = "0x6001440")]
			[Address(RVA = "0x5EDDE8", Offset = "0x5EDDE8", VA = "0x5EDDE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D4AC", Offset = "0x57D4AC")]
			set
			{
			}
		}

		[Token(Token = "0x170004FD")]
		public Color CameraBackgroundColor
		{
			[Token(Token = "0x6001441")]
			[Address(RVA = "0x5EDDF0", Offset = "0x5EDDF0", VA = "0x5EDDF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D4BC", Offset = "0x57D4BC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001442")]
			[Address(RVA = "0x5EDDFC", Offset = "0x5EDDFC", VA = "0x5EDDFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D4CC", Offset = "0x57D4CC")]
			set
			{
			}
		}

		[Token(Token = "0x170004FE")]
		public int Resolution
		{
			[Token(Token = "0x6001443")]
			[Address(RVA = "0x5EDE08", Offset = "0x5EDE08", VA = "0x5EDE08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D4DC", Offset = "0x57D4DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001444")]
			[Address(RVA = "0x5EDE10", Offset = "0x5EDE10", VA = "0x5EDE10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D4EC", Offset = "0x57D4EC")]
			set
			{
			}
		}

		[Token(Token = "0x170004FF")]
		public CubemapFace Face
		{
			[Token(Token = "0x6001445")]
			[Address(RVA = "0x5EDE18", Offset = "0x5EDE18", VA = "0x5EDE18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D4FC", Offset = "0x57D4FC")]
			get
			{
				return default(CubemapFace);
			}
			[Token(Token = "0x6001446")]
			[Address(RVA = "0x5EDE20", Offset = "0x5EDE20", VA = "0x5EDE20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D50C", Offset = "0x57D50C")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000230")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x56E824", Offset = "0x56E824")]
	public class JDisplayName : Attribute
	{
		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575CF4", Offset = "0x575CF4")]
		private string <DisplayName>k__BackingField;

		[Token(Token = "0x17000500")]
		public string DisplayName
		{
			[Token(Token = "0x6001447")]
			[Address(RVA = "0x8E1D34", Offset = "0x8E1D34", VA = "0x8E1D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D51C", Offset = "0x57D51C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001448")]
			[Address(RVA = "0x8E1D3C", Offset = "0x8E1D3C", VA = "0x8E1D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D52C", Offset = "0x57D52C")]
			set
			{
			}
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x8E1D44", Offset = "0x8E1D44", VA = "0x8E1D44")]
		public JDisplayName(string name)
		{
		}
	}
	[Token(Token = "0x2000231")]
	public static class JInternalMaterials
	{
		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material copyTextureMaterial;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material solidColorMaterial;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Material unlitTextureMaterial;

		[Token(Token = "0x17000501")]
		public static Material CopyTextureMaterial
		{
			[Token(Token = "0x600144A")]
			[Address(RVA = "0x8E1D70", Offset = "0x8E1D70", VA = "0x8E1D70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000502")]
		public static Material SolidColorMaterial
		{
			[Token(Token = "0x600144B")]
			[Address(RVA = "0x8E1E44", Offset = "0x8E1E44", VA = "0x8E1E44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000503")]
		public static Material UnlitTextureMaterial
		{
			[Token(Token = "0x600144C")]
			[Address(RVA = "0x8E1F20", Offset = "0x8E1F20", VA = "0x8E1F20")]
			get
			{
				return null;
			}
		}
	}
	[Serializable]
	[Token(Token = "0x2000232")]
	public struct JInternalShaderSettings
	{
		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Shader skyShader;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private Shader copyTextureShader;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Shader solidColorShader;

		[Token(Token = "0x17000504")]
		public Shader SkyShader
		{
			[Token(Token = "0x600144D")]
			[Address(RVA = "0x5EA128", Offset = "0x5EA128", VA = "0x5EA128")]
			get
			{
				return null;
			}
			[Token(Token = "0x600144E")]
			[Address(RVA = "0x5EA130", Offset = "0x5EA130", VA = "0x5EA130")]
			set
			{
			}
		}

		[Token(Token = "0x17000505")]
		public Shader CopyTextureShader
		{
			[Token(Token = "0x600144F")]
			[Address(RVA = "0x5EA138", Offset = "0x5EA138", VA = "0x5EA138")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001450")]
			[Address(RVA = "0x5EA140", Offset = "0x5EA140", VA = "0x5EA140")]
			set
			{
			}
		}

		[Token(Token = "0x17000506")]
		public Shader SolidColorShader
		{
			[Token(Token = "0x6001451")]
			[Address(RVA = "0x5EA148", Offset = "0x5EA148", VA = "0x5EA148")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001452")]
			[Address(RVA = "0x5EA150", Offset = "0x5EA150", VA = "0x5EA150")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000233")]
	public class JProgressCancelledException : Exception
	{
		[Token(Token = "0x6001453")]
		[Address(RVA = "0x8E3624", Offset = "0x8E3624", VA = "0x8E3624")]
		public JProgressCancelledException()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public enum JRenderPipelineType
	{
		[Token(Token = "0x400122F")]
		Builtin,
		[Token(Token = "0x4001230")]
		Lightweight,
		[Token(Token = "0x4001231")]
		Universal
	}
	[Token(Token = "0x2000235")]
	public static class JUtilities
	{
		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float DELTA_TIME;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Mesh quadMesh;

		[Token(Token = "0x17000507")]
		public static Mesh QuadMesh
		{
			[Token(Token = "0x6001454")]
			[Address(RVA = "0x8E679C", Offset = "0x8E679C", VA = "0x8E679C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001455")]
		public static string ListElementsToString<T>(this IEnumerable<T> list, string separator)
		{
			return null;
		}

		[Token(Token = "0x6001456")]
		public static T[][] CreateJaggedArray<T>(int dimension1, int dimension2)
		{
			return null;
		}

		[Token(Token = "0x6001457")]
		public static T[] To1dArray<T>(T[][] jaggedArray)
		{
			return null;
		}

		[Token(Token = "0x6001458")]
		public static T[] To1dArray<T>(T[,] grid)
		{
			return null;
		}

		[Token(Token = "0x6001459")]
		public static void Fill<T>(T[] array, T value)
		{
		}

		[Token(Token = "0x600145A")]
		public static void CopyTo<T>(T[] src, T[] des)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x8E6938", Offset = "0x8E6938", VA = "0x8E6938")]
		public static int Sum(int[,] array)
		{
			return default(int);
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x8E6A08", Offset = "0x8E6A08", VA = "0x8E6A08")]
		public static int To1DIndex(int x, int z, int width)
		{
			return default(int);
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x8E6A10", Offset = "0x8E6A10", VA = "0x8E6A10")]
		public static bool IsInRange(float number, float minValue, float maxValue)
		{
			return default(bool);
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x8E6A28", Offset = "0x8E6A28", VA = "0x8E6A28")]
		public static bool IsInRangeExclusive(float number, float minValue, float maxValue)
		{
			return default(bool);
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x8E6A40", Offset = "0x8E6A40", VA = "0x8E6A40")]
		public static float GetFraction(float value, float floor, float ceil)
		{
			return default(float);
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x8E6A50", Offset = "0x8E6A50", VA = "0x8E6A50")]
		public static void ClearChildren(Transform t)
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x8E6B0C", Offset = "0x8E6B0C", VA = "0x8E6B0C")]
		public static Gradient CreateFullWhiteGradient()
		{
			return null;
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x8E6C5C", Offset = "0x8E6C5C", VA = "0x8E6C5C")]
		public static Gradient CreateFullTransparentGradient()
		{
			return null;
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x8E6DAC", Offset = "0x8E6DAC", VA = "0x8E6DAC")]
		public static void CalculateBarycentricCoord(Vector2 p, Vector2 p1, Vector2 p2, Vector2 p3, ref Vector3 bary)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x8E6F84", Offset = "0x8E6F84", VA = "0x8E6F84")]
		public static void ExpandTrisUvCoord(Texture2D tex, Vector2[] trisUv)
		{
		}

		[Token(Token = "0x6001465")]
		public static bool ContainIdenticalElements<T>(T[] arr1, T[] arr2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x8E72EC", Offset = "0x8E72EC", VA = "0x8E72EC")]
		public static float GetNearestMultiple(float number, float multipleOf)
		{
			return default(float);
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x8E7324", Offset = "0x8E7324", VA = "0x8E7324")]
		public static Transform GetChildrenWithName(Transform parent, string name)
		{
			return null;
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x8E7460", Offset = "0x8E7460", VA = "0x8E7460")]
		public static void ResetTransform(Transform t, Transform parent)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x8E0490", Offset = "0x8E0490", VA = "0x8E0490")]
		public static void DestroyGameobject(GameObject g)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x8E753C", Offset = "0x8E753C", VA = "0x8E753C")]
		public static void DestroyGameObjectWithUndo(GameObject g)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x8E04F8", Offset = "0x8E04F8", VA = "0x8E04F8")]
		public static void DestroyObject(UnityEngine.Object o)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x8E75A0", Offset = "0x8E75A0", VA = "0x8E75A0")]
		public static string Repeat(char src, int count)
		{
			return null;
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x8E7630", Offset = "0x8E7630", VA = "0x8E7630")]
		public static void MarkCurrentSceneDirty()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x8E7634", Offset = "0x8E7634", VA = "0x8E7634")]
		public static GameObject[] GetChildrenGameObjects(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x8E7750", Offset = "0x8E7750", VA = "0x8E7750")]
		public static Transform[] GetChildrenTransforms(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x8E7860", Offset = "0x8E7860", VA = "0x8E7860")]
		public static Vector3 RotateVectorAroundNormal(Vector3 vector, Vector3 normal, float angleDegree)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x8E6890", Offset = "0x8E6890", VA = "0x8E6890")]
		public static Mesh GetPrimitiveMesh(PrimitiveType type)
		{
			return null;
		}

		[Token(Token = "0x6001472")]
		public static void ShuffleList<T>(List<T> list)
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x8E7A34", Offset = "0x8E7A34", VA = "0x8E7A34")]
		public static int[] GetShuffleIndicesArray(int length)
		{
			return null;
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x8E7B24", Offset = "0x8E7B24", VA = "0x8E7B24")]
		public static int[] GetIndicesArray(int length)
		{
			return null;
		}

		[Token(Token = "0x6001475")]
		public static void ResetArray<T>(ref T[] array, int count, T defaultValue)
		{
		}

		[Token(Token = "0x6001476")]
		public static bool EnsureArrayLength<T>(ref T[] array, int count)
		{
			return default(bool);
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x8E7BBC", Offset = "0x8E7BBC", VA = "0x8E7BBC")]
		public static float GetValueBilinear(float[] data, int width, int height, Vector2 uv)
		{
			return default(float);
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x8E7DCC", Offset = "0x8E7DCC", VA = "0x8E7DCC")]
		public static Color GetColorBilinear(Color[] textureData, int width, int height, Vector2 uv)
		{
			return default(Color);
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x8E8160", Offset = "0x8E8160", VA = "0x8E8160")]
		public static GameObject CreatePreviewGameObject(Mesh m, Material mat, Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x8E8324", Offset = "0x8E8324", VA = "0x8E8324")]
		public static Camera CreatePreviewCamera(GameObject target, float distance, float padding)
		{
			return null;
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x8E865C", Offset = "0x8E865C", VA = "0x8E865C")]
		public static void EnsureDirectoryExists(string dir)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x8E8698", Offset = "0x8E8698", VA = "0x8E8698")]
		public static void SetStaticRecursively(GameObject g, bool isStatic)
		{
		}

		[Token(Token = "0x600147D")]
		public static void EnsureLengthSufficient<T>(List<T> list, int preferredLength) where T : UnityEngine.Object
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x8E869C", Offset = "0x8E869C", VA = "0x8E869C")]
		public static void EnsureLengthSufficient(List<string> list, int preferredLength)
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x8E8758", Offset = "0x8E8758", VA = "0x8E8758")]
		public static void EnsureLengthSufficient(List<bool> list, int preferredLength)
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x8E8804", Offset = "0x8E8804", VA = "0x8E8804")]
		public static string Ellipsis(string s, int length)
		{
			return null;
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x8E8898", Offset = "0x8E8898", VA = "0x8E8898")]
		public static bool IsRectContainPointExclusive(Rect r, Vector2 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x8E8920", Offset = "0x8E8920", VA = "0x8E8920")]
		public static Color GetColor(Color baseColor, float alpha)
		{
			return default(Color);
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x8E8954", Offset = "0x8E8954", VA = "0x8E8954")]
		public static Rect GetRectContainsPoints(params Vector2[] points)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x8E8A00", Offset = "0x8E8A00", VA = "0x8E8A00")]
		public static float InverseLerpUnclamped(float a, float b, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x8E8A20", Offset = "0x8E8A20", VA = "0x8E8A20")]
		public static Vector2 PointToNormalizedUnclampled(Rect r, Vector2 point)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x8E8B34", Offset = "0x8E8B34", VA = "0x8E8B34")]
		public static Rect GetUvRect(Vector2 v0, Vector2 v1, Vector2 v2)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x8E8CF8", Offset = "0x8E8CF8", VA = "0x8E8CF8")]
		public static Gradient Clone(Gradient src)
		{
			return null;
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x8E8DA4", Offset = "0x8E8DA4", VA = "0x8E8DA4")]
		public static AnimationCurve Clone(AnimationCurve src)
		{
			return null;
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x8E8EF0", Offset = "0x8E8EF0", VA = "0x8E8EF0")]
		public static bool IsPointInsideQuadXZ(Vector3 point, Vector3[] quad)
		{
			return default(bool);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x8E9150", Offset = "0x8E9150", VA = "0x8E9150")]
		public static void DestroyMeshArray(Mesh[] meshes)
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x8E9254", Offset = "0x8E9254", VA = "0x8E9254")]
		public static Vector2 FlipY(Vector2 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x8E9288", Offset = "0x8E9288", VA = "0x8E9288")]
		public static bool IsPointInCircumcircle(Vector2 v0, Vector2 v1, Vector2 v2, Vector2 p)
		{
			return default(bool);
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x8E93F4", Offset = "0x8E93F4", VA = "0x8E93F4")]
		public static bool IsPointInCircumcircleXZ(Vector3 v0, Vector3 v1, Vector3 v2, Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x8E9564", Offset = "0x8E9564", VA = "0x8E9564")]
		public static bool AreSetEqual(ushort[] setA, ushort[] setB)
		{
			return default(bool);
		}

		[Token(Token = "0x600148F")]
		public static void Distinct<T>(this List<T> list)
		{
		}

		[Token(Token = "0x6001490")]
		public static void AddIfNotContains<T>(this IList<T> list, IEnumerable<T> items)
		{
		}

		[Token(Token = "0x6001491")]
		public static void AddIfNotContains<T>(this IList<T> list, T item)
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x8E9614", Offset = "0x8E9614", VA = "0x8E9614")]
		public static Vector3 ToX0Y(this Vector2 v)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000236")]
	public static class JVersionInfo
	{
		[Token(Token = "0x17000508")]
		public static string Code
		{
			[Token(Token = "0x6001494")]
			[Address(RVA = "0x8E96A8", Offset = "0x8E96A8", VA = "0x8E96A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000509")]
		public static string ProductName
		{
			[Token(Token = "0x6001495")]
			[Address(RVA = "0x8E96F0", Offset = "0x8E96F0", VA = "0x8E96F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050A")]
		public static string ProductNameAndVersion
		{
			[Token(Token = "0x6001496")]
			[Address(RVA = "0x8E9738", Offset = "0x8E9738", VA = "0x8E9738")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050B")]
		public static string ProductNameShort
		{
			[Token(Token = "0x6001497")]
			[Address(RVA = "0x8E97E8", Offset = "0x8E97E8", VA = "0x8E97E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050C")]
		public static string ProductNameAndVersionShort
		{
			[Token(Token = "0x6001498")]
			[Address(RVA = "0x8E9830", Offset = "0x8E9830", VA = "0x8E9830")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x2000237")]
	public class JTakeScreenshot : MonoBehaviour
	{
		[Token(Token = "0x200035D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FAE0", Offset = "0x56FAE0")]
		private sealed class <CrTakeScreenshot>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JTakeScreenshot <>4__this;

			[Token(Token = "0x4001A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Texture2D <texture>5__2;

			[Token(Token = "0x1700064D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CDD")]
				[Address(RVA = "0x8E672C", Offset = "0x8E672C", VA = "0x8E672C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700064E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CDF")]
				[Address(RVA = "0x8E6794", Offset = "0x8E6794", VA = "0x8E6794", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0x8E613C", Offset = "0x8E613C", VA = "0x8E613C")]
			[DebuggerHidden]
			public <CrTakeScreenshot>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0x8E6170", Offset = "0x8E6170", VA = "0x8E6170", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0x8E6174", Offset = "0x8E6174", VA = "0x8E6174", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0x8E6734", Offset = "0x8E6734", VA = "0x8E6734", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private KeyCode hotKey;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string fileNamePrefix;

		[Token(Token = "0x1700050D")]
		public KeyCode HotKey
		{
			[Token(Token = "0x6001499")]
			[Address(RVA = "0x8E6008", Offset = "0x8E6008", VA = "0x8E6008")]
			get
			{
				return default(KeyCode);
			}
			[Token(Token = "0x600149A")]
			[Address(RVA = "0x8E6010", Offset = "0x8E6010", VA = "0x8E6010")]
			set
			{
			}
		}

		[Token(Token = "0x1700050E")]
		public string FileNamePrefix
		{
			[Token(Token = "0x600149B")]
			[Address(RVA = "0x8E6018", Offset = "0x8E6018", VA = "0x8E6018")]
			get
			{
				return null;
			}
			[Token(Token = "0x600149C")]
			[Address(RVA = "0x8E6020", Offset = "0x8E6020", VA = "0x8E6020")]
			set
			{
			}
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x8E6028", Offset = "0x8E6028", VA = "0x8E6028")]
		private void Reset()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x8E6080", Offset = "0x8E6080", VA = "0x8E6080")]
		private void Update()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x8E60CC", Offset = "0x8E60CC", VA = "0x8E60CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57D58C", Offset = "0x57D58C")]
		private IEnumerator CrTakeScreenshot()
		{
			return null;
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x8E6168", Offset = "0x8E6168", VA = "0x8E6168")]
		public JTakeScreenshot()
		{
		}
	}
}
namespace AS.MicControl
{
	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56E868", Offset = "0x56E868")]
	public class MicControlC : MonoBehaviour
	{
		[Token(Token = "0x200035E")]
		public enum freqList
		{
			[Token(Token = "0x4001A8E")]
			_44100HzCD,
			[Token(Token = "0x4001A8F")]
			_48000HzDVD,
			[Token(Token = "0x4001A90")]
			_96000HzStudio,
			[Token(Token = "0x4001A91")]
			_192000HzStudio
		}

		[Token(Token = "0x200035F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FAF0", Offset = "0x56FAF0")]
		private sealed class <yieldedStart>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MicControlC <>4__this;

			[Token(Token = "0x1700064F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CE3")]
				[Address(RVA = "0xBD1E74", Offset = "0xBD1E74", VA = "0xBD1E74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000650")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CE5")]
				[Address(RVA = "0xBD1EDC", Offset = "0xBD1EDC", VA = "0xBD1EDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0xBD0C74", Offset = "0xBD0C74", VA = "0xBD0C74")]
			[DebuggerHidden]
			public <yieldedStart>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001CE1")]
			[Address(RVA = "0xBD1CAC", Offset = "0xBD1CAC", VA = "0xBD1CAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0xBD1CB0", Offset = "0xBD1CB0", VA = "0xBD1CB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0xBD1E7C", Offset = "0xBD1E7C", VA = "0xBD1E7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FB00", Offset = "0x56FB00")]
		private sealed class <StartMicrophone>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MicControlC <>4__this;

			[Token(Token = "0x17000651")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CE9")]
				[Address(RVA = "0xBD1C3C", Offset = "0xBD1C3C", VA = "0xBD1C3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000652")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CEB")]
				[Address(RVA = "0xBD1CA4", Offset = "0xBD1CA4", VA = "0xBD1CA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CE6")]
			[Address(RVA = "0xBD1664", Offset = "0xBD1664", VA = "0xBD1664")]
			[DebuggerHidden]
			public <StartMicrophone>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0xBD19C8", Offset = "0xBD19C8", VA = "0xBD19C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0xBD19CC", Offset = "0xBD19CC", VA = "0xBD19CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CEA")]
			[Address(RVA = "0xBD1C44", Offset = "0xBD1C44", VA = "0xBD1C44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enableSpectrumData;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool useDefaultMic;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool pointer_ShowDeviceName;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool pointer_SetDeviceSlot;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int InputDevice;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string selectedDevice;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool pointer_advanced;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool pointer_spectrumDropdown;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource audioSource;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int amountSamples;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float loudness;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float rawInput;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float[] spectrumData;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve spectrumCurve;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float sensitivity;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector2 minMaxSensitivity;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool remapRange;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector4 minMaxRange;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int bufferTime;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public freqList freq;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int setFrequency;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool Mute;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		public bool debug;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
		private bool recording;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
		public bool focused;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool Initialized;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool doNotDestroyOnLoad;

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xBD0BD8", Offset = "0xBD0BD8", VA = "0xBD0BD8")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xBD0C04", Offset = "0xBD0C04", VA = "0xBD0C04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57D5F0", Offset = "0x57D5F0")]
		private IEnumerator yieldedStart()
		{
			return null;
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xBD0CA0", Offset = "0xBD0CA0", VA = "0xBD0CA0")]
		private void Update()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xBD1388", Offset = "0xBD1388", VA = "0xBD1388")]
		public float GetDataStream()
		{
			return default(float);
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xBD14A8", Offset = "0xBD14A8", VA = "0xBD14A8")]
		public float[] GetSpectrumAnalysis()
		{
			return null;
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xBD100C", Offset = "0xBD100C", VA = "0xBD100C")]
		public void InitMic()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xBD15F4", Offset = "0xBD15F4", VA = "0xBD15F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57D654", Offset = "0x57D654")]
		public IEnumerator StartMicrophone()
		{
			return null;
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xBD1344", Offset = "0xBD1344", VA = "0xBD1344")]
		public void StopMicrophone()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xBD1690", Offset = "0xBD1690", VA = "0xBD1690")]
		private void GetMicCaps()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xBD1854", Offset = "0xBD1854", VA = "0xBD1854")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xBD1894", Offset = "0xBD1894", VA = "0xBD1894")]
		private void OnApplicationPause(bool focus)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xBD18D8", Offset = "0xBD18D8", VA = "0xBD18D8")]
		private void OnApplicationExit(bool focus)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xBD0FD4", Offset = "0xBD0FD4", VA = "0xBD0FD4")]
		public bool LoadingLevel()
		{
			return default(bool);
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xBD1918", Offset = "0xBD1918", VA = "0xBD1918")]
		public MicControlC()
		{
		}
	}
}
namespace MTAssets.UltimateLODSystem
{
	[Token(Token = "0x2000239")]
	public class ChangeLodAutoManagement : MonoBehaviour
	{
		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text buttonText;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text explanation;

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x73A584", Offset = "0x73A584", VA = "0x73A584")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x73A738", Offset = "0x73A738", VA = "0x73A738")]
		public void buttonEnableAutoManagement()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x73A830", Offset = "0x73A830", VA = "0x73A830")]
		public ChangeLodAutoManagement()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class RuntimeScanDemo : MonoBehaviour
	{
		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UltimateLevelOfDetail ulodOfScene;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text buttonText;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject buttonObj;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text scanStatus;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Animator cameraAnimator;

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xBADA60", Offset = "0xBADA60", VA = "0xBADA60")]
		private void Start()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xBADB38", Offset = "0xBADB38", VA = "0xBADB38")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xBADC50", Offset = "0xBADC50", VA = "0xBADC50")]
		public void StartUndoScan()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xBADF60", Offset = "0xBADF60", VA = "0xBADF60")]
		public RuntimeScanDemo()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xBADF68", Offset = "0xBADF68", VA = "0xBADF68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D6B8", Offset = "0x57D6B8")]
		private void <Start>b__5_0()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xBAE000", Offset = "0xBAE000", VA = "0xBAE000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D6C8", Offset = "0x57D6C8")]
		private void <Start>b__5_1()
		{
		}
	}
	[Token(Token = "0x200023B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56E8CC", Offset = "0x56E8CC")]
	public class MTAssetsEditorUi : MonoBehaviour
	{
		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x73A8A8", Offset = "0x73A8A8", VA = "0x73A8A8")]
		public MTAssetsEditorUi()
		{
		}
	}
	[Token(Token = "0x200023C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56E904", Offset = "0x56E904")]
	public class MTAssetsMathematics : MonoBehaviour
	{
		[Token(Token = "0x60014B9")]
		public static List<T> RandomizeThisList<T>(List<T> list)
		{
			return null;
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x73A8B0", Offset = "0x73A8B0", VA = "0x73A8B0")]
		public static Vector3 GetHalfPositionBetweenTwoPoints(Vector3 pointA, Vector3 pointB)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x73A95C", Offset = "0x73A95C", VA = "0x73A95C")]
		public MTAssetsMathematics()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public static class ListMethodsExtensions
	{
		[Token(Token = "0x60014BC")]
		public static void RemoveAllNullItems<T>(this List<T> list)
		{
		}
	}
	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56E94C", Offset = "0x56E94C")]
	public class CurrentRenderPipeline : MonoBehaviour
	{
		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool haveAnotherSrpPackages;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string packageDetected;

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x73A838", Offset = "0x73A838", VA = "0x73A838")]
		public CurrentRenderPipeline()
		{
		}
	}
	[Token(Token = "0x200023F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56E984", Offset = "0x56E984")]
	public class RuntimeCameraDetector : MonoBehaviour
	{
		[Token(Token = "0x2000361")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FB10", Offset = "0x56FB10")]
		private sealed class <ArrayOfCamerasDelayedUpdater>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RuntimeCameraDetector <>4__this;

			[Token(Token = "0x17000653")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CEF")]
				[Address(RVA = "0xBAD4B4", Offset = "0xBAD4B4", VA = "0xBAD4B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000654")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CF1")]
				[Address(RVA = "0xBAD51C", Offset = "0xBAD51C", VA = "0xBAD51C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CEC")]
			[Address(RVA = "0xBAD338", Offset = "0xBAD338", VA = "0xBAD338")]
			[DebuggerHidden]
			public <ArrayOfCamerasDelayedUpdater>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001CED")]
			[Address(RVA = "0xBAD43C", Offset = "0xBAD43C", VA = "0xBAD43C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0xBAD440", Offset = "0xBAD440", VA = "0xBAD440", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CF0")]
			[Address(RVA = "0xBAD4BC", Offset = "0xBAD4BC", VA = "0xBAD4BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000362")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FB20", Offset = "0x56FB20")]
		private sealed class <CurrentCameraOnScreenDetector>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RuntimeCameraDetector <>4__this;

			[Token(Token = "0x17000655")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CF5")]
				[Address(RVA = "0xBAD898", Offset = "0xBAD898", VA = "0xBAD898", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000656")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CF7")]
				[Address(RVA = "0xBAD900", Offset = "0xBAD900", VA = "0xBAD900", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CF2")]
			[Address(RVA = "0xBAD364", Offset = "0xBAD364", VA = "0xBAD364")]
			[DebuggerHidden]
			public <CurrentCameraOnScreenDetector>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001CF3")]
			[Address(RVA = "0xBAD524", Offset = "0xBAD524", VA = "0xBAD524", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0xBAD528", Offset = "0xBAD528", VA = "0xBAD528", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0xBAD8A0", Offset = "0xBAD8A0", VA = "0xBAD8A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WaitForSecondsRealtime DELAY_BETWEEN_ARRAY_OF_CAMERAS_UPDATE;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WaitForSecondsRealtime DELAY_BETWEEN_CURRENT_CAMERA_DETECTOR;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera[] currentArrayOfCameras;

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xBAD204", Offset = "0xBAD204", VA = "0xBAD204")]
		public void Awake()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xBAD258", Offset = "0xBAD258", VA = "0xBAD258")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57D6E8", Offset = "0x57D6E8")]
		private IEnumerator ArrayOfCamerasDelayedUpdater()
		{
			return null;
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xBAD2C8", Offset = "0xBAD2C8", VA = "0xBAD2C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57D74C", Offset = "0x57D74C")]
		private IEnumerator CurrentCameraOnScreenDetector()
		{
			return null;
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xBAD390", Offset = "0xBAD390", VA = "0xBAD390")]
		public RuntimeCameraDetector()
		{
		}
	}
	[Token(Token = "0x2000240")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56E9BC", Offset = "0x56E9BC")]
	public class RuntimeInstancesDetector : MonoBehaviour
	{
		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<UltimateLevelOfDetail> instancesOfUlodInThisScene;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public List<UltimateLevelOfDetailOptimizer> instancesOfUlodOptimizerInThisScene;

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xBAD908", Offset = "0xBAD908", VA = "0xBAD908")]
		public void RegisterNewUlodOptimizerInThisScene(UltimateLevelOfDetailOptimizer optimizer)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xBAD9C8", Offset = "0xBAD9C8", VA = "0xBAD9C8")]
		public RuntimeInstancesDetector()
		{
		}
	}
	[Token(Token = "0x2000241")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56E9F4", Offset = "0x56E9F4")]
	[ExecuteInEditMode]
	public class UltimateLevelOfDetail : MonoBehaviour
	{
		[Token(Token = "0x2000363")]
		public enum ScanMeshesMode
		{
			[Token(Token = "0x4001A9F")]
			ScanInChildrenGameObjectsOnly,
			[Token(Token = "0x4001AA0")]
			ScanInThisGameObjectOnly
		}

		[Token(Token = "0x2000364")]
		public enum ForceOfSimplification
		{
			[Token(Token = "0x4001AA2")]
			Normal,
			[Token(Token = "0x4001AA3")]
			Strong,
			[Token(Token = "0x4001AA4")]
			VeryStrong,
			[Token(Token = "0x4001AA5")]
			ExtremelyStrong,
			[Token(Token = "0x4001AA6")]
			Destroyer
		}

		[Token(Token = "0x2000365")]
		public enum CullingMode
		{
			[Token(Token = "0x4001AA8")]
			Disabled,
			[Token(Token = "0x4001AA9")]
			CullingMeshes,
			[Token(Token = "0x4001AAA")]
			CullingRenderer
		}

		[Token(Token = "0x2000366")]
		public enum CameraDetectionMode
		{
			[Token(Token = "0x4001AAC")]
			CurrentCamera,
			[Token(Token = "0x4001AAD")]
			MainCamera,
			[Token(Token = "0x4001AAE")]
			CustomCamera
		}

		[Serializable]
		[Token(Token = "0x2000367")]
		public class ScannedMeshItem
		{
			[Serializable]
			[Token(Token = "0x2000393")]
			public class MeshMaterials
			{
				[Token(Token = "0x4001B95")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Material[] materialArray;

				[Token(Token = "0x6001D75")]
				[Address(RVA = "0xBB2F8C", Offset = "0xBB2F8C", VA = "0xBB2F8C")]
				public MeshMaterials()
				{
				}
			}

			[Token(Token = "0x4001AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject originalGameObject;

			[Token(Token = "0x4001AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SkinnedMeshRenderer originalSkinnedMeshRenderer;

			[Token(Token = "0x4001AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshFilter originalMeshFilter;

			[Token(Token = "0x4001AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MeshRenderer originalMeshRenderer;

			[Token(Token = "0x4001AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Mesh[] allMeshLods;

			[Token(Token = "0x4001AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string[] allMeshLodsPaths;

			[Token(Token = "0x4001AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool canChangeMaterialsOnThisMeshLods;

			[Token(Token = "0x4001AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public MeshMaterials[] allMeshLodsMaterials;

			[Token(Token = "0x4001AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public UltimateLevelOfDetailMeshes originalMeshLodsManager;

			[Token(Token = "0x4001AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Mesh beforeCullingData_lastMeshOfThis;

			[Token(Token = "0x4001AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public bool beforeCullingData_isForcedToRenderizationOff;

			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0xBB2E10", Offset = "0xBB2E10", VA = "0xBB2E10")]
			public void InitializeAllMeshLodsMaterialsArray()
			{
			}

			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0xBB2D80", Offset = "0xBB2D80", VA = "0xBB2D80")]
			public ScannedMeshItem()
			{
			}
		}

		[Token(Token = "0x2000368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FB30", Offset = "0x56FB30")]
		private sealed class <ScanForMeshesAndGenerateAllLodGroups_AsyncProcessing>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UltimateLevelOfDetail <>4__this;

			[Token(Token = "0x4001ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<MeshFilter> <meshFiltersFound>5__2;

			[Token(Token = "0x4001ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<ScannedMeshItem> <scannedMeshItems>5__3;

			[Token(Token = "0x4001ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <currentMesh>5__4;

			[Token(Token = "0x4001AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <currentLod>5__5;

			[Token(Token = "0x4001AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<SkinnedMeshRenderer>.Enumerator <>7__wrap5;

			[Token(Token = "0x4001AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private SkinnedMeshRenderer <smr>5__7;

			[Token(Token = "0x4001AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private long <ticks>5__8;

			[Token(Token = "0x4001AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private ScannedMeshItem <thisScannedMeshItem>5__9;

			[Token(Token = "0x4001AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <i>5__10;

			[Token(Token = "0x4001AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private List<MeshFilter>.Enumerator <>7__wrap10;

			[Token(Token = "0x4001AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private MeshFilter <mf>5__12;

			[Token(Token = "0x17000657")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CFF")]
				[Address(RVA = "0xBB2F1C", Offset = "0xBB2F1C", VA = "0xBB2F1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000658")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D01")]
				[Address(RVA = "0xBB2F84", Offset = "0xBB2F84", VA = "0xBB2F84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0xBAE798", Offset = "0xBAE798", VA = "0xBAE798")]
			[DebuggerHidden]
			public <ScanForMeshesAndGenerateAllLodGroups_AsyncProcessing>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0xBB191C", Offset = "0xBB191C", VA = "0xBB191C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0xBB1A08", Offset = "0xBB1A08", VA = "0xBB1A08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0xBB1958", Offset = "0xBB1958", VA = "0xBB1958")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0xBB19B0", Offset = "0xBB19B0", VA = "0xBB19B0")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001D00")]
			[Address(RVA = "0xBB2F24", Offset = "0xBB2F24", VA = "0xBB2F24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000369")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FB40", Offset = "0x56FB40")]
		private sealed class <OnRenderObject_HookEmulationForHDRP>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UltimateLevelOfDetail <>4__this;

			[Token(Token = "0x4001ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForEndOfFrame <waitForEndOfFrame>5__2;

			[Token(Token = "0x17000659")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D05")]
				[Address(RVA = "0xBB18AC", Offset = "0xBB18AC", VA = "0xBB18AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700065A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D07")]
				[Address(RVA = "0xBB1914", Offset = "0xBB1914", VA = "0xBB1914", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D02")]
			[Address(RVA = "0xBB01B4", Offset = "0xBB01B4", VA = "0xBB01B4")]
			[DebuggerHidden]
			public <OnRenderObject_HookEmulationForHDRP>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6001D03")]
			[Address(RVA = "0xBB17DC", Offset = "0xBB17DC", VA = "0xBB17DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D04")]
			[Address(RVA = "0xBB17E0", Offset = "0xBB17E0", VA = "0xBB17E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D06")]
			[Address(RVA = "0xBB18B4", Offset = "0xBB18B4", VA = "0xBB18B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WaitForEndOfFrame WAIT_FOR_END_OF_FRAME;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera cacheOfMainCamera;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject cacheOfUlodData;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RuntimeInstancesDetector cacheOfUlodDataRuntimeInstancesDetector;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float lastDistanceFromMainCamera;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int currentLodAccordingToDistance;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float currentDistanceFromMainCamera;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float currentRealDistanceFromMainCamera;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool forcedToDisableLodsOfThisComponent;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int forcedToShowOnlyALodIndependentOfDistance;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public List<ScannedMeshItem> currentScannedMeshesList;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public ScanMeshesMode modeOfMeshesScanning;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public bool scanInactiveGameObjects;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public List<GameObject> gameObjectsToIgnore;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public int levelsOfDetailToGenerate;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public float[] percentOfVerticesForEachLod;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public bool saveGeneratedLodsInAssets;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[HideInInspector]
		public bool skinnedAnimsCompatibilityMode;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[HideInInspector]
		public bool preventArtifacts;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		[HideInInspector]
		public bool optimizeResultingMeshes;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public bool enableLightmapsSupport;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		[HideInInspector]
		public bool enableMaterialsChanges;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public ForceOfSimplification forceOfSimplification;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[HideInInspector]
		public CullingMode cullingMode;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		[SerializeField]
		private Transform _customPivotToSimulateLods;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public CameraDetectionMode cameraDetectionMode;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[HideInInspector]
		public bool useCacheForMainCameraInDetection;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Camera customCameraForSimulationOfLods;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public float[] minDistanceOfViewForEachLod;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public float minDistanceOfViewForCull;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UnityEvent onDoneScan;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UnityEvent onUndoScan;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public bool forceChangeLodsOfSkinnedInEditor;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		[HideInInspector]
		public bool drawGizmoOnThisPivot;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public Color colorOfGizmo;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		public float sizeOfGizmo;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public bool forceShowHiddenSettings;

		[Token(Token = "0x1700050F")]
		public Transform customPivotToSimulateLods
		{
			[Token(Token = "0x60014C5")]
			[Address(RVA = "0xBAE098", Offset = "0xBAE098", VA = "0xBAE098")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C6")]
			[Address(RVA = "0xBAE0A0", Offset = "0xBAE0A0", VA = "0xBAE0A0")]
			set
			{
			}
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xBAE1A0", Offset = "0xBAE1A0", VA = "0xBAE1A0")]
		private void ValidateAllParameters(bool isGoingToScan)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xBAE42C", Offset = "0xBAE42C", VA = "0xBAE42C")]
		private void CreateHierarchyOfFoldersIfNotExists()
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xBAE430", Offset = "0xBAE430", VA = "0xBAE430")]
		private string SaveGeneratedLodInAssets(string lodNumber, long ticks, Mesh generatedLodMesh)
		{
			return null;
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xBAE478", Offset = "0xBAE478", VA = "0xBAE478")]
		private Mesh GetGeneratedLodForThisMesh(Mesh originalMesh, float percentOfVertices, bool isSkinnedMesh)
		{
			return null;
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xBAE608", Offset = "0xBAE608", VA = "0xBAE608")]
		private Material[] GetCopyOfExistentArrayOfMaterials(Material[] sourceArray)
		{
			return null;
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xBAE6F8", Offset = "0xBAE6F8", VA = "0xBAE6F8")]
		private void ScanForMeshesAndGenerateAllLodGroups_StartProcessing(bool showProgressBar)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xBAE728", Offset = "0xBAE728", VA = "0xBAE728")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57D7B0", Offset = "0x57D7B0")]
		private IEnumerator ScanForMeshesAndGenerateAllLodGroups_AsyncProcessing(bool showProgressBar)
		{
			return null;
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xBAE7C4", Offset = "0xBAE7C4", VA = "0xBAE7C4")]
		private void UndoAllMeshesScannedAndAllLodGroups(bool showProgressBar, bool deleteAllGeneratedMeshes, bool runMonoIl2CppGc, bool runUnityGc)
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xBAEC20", Offset = "0xBAEC20", VA = "0xBAEC20")]
		private bool isLodsSimulationEnabledInThisSceneForEditorSceneViewMode()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xBAEC28", Offset = "0xBAEC28", VA = "0xBAEC28")]
		private Camera GetLastActiveSceneViewCamera()
		{
			return null;
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xBAEC30", Offset = "0xBAEC30", VA = "0xBAEC30")]
		private void CullThisLodMeshOfRenderer(ScannedMeshItem meshItem)
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xBAEEC0", Offset = "0xBAEEC0", VA = "0xBAEEC0")]
		private void UncullThisLodMeshOfRenderer(ScannedMeshItem meshItem)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xBAF0E8", Offset = "0xBAF0E8", VA = "0xBAF0E8")]
		private void ChangeLodMeshAndMaterialsOfRenderer(ScannedMeshItem meshItem, int lodLevel)
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xBAF34C", Offset = "0xBAF34C", VA = "0xBAF34C")]
		private void CalculateCorrectLodForDistanceBeforeChange(float distance)
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xBAF69C", Offset = "0xBAF69C", VA = "0xBAF69C")]
		public void OnRenderObject()
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xBAFF2C", Offset = "0xBAFF2C", VA = "0xBAFF2C")]
		public void Awake()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xBB0144", Offset = "0xBB0144", VA = "0xBB0144")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57D814", Offset = "0x57D814")]
		private IEnumerator OnRenderObject_HookEmulationForHDRP()
		{
			return null;
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xBB01E0", Offset = "0xBB01E0", VA = "0xBB01E0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xBB02C8", Offset = "0xBB02C8", VA = "0xBB02C8")]
		public int GetCurrentLodLevel()
		{
			return default(int);
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xBB03A8", Offset = "0xBB03A8", VA = "0xBB03A8")]
		public float GetCurrentCameraDistance()
		{
			return default(float);
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xBB03B0", Offset = "0xBB03B0", VA = "0xBB03B0")]
		public float GetCurrentRealCameraDistance()
		{
			return default(float);
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xBB0340", Offset = "0xBB0340", VA = "0xBB0340")]
		public int GetNumberOfLodsGenerated()
		{
			return default(int);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xBB03B8", Offset = "0xBB03B8", VA = "0xBB03B8")]
		public bool isScannedMeshesCurrentCulled()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xBB03C8", Offset = "0xBB03C8", VA = "0xBB03C8")]
		public UltimateLevelOfDetailMeshes[] GetListOfAllMeshesScanned()
		{
			return null;
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xBB0520", Offset = "0xBB0520", VA = "0xBB0520")]
		public void ForceShowLod(bool force, int level)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xBB0644", Offset = "0xBB0644", VA = "0xBB0644")]
		public bool isThisComponentForcedToShowLod()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xBB0654", Offset = "0xBB0654", VA = "0xBB0654")]
		public void ForceDisableLodChangesInThisComponent(bool force)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xBB0660", Offset = "0xBB0660", VA = "0xBB0660")]
		public bool isThisComponentForcedToDisableLodChanges()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xBB0668", Offset = "0xBB0668", VA = "0xBB0668")]
		public void ForceThisComponentToUpdateLodsRender()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xBADBEC", Offset = "0xBADBEC", VA = "0xBADBEC")]
		public bool isMeshesCurrentScannedAndLodsWorkingInThisComponent()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xBADE64", Offset = "0xBADE64", VA = "0xBADE64")]
		public void ScanAllMeshesAndGenerateLodsGroups()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xBADD54", Offset = "0xBADD54", VA = "0xBADD54")]
		public void UndoCurrentScanWorkingAndDeleteGeneratedMeshes(bool runMonoIl2CppGc, bool runUnityGc)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xBB06B8", Offset = "0xBB06B8", VA = "0xBB06B8")]
		public UltimateLevelOfDetail[] GetListOfAllUlodsInThisScene()
		{
			return null;
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xBB0764", Offset = "0xBB0764", VA = "0xBB0764")]
		public UltimateLevelOfDetailOptimizer[] GetListOfAllUlodsOptimizerInThisScene()
		{
			return null;
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xBB0824", Offset = "0xBB0824", VA = "0xBB0824")]
		public void SetNewCustomCameraForThisAndAllUlodsInThisScene(Camera newCustomCamera)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xBB0970", Offset = "0xBB0970", VA = "0xBB0970")]
		public void ConvertThisToDefaultUnityLods()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xBB166C", Offset = "0xBB166C", VA = "0xBB166C")]
		public UltimateLevelOfDetail()
		{
		}
	}
	[Token(Token = "0x2000242")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56EA40", Offset = "0x56EA40")]
	public class UltimateLevelOfDetailGlobal : MonoBehaviour
	{
		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool enableGlobalUlodSystem;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float lodDistanceMultiplier;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Camera currentCameraThatIsOnTopOfScreenInThisScene;

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xBB2FEC", Offset = "0xBB2FEC", VA = "0xBB2FEC")]
		public static bool isGlobalULodSystemEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xBB3054", Offset = "0xBB3054", VA = "0xBB3054")]
		public static void EnableGlobalULodSystem(bool enable)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xBB30C4", Offset = "0xBB30C4", VA = "0xBB30C4")]
		public static void SetGlobalLodDistanceMultiplier(float multiplier)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xBB3138", Offset = "0xBB3138", VA = "0xBB3138")]
		public static float GetGlobalLodDistanceMultiplier()
		{
			return default(float);
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xBB31A0", Offset = "0xBB31A0", VA = "0xBB31A0")]
		public static Mesh GetSimplifiedVersionOfThisMesh(Mesh meshToSimplify, bool isSkinnedMesh, bool skinnedAnimsCompatibilityMode, bool simplificationDestroyerMode, bool preventArtifacts, float percentOfVerticesOfSimplifyiedVersion)
		{
			return null;
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xBB3300", Offset = "0xBB3300", VA = "0xBB3300")]
		public UltimateLevelOfDetailGlobal()
		{
		}
	}
	[Token(Token = "0x2000243")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56EA78", Offset = "0x56EA78")]
	public class UltimateLevelOfDetailMeshes : MonoBehaviour
	{
		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public UltimateLevelOfDetail responsibleUlod;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int idOfOriginalMeshItemOfThisInResponsibleUlod;

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xBB3378", Offset = "0xBB3378", VA = "0xBB3378")]
		public UltimateLevelOfDetail GetResponsibleUlodComponent()
		{
			return null;
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xBB3380", Offset = "0xBB3380", VA = "0xBB3380")]
		public int GetQuantityOfLods()
		{
			return default(int);
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xBB339C", Offset = "0xBB339C", VA = "0xBB339C")]
		public void SetMeshOfThisLodGroup(int level, Mesh newMesh)
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xBB3508", Offset = "0xBB3508", VA = "0xBB3508")]
		public Mesh GetMeshOfThisLodGroup(int level)
		{
			return null;
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xBB35FC", Offset = "0xBB35FC", VA = "0xBB35FC")]
		public bool isMaterialChangesEnabledForThisMesh()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xBB3618", Offset = "0xBB3618", VA = "0xBB3618")]
		public void SetMaterialArrayOfThisLodGroup(int level, Material[] newMaterialArray)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xBB379C", Offset = "0xBB379C", VA = "0xBB379C")]
		public Material[] GetMaterialArrayOfThisLodGroup(int level)
		{
			return null;
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xBB38CC", Offset = "0xBB38CC", VA = "0xBB38CC")]
		public UltimateLevelOfDetailMeshes()
		{
		}
	}
	[Token(Token = "0x2000244")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56EAB0", Offset = "0x56EAB0")]
	public class UltimateLevelOfDetailOptimizer : MonoBehaviour
	{
		[Token(Token = "0x200036A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FB50", Offset = "0x56FB50")]
		private sealed class <UlodOptimizationLoop>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UltimateLevelOfDetailOptimizer <>4__this;

			[Token(Token = "0x4001ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x4001AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<UltimateLevelOfDetail>.Enumerator <>7__wrap2;

			[Token(Token = "0x1700065B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D0C")]
				[Address(RVA = "0xBB47EC", Offset = "0xBB47EC", VA = "0xBB47EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700065C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D0E")]
				[Address(RVA = "0xBB4854", Offset = "0xBB4854", VA = "0xBB4854", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D08")]
			[Address(RVA = "0xBB3AAC", Offset = "0xBB3AAC", VA = "0xBB3AAC")]
			[DebuggerHidden]
			public <UlodOptimizationLoop>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001D09")]
			[Address(RVA = "0xBB3BC0", Offset = "0xBB3BC0", VA = "0xBB3BC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D0A")]
			[Address(RVA = "0xBB3C34", Offset = "0xBB3C34", VA = "0xBB3C34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0xBB3BDC", Offset = "0xBB3BDC", VA = "0xBB3BDC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0xBB47F4", Offset = "0xBB47F4", VA = "0xBB47F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WaitForSecondsRealtime DELAY_BETWEEN_OPTIMIZATION_UPDATES;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WaitForSecondsRealtime DELAY_BETWEEN_GAMEOBJECTS_STATE_CHANGE;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float ADITIONAL_CULLING_DISTANCE_OFFSET;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RuntimeInstancesDetector runtimeInstancesDetector;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] instructionsToMakeOnUlods;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool enableOptimizationTasks;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public List<UltimateLevelOfDetail> ulodsToBeIgnored;

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xBB38DC", Offset = "0xBB38DC", VA = "0xBB38DC")]
		public void Awake()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xBB3978", Offset = "0xBB3978", VA = "0xBB3978")]
		private bool isThisUlodPresentOnUlodsToBeIgnored(UltimateLevelOfDetail ulod)
		{
			return default(bool);
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xBB3908", Offset = "0xBB3908", VA = "0xBB3908")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57D878", Offset = "0x57D878")]
		private IEnumerator UlodOptimizationLoop()
		{
			return null;
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xBB3AD8", Offset = "0xBB3AD8", VA = "0xBB3AD8")]
		public UltimateLevelOfDetailOptimizer()
		{
		}
	}
	[Token(Token = "0x2000245")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56EAE8", Offset = "0x56EAE8")]
	public class UltimateLevelOfDetailPivot : MonoBehaviour
	{
		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public UltimateLevelOfDetail targetUlodToChangePivot;

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xBB485C", Offset = "0xBB485C", VA = "0xBB485C")]
		public UltimateLevelOfDetailPivot()
		{
		}
	}
}
namespace MTAssets.UltimateLODSystem.MeshSimplifier
{
	[Serializable]
	[StructLayout(3)]
	[Token(Token = "0x2000246")]
	public struct BlendShape
	{
		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string ShapeName;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public BlendShapeFrame[] Frames;

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x5E603C", Offset = "0x5E603C", VA = "0x5E603C")]
		public BlendShape(string shapeName, BlendShapeFrame[] frames)
		{
		}
	}
	[Serializable]
	[StructLayout(3)]
	[Token(Token = "0x2000247")]
	public struct BlendShapeFrame
	{
		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float FrameWeight;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3[] DeltaVertices;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] DeltaNormals;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] DeltaTangents;

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x5E6044", Offset = "0x5E6044", VA = "0x5E6044")]
		public BlendShapeFrame(float frameWeight, Vector3[] deltaVertices, Vector3[] deltaNormals, Vector3[] deltaTangents)
		{
		}
	}
	[Token(Token = "0x2000248")]
	public static class MathHelper
	{
		[Token(Token = "0x4001297")]
		public const float PI = (float)Math.PI;

		[Token(Token = "0x4001298")]
		public const double PId = Math.PI;

		[Token(Token = "0x4001299")]
		public const float Deg2Rad = (float)Math.PI / 180f;

		[Token(Token = "0x400129A")]
		public const double Deg2Radd = Math.PI / 180.0;

		[Token(Token = "0x400129B")]
		public const float Rad2Deg = 180f / (float)Math.PI;

		[Token(Token = "0x400129C")]
		public const double Rad2Degd = 180.0 / Math.PI;

		[MethodImpl(256)]
		[Token(Token = "0x6001502")]
		[Address(RVA = "0x73BD34", Offset = "0x73BD34", VA = "0x73BD34")]
		public static double Min(double val1, double val2, double val3)
		{
			return default(double);
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001503")]
		[Address(RVA = "0x73BD54", Offset = "0x73BD54", VA = "0x73BD54")]
		public static double Clamp(double value, double min, double max)
		{
			return default(double);
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001504")]
		[Address(RVA = "0x73BD70", Offset = "0x73BD70", VA = "0x73BD70")]
		public static double TriangleArea(ref Vector3d p0, ref Vector3d p1, ref Vector3d p2)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000249")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x56EB20", Offset = "0x56EB20")]
	public struct SymmetricMatrix
	{
		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double m0;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double m1;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double m2;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m3;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double m4;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double m5;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double m6;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double m7;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public double m8;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double m9;

		[Token(Token = "0x17000510")]
		public double Item
		{
			[MethodImpl(256)]
			[Token(Token = "0x6001505")]
			[Address(RVA = "0x5F5BC4", Offset = "0x5F5BC4", VA = "0x5F5BC4")]
			get
			{
				return default(double);
			}
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001506")]
		[Address(RVA = "0x5F5CBC", Offset = "0x5F5CBC", VA = "0x5F5CBC")]
		public SymmetricMatrix(double c)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001507")]
		[Address(RVA = "0x5F5CD4", Offset = "0x5F5CD4", VA = "0x5F5CD4")]
		public SymmetricMatrix(double m0, double m1, double m2, double m3, double m4, double m5, double m6, double m7, double m8, double m9)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001508")]
		[Address(RVA = "0x5F5CF0", Offset = "0x5F5CF0", VA = "0x5F5CF0")]
		public SymmetricMatrix(double a, double b, double c, double d)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001509")]
		[Address(RVA = "0xBABA8C", Offset = "0xBABA8C", VA = "0xBABA8C")]
		public static SymmetricMatrix operator +(SymmetricMatrix a, SymmetricMatrix b)
		{
			return default(SymmetricMatrix);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600150A")]
		[Address(RVA = "0x5F5D30", Offset = "0x5F5D30", VA = "0x5F5D30")]
		internal double Determinant1()
		{
			return default(double);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600150B")]
		[Address(RVA = "0x5F5D88", Offset = "0x5F5D88", VA = "0x5F5D88")]
		internal double Determinant2()
		{
			return default(double);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600150C")]
		[Address(RVA = "0x5F5DE4", Offset = "0x5F5DE4", VA = "0x5F5DE4")]
		internal double Determinant3()
		{
			return default(double);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600150D")]
		[Address(RVA = "0x5F5E3C", Offset = "0x5F5E3C", VA = "0x5F5E3C")]
		internal double Determinant4()
		{
			return default(double);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600150E")]
		[Address(RVA = "0x5F5E98", Offset = "0x5F5E98", VA = "0x5F5E98")]
		public double Determinant(int a11, int a12, int a13, int a21, int a22, int a23, int a31, int a32, int a33)
		{
			return default(double);
		}
	}
	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x56EB58", Offset = "0x56EB58")]
	public struct Vector3d : IEquatable<Vector3d>
	{
		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3d zero;

		[Token(Token = "0x40012A8")]
		public const double Epsilon = double.Epsilon;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double x;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double y;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double z;

		[Token(Token = "0x17000511")]
		public double Magnitude
		{
			[MethodImpl(256)]
			[Token(Token = "0x600150F")]
			[Address(RVA = "0x5F5EB8", Offset = "0x5F5EB8", VA = "0x5F5EB8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000512")]
		public double MagnitudeSqr
		{
			[MethodImpl(256)]
			[Token(Token = "0x6001510")]
			[Address(RVA = "0x5F5F68", Offset = "0x5F5F68", VA = "0x5F5F68")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000513")]
		public Vector3d Normalized
		{
			[MethodImpl(256)]
			[Token(Token = "0x6001511")]
			[Address(RVA = "0x5F5F88", Offset = "0x5F5F88", VA = "0x5F5F88")]
			get
			{
				return default(Vector3d);
			}
		}

		[Token(Token = "0x17000514")]
		public double Item
		{
			[MethodImpl(256)]
			[Token(Token = "0x6001512")]
			[Address(RVA = "0x5F6010", Offset = "0x5F6010", VA = "0x5F6010")]
			get
			{
				return default(double);
			}
			[MethodImpl(256)]
			[Token(Token = "0x6001513")]
			[Address(RVA = "0x5F60D0", Offset = "0x5F60D0", VA = "0x5F60D0")]
			set
			{
			}
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001514")]
		[Address(RVA = "0x5F619C", Offset = "0x5F619C", VA = "0x5F619C")]
		public Vector3d(double value)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001515")]
		[Address(RVA = "0x5F61A8", Offset = "0x5F61A8", VA = "0x5F61A8")]
		public Vector3d(double x, double y, double z)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001516")]
		[Address(RVA = "0x5F61B4", Offset = "0x5F61B4", VA = "0x5F61B4")]
		public Vector3d(Vector3 vector)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001517")]
		[Address(RVA = "0xBAC7EC", Offset = "0xBAC7EC", VA = "0xBAC7EC")]
		public static Vector3d operator +(Vector3d a, Vector3d b)
		{
			return default(Vector3d);
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001518")]
		[Address(RVA = "0xBAC7FC", Offset = "0xBAC7FC", VA = "0xBAC7FC")]
		public static Vector3d operator -(Vector3d a, Vector3d b)
		{
			return default(Vector3d);
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001519")]
		[Address(RVA = "0xBAC80C", Offset = "0xBAC80C", VA = "0xBAC80C")]
		public static Vector3d operator *(Vector3d a, double d)
		{
			return default(Vector3d);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600151A")]
		[Address(RVA = "0xBAC81C", Offset = "0xBAC81C", VA = "0xBAC81C")]
		public static Vector3d operator *(double d, Vector3d a)
		{
			return default(Vector3d);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600151B")]
		[Address(RVA = "0xBAC830", Offset = "0xBAC830", VA = "0xBAC830")]
		public static Vector3d operator /(Vector3d a, double d)
		{
			return default(Vector3d);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600151C")]
		[Address(RVA = "0xBAC840", Offset = "0xBAC840", VA = "0xBAC840")]
		public static Vector3d operator -(Vector3d a)
		{
			return default(Vector3d);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600151D")]
		[Address(RVA = "0xBAC850", Offset = "0xBAC850", VA = "0xBAC850")]
		public static bool operator ==(Vector3d lhs, Vector3d rhs)
		{
			return default(bool);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600151E")]
		[Address(RVA = "0xBAC90C", Offset = "0xBAC90C", VA = "0xBAC90C")]
		public static bool operator !=(Vector3d lhs, Vector3d rhs)
		{
			return default(bool);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600151F")]
		[Address(RVA = "0xBAC9C8", Offset = "0xBAC9C8", VA = "0xBAC9C8")]
		public static implicit operator Vector3d(Vector3 v)
		{
			return default(Vector3d);
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001520")]
		[Address(RVA = "0xBAC9D8", Offset = "0xBAC9D8", VA = "0xBAC9D8")]
		public static explicit operator Vector3(Vector3d v)
		{
			return default(Vector3);
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001521")]
		[Address(RVA = "0x5F61CC", Offset = "0x5F61CC", VA = "0x5F61CC")]
		public void Set(double x, double y, double z)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001522")]
		[Address(RVA = "0x5F61D8", Offset = "0x5F61D8", VA = "0x5F61D8")]
		public void Scale(ref Vector3d scale)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001523")]
		[Address(RVA = "0x5F6208", Offset = "0x5F6208", VA = "0x5F6208")]
		public void Normalize()
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001524")]
		[Address(RVA = "0x5F62E4", Offset = "0x5F62E4", VA = "0x5F62E4")]
		public void Clamp(double min, double max)
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x5F6344", Offset = "0x5F6344", VA = "0x5F6344", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x5F634C", Offset = "0x5F634C", VA = "0x5F634C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x5F6354", Offset = "0x5F6354", VA = "0x5F6354", Slot = "4")]
		public bool Equals(Vector3d other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x5F6384", Offset = "0x5F6384", VA = "0x5F6384", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x5F638C", Offset = "0x5F638C", VA = "0x5F638C")]
		public string ToString(string format)
		{
			return null;
		}

		[MethodImpl(256)]
		[Token(Token = "0x600152A")]
		[Address(RVA = "0xBACE1C", Offset = "0xBACE1C", VA = "0xBACE1C")]
		public static double Dot(ref Vector3d lhs, ref Vector3d rhs)
		{
			return default(double);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600152B")]
		[Address(RVA = "0xBACE44", Offset = "0xBACE44", VA = "0xBACE44")]
		public static void Cross(ref Vector3d lhs, ref Vector3d rhs, out Vector3d result)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x600152C")]
		[Address(RVA = "0xBACE84", Offset = "0xBACE84", VA = "0xBACE84")]
		public static double Angle(ref Vector3d from, ref Vector3d to)
		{
			return default(double);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600152D")]
		[Address(RVA = "0xBAD020", Offset = "0xBAD020", VA = "0xBAD020")]
		public static void Lerp(ref Vector3d a, ref Vector3d b, double t, out Vector3d result)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x600152E")]
		[Address(RVA = "0xBAD054", Offset = "0xBAD054", VA = "0xBAD054")]
		public static void Scale(ref Vector3d a, ref Vector3d b, out Vector3d result)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x600152F")]
		[Address(RVA = "0xBAD078", Offset = "0xBAD078", VA = "0xBAD078")]
		public static void Normalize(ref Vector3d value, out Vector3d result)
		{
		}
	}
	[Token(Token = "0x200024B")]
	public static class MeshCombiner
	{
		[Token(Token = "0x6001531")]
		[Address(RVA = "0x73BF94", Offset = "0x73BF94", VA = "0x73BF94")]
		public static Mesh CombineMeshes(Transform rootTransform, MeshRenderer[] renderers, out Material[] resultMaterials)
		{
			return null;
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x73C5B4", Offset = "0x73C5B4", VA = "0x73C5B4")]
		public static Mesh CombineMeshes(Transform rootTransform, SkinnedMeshRenderer[] renderers, out Material[] resultMaterials, out Transform[] resultBones)
		{
			return null;
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x73C4B8", Offset = "0x73C4B8", VA = "0x73C4B8")]
		public static Mesh CombineMeshes(Mesh[] meshes, Matrix4x4[] transforms, Material[][] materials, out Material[] resultMaterials)
		{
			return null;
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x73CABC", Offset = "0x73CABC", VA = "0x73CABC")]
		public static Mesh CombineMeshes(Mesh[] meshes, Matrix4x4[] transforms, Material[][] materials, Transform[][] bones, out Material[] resultMaterials, out Transform[] resultBones)
		{
			return null;
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x73DF44", Offset = "0x73DF44", VA = "0x73DF44")]
		private static void CopyVertexPositions(ICollection<Vector3> list, Vector3[] arr)
		{
		}

		[Token(Token = "0x6001536")]
		private static void CopyVertexAttributes<T>(ref List<T> dest, IEnumerable<T> src, int previousVertexCount, int meshVertexCount, int totalVertexCount, T defaultValue)
		{
		}

		[Token(Token = "0x6001537")]
		private static T[] MergeArrays<T>(T[] arr1, T[] arr2)
		{
			return null;
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x73DD58", Offset = "0x73DD58", VA = "0x73DD58")]
		private static void TransformVertices(Vector3[] vertices, ref Matrix4x4 transform)
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x73DDE8", Offset = "0x73DDE8", VA = "0x73DDE8")]
		private static void TransformNormals(Vector3[] normals, ref Matrix4x4 transform)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x73DE74", Offset = "0x73DE74", VA = "0x73DE74")]
		private static void TransformTangents(Vector4[] tangents, ref Matrix4x4 transform)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x73DB54", Offset = "0x73DB54", VA = "0x73DB54")]
		private static void RemapBones(BoneWeight[] boneWeights, int[] boneIndices)
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x73C4A0", Offset = "0x73C4A0", VA = "0x73C4A0")]
		private static bool CanReadMesh(Mesh mesh)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200024C")]
	public sealed class MeshSimplifier
	{
		[Token(Token = "0x40012AC")]
		private const int TriangleEdgeCount = 3;

		[Token(Token = "0x40012AD")]
		private const int TriangleVertexCount = 3;

		[Token(Token = "0x40012AE")]
		private const double DoubleEpsilon = 0.001;

		[Token(Token = "0x40012AF")]
		private const double DenomEpilson = 1E-08;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int UVChannelCount;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SimplificationOptions simplificationOptions;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool verbose;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int subMeshCount;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int[] subMeshOffsets;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ResizableArray<Triangle> triangles;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ResizableArray<Vertex> vertices;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ResizableArray<Ref> refs;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ResizableArray<Vector3> vertNormals;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ResizableArray<Vector4> vertTangents;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private UVChannels<Vector2> vertUV2D;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UVChannels<Vector3> vertUV3D;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private UVChannels<Vector4> vertUV4D;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ResizableArray<Color> vertColors;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ResizableArray<BoneWeight> vertBoneWeights;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ResizableArray<BlendShapeContainer> blendShapes;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Matrix4x4[] bindposes;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly double[] errArr;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly int[] attributeIndexArr;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly HashSet<Triangle> triangleHashSet1;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly HashSet<Triangle> triangleHashSet2;

		[Token(Token = "0x17000515")]
		public SimplificationOptions SimplificationOptions
		{
			[Token(Token = "0x600153D")]
			[Address(RVA = "0x73E078", Offset = "0x73E078", VA = "0x73E078")]
			get
			{
				return default(SimplificationOptions);
			}
			[Token(Token = "0x600153E")]
			[Address(RVA = "0x73E08C", Offset = "0x73E08C", VA = "0x73E08C")]
			set
			{
			}
		}

		[Token(Token = "0x17000516")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5806F0", Offset = "0x5806F0")]
		public bool PreserveBorderEdges
		{
			[Token(Token = "0x600153F")]
			[Address(RVA = "0x73E0A0", Offset = "0x73E0A0", VA = "0x73E0A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001540")]
			[Address(RVA = "0x73E0A8", Offset = "0x73E0A8", VA = "0x73E0A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000517")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58072C", Offset = "0x58072C")]
		public bool PreserveUVSeamEdges
		{
			[Token(Token = "0x6001541")]
			[Address(RVA = "0x73E0B4", Offset = "0x73E0B4", VA = "0x73E0B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001542")]
			[Address(RVA = "0x73E0BC", Offset = "0x73E0BC", VA = "0x73E0BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000518")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x580768", Offset = "0x580768")]
		public bool PreserveUVFoldoverEdges
		{
			[Token(Token = "0x6001543")]
			[Address(RVA = "0x73E0C8", Offset = "0x73E0C8", VA = "0x73E0C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001544")]
			[Address(RVA = "0x73E0D0", Offset = "0x73E0D0", VA = "0x73E0D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000519")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5807A4", Offset = "0x5807A4")]
		public bool PreserveSurfaceCurvature
		{
			[Token(Token = "0x6001545")]
			[Address(RVA = "0x73E0DC", Offset = "0x73E0DC", VA = "0x73E0DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001546")]
			[Address(RVA = "0x73E0E4", Offset = "0x73E0E4", VA = "0x73E0E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700051A")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5807E0", Offset = "0x5807E0")]
		public bool EnableSmartLink
		{
			[Token(Token = "0x6001547")]
			[Address(RVA = "0x73E0F0", Offset = "0x73E0F0", VA = "0x73E0F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001548")]
			[Address(RVA = "0x73E0F8", Offset = "0x73E0F8", VA = "0x73E0F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700051B")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58081C", Offset = "0x58081C")]
		public int MaxIterationCount
		{
			[Token(Token = "0x6001549")]
			[Address(RVA = "0x73E104", Offset = "0x73E104", VA = "0x73E104")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600154A")]
			[Address(RVA = "0x73E10C", Offset = "0x73E10C", VA = "0x73E10C")]
			set
			{
			}
		}

		[Token(Token = "0x1700051C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x580858", Offset = "0x580858")]
		public double Agressiveness
		{
			[Token(Token = "0x600154B")]
			[Address(RVA = "0x73E114", Offset = "0x73E114", VA = "0x73E114")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600154C")]
			[Address(RVA = "0x73E11C", Offset = "0x73E11C", VA = "0x73E11C")]
			set
			{
			}
		}

		[Token(Token = "0x1700051D")]
		public bool Verbose
		{
			[Token(Token = "0x600154D")]
			[Address(RVA = "0x73E124", Offset = "0x73E124", VA = "0x73E124")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600154E")]
			[Address(RVA = "0x73E12C", Offset = "0x73E12C", VA = "0x73E12C")]
			set
			{
			}
		}

		[Token(Token = "0x1700051E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x580894", Offset = "0x580894")]
		public double VertexLinkDistance
		{
			[Token(Token = "0x600154F")]
			[Address(RVA = "0x73E138", Offset = "0x73E138", VA = "0x73E138")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001550")]
			[Address(RVA = "0x73E140", Offset = "0x73E140", VA = "0x73E140")]
			set
			{
			}
		}

		[Token(Token = "0x1700051F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5808D0", Offset = "0x5808D0")]
		public double VertexLinkDistanceSqr
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0x73E154", Offset = "0x73E154", VA = "0x73E154")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001552")]
			[Address(RVA = "0x73E160", Offset = "0x73E160", VA = "0x73E160")]
			set
			{
			}
		}

		[Token(Token = "0x17000520")]
		public Vector3[] Vertices
		{
			[Token(Token = "0x6001553")]
			[Address(RVA = "0x73E1E4", Offset = "0x73E1E4", VA = "0x73E1E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001554")]
			[Address(RVA = "0x73E338", Offset = "0x73E338", VA = "0x73E338")]
			set
			{
			}
		}

		[Token(Token = "0x17000521")]
		public int SubMeshCount
		{
			[Token(Token = "0x6001555")]
			[Address(RVA = "0x73E524", Offset = "0x73E524", VA = "0x73E524")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000522")]
		public int BlendShapeCount
		{
			[Token(Token = "0x6001556")]
			[Address(RVA = "0x73E52C", Offset = "0x73E52C", VA = "0x73E52C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000523")]
		public Vector3[] Normals
		{
			[Token(Token = "0x6001557")]
			[Address(RVA = "0x73E580", Offset = "0x73E580", VA = "0x73E580")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001558")]
			[Address(RVA = "0x73E5D4", Offset = "0x73E5D4", VA = "0x73E5D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000524")]
		public Vector4[] Tangents
		{
			[Token(Token = "0x6001559")]
			[Address(RVA = "0x73E644", Offset = "0x73E644", VA = "0x73E644")]
			get
			{
				return null;
			}
			[Token(Token = "0x600155A")]
			[Address(RVA = "0x73E698", Offset = "0x73E698", VA = "0x73E698")]
			set
			{
			}
		}

		[Token(Token = "0x17000525")]
		public Vector2[] UV1
		{
			[Token(Token = "0x600155B")]
			[Address(RVA = "0x73E708", Offset = "0x73E708", VA = "0x73E708")]
			get
			{
				return null;
			}
			[Token(Token = "0x600155C")]
			[Address(RVA = "0x73E814", Offset = "0x73E814", VA = "0x73E814")]
			set
			{
			}
		}

		[Token(Token = "0x17000526")]
		public Vector2[] UV2
		{
			[Token(Token = "0x600155D")]
			[Address(RVA = "0x73EBAC", Offset = "0x73EBAC", VA = "0x73EBAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600155E")]
			[Address(RVA = "0x73EBB4", Offset = "0x73EBB4", VA = "0x73EBB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000527")]
		public Vector2[] UV3
		{
			[Token(Token = "0x600155F")]
			[Address(RVA = "0x73EBC0", Offset = "0x73EBC0", VA = "0x73EBC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001560")]
			[Address(RVA = "0x73EBC8", Offset = "0x73EBC8", VA = "0x73EBC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000528")]
		public Vector2[] UV4
		{
			[Token(Token = "0x6001561")]
			[Address(RVA = "0x73EBD4", Offset = "0x73EBD4", VA = "0x73EBD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001562")]
			[Address(RVA = "0x73EBDC", Offset = "0x73EBDC", VA = "0x73EBDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000529")]
		public Vector2[] UV5
		{
			[Token(Token = "0x6001563")]
			[Address(RVA = "0x73EBE8", Offset = "0x73EBE8", VA = "0x73EBE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001564")]
			[Address(RVA = "0x73EBF0", Offset = "0x73EBF0", VA = "0x73EBF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700052A")]
		public Vector2[] UV6
		{
			[Token(Token = "0x6001565")]
			[Address(RVA = "0x73EBFC", Offset = "0x73EBFC", VA = "0x73EBFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001566")]
			[Address(RVA = "0x73EC04", Offset = "0x73EC04", VA = "0x73EC04")]
			set
			{
			}
		}

		[Token(Token = "0x1700052B")]
		public Vector2[] UV7
		{
			[Token(Token = "0x6001567")]
			[Address(RVA = "0x73EC10", Offset = "0x73EC10", VA = "0x73EC10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001568")]
			[Address(RVA = "0x73EC18", Offset = "0x73EC18", VA = "0x73EC18")]
			set
			{
			}
		}

		[Token(Token = "0x1700052C")]
		public Vector2[] UV8
		{
			[Token(Token = "0x6001569")]
			[Address(RVA = "0x73EC24", Offset = "0x73EC24", VA = "0x73EC24")]
			get
			{
				return null;
			}
			[Token(Token = "0x600156A")]
			[Address(RVA = "0x73EC2C", Offset = "0x73EC2C", VA = "0x73EC2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700052D")]
		public Color[] Colors
		{
			[Token(Token = "0x600156B")]
			[Address(RVA = "0x73EC38", Offset = "0x73EC38", VA = "0x73EC38")]
			get
			{
				return null;
			}
			[Token(Token = "0x600156C")]
			[Address(RVA = "0x73EC8C", Offset = "0x73EC8C", VA = "0x73EC8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700052E")]
		public BoneWeight[] BoneWeights
		{
			[Token(Token = "0x600156D")]
			[Address(RVA = "0x73ECFC", Offset = "0x73ECFC", VA = "0x73ECFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600156E")]
			[Address(RVA = "0x73ED50", Offset = "0x73ED50", VA = "0x73ED50")]
			set
			{
			}
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x73EDC0", Offset = "0x73EDC0", VA = "0x73EDC0")]
		public MeshSimplifier()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x73EF40", Offset = "0x73EF40", VA = "0x73EF40")]
		public MeshSimplifier(Mesh mesh)
		{
		}

		[Token(Token = "0x6001571")]
		private void InitializeVertexAttribute<T>(T[] attributeValues, ref ResizableArray<T> attributeArray, string attributeName)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001572")]
		[Address(RVA = "0x73F3C4", Offset = "0x73F3C4", VA = "0x73F3C4")]
		private static double VertexError(ref SymmetricMatrix q, double x, double y, double z)
		{
			return default(double);
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001573")]
		[Address(RVA = "0x73F454", Offset = "0x73F454", VA = "0x73F454")]
		private double CurvatureError(ref Vertex vert0, ref Vertex vert1)
		{
			return default(double);
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x73F7F0", Offset = "0x73F7F0", VA = "0x73F7F0")]
		private double CalculateError(ref Vertex vert0, ref Vertex vert1, out Vector3d result)
		{
			return default(double);
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x73FD0C", Offset = "0x73FD0C", VA = "0x73FD0C")]
		private static void CalculateBarycentricCoords(ref Vector3d point, ref Vector3d a, ref Vector3d b, ref Vector3d c, out Vector3 result)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001576")]
		[Address(RVA = "0x73FF10", Offset = "0x73FF10", VA = "0x73FF10")]
		private static Vector4 NormalizeTangent(Vector4 tangent)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x73FF78", Offset = "0x73FF78", VA = "0x73FF78")]
		private bool Flipped(ref Vector3d p, int i0, int i1, ref Vertex v0, bool[] deleted)
		{
			return default(bool);
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x7404DC", Offset = "0x7404DC", VA = "0x7404DC")]
		private void UpdateTriangles(int i0, int ia0, ref Vertex v, ResizableArray<bool> deleted, ref int deletedTriangles)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x7409FC", Offset = "0x7409FC", VA = "0x7409FC")]
		private void InterpolateVertexAttributes(int dst, int i0, int i1, int i2, ref Vector3 barycentricCoord)
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x741510", Offset = "0x741510", VA = "0x741510")]
		private bool AreUVsTheSame(int channel, int indexA, int indexB)
		{
			return default(bool);
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x7417EC", Offset = "0x7417EC", VA = "0x7417EC")]
		private void RemoveVertexPass(int startTrisCount, int targetTrisCount, double threshold, ResizableArray<bool> deleted0, ResizableArray<bool> deleted1, ref int deletedTris)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x741EC0", Offset = "0x741EC0", VA = "0x741EC0")]
		private void UpdateMesh(int iteration)
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x742D50", Offset = "0x742D50", VA = "0x742D50")]
		private void UpdateReferences()
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x742FEC", Offset = "0x742FEC", VA = "0x742FEC")]
		private void CompactMesh()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x743B60", Offset = "0x743B60", VA = "0x743B60")]
		private void CalculateSubMeshOffsets()
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001580")]
		[Address(RVA = "0x743CD8", Offset = "0x743CD8", VA = "0x743CD8")]
		private void GetTrianglesContainingVertex(ref Vertex vert, HashSet<Triangle> tris)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001581")]
		[Address(RVA = "0x743E08", Offset = "0x743E08", VA = "0x743E08")]
		private void GetTrianglesContainingBothVertices(ref Vertex vert0, ref Vertex vert1, HashSet<Triangle> tris)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x743FE8", Offset = "0x743FE8", VA = "0x743FE8")]
		public int[][] GetAllSubMeshTriangles()
		{
			return null;
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x7440D0", Offset = "0x7440D0", VA = "0x7440D0")]
		public int[] GetSubMeshTriangles(int subMeshIndex)
		{
			return null;
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x7442FC", Offset = "0x7442FC", VA = "0x7442FC")]
		public void ClearSubMeshes()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x744368", Offset = "0x744368", VA = "0x744368")]
		public void AddSubMeshTriangles(int[] triangles)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x7445E4", Offset = "0x7445E4", VA = "0x7445E4")]
		public void AddSubMeshTriangles(int[][] triangles)
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x73E710", Offset = "0x73E710", VA = "0x73E710")]
		public Vector2[] GetUVs2D(int channel)
		{
			return null;
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x744990", Offset = "0x744990", VA = "0x744990")]
		public Vector3[] GetUVs3D(int channel)
		{
			return null;
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x744A94", Offset = "0x744A94", VA = "0x744A94")]
		public Vector4[] GetUVs4D(int channel)
		{
			return null;
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x744B98", Offset = "0x744B98", VA = "0x744B98")]
		public void GetUVs(int channel, List<Vector2> uvs)
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x744D00", Offset = "0x744D00", VA = "0x744D00")]
		public void GetUVs(int channel, List<Vector3> uvs)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x744E68", Offset = "0x744E68", VA = "0x744E68")]
		public void GetUVs(int channel, List<Vector4> uvs)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x73E820", Offset = "0x73E820", VA = "0x73E820")]
		public void SetUVs(int channel, IList<Vector2> uvs)
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x744FD0", Offset = "0x744FD0", VA = "0x744FD0")]
		public void SetUVs(int channel, IList<Vector3> uvs)
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x74535C", Offset = "0x74535C", VA = "0x74535C")]
		public void SetUVs(int channel, IList<Vector4> uvs)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x7456E8", Offset = "0x7456E8", VA = "0x7456E8")]
		public void SetUVs(int channel, IList<Vector4> uvs, int uvComponentCount)
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x74599C", Offset = "0x74599C", VA = "0x74599C")]
		public void SetUVsAuto(int channel, IList<Vector4> uvs)
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x745A9C", Offset = "0x745A9C", VA = "0x745A9C")]
		public BlendShape[] GetAllBlendShapes()
		{
			return null;
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x745B88", Offset = "0x745B88", VA = "0x745B88")]
		public BlendShape GetBlendShape(int blendShapeIndex)
		{
			return default(BlendShape);
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x745C58", Offset = "0x745C58", VA = "0x745C58")]
		public void ClearBlendShapes()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x745CB4", Offset = "0x745CB4", VA = "0x745CB4")]
		public void AddBlendShape(BlendShape blendShape)
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x745DCC", Offset = "0x745DCC", VA = "0x745DCC")]
		public void AddBlendShapes(BlendShape[] blendShapes)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x73EFE0", Offset = "0x73EFE0", VA = "0x73EFE0")]
		public void Initialize(Mesh mesh)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x745FF8", Offset = "0x745FF8", VA = "0x745FF8")]
		public void SimplifyMesh(float quality)
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x746418", Offset = "0x746418", VA = "0x746418")]
		public void SimplifyMeshLossless()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x746720", Offset = "0x746720", VA = "0x746720")]
		public Mesh ToMesh()
		{
			return null;
		}
	}
	[Serializable]
	[StructLayout(3)]
	[Token(Token = "0x200024D")]
	public struct SimplificationOptions
	{
		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly SimplificationOptions Default;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x575F7C", Offset = "0x575F7C")]
		public bool PreserveBorderEdges;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x575FB4", Offset = "0x575FB4")]
		public bool PreserveUVSeamEdges;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x575FEC", Offset = "0x575FEC")]
		public bool PreserveUVFoldoverEdges;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576024", Offset = "0x576024")]
		public bool PreserveSurfaceCurvature;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57605C", Offset = "0x57605C")]
		public bool EnableSmartLink;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576094", Offset = "0x576094")]
		public double VertexLinkDistance;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5760CC", Offset = "0x5760CC")]
		public int MaxIterationCount;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576104", Offset = "0x576104")]
		public double Agressiveness;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57613C", Offset = "0x57613C")]
		public bool ManualUVComponentCount;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576174", Offset = "0x576174")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576174", Offset = "0x576174")]
		public int UVComponentCount;
	}
	[Token(Token = "0x200024E")]
	internal static class IOUtils
	{
		[Token(Token = "0x600159D")]
		[Address(RVA = "0x73A97C", Offset = "0x73A97C", VA = "0x73A97C")]
		internal static string MakeSafeRelativePath(string path)
		{
			return null;
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x73AB94", Offset = "0x73AB94", VA = "0x73AB94")]
		internal static string MakeSafeFileName(string name)
		{
			return null;
		}
	}
	[Token(Token = "0x200024F")]
	public static class MeshUtils
	{
		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int UVChannelCount;

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xBA9EF0", Offset = "0xBA9EF0", VA = "0xBA9EF0")]
		public static Mesh CreateMesh(Vector3[] vertices, int[][] indices, Vector3[] normals, Vector4[] tangents, Color[] colors, BoneWeight[] boneWeights, List<Vector2>[] uvs, Matrix4x4[] bindposes, BlendShape[] blendShapes)
		{
			return null;
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xBAA41C", Offset = "0xBAA41C", VA = "0xBAA41C")]
		public static Mesh CreateMesh(Vector3[] vertices, int[][] indices, Vector3[] normals, Vector4[] tangents, Color[] colors, BoneWeight[] boneWeights, List<Vector4>[] uvs, Matrix4x4[] bindposes, BlendShape[] blendShapes)
		{
			return null;
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xBA9FC4", Offset = "0xBA9FC4", VA = "0xBA9FC4")]
		public static Mesh CreateMesh(Vector3[] vertices, int[][] indices, Vector3[] normals, Vector4[] tangents, Color[] colors, BoneWeight[] boneWeights, List<Vector2>[] uvs2D, List<Vector3>[] uvs3D, List<Vector4>[] uvs4D, Matrix4x4[] bindposes, BlendShape[] blendShapes)
		{
			return null;
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xBAA7F8", Offset = "0xBAA7F8", VA = "0xBAA7F8")]
		public static BlendShape[] GetMeshBlendShapes(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xBAA680", Offset = "0xBAA680", VA = "0xBAA680")]
		public static void ApplyMeshBlendShapes(Mesh mesh, BlendShape[] blendShapes)
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xBAAABC", Offset = "0xBAAABC", VA = "0xBAAABC")]
		public static IList<Vector4>[] GetMeshUVs(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xBAADE4", Offset = "0xBAADE4", VA = "0xBAADE4")]
		public static IList<Vector2> GetMeshUVs2D(Mesh mesh, int channel)
		{
			return null;
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xBAAF60", Offset = "0xBAAF60", VA = "0xBAAF60")]
		public static IList<Vector3> GetMeshUVs3D(Mesh mesh, int channel)
		{
			return null;
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xBAAC68", Offset = "0xBAAC68", VA = "0xBAAC68")]
		public static IList<Vector4> GetMeshUVs(Mesh mesh, int channel)
		{
			return null;
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xBAB0DC", Offset = "0xBAB0DC", VA = "0xBAB0DC")]
		public static int GetUsedUVComponents(IList<Vector4> uvs)
		{
			return default(int);
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xBAB43C", Offset = "0xBAB43C", VA = "0xBAB43C")]
		public static Vector2[] ConvertUVsTo2D(IList<Vector4> uvs)
		{
			return null;
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xBAB5E4", Offset = "0xBAB5E4", VA = "0xBAB5E4")]
		public static Vector3[] ConvertUVsTo3D(IList<Vector4> uvs)
		{
			return null;
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xBAA4F0", Offset = "0xBAA4F0", VA = "0xBAA4F0")]
		public static Vector2Int[] GetSubMeshIndexMinMax(int[][] indices, out IndexFormat indexFormat)
		{
			return null;
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xBAB7A8", Offset = "0xBAB7A8", VA = "0xBAB7A8")]
		private static void GetIndexMinMax(int[] indices, out int minIndex, out int maxIndex)
		{
		}
	}
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x56EB90", Offset = "0x56EB90")]
	internal sealed class ResizableArray<T>
	{
		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] items;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int length;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T[] emptyArr;

		[Token(Token = "0x1700052F")]
		public int Length
		{
			[MethodImpl(256)]
			[Token(Token = "0x60015AE")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000530")]
		public T[] Data
		{
			[MethodImpl(256)]
			[Token(Token = "0x60015AF")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000531")]
		public T Item
		{
			[MethodImpl(256)]
			[Token(Token = "0x60015B0")]
			get
			{
				return (T)null;
			}
			[MethodImpl(256)]
			[Token(Token = "0x60015B1")]
			set
			{
			}
		}

		[Token(Token = "0x60015B2")]
		public ResizableArray(int capacity)
		{
		}

		[Token(Token = "0x60015B3")]
		public ResizableArray(int capacity, int length)
		{
		}

		[Token(Token = "0x60015B4")]
		public ResizableArray(T[] initialArray)
		{
		}

		[Token(Token = "0x60015B5")]
		private void IncreaseCapacity(int capacity)
		{
		}

		[Token(Token = "0x60015B6")]
		public void Clear()
		{
		}

		[Token(Token = "0x60015B7")]
		public void Resize(int length, bool trimExess = false, bool clearMemory = false)
		{
		}

		[Token(Token = "0x60015B8")]
		public void TrimExcess()
		{
		}

		[Token(Token = "0x60015B9")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x60015BA")]
		public T[] ToArray()
		{
			return null;
		}
	}
}
namespace MTAssets.UltimateLODSystem.MeshSimplifier.Internal
{
	[Token(Token = "0x2000251")]
	internal class BlendShapeContainer
	{
		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string shapeName;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly BlendShapeFrameContainer[] frames;

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x73ACDC", Offset = "0x73ACDC", VA = "0x73ACDC")]
		public BlendShapeContainer(BlendShape blendShape)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x73AEF4", Offset = "0x73AEF4", VA = "0x73AEF4")]
		public void MoveVertexElement(int dst, int src)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x73AF78", Offset = "0x73AF78", VA = "0x73AF78")]
		public void InterpolateVertexAttributes(int dst, int i0, int i1, int i2, ref Vector3 barycentricCoord)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x73B024", Offset = "0x73B024", VA = "0x73B024")]
		public void Resize(int length, bool trimExess = false)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x73B15C", Offset = "0x73B15C", VA = "0x73B15C")]
		public BlendShape ToBlendShape()
		{
			return default(BlendShape);
		}
	}
	[Token(Token = "0x2000252")]
	internal class BlendShapeFrameContainer
	{
		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly float frameWeight;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ResizableArray<Vector3> deltaVertices;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ResizableArray<Vector3> deltaNormals;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ResizableArray<Vector3> deltaTangents;

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x73AE1C", Offset = "0x73AE1C", VA = "0x73AE1C")]
		public BlendShapeFrameContainer(BlendShapeFrame frame)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x73B2FC", Offset = "0x73B2FC", VA = "0x73B2FC")]
		public void MoveVertexElement(int dst, int src)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x73B438", Offset = "0x73B438", VA = "0x73B438")]
		public void InterpolateVertexAttributes(int dst, int i0, int i1, int i2, ref Vector3 barycentricCoord)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x73B0A4", Offset = "0x73B0A4", VA = "0x73B0A4")]
		public void Resize(int length, bool trimExess = false)
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x73B24C", Offset = "0x73B24C", VA = "0x73B24C")]
		public BlendShapeFrame ToBlendShapeFrame()
		{
			return default(BlendShapeFrame);
		}
	}
	[Token(Token = "0x2000253")]
	internal struct BorderVertex
	{
		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int index;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int hash;

		[MethodImpl(256)]
		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x5E6054", Offset = "0x5E6054", VA = "0x5E6054")]
		public BorderVertex(int index, int hash)
		{
		}
	}
	[Token(Token = "0x2000254")]
	internal class BorderVertexComparer : IComparer<BorderVertex>
	{
		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly BorderVertexComparer instance;

		[MethodImpl(256)]
		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x73B8A4", Offset = "0x73B8A4", VA = "0x73B8A4", Slot = "4")]
		public int Compare(BorderVertex x, BorderVertex y)
		{
			return default(int);
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x73B8D4", Offset = "0x73B8D4", VA = "0x73B8D4")]
		public BorderVertexComparer()
		{
		}
	}
	[Token(Token = "0x2000255")]
	internal struct Ref
	{
		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int tid;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int tvertex;

		[MethodImpl(256)]
		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x5E605C", Offset = "0x5E605C", VA = "0x5E605C")]
		public void Set(int tid, int tvertex)
		{
		}
	}
	[Token(Token = "0x2000256")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x56EBC8", Offset = "0x56EBC8")]
	internal struct Triangle : IEquatable<Triangle>
	{
		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int index;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int v0;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int v1;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int v2;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int subMeshIndex;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int va0;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int va1;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int va2;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double err0;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double err1;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double err2;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double err3;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool deleted;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool dirty;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3d n;

		[Token(Token = "0x17000532")]
		public int Item
		{
			[MethodImpl(256)]
			[Token(Token = "0x60015CB")]
			[Address(RVA = "0x5E6180", Offset = "0x5E6180", VA = "0x5E6180")]
			get
			{
				return default(int);
			}
			[MethodImpl(256)]
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0x5E61AC", Offset = "0x5E61AC", VA = "0x5E61AC")]
			set
			{
			}
		}

		[MethodImpl(256)]
		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x5E6260", Offset = "0x5E6260", VA = "0x5E6260")]
		public Triangle(int index, int v0, int v1, int v2, int subMeshIndex)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x5E6288", Offset = "0x5E6288", VA = "0x5E6288")]
		public void GetAttributeIndices(int[] attributeIndices)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x5E62DC", Offset = "0x5E62DC", VA = "0x5E62DC")]
		public void SetAttributeIndex(int index, int value)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x5E6390", Offset = "0x5E6390", VA = "0x5E6390")]
		public void GetErrors(double[] err)
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x5E63E4", Offset = "0x5E63E4", VA = "0x5E63E4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x5E63EC", Offset = "0x5E63EC", VA = "0x5E63EC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x5E63F4", Offset = "0x5E63F4", VA = "0x5E63F4", Slot = "4")]
		public bool Equals(Triangle other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000257")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x56EC00", Offset = "0x56EC00")]
	internal class UVChannels<TVec>
	{
		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int UVChannelCount;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ResizableArray<TVec>[] channels;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TVec[][] channelsData;

		[Token(Token = "0x17000533")]
		public TVec[][] Data
		{
			[MethodImpl(256)]
			[Token(Token = "0x60015D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000534")]
		public ResizableArray<TVec> Item
		{
			[MethodImpl(256)]
			[Token(Token = "0x60015D5")]
			get
			{
				return null;
			}
			[MethodImpl(256)]
			[Token(Token = "0x60015D6")]
			set
			{
			}
		}

		[Token(Token = "0x60015D7")]
		public UVChannels()
		{
		}

		[Token(Token = "0x60015D8")]
		public void Resize(int capacity, bool trimExess = false)
		{
		}
	}
	[Token(Token = "0x2000258")]
	internal struct Vertex : IEquatable<Vertex>
	{
		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int index;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3d p;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int tstart;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int tcount;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SymmetricMatrix q;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool borderEdge;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool uvSeamEdge;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		public bool uvFoldoverEdge;

		[MethodImpl(256)]
		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x5E6504", Offset = "0x5E6504", VA = "0x5E6504")]
		public Vertex(int index, Vector3d p)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x5E6548", Offset = "0x5E6548", VA = "0x5E6548", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x5E6550", Offset = "0x5E6550", VA = "0x5E6550", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x5E6558", Offset = "0x5E6558", VA = "0x5E6558", Slot = "4")]
		public bool Equals(Vertex other)
		{
			return default(bool);
		}
	}
}
namespace LuxWater
{
	[Token(Token = "0x2000259")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56EC38", Offset = "0x56EC38")]
	public class LuxWater_CameraDepthMode : MonoBehaviour
	{
		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool GrabDepthTexture;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera cam;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material CopyDepthMat;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTextureFormat format;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Camera, CommandBuffer> m_cmdBuffer;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool CamCallBackAdded;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[HideInInspector]
		public bool ShowShaderWarning;

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x730178", Offset = "0x730178", VA = "0x730178")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x73030C", Offset = "0x73030C", VA = "0x73030C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x730500", Offset = "0x730500", VA = "0x730500")]
		private void OnPrecull(Camera camera)
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x730844", Offset = "0x730844", VA = "0x730844")]
		public LuxWater_CameraDepthMode()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class LuxWater_HelpBtn : PropertyAttribute
	{
		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string URL;

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x7308BC", Offset = "0x7308BC", VA = "0x7308BC")]
		public LuxWater_HelpBtn(string URL)
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class LuxWater_InfiniteOcean : MonoBehaviour
	{
		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5761D8", Offset = "0x5761D8")]
		[AttributeAttribute(Name = "LuxWater_HelpBtn", RVA = "0x5761D8", Offset = "0x5761D8")]
		public Camera MainCam;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float GridSize;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform trans;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform camTrans;

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x7308E8", Offset = "0x7308E8", VA = "0x7308E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x730940", Offset = "0x730940", VA = "0x730940")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x730C28", Offset = "0x730C28", VA = "0x730C28")]
		public LuxWater_InfiniteOcean()
		{
		}
	}
	[Token(Token = "0x200025C")]
	[ExecuteInEditMode]
	public class LuxWater_PlanarReflection : MonoBehaviour
	{
		[Token(Token = "0x200036B")]
		public enum ReflectionResolution
		{
			[Token(Token = "0x4001AD2")]
			Full = 1,
			[Token(Token = "0x4001AD3")]
			Half = 2,
			[Token(Token = "0x4001AD4")]
			Quarter = 4,
			[Token(Token = "0x4001AD5")]
			Eighth = 8
		}

		[Token(Token = "0x200036C")]
		public enum NumberOfShadowCascades
		{
			[Token(Token = "0x4001AD7")]
			One = 1,
			[Token(Token = "0x4001AD8")]
			Two = 2,
			[Token(Token = "0x4001AD9")]
			Four = 4
		}

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576228", Offset = "0x576228")]
		[AttributeAttribute(Name = "LuxWater_HelpBtn", RVA = "0x576228", Offset = "0x576228")]
		public bool UpdateSceneView;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576278", Offset = "0x576278")]
		public bool isMaster;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material[] WaterMaterials;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57628C", Offset = "0x57628C")]
		public LayerMask reflectionMask;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ReflectionResolution Resolution;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color clearColor;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool reflectSkybox;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5762A0", Offset = "0x5762A0")]
		public bool disablePixelLights;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5762B4", Offset = "0x5762B4")]
		public bool renderShadows;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float shadowDistance;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public NumberOfShadowCascades ShadowCascades;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5762C8", Offset = "0x5762C8")]
		public float WaterSurfaceOffset;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float clipPlaneOffset;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string reflectionSampler;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_Oldpos;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Camera m_ReflectionCamera;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material m_SharedMaterial;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<Camera, bool> m_HelperCameras;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RenderTexture m_reflectionMap;

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x730C38", Offset = "0x730C38", VA = "0x730C38")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x730D2C", Offset = "0x730D2C", VA = "0x730D2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x730E1C", Offset = "0x730E1C", VA = "0x730E1C")]
		private Camera CreateReflectionCameraFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x73113C", Offset = "0x73113C", VA = "0x73113C")]
		private void SetStandardCameraParameter(Camera cam, LayerMask mask)
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x7311F0", Offset = "0x7311F0", VA = "0x7311F0")]
		private RenderTexture CreateTextureFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x7312F8", Offset = "0x7312F8", VA = "0x7312F8")]
		public void RenderHelpCameras(Camera currentCam)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x731B28", Offset = "0x731B28", VA = "0x731B28")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x731B88", Offset = "0x731B88", VA = "0x731B88")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x731C80", Offset = "0x731C80", VA = "0x731C80")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x73148C", Offset = "0x73148C", VA = "0x73148C")]
		private void RenderReflectionFor(Camera cam, Camera reflectCamera)
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x731CB4", Offset = "0x731CB4", VA = "0x731CB4")]
		private void SaneCameraSettings(Camera helperCam)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x7321B4", Offset = "0x7321B4", VA = "0x7321B4")]
		private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x731D18", Offset = "0x731D18", VA = "0x731D18")]
		private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x7323EC", Offset = "0x7323EC", VA = "0x7323EC")]
		private static float Sgn(float a)
		{
			return default(float);
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x731FD0", Offset = "0x731FD0", VA = "0x731FD0")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x73240C", Offset = "0x73240C", VA = "0x73240C")]
		public LuxWater_PlanarReflection()
		{
		}
	}
	[Token(Token = "0x200025D")]
	[ExecuteInEditMode]
	public class LuxWater_PlanarWaterTile : MonoBehaviour
	{
		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5762DC", Offset = "0x5762DC")]
		[AttributeAttribute(Name = "LuxWater_HelpBtn", RVA = "0x5762DC", Offset = "0x5762DC")]
		public LuxWater_PlanarReflection reflection;

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x7324A8", Offset = "0x7324A8", VA = "0x7324A8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x7324AC", Offset = "0x7324AC", VA = "0x7324AC")]
		private void AcquireComponents()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x7325A8", Offset = "0x7325A8", VA = "0x7325A8")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x732650", Offset = "0x732650", VA = "0x732650")]
		public LuxWater_PlanarWaterTile()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class LuxWater_Projector : MonoBehaviour
	{
		[Token(Token = "0x200036D")]
		public enum ProjectorType
		{
			[Token(Token = "0x4001ADB")]
			FoamProjector,
			[Token(Token = "0x4001ADC")]
			NormalProjector
		}

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57632C", Offset = "0x57632C")]
		public ProjectorType Type;

		[NonSerialized]
		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<LuxWater_Projector> FoamProjectors;

		[NonSerialized]
		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<LuxWater_Projector> NormalProjectors;

		[NonSerialized]
		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer m_Rend;

		[NonSerialized]
		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material m_Mat;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool added;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 origPos;

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x732658", Offset = "0x732658", VA = "0x732658")]
		private void Update()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x73267C", Offset = "0x73267C", VA = "0x73267C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x7327FC", Offset = "0x7327FC", VA = "0x7327FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x7328D4", Offset = "0x7328D4", VA = "0x7328D4")]
		public LuxWater_Projector()
		{
		}
	}
	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56ECCC", Offset = "0x56ECCC")]
	[ExecuteInEditMode]
	public class LuxWater_ProjectorRenderer : MonoBehaviour
	{
		[Token(Token = "0x200036E")]
		public enum BufferResolution
		{
			[Token(Token = "0x4001ADE")]
			Full = 1,
			[Token(Token = "0x4001ADF")]
			Half = 2,
			[Token(Token = "0x4001AE0")]
			Quarter = 4,
			[Token(Token = "0x4001AE1")]
			Eighth = 8
		}

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576340", Offset = "0x576340")]
		public BufferResolution FoamBufferResolution;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BufferResolution NormalBufferResolution;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576354", Offset = "0x576354")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576354", Offset = "0x576354")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576354", Offset = "0x576354")]
		public bool DebugFoamBuffer;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool DebugNormalBuffer;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool DebugStats;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int drawnFoamProjectors;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int drawnNormalProjectors;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CommandBuffer cb_Foam;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static CommandBuffer cb_Normals;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera cam;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform camTransform;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture ProjectedFoam;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture ProjectedNormals;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture2D defaultBump;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Bounds tempBounds;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _LuxWater_FoamOverlayPID;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int _LuxWater_NormalOverlayPID;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Plane[] frustumPlanes;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material DebugMat;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material DebugNormalMat;

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x732978", Offset = "0x732978", VA = "0x732978")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x732A84", Offset = "0x732A84", VA = "0x732A84")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x732CF0", Offset = "0x732CF0", VA = "0x732CF0")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x733604", Offset = "0x733604", VA = "0x733604")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x733934", Offset = "0x733934", VA = "0x733934")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x733D04", Offset = "0x733D04", VA = "0x733D04")]
		public LuxWater_ProjectorRenderer()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public static class GeomUtil
	{
		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Action<Plane[], Matrix4x4> _calculateFrustumPlanes_Imp;

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x72FED4", Offset = "0x72FED4", VA = "0x72FED4")]
		public static void CalculateFrustumPlanes(Plane[] planes, Matrix4x4 worldToProjectMatrix)
		{
		}
	}
	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56ED40", Offset = "0x56ED40")]
	public class LuxWater_UnderWaterBlur : MonoBehaviour
	{
		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5763B8", Offset = "0x5763B8")]
		[AttributeAttribute(Name = "LuxWater_HelpBtn", RVA = "0x5763B8", Offset = "0x5763B8")]
		public float blurSpread;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int blurDownSample;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int blurIterations;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2[] m_offsets;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material blurMaterial;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material blitMaterial;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LuxWater_UnderWaterRendering waterrendermanager;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool doBlur;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool initBlur;

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x73410C", Offset = "0x73410C", VA = "0x73410C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x7341E4", Offset = "0x7341E4", VA = "0x7341E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x7342E8", Offset = "0x7342E8", VA = "0x7342E8")]
		private void GetWaterrendermanagerInstance()
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x734340", Offset = "0x734340", VA = "0x734340")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x7346DC", Offset = "0x7346DC", VA = "0x7346DC")]
		private void FourTapCone(RenderTexture source, RenderTexture dest, int iteration)
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x73456C", Offset = "0x73456C", VA = "0x73456C")]
		private void DownSample(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x734850", Offset = "0x734850", VA = "0x734850")]
		public LuxWater_UnderWaterBlur()
		{
		}
	}
	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56EDA4", Offset = "0x56EDA4")]
	public class LuxWater_UnderWaterRendering : MonoBehaviour
	{
		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LuxWater_UnderWaterRendering instance;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576408", Offset = "0x576408")]
		[AttributeAttribute(Name = "LuxWater_HelpBtn", RVA = "0x576408", Offset = "0x576408")]
		public Transform Sun;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576458", Offset = "0x576458")]
		public bool FindSunOnEnable;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string SunGoName;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string SunTagName;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Light SunLight;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57646C", Offset = "0x57646C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57646C", Offset = "0x57646C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57646C", Offset = "0x57646C")]
		public bool EnableDeepwaterLighting;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float DefaultWaterSurfacePosition;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float DirectionalLightingFadeRange;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float FogLightingFadeRange;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5764D0", Offset = "0x5764D0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5764D0", Offset = "0x5764D0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5764D0", Offset = "0x5764D0")]
		public bool EnableAdvancedDeferredFog;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float FogDepthShift;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float FogEdgeBlending;

		[NonSerialized]
		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576534", Offset = "0x576534")]
		public int activeWaterVolume;

		[NonSerialized]
		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Camera> activeWaterVolumeCameras;

		[NonSerialized]
		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float activeGridSize;

		[NonSerialized]
		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float WaterSurfacePos;

		[NonSerialized]
		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576548", Offset = "0x576548")]
		public List<int> RegisteredWaterVolumesIDs;

		[NonSerialized]
		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<LuxWater_WaterVolume> RegisteredWaterVolumes;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Mesh> WaterMeshes;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Transform> WaterTransforms;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<Material> WaterMaterials;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<bool> WaterIsOnScreen;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<bool> WaterUsesSlidingVolume;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture UnderWaterMask;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57655C", Offset = "0x57655C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57655C", Offset = "0x57655C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57655C", Offset = "0x57655C")]
		public List<Material> m_aboveWatersurface;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<Material> m_belowWatersurface;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5765C0", Offset = "0x5765C0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5765C0", Offset = "0x5765C0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5765C0", Offset = "0x5765C0")]
		public ShaderVariantCollection PrewarmedShaders;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int ListCapacity;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576624", Offset = "0x576624")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576624", Offset = "0x576624")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576624", Offset = "0x576624")]
		public bool enableDebug;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576688", Offset = "0x576688")]
		private Material mat;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Material blurMaterial;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Material blitMaterial;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Camera cam;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool UnderwaterIsSetUp;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Transform camTransform;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Matrix4x4 frustumCornersArray;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private SphericalHarmonicsL2 ambientProbe;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Vector3[] directions;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Color[] AmbientLightingSamples;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool DoUnderWaterRendering;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private Matrix4x4 camProj;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Vector3[] frustumCorners;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private float Projection;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private bool islinear;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Matrix4x4 WatervolumeMatrix;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private int UnderWaterMaskPID;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private int Lux_FrustumCornersWSPID;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private int Lux_CameraWSPID;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private int GerstnerEnabledPID;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private int LuxWaterMask_GerstnerVertexIntensityPID;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private int GerstnerVertexIntensityPID;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private int LuxWaterMask_GAmplitudePID;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private int GAmplitudePID;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private int LuxWaterMask_GFinalFrequencyPID;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private int GFinalFrequencyPID;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private int LuxWaterMask_GSteepnessPID;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private int GSteepnessPID;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private int LuxWaterMask_GFinalSpeedPID;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private int GFinalSpeedPID;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private int LuxWaterMask_GDirectionABPID;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private int GDirectionABPID;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private int LuxWaterMask_GDirectionCDPID;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private int GDirectionCDPID;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private int LuxWaterMask_GerstnerSecondaryWaves;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		private int GerstnerSecondaryWaves;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private int Lux_UnderWaterAmbientSkyLightPID;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		private int Lux_UnderWaterSunColorPID;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private int Lux_UnderWaterSunDirPID;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		private int Lux_UnderWaterSunDirViewSpacePID;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private int Lux_EdgeLengthPID;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private int Lux_CausticsEnabledPID;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private int Lux_CausticModePID;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		private int Lux_UnderWaterFogColorPID;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private int Lux_UnderWaterFogDensityPID;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private int Lux_UnderWaterFogAbsorptionCancellationPID;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private int Lux_UnderWaterAbsorptionHeightPID;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private int Lux_UnderWaterAbsorptionMaxHeightPID;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private int Lux_MaxDirLightDepthPID;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private int Lux_MaxFogLightDepthPID;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private int Lux_UnderWaterAbsorptionDepthPID;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private int Lux_UnderWaterAbsorptionColorStrengthPID;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private int Lux_UnderWaterAbsorptionStrengthPID;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		private int Lux_UnderWaterUnderwaterScatteringPowerPID;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private int Lux_UnderWaterUnderwaterScatteringIntensityPID;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		private int Lux_UnderWaterUnderwaterScatteringColorPID;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private int Lux_UnderWaterUnderwaterScatteringOcclusionPID;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private int Lux_UnderWaterCausticsPID;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private int Lux_UnderWaterDeferredFogParams;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private int CausticTexPID;

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x7348CC", Offset = "0x7348CC", VA = "0x7348CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x735280", Offset = "0x735280", VA = "0x735280")]
		private void CleanUp()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x735470", Offset = "0x735470", VA = "0x735470")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x735474", Offset = "0x735474", VA = "0x735474")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x735478", Offset = "0x735478", VA = "0x735478")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x7351D4", Offset = "0x7351D4", VA = "0x7351D4")]
		public void SetDeferredFogParams()
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x735114", Offset = "0x735114", VA = "0x735114")]
		public void SetDeepwaterLighting()
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x73549C", Offset = "0x73549C", VA = "0x73549C")]
		public void RegisterWaterVolume(LuxWater_WaterVolume item, int ID, bool visible, bool SlidingVolume)
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x7359C0", Offset = "0x7359C0", VA = "0x7359C0")]
		public void DeRegisterWaterVolume(LuxWater_WaterVolume item, int ID)
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x735AFC", Offset = "0x735AFC", VA = "0x735AFC")]
		public void SetWaterVisible(int ID)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x735B88", Offset = "0x735B88", VA = "0x735B88")]
		public void SetWaterInvisible(int ID)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x735C14", Offset = "0x735C14", VA = "0x735C14")]
		public void EnteredWaterVolume(LuxWater_WaterVolume item, int ID, Camera triggerCam, float GridSize)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x735DDC", Offset = "0x735DDC", VA = "0x735DDC")]
		public void LeftWaterVolume(LuxWater_WaterVolume item, int ID, Camera triggerCam)
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x735F54", Offset = "0x735F54", VA = "0x735F54")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x736DD0", Offset = "0x736DD0", VA = "0x736DD0")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x735654", Offset = "0x735654", VA = "0x735654")]
		public void SetGerstnerWaves(int index)
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x735F80", Offset = "0x735F80", VA = "0x735F80")]
		public void RenderWaterMask(Camera currentCamera, bool SecondaryCameraRendering)
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x736DDC", Offset = "0x736DDC", VA = "0x736DDC")]
		public void RenderUnderWater(RenderTexture src, RenderTexture dest, Camera currentCamera, bool SecondaryCameraRendering)
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x737974", Offset = "0x737974", VA = "0x737974")]
		public LuxWater_UnderWaterRendering()
		{
		}
	}
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56EE08", Offset = "0x56EE08")]
	public class LuxWater_UnderwaterRenderingSlave : MonoBehaviour
	{
		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LuxWater_UnderWaterRendering waterrendermanager;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool readyToGo;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera cam;

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x737C3C", Offset = "0x737C3C", VA = "0x737C3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x737CAC", Offset = "0x737CAC", VA = "0x737CAC")]
		private void GetWaterrendermanager()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x737D40", Offset = "0x737D40", VA = "0x737D40")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x737D70", Offset = "0x737D70", VA = "0x737D70")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x737E20", Offset = "0x737E20", VA = "0x737E20")]
		public LuxWater_UnderwaterRenderingSlave()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class LuxWater_WaterVolume : MonoBehaviour
	{
		[Token(Token = "0x200036F")]
		public delegate void TriggerEnter();

		[Token(Token = "0x2000370")]
		public delegate void TriggerExit();

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5766BC", Offset = "0x5766BC")]
		[AttributeAttribute(Name = "LuxWater_HelpBtn", RVA = "0x5766BC", Offset = "0x5766BC")]
		public Mesh WaterVolumeMesh;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57670C", Offset = "0x57670C")]
		public bool SlidingVolume;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float GridSize;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LuxWater_UnderWaterRendering waterrendermanager;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool readyToGo;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int ID;

		[Token(Token = "0x14000007")]
		public static event TriggerEnter OnEnterWaterVolume
		{
			[Token(Token = "0x6001625")]
			[Address(RVA = "0x737E28", Offset = "0x737E28", VA = "0x737E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D8FC", Offset = "0x57D8FC")]
			add
			{
			}
			[Token(Token = "0x6001626")]
			[Address(RVA = "0x737EDC", Offset = "0x737EDC", VA = "0x737EDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D90C", Offset = "0x57D90C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000008")]
		public static event TriggerExit OnExitWaterVolume
		{
			[Token(Token = "0x6001627")]
			[Address(RVA = "0x737F90", Offset = "0x737F90", VA = "0x737F90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D91C", Offset = "0x57D91C")]
			add
			{
			}
			[Token(Token = "0x6001628")]
			[Address(RVA = "0x738048", Offset = "0x738048", VA = "0x738048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D92C", Offset = "0x57D92C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x738100", Offset = "0x738100", VA = "0x738100")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x738264", Offset = "0x738264", VA = "0x738264")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x738324", Offset = "0x738324", VA = "0x738324")]
		private void Register()
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x738438", Offset = "0x738438", VA = "0x738438")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x738464", Offset = "0x738464", VA = "0x738464")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x738490", Offset = "0x738490", VA = "0x738490")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x7387C4", Offset = "0x7387C4", VA = "0x7387C4")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x7388D0", Offset = "0x7388D0", VA = "0x7388D0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x738C00", Offset = "0x738C00", VA = "0x738C00")]
		public LuxWater_WaterVolume()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class LuxWater_WaterVolumeTrigger : MonoBehaviour
	{
		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576720", Offset = "0x576720")]
		[AttributeAttribute(Name = "LuxWater_HelpBtn", RVA = "0x576720", Offset = "0x576720")]
		public Camera cam;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool active;

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x738CA0", Offset = "0x738CA0", VA = "0x738CA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x738D74", Offset = "0x738D74", VA = "0x738D74")]
		public LuxWater_WaterVolumeTrigger()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class LuxWater_SetMeshBounds : MonoBehaviour
	{
		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576770", Offset = "0x576770")]
		[AttributeAttribute(Name = "LuxWater_HelpBtn", RVA = "0x576770", Offset = "0x576770")]
		public float Expand_XZ;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Expand_Y;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer rend;

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x733D6C", Offset = "0x733D6C", VA = "0x733D6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x733E60", Offset = "0x733E60", VA = "0x733E60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x733ECC", Offset = "0x733ECC", VA = "0x733ECC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x733FC0", Offset = "0x733FC0", VA = "0x733FC0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x734104", Offset = "0x734104", VA = "0x734104")]
		public LuxWater_SetMeshBounds()
		{
		}
	}
}
namespace LuxWater.Demo
{
	[Token(Token = "0x2000267")]
	public class LuxWater_ExtendedFlycam : MonoBehaviour
	{
		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float cameraSensitivity;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float climbSpeed;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float normalMoveSpeed;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoveFactor;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fastMoveFactor;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotationX;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float rotationY;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool isOrtho;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera cam;

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x72F4E0", Offset = "0x72F4E0", VA = "0x72F4E0")]
		private void Start()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x72F5A8", Offset = "0x72F5A8", VA = "0x72F5A8")]
		private void Update()
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x72FEB8", Offset = "0x72FEB8", VA = "0x72FEB8")]
		public LuxWater_ExtendedFlycam()
		{
		}
	}
}
namespace WoodpeckerThirdPersonCamera
{
	[Token(Token = "0x2000268")]
	public class WoodpeckerThirdPersonCamera : MonoBehaviour
	{
		[Token(Token = "0x40013B1")]
		private const float Y_ANGLE_MIN = 0f;

		[Token(Token = "0x40013B2")]
		private const float Y_ANGLE_MAX = 50f;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform lookAt;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform camTransform;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float distance;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float currentX;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float currentY;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float sensitivityX;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float sensitivityY;

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x1077D0C", Offset = "0x1077D0C", VA = "0x1077D0C")]
		private void Start()
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x1077D34", Offset = "0x1077D34", VA = "0x1077D34")]
		private void Update()
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x1077DF8", Offset = "0x1077DF8", VA = "0x1077DF8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x1077F90", Offset = "0x1077F90", VA = "0x1077F90")]
		public WoodpeckerThirdPersonCamera()
		{
		}
	}
}
namespace WoodpeckerPlayer
{
	[Token(Token = "0x2000269")]
	public class WoodpeckerPlayer : MonoBehaviour
	{
		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator anim;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CharacterController controller;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float turnSpeed;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 moveDirection;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float gravity;

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x10779F8", Offset = "0x10779F8", VA = "0x10779F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x1077A78", Offset = "0x1077A78", VA = "0x1077A78")]
		private void Update()
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x1077C80", Offset = "0x1077C80", VA = "0x1077C80")]
		public WoodpeckerPlayer()
		{
		}
	}
}
namespace LayerLab
{
	[Token(Token = "0x200026A")]
	public class Panel : MonoBehaviour
	{
		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] otherPanels;

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x72B178", Offset = "0x72B178", VA = "0x72B178")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x72B1E8", Offset = "0x72B1E8", VA = "0x72B1E8")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x72B258", Offset = "0x72B258", VA = "0x72B258")]
		public Panel()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class PanelControl : MonoBehaviour
	{
		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int page;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool isReady;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<GameObject> panels;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI textTitle;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform panelTransform;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button buttonPrev;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button buttonNext;

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x72B260", Offset = "0x72B260", VA = "0x72B260")]
		private void Start()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x72B6E0", Offset = "0x72B6E0", VA = "0x72B6E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x72B780", Offset = "0x72B780", VA = "0x72B780")]
		public void Click_Prev()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x72B8C0", Offset = "0x72B8C0", VA = "0x72B8C0")]
		public void Click_Next()
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x72B9AC", Offset = "0x72B9AC", VA = "0x72B9AC")]
		private void SetArrowActive()
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x72B61C", Offset = "0x72B61C", VA = "0x72B61C")]
		private void CheckControl()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x72BA4C", Offset = "0x72BA4C", VA = "0x72BA4C")]
		public PanelControl()
		{
		}
	}
}
namespace UnityEngine.XR.Interaction.Toolkit
{
	[Token(Token = "0x200026C")]
	public class MovementController : MonoBehaviour
	{
		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterController characterController;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public XRController controller;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public XRController controller2;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject cameraToTurn;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool smoothTurn;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 currentState;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 direction;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 currentState2;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 direction2;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject emptyGameObjectForRotate;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool activeMovement;

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x7ABF04", Offset = "0x7ABF04", VA = "0x7ABF04")]
		private void Start()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x7ABFB4", Offset = "0x7ABFB4", VA = "0x7ABFB4")]
		private void Update()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x7AC21C", Offset = "0x7AC21C", VA = "0x7AC21C")]
		public MovementController()
		{
		}
	}
}
namespace UnityEngine.UI.Extensions
{
	[Token(Token = "0x200026D")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56EE6C", Offset = "0x56EE6C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56EE6C", Offset = "0x56EE6C")]
	public class UIParticleSystem : MaskableGraphic
	{
		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576810", Offset = "0x576810")]
		public bool fixedTime;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576848", Offset = "0x576848")]
		public bool use3dRotation;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Transform _transform;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ParticleSystem pSystem;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private UIVertex[] _quad;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector4 imageUV;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private ParticleSystem.TextureSheetAnimationModule textureSheetAnimation;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int textureSheetAnimationFrames;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Vector2 textureSheetAnimationFrameSize;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private ParticleSystemRenderer pRenderer;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool isInitialised;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Material currentMaterial;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Texture currentTexture;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private ParticleSystem.MainModule mainModule;

		[Token(Token = "0x17000535")]
		public override Texture mainTexture
		{
			[Token(Token = "0x6001650")]
			[Address(RVA = "0x7AA500", Offset = "0x7AA500", VA = "0x7AA500", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x7AA508", Offset = "0x7AA508", VA = "0x7AA508")]
		protected bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x7AA9D0", Offset = "0x7AA9D0", VA = "0x7AA9D0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x7AAA18", Offset = "0x7AAA18", VA = "0x7AAA18", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x7AB958", Offset = "0x7AB958", VA = "0x7AB958")]
		private void Update()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x7ABB70", Offset = "0x7ABB70", VA = "0x7ABB70")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x7ABE00", Offset = "0x7ABE00", VA = "0x7ABE00", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x7ABE08", Offset = "0x7ABE08", VA = "0x7ABE08")]
		public void StartParticleEmission()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x7ABE24", Offset = "0x7ABE24", VA = "0x7ABE24")]
		public void StopParticleEmission()
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x7ABE48", Offset = "0x7ABE48", VA = "0x7ABE48")]
		public void PauseParticleEmission()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x7ABE6C", Offset = "0x7ABE6C", VA = "0x7ABE6C")]
		public UIParticleSystem()
		{
		}
	}
}
namespace FAE
{
	[Token(Token = "0x200026E")]
	[ExecuteInEditMode]
	public class CliffAppearance : MonoBehaviour
	{
		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader cliffShader;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader cliffCoverageShader;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material[] targetMaterials;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color objectColor;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576880", Offset = "0x576880")]
		public float roughness;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture detailNormalMap;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576898", Offset = "0x576898")]
		public float detailNormalStrength;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Texture globalColorMap;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Color globalColor;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5768B0", Offset = "0x5768B0")]
		public float globalTiling;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool useCoverageShader;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Texture coverageColorMap;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Texture coverageNormalMap;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5768C8", Offset = "0x5768C8")]
		public float coverageAmount;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5768E0", Offset = "0x5768E0")]
		public float coverageTiling;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Texture coverageMap;

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x874ECC", Offset = "0x874ECC", VA = "0x874ECC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x875228", Offset = "0x875228", VA = "0x875228")]
		private void GetSettings()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x874FC0", Offset = "0x874FC0", VA = "0x874FC0")]
		public void Apply()
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x875488", Offset = "0x875488", VA = "0x875488")]
		public CliffAppearance()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class FoliageBender : MonoBehaviour
	{
		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5768F8", Offset = "0x5768F8")]
		public float strength;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576914", Offset = "0x576914")]
		public float radius;

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x875A58", Offset = "0x875A58", VA = "0x875A58")]
		private void Update()
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x875B44", Offset = "0x875B44", VA = "0x875B44")]
		public FoliageBender()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class PigmentMapGenerator : MonoBehaviour
	{
		[Token(Token = "0x2000371")]
		public enum TextureRotation
		{
			[Token(Token = "0x4001AE3")]
			None,
			[Token(Token = "0x4001AE4")]
			Quarter,
			[Token(Token = "0x4001AE5")]
			Half,
			[Token(Token = "0x4001AE6")]
			ThreeQuarters
		}

		[Token(Token = "0x2000372")]
		public enum HeightmapChannel
		{
			[Token(Token = "0x4001AE8")]
			None,
			[Token(Token = "0x4001AE9")]
			Texture1,
			[Token(Token = "0x4001AEA")]
			Texture2,
			[Token(Token = "0x4001AEB")]
			Texture3,
			[Token(Token = "0x4001AEC")]
			Texture4,
			[Token(Token = "0x4001AED")]
			Texture5,
			[Token(Token = "0x4001AEE")]
			Texture6,
			[Token(Token = "0x4001AEF")]
			Texture7,
			[Token(Token = "0x4001AF0")]
			Texture8
		}

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool debug;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool performCleanup;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool manualInput;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] terrainObjects;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TerrainUVUtil util;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TerrainUVUtil.Workflow workflow;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int resIdx;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int resolution;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 targetSize;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 targetOriginPosition;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 targetCenterPosition;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public Vector4 terrainScaleOffset;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Terrain[] terrains;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MeshRenderer[] meshes;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material material;

		[Token(Token = "0x4001404")]
		private const int HEIGHTOFFSET = 1000;

		[Token(Token = "0x4001405")]
		private const int CLIP_PADDING = 100;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public LayerMask layerMask;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float renderLightBrightness;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool useAlternativeRenderer;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Camera renderCam;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Light renderLight;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Light[] lights;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture2D inputHeightmap;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Texture2D customPigmentMap;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool useCustomPigmentMap;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool flipVertically;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		public bool flipHortizontally;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public TextureRotation textureRotation;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Texture2D pigmentMap;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool isMultiTerrain;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string savePath;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float originalTargetYPos;

		[NonSerialized]
		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public bool showArea;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		public bool hasTerrainData;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
		public bool isMegaSplat;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private AmbientMode ambientMode;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Color ambientColor;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private bool enableFog;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Material skyboxMat;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public HeightmapChannel heightmapChannel;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public string HeightmapChannelName;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public string[] terrainTextureNames;

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x875B58", Offset = "0x875B58", VA = "0x875B58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x875B60", Offset = "0x875B60", VA = "0x875B60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x875BB0", Offset = "0x875BB0", VA = "0x875BB0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x875B5C", Offset = "0x875B5C", VA = "0x875B5C")]
		public void Init()
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x875DC4", Offset = "0x875DC4", VA = "0x875DC4")]
		private void CheckMegaSplat()
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x875DCC", Offset = "0x875DCC", VA = "0x875DCC")]
		public void GetChildTerrainObjects(Transform parent)
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x875FF0", Offset = "0x875FF0", VA = "0x875FF0")]
		public void GetTargetInfo()
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x875CAC", Offset = "0x875CAC", VA = "0x875CAC")]
		public void SetPigmentMap()
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x87632C", Offset = "0x87632C", VA = "0x87632C")]
		public static int IndexToResolution(int i)
		{
			return default(int);
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x87634C", Offset = "0x87634C", VA = "0x87634C")]
		public PigmentMapGenerator()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public class TerrainUVUtil : ScriptableObject
	{
		[Token(Token = "0x2000373")]
		public enum Workflow
		{
			[Token(Token = "0x4001AF2")]
			None,
			[Token(Token = "0x4001AF3")]
			Terrain,
			[Token(Token = "0x4001AF4")]
			Mesh
		}

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly bool debug;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Workflow workflow;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Bounds meshBounds;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 pivotPos;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float height;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float bottom;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 size;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 centerPostion;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 originPosition;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Terrain[] terrains;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public MeshRenderer[] meshes;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector4 terrainScaleOffset;

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x876180", Offset = "0x876180", VA = "0x876180")]
		public void GetObjectPlanarUV(GameObject[] gameObjects)
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x8768C0", Offset = "0x8768C0", VA = "0x8768C0")]
		private void GetMeshInfo(GameObject[] meshObjects)
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x87639C", Offset = "0x87639C", VA = "0x87639C")]
		private void GetTerrainInfo(GameObject[] terrainObjects)
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x876D8C", Offset = "0x876D8C", VA = "0x876D8C")]
		private bool IsApproximatelyEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x876E0C", Offset = "0x876E0C", VA = "0x876E0C")]
		public TerrainUVUtil()
		{
		}
	}
	[Token(Token = "0x2000272")]
	public class WindController : MonoBehaviour
	{
		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D windVectors;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool visualizeVectors;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool _visualizeVectors;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool listenToWindZone;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WindZone windZone;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57693C", Offset = "0x57693C")]
		public float windSpeed;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576954", Offset = "0x576954")]
		public float windStrength;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57696C", Offset = "0x57696C")]
		public float windAmplitude;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576984", Offset = "0x576984")]
		public float trunkWindSpeed;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5769A0", Offset = "0x5769A0")]
		public float trunkWindWeight;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5769B8", Offset = "0x5769B8")]
		public float trunkWindSwinging;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float _windStrength;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float _windAmplitude;

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x876E18", Offset = "0x876E18", VA = "0x876E18")]
		public void SetStrength(float value)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x876E74", Offset = "0x876E74", VA = "0x876E74")]
		public void SetTrunkWeight(float value)
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x876ED0", Offset = "0x876ED0", VA = "0x876ED0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x877168", Offset = "0x877168", VA = "0x877168")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x87726C", Offset = "0x87726C", VA = "0x87726C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x877434", Offset = "0x877434", VA = "0x877434")]
		public void Apply()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x876F40", Offset = "0x876F40", VA = "0x876F40")]
		private void SetShaderParameters()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x877438", Offset = "0x877438", VA = "0x877438")]
		public static void VisualizeVectors(bool state)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x8774B0", Offset = "0x8774B0", VA = "0x8774B0")]
		public WindController()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class FAE_DemoOrbitCamera : MonoBehaviour
	{
		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform cam;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 offset;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rotationSpeed;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float cameraRotSide;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float cameraRotUp;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float cameraRotSideCur;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float cameraRotUpCur;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float distance;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float horizontalAxis;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float verticalAxis;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_inputCaptured;

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x875534", Offset = "0x875534", VA = "0x875534")]
		private void Start()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x8755D8", Offset = "0x8755D8", VA = "0x8755D8")]
		private void CaptureInput()
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x875614", Offset = "0x875614", VA = "0x875614")]
		private void ReleaseInput()
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x87564C", Offset = "0x87564C", VA = "0x87564C")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x875690", Offset = "0x875690", VA = "0x875690")]
		private void Update()
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x8759D8", Offset = "0x8759D8", VA = "0x8759D8")]
		public FAE_DemoOrbitCamera()
		{
		}
	}
}
namespace FIMSpace
{
	[Token(Token = "0x2000274")]
	public static class FEditor_OneShotLog
	{
		[Token(Token = "0x6001680")]
		[Address(RVA = "0x87A9E0", Offset = "0x87A9E0", VA = "0x87A9E0")]
		public static bool CanDrawLog(string id, int delayToNextCallInSeconds = int.MaxValue, int callLimitBeforeTimeMove = 1, int logSeparation = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x87AD90", Offset = "0x87AD90", VA = "0x87AD90")]
		public static bool EditorCanDrawLog(string id, int delayToNextCallInSeconds = int.MaxValue, int callLimitBeforeTimeMove = 1, int logSeparation = 0)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000275")]
	public static class FEngineering
	{
		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Plane axis2DProjection;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static PhysicMaterial _slidingMat;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static PhysicMaterial _frictMat;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static PhysicsMaterial2D _slidingMat2D;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static PhysicsMaterial2D _frictMat2D;

		[Token(Token = "0x17000536")]
		public static PhysicMaterial PMSliding
		{
			[Token(Token = "0x60016A0")]
			[Address(RVA = "0x87CB28", Offset = "0x87CB28", VA = "0x87CB28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000537")]
		public static PhysicMaterial PMFrict
		{
			[Token(Token = "0x60016A1")]
			[Address(RVA = "0x87CC3C", Offset = "0x87CC3C", VA = "0x87CC3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000538")]
		public static PhysicsMaterial2D PMSliding2D
		{
			[Token(Token = "0x60016A2")]
			[Address(RVA = "0x87CD50", Offset = "0x87CD50", VA = "0x87CD50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000539")]
		public static PhysicsMaterial2D PMFrict2D
		{
			[Token(Token = "0x60016A3")]
			[Address(RVA = "0x87CE2C", Offset = "0x87CE2C", VA = "0x87CE2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x87AD98", Offset = "0x87AD98", VA = "0x87AD98")]
		public static bool VIsZero(this Vector3 vec)
		{
			return default(bool);
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x87ADCC", Offset = "0x87ADCC", VA = "0x87ADCC")]
		public static bool VIsSame(this Vector3 vec1, Vector3 vec2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x87ADF0", Offset = "0x87ADF0", VA = "0x87ADF0")]
		public static Vector3 TransformVector(this Quaternion parentRot, Vector3 parentLossyScale, Vector3 childLocalPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x87AEF4", Offset = "0x87AEF4", VA = "0x87AEF4")]
		public static Vector3 TransformInDirection(this Quaternion childRotation, Vector3 parentLossyScale, Vector3 childLocalPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x87B034", Offset = "0x87B034", VA = "0x87B034")]
		public static Vector3 InverseTransformVector(this Quaternion tRotation, Vector3 tLossyScale, Vector3 worldPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x87B134", Offset = "0x87B134", VA = "0x87B134")]
		public static Vector3 VAxis2DLimit(this Transform parent, Vector3 parentPos, Vector3 childPos, int axis = 3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x87B290", Offset = "0x87B290", VA = "0x87B290")]
		public static Quaternion QToLocal(this Quaternion parentRotation, Quaternion worldRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x87B358", Offset = "0x87B358", VA = "0x87B358")]
		public static Quaternion QToWorld(this Quaternion parentRotation, Quaternion localRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x87B418", Offset = "0x87B418", VA = "0x87B418")]
		public static Quaternion QRotateChild(this Quaternion offset, Quaternion parentRot, Quaternion childLocalRot)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x87B558", Offset = "0x87B558", VA = "0x87B558")]
		public static Quaternion ClampRotation(this Vector3 current, Vector3 bounds)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x87B6F8", Offset = "0x87B6F8", VA = "0x87B6F8")]
		public static Vector3 QToAngularVelocity(this Quaternion deltaRotation, bool fix = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x87B960", Offset = "0x87B960", VA = "0x87B960")]
		public static Vector3 QToAngularVelocity(this Quaternion currentRotation, Quaternion targetRotation, bool fix = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x87BA44", Offset = "0x87BA44", VA = "0x87BA44")]
		public static bool QIsZero(this Quaternion rot)
		{
			return default(bool);
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x87BA68", Offset = "0x87BA68", VA = "0x87BA68")]
		public static bool QIsSame(this Quaternion rot1, Quaternion rot2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x87BA94", Offset = "0x87BA94", VA = "0x87BA94")]
		public static float WrapAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x87B640", Offset = "0x87B640", VA = "0x87B640")]
		public static Vector3 WrapVector(Vector3 angles)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x87BACC", Offset = "0x87BACC", VA = "0x87BACC")]
		public static float UnwrapAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x87BB04", Offset = "0x87BB04", VA = "0x87BB04")]
		public static Vector3 UnwrapVector(Vector3 angles)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x87BBC0", Offset = "0x87BBC0", VA = "0x87BBC0")]
		public static Quaternion SmoothDampRotation(this Quaternion current, Quaternion target, ref Quaternion velocityRef, float duration, float delta)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x87BBF4", Offset = "0x87BBF4", VA = "0x87BBF4")]
		public static Quaternion SmoothDampRotation(this Quaternion current, Quaternion target, ref Quaternion velocityRef, float duration, float maxSpeed, float delta)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x87BE78", Offset = "0x87BE78", VA = "0x87BE78")]
		public static bool SameDirection(this float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x87BEA8", Offset = "0x87BEA8", VA = "0x87BEA8")]
		public static float PointDisperse01(int index, int baseV = 2)
		{
			return default(float);
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x87BF74", Offset = "0x87BF74", VA = "0x87BF74")]
		public static float PointDisperse(int index, int baseV = 2)
		{
			return default(float);
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x87C044", Offset = "0x87C044", VA = "0x87C044")]
		public static float GetScaler(this Transform transform)
		{
			return default(float);
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x87C0D4", Offset = "0x87C0D4", VA = "0x87C0D4")]
		public static Vector3 PosFromMatrix(this Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x87C178", Offset = "0x87C178", VA = "0x87C178")]
		public static Quaternion RotFromMatrix(this Matrix4x4 m)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x87C294", Offset = "0x87C294", VA = "0x87C294")]
		public static Vector3 ScaleFromMatrix(this Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x87C358", Offset = "0x87C358", VA = "0x87C358")]
		public static Bounds RotateBoundsByMatrix(this Bounds b, Quaternion rotation)
		{
			return default(Bounds);
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x87C87C", Offset = "0x87C87C", VA = "0x87C87C")]
		public static Bounds RotateLocalBounds(this Bounds b, Quaternion rotation)
		{
			return default(Bounds);
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x87CA54", Offset = "0x87CA54", VA = "0x87CA54")]
		public static int[] GetLayermaskValues(int mask, int optionsCount)
		{
			return null;
		}
	}
	[Token(Token = "0x2000276")]
	public static class FLogicMethods
	{
		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x87CF08", Offset = "0x87CF08", VA = "0x87CF08")]
		public static float Lerp(this float from, float to, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x87CFB8", Offset = "0x87CFB8", VA = "0x87CFB8")]
		public static float InverseLerp(float from, float to, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x87D068", Offset = "0x87D068", VA = "0x87D068")]
		public static float InverseLerpUnclamped(float xx, float yy, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x87D088", Offset = "0x87D088", VA = "0x87D088")]
		public static float FLerp(float a, float b, float t, float factor = 0.01f)
		{
			return default(float);
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x87D14C", Offset = "0x87D14C", VA = "0x87D14C")]
		public static int IntLerp(int a, int b, float t)
		{
			return default(int);
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x87D17C", Offset = "0x87D17C", VA = "0x87D17C")]
		public static void IntLerp(ref int source, int a, int b, float t)
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x87D22C", Offset = "0x87D22C", VA = "0x87D22C")]
		public static void IntLerp(ref int source, int b, float t)
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x87D23C", Offset = "0x87D23C", VA = "0x87D23C")]
		public static float FAbs(this float value)
		{
			return default(float);
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x87D24C", Offset = "0x87D24C", VA = "0x87D24C")]
		public static float HyperCurve(this float value)
		{
			return default(float);
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x87D274", Offset = "0x87D274", VA = "0x87D274")]
		public static float TopDownDistanceManhattan(this Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x87D2A4", Offset = "0x87D2A4", VA = "0x87D2A4")]
		public static float TopDownDistance(this Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x87D364", Offset = "0x87D364", VA = "0x87D364")]
		public static float DistanceManhattan(this Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x87D3A8", Offset = "0x87D3A8", VA = "0x87D3A8")]
		public static float WrapAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x87D3E0", Offset = "0x87D3E0", VA = "0x87D3E0")]
		public static Vector3 WrapVector(Vector3 angles)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x87D498", Offset = "0x87D498", VA = "0x87D498")]
		public static float UnwrapAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x87D4D0", Offset = "0x87D4D0", VA = "0x87D4D0")]
		public static Vector3 UnwrapVector(Vector3 angles)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x87D58C", Offset = "0x87D58C", VA = "0x87D58C")]
		public static bool IsAlmostEqual(float val, float to, int afterComma = 2, float addRange = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x87D648", Offset = "0x87D648", VA = "0x87D648")]
		public static Quaternion TopDownAngle(Vector3 from, Vector3 to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x87D720", Offset = "0x87D720", VA = "0x87D720")]
		public static Quaternion TopDownAnglePosition2D(Vector2 from, Vector2 to, float offset = 0f)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x2000277")]
	public static class FTransformMethods
	{
		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xACFE38", Offset = "0xACFE38", VA = "0xACFE38")]
		public static Transform FindChildByNameInDepth(string name, Transform transform, bool findInDeactivated = true, [Optional] string[] additionalContains)
		{
			return null;
		}

		[Token(Token = "0x60016B8")]
		public static List<T> FindComponentsInAllChildren<T>(Transform transformToSearchIn, bool includeInactive = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60016B9")]
		public static T FindComponentInAllChildren<T>(Transform transformToSearchIn) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60016BA")]
		public static T FindComponentInAllParents<T>(Transform transformToSearchIn) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xACFFE8", Offset = "0xACFFE8", VA = "0xACFFE8")]
		public static void ChangeActiveChildrenInside(Transform parentOfThem, bool active)
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xAD0074", Offset = "0xAD0074", VA = "0xAD0074")]
		public static void ChangeActiveThroughParentTo(Transform start, Transform end, bool active, bool changeParentsChildrenActivation = false)
		{
		}
	}
	[Token(Token = "0x2000278")]
	public static class FVectorMethods
	{
		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xAD0198", Offset = "0xAD0198", VA = "0xAD0198")]
		public static Vector3 RandomVector(float rangeA, float rangeB)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xAD0220", Offset = "0xAD0220", VA = "0xAD0220")]
		public static float VectorSum(Vector3 vector)
		{
			return default(float);
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xAD022C", Offset = "0xAD022C", VA = "0xAD022C")]
		public static Vector3 RandomVectorNoY(float rangeA, float rangeB)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xAD02A0", Offset = "0xAD02A0", VA = "0xAD02A0")]
		public static Vector3 RandomVectorMinMax(float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xAD0394", Offset = "0xAD0394", VA = "0xAD0394")]
		public static Vector3 RandomVectorNoYMinMax(float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xAD0454", Offset = "0xAD0454", VA = "0xAD0454")]
		public static Vector3 GetUIPositionFromWorldPosition(Vector3 position, Camera camera, RectTransform canvas)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xAD0510", Offset = "0xAD0510", VA = "0xAD0510")]
		public static Vector2 XOZ(this Vector3 toBeFlattened)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xAD0540", Offset = "0xAD0540", VA = "0xAD0540")]
		public static float DistanceTopDown(Vector3 from, Vector3 to)
		{
			return default(float);
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xAD060C", Offset = "0xAD060C", VA = "0xAD060C")]
		public static float DistanceTopDownManhattan(Vector3 from, Vector3 to)
		{
			return default(float);
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xAD0694", Offset = "0xAD0694", VA = "0xAD0694")]
		public static Vector3 ChooseDominantAxis(Vector3 axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xAD07D4", Offset = "0xAD07D4", VA = "0xAD07D4")]
		public static Vector3 GetRounded(Vector3 dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xAD09D4", Offset = "0xAD09D4", VA = "0xAD09D4")]
		public static Vector3 GetCounterAxis(Vector3 axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xAD0A18", Offset = "0xAD0A18", VA = "0xAD0A18")]
		public static Color GetAxisColor(Vector3 axis, float alpha = 0.75f)
		{
			return default(Color);
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xAD0A58", Offset = "0xAD0A58", VA = "0xAD0A58")]
		public static Vector3 FlattenVector(Vector3 v, float to = 90f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xAD0C50", Offset = "0xAD0C50", VA = "0xAD0C50")]
		public static Vector3 FlattenVector(Vector3 v, Vector3 to)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xAD0E58", Offset = "0xAD0E58", VA = "0xAD0E58")]
		public static Vector3Int V3toV3Int(Vector3 v)
		{
			return default(Vector3Int);
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xAD0F2C", Offset = "0xAD0F2C", VA = "0xAD0F2C")]
		public static Vector3 FlattenNormal(Quaternion orientation, [Optional] Vector3? forward, float to = 90f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xAD1058", Offset = "0xAD1058", VA = "0xAD1058")]
		public static Vector3 EqualVector(float valueAll)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xAD1094", Offset = "0xAD1094", VA = "0xAD1094")]
		public static Quaternion FlattenRotation(Quaternion orientation, float to = 90f)
		{
			return default(Quaternion);
		}
	}
}
namespace FIMSpace.FEditor
{
	[Token(Token = "0x2000279")]
	public class FEditor_StylesIn
	{
		[Token(Token = "0x1700053A")]
		public static GUIStyle GrayBackground
		{
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0x87A5E8", Offset = "0x87A5E8", VA = "0x87A5E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053B")]
		public static GUIStyle LGrayBackground
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x87A794", Offset = "0x87A794", VA = "0x87A794")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053C")]
		public static GUIStyle LBlueBackground
		{
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0x87A7DC", Offset = "0x87A7DC", VA = "0x87A7DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053D")]
		public static GUIStyle LNavy
		{
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0x87A824", Offset = "0x87A824", VA = "0x87A824")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053E")]
		public static GUIStyle Emerald
		{
			[Token(Token = "0x60016D4")]
			[Address(RVA = "0x87A86C", Offset = "0x87A86C", VA = "0x87A86C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053F")]
		public static GUIStyle GreenBackground
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0x87A8B4", Offset = "0x87A8B4", VA = "0x87A8B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000540")]
		public static GUIStyle BlueBackground
		{
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0x87A8FC", Offset = "0x87A8FC", VA = "0x87A8FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000541")]
		public static GUIStyle RedBackground
		{
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x87A944", Offset = "0x87A944", VA = "0x87A944")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000542")]
		public static GUIStyle YellowBackground
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x87A98C", Offset = "0x87A98C", VA = "0x87A98C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x87A630", Offset = "0x87A630", VA = "0x87A630")]
		public static GUIStyle Style(Color bgColor)
		{
			return null;
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x87A9D4", Offset = "0x87A9D4", VA = "0x87A9D4")]
		public static void DrawUILine(Color color, int thickness = 2, int padding = 10)
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x87A9D8", Offset = "0x87A9D8", VA = "0x87A9D8")]
		public FEditor_StylesIn()
		{
		}
	}
}
namespace FIMSpace.FLook
{
	[Token(Token = "0x200027A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56EF68", Offset = "0x56EF68")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x56EF68", Offset = "0x56EF68")]
	public class FLookAnimator : MonoBehaviour, IDropHandler, IEventSystemHandler, IFHierarchyIcon
	{
		[Serializable]
		[Token(Token = "0x2000374")]
		public class CompensationBone
		{
			[Token(Token = "0x4001AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Transform;

			[Token(Token = "0x4001AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3 compensatedPosition;

			[Token(Token = "0x4001AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Quaternion compensatedRotation;

			[Token(Token = "0x4001AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion lastFinalLocalRotation;

			[Token(Token = "0x4001AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Quaternion lastKeyframeLocalRotation;

			[Token(Token = "0x4001AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 lastFinalLocalPosition;

			[Token(Token = "0x4001AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector3 lastKeyframeLocalPosition;

			[Token(Token = "0x6001D17")]
			[Address(RVA = "0xAF1764", Offset = "0xAF1764", VA = "0xAF1764")]
			public CompensationBone(Transform t)
			{
			}

			[Token(Token = "0x6001D18")]
			[Address(RVA = "0xAF1820", Offset = "0xAF1820", VA = "0xAF1820")]
			public void RefreshCompensationFrame()
			{
			}

			[Token(Token = "0x6001D19")]
			[Address(RVA = "0xAF1870", Offset = "0xAF1870", VA = "0xAF1870")]
			public void CheckForZeroKeyframes()
			{
			}

			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0xAF19C0", Offset = "0xAF19C0", VA = "0xAF19C0")]
			public void SetRotationCompensation(float weight)
			{
			}

			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0xAF1AF0", Offset = "0xAF1AF0", VA = "0xAF1AF0")]
			public void SetPositionCompensation(float weight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000375")]
		public class LookBone
		{
			[Token(Token = "0x4001AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Transform;

			[Token(Token = "0x4001AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Quaternion animatedStaticRotation;

			[Token(Token = "0x4001AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion targetStaticRotation;

			[Token(Token = "0x4001AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion localStaticRotation;

			[Token(Token = "0x4001B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion animatedTargetRotation;

			[Token(Token = "0x4001B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Quaternion targetRotation;

			[Token(Token = "0x4001B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vector3 correctionOffset;

			[Token(Token = "0x4001B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public Quaternion finalRotation;

			[Token(Token = "0x4001B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public Quaternion lastKeyframeRotation;

			[Token(Token = "0x4001B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public Quaternion lastFinalLocalRotation;

			[Token(Token = "0x4001B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public Vector3 forward;

			[Token(Token = "0x4001B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Vector3 right;

			[Token(Token = "0x4001B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			public Vector3 up;

			[Token(Token = "0x4001B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Vector3 initLocalPos;

			[Token(Token = "0x4001B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			public Quaternion initLocalRot;

			[Token(Token = "0x4001B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			public Vector3 targetDelayPosition;

			[Token(Token = "0x4001B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public Vector3 animatedDelayPosition;

			[Token(Token = "0x4001B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			public float lookWeight;

			[Token(Token = "0x4001B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public float lookWeightB;

			[Token(Token = "0x4001B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			public float motionWeight;

			[Token(Token = "0x1700065D")]
			public Quaternion correctionOffsetQ
			{
				[Token(Token = "0x6001D1C")]
				[Address(RVA = "0xAF1C0C", Offset = "0xAF1C0C", VA = "0xAF1C0C")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x6001D1D")]
			[Address(RVA = "0xAF1C94", Offset = "0xAF1C94", VA = "0xAF1C94")]
			public LookBone(Transform t)
			{
			}

			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0xAF1DD4", Offset = "0xAF1DD4", VA = "0xAF1DD4")]
			public void RefreshBoneDirections(Transform baseTransform)
			{
			}

			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0xAF1288", Offset = "0xAF1288", VA = "0xAF1288")]
			public void RefreshStaticRotation(bool hard = true)
			{
			}

			[Token(Token = "0x6001D20")]
			[Address(RVA = "0xAF2054", Offset = "0xAF2054", VA = "0xAF2054")]
			internal void CalculateMotion(Quaternion targetLook, float overallWeightMultiplier, float delta, float mainWeight)
			{
			}
		}

		[Token(Token = "0x2000376")]
		public enum EFAxisFixOrder
		{
			[Token(Token = "0x4001B11")]
			Parental,
			[Token(Token = "0x4001B12")]
			FromBased,
			[Token(Token = "0x4001B13")]
			FullManual,
			[Token(Token = "0x4001B14")]
			ZYX
		}

		[Token(Token = "0x2000377")]
		public enum EFHeadLookState
		{
			[Token(Token = "0x4001B16")]
			Null,
			[Token(Token = "0x4001B17")]
			Following,
			[Token(Token = "0x4001B18")]
			OutOfMaxRotation,
			[Token(Token = "0x4001B19")]
			ClampedAngle,
			[Token(Token = "0x4001B1A")]
			OutOfMaxDistance
		}

		[Token(Token = "0x2000378")]
		public enum EFFollowMode
		{
			[Token(Token = "0x4001B1C")]
			FollowObject,
			[Token(Token = "0x4001B1D")]
			LocalOffset,
			[Token(Token = "0x4001B1E")]
			WorldOffset,
			[Token(Token = "0x4001B1F")]
			ToFollowSpaceOffset,
			[Token(Token = "0x4001B20")]
			FollowJustPosition
		}

		[Token(Token = "0x2000379")]
		public enum EFDeltaType
		{
			[Token(Token = "0x4001B22")]
			DeltaTime,
			[Token(Token = "0x4001B23")]
			SmoothDeltaTime,
			[Token(Token = "0x4001B24")]
			UnscaledDeltaTime,
			[Token(Token = "0x4001B25")]
			FixedDeltaTime
		}

		[Token(Token = "0x200037A")]
		public enum EFAnimationStyle
		{
			[Token(Token = "0x4001B27")]
			SmoothDamp,
			[Token(Token = "0x4001B28")]
			FastLerp,
			[Token(Token = "0x4001B29")]
			Linear
		}

		[Token(Token = "0x200037B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FB60", Offset = "0x56FB60")]
		private sealed class <AnimatePhysicsClock>d__101 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FLookAnimator <>4__this;

			[Token(Token = "0x1700065E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D24")]
				[Address(RVA = "0xAF0DD4", Offset = "0xAF0DD4", VA = "0xAF0DD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700065F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D26")]
				[Address(RVA = "0xAF0E3C", Offset = "0xAF0E3C", VA = "0xAF0E3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D21")]
			[Address(RVA = "0xAF0CF0", Offset = "0xAF0CF0", VA = "0xAF0CF0")]
			[DebuggerHidden]
			public <AnimatePhysicsClock>d__101(int <>1__state)
			{
			}

			[Token(Token = "0x6001D22")]
			[Address(RVA = "0xAF0D1C", Offset = "0xAF0D1C", VA = "0xAF0D1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D23")]
			[Address(RVA = "0xAF0D20", Offset = "0xAF0D20", VA = "0xAF0D20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D25")]
			[Address(RVA = "0xAF0DDC", Offset = "0xAF0DDC", VA = "0xAF0DDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200037C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FB70", Offset = "0x56FB70")]
		private sealed class <SwitchLookingTransition>d__104 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FLookAnimator <>4__this;

			[Token(Token = "0x4001B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float transitionTime;

			[Token(Token = "0x4001B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool enableAnimation;

			[Token(Token = "0x4001B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action callback;

			[Token(Token = "0x4001B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <time>5__2;

			[Token(Token = "0x4001B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <startBlend>5__3;

			[Token(Token = "0x17000660")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D2A")]
				[Address(RVA = "0xAF16F4", Offset = "0xAF16F4", VA = "0xAF16F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000661")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D2C")]
				[Address(RVA = "0xAF175C", Offset = "0xAF175C", VA = "0xAF175C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D27")]
			[Address(RVA = "0xAF1598", Offset = "0xAF1598", VA = "0xAF1598")]
			[DebuggerHidden]
			public <SwitchLookingTransition>d__104(int <>1__state)
			{
			}

			[Token(Token = "0x6001D28")]
			[Address(RVA = "0xAF15C4", Offset = "0xAF15C4", VA = "0xAF15C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D29")]
			[Address(RVA = "0xAF15C8", Offset = "0xAF15C8", VA = "0xAF15C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0xAF16FC", Offset = "0xAF16FC", VA = "0xAF16FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200037D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FB80", Offset = "0x56FB80")]
		private sealed class <CResetMomentLookTransform>d__105 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4001B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FLookAnimator <>4__this;

			[Token(Token = "0x4001B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform transform;

			[Token(Token = "0x17000662")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D30")]
				[Address(RVA = "0xAF1528", Offset = "0xAF1528", VA = "0xAF1528", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000663")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D32")]
				[Address(RVA = "0xAF1590", Offset = "0xAF1590", VA = "0xAF1590", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D2D")]
			[Address(RVA = "0xAF1400", Offset = "0xAF1400", VA = "0xAF1400")]
			[DebuggerHidden]
			public <CResetMomentLookTransform>d__105(int <>1__state)
			{
			}

			[Token(Token = "0x6001D2E")]
			[Address(RVA = "0xAF142C", Offset = "0xAF142C", VA = "0xAF142C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0xAF1430", Offset = "0xAF1430", VA = "0xAF1430", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D31")]
			[Address(RVA = "0xAF1530", Offset = "0xAF1530", VA = "0xAF1530", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200037E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FB90", Offset = "0x56FB90")]
		private sealed class <CRefreshReferencePose>d__156 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FLookAnimator <>4__this;

			[Token(Token = "0x4001B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsed>5__2;

			[Token(Token = "0x17000664")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D36")]
				[Address(RVA = "0xAF1390", Offset = "0xAF1390", VA = "0xAF1390", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000665")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D38")]
				[Address(RVA = "0xAF13F8", Offset = "0xAF13F8", VA = "0xAF13F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D33")]
			[Address(RVA = "0xAF0E44", Offset = "0xAF0E44", VA = "0xAF0E44")]
			[DebuggerHidden]
			public <CRefreshReferencePose>d__156(int <>1__state)
			{
			}

			[Token(Token = "0x6001D34")]
			[Address(RVA = "0xAF0E70", Offset = "0xAF0E70", VA = "0xAF0E70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D35")]
			[Address(RVA = "0xAF0E74", Offset = "0xAF0E74", VA = "0xAF0E74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D37")]
			[Address(RVA = "0xAF1398", Offset = "0xAF1398", VA = "0xAF1398", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5769D4", Offset = "0x5769D4")]
		private Transform <MomentLookTransform>k__BackingField;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject generatedMomentTarget;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool wasMomentLookTransform;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5769E4", Offset = "0x5769E4")]
		public bool BirdMode;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool birdModeInitialized;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x576A1C", Offset = "0x576A1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576A1C", Offset = "0x576A1C")]
		public float LagRotation;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576A8C", Offset = "0x576A8C")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x576A8C", Offset = "0x576A8C")]
		public float LagEvery;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "FPD_PercentageAttribute", RVA = "0x576B00", Offset = "0x576B00")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576B00", Offset = "0x576B00")]
		public float DelayPosition;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576B74", Offset = "0x576B74")]
		public float DelayMaxDistance;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576BAC", Offset = "0x576BAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576BAC", Offset = "0x576BAC")]
		public float DelayGoSpeed;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 BirdTargetPosition;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 birdTargetPositionMemory;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float lagTimer;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float preWeightFaloff;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] baseWeights;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] targetWeights;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool UseEyes;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576C00", Offset = "0x576C00")]
		public Transform EyesTarget;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576C38", Offset = "0x576C38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576C38", Offset = "0x576C38")]
		public Transform LeftEye;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool InvertLeftEye;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576C88", Offset = "0x576C88")]
		public Transform RightEye;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool InvertRightEye;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576CC0", Offset = "0x576CC0")]
		public Transform HeadReference;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 EyesOffsetRotation;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576CF8", Offset = "0x576CF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576CF8", Offset = "0x576CF8")]
		public float EyesSpeed;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "FPD_PercentageAttribute", RVA = "0x576D4C", Offset = "0x576D4C")]
		public float EyesBlend;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576D98", Offset = "0x576D98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576D98", Offset = "0x576D98")]
		public Vector2 EyesXRange;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector2 EyesYRange;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576DF0", Offset = "0x576DF0")]
		public bool EyesNoKeyframes;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		public bool CustomEyesLogics;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float EyesOutOfRangeBlend;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform[] eyes;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3[] eyeForwards;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion[] eyesInitLocalRotations;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Quaternion[] eyesLerpRotations;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float _eyesBlend;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Vector3 headForward;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576E28", Offset = "0x576E28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576E28", Offset = "0x576E28")]
		public float NoddingTransitions;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public Vector3 NodAxis;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576E7C", Offset = "0x576E7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576E7C", Offset = "0x576E7C")]
		public float BackBonesNod;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float nodProgress;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float nodValue;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float nodPower;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float nodDuration;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float smoothingTimer;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float smoothingPower;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float smoothingTime;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float smoothingEffect;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public int ParentalOffsetsV;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3 lookFreezeFocusPoint;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private Vector3 smoothLookPosition;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 _velo_smoothLookPosition;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Vector3 finalLookPosition;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool usingAxisCorrection;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private Matrix4x4 axisCorrectionMatrix;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private float delta;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576ED0", Offset = "0x576ED0")]
		public Transform ParentalReferenceBone;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Quaternion _parentalBackParentRot;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Vector2 _parentalAngles;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private bool animatePhysicsWorking;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
		private bool triggerAnimatePhysics;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private int startAfterTPoseCounter;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Vector3 unclampedLookAngles;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private Vector3 targetLookAngles;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Vector3 animatedLookAngles;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private Vector3 finalLookAngles;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Quaternion lastBaseRotation;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Vector3 _preLookAboveLookAngles;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private Vector3 _velo_animatedLookAngles;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private float _rememberSideLookHorizontalAngle;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Vector3 leadBoneInitLocalOffset;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private EFHeadLookState previousState;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private bool _stopLooking;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Transform activeLookTarget;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Vector3 activeLookPosition;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private Transform preActiveLookTarget;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private bool isLooking;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x271")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576F08", Offset = "0x576F08")]
		public bool DestroyMomentTargetOnMaxDistance;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private float whenAboveGoBackDuration;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private float whenAboveGoBackTimer;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private float _whenAboveGoBackVelo;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private float _whenAboveGoBackVerticalVelo;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private Vector2 whenAboveGoBackAngles;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private int lastClipHash;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private bool refreshReferencePose;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private float monitorTransitionTime;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private List<Quaternion> _monitorTransitionStart;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public int BackBonesCount;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		public int _preBackBonesCount;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public List<LookBone> LookBones;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x576F40", Offset = "0x576F40")]
		private EFHeadLookState <LookState>k__BackingField;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576F50", Offset = "0x576F50")]
		public bool NoTargetHeadStops;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private Quaternion targetLookRotation;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		protected bool initialized;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private float finalMotionWeight;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private float animatedMotionWeight;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private float _velo_animatedMotionWeight;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private float changeTargetSmootherWeight;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private float changeTargetSmootherBones;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private Vector3 preLookDir;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		public bool _editor_hideEyes;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public string _editor_displayName;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576F88", Offset = "0x576F88")]
		public Transform LeadBone;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576FC0", Offset = "0x576FC0")]
		public Transform BaseTransform;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576FF8", Offset = "0x576FF8")]
		public float FaloffValue;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		public float FaloffValueB;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577030", Offset = "0x577030")]
		public bool BigAngleAutomation;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x311")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577068", Offset = "0x577068")]
		public bool BigAngleAutomationCompensation;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x312")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5770A0", Offset = "0x5770A0")]
		public bool AutoBackbonesWeights;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x313")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5770D8", Offset = "0x5770D8")]
		public bool CurveSpread;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577110", Offset = "0x577110")]
		public AnimationCurve BackBonesFalloff;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577148", Offset = "0x577148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577148", Offset = "0x577148")]
		public List<CompensationBone> CompensationBones;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5771BC", Offset = "0x5771BC")]
		public float CompensationWeight;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5771D4", Offset = "0x5771D4")]
		public float CompensationWeightB;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5771EC", Offset = "0x5771EC")]
		public float CompensatePositions;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577204", Offset = "0x577204")]
		public float CompensatePositionsB;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private float targetCompensationWeight;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		private float targetCompensationPosWeight;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57721C", Offset = "0x57721C")]
		public bool StartAfterTPose;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x341")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577254", Offset = "0x577254")]
		public bool AnimatePhysics;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57728C", Offset = "0x57728C")]
		public Renderer OptimizeWithMesh;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5772C4", Offset = "0x5772C4")]
		public Transform ObjectToFollow;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5772FC", Offset = "0x5772FC")]
		public Vector3 FollowOffset;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577334", Offset = "0x577334")]
		public EFFollowMode FollowMode;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57736C", Offset = "0x57736C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57736C", Offset = "0x57736C")]
		public float RotationSpeed;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		private bool instantRotation;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5773C0", Offset = "0x5773C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5773C0", Offset = "0x5773C0")]
		public float UltraSmoother;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577414", Offset = "0x577414")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577414", Offset = "0x577414")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577414", Offset = "0x577414")]
		public float StopLookingAbove;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577498", Offset = "0x577498")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577498", Offset = "0x577498")]
		public float StopLookingAboveFactor;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5774F0", Offset = "0x5774F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5774F0", Offset = "0x5774F0")]
		public float ChangeTargetSmoothing;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577544", Offset = "0x577544")]
		public bool AdvancedFalloff;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57757C", Offset = "0x57757C")]
		public float MaximumDistance;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5775B4", Offset = "0x5775B4")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x5775B4", Offset = "0x5775B4")]
		public float HoldRotateToOppositeUntil;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577628", Offset = "0x577628")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577628", Offset = "0x577628")]
		public float MaxOutDistanceFactor;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57767C", Offset = "0x57767C")]
		public bool Distance2D;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5776B4", Offset = "0x5776B4")]
		public Vector3 DistanceMeasurePoint;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5776EC", Offset = "0x5776EC")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x5776EC", Offset = "0x5776EC")]
		public float LookWhenAbove;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
		private float animatedLookWhenAbove;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577760", Offset = "0x577760")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x577760", Offset = "0x577760")]
		public float LookWhenAboveVertical;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
		private float animatedLookWhenAboveVertical;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5777D4", Offset = "0x5777D4")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x5777D4", Offset = "0x5777D4")]
		public float WhenAboveGoBackAfter;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577844", Offset = "0x577844")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x577844", Offset = "0x577844")]
		public float WhenAboveGoBackAfterVertical;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5778B4", Offset = "0x5778B4")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x5778B4", Offset = "0x5778B4")]
		public float WhenAboveGoBackDuration;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577928", Offset = "0x577928")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x577928", Offset = "0x577928")]
		public float StartLookElasticRangeX;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57799C", Offset = "0x57799C")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x57799C", Offset = "0x57799C")]
		public float StartLookElasticRangeY;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577A10", Offset = "0x577A10")]
		public Vector2 XRotationLimits;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577A48", Offset = "0x577A48")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x577A48", Offset = "0x577A48")]
		public float XElasticRange;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577ABC", Offset = "0x577ABC")]
		public bool LimitHolder;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		public Vector2 YRotationLimits;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577AF4", Offset = "0x577AF4")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x577AF4", Offset = "0x577AF4")]
		public float YElasticRange;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		[AttributeAttribute(Name = "FPD_PercentageAttribute", RVA = "0x577B68", Offset = "0x577B68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577B68", Offset = "0x577B68")]
		public float LookAnimatorAmount;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577BDC", Offset = "0x577BDC")]
		public Vector3 StartLookPointOffset;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577C14", Offset = "0x577C14")]
		public bool AnchorStartLookPoint;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577C4C", Offset = "0x577C4C")]
		public bool RefreshStartLookPoint;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F2")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577C84", Offset = "0x577C84")]
		public bool SyncWithAnimator;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F3")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577CBC", Offset = "0x577CBC")]
		public bool MonitorAnimator;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F4")]
		private Quaternion rootStaticRotation;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
		[AttributeAttribute(Name = "FPD_PercentageAttribute", RVA = "0x577CF4", Offset = "0x577CF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577CF4", Offset = "0x577CF4")]
		public float WeightsMultiplier;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577D68", Offset = "0x577D68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577D68", Offset = "0x577D68")]
		public float MaxRotationSpeed;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577DC0", Offset = "0x577DC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577DC0", Offset = "0x577DC0")]
		public float BaseRotationCompensation;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577E14", Offset = "0x577E14")]
		public bool DetectZeroKeyframes;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x414")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577E4C", Offset = "0x577E4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577E4C", Offset = "0x577E4C")]
		public float LookAtPositionSmoother;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577EA0", Offset = "0x577EA0")]
		public EFDeltaType DeltaType;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577ED8", Offset = "0x577ED8")]
		public float SimulationSpeed;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577F10", Offset = "0x577F10")]
		public EFAxisFixOrder FixingPreset;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x424")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577F48", Offset = "0x577F48")]
		public Vector3 ModelForwardAxis;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577F80", Offset = "0x577F80")]
		public Vector3 ModelUpAxis;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577FB8", Offset = "0x577FB8")]
		public Vector3 ManualFromAxis;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		public Vector3 ManualToAxis;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x454")]
		public Vector3 FromAuto;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		public Vector3 OffsetAuto;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46C")]
		public Vector3 parentalReferenceLookForward;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		public Vector3 parentalReferenceUp;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x484")]
		public Vector3 DynamicReferenceUp;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577FF0", Offset = "0x577FF0")]
		public Vector3 RotationOffset;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578028", Offset = "0x578028")]
		public Vector3 BackBonesAddOffset;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578060", Offset = "0x578060")]
		public Vector3 RotCorrectionMultiplier;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578098", Offset = "0x578098")]
		public bool DebugRays;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5780D0", Offset = "0x5780D0")]
		public EFAnimationStyle AnimationStyle;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578108", Offset = "0x578108")]
		public bool ConstantParentalAxisUpdate;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BD")]
		private bool updateLookAnimator;

		[Token(Token = "0x17000543")]
		public Transform MomentLookTransform
		{
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x87E2CC", Offset = "0x87E2CC", VA = "0x87E2CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DB1C", Offset = "0x57DB1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0x87E2D4", Offset = "0x87E2D4", VA = "0x87E2D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DB2C", Offset = "0x57DB2C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000544")]
		public EFHeadLookState LookState
		{
			[Token(Token = "0x6001720")]
			[Address(RVA = "0x887A24", Offset = "0x887A24", VA = "0x887A24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DD04", Offset = "0x57DD04")]
			get
			{
				return default(EFHeadLookState);
			}
			[Token(Token = "0x6001721")]
			[Address(RVA = "0x887A2C", Offset = "0x887A2C", VA = "0x887A2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DD14", Offset = "0x57DD14")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000545")]
		public string EditorIconPath
		{
			[Token(Token = "0x600172A")]
			[Address(RVA = "0x888834", Offset = "0x888834", VA = "0x888834", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000546")]
		public bool UseBoneOffsetRotation
		{
			[Token(Token = "0x6001730")]
			[Address(RVA = "0x8888A8", Offset = "0x8888A8", VA = "0x8888A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000547")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58090C", Offset = "0x58090C")]
		public float BlendToOriginal
		{
			[Token(Token = "0x6001731")]
			[Address(RVA = "0x8888B0", Offset = "0x8888B0", VA = "0x8888B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001732")]
			[Address(RVA = "0x8888C0", Offset = "0x8888C0", VA = "0x8888C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000548")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x580944", Offset = "0x580944")]
		public Vector3 LookReferenceOffset
		{
			[Token(Token = "0x6001733")]
			[Address(RVA = "0x8888D0", Offset = "0x8888D0", VA = "0x8888D0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001734")]
			[Address(RVA = "0x8888E0", Offset = "0x8888E0", VA = "0x8888E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000549")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x58097C", Offset = "0x58097C")]
		public bool AnchorReferencePoint
		{
			[Token(Token = "0x6001735")]
			[Address(RVA = "0x8888F0", Offset = "0x8888F0", VA = "0x8888F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001736")]
			[Address(RVA = "0x8888F8", Offset = "0x8888F8", VA = "0x8888F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700054A")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5809B4", Offset = "0x5809B4")]
		public bool RefreshAnchor
		{
			[Token(Token = "0x6001737")]
			[Address(RVA = "0x888904", Offset = "0x888904", VA = "0x888904")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001738")]
			[Address(RVA = "0x88890C", Offset = "0x88890C", VA = "0x88890C")]
			set
			{
			}
		}

		[Token(Token = "0x1700054B")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5809EC", Offset = "0x5809EC")]
		public float MinHeadLookAngle
		{
			[Token(Token = "0x6001739")]
			[Address(RVA = "0x888918", Offset = "0x888918", VA = "0x888918")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600173A")]
			[Address(RVA = "0x888920", Offset = "0x888920", VA = "0x888920")]
			set
			{
			}
		}

		[Token(Token = "0x1700054C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x580A24", Offset = "0x580A24")]
		public float MaxRotationDiffrence
		{
			[Token(Token = "0x600173B")]
			[Address(RVA = "0x888928", Offset = "0x888928", VA = "0x888928")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600173C")]
			[Address(RVA = "0x888930", Offset = "0x888930", VA = "0x888930")]
			set
			{
			}
		}

		[Token(Token = "0x1700054D")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x580A5C", Offset = "0x580A5C")]
		public bool AnimateWithSource
		{
			[Token(Token = "0x600173D")]
			[Address(RVA = "0x888938", Offset = "0x888938", VA = "0x888938")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600173E")]
			[Address(RVA = "0x888940", Offset = "0x888940", VA = "0x888940")]
			set
			{
			}
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x87D86C", Offset = "0x87D86C", VA = "0x87D86C")]
		public void SwitchLooking([Optional] bool? enableLooking, float transitionTime = 0.2f, [Optional] Action callback)
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x87D9C4", Offset = "0x87D9C4", VA = "0x87D9C4")]
		public void SwitchLooking(bool enable = true)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x87DA40", Offset = "0x87DA40", VA = "0x87DA40")]
		public void SetLookTarget(Transform transform)
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x87DA4C", Offset = "0x87DA4C", VA = "0x87DA4C")]
		public void SetLookPosition(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x87DA64", Offset = "0x87DA64", VA = "0x87DA64")]
		public Vector2 GetUnclampedLookAngles()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x87DAF0", Offset = "0x87DAF0", VA = "0x87DAF0")]
		public Vector2 GetLookAngles()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x87DB7C", Offset = "0x87DB7C", VA = "0x87DB7C")]
		public Vector2 GetTargetLookAngles()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x87DC08", Offset = "0x87DC08", VA = "0x87DC08")]
		public EFHeadLookState GetCurrentLookState()
		{
			return default(EFHeadLookState);
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x87DC10", Offset = "0x87DC10", VA = "0x87DC10")]
		public Vector2 ComputeAnglesTowards(Vector3 worldPosition)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x87E2DC", Offset = "0x87E2DC", VA = "0x87E2DC")]
		public GameObject SetMomentLookTarget([Optional] Transform parent, [Optional] Vector3? position, [Optional][MetadataOffset(Offset = "0x23CF6B")] float? destroyTimer, bool worldPosition = false)
		{
			return null;
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x87EBA8", Offset = "0x87EBA8", VA = "0x87EBA8")]
		public void SetMomentLookTransform(Transform transform, float timeToLeft = 0f)
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x87ECA0", Offset = "0x87ECA0", VA = "0x87ECA0")]
		public void ForceDestroyMomentTarget()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x87ED80", Offset = "0x87ED80", VA = "0x87ED80")]
		private void InitBirdMode()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x87F100", Offset = "0x87F100", VA = "0x87F100")]
		private void CalculateBirdMode()
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x87F7B4", Offset = "0x87F7B4", VA = "0x87F7B4")]
		public void SetAutoWeightsDefault()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x87FC7C", Offset = "0x87FC7C", VA = "0x87FC7C")]
		public void UpdateAutomationWeights()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x87FE24", Offset = "0x87FE24", VA = "0x87FE24")]
		public void RefreshBoneMotionWeights()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x87F93C", Offset = "0x87F93C", VA = "0x87F93C")]
		public float[] CalculateRotationWeights(float falloff)
		{
			return null;
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x87FF14", Offset = "0x87FF14", VA = "0x87FF14")]
		private void CalculateWeights(float[] weights)
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x87FFB0", Offset = "0x87FFB0", VA = "0x87FFB0")]
		public Transform GetHeadReference()
		{
			return null;
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x880038", Offset = "0x880038", VA = "0x880038")]
		public Transform GetEyesTarget()
		{
			return null;
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x8801F0", Offset = "0x8801F0", VA = "0x8801F0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x57DB3C", Offset = "0x57DB3C")]
		public Transform GetCurrentTarget()
		{
			return null;
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x8801F4", Offset = "0x8801F4", VA = "0x8801F4")]
		public Vector3 GetEyesTargetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x88028C", Offset = "0x88028C", VA = "0x88028C")]
		private void InitEyesModule()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x8808FC", Offset = "0x8808FC", VA = "0x8808FC")]
		private void UpdateEyesLogics()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x88133C", Offset = "0x88133C", VA = "0x88133C")]
		private void NoddingChangeTargetCalculations(float angleAmount)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x8814E0", Offset = "0x8814E0", VA = "0x8814E0")]
		private void NoddingCalculations()
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x8815A4", Offset = "0x8815A4", VA = "0x8815A4")]
		public void SetRotationSmoothing(float smoothingDuration = 0.5f, float smoothingPower = 2f)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x8815BC", Offset = "0x8815BC", VA = "0x8815BC")]
		private void UpdateSmoothing()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x8815FC", Offset = "0x8815FC", VA = "0x8815FC")]
		private void AnimateBonesUnsynced(Quaternion diffOnMain, Quaternion backTarget, float d)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x881C0C", Offset = "0x881C0C", VA = "0x881C0C")]
		private void AnimateBonesSynced(Quaternion diffOnMain, Quaternion backTarget, float d)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x8821A0", Offset = "0x8821A0", VA = "0x8821A0")]
		private void AnimateBonesParental(float d)
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x883210", Offset = "0x883210", VA = "0x883210")]
		private void CalculateLookAnimation()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x8852C8", Offset = "0x8852C8", VA = "0x8852C8")]
		private void SetTargetBonesRotations()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x884F38", Offset = "0x884F38", VA = "0x884F38")]
		private Quaternion LookRotationParental(Vector3 direction)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x8857BC", Offset = "0x8857BC", VA = "0x8857BC")]
		private Quaternion ParentalRotationMaths(Vector3 referenceRightDir, float xAngle, float yAngle)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x885A60", Offset = "0x885A60", VA = "0x885A60")]
		private void UpdateCorrectionMatrix()
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x885CD8", Offset = "0x885CD8", VA = "0x885CD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57DB74", Offset = "0x57DB74")]
		private IEnumerator AnimatePhysicsClock()
		{
			return null;
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x87D928", Offset = "0x87D928", VA = "0x87D928")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57DBD8", Offset = "0x57DBD8")]
		private IEnumerator SwitchLookingTransition(float transitionTime, bool enableAnimation, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x87EC14", Offset = "0x87EC14", VA = "0x87EC14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57DC3C", Offset = "0x57DC3C")]
		private IEnumerator CResetMomentLookTransform(Transform transform, float time)
		{
			return null;
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x883D1C", Offset = "0x883D1C", VA = "0x883D1C")]
		public Vector2 LimitAnglesCalculations(Vector2 angles)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x88435C", Offset = "0x88435C", VA = "0x88435C")]
		public Vector2 AnimateAnglesTowards(Vector2 angles)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x885DA8", Offset = "0x885DA8", VA = "0x885DA8")]
		public Vector3 GetDistanceMeasurePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x87DE8C", Offset = "0x87DE8C", VA = "0x87DE8C")]
		public Vector3 GetLookStartMeasurePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x885E88", Offset = "0x885E88", VA = "0x885E88")]
		public void RefreshLookStartPositionAnchor()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x885F38", Offset = "0x885F38", VA = "0x885F38")]
		private float GetDistanceMeasure(Vector3 targetPosition)
		{
			return default(float);
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x886078", Offset = "0x886078", VA = "0x886078")]
		private void UpdateLookAnimatorAmountWeight()
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x886208", Offset = "0x886208", VA = "0x886208")]
		private void EndUpdate()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x883964", Offset = "0x883964", VA = "0x883964")]
		private void LookPositionUpdate()
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x8863CC", Offset = "0x8863CC", VA = "0x8863CC")]
		private void TargetingUpdate()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x87EDC4", Offset = "0x87EDC4", VA = "0x87EDC4")]
		public Vector3 GetLookAtPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x8800C4", Offset = "0x8800C4", VA = "0x8800C4")]
		public Transform GetLookAtTransform()
		{
			return null;
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x88648C", Offset = "0x88648C", VA = "0x88648C")]
		public Vector3 GetForwardPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x87E6F4", Offset = "0x87E6F4", VA = "0x87E6F4")]
		protected void TargetChangedMeasures()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x886568", Offset = "0x886568", VA = "0x886568")]
		private void MaxDistanceCalculations()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x886650", Offset = "0x886650", VA = "0x886650", Slot = "6")]
		protected virtual void OnTargetChanged()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x886654", Offset = "0x886654", VA = "0x886654", Slot = "7")]
		protected virtual void OnRangeStateChanged()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x886658", Offset = "0x886658", VA = "0x886658")]
		private void BeginStateCheck()
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x883A74", Offset = "0x883A74", VA = "0x883A74")]
		private void LookWhenAboveGoBackCalculations()
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x886704", Offset = "0x886704", VA = "0x886704")]
		private void PreCalibrateBones()
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x8867E0", Offset = "0x8867E0", VA = "0x8867E0")]
		private void CalibrateBones()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x886E40", Offset = "0x886E40", VA = "0x886E40")]
		private void ChangeBonesRotations()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x8871B4", Offset = "0x8871B4", VA = "0x8871B4")]
		private void ResetBones(bool onlyIfNull = false)
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x8874B0", Offset = "0x8874B0", VA = "0x8874B0")]
		internal void RefreshLookBones()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x886D60", Offset = "0x886D60", VA = "0x886D60")]
		private void RefreshReferencePose()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x8879B4", Offset = "0x8879B4", VA = "0x8879B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57DCA0", Offset = "0x57DCA0")]
		private IEnumerator CRefreshReferencePose()
		{
			return null;
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x887A34", Offset = "0x887A34", VA = "0x887A34")]
		public void InitializeBaseVariables()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x8880C0", Offset = "0x8880C0", VA = "0x8880C0")]
		public void FindBaseTransform()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x88823C", Offset = "0x88823C", VA = "0x88823C")]
		public Vector3 TryFindHeadPositionInTarget(Transform other)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x885E84", Offset = "0x885E84", VA = "0x885E84")]
		private void _LOG_NoRefs()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x888654", Offset = "0x888654", VA = "0x888654")]
		private void _Debug_Rays()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x87E214", Offset = "0x87E214", VA = "0x87E214")]
		private Vector3 WrapVector(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x884CE4", Offset = "0x884CE4", VA = "0x884CE4")]
		private Vector3 ConvertFlippedAxes(Vector3 rotations)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x8855F8", Offset = "0x8855F8", VA = "0x8855F8")]
		public static float AngleAroundAxis(Vector3 firstDirection, Vector3 secondDirection, Vector3 axis)
		{
			return default(float);
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x8888A4", Offset = "0x8888A4", VA = "0x8888A4", Slot = "4")]
		public void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x885D48", Offset = "0x885D48", VA = "0x885D48")]
		private float GetClampedAngle(float current, float limit, float elastic, float sign = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x887CE4", Offset = "0x887CE4", VA = "0x887CE4")]
		private void ComputeBonesRotationsFixVariables()
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x886B5C", Offset = "0x886B5C", VA = "0x886B5C")]
		private void RefreshParentalLookReferenceAxis()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x88626C", Offset = "0x88626C", VA = "0x88626C")]
		public Vector3 GetCurrentHeadForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x88894C", Offset = "0x88894C", VA = "0x88894C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x888950", Offset = "0x888950", VA = "0x888950")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x888954", Offset = "0x888954", VA = "0x888954", Slot = "8")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x88896C", Offset = "0x88896C", VA = "0x88896C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x888ADC", Offset = "0x888ADC", VA = "0x888ADC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x888AF4", Offset = "0x888AF4", VA = "0x888AF4", Slot = "9")]
		public virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x888BC0", Offset = "0x888BC0", VA = "0x888BC0")]
		public FLookAnimator()
		{
		}
	}
}
namespace FIMSpace.Basics
{
	[Token(Token = "0x200027B")]
	public class FBasic_FreeCameraBehaviour : MonoBehaviour
	{
		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578140", Offset = "0x578140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578140", Offset = "0x578140")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5781A0", Offset = "0x5781A0")]
		public float AccelerationSmothnessValue;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5781D8", Offset = "0x5781D8")]
		public float RotationSmothnessValue;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MouseSensitivity;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool NeedRMB;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float turboModeMultiply;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 speeds;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float ySpeed;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 rotation;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float turbo;

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x8791F8", Offset = "0x8791F8", VA = "0x8791F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x8792B0", Offset = "0x8792B0", VA = "0x8792B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x8798E4", Offset = "0x8798E4", VA = "0x8798E4")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x87994C", Offset = "0x87994C", VA = "0x87994C")]
		public FBasic_FreeCameraBehaviour()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class FBasic_TPPCameraBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578210", Offset = "0x578210")]
		public Transform ToFollow;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578248", Offset = "0x578248")]
		public Vector3 FollowingOffset;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578280", Offset = "0x578280")]
		public Vector3 FollowingOffsetDirection;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5782B8", Offset = "0x5782B8")]
		public Vector2 DistanceRanges;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float targetDistance;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float animatedDistance;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 RotationRanges;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 targetSphericRotation;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 animatedSphericRotation;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5782F0", Offset = "0x5782F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5782F0", Offset = "0x5782F0")]
		public float RotationSensitivity;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578340", Offset = "0x578340")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578340", Offset = "0x578340")]
		public float RotationSpeed;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578398", Offset = "0x578398")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578398", Offset = "0x578398")]
		public float HardFollowValue;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5783EC", Offset = "0x5783EC")]
		public bool LockCursor;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool rotateCamera;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RaycastHit sightObstacleHit;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578424", Offset = "0x578424")]
		public LayerMask SightLayerMask;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 targetPosition;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57845C", Offset = "0x57845C")]
		public float CollisionOffset;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public EFUpdateClock UpdateClock;

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x879978", Offset = "0x879978", VA = "0x879978")]
		private void Start()
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x879A30", Offset = "0x879A30", VA = "0x879A30")]
		private void UpdateMethods()
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x87A3C8", Offset = "0x87A3C8", VA = "0x87A3C8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x87A3DC", Offset = "0x87A3DC", VA = "0x87A3DC")]
		private void Update()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x87A3EC", Offset = "0x87A3EC", VA = "0x87A3EC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x879A6C", Offset = "0x879A6C", VA = "0x879A6C")]
		private void InputCalculations()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x879B34", Offset = "0x879B34", VA = "0x879B34")]
		private void ZoomCalculations()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x879C58", Offset = "0x879C58", VA = "0x879C58")]
		private void FollowCalculations()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x879F60", Offset = "0x879F60", VA = "0x879F60")]
		private void RaycastCalculations()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x87A374", Offset = "0x87A374", VA = "0x87A374")]
		private void SwitchCalculations()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x87A400", Offset = "0x87A400", VA = "0x87A400")]
		private float HelperClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x8799D8", Offset = "0x8799D8", VA = "0x8799D8")]
		private void HelperSwitchCursor()
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x87A4B0", Offset = "0x87A4B0", VA = "0x87A4B0")]
		public FBasic_TPPCameraBehaviour()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public enum EFUpdateClock
	{
		[Token(Token = "0x400151D")]
		Update,
		[Token(Token = "0x400151E")]
		LateUpdate,
		[Token(Token = "0x400151F")]
		FixedUpdate
	}
}
namespace FIMSpace.FOptimizing
{
	[Token(Token = "0x200027E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56EFB8", Offset = "0x56EFB8")]
	public class Optimizer2D : EssentialOptimizer, IDropHandler, IEventSystemHandler, IFHierarchyIcon
	{
		[Token(Token = "0x1700054E")]
		public new string EditorIconPath
		{
			[Token(Token = "0x6001757")]
			[Address(RVA = "0xAFD230", Offset = "0xAFD230", VA = "0xAFD230", Slot = "56")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xAFD2A0", Offset = "0xAFD2A0", VA = "0xAFD2A0", Slot = "55")]
		public new void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xAFD2A4", Offset = "0xAFD2A4", VA = "0xAFD2A4", Slot = "54")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xAFD2BC", Offset = "0xAFD2BC", VA = "0xAFD2BC", Slot = "51")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xAFD2CC", Offset = "0xAFD2CC", VA = "0xAFD2CC", Slot = "8")]
		public override float GetReferenceDistance()
		{
			return default(float);
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xAFD390", Offset = "0xAFD390", VA = "0xAFD390", Slot = "7")]
		public override Vector3 GetReferencePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xAFD444", Offset = "0xAFD444", VA = "0xAFD444", Slot = "53")]
		public override void OnValidate()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xAFD454", Offset = "0xAFD454", VA = "0xAFD454")]
		public Optimizer2D()
		{
		}
	}
	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56EFF4", Offset = "0x56EFF4")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x56EFF4", Offset = "0x56EFF4")]
	public class OptimizersManager : MonoBehaviour, IDropHandler, IEventSystemHandler, IFHierarchyIcon
	{
		[Token(Token = "0x200037F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FBA0", Offset = "0x56FBA0")]
		private sealed class <CGetCamera>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int framesDelay;

			[Token(Token = "0x4001B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool hard;

			[Token(Token = "0x4001B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <elapsed>5__2;

			[Token(Token = "0x17000666")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D3C")]
				[Address(RVA = "0xAC5760", Offset = "0xAC5760", VA = "0xAC5760", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000667")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D3E")]
				[Address(RVA = "0xAC57C8", Offset = "0xAC57C8", VA = "0xAC57C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D39")]
			[Address(RVA = "0xAC2774", Offset = "0xAC2774", VA = "0xAC2774")]
			[DebuggerHidden]
			public <CGetCamera>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x6001D3A")]
			[Address(RVA = "0xAC56A0", Offset = "0xAC56A0", VA = "0xAC56A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D3B")]
			[Address(RVA = "0xAC56A4", Offset = "0xAC56A4", VA = "0xAC56A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D3D")]
			[Address(RVA = "0xAC5768", Offset = "0xAC5768", VA = "0xAC5768", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FBB0", Offset = "0x56FBB0")]
		private sealed class <QueueAddCamera>d__50 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Camera camera;

			[Token(Token = "0x4001B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <pos>5__2;

			[Token(Token = "0x4001B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion <rot>5__3;

			[Token(Token = "0x17000668")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D42")]
				[Address(RVA = "0xAC6108", Offset = "0xAC6108", VA = "0xAC6108", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000669")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D44")]
				[Address(RVA = "0xAC6170", Offset = "0xAC6170", VA = "0xAC6170", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D3F")]
			[Address(RVA = "0xAC287C", Offset = "0xAC287C", VA = "0xAC287C")]
			[DebuggerHidden]
			public <QueueAddCamera>d__50(int <>1__state)
			{
			}

			[Token(Token = "0x6001D40")]
			[Address(RVA = "0xAC58D4", Offset = "0xAC58D4", VA = "0xAC58D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D41")]
			[Address(RVA = "0xAC58D8", Offset = "0xAC58D8", VA = "0xAC58D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D43")]
			[Address(RVA = "0xAC6110", Offset = "0xAC6110", VA = "0xAC6110", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000381")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FBC0", Offset = "0x56FBC0")]
		private sealed class <InitialCall>d__100 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700066A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D48")]
				[Address(RVA = "0xAC5864", Offset = "0xAC5864", VA = "0xAC5864", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700066B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D4A")]
				[Address(RVA = "0xAC58CC", Offset = "0xAC58CC", VA = "0xAC58CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D45")]
			[Address(RVA = "0xAC4C98", Offset = "0xAC4C98", VA = "0xAC4C98")]
			[DebuggerHidden]
			public <InitialCall>d__100(int <>1__state)
			{
			}

			[Token(Token = "0x6001D46")]
			[Address(RVA = "0xAC57D0", Offset = "0xAC57D0", VA = "0xAC57D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D47")]
			[Address(RVA = "0xAC57D4", Offset = "0xAC57D4", VA = "0xAC57D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D49")]
			[Address(RVA = "0xAC586C", Offset = "0xAC586C", VA = "0xAC586C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578494", Offset = "0x578494")]
		public bool ExistThroughScenes;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5784CC", Offset = "0x5784CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5784CC", Offset = "0x5784CC")]
		public float GlobalMaxDistanceMultiplier;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578520", Offset = "0x578520")]
		public int SingleContainerCapacity;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578558", Offset = "0x578558")]
		public bool DrawHumanSizeRefIcon;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool UpdateOptimizersSystem;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DrawGizmos;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578590", Offset = "0x578590")]
		private static int <InstantTransition>k__BackingField;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly LayerMask LM_TransparentFX;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static OptimizersManager _get;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5785A0", Offset = "0x5785A0")]
		public Camera TargetCamera;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5785D8", Offset = "0x5785D8")]
		public int GetCameraAfter;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera _lastcamera;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Camera _mainCam;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 previousCameraPositionMoveTrigger;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<List<Optimizer_Base>> dynamicLists;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool existThroughScenes;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool initialized;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static bool AppIsQuitting;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578610", Offset = "0x578610")]
		private Dictionary<int, Optimizers_CullingContainersList> <CullingContainersIDSpecific>k__BackingField;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Optimizer_Base> notContainedStaticOptimizers;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Optimizer_Base> notContainedDynamicOptimizers;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<Optimizer_Base> notContainedEffectiveOptimizers;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<Optimizer_Base> notContainedTriggerOptimizers;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Optimizers_CullingContainer _editorToDrawContainer;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x578620", Offset = "0x578620")]
		private Plane[] <CurrentFrustumPlanes>k__BackingField;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578630", Offset = "0x578630")]
		public bool Advanced;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578668", Offset = "0x578668")]
		public bool Debugging;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5786A0", Offset = "0x5786A0")]
		public bool DetectCameraFreeze;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal static int RaycastsInThisFrame;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal static int HiddenObjects;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5786D8", Offset = "0x5786D8")]
		public float WorldScale;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578710", Offset = "0x578710")]
		public float MoveTreshold;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578748", Offset = "0x578748")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578748", Offset = "0x578748")]
		public float UpdateBoost;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57879C", Offset = "0x57879C")]
		public float[] Distances;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Optimizers_DynamicClock[] clocks;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private long totalTimeConsumption;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly List<Optimizers_Transitioning> transitioning;

		[Token(Token = "0x1700054F")]
		public static int InstantTransition
		{
			[Token(Token = "0x600175F")]
			[Address(RVA = "0xABF92C", Offset = "0xABF92C", VA = "0xABF92C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DD24", Offset = "0x57DD24")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001760")]
			[Address(RVA = "0xABF994", Offset = "0xABF994", VA = "0xABF994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DD34", Offset = "0x57DD34")]
			private set
			{
			}
		}

		[Token(Token = "0x17000550")]
		public string EditorIconPath
		{
			[Token(Token = "0x6001761")]
			[Address(RVA = "0xABFA00", Offset = "0xABFA00", VA = "0xABFA00", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000551")]
		public static OptimizersManager Instance
		{
			[Token(Token = "0x6001763")]
			[Address(RVA = "0xABFA74", Offset = "0xABFA74", VA = "0xABFA74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001764")]
			[Address(RVA = "0xABFD70", Offset = "0xABFD70", VA = "0xABFD70")]
			private set
			{
			}
		}

		[Token(Token = "0x17000552")]
		public static bool Exists
		{
			[Token(Token = "0x6001765")]
			[Address(RVA = "0xABFDDC", Offset = "0xABFDDC", VA = "0xABFDDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000553")]
		public static Camera MainCamera
		{
			[Token(Token = "0x6001766")]
			[Address(RVA = "0xAC0220", Offset = "0xAC0220", VA = "0xAC0220")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001767")]
			[Address(RVA = "0xAC0500", Offset = "0xAC0500", VA = "0xAC0500")]
			private set
			{
			}
		}

		[Token(Token = "0x17000554")]
		public Dictionary<int, Optimizers_CullingContainersList> CullingContainersIDSpecific
		{
			[Token(Token = "0x600177B")]
			[Address(RVA = "0xAC28A8", Offset = "0xAC28A8", VA = "0xAC28A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DE0C", Offset = "0x57DE0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600177C")]
			[Address(RVA = "0xAC28B0", Offset = "0xAC28B0", VA = "0xAC28B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DE1C", Offset = "0x57DE1C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000555")]
		public Plane[] CurrentFrustumPlanes
		{
			[Token(Token = "0x600178F")]
			[Address(RVA = "0xAC4194", Offset = "0xAC4194", VA = "0xAC4194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DE2C", Offset = "0x57DE2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001790")]
			[Address(RVA = "0xAC419C", Offset = "0xAC419C", VA = "0xAC419C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DE3C", Offset = "0x57DE3C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xABFA70", Offset = "0xABFA70", VA = "0xABFA70", Slot = "4")]
		public void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xABFBDC", Offset = "0xABFBDC", VA = "0xABFBDC")]
		private static void GenerateOptimizersManager()
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xAC0304", Offset = "0xAC0304", VA = "0xAC0304")]
		private static void GetMainCamera(bool hard = false)
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xABFF04", Offset = "0xABFF04", VA = "0xABFF04")]
		public void SetGet()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xAC0798", Offset = "0xAC0798", VA = "0xAC0798")]
		public static void SetNewMainCamera(Camera camera)
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xAC0C6C", Offset = "0xAC0C6C", VA = "0xAC0C6C")]
		public static void SetNewMainCameraForContainers(Camera camera)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xAC10FC", Offset = "0xAC10FC", VA = "0xAC10FC")]
		public static void SwitchOptimizersOnOrOff(bool on = true, bool unhideAll = true)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xAC12F0", Offset = "0xAC12F0", VA = "0xAC12F0")]
		private static int GetDistanceTypesCount()
		{
			return default(int);
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xAC13A4", Offset = "0xAC13A4", VA = "0xAC13A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xAC1430", Offset = "0xAC1430", VA = "0xAC1430")]
		private void Start()
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xAC1500", Offset = "0xAC1500", VA = "0xAC1500")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xAC056C", Offset = "0xAC056C", VA = "0xAC056C")]
		public void Init()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xAC0FF0", Offset = "0xAC0FF0", VA = "0xAC0FF0")]
		private void InitCameraFrustum()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xAC1F3C", Offset = "0xAC1F3C", VA = "0xAC1F3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xAC1F40", Offset = "0xAC1F40", VA = "0xAC1F40")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xAC24D4", Offset = "0xAC24D4", VA = "0xAC24D4")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xAC147C", Offset = "0xAC147C", VA = "0xAC147C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57DD44", Offset = "0x57DD44")]
		private IEnumerator CGetCamera(int framesDelay, bool hard = false)
		{
			return null;
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xAC1628", Offset = "0xAC1628", VA = "0xAC1628")]
		private void CleanLevelDatas()
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xAC27A0", Offset = "0xAC27A0", VA = "0xAC27A0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xAC280C", Offset = "0xAC280C", VA = "0xAC280C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57DDA8", Offset = "0x57DDA8")]
		private IEnumerator QueueAddCamera(Camera camera)
		{
			return null;
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xAC28B8", Offset = "0xAC28B8", VA = "0xAC28B8")]
		internal void AddToContainer(Optimizer_Base optimizer)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xAC2BDC", Offset = "0xAC2BDC", VA = "0xAC2BDC")]
		private Optimizers_CullingContainer GenerateNewContainer(Optimizer_Base optimizer)
		{
			return null;
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xAC3518", Offset = "0xAC3518", VA = "0xAC3518")]
		internal void RemoveFromContainer(Optimizer_Base optimizer)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xAC3728", Offset = "0xAC3728", VA = "0xAC3728")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xAC372C", Offset = "0xAC372C", VA = "0xAC372C")]
		internal void ClearCullingContainers()
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xAC38E0", Offset = "0xAC38E0", VA = "0xAC38E0")]
		internal void SwitchCullingContainers(bool enable)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xAC3A64", Offset = "0xAC3A64", VA = "0xAC3A64")]
		public int[] GetContainersIDs()
		{
			return null;
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xAC3BC4", Offset = "0xAC3BC4", VA = "0xAC3BC4")]
		public void RegisterNotContainedOptimizer(Optimizer_Base optimizer, bool init = false)
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xAC3C18", Offset = "0xAC3C18", VA = "0xAC3C18")]
		public void RegisterNotContainedStaticOptimizer(Optimizer_Base optimizer, bool init = false)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xAC3CC0", Offset = "0xAC3CC0", VA = "0xAC3CC0")]
		public void RegisterNotContainedDynamicOptimizer(Optimizer_Base optimizer, bool init = false)
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xAC3D68", Offset = "0xAC3D68", VA = "0xAC3D68")]
		public void RegisterNotContainedEffectiveOptimizer(Optimizer_Base optimizer, bool init = false)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xAC3E10", Offset = "0xAC3E10", VA = "0xAC3E10")]
		public void RegisterNotContainedTriggerOptimizer(Optimizer_Base optimizer, bool init = false)
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xAC3EB8", Offset = "0xAC3EB8", VA = "0xAC3EB8")]
		public void UnRegisterOptimizer(Optimizer_Base optimizer)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xAC3F0C", Offset = "0xAC3F0C", VA = "0xAC3F0C")]
		public void UnRegisterStaticOptimizer(Optimizer_Base optimizer)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xAC3FAC", Offset = "0xAC3FAC", VA = "0xAC3FAC")]
		public void UnRegisterDynamicOptimizer(Optimizer_Base optimizer)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xAC404C", Offset = "0xAC404C", VA = "0xAC404C")]
		public void UnRegisterEffectiveOptimizer(Optimizer_Base optimizer)
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xAC40EC", Offset = "0xAC40EC", VA = "0xAC40EC")]
		public void UnRegisterTriggerOptimizer(Optimizer_Base optimizer)
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xAC418C", Offset = "0xAC418C", VA = "0xAC418C")]
		public void DrawBounds(Optimizers_CullingContainer cont)
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xAC1B10", Offset = "0xAC1B10", VA = "0xAC1B10")]
		private void GenerateClocks()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xAC1EA8", Offset = "0xAC1EA8", VA = "0xAC1EA8")]
		private void RunDynamicClocks()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xAC23F0", Offset = "0xAC23F0", VA = "0xAC23F0")]
		private void DynamicUpdate()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xAC4438", Offset = "0xAC4438", VA = "0xAC4438")]
		public static void CallUpdateAll()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xAC4820", Offset = "0xAC4820", VA = "0xAC4820")]
		public int AddToDynamic(Optimizer_Base optimizer)
		{
			return default(int);
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xAC4BCC", Offset = "0xAC4BCC", VA = "0xAC4BCC")]
		public void RemoveFromDynamic(Optimizer_Base optimizer)
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xAC4614", Offset = "0xAC4614", VA = "0xAC4614")]
		public void CheckElement(Optimizer_Base optimizer, int index, bool full = true)
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xAC4368", Offset = "0xAC4368", VA = "0xAC4368")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57DE4C", Offset = "0x57DE4C")]
		private IEnumerator InitialCall()
		{
			return null;
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xAC4B64", Offset = "0xAC4B64", VA = "0xAC4B64")]
		private EOptimizingDistance QualifyDistance(float distance)
		{
			return default(EOptimizingDistance);
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xAC1CC0", Offset = "0xAC1CC0", VA = "0xAC1CC0")]
		public void RefreshDistances()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xAC4CC4", Offset = "0xAC4CC4", VA = "0xAC4CC4")]
		public bool CameraMoved(Vector3 prePos, Quaternion preRot)
		{
			return default(bool);
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xAC4F04", Offset = "0xAC4F04", VA = "0xAC4F04")]
		public void TransitionTo(Optimizer_Base optimizer, int targetLODLevel, float duration = 0f)
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xAC51B8", Offset = "0xAC51B8", VA = "0xAC51B8")]
		public void EndTransition(Optimizer_Base optimizer)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xAC22E4", Offset = "0xAC22E4", VA = "0xAC22E4")]
		private void TransitionsUpdate()
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xAC5518", Offset = "0xAC5518", VA = "0xAC5518")]
		public OptimizersManager()
		{
		}
	}
	[Token(Token = "0x2000280")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56F048", Offset = "0x56F048")]
	public class OptimizersReference : MonoBehaviour
	{
		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Optimizer_Base Parent;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5787D4", Offset = "0x5787D4")]
		public bool IsObstacle;

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xAC6178", Offset = "0xAC6178", VA = "0xAC6178")]
		public OptimizersReference()
		{
		}
	}
	[Token(Token = "0x2000281")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56F080", Offset = "0x56F080")]
	public class OptimizersScriptablesCleaner : MonoBehaviour
	{
		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject PrefabWithOptimizers;

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xAC6188", Offset = "0xAC6188", VA = "0xAC6188")]
		private void Reset()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xAC61B0", Offset = "0xAC61B0", VA = "0xAC61B0")]
		public OptimizersScriptablesCleaner()
		{
		}
	}
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56F0B8", Offset = "0x56F0B8")]
	public class ScriptableOptimizer : Optimizer_Base, IDropHandler, IEventSystemHandler, IFHierarchyIcon
	{
		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57880C", Offset = "0x57880C")]
		public bool SaveSetFilesInPrefab;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public List<ScriptableLODsController> ToOptimize;

		[Token(Token = "0x17000556")]
		public string EditorIconPath
		{
			[Token(Token = "0x60017A4")]
			[Address(RVA = "0xACB200", Offset = "0xACB200", VA = "0xACB200", Slot = "56")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xACB270", Offset = "0xACB270", VA = "0xACB270", Slot = "55")]
		public void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xACB274", Offset = "0xACB274", VA = "0xACB274", Slot = "52")]
		public override bool OptimizationListExists()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xACB284", Offset = "0xACB284", VA = "0xACB284", Slot = "28")]
		protected override LODsControllerBase AddToOptimize(LODsControllerBase lod)
		{
			return null;
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xACB28C", Offset = "0xACB28C", VA = "0xACB28C", Slot = "46")]
		public override Component GetOptimizedComponent(int i)
		{
			return null;
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xACB318", Offset = "0xACB318", VA = "0xACB318", Slot = "45")]
		internal override ILODInstance GetLODInstance(int i, int targetLODLevel)
		{
			return null;
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xACB438", Offset = "0xACB438", VA = "0xACB438", Slot = "47")]
		internal override void RemoveToOptimize(LODsControllerBase lODsControllerBase)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xACB534", Offset = "0xACB534", VA = "0xACB534")]
		public ScrLOD_Base LoadLODReference(string resourcesPath)
		{
			return null;
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xACB5FC", Offset = "0xACB5FC", VA = "0xACB5FC", Slot = "34")]
		protected override void OptimizerReset()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xACB600", Offset = "0xACB600", VA = "0xACB600", Slot = "39")]
		public override void SyncWithReferences()
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xACB79C", Offset = "0xACB79C", VA = "0xACB79C", Slot = "36")]
		protected override void OnValidateRefreshComponents()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xACB810", Offset = "0xACB810", VA = "0xACB810", Slot = "37")]
		protected override void OnValidateUpdateToOptimize(bool hard = false)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xACB860", Offset = "0xACB860", VA = "0xACB860", Slot = "31")]
		public override void CheckForNullsToOptimize()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xACB9A4", Offset = "0xACB9A4", VA = "0xACB9A4", Slot = "33")]
		public override void CleanAsset()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xACB9A8", Offset = "0xACB9A8", VA = "0xACB9A8", Slot = "29")]
		protected override void ResetLODs(bool hard = false)
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xACB9AC", Offset = "0xACB9AC", VA = "0xACB9AC", Slot = "27")]
		public override void RemoveAllComponentsFromToOptimize()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xACB9B0", Offset = "0xACB9B0", VA = "0xACB9B0", Slot = "26")]
		public override void RemoveFromToOptimizeAt(int i)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xACB9B4", Offset = "0xACB9B4", VA = "0xACB9B4", Slot = "25")]
		protected override void RefreshInitialSettingsForOptimized()
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xACBAB8", Offset = "0xACBAB8", VA = "0xACBAB8", Slot = "20")]
		public override void AssignComponentsToOptimizeFrom(Component target, bool includeAdvanced = false)
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xACBABC", Offset = "0xACBABC", VA = "0xACBABC")]
		protected void TryAddLODControllerFor(ScrLOD_Base lod, Component target, List<Optimizer_Base> childOptims)
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xACBAC0", Offset = "0xACBAC0", VA = "0xACBAC0", Slot = "21")]
		public override void AssignCustomComponentToOptimize(MonoBehaviour target)
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xACBAC4", Offset = "0xACBAC4", VA = "0xACBAC4", Slot = "23")]
		public override bool ContainsComponent(Component component)
		{
			return default(bool);
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xACBBA4", Offset = "0xACBBA4", VA = "0xACBBA4", Slot = "24")]
		public override void RefreshToOptimizeList()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xACBC68", Offset = "0xACBC68", VA = "0xACBC68", Slot = "42")]
		public override int GetToOptimizeCount()
		{
			return default(int);
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xACBCBC", Offset = "0xACBCBC", VA = "0xACBCBC", Slot = "51")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xACBE04", Offset = "0xACBE04", VA = "0xACBE04", Slot = "40")]
		public override void EditorUpdate()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xACBF98", Offset = "0xACBF98", VA = "0xACBF98", Slot = "13")]
		protected override void AllLODComponents_ApplyCulledState()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xACC0A8", Offset = "0xACC0A8", VA = "0xACC0A8", Slot = "14")]
		protected override void AllLODComponents_ApplyCurrentState()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xACC1D0", Offset = "0xACC1D0", VA = "0xACC1D0", Slot = "15")]
		protected override void AllLODComponents_RefreshChoosedLODState(int lodLevel)
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xACC270", Offset = "0xACC270", VA = "0xACC270", Slot = "16")]
		protected override void AllLODComponents_ChangeChoosedLODState(int lodLevel)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xACC390", Offset = "0xACC390", VA = "0xACC390", Slot = "44")]
		internal override Optimizers_LODTransition GetLodTransitionFor(int i, int targetLODLevel)
		{
			return null;
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xACC520", Offset = "0xACC520", VA = "0xACC520", Slot = "43")]
		public override void RefreshLODSettings()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xACC534", Offset = "0xACC534", VA = "0xACC534")]
		public ScriptableOptimizer()
		{
		}
	}
	[Token(Token = "0x2000283")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56F0F4", Offset = "0x56F0F4")]
	public class TerrainOptimizer : ScriptableOptimizer, IDropHandler, IEventSystemHandler, IFHierarchyIcon
	{
		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578844", Offset = "0x578844")]
		public Terrain Terrain;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public TerrainCollider TerrainCollider;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57887C", Offset = "0x57887C")]
		public bool SafeBorders;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5788B4", Offset = "0x5788B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5788B4", Offset = "0x5788B4")]
		public int CheckQuality;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public int spheresInvisible;

		[Token(Token = "0x17000557")]
		public new string EditorIconPath
		{
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0xACC5A4", Offset = "0xACC5A4", VA = "0xACC5A4", Slot = "56")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xACC614", Offset = "0xACC614", VA = "0xACC614", Slot = "55")]
		public new void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xACC618", Offset = "0xACC618", VA = "0xACC618", Slot = "54")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xACC878", Offset = "0xACC878", VA = "0xACC878", Slot = "25")]
		protected override void RefreshInitialSettingsForOptimized()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xACC89C", Offset = "0xACC89C", VA = "0xACC89C", Slot = "4")]
		protected override void InitCullingGroups(float[] distances, float detectionSphereRadius = 2.5f, [Optional] Camera targetCamera)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xACD2F4", Offset = "0xACD2F4", VA = "0xACD2F4", Slot = "5")]
		public override void CullingGroupStateChanged(CullingGroupEvent cullingEvent)
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xACCBE4", Offset = "0xACCBE4", VA = "0xACCBE4")]
		protected BoundingSphere[] GetBoundingSpheres()
		{
			return null;
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xACD534", Offset = "0xACD534", VA = "0xACD534", Slot = "7")]
		public override Vector3 GetReferencePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xACD544", Offset = "0xACD544", VA = "0xACD544")]
		private bool IsTargetOutside()
		{
			return default(bool);
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xACD54C", Offset = "0xACD54C", VA = "0xACD54C")]
		private Vector3 GetNearestPointOnTerrain(Vector3 from)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xACD5AC", Offset = "0xACD5AC", VA = "0xACD5AC")]
		private void RefreshTerrainComponents()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xACC778", Offset = "0xACC778", VA = "0xACC778")]
		private void AddTerrainToOptimize()
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xACD694", Offset = "0xACD694", VA = "0xACD694")]
		private bool HaveTerrain()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xACD83C", Offset = "0xACD83C", VA = "0xACD83C")]
		public float LimitRadius(float value)
		{
			return default(float);
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xACD100", Offset = "0xACD100", VA = "0xACD100")]
		private Vector3 GetTerrainCenter()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xACD938", Offset = "0xACD938", VA = "0xACD938")]
		private float GetMinRadius()
		{
			return default(float);
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xACDA58", Offset = "0xACDA58", VA = "0xACDA58", Slot = "53")]
		public override void OnValidate()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xACDB10", Offset = "0xACDB10", VA = "0xACDB10", Slot = "38")]
		protected override void OnValidateCheckForStatic()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xACDB18", Offset = "0xACDB18", VA = "0xACDB18")]
		private void DrawTerrainSphere(float radius, float inRadius = 0f)
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xACF8E0", Offset = "0xACF8E0", VA = "0xACF8E0")]
		private void DrawVertices(List<Vector3> v, Vector3 offset, bool vert = false)
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xACFC20", Offset = "0xACFC20", VA = "0xACFC20")]
		private void DrawVerticesVert(List<Vector3> v, Vector3 offset)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xACFE24", Offset = "0xACFE24", VA = "0xACFE24")]
		public TerrainOptimizer()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public static class Optimizers_EditorHelperMethods
	{
		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color[] lODColors;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Color culledLODColor;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Color hiddenLODColor;

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xAC7028", Offset = "0xAC7028", VA = "0xAC7028")]
		public static bool CanDrawErrorMessage()
		{
			return default(bool);
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xAC7030", Offset = "0xAC7030", VA = "0xAC7030")]
		public static void DisplayError(string title, string message, string buttonText)
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xAC7034", Offset = "0xAC7034", VA = "0xAC7034")]
		public static Color GetLODColor(int index, int count, float multiply = 1f, float saturation = 1f, float value = 1f, float multiplyHiddenCull = 1f)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x2000285")]
	public enum EOptimizingMethod
	{
		[Token(Token = "0x4001553")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578908", Offset = "0x578908")]
		Static,
		[Token(Token = "0x4001554")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578940", Offset = "0x578940")]
		Dynamic,
		[Token(Token = "0x4001555")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578978", Offset = "0x578978")]
		Effective,
		[Token(Token = "0x4001556")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5789B0", Offset = "0x5789B0")]
		TriggerBased
	}
	[Token(Token = "0x2000286")]
	public enum EOptimizingDistance
	{
		[Token(Token = "0x4001558")]
		Nearest,
		[Token(Token = "0x4001559")]
		Near,
		[Token(Token = "0x400155A")]
		MidFar,
		[Token(Token = "0x400155B")]
		Far,
		[Token(Token = "0x400155C")]
		Farthest
	}
	[Token(Token = "0x2000287")]
	public enum EDOTSObstacle
	{
		[Token(Token = "0x400155E")]
		StopRays,
		[Token(Token = "0x400155F")]
		SeeThrough,
		[Token(Token = "0x4001560")]
		Auto
	}
	[Token(Token = "0x2000288")]
	public enum EDOTSDetection
	{
		[Token(Token = "0x4001562")]
		Auto,
		[Token(Token = "0x4001563")]
		Sphere,
		[Token(Token = "0x4001564")]
		Cube,
		[Token(Token = "0x4001565")]
		Custom
	}
	[Token(Token = "0x2000289")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56F130", Offset = "0x56F130")]
	public class Optimizers_TriggerHelper : MonoBehaviour
	{
		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Optimizer_Base Optimizer;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int TriggerIndex;

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xAC8238", Offset = "0xAC8238", VA = "0xAC8238")]
		public Optimizers_TriggerHelper Initialize(Optimizer_Base optimizer, int index)
		{
			return null;
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xAC8244", Offset = "0xAC8244", VA = "0xAC8244")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xAC8388", Offset = "0xAC8388", VA = "0xAC8388")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xAC84CC", Offset = "0xAC84CC", VA = "0xAC84CC")]
		public Optimizers_TriggerHelper()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public interface ILODInstance
	{
		[Token(Token = "0x17000558")]
		int Index
		{
			[Token(Token = "0x60017E3")]
			get;
			[Token(Token = "0x60017E4")]
			set;
		}

		[Token(Token = "0x17000559")]
		string Name
		{
			[Token(Token = "0x60017E5")]
			get;
			[Token(Token = "0x60017E6")]
			set;
		}

		[Token(Token = "0x1700055A")]
		bool CustomEditor
		{
			[Token(Token = "0x60017E7")]
			get;
		}

		[Token(Token = "0x1700055B")]
		bool Disable
		{
			[Token(Token = "0x60017E8")]
			get;
			[Token(Token = "0x60017E9")]
			set;
		}

		[Token(Token = "0x1700055C")]
		bool DrawDisableOption
		{
			[Token(Token = "0x60017EA")]
			get;
		}

		[Token(Token = "0x1700055D")]
		bool SupportingTransitions
		{
			[Token(Token = "0x60017EB")]
			get;
		}

		[Token(Token = "0x1700055E")]
		bool DrawLowererSlider
		{
			[Token(Token = "0x60017EC")]
			get;
		}

		[Token(Token = "0x1700055F")]
		float QualityLowerer
		{
			[Token(Token = "0x60017ED")]
			get;
			[Token(Token = "0x60017EE")]
			set;
		}

		[Token(Token = "0x17000560")]
		string HeaderText
		{
			[Token(Token = "0x60017EF")]
			get;
		}

		[Token(Token = "0x17000561")]
		float ToCullDelay
		{
			[Token(Token = "0x60017F0")]
			get;
		}

		[Token(Token = "0x17000562")]
		bool SupportVersions
		{
			[Token(Token = "0x60017F1")]
			get;
		}

		[Token(Token = "0x17000563")]
		int DrawingVersion
		{
			[Token(Token = "0x60017F2")]
			get;
			[Token(Token = "0x60017F3")]
			set;
		}

		[Token(Token = "0x17000564")]
		bool LockSettings
		{
			[Token(Token = "0x60017F4")]
			get;
			[Token(Token = "0x60017F5")]
			set;
		}

		[Token(Token = "0x17000565")]
		Texture Icon
		{
			[Token(Token = "0x60017F6")]
			get;
		}

		[Token(Token = "0x60017F7")]
		void SetSameValuesAsComponent(Component component);

		[Token(Token = "0x60017F8")]
		void ApplySettingsToTheComponent(Component component, ILODInstance initialSettingsReference);

		[Token(Token = "0x60017F9")]
		void AssignAutoSettingsAsForLODLevel(int lodIndex, int lodCount, Component source);

		[Token(Token = "0x60017FA")]
		void AssignSettingsAsForCulled(Component component);

		[Token(Token = "0x60017FB")]
		void AssignSettingsAsForNearest(Component component);

		[Token(Token = "0x60017FC")]
		void AssignSettingsAsForHidden(Component component);

		[Token(Token = "0x60017FD")]
		ILODInstance GetCopy();

		[Token(Token = "0x60017FE")]
		void InterpolateBetween(ILODInstance lodA, ILODInstance lodB, float transitionToB);
	}
	[Token(Token = "0x200028B")]
	public static class FLOD
	{
		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xAF57F0", Offset = "0xAF57F0", VA = "0xAF57F0")]
		public static void AssignDefaultNearestParams(ILODInstance flod)
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xAF58B0", Offset = "0xAF58B0", VA = "0xAF58B0")]
		public static void AssignDefaultCulledParams(ILODInstance flod)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xAF59D8", Offset = "0xAF59D8", VA = "0xAF59D8")]
		public static void AssignDefaultHiddenParams(ILODInstance flod)
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xAF5B00", Offset = "0xAF5B00", VA = "0xAF5B00")]
		public static void ApplyEnableDisableState(ILODInstance flod, Component component)
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xAF5C58", Offset = "0xAF5C58", VA = "0xAF5C58")]
		public static void DoBaseInterpolation(ILODInstance current, ILODInstance lodA, ILODInstance lodB, float transitionToB)
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xAF5ECC", Offset = "0xAF5ECC", VA = "0xAF5ECC")]
		public static float GetValueForLODLevel(float from, float to, float lodLevel, float lodLevels)
		{
			return default(float);
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xAF5E98", Offset = "0xAF5E98", VA = "0xAF5E98")]
		public static bool BoolTransition(bool defaultV, bool a, bool b, float transition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xAF5F60", Offset = "0xAF5F60", VA = "0xAF5F60")]
		public static object ObjectTransition(object defaultV, object a, object b, float transition)
		{
			return null;
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xAF5F80", Offset = "0xAF5F80", VA = "0xAF5F80")]
		public static Texture GetIcon(Component comp, ILODInstance lod)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200028C")]
	public sealed class LODI_AudioSource : ILODInstance
	{
		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int index;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal string LODName;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool SetDisabled;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		[SerializeField]
		private bool _Locked;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private AudioSource cmp;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578A68", Offset = "0x578A68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578A68", Offset = "0x578A68")]
		public float PriorityFactor;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float Volume;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool unPause;

		[Token(Token = "0x17000566")]
		public int Index
		{
			[Token(Token = "0x6001808")]
			[Address(RVA = "0xAF6124", Offset = "0xAF6124", VA = "0xAF6124", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001809")]
			[Address(RVA = "0xAF612C", Offset = "0xAF612C", VA = "0xAF612C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000567")]
		public string Name
		{
			[Token(Token = "0x600180A")]
			[Address(RVA = "0xAF6134", Offset = "0xAF6134", VA = "0xAF6134", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x600180B")]
			[Address(RVA = "0xAF613C", Offset = "0xAF613C", VA = "0xAF613C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000568")]
		public bool CustomEditor
		{
			[Token(Token = "0x600180C")]
			[Address(RVA = "0xAF6144", Offset = "0xAF6144", VA = "0xAF6144", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000569")]
		public bool Disable
		{
			[Token(Token = "0x600180D")]
			[Address(RVA = "0xAF614C", Offset = "0xAF614C", VA = "0xAF614C", Slot = "9")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600180E")]
			[Address(RVA = "0xAF6154", Offset = "0xAF6154", VA = "0xAF6154", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700056A")]
		public bool DrawDisableOption
		{
			[Token(Token = "0x600180F")]
			[Address(RVA = "0xAF6160", Offset = "0xAF6160", VA = "0xAF6160", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700056B")]
		public bool SupportingTransitions
		{
			[Token(Token = "0x6001810")]
			[Address(RVA = "0xAF6168", Offset = "0xAF6168", VA = "0xAF6168", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700056C")]
		public bool DrawLowererSlider
		{
			[Token(Token = "0x6001811")]
			[Address(RVA = "0xAF6170", Offset = "0xAF6170", VA = "0xAF6170", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700056D")]
		public float QualityLowerer
		{
			[Token(Token = "0x6001812")]
			[Address(RVA = "0xAF6178", Offset = "0xAF6178", VA = "0xAF6178", Slot = "14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001813")]
			[Address(RVA = "0xAF6180", Offset = "0xAF6180", VA = "0xAF6180", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x1700056E")]
		public string HeaderText
		{
			[Token(Token = "0x6001814")]
			[Address(RVA = "0xAF61D0", Offset = "0xAF61D0", VA = "0xAF61D0", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056F")]
		public bool SupportVersions
		{
			[Token(Token = "0x6001815")]
			[Address(RVA = "0xAF6218", Offset = "0xAF6218", VA = "0xAF6218", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000570")]
		public int DrawingVersion
		{
			[Token(Token = "0x6001816")]
			[Address(RVA = "0xAF6220", Offset = "0xAF6220", VA = "0xAF6220", Slot = "19")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001817")]
			[Address(RVA = "0xAF6228", Offset = "0xAF6228", VA = "0xAF6228", Slot = "20")]
			set
			{
			}
		}

		[Token(Token = "0x17000571")]
		public float ToCullDelay
		{
			[Token(Token = "0x6001818")]
			[Address(RVA = "0xAF6278", Offset = "0xAF6278", VA = "0xAF6278", Slot = "17")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000572")]
		public bool LockSettings
		{
			[Token(Token = "0x6001819")]
			[Address(RVA = "0xAF6280", Offset = "0xAF6280", VA = "0xAF6280", Slot = "21")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600181A")]
			[Address(RVA = "0xAF6288", Offset = "0xAF6288", VA = "0xAF6288", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x17000573")]
		public Texture Icon
		{
			[Token(Token = "0x600181B")]
			[Address(RVA = "0xAF6294", Offset = "0xAF6294", VA = "0xAF6294", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000574")]
		public Component TargetComponent
		{
			[Token(Token = "0x600181C")]
			[Address(RVA = "0xAF629C", Offset = "0xAF629C", VA = "0xAF629C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xAF62A4", Offset = "0xAF62A4", VA = "0xAF62A4", Slot = "24")]
		public void SetSameValuesAsComponent(Component component)
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xAF6370", Offset = "0xAF6370", VA = "0xAF6370", Slot = "31")]
		public void InterpolateBetween(ILODInstance a, ILODInstance b, float transitionToB)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xAF6470", Offset = "0xAF6470", VA = "0xAF6470", Slot = "25")]
		public void ApplySettingsToTheComponent(Component component, ILODInstance initialSettings)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xAF65DC", Offset = "0xAF65DC", VA = "0xAF65DC", Slot = "26")]
		public void AssignAutoSettingsAsForLODLevel(int lodIndex, int lodCount, Component source)
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xAF66F0", Offset = "0xAF66F0", VA = "0xAF66F0", Slot = "27")]
		public void AssignSettingsAsForCulled(Component component)
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xAF6714", Offset = "0xAF6714", VA = "0xAF6714", Slot = "28")]
		public void AssignSettingsAsForNearest(Component component)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xAF673C", Offset = "0xAF673C", VA = "0xAF673C", Slot = "30")]
		public ILODInstance GetCopy()
		{
			return null;
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xAF6794", Offset = "0xAF6794", VA = "0xAF6794", Slot = "29")]
		public void AssignSettingsAsForHidden(Component component)
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xAF2B88", Offset = "0xAF2B88", VA = "0xAF2B88")]
		public LODI_AudioSource()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028D")]
	public sealed class LODI_Light : ILODInstance
	{
		[Token(Token = "0x2000382")]
		public enum EOptLightMode
		{
			[Token(Token = "0x4001B4B")]
			Auto,
			[Token(Token = "0x4001B4C")]
			Important,
			[Token(Token = "0x4001B4D")]
			NotImportant
		}

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int index;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal string LODName;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool SetDisabled;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		[SerializeField]
		private bool _Locked;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private Light cmp;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578B4C", Offset = "0x578B4C")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x578B4C", Offset = "0x578B4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578B4C", Offset = "0x578B4C")]
		public float IntensityMul;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x578BD0", Offset = "0x578BD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578BD0", Offset = "0x578BD0")]
		public float RangeMul;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578C40", Offset = "0x578C40")]
		public LightShadows ShadowsMode;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x578C54", Offset = "0x578C54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578C54", Offset = "0x578C54")]
		public float ShadowsStrength;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public EOptLightMode RenderMode;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578CC4", Offset = "0x578CC4")]
		public bool ChangeIntensity;

		[Token(Token = "0x17000575")]
		public int Index
		{
			[Token(Token = "0x6001826")]
			[Address(RVA = "0xAF6798", Offset = "0xAF6798", VA = "0xAF6798", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001827")]
			[Address(RVA = "0xAF67A0", Offset = "0xAF67A0", VA = "0xAF67A0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000576")]
		public string Name
		{
			[Token(Token = "0x6001828")]
			[Address(RVA = "0xAF67A8", Offset = "0xAF67A8", VA = "0xAF67A8", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001829")]
			[Address(RVA = "0xAF67B0", Offset = "0xAF67B0", VA = "0xAF67B0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000577")]
		public bool CustomEditor
		{
			[Token(Token = "0x600182A")]
			[Address(RVA = "0xAF67B8", Offset = "0xAF67B8", VA = "0xAF67B8", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000578")]
		public bool Disable
		{
			[Token(Token = "0x600182B")]
			[Address(RVA = "0xAF67C0", Offset = "0xAF67C0", VA = "0xAF67C0", Slot = "9")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600182C")]
			[Address(RVA = "0xAF67C8", Offset = "0xAF67C8", VA = "0xAF67C8", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000579")]
		public bool DrawDisableOption
		{
			[Token(Token = "0x600182D")]
			[Address(RVA = "0xAF67D4", Offset = "0xAF67D4", VA = "0xAF67D4", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700057A")]
		public bool SupportingTransitions
		{
			[Token(Token = "0x600182E")]
			[Address(RVA = "0xAF67DC", Offset = "0xAF67DC", VA = "0xAF67DC", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700057B")]
		public bool DrawLowererSlider
		{
			[Token(Token = "0x600182F")]
			[Address(RVA = "0xAF67E4", Offset = "0xAF67E4", VA = "0xAF67E4", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700057C")]
		public float QualityLowerer
		{
			[Token(Token = "0x6001830")]
			[Address(RVA = "0xAF67EC", Offset = "0xAF67EC", VA = "0xAF67EC", Slot = "14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001831")]
			[Address(RVA = "0xAF67F4", Offset = "0xAF67F4", VA = "0xAF67F4", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x1700057D")]
		public string HeaderText
		{
			[Token(Token = "0x6001832")]
			[Address(RVA = "0xAF6844", Offset = "0xAF6844", VA = "0xAF6844", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057E")]
		public float ToCullDelay
		{
			[Token(Token = "0x6001833")]
			[Address(RVA = "0xAF688C", Offset = "0xAF688C", VA = "0xAF688C", Slot = "17")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700057F")]
		public bool SupportVersions
		{
			[Token(Token = "0x6001834")]
			[Address(RVA = "0xAF6894", Offset = "0xAF6894", VA = "0xAF6894", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000580")]
		public int DrawingVersion
		{
			[Token(Token = "0x6001835")]
			[Address(RVA = "0xAF689C", Offset = "0xAF689C", VA = "0xAF689C", Slot = "19")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001836")]
			[Address(RVA = "0xAF68A4", Offset = "0xAF68A4", VA = "0xAF68A4", Slot = "20")]
			set
			{
			}
		}

		[Token(Token = "0x17000581")]
		public bool LockSettings
		{
			[Token(Token = "0x6001837")]
			[Address(RVA = "0xAF68F4", Offset = "0xAF68F4", VA = "0xAF68F4", Slot = "21")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001838")]
			[Address(RVA = "0xAF68FC", Offset = "0xAF68FC", VA = "0xAF68FC", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x17000582")]
		public Texture Icon
		{
			[Token(Token = "0x6001839")]
			[Address(RVA = "0xAF6908", Offset = "0xAF6908", VA = "0xAF6908", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000583")]
		public Component TargetComponent
		{
			[Token(Token = "0x600183A")]
			[Address(RVA = "0xAF6910", Offset = "0xAF6910", VA = "0xAF6910")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xAF6918", Offset = "0xAF6918", VA = "0xAF6918", Slot = "24")]
		public void SetSameValuesAsComponent(Component component)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xAF6A10", Offset = "0xAF6A10", VA = "0xAF6A10", Slot = "31")]
		public void InterpolateBetween(ILODInstance aa, ILODInstance bb, float transitionToB)
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xAF6C08", Offset = "0xAF6C08", VA = "0xAF6C08", Slot = "25")]
		public void ApplySettingsToTheComponent(Component component, ILODInstance initialSettings)
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xAF6DA8", Offset = "0xAF6DA8", VA = "0xAF6DA8", Slot = "26")]
		public void AssignAutoSettingsAsForLODLevel(int lodIndex, int lodCount, Component component)
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xAF6FB8", Offset = "0xAF6FB8", VA = "0xAF6FB8", Slot = "27")]
		public void AssignSettingsAsForCulled(Component component)
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xAF6FE4", Offset = "0xAF6FE4", VA = "0xAF6FE4", Slot = "28")]
		public void AssignSettingsAsForNearest(Component component)
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xAF7078", Offset = "0xAF7078", VA = "0xAF7078", Slot = "29")]
		public void AssignSettingsAsForHidden(Component componentnent)
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xAF707C", Offset = "0xAF707C", VA = "0xAF707C", Slot = "30")]
		public ILODInstance GetCopy()
		{
			return null;
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xAF2A20", Offset = "0xAF2A20", VA = "0xAF2A20")]
		public LODI_Light()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028E")]
	public sealed class LODI_MonoBehaviour : ILODInstance
	{
		[Serializable]
		[Token(Token = "0x2000383")]
		public class ParameterHelper
		{
			[Token(Token = "0x4001B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Change;

			[Token(Token = "0x4001B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int ParamID;

			[Token(Token = "0x4001B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int TypeID;

			[Token(Token = "0x4001B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string ParamName;

			[Token(Token = "0x4001B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string ParamType;

			[Token(Token = "0x4001B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool Supported;

			[Token(Token = "0x4001B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int Int;

			[Token(Token = "0x4001B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float Float;

			[Token(Token = "0x4001B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector2 Vec2;

			[Token(Token = "0x4001B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Vector3 Vec3;

			[Token(Token = "0x4001B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Color Color;

			[Token(Token = "0x4001B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public bool Bool;

			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0xAF7B2C", Offset = "0xAF7B2C", VA = "0xAF7B2C")]
			public ParameterHelper(string name, string type)
			{
			}

			[Token(Token = "0x6001D4C")]
			[Address(RVA = "0xAF7D10", Offset = "0xAF7D10", VA = "0xAF7D10")]
			public void SetValue(int valueId, object value)
			{
			}

			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0xAF7BAC", Offset = "0xAF7BAC", VA = "0xAF7BAC")]
			public object GetValue(int valueId)
			{
				return null;
			}

			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0xAF86E8", Offset = "0xAF86E8", VA = "0xAF86E8")]
			public void DrawParameter()
			{
			}
		}

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int index;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal string LODName;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool SetDisabled;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[HideInInspector]
		private int ver;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private bool _Locked;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private MonoBehaviour cmp;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool BaseLOD;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent Event;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<ParameterHelper> Parameters;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<ParameterHelper> NotSupported;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal bool DrawNotSupported;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int intId;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int floatId;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int boolId;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int colorId;

		[Token(Token = "0x17000584")]
		public int Index
		{
			[Token(Token = "0x6001844")]
			[Address(RVA = "0xAF70D4", Offset = "0xAF70D4", VA = "0xAF70D4", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001845")]
			[Address(RVA = "0xAF70DC", Offset = "0xAF70DC", VA = "0xAF70DC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000585")]
		public string Name
		{
			[Token(Token = "0x6001846")]
			[Address(RVA = "0xAF70E4", Offset = "0xAF70E4", VA = "0xAF70E4", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001847")]
			[Address(RVA = "0xAF70EC", Offset = "0xAF70EC", VA = "0xAF70EC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000586")]
		public bool CustomEditor
		{
			[Token(Token = "0x6001848")]
			[Address(RVA = "0xAF70F4", Offset = "0xAF70F4", VA = "0xAF70F4", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000587")]
		public bool Disable
		{
			[Token(Token = "0x6001849")]
			[Address(RVA = "0xAF70FC", Offset = "0xAF70FC", VA = "0xAF70FC", Slot = "9")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600184A")]
			[Address(RVA = "0xAF7104", Offset = "0xAF7104", VA = "0xAF7104", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000588")]
		public bool DrawDisableOption
		{
			[Token(Token = "0x600184B")]
			[Address(RVA = "0xAF7110", Offset = "0xAF7110", VA = "0xAF7110", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000589")]
		public bool SupportingTransitions
		{
			[Token(Token = "0x600184C")]
			[Address(RVA = "0xAF7118", Offset = "0xAF7118", VA = "0xAF7118", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700058A")]
		public bool DrawLowererSlider
		{
			[Token(Token = "0x600184D")]
			[Address(RVA = "0xAF7120", Offset = "0xAF7120", VA = "0xAF7120", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700058B")]
		public float QualityLowerer
		{
			[Token(Token = "0x600184E")]
			[Address(RVA = "0xAF7128", Offset = "0xAF7128", VA = "0xAF7128", Slot = "14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600184F")]
			[Address(RVA = "0xAF7130", Offset = "0xAF7130", VA = "0xAF7130", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x1700058C")]
		public string HeaderText
		{
			[Token(Token = "0x6001850")]
			[Address(RVA = "0xAF7180", Offset = "0xAF7180", VA = "0xAF7180", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058D")]
		public float ToCullDelay
		{
			[Token(Token = "0x6001851")]
			[Address(RVA = "0xAF71C8", Offset = "0xAF71C8", VA = "0xAF71C8", Slot = "17")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700058E")]
		public bool SupportVersions
		{
			[Token(Token = "0x6001852")]
			[Address(RVA = "0xAF71D0", Offset = "0xAF71D0", VA = "0xAF71D0", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700058F")]
		public int DrawingVersion
		{
			[Token(Token = "0x6001853")]
			[Address(RVA = "0xAF71D8", Offset = "0xAF71D8", VA = "0xAF71D8", Slot = "19")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001854")]
			[Address(RVA = "0xAF71E0", Offset = "0xAF71E0", VA = "0xAF71E0", Slot = "20")]
			set
			{
			}
		}

		[Token(Token = "0x17000590")]
		public bool LockSettings
		{
			[Token(Token = "0x6001855")]
			[Address(RVA = "0xAF71E8", Offset = "0xAF71E8", VA = "0xAF71E8", Slot = "21")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001856")]
			[Address(RVA = "0xAF71F0", Offset = "0xAF71F0", VA = "0xAF71F0", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x17000591")]
		public Texture Icon
		{
			[Token(Token = "0x6001857")]
			[Address(RVA = "0xAF71FC", Offset = "0xAF71FC", VA = "0xAF71FC", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000592")]
		public Component TargetComponent
		{
			[Token(Token = "0x6001858")]
			[Address(RVA = "0xAF7204", Offset = "0xAF7204", VA = "0xAF7204")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xAF720C", Offset = "0xAF720C", VA = "0xAF720C", Slot = "24")]
		public void SetSameValuesAsComponent(Component component)
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xAF7340", Offset = "0xAF7340", VA = "0xAF7340", Slot = "25")]
		public void ApplySettingsToTheComponent(Component component, ILODInstance initialSettingsReference)
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xAF7700", Offset = "0xAF7700", VA = "0xAF7700", Slot = "26")]
		public void AssignAutoSettingsAsForLODLevel(int lodIndex, int lodCount, Component component)
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xAF7808", Offset = "0xAF7808", VA = "0xAF7808", Slot = "27")]
		public void AssignSettingsAsForCulled(Component component)
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xAF7834", Offset = "0xAF7834", VA = "0xAF7834", Slot = "28")]
		public void AssignSettingsAsForNearest(Component component)
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xAF78E4", Offset = "0xAF78E4", VA = "0xAF78E4", Slot = "29")]
		public void AssignSettingsAsForHidden(Component component)
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xAF78E8", Offset = "0xAF78E8", VA = "0xAF78E8", Slot = "30")]
		public ILODInstance GetCopy()
		{
			return null;
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xAF7EF4", Offset = "0xAF7EF4", VA = "0xAF7EF4", Slot = "31")]
		public void InterpolateBetween(ILODInstance lodA, ILODInstance lodB, float transitionToB)
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xAF852C", Offset = "0xAF852C", VA = "0xAF852C")]
		public void AssignToggler(ILODInstance reference)
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xAF8530", Offset = "0xAF8530", VA = "0xAF8530")]
		public void Simplify()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xAF2A9C", Offset = "0xAF2A9C", VA = "0xAF2A9C")]
		public LODI_MonoBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028F")]
	public sealed class LODI_ParticleSystem : ILODInstance
	{
		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int index;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal string LODName;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool SetDisabled;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float QLowerer;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal float CullingDelay;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		[SerializeField]
		private bool _Locked;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private ParticleSystem cmp;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578E48", Offset = "0x578E48")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x578E48", Offset = "0x578E48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578E48", Offset = "0x578E48")]
		public float EmmissionAmount;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x578ECC", Offset = "0x578ECC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578ECC", Offset = "0x578ECC")]
		public float BurstsAmount;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x578F3C", Offset = "0x578F3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578F3C", Offset = "0x578F3C")]
		public float ParticleSizeMul;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private ParticleSystem.Burst[] Bursts;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x578FE4", Offset = "0x578FE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578FE4", Offset = "0x578FE4")]
		public float MaxParticlAmount;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579054", Offset = "0x579054")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x579054", Offset = "0x579054")]
		public float OverDistanceMul;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x5790C4", Offset = "0x5790C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5790C4", Offset = "0x5790C4")]
		public float LifetimeAlpha;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private ParticleSystem.MinMaxGradient ColorOverLifetime;

		[Token(Token = "0x17000593")]
		public int Index
		{
			[Token(Token = "0x6001865")]
			[Address(RVA = "0xAF86EC", Offset = "0xAF86EC", VA = "0xAF86EC", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001866")]
			[Address(RVA = "0xAF86F4", Offset = "0xAF86F4", VA = "0xAF86F4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000594")]
		public string Name
		{
			[Token(Token = "0x6001867")]
			[Address(RVA = "0xAF86FC", Offset = "0xAF86FC", VA = "0xAF86FC", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001868")]
			[Address(RVA = "0xAF8704", Offset = "0xAF8704", VA = "0xAF8704", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000595")]
		public bool CustomEditor
		{
			[Token(Token = "0x6001869")]
			[Address(RVA = "0xAF870C", Offset = "0xAF870C", VA = "0xAF870C", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000596")]
		public bool Disable
		{
			[Token(Token = "0x600186A")]
			[Address(RVA = "0xAF8714", Offset = "0xAF8714", VA = "0xAF8714", Slot = "9")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600186B")]
			[Address(RVA = "0xAF871C", Offset = "0xAF871C", VA = "0xAF871C", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000597")]
		public bool DrawDisableOption
		{
			[Token(Token = "0x600186C")]
			[Address(RVA = "0xAF8728", Offset = "0xAF8728", VA = "0xAF8728", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000598")]
		public bool SupportingTransitions
		{
			[Token(Token = "0x600186D")]
			[Address(RVA = "0xAF8730", Offset = "0xAF8730", VA = "0xAF8730", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000599")]
		public bool DrawLowererSlider
		{
			[Token(Token = "0x600186E")]
			[Address(RVA = "0xAF8738", Offset = "0xAF8738", VA = "0xAF8738", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700059A")]
		public float QualityLowerer
		{
			[Token(Token = "0x600186F")]
			[Address(RVA = "0xAF8740", Offset = "0xAF8740", VA = "0xAF8740", Slot = "14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001870")]
			[Address(RVA = "0xAF8748", Offset = "0xAF8748", VA = "0xAF8748", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x1700059B")]
		public string HeaderText
		{
			[Token(Token = "0x6001871")]
			[Address(RVA = "0xAF8750", Offset = "0xAF8750", VA = "0xAF8750", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059C")]
		public float ToCullDelay
		{
			[Token(Token = "0x6001872")]
			[Address(RVA = "0xAF8798", Offset = "0xAF8798", VA = "0xAF8798", Slot = "17")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700059D")]
		public bool SupportVersions
		{
			[Token(Token = "0x6001873")]
			[Address(RVA = "0xAF87A0", Offset = "0xAF87A0", VA = "0xAF87A0", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700059E")]
		public int DrawingVersion
		{
			[Token(Token = "0x6001874")]
			[Address(RVA = "0xAF87A8", Offset = "0xAF87A8", VA = "0xAF87A8", Slot = "19")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001875")]
			[Address(RVA = "0xAF87B0", Offset = "0xAF87B0", VA = "0xAF87B0", Slot = "20")]
			set
			{
			}
		}

		[Token(Token = "0x1700059F")]
		public bool LockSettings
		{
			[Token(Token = "0x6001876")]
			[Address(RVA = "0xAF8800", Offset = "0xAF8800", VA = "0xAF8800", Slot = "21")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001877")]
			[Address(RVA = "0xAF8808", Offset = "0xAF8808", VA = "0xAF8808", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x170005A0")]
		public Texture Icon
		{
			[Token(Token = "0x6001878")]
			[Address(RVA = "0xAF8814", Offset = "0xAF8814", VA = "0xAF8814", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A1")]
		public Component TargetComponent
		{
			[Token(Token = "0x6001879")]
			[Address(RVA = "0xAF881C", Offset = "0xAF881C", VA = "0xAF881C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xAF8824", Offset = "0xAF8824", VA = "0xAF8824", Slot = "24")]
		public void SetSameValuesAsComponent(Component component)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xAF8A60", Offset = "0xAF8A60", VA = "0xAF8A60", Slot = "25")]
		public void ApplySettingsToTheComponent(Component component, ILODInstance initialSettingsRef)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xAF93A4", Offset = "0xAF93A4", VA = "0xAF93A4", Slot = "26")]
		public void AssignAutoSettingsAsForLODLevel(int lodIndex, int lodCount, Component component)
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xAF9540", Offset = "0xAF9540", VA = "0xAF9540", Slot = "27")]
		public void AssignSettingsAsForCulled(Component component)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xAF9578", Offset = "0xAF9578", VA = "0xAF9578", Slot = "28")]
		public void AssignSettingsAsForNearest(Component component)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xAF957C", Offset = "0xAF957C", VA = "0xAF957C", Slot = "29")]
		public void AssignSettingsAsForHidden(Component component)
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xAF95A8", Offset = "0xAF95A8", VA = "0xAF95A8", Slot = "30")]
		public ILODInstance GetCopy()
		{
			return null;
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xAF9600", Offset = "0xAF9600", VA = "0xAF9600", Slot = "31")]
		public void InterpolateBetween(ILODInstance lodA, ILODInstance lodB, float transitionToB)
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xAF29A4", Offset = "0xAF29A4", VA = "0xAF29A4")]
		public LODI_ParticleSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000290")]
	public sealed class LODI_Renderer : ILODInstance
	{
		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int index;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal string LODName;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool SetDisabled;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		[SerializeField]
		private int _version;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private bool _Locked;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private Renderer cmp;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579224", Offset = "0x579224")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579224", Offset = "0x579224")]
		public bool UseShadows;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal ShadowCastingMode ShadowsCast;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool ShadowsReceive;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public MotionVectorGenerationMode MotionVectors;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579274", Offset = "0x579274")]
		public SkinQuality SkinnedQuality;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string shaderParam;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool ColorParameter;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float targetParamValue;

		[Token(Token = "0x170005A2")]
		public int Index
		{
			[Token(Token = "0x6001883")]
			[Address(RVA = "0xAF9768", Offset = "0xAF9768", VA = "0xAF9768", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001884")]
			[Address(RVA = "0xAF9770", Offset = "0xAF9770", VA = "0xAF9770", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170005A3")]
		public string Name
		{
			[Token(Token = "0x6001885")]
			[Address(RVA = "0xAF9778", Offset = "0xAF9778", VA = "0xAF9778", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001886")]
			[Address(RVA = "0xAF9780", Offset = "0xAF9780", VA = "0xAF9780", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170005A4")]
		public bool CustomEditor
		{
			[Token(Token = "0x6001887")]
			[Address(RVA = "0xAF9788", Offset = "0xAF9788", VA = "0xAF9788", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005A5")]
		public bool Disable
		{
			[Token(Token = "0x6001888")]
			[Address(RVA = "0xAF9790", Offset = "0xAF9790", VA = "0xAF9790", Slot = "9")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001889")]
			[Address(RVA = "0xAF9798", Offset = "0xAF9798", VA = "0xAF9798", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170005A6")]
		public bool DrawDisableOption
		{
			[Token(Token = "0x600188A")]
			[Address(RVA = "0xAF97A4", Offset = "0xAF97A4", VA = "0xAF97A4", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005A7")]
		public bool SupportingTransitions
		{
			[Token(Token = "0x600188B")]
			[Address(RVA = "0xAF97AC", Offset = "0xAF97AC", VA = "0xAF97AC", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005A8")]
		public bool DrawLowererSlider
		{
			[Token(Token = "0x600188C")]
			[Address(RVA = "0xAF97BC", Offset = "0xAF97BC", VA = "0xAF97BC", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005A9")]
		public float QualityLowerer
		{
			[Token(Token = "0x600188D")]
			[Address(RVA = "0xAF97C4", Offset = "0xAF97C4", VA = "0xAF97C4", Slot = "14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600188E")]
			[Address(RVA = "0xAF97CC", Offset = "0xAF97CC", VA = "0xAF97CC", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x170005AA")]
		public string HeaderText
		{
			[Token(Token = "0x600188F")]
			[Address(RVA = "0xAF981C", Offset = "0xAF981C", VA = "0xAF981C", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AB")]
		public float ToCullDelay
		{
			[Token(Token = "0x6001890")]
			[Address(RVA = "0xAF9864", Offset = "0xAF9864", VA = "0xAF9864", Slot = "17")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005AC")]
		public bool SupportVersions
		{
			[Token(Token = "0x6001891")]
			[Address(RVA = "0xAF986C", Offset = "0xAF986C", VA = "0xAF986C", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005AD")]
		public int DrawingVersion
		{
			[Token(Token = "0x6001892")]
			[Address(RVA = "0xAF9874", Offset = "0xAF9874", VA = "0xAF9874", Slot = "19")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001893")]
			[Address(RVA = "0xAF987C", Offset = "0xAF987C", VA = "0xAF987C", Slot = "20")]
			set
			{
			}
		}

		[Token(Token = "0x170005AE")]
		public bool LockSettings
		{
			[Token(Token = "0x6001894")]
			[Address(RVA = "0xAF9884", Offset = "0xAF9884", VA = "0xAF9884", Slot = "21")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001895")]
			[Address(RVA = "0xAF988C", Offset = "0xAF988C", VA = "0xAF988C", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x170005AF")]
		public Texture Icon
		{
			[Token(Token = "0x6001896")]
			[Address(RVA = "0xAF9898", Offset = "0xAF9898", VA = "0xAF9898", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B0")]
		public Component TargetComponent
		{
			[Token(Token = "0x6001897")]
			[Address(RVA = "0xAF98A0", Offset = "0xAF98A0", VA = "0xAF98A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xAF98A8", Offset = "0xAF98A8", VA = "0xAF98A8", Slot = "24")]
		public void SetSameValuesAsComponent(Component component)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xAF9AA0", Offset = "0xAF9AA0", VA = "0xAF9AA0", Slot = "25")]
		public void ApplySettingsToTheComponent(Component component, ILODInstance initialSettingsRef)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xAF9DE8", Offset = "0xAF9DE8", VA = "0xAF9DE8", Slot = "26")]
		public void AssignAutoSettingsAsForLODLevel(int lodIndex, int lodCount, Component component)
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xAFA054", Offset = "0xAFA054", VA = "0xAFA054", Slot = "27")]
		public void AssignSettingsAsForCulled(Component component)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xAFA088", Offset = "0xAFA088", VA = "0xAFA088", Slot = "28")]
		public void AssignSettingsAsForNearest(Component component)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xAFA08C", Offset = "0xAFA08C", VA = "0xAFA08C", Slot = "29")]
		public void AssignSettingsAsForHidden(Component component)
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xAFA0C0", Offset = "0xAFA0C0", VA = "0xAFA0C0", Slot = "30")]
		public ILODInstance GetCopy()
		{
			return null;
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xAFA14C", Offset = "0xAFA14C", VA = "0xAFA14C", Slot = "31")]
		public void InterpolateBetween(ILODInstance a, ILODInstance b, float transitionToB)
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xAF2AFC", Offset = "0xAF2AFC", VA = "0xAF2AFC")]
		public LODI_Renderer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000291")]
	public sealed class LODI_Rigidbody : ILODInstance
	{
		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int index;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal string LODName;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool SetDisabled;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		[SerializeField]
		private bool _Locked;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private Rigidbody cmp;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57932C", Offset = "0x57932C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57932C", Offset = "0x57932C")]
		public bool DetectCollisions;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57937C", Offset = "0x57937C")]
		public bool IsKinematic;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5793B4", Offset = "0x5793B4")]
		public RigidbodyInterpolation Interpolation;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5793C8", Offset = "0x5793C8")]
		public CollisionDetectionMode CollisionMode;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579400", Offset = "0x579400")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579400", Offset = "0x579400")]
		public bool TryTriggerSleep;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579450", Offset = "0x579450")]
		public bool TriggerWakeup;

		[Token(Token = "0x170005B1")]
		public int Index
		{
			[Token(Token = "0x60018A1")]
			[Address(RVA = "0xAFA2A8", Offset = "0xAFA2A8", VA = "0xAFA2A8", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018A2")]
			[Address(RVA = "0xAFA2B0", Offset = "0xAFA2B0", VA = "0xAFA2B0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170005B2")]
		public string Name
		{
			[Token(Token = "0x60018A3")]
			[Address(RVA = "0xAFA2B8", Offset = "0xAFA2B8", VA = "0xAFA2B8", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0xAFA2C0", Offset = "0xAFA2C0", VA = "0xAFA2C0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170005B3")]
		public bool CustomEditor
		{
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0xAFA2C8", Offset = "0xAFA2C8", VA = "0xAFA2C8", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005B4")]
		public bool Disable
		{
			[Token(Token = "0x60018A6")]
			[Address(RVA = "0xAFA2D0", Offset = "0xAFA2D0", VA = "0xAFA2D0", Slot = "9")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0xAFA2D8", Offset = "0xAFA2D8", VA = "0xAFA2D8", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170005B5")]
		public bool DrawDisableOption
		{
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0xAFA2E4", Offset = "0xAFA2E4", VA = "0xAFA2E4", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005B6")]
		public bool SupportingTransitions
		{
			[Token(Token = "0x60018A9")]
			[Address(RVA = "0xAFA2EC", Offset = "0xAFA2EC", VA = "0xAFA2EC", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005B7")]
		public bool DrawLowererSlider
		{
			[Token(Token = "0x60018AA")]
			[Address(RVA = "0xAFA2F4", Offset = "0xAFA2F4", VA = "0xAFA2F4", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005B8")]
		public float QualityLowerer
		{
			[Token(Token = "0x60018AB")]
			[Address(RVA = "0xAFA2FC", Offset = "0xAFA2FC", VA = "0xAFA2FC", Slot = "14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60018AC")]
			[Address(RVA = "0xAFA304", Offset = "0xAFA304", VA = "0xAFA304", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x170005B9")]
		public string HeaderText
		{
			[Token(Token = "0x60018AD")]
			[Address(RVA = "0xAFA308", Offset = "0xAFA308", VA = "0xAFA308", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BA")]
		public bool SupportVersions
		{
			[Token(Token = "0x60018AE")]
			[Address(RVA = "0xAFA350", Offset = "0xAFA350", VA = "0xAFA350", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005BB")]
		public int DrawingVersion
		{
			[Token(Token = "0x60018AF")]
			[Address(RVA = "0xAFA358", Offset = "0xAFA358", VA = "0xAFA358", Slot = "19")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018B0")]
			[Address(RVA = "0xAFA360", Offset = "0xAFA360", VA = "0xAFA360", Slot = "20")]
			set
			{
			}
		}

		[Token(Token = "0x170005BC")]
		public float ToCullDelay
		{
			[Token(Token = "0x60018B1")]
			[Address(RVA = "0xAFA364", Offset = "0xAFA364", VA = "0xAFA364", Slot = "17")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005BD")]
		public bool LockSettings
		{
			[Token(Token = "0x60018B2")]
			[Address(RVA = "0xAFA36C", Offset = "0xAFA36C", VA = "0xAFA36C", Slot = "21")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018B3")]
			[Address(RVA = "0xAFA374", Offset = "0xAFA374", VA = "0xAFA374", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x170005BE")]
		public Texture Icon
		{
			[Token(Token = "0x60018B4")]
			[Address(RVA = "0xAFA380", Offset = "0xAFA380", VA = "0xAFA380", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BF")]
		public Component TargetComponent
		{
			[Token(Token = "0x60018B5")]
			[Address(RVA = "0xAFA388", Offset = "0xAFA388", VA = "0xAFA388")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xAFA390", Offset = "0xAFA390", VA = "0xAFA390", Slot = "24")]
		public void SetSameValuesAsComponent(Component component)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xAFA4A4", Offset = "0xAFA4A4", VA = "0xAFA4A4", Slot = "25")]
		public void ApplySettingsToTheComponent(Component component, ILODInstance initialSettings)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xAFA5CC", Offset = "0xAFA5CC", VA = "0xAFA5CC", Slot = "26")]
		public void AssignAutoSettingsAsForLODLevel(int lodIndex, int lodCount, Component source)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xAFA738", Offset = "0xAFA738", VA = "0xAFA738", Slot = "27")]
		public void AssignSettingsAsForCulled(Component component)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xAFA76C", Offset = "0xAFA76C", VA = "0xAFA76C", Slot = "28")]
		public void AssignSettingsAsForNearest(Component component)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xAFA7A4", Offset = "0xAFA7A4", VA = "0xAFA7A4", Slot = "30")]
		public ILODInstance GetCopy()
		{
			return null;
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xAFA7FC", Offset = "0xAFA7FC", VA = "0xAFA7FC", Slot = "29")]
		public void AssignSettingsAsForHidden(Component component)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xAFA854", Offset = "0xAFA854", VA = "0xAFA854", Slot = "31")]
		public void InterpolateBetween(ILODInstance lodA, ILODInstance lodB, float transitionToB)
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xAF2BF0", Offset = "0xAF2BF0", VA = "0xAF2BF0")]
		public LODI_Rigidbody()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000292")]
	public sealed class LODI_UnityLOD : ILODInstance
	{
		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int index;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal string LODName;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool SetDisabled;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		[SerializeField]
		private int _version;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private bool _Locked;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private LODGroup cmp;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579540", Offset = "0x579540")]
		public int UnityLODLevel;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string shaderParam;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool ColorParameter;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float shaderVisibleValue;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float shaderInvisibleValue;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float crossfadeHelper;

		[Token(Token = "0x170005C0")]
		public int Index
		{
			[Token(Token = "0x60018BF")]
			[Address(RVA = "0xAFA858", Offset = "0xAFA858", VA = "0xAFA858", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018C0")]
			[Address(RVA = "0xAFA860", Offset = "0xAFA860", VA = "0xAFA860", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170005C1")]
		public string Name
		{
			[Token(Token = "0x60018C1")]
			[Address(RVA = "0xAFA868", Offset = "0xAFA868", VA = "0xAFA868", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018C2")]
			[Address(RVA = "0xAFA870", Offset = "0xAFA870", VA = "0xAFA870", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170005C2")]
		public bool CustomEditor
		{
			[Token(Token = "0x60018C3")]
			[Address(RVA = "0xAFA878", Offset = "0xAFA878", VA = "0xAFA878", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005C3")]
		public bool Disable
		{
			[Token(Token = "0x60018C4")]
			[Address(RVA = "0xAFA880", Offset = "0xAFA880", VA = "0xAFA880", Slot = "9")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018C5")]
			[Address(RVA = "0xAFA888", Offset = "0xAFA888", VA = "0xAFA888", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170005C4")]
		public bool DrawDisableOption
		{
			[Token(Token = "0x60018C6")]
			[Address(RVA = "0xAFA894", Offset = "0xAFA894", VA = "0xAFA894", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005C5")]
		public bool SupportingTransitions
		{
			[Token(Token = "0x60018C7")]
			[Address(RVA = "0xAFA89C", Offset = "0xAFA89C", VA = "0xAFA89C", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005C6")]
		public bool DrawLowererSlider
		{
			[Token(Token = "0x60018C8")]
			[Address(RVA = "0xAFA8AC", Offset = "0xAFA8AC", VA = "0xAFA8AC", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005C7")]
		public float QualityLowerer
		{
			[Token(Token = "0x60018C9")]
			[Address(RVA = "0xAFA8B4", Offset = "0xAFA8B4", VA = "0xAFA8B4", Slot = "14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60018CA")]
			[Address(RVA = "0xAFA8BC", Offset = "0xAFA8BC", VA = "0xAFA8BC", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x170005C8")]
		public string HeaderText
		{
			[Token(Token = "0x60018CB")]
			[Address(RVA = "0xAFA90C", Offset = "0xAFA90C", VA = "0xAFA90C", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005C9")]
		public float ToCullDelay
		{
			[Token(Token = "0x60018CC")]
			[Address(RVA = "0xAFA954", Offset = "0xAFA954", VA = "0xAFA954", Slot = "17")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005CA")]
		public bool SupportVersions
		{
			[Token(Token = "0x60018CD")]
			[Address(RVA = "0xAFA95C", Offset = "0xAFA95C", VA = "0xAFA95C", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005CB")]
		public int DrawingVersion
		{
			[Token(Token = "0x60018CE")]
			[Address(RVA = "0xAFA964", Offset = "0xAFA964", VA = "0xAFA964", Slot = "19")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018CF")]
			[Address(RVA = "0xAFA96C", Offset = "0xAFA96C", VA = "0xAFA96C", Slot = "20")]
			set
			{
			}
		}

		[Token(Token = "0x170005CC")]
		public Texture Icon
		{
			[Token(Token = "0x60018D0")]
			[Address(RVA = "0xAFA974", Offset = "0xAFA974", VA = "0xAFA974", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005CD")]
		public Component TargetComponent
		{
			[Token(Token = "0x60018D1")]
			[Address(RVA = "0xAFA97C", Offset = "0xAFA97C", VA = "0xAFA97C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005CE")]
		public bool LockSettings
		{
			[Token(Token = "0x60018D2")]
			[Address(RVA = "0xAFA984", Offset = "0xAFA984", VA = "0xAFA984", Slot = "21")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0xAFA98C", Offset = "0xAFA98C", VA = "0xAFA98C", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xAFA998", Offset = "0xAFA998", VA = "0xAFA998", Slot = "24")]
		public void SetSameValuesAsComponent(Component component)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xAFAA98", Offset = "0xAFAA98", VA = "0xAFAA98", Slot = "25")]
		public void ApplySettingsToTheComponent(Component component, ILODInstance initialSettingsRef)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xAFAEC4", Offset = "0xAFAEC4", VA = "0xAFAEC4", Slot = "26")]
		public void AssignAutoSettingsAsForLODLevel(int lodIndex, int lodCount, Component component)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xAFAFFC", Offset = "0xAFAFFC", VA = "0xAFAFFC", Slot = "27")]
		public void AssignSettingsAsForCulled(Component component)
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xAFB0E0", Offset = "0xAFB0E0", VA = "0xAFB0E0", Slot = "28")]
		public void AssignSettingsAsForNearest(Component component)
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xAFB1B0", Offset = "0xAFB1B0", VA = "0xAFB1B0", Slot = "29")]
		public void AssignSettingsAsForHidden(Component component)
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xAFB294", Offset = "0xAFB294", VA = "0xAFB294", Slot = "30")]
		public ILODInstance GetCopy()
		{
			return null;
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xAFB338", Offset = "0xAFB338", VA = "0xAFB338", Slot = "31")]
		public void InterpolateBetween(ILODInstance a, ILODInstance b, float transitionToB)
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xAFB474", Offset = "0xAFB474", VA = "0xAFB474")]
		private static void ApplyCrossfade(LODI_UnityLOD pre, LODI_UnityLOD next, float toNew)
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xAFB88C", Offset = "0xAFB88C", VA = "0xAFB88C")]
		private float GetFadeMaterialValueToVisible(float progress)
		{
			return default(float);
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xAF2C50", Offset = "0xAF2C50", VA = "0xAF2C50")]
		public LODI_UnityLOD()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public sealed class ScrLOD_AudioSource : ScrLOD_Base
	{
		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LODI_AudioSource settings;

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xAC84DC", Offset = "0xAC84DC", VA = "0xAC84DC", Slot = "4")]
		public override ILODInstance GetLODInstance()
		{
			return null;
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xAC84E4", Offset = "0xAC84E4", VA = "0xAC84E4")]
		public ScrLOD_AudioSource()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xAC8558", Offset = "0xAC8558", VA = "0xAC8558", Slot = "6")]
		public override ScrLOD_Base GetScrLODInstance()
		{
			return null;
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xAC85A0", Offset = "0xAC85A0", VA = "0xAC85A0", Slot = "5")]
		public override ScrLOD_Base CreateNewScrCopy()
		{
			return null;
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xAC863C", Offset = "0xAC863C", VA = "0xAC863C", Slot = "7")]
		public override ScriptableLODsController GenerateLODController(Component target, ScriptableOptimizer optimizer)
		{
			return null;
		}
	}
	[Token(Token = "0x2000294")]
	public sealed class ScrLOD_Light : ScrLOD_Base
	{
		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LODI_Light settings;

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xAC8868", Offset = "0xAC8868", VA = "0xAC8868", Slot = "4")]
		public override ILODInstance GetLODInstance()
		{
			return null;
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xAC8870", Offset = "0xAC8870", VA = "0xAC8870")]
		public ScrLOD_Light()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xAC88DC", Offset = "0xAC88DC", VA = "0xAC88DC", Slot = "6")]
		public override ScrLOD_Base GetScrLODInstance()
		{
			return null;
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xAC8924", Offset = "0xAC8924", VA = "0xAC8924", Slot = "5")]
		public override ScrLOD_Base CreateNewScrCopy()
		{
			return null;
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xAC89C0", Offset = "0xAC89C0", VA = "0xAC89C0", Slot = "7")]
		public override ScriptableLODsController GenerateLODController(Component target, ScriptableOptimizer optimizer)
		{
			return null;
		}
	}
	[Token(Token = "0x2000295")]
	public sealed class ScrLOD_MonoBehaviour : ScrLOD_Base
	{
		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LODI_MonoBehaviour settings;

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xAC8B24", Offset = "0xAC8B24", VA = "0xAC8B24", Slot = "4")]
		public override ILODInstance GetLODInstance()
		{
			return null;
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xAC8B2C", Offset = "0xAC8B2C", VA = "0xAC8B2C")]
		public ScrLOD_MonoBehaviour()
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xAC8B98", Offset = "0xAC8B98", VA = "0xAC8B98", Slot = "6")]
		public override ScrLOD_Base GetScrLODInstance()
		{
			return null;
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xAC8BE0", Offset = "0xAC8BE0", VA = "0xAC8BE0", Slot = "5")]
		public override ScrLOD_Base CreateNewScrCopy()
		{
			return null;
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xAC8C7C", Offset = "0xAC8C7C", VA = "0xAC8C7C", Slot = "7")]
		public override ScriptableLODsController GenerateLODController(Component target, ScriptableOptimizer optimizer)
		{
			return null;
		}
	}
	[Token(Token = "0x2000296")]
	public sealed class ScrLOD_ParticleSystem : ScrLOD_Base
	{
		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LODI_ParticleSystem settings;

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xAC8DF0", Offset = "0xAC8DF0", VA = "0xAC8DF0", Slot = "4")]
		public override ILODInstance GetLODInstance()
		{
			return null;
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xAC8DF8", Offset = "0xAC8DF8", VA = "0xAC8DF8")]
		public ScrLOD_ParticleSystem()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xAC8E64", Offset = "0xAC8E64", VA = "0xAC8E64", Slot = "6")]
		public override ScrLOD_Base GetScrLODInstance()
		{
			return null;
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xAC8EAC", Offset = "0xAC8EAC", VA = "0xAC8EAC", Slot = "5")]
		public override ScrLOD_Base CreateNewScrCopy()
		{
			return null;
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xAC8F48", Offset = "0xAC8F48", VA = "0xAC8F48", Slot = "7")]
		public override ScriptableLODsController GenerateLODController(Component target, ScriptableOptimizer optimizer)
		{
			return null;
		}
	}
	[Token(Token = "0x2000297")]
	public sealed class ScrLOD_Renderer : ScrLOD_Base
	{
		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LODI_Renderer settings;

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xAC90A0", Offset = "0xAC90A0", VA = "0xAC90A0", Slot = "4")]
		public override ILODInstance GetLODInstance()
		{
			return null;
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xAC90A8", Offset = "0xAC90A8", VA = "0xAC90A8")]
		public ScrLOD_Renderer()
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xAC9114", Offset = "0xAC9114", VA = "0xAC9114", Slot = "6")]
		public override ScrLOD_Base GetScrLODInstance()
		{
			return null;
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xAC915C", Offset = "0xAC915C", VA = "0xAC915C", Slot = "5")]
		public override ScrLOD_Base CreateNewScrCopy()
		{
			return null;
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xAC91F8", Offset = "0xAC91F8", VA = "0xAC91F8", Slot = "7")]
		public override ScriptableLODsController GenerateLODController(Component target, ScriptableOptimizer optimizer)
		{
			return null;
		}
	}
	[Token(Token = "0x2000298")]
	public sealed class ScrLOD_Rigidbody : ScrLOD_Base
	{
		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LODI_Rigidbody settings;

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xAC936C", Offset = "0xAC936C", VA = "0xAC936C", Slot = "4")]
		public override ILODInstance GetLODInstance()
		{
			return null;
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xAC9374", Offset = "0xAC9374", VA = "0xAC9374")]
		public ScrLOD_Rigidbody()
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xAC93E0", Offset = "0xAC93E0", VA = "0xAC93E0", Slot = "6")]
		public override ScrLOD_Base GetScrLODInstance()
		{
			return null;
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xAC9428", Offset = "0xAC9428", VA = "0xAC9428", Slot = "5")]
		public override ScrLOD_Base CreateNewScrCopy()
		{
			return null;
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xAC94C4", Offset = "0xAC94C4", VA = "0xAC94C4", Slot = "7")]
		public override ScriptableLODsController GenerateLODController(Component target, ScriptableOptimizer optimizer)
		{
			return null;
		}
	}
	[Token(Token = "0x2000299")]
	public sealed class ScrLOD_UnityLODGroup : ScrLOD_Base
	{
		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LODI_UnityLOD settings;

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xAC9638", Offset = "0xAC9638", VA = "0xAC9638", Slot = "4")]
		public override ILODInstance GetLODInstance()
		{
			return null;
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xAC9640", Offset = "0xAC9640", VA = "0xAC9640")]
		public ScrLOD_UnityLODGroup()
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xAC96AC", Offset = "0xAC96AC", VA = "0xAC96AC", Slot = "6")]
		public override ScrLOD_Base GetScrLODInstance()
		{
			return null;
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xAC96F4", Offset = "0xAC96F4", VA = "0xAC96F4", Slot = "5")]
		public override ScrLOD_Base CreateNewScrCopy()
		{
			return null;
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xAC9790", Offset = "0xAC9790", VA = "0xAC9790", Slot = "7")]
		public override ScriptableLODsController GenerateLODController(Component target, ScriptableOptimizer optimizer)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200029A")]
	public abstract class LODsControllerBase
	{
		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ILODInstance[] lockSupportCopy;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool constructed;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int ToOptimizeIndex;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Optimizer_Base optimizer;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Component Component;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int Version;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[HideInInspector]
		protected bool lockFirstLOD;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private string editorHeader;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private bool drawProperties;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5796B0", Offset = "0x5796B0")]
		private int <CurrentLODLevel>k__BackingField;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5796C0", Offset = "0x5796C0")]
		private ILODInstance <InitialSettings>k__BackingField;

		[Token(Token = "0x170005CF")]
		public bool Constructed
		{
			[Token(Token = "0x6001914")]
			[Address(RVA = "0xAFD188", Offset = "0xAFD188", VA = "0xAFD188")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005D0")]
		public Optimizer_Base Optimizer
		{
			[Token(Token = "0x6001915")]
			[Address(RVA = "0xAFD190", Offset = "0xAFD190", VA = "0xAFD190")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D1")]
		public int LODLevelsCount
		{
			[Token(Token = "0x6001916")]
			[Address(RVA = "0xAFD198", Offset = "0xAFD198", VA = "0xAFD198")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005D2")]
		public int CurrentLODLevel
		{
			[Token(Token = "0x6001917")]
			[Address(RVA = "0xAFD1B4", Offset = "0xAFD1B4", VA = "0xAFD1B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DEB0", Offset = "0x57DEB0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001918")]
			[Address(RVA = "0xAFD1BC", Offset = "0xAFD1BC", VA = "0xAFD1BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DEC0", Offset = "0x57DEC0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005D3")]
		public ILODInstance ReferenceLOD
		{
			[Token(Token = "0x6001919")]
			[Address(RVA = "0xAFD1C4", Offset = "0xAFD1C4", VA = "0xAFD1C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D4")]
		public virtual ILODInstance InitialSettings
		{
			[Token(Token = "0x600191A")]
			[Address(RVA = "0xAFD21C", Offset = "0xAFD21C", VA = "0xAFD21C", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DED0", Offset = "0x57DED0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600191B")]
			[Address(RVA = "0xAFD224", Offset = "0xAFD224", VA = "0xAFD224", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DEE0", Offset = "0x57DEE0")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xAFB914", Offset = "0xAFB914", VA = "0xAFB914")]
		public void Editor_DrawValues(int selectedLOD = 0, int index = 0)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xAFB918", Offset = "0xAFB918", VA = "0xAFB918", Slot = "4")]
		protected virtual void Editor_MonoSimplyfy()
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xAFB91C", Offset = "0xAFB91C", VA = "0xAFB91C", Slot = "5")]
		protected virtual void Editor_ValuesChanged()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xAFB920", Offset = "0xAFB920", VA = "0xAFB920")]
		public void GUI_HideProperties(bool hideThem)
		{
		}

		[Token(Token = "0x6001906")]
		protected abstract void RefreshToOptimizeIndex();

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xAFB924", Offset = "0xAFB924", VA = "0xAFB924")]
		public void CheckComponentsCorrectness()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xAFB9C4", Offset = "0xAFB9C4", VA = "0xAFB9C4", Slot = "7")]
		protected virtual void GUI_LODSettingHeader(ILODInstance iflod, int selectedLOD)
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xAF4BEC", Offset = "0xAF4BEC", VA = "0xAF4BEC")]
		public void GenerateLODParameters(bool hard = false)
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xAFC67C", Offset = "0xAFC67C", VA = "0xAFC67C")]
		public void StoreLODLockedSettings()
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xAFC808", Offset = "0xAFC808", VA = "0xAFC808")]
		public void RestoreLODLockedSettings()
		{
		}

		[Token(Token = "0x600190C")]
		protected abstract void CheckAndGenerateLODParameters();

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xAFCC1C", Offset = "0xAFCC1C", VA = "0xAFCC1C", Slot = "9")]
		protected virtual bool NeedToReGenerate(int targetCount)
		{
			return default(bool);
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xAF320C", Offset = "0xAF320C", VA = "0xAF320C")]
		protected void RefreshOptimizerLODCount()
		{
		}

		[Token(Token = "0x600190F")]
		protected abstract void GenerateNewLODSettings();

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xAFCC7C", Offset = "0xAFCC7C", VA = "0xAFCC7C", Slot = "11")]
		protected virtual bool CheckCoreRequirements(bool hard = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xAFCC84", Offset = "0xAFCC84", VA = "0xAFCC84", Slot = "12")]
		protected virtual List<ILODInstance> GetIFLODList()
		{
			return null;
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xAFB9C8", Offset = "0xAFB9C8", VA = "0xAFB9C8")]
		public void RefreshLODAutoParametersSettings(float lowerer = 1f)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xAFCC8C", Offset = "0xAFCC8C", VA = "0xAFCC8C")]
		public void AutoQualityLowerer(float lowerer = 1f)
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xAF3CDC", Offset = "0xAF3CDC", VA = "0xAF3CDC")]
		public LODsControllerBase(Optimizer_Base sourceOptimizer, Component toOptimize, int index, string header = "")
		{
		}

		[Token(Token = "0x600191D")]
		public abstract ILODInstance GetLODSetting(int lod);

		[Token(Token = "0x600191E")]
		public abstract int GetLODSettingsCount();

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xAFD22C", Offset = "0xAFD22C", VA = "0xAFD22C", Slot = "17")]
		public virtual void OnStart()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xAF4F8C", Offset = "0xAF4F8C", VA = "0xAF4F8C")]
		internal void SetCurrentLODLevel(int currentLODLevel)
		{
		}

		[Token(Token = "0x6001921")]
		internal abstract void ApplyLODLevelSettings(ILODInstance currentLOD);

		[Token(Token = "0x6001922")]
		internal abstract ILODInstance GetCurrentLOD();

		[Token(Token = "0x6001923")]
		internal abstract ILODInstance GetCullingLOD();

		[Token(Token = "0x6001924")]
		internal abstract ILODInstance GetHiddenLOD();

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xAF33E0", Offset = "0xAF33E0", VA = "0xAF33E0")]
		public bool IsTransitioningOrOther()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200029B")]
	public abstract class Optimizer_Base : MonoBehaviour
	{
		[Token(Token = "0x2000384")]
		public enum EFOptEditorCategory
		{
			[Token(Token = "0x4001B5B")]
			Setup,
			[Token(Token = "0x4001B5C")]
			List,
			[Token(Token = "0x4001B5D")]
			Features,
			[Token(Token = "0x4001B5E")]
			LODs
		}

		[Serializable]
		[Token(Token = "0x2000385")]
		public class DOTS_DetectionData
		{
			[Token(Token = "0x4001B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mesh SharedMesh;

			[Token(Token = "0x4001B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform SceneTransform;

			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0xABF90C", Offset = "0xABF90C", VA = "0xABF90C")]
			public DOTS_DetectionData Set(Transform t, Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001D50")]
			[Address(RVA = "0xABF914", Offset = "0xABF914", VA = "0xABF914")]
			public DOTS_DetectionData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000386")]
		public class MultiShapeBound
		{
			[Token(Token = "0x4001B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 position;

			[Token(Token = "0x4001B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float radius;

			[Token(Token = "0x4001B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform transform;

			[Token(Token = "0x6001D51")]
			[Address(RVA = "0xABF91C", Offset = "0xABF91C", VA = "0xABF91C")]
			public MultiShapeBound()
			{
			}
		}

		[Token(Token = "0x2000387")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FBD0", Offset = "0x56FBD0")]
		private sealed class <>c__DisplayClass104_0
		{
			[Token(Token = "0x4001B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x6001D52")]
			[Address(RVA = "0xABF87C", Offset = "0xABF87C", VA = "0xABF87C")]
			public <>c__DisplayClass104_0()
			{
			}

			[Token(Token = "0x6001D53")]
			[Address(RVA = "0xABF884", Offset = "0xABF884", VA = "0xABF884")]
			internal bool <DOTSAlreadyContains>b__0(DOTS_DetectionData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5796D0", Offset = "0x5796D0")]
		private int <ContainerGeneratedID>k__BackingField;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5796E0", Offset = "0x5796E0")]
		private Optimizers_CullingContainer <OwnerContainer>k__BackingField;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5796F0", Offset = "0x5796F0")]
		private int <ContainerSphereId>k__BackingField;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579700", Offset = "0x579700")]
		private int[] <ContainerSphereIds>k__BackingField;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579710", Offset = "0x579710")]
		public bool AddToContainer;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579748", Offset = "0x579748")]
		private CullingGroup <CullingGroup>k__BackingField;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected BoundingSphere[] visibilitySpheres;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected BoundingSphere mainVisibilitySphere;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected CullingGroupEvent lastEvent;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool _editor_DrawSetup;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool _editor_DrawOptimizeList;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool _editor_DrawAddFeatures;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool _editor_DrawLODLevelsSetup;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool _editor_DrawExtra;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool _editor_horizontal;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public EFOptEditorCategory _editor_category;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool isQuitting;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		internal bool Editor_WasSaving;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		[HideInInspector]
		public bool Editor_InIsolatedScene;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
		[HideInInspector]
		public bool Editor_JustCreated;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool wasDisabled;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		internal bool WasAskingForStatic;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color[] lODColors;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Color culledLODColor;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579778", Offset = "0x579778")]
		public bool UseDOTS;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5797B0", Offset = "0x5797B0")]
		public EDOTSObstacle DOTSObstacleType;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5797E8", Offset = "0x5797E8")]
		public EDOTSDetection DOTSDetection;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579820", Offset = "0x579820")]
		public List<DOTS_DetectionData> DOTSMeshData;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 DOTSOffset;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector3 DOTSSize;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float DOTSRadius;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool UseMultiShape;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579858", Offset = "0x579858")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579858", Offset = "0x579858")]
		public float AutoPrecision;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5798BC", Offset = "0x5798BC")]
		public Mesh AutoReferenceMesh;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public bool DrawPositionHandles;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		[HideInInspector]
		public bool ScalingHandles;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public List<MultiShapeBound> Shapes;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public List<Vector3> ShapePos;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public List<float> ShapeRadius;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected int nearestDistanceLevel;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected int preNearestDistanceLevel;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected int[] sphereState;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected int spheresVisible;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected int[] spheresWithLOD;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool UseObstacleDetection;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579958", Offset = "0x579958")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579958", Offset = "0x579958")]
		public int CoveragePrecision;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5799BC", Offset = "0x5799BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5799BC", Offset = "0x5799BC")]
		public float CoverageScale;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579A20", Offset = "0x579A20")]
		public LayerMask CoverageMask;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579A6C", Offset = "0x579A6C")]
		public bool CustomCoveragePoints;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public List<Vector3> CoverageOffsets;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int currentCoveragePrecision;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Collider[] ignoredObstacleColliders;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3[] coverageActiveArray;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected int isSelected;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		protected int isResizing;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579AC8", Offset = "0x579AC8")]
		private EOptimizingDistance? <CurrentDynamicDistanceCategory>k__BackingField;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579AD8", Offset = "0x579AD8")]
		private int <DynamicListIndex>k__BackingField;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579AE8", Offset = "0x579AE8")]
		private Vector3 <PreviousPosition>k__BackingField;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579AF8", Offset = "0x579AF8")]
		private Vector3 <LastDynamicCheckCameraPosition>k__BackingField;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579B08", Offset = "0x579B08")]
		private Vector3 <LastTresholdCheckPos>k__BackingField;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579B18", Offset = "0x579B18")]
		private Vector3 <LastTresholdCheckCamPos>k__BackingField;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579B28", Offset = "0x579B28")]
		private Quaternion <LastTresholdCheckCamRot>k__BackingField;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		protected OptimizersManager manager;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Bounds optimizerBounds;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float lastDynamicDistance;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Transform triggersContainer;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579B38", Offset = "0x579B38")]
		public LayerMask OnlyCamCollLayer;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		protected int triggerDistanceState;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected int preTriggerDistanceState;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		protected List<int> triggersEntered;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579B84", Offset = "0x579B84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579B84", Offset = "0x579B84")]
		public int LODLevels;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[SerializeField]
		[HideInInspector]
		protected int preLODLevels;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579C10", Offset = "0x579C10")]
		public float MaxDistance;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579C48", Offset = "0x579C48")]
		public EOptimizingMethod OptimizingMethod;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "FPD_DrawTextureAttribute", RVA = "0x579C80", Offset = "0x579C80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579C80", Offset = "0x579C80")]
		public bool CullIfNotSee;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579CFC", Offset = "0x579CFC")]
		public float DetectionRadius;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579D34", Offset = "0x579D34")]
		public Vector3 DetectionBounds;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[HideInInspector]
		public bool Hideable;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579D7C", Offset = "0x579D7C")]
		public Vector3 DetectionOffset;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579DB4", Offset = "0x579DB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579DB4", Offset = "0x579DB4")]
		public float GizmosAlpha;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public bool DrawGizmos;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579E08", Offset = "0x579E08")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579E08", Offset = "0x579E08")]
		public float FadeDuration;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579E5C", Offset = "0x579E5C")]
		public bool FadeViewVisibility;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x219")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579E94", Offset = "0x579E94")]
		public bool DeactivateObject;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[HideInInspector]
		public List<float> LODPercent;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		protected Vector3 distancePoint;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		[HideInInspector]
		public bool AutoDistance;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public float AutoDistanceFactor;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		[HideInInspector]
		public bool DrawAutoDistanceToggle;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[HideInInspector]
		public int HiddenCullAt;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		[HideInInspector]
		public int LimitLODLevels;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		protected bool drawDetectionSphere;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		protected float moveTreshold;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[HideInInspector]
		public bool UnlockFirstLOD;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x251")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579F2C", Offset = "0x579F2C")]
		private bool <OutOfDistance>k__BackingField;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x252")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579F3C", Offset = "0x579F3C")]
		private bool <OutOfCameraView>k__BackingField;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579F4C", Offset = "0x579F4C")]
		private float[] <DistanceLevels>k__BackingField;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579F5C", Offset = "0x579F5C")]
		private int <CurrentLODLevel>k__BackingField;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579F6C", Offset = "0x579F6C")]
		private int <CurrentBackLODLevel>k__BackingField;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579F7C", Offset = "0x579F7C")]
		private int <CurrentDistanceLODLevel>k__BackingField;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579F8C", Offset = "0x579F8C")]
		private bool <IsCulled>k__BackingField;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579F9C", Offset = "0x579F9C")]
		private bool <IsHidden>k__BackingField;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579FAC", Offset = "0x579FAC")]
		private bool <FarAway>k__BackingField;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26F")]
		protected bool WasOutOfCameraView;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		protected bool WasHidden;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x271")]
		protected bool doFirstCull;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579FBC", Offset = "0x579FBC")]
		private Transform <TargetCamera>k__BackingField;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579FCC", Offset = "0x579FCC")]
		private int <TransitionNextLOD>k__BackingField;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x579FDC", Offset = "0x579FDC")]
		private float <TransitionPercent>k__BackingField;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[HideInInspector]
		public bool DrawGeneratedPrefabInfo;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x289")]
		[HideInInspector]
		public bool DrawDeactivateToggle;

		[Token(Token = "0x170005D5")]
		public int ContainerGeneratedID
		{
			[Token(Token = "0x6001926")]
			[Address(RVA = "0xAFD458", Offset = "0xAFD458", VA = "0xAFD458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DEF0", Offset = "0x57DEF0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001927")]
			[Address(RVA = "0xAFD460", Offset = "0xAFD460", VA = "0xAFD460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DF00", Offset = "0x57DF00")]
			private set
			{
			}
		}

		[Token(Token = "0x170005D6")]
		public Optimizers_CullingContainer OwnerContainer
		{
			[Token(Token = "0x6001928")]
			[Address(RVA = "0xAFD468", Offset = "0xAFD468", VA = "0xAFD468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DF10", Offset = "0x57DF10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001929")]
			[Address(RVA = "0xAFD470", Offset = "0xAFD470", VA = "0xAFD470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DF20", Offset = "0x57DF20")]
			private set
			{
			}
		}

		[Token(Token = "0x170005D7")]
		public int ContainerSphereId
		{
			[Token(Token = "0x600192A")]
			[Address(RVA = "0xAFD478", Offset = "0xAFD478", VA = "0xAFD478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DF30", Offset = "0x57DF30")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600192B")]
			[Address(RVA = "0xAFD480", Offset = "0xAFD480", VA = "0xAFD480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DF40", Offset = "0x57DF40")]
			private set
			{
			}
		}

		[Token(Token = "0x170005D8")]
		public int[] ContainerSphereIds
		{
			[Token(Token = "0x600192C")]
			[Address(RVA = "0xAFD488", Offset = "0xAFD488", VA = "0xAFD488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DF50", Offset = "0x57DF50")]
			get
			{
				return null;
			}
			[Token(Token = "0x600192D")]
			[Address(RVA = "0xAFD490", Offset = "0xAFD490", VA = "0xAFD490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DF60", Offset = "0x57DF60")]
			private set
			{
			}
		}

		[Token(Token = "0x170005D9")]
		public CullingGroup CullingGroup
		{
			[Token(Token = "0x6001930")]
			[Address(RVA = "0xAFD4B8", Offset = "0xAFD4B8", VA = "0xAFD4B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DF70", Offset = "0x57DF70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001931")]
			[Address(RVA = "0xAFD4C0", Offset = "0xAFD4C0", VA = "0xAFD4C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DF80", Offset = "0x57DF80")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005DA")]
		public EOptimizingDistance? CurrentDynamicDistanceCategory
		{
			[Token(Token = "0x6001980")]
			[Address(RVA = "0xB04BA0", Offset = "0xB04BA0", VA = "0xB04BA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DF90", Offset = "0x57DF90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001981")]
			[Address(RVA = "0xB04BA8", Offset = "0xB04BA8", VA = "0xB04BA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DFA0", Offset = "0x57DFA0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005DB")]
		public int DynamicListIndex
		{
			[Token(Token = "0x6001982")]
			[Address(RVA = "0xB04BB0", Offset = "0xB04BB0", VA = "0xB04BB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DFB0", Offset = "0x57DFB0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001983")]
			[Address(RVA = "0xB04BB8", Offset = "0xB04BB8", VA = "0xB04BB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DFC0", Offset = "0x57DFC0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005DC")]
		public Vector3 PreviousPosition
		{
			[Token(Token = "0x6001984")]
			[Address(RVA = "0xB04BC0", Offset = "0xB04BC0", VA = "0xB04BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DFD0", Offset = "0x57DFD0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001985")]
			[Address(RVA = "0xB04BD0", Offset = "0xB04BD0", VA = "0xB04BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DFE0", Offset = "0x57DFE0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005DD")]
		public Vector3 LastDynamicCheckCameraPosition
		{
			[Token(Token = "0x6001986")]
			[Address(RVA = "0xB04BE0", Offset = "0xB04BE0", VA = "0xB04BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DFF0", Offset = "0x57DFF0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001987")]
			[Address(RVA = "0xB04BF0", Offset = "0xB04BF0", VA = "0xB04BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E000", Offset = "0x57E000")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005DE")]
		public Vector3 LastTresholdCheckPos
		{
			[Token(Token = "0x6001988")]
			[Address(RVA = "0xB04C00", Offset = "0xB04C00", VA = "0xB04C00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E010", Offset = "0x57E010")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001989")]
			[Address(RVA = "0xB04C10", Offset = "0xB04C10", VA = "0xB04C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E020", Offset = "0x57E020")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005DF")]
		public Vector3 LastTresholdCheckCamPos
		{
			[Token(Token = "0x600198A")]
			[Address(RVA = "0xB04C20", Offset = "0xB04C20", VA = "0xB04C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E030", Offset = "0x57E030")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600198B")]
			[Address(RVA = "0xB04C30", Offset = "0xB04C30", VA = "0xB04C30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E040", Offset = "0x57E040")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005E0")]
		public Quaternion LastTresholdCheckCamRot
		{
			[Token(Token = "0x600198C")]
			[Address(RVA = "0xB04C40", Offset = "0xB04C40", VA = "0xB04C40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E050", Offset = "0x57E050")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600198D")]
			[Address(RVA = "0xB04C54", Offset = "0xB04C54", VA = "0xB04C54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E060", Offset = "0x57E060")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005E1")]
		public float GetMaxDistance
		{
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0xB07284", Offset = "0xB07284", VA = "0xB07284")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005E2")]
		public bool OutOfDistance
		{
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0xB07340", Offset = "0xB07340", VA = "0xB07340")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E070", Offset = "0x57E070")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019A8")]
			[Address(RVA = "0xB07348", Offset = "0xB07348", VA = "0xB07348")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E080", Offset = "0x57E080")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005E3")]
		public bool OutOfCameraView
		{
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0xB07354", Offset = "0xB07354", VA = "0xB07354")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E090", Offset = "0x57E090")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0xB0735C", Offset = "0xB0735C", VA = "0xB0735C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E0A0", Offset = "0x57E0A0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005E4")]
		public float[] DistanceLevels
		{
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0xB07368", Offset = "0xB07368", VA = "0xB07368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E0B0", Offset = "0x57E0B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019AC")]
			[Address(RVA = "0xB07370", Offset = "0xB07370", VA = "0xB07370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E0C0", Offset = "0x57E0C0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005E5")]
		public int CurrentLODLevel
		{
			[Token(Token = "0x60019AD")]
			[Address(RVA = "0xB07378", Offset = "0xB07378", VA = "0xB07378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E0D0", Offset = "0x57E0D0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019AE")]
			[Address(RVA = "0xB07380", Offset = "0xB07380", VA = "0xB07380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E0E0", Offset = "0x57E0E0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005E6")]
		public int CurrentBackLODLevel
		{
			[Token(Token = "0x60019AF")]
			[Address(RVA = "0xB07388", Offset = "0xB07388", VA = "0xB07388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E0F0", Offset = "0x57E0F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019B0")]
			[Address(RVA = "0xB07390", Offset = "0xB07390", VA = "0xB07390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E100", Offset = "0x57E100")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005E7")]
		public int CurrentDistanceLODLevel
		{
			[Token(Token = "0x60019B1")]
			[Address(RVA = "0xB07398", Offset = "0xB07398", VA = "0xB07398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E110", Offset = "0x57E110")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019B2")]
			[Address(RVA = "0xB073A0", Offset = "0xB073A0", VA = "0xB073A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E120", Offset = "0x57E120")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005E8")]
		public bool IsCulled
		{
			[Token(Token = "0x60019B3")]
			[Address(RVA = "0xB073A8", Offset = "0xB073A8", VA = "0xB073A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E130", Offset = "0x57E130")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019B4")]
			[Address(RVA = "0xB073B0", Offset = "0xB073B0", VA = "0xB073B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E140", Offset = "0x57E140")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005E9")]
		public bool IsHidden
		{
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0xB073BC", Offset = "0xB073BC", VA = "0xB073BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E150", Offset = "0x57E150")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019B6")]
			[Address(RVA = "0xB073C4", Offset = "0xB073C4", VA = "0xB073C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E160", Offset = "0x57E160")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005EA")]
		public bool FarAway
		{
			[Token(Token = "0x60019B7")]
			[Address(RVA = "0xB073D0", Offset = "0xB073D0", VA = "0xB073D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E170", Offset = "0x57E170")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019B8")]
			[Address(RVA = "0xB073D8", Offset = "0xB073D8", VA = "0xB073D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E180", Offset = "0x57E180")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005EB")]
		public Transform TargetCamera
		{
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0xB073E4", Offset = "0xB073E4", VA = "0xB073E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E190", Offset = "0x57E190")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019BA")]
			[Address(RVA = "0xB073EC", Offset = "0xB073EC", VA = "0xB073EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E1A0", Offset = "0x57E1A0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005EC")]
		public int TransitionNextLOD
		{
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0xB073F4", Offset = "0xB073F4", VA = "0xB073F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E1B0", Offset = "0x57E1B0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019BC")]
			[Address(RVA = "0xB073FC", Offset = "0xB073FC", VA = "0xB073FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E1C0", Offset = "0x57E1C0")]
			internal set
			{
			}
		}

		[Token(Token = "0x170005ED")]
		public float TransitionPercent
		{
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0xB07404", Offset = "0xB07404", VA = "0xB07404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E1D0", Offset = "0x57E1D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019BE")]
			[Address(RVA = "0xB0740C", Offset = "0xB0740C", VA = "0xB0740C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E1E0", Offset = "0x57E1E0")]
			internal set
			{
			}
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xAFD498", Offset = "0xAFD498", VA = "0xAFD498")]
		internal void AssignToContainer(Optimizers_CullingContainer container, int sphereId, ref BoundingSphere sphere)
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xAFD4AC", Offset = "0xAFD4AC", VA = "0xAFD4AC")]
		internal void AssignToContainer(Optimizers_CullingContainer container, int[] sphereIds)
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xAFD4C8", Offset = "0xAFD4C8", VA = "0xAFD4C8")]
		protected void InitStaticOptimizer()
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xAFD5D8", Offset = "0xAFD5D8", VA = "0xAFD5D8", Slot = "4")]
		protected virtual void InitCullingGroups(float[] distances, float detectionSphereRadius = 2.5f, [Optional] Camera targetCamera)
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xAFDFB8", Offset = "0xAFDFB8", VA = "0xAFDFB8", Slot = "5")]
		public virtual void CullingGroupStateChanged(CullingGroupEvent cullingEvent)
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xAFDDCC", Offset = "0xAFDDCC", VA = "0xAFDDCC")]
		private void SetDistanceLevels(float[] distances)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xAFE964", Offset = "0xAFE964", VA = "0xAFE964")]
		protected void CleanCullingGroup()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xAFDF28", Offset = "0xAFDF28", VA = "0xAFDF28")]
		public static float GetScaler(Transform transform)
		{
			return default(float);
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xAFE9B0", Offset = "0xAFE9B0", VA = "0xAFE9B0")]
		public void RefreshCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xAFEA84", Offset = "0xAFEA84", VA = "0xAFEA84", Slot = "6")]
		public virtual float[] GetDistanceMeasures()
		{
			return null;
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xAFEB70", Offset = "0xAFEB70", VA = "0xAFEB70", Slot = "7")]
		public virtual Vector3 GetReferencePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xAFECA8", Offset = "0xAFECA8", VA = "0xAFECA8", Slot = "8")]
		public virtual float GetReferenceDistance()
		{
			return default(float);
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xAFEE0C", Offset = "0xAFEE0C", VA = "0xAFEE0C")]
		public float GetAddRadius()
		{
			return default(float);
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xAFEE6C", Offset = "0xAFEE6C", VA = "0xAFEE6C", Slot = "9")]
		protected virtual void StartVariablesRefresh()
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xAFEEB8", Offset = "0xAFEEB8", VA = "0xAFEEB8", Slot = "10")]
		protected virtual void InitBaseCullingVariables(Camera targetCamera)
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xAFE478", Offset = "0xAFE478", VA = "0xAFE478")]
		protected void RefreshVisibilityState(int targetLODLevel)
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xAFF010", Offset = "0xAFF010", VA = "0xAFF010", Slot = "11")]
		protected virtual void TransitionOrSetLODLevel(int lodLevel)
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xAFF138", Offset = "0xAFF138", VA = "0xAFF138")]
		public void SetHidden(bool hide)
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xAFF164", Offset = "0xAFF164", VA = "0xAFF164", Slot = "12")]
		internal virtual void SetCulled(bool culled = true, bool apply = true)
		{
		}

		[Token(Token = "0x6001943")]
		protected abstract void AllLODComponents_ApplyCulledState();

		[Token(Token = "0x6001944")]
		protected abstract void AllLODComponents_ApplyCurrentState();

		[Token(Token = "0x6001945")]
		protected abstract void AllLODComponents_RefreshChoosedLODState(int lodLevel);

		[Token(Token = "0x6001946")]
		protected abstract void AllLODComponents_ChangeChoosedLODState(int lodLevel);

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xAFF280", Offset = "0xAFF280", VA = "0xAFF280", Slot = "17")]
		internal virtual void SetLODLevel(int lodLevel)
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xAFF2F0", Offset = "0xAFF2F0", VA = "0xAFF2F0", Slot = "18")]
		internal virtual void ChangeLODLevelTo(int lodLevel)
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xAFF3C8", Offset = "0xAFF3C8", VA = "0xAFF3C8", Slot = "19")]
		internal virtual void CullOrUncullObject(bool cull = true)
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xAFF4B8", Offset = "0xAFF4B8", VA = "0xAFF4B8", Slot = "20")]
		public virtual void AssignComponentsToOptimizeFrom(Component target, bool includeAdvanced = false)
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xAFF4BC", Offset = "0xAFF4BC", VA = "0xAFF4BC")]
		public bool CheckIfAlreadyInUse(LODsControllerBase generatedController, List<Optimizer_Base> childOptims)
		{
			return default(bool);
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xAFF7D4", Offset = "0xAFF7D4", VA = "0xAFF7D4", Slot = "21")]
		public virtual void AssignCustomComponentToOptimize(MonoBehaviour target)
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xAFF7D8", Offset = "0xAFF7D8", VA = "0xAFF7D8", Slot = "22")]
		public virtual void AssignComponentsToBeOptimizedFromAllChildren(GameObject target, bool searchForCustom = false)
		{
		}

		[Token(Token = "0x600194E")]
		public abstract bool ContainsComponent(Component component);

		[Token(Token = "0x600194F")]
		public abstract void RefreshToOptimizeList();

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xB006E0", Offset = "0xB006E0", VA = "0xB006E0")]
		public bool IsPrefabed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xB006E8", Offset = "0xB006E8", VA = "0xB006E8", Slot = "25")]
		protected virtual void RefreshInitialSettingsForOptimized()
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xB006EC", Offset = "0xB006EC", VA = "0xB006EC", Slot = "26")]
		public virtual void RemoveFromToOptimizeAt(int i)
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xB006F0", Offset = "0xB006F0", VA = "0xB006F0", Slot = "27")]
		public virtual void RemoveAllComponentsFromToOptimize()
		{
		}

		[Token(Token = "0x6001954")]
		protected abstract LODsControllerBase AddToOptimize(LODsControllerBase lod);

		[Token(Token = "0x6001955")]
		protected abstract void ResetLODs(bool hard = false);

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xB006F4", Offset = "0xB006F4", VA = "0xB006F4", Slot = "30")]
		protected virtual void OnActivationChange(bool active)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xB00838", Offset = "0xB00838", VA = "0xB00838", Slot = "31")]
		public virtual void CheckForNullsToOptimize()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xB0083C", Offset = "0xB0083C", VA = "0xB0083C", Slot = "32")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xB00998", Offset = "0xB00998", VA = "0xB00998")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xB009A4", Offset = "0xB009A4", VA = "0xB009A4", Slot = "33")]
		public virtual void CleanAsset()
		{
		}

		[Token(Token = "0x600195B")]
		public static List<T> FindComponentsInAllChildren<T>(Transform transformToSearchIn) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xB009A8", Offset = "0xB009A8", VA = "0xB009A8", Slot = "34")]
		protected virtual void OptimizerReset()
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xB009AC", Offset = "0xB009AC", VA = "0xB009AC", Slot = "35")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xB009D8", Offset = "0xB009D8", VA = "0xB009D8")]
		private void ApplyLastEvent()
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xB00AD0", Offset = "0xB00AD0", VA = "0xB00AD0")]
		public void OptimizerOnValidate()
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xB00AD4", Offset = "0xB00AD4", VA = "0xB00AD4")]
		protected void OnValidateStart()
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xB00B0C", Offset = "0xB00B0C", VA = "0xB00B0C", Slot = "36")]
		protected virtual void OnValidateRefreshComponents()
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xB00B10", Offset = "0xB00B10", VA = "0xB00B10", Slot = "37")]
		protected virtual void OnValidateUpdateToOptimize(bool hard = false)
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xB00B14", Offset = "0xB00B14", VA = "0xB00B14")]
		public void SetAutoDistance(float multiplier = 1f)
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xB00DE4", Offset = "0xB00DE4", VA = "0xB00DE4", Slot = "38")]
		protected virtual void OnValidateCheckForStatic()
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xB00DE8", Offset = "0xB00DE8", VA = "0xB00DE8", Slot = "39")]
		public virtual void SyncWithReferences()
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xAF4BC4", Offset = "0xAF4BC4", VA = "0xAF4BC4", Slot = "40")]
		public virtual void EditorUpdate()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xB00DEC", Offset = "0xB00DEC", VA = "0xB00DEC")]
		public void EditorResetLODValues()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xB00FB4", Offset = "0xB00FB4", VA = "0xB00FB4")]
		public void DOTSFindMeshes(bool force = false)
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xB015B0", Offset = "0xB015B0", VA = "0xB015B0")]
		public bool DOTSAlreadyContains(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xB0167C", Offset = "0xB0167C", VA = "0xB0167C")]
		protected BoundingSphere[] GetBoundingSpheresMultiShape()
		{
			return null;
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xB018B8", Offset = "0xB018B8", VA = "0xB018B8")]
		protected float[] GetCenterPosAndFarthest()
		{
			return null;
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xB01BF4", Offset = "0xB01BF4", VA = "0xB01BF4")]
		public void GenerateAutoShape()
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xB01DCC", Offset = "0xB01DCC", VA = "0xB01DCC")]
		protected List<Vector3> GetPointsFromMesh(Mesh mesh, float precision)
		{
			return null;
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xAFD980", Offset = "0xAFD980", VA = "0xAFD980")]
		protected void InitCullingGroupsMultiShape(float[] distances, float detectionSphereRadius = 2.5f, [Optional] Camera targetCamera)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xAFE1D8", Offset = "0xAFE1D8", VA = "0xAFE1D8")]
		public void CullingGroupStateChangedMultiShape(CullingGroupEvent cullingEvent)
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xB02358", Offset = "0xB02358", VA = "0xB02358")]
		public Vector3 GetReferencePositionMultiShape()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xB02368", Offset = "0xB02368", VA = "0xB02368")]
		public void OnValidateMultiShape()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xB026DC", Offset = "0xB026DC", VA = "0xB026DC")]
		public void DynamicLODUpdateMiltiShape(EOptimizingDistance category, float distance)
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xB027C0", Offset = "0xB027C0", VA = "0xB027C0")]
		protected void RefreshEffectiveCullingGroupsMultiShape()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xB01B48", Offset = "0xB01B48", VA = "0xB01B48")]
		private BoundingSphere GetVisibilitySphere(int i)
		{
			return default(BoundingSphere);
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xB02254", Offset = "0xB02254", VA = "0xB02254")]
		internal int GetIndexForCullEventMultiShape(int containerSphere)
		{
			return default(int);
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xB02AD8", Offset = "0xB02AD8", VA = "0xB02AD8")]
		public void RefreshCoverageDetectionPoints(List<Vector3> coverageOffsets, Vector3 origin)
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xB03248", Offset = "0xB03248", VA = "0xB03248")]
		private void RefreshCoverageOffsets()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xAFE718", Offset = "0xAFE718", VA = "0xAFE718")]
		private void ObstacleCheck()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xB049E8", Offset = "0xB049E8", VA = "0xB049E8")]
		public void ObstacleDetectionOnValidate()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xB04ABC", Offset = "0xB04ABC", VA = "0xB04ABC")]
		public void Gizmos_IsResizingLOD(int lod)
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xB04AC4", Offset = "0xB04AC4", VA = "0xB04AC4")]
		public void Gizmos_StopChanging()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xB04AD0", Offset = "0xB04AD0", VA = "0xB04AD0")]
		public void Gizmos_SelectLOD(int lod)
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xB04AD8", Offset = "0xB04AD8", VA = "0xB04AD8", Slot = "41")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xB04B98", Offset = "0xB04B98", VA = "0xB04B98", Slot = "42")]
		public virtual int GetToOptimizeCount()
		{
			return default(int);
		}

		[Token(Token = "0x600197F")]
		public abstract void RefreshLODSettings();

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xB04C68", Offset = "0xB04C68", VA = "0xB04C68")]
		private void InitDynamicOptimizer(bool justDynamic)
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xB04FE0", Offset = "0xB04FE0", VA = "0xB04FE0")]
		public void RefreshDetectionBounds()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xAF43A0", Offset = "0xAF43A0", VA = "0xAF43A0")]
		protected void RefreshDistances()
		{
		}

		[Token(Token = "0x6001991")]
		internal abstract Optimizers_LODTransition GetLodTransitionFor(int optimizedIndex, int targetLOD);

		[Token(Token = "0x6001992")]
		internal abstract ILODInstance GetLODInstance(int i, int targetLODLevel);

		[Token(Token = "0x6001993")]
		public abstract Component GetOptimizedComponent(int i);

		[Token(Token = "0x6001994")]
		internal abstract void RemoveToOptimize(LODsControllerBase lODsControllerBase);

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xB008FC", Offset = "0xB008FC", VA = "0xB008FC")]
		private void DisposeDynamicOptimizer()
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xB05118", Offset = "0xB05118", VA = "0xB05118", Slot = "48")]
		public virtual void DynamicLODUpdate(EOptimizingDistance category, float distance)
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xB05380", Offset = "0xB05380", VA = "0xB05380")]
		private int GetLODForDistance(float distance)
		{
			return default(int);
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xB05638", Offset = "0xB05638", VA = "0xB05638")]
		internal bool TresholdTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xB05830", Offset = "0xB05830", VA = "0xB05830")]
		private void InitEffectiveOptimizer()
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xB0549C", Offset = "0xB0549C", VA = "0xB0549C")]
		private void EffectiveLODUpdate()
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xB05934", Offset = "0xB05934", VA = "0xB05934", Slot = "49")]
		protected virtual void RefreshEffectiveCullingGroups()
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xB059DC", Offset = "0xB059DC", VA = "0xB059DC")]
		private void InitTriggerOptimizer()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xB0558C", Offset = "0xB0558C", VA = "0xB0558C")]
		private void TriggerLODUpdate()
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xB05FDC", Offset = "0xB05FDC", VA = "0xB05FDC", Slot = "50")]
		internal virtual void OnTriggerChange(Optimizers_TriggerHelper helper, bool exit)
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xB05C3C", Offset = "0xB05C3C", VA = "0xB05C3C")]
		protected void GenerateTriggerHelpers()
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xAFD5C0", Offset = "0xAFD5C0", VA = "0xAFD5C0")]
		public float GetDetectionRadiusRaw()
		{
			return default(float);
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xAFF980", Offset = "0xAFF980", VA = "0xAFF980")]
		public void TryAutoComputeDetectionShape(float scaleUp = 1f)
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xB06E10", Offset = "0xB06E10", VA = "0xB06E10")]
		public static float GetBiggest(Vector3 from, bool abs = false)
		{
			return default(float);
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xB060FC", Offset = "0xB060FC", VA = "0xB060FC")]
		public static Vector3[] MeasureBiggest(Transform t, bool withLodGroups = true, float limitTo = 0f, [Optional] Type checkOnly)
		{
			return null;
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xB06EB8", Offset = "0xB06EB8", VA = "0xB06EB8")]
		public void CheckAndRemoveRenderersAlreadyInOtherLODGroup()
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xB07114", Offset = "0xB07114", VA = "0xB07114")]
		public static bool IsRendererInLODGroup(Renderer r, LODGroup lod)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xAF4924", Offset = "0xAF4924", VA = "0xAF4924", Slot = "51")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60019C0")]
		public abstract bool OptimizationListExists();

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xAFD450", Offset = "0xAFD450", VA = "0xAFD450", Slot = "53")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xAFD2B8", Offset = "0xAFD2B8", VA = "0xAFD2B8", Slot = "54")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xAF5674", Offset = "0xAF5674", VA = "0xAF5674")]
		protected Optimizer_Base()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029C")]
	public class EssentialLODsController : LODsControllerBase
	{
		[Token(Token = "0x2000388")]
		public enum EEssType
		{
			[Token(Token = "0x4001B66")]
			Unknown,
			[Token(Token = "0x4001B67")]
			Particle,
			[Token(Token = "0x4001B68")]
			Light,
			[Token(Token = "0x4001B69")]
			MonoBehaviour,
			[Token(Token = "0x4001B6A")]
			Renderer,
			[Token(Token = "0x4001B6B")]
			NavMeshAgent,
			[Token(Token = "0x4001B6C")]
			AudioSource,
			[Token(Token = "0x4001B6D")]
			Rigidbody,
			[Token(Token = "0x4001B6E")]
			LODGroup
		}

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<ILODInstance> _iflod;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<LODI_ParticleSystem> LODs_Particle;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<LODI_Light> LODs_Light;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<LODI_MonoBehaviour> LODs_Mono;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<LODI_Renderer> LODs_Renderer;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<LODI_NavMeshAgent> LODs_NavMesh;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<LODI_AudioSource> LODs_Audio;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<LODI_Rigidbody> LODs_Rigidbody;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<LODI_UnityLOD> LODs_LODGroup;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private LODI_ParticleSystem Ini_Particle;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private LODI_Light Ini_Light;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private LODI_MonoBehaviour Ini_Mono;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private LODI_Renderer Ini_Rend;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private LODI_NavMeshAgent Ini_Nav;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private LODI_AudioSource Ini_Audio;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private LODI_Rigidbody Ini_Rigidbody;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private LODI_UnityLOD Ini_LODGroup;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private EssentialOptimizer eOptimizer;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public EEssType ControlerType;

		[Token(Token = "0x170005EE")]
		public override ILODInstance InitialSettings
		{
			[Token(Token = "0x60019CE")]
			[Address(RVA = "0xAF35E4", Offset = "0xAF35E4", VA = "0xAF35E4", Slot = "13")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019CF")]
			[Address(RVA = "0xAF3650", Offset = "0xAF3650", VA = "0xAF3650", Slot = "14")]
			protected set
			{
			}
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xAF2264", Offset = "0xAF2264", VA = "0xAF2264", Slot = "12")]
		protected override List<ILODInstance> GetIFLODList()
		{
			return null;
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xAF2648", Offset = "0xAF2648", VA = "0xAF2648", Slot = "10")]
		protected override void GenerateNewLODSettings()
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xAF2840", Offset = "0xAF2840", VA = "0xAF2840")]
		private void GenerateInitialSettings()
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xAF2CD0", Offset = "0xAF2CD0", VA = "0xAF2CD0")]
		private ILODInstance GenerateInstance()
		{
			return null;
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xAF2E20", Offset = "0xAF2E20", VA = "0xAF2E20", Slot = "8")]
		protected override void CheckAndGenerateLODParameters()
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xAF3264", Offset = "0xAF3264", VA = "0xAF3264", Slot = "18")]
		internal override void ApplyLODLevelSettings(ILODInstance currentLOD)
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xAF3424", Offset = "0xAF3424", VA = "0xAF3424")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xAF3428", Offset = "0xAF3428", VA = "0xAF3428", Slot = "15")]
		public override ILODInstance GetLODSetting(int lod)
		{
			return null;
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xAF351C", Offset = "0xAF351C", VA = "0xAF351C", Slot = "16")]
		public override int GetLODSettingsCount()
		{
			return default(int);
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xAF381C", Offset = "0xAF381C", VA = "0xAF381C")]
		internal static EEssType GetEssentialType(Component target)
		{
			return default(EEssType);
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xAF3ADC", Offset = "0xAF3ADC", VA = "0xAF3ADC")]
		internal static EEssType GetEssentialTypeAll(Component target)
		{
			return default(EEssType);
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xAF3C1C", Offset = "0xAF3C1C", VA = "0xAF3C1C")]
		public EssentialLODsController(Optimizer_Base sourceOptimizer, Component toOptimize, int index, string header = "")
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xAF3D74", Offset = "0xAF3D74", VA = "0xAF3D74", Slot = "17")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xAF3E64", Offset = "0xAF3E64", VA = "0xAF3E64", Slot = "6")]
		protected override void RefreshToOptimizeIndex()
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xAF3F04", Offset = "0xAF3F04", VA = "0xAF3F04", Slot = "19")]
		internal override ILODInstance GetCurrentLOD()
		{
			return null;
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xAF3F84", Offset = "0xAF3F84", VA = "0xAF3F84", Slot = "20")]
		internal override ILODInstance GetCullingLOD()
		{
			return null;
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xAF401C", Offset = "0xAF401C", VA = "0xAF401C", Slot = "21")]
		internal override ILODInstance GetHiddenLOD()
		{
			return null;
		}
	}
	[Token(Token = "0x200029D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56F168", Offset = "0x56F168")]
	public class EssentialOptimizer : Optimizer_Base, IDropHandler, IEventSystemHandler, IFHierarchyIcon
	{
		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public List<EssentialLODsController> ToOptimize;

		[Token(Token = "0x170005EF")]
		public string EditorIconPath
		{
			[Token(Token = "0x60019EE")]
			[Address(RVA = "0xAF530C", Offset = "0xAF530C", VA = "0xAF530C", Slot = "56")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xAF40B4", Offset = "0xAF40B4", VA = "0xAF40B4", Slot = "34")]
		protected override void OptimizerReset()
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xAF40B8", Offset = "0xAF40B8", VA = "0xAF40B8", Slot = "39")]
		public override void SyncWithReferences()
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xAF4184", Offset = "0xAF4184", VA = "0xAF4184", Slot = "36")]
		protected override void OnValidateRefreshComponents()
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xAF41F8", Offset = "0xAF41F8", VA = "0xAF41F8", Slot = "37")]
		protected override void OnValidateUpdateToOptimize(bool hard = false)
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xAF4224", Offset = "0xAF4224", VA = "0xAF4224", Slot = "31")]
		public override void CheckForNullsToOptimize()
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xAF42E8", Offset = "0xAF42E8", VA = "0xAF42E8", Slot = "29")]
		protected override void ResetLODs(bool hard = false)
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xAF42EC", Offset = "0xAF42EC", VA = "0xAF42EC", Slot = "25")]
		protected override void RefreshInitialSettingsForOptimized()
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xAF4474", Offset = "0xAF4474", VA = "0xAF4474", Slot = "20")]
		public override void AssignComponentsToOptimizeFrom(Component target, bool includeAdvanced = false)
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xAF4478", Offset = "0xAF4478", VA = "0xAF4478", Slot = "21")]
		public override void AssignCustomComponentToOptimize(MonoBehaviour target)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xAF45E0", Offset = "0xAF45E0", VA = "0xAF45E0")]
		public void AddToOptimizeIfCan(Component target, List<Optimizer_Base> childOptimizers)
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xAF45E4", Offset = "0xAF45E4", VA = "0xAF45E4", Slot = "26")]
		public override void RemoveFromToOptimizeAt(int i)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xAF45E8", Offset = "0xAF45E8", VA = "0xAF45E8", Slot = "23")]
		public override bool ContainsComponent(Component component)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xAF46C8", Offset = "0xAF46C8", VA = "0xAF46C8", Slot = "24")]
		public override void RefreshToOptimizeList()
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xAF478C", Offset = "0xAF478C", VA = "0xAF478C", Slot = "42")]
		public override int GetToOptimizeCount()
		{
			return default(int);
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xAF47E0", Offset = "0xAF47E0", VA = "0xAF47E0", Slot = "51")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xAF4AC4", Offset = "0xAF4AC4", VA = "0xAF4AC4", Slot = "40")]
		public override void EditorUpdate()
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xAF4C70", Offset = "0xAF4C70", VA = "0xAF4C70", Slot = "13")]
		protected override void AllLODComponents_ApplyCulledState()
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xAF4D80", Offset = "0xAF4D80", VA = "0xAF4D80", Slot = "14")]
		protected override void AllLODComponents_ApplyCurrentState()
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xAF4EBC", Offset = "0xAF4EBC", VA = "0xAF4EBC", Slot = "15")]
		protected override void AllLODComponents_RefreshChoosedLODState(int lodLevel)
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xAF4FE4", Offset = "0xAF4FE4", VA = "0xAF4FE4", Slot = "16")]
		protected override void AllLODComponents_ChangeChoosedLODState(int lodLevel)
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xAF5164", Offset = "0xAF5164", VA = "0xAF5164", Slot = "44")]
		internal override Optimizers_LODTransition GetLodTransitionFor(int i, int targetLODLevel)
		{
			return null;
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xAF52F8", Offset = "0xAF52F8", VA = "0xAF52F8", Slot = "43")]
		public override void RefreshLODSettings()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xAF537C", Offset = "0xAF537C", VA = "0xAF537C", Slot = "55")]
		public void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xAF5380", Offset = "0xAF5380", VA = "0xAF5380", Slot = "28")]
		protected override LODsControllerBase AddToOptimize(LODsControllerBase lod)
		{
			return null;
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xAF5388", Offset = "0xAF5388", VA = "0xAF5388", Slot = "46")]
		public override Component GetOptimizedComponent(int i)
		{
			return null;
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xAF5414", Offset = "0xAF5414", VA = "0xAF5414", Slot = "45")]
		internal override ILODInstance GetLODInstance(int i, int targetLODLevel)
		{
			return null;
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xAF5504", Offset = "0xAF5504", VA = "0xAF5504", Slot = "47")]
		internal override void RemoveToOptimize(LODsControllerBase lODsControllerBase)
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xAF5600", Offset = "0xAF5600", VA = "0xAF5600", Slot = "52")]
		public override bool OptimizationListExists()
		{
			return default(bool);
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xAF5610", Offset = "0xAF5610", VA = "0xAF5610")]
		public EssentialOptimizer()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public abstract class ScrLOD_Base : ScriptableObject
	{
		[Token(Token = "0x60019F6")]
		public abstract ILODInstance GetLODInstance();

		[Token(Token = "0x60019F7")]
		public abstract ScrLOD_Base CreateNewScrCopy();

		[Token(Token = "0x60019F8")]
		public abstract ScrLOD_Base GetScrLODInstance();

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xAC8860", Offset = "0xAC8860", VA = "0xAC8860", Slot = "7")]
		public virtual ScriptableLODsController GenerateLODController(Component target, ScriptableOptimizer optimizer)
		{
			return null;
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xAC8550", Offset = "0xAC8550", VA = "0xAC8550")]
		protected ScrLOD_Base()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class ScrOptimizer_LODSettings : ScriptableObject
	{
		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ScrLOD_Base> LevelOfDetailSets;

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xAC9904", Offset = "0xAC9904", VA = "0xAC9904")]
		public ScrOptimizer_LODSettings()
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xAC9978", Offset = "0xAC9978", VA = "0xAC9978")]
		public ScrOptimizer_LODSettings CreateCopy()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20002A0")]
	public class ScriptableLODsController : LODsControllerBase
	{
		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string pathTo;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ScrOptimizer_LODSettings LODSet;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ScrOptimizer_LODSettings sharedLODSet;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ScrOptimizer_LODSettings uniqueLODSet;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ScriptableOptimizer sOptimizer;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public ScrLOD_Base RootReference;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[HideInInspector]
		private ILODInstance initialSettings;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public bool UsingShared;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<ILODInstance> _iflod;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int nullTry;

		[Token(Token = "0x170005F0")]
		public ScriptableOptimizer GetOptimizer
		{
			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0xACA824", Offset = "0xACA824", VA = "0xACA824")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F1")]
		public override ILODInstance InitialSettings
		{
			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0xACA82C", Offset = "0xACA82C", VA = "0xACA82C", Slot = "13")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0xACA834", Offset = "0xACA834", VA = "0xACA834", Slot = "14")]
			protected set
			{
			}
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xAC9A58", Offset = "0xAC9A58", VA = "0xAC9A58", Slot = "11")]
		protected override bool CheckCoreRequirements(bool hard = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xAC9C9C", Offset = "0xAC9C9C", VA = "0xAC9C9C", Slot = "10")]
		protected override void GenerateNewLODSettings()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xAC9EA4", Offset = "0xAC9EA4", VA = "0xAC9EA4", Slot = "9")]
		protected override bool NeedToReGenerate(int targetCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xAC9D44", Offset = "0xAC9D44", VA = "0xAC9D44")]
		public void SetSharedLODSettings(ScrOptimizer_LODSettings lodSettings)
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xACA0FC", Offset = "0xACA0FC", VA = "0xACA0FC")]
		public static bool CheckLODSetCorrectness(ScrOptimizer_LODSettings lodSet, ILODInstance referenceLOD)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xAC9D48", Offset = "0xAC9D48", VA = "0xAC9D48")]
		public void SetUniqueLODSettings(ScrOptimizer_LODSettings lodSettings)
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xACA424", Offset = "0xACA424", VA = "0xACA424", Slot = "8")]
		protected override void CheckAndGenerateLODParameters()
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xACA428", Offset = "0xACA428", VA = "0xACA428")]
		public bool LostRequiredReferences()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xACA514", Offset = "0xACA514", VA = "0xACA514", Slot = "5")]
		protected override void Editor_ValuesChanged()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xACA518", Offset = "0xACA518", VA = "0xACA518")]
		public ScrOptimizer_LODSettings SaveLODSet()
		{
			return null;
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xACA764", Offset = "0xACA764", VA = "0xACA764")]
		public void CheckAssetStructureCorrectness()
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xACA814", Offset = "0xACA814", VA = "0xACA814")]
		public ScrOptimizer_LODSettings GetSharedSet()
		{
			return null;
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xACA81C", Offset = "0xACA81C", VA = "0xACA81C")]
		public ScrOptimizer_LODSettings GetUniqueSet()
		{
			return null;
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xAC8794", Offset = "0xAC8794", VA = "0xAC8794")]
		public ScriptableLODsController(Optimizer_Base sourceOptimizer, Component toOptimize, int index, string header = "", [Optional] ScrLOD_Base rootReference)
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xACA83C", Offset = "0xACA83C", VA = "0xACA83C", Slot = "15")]
		public override ILODInstance GetLODSetting(int i)
		{
			return null;
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xACA920", Offset = "0xACA920", VA = "0xACA920", Slot = "16")]
		public override int GetLODSettingsCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xACA978", Offset = "0xACA978", VA = "0xACA978", Slot = "17")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xACAADC", Offset = "0xACAADC", VA = "0xACAADC", Slot = "18")]
		internal override void ApplyLODLevelSettings(ILODInstance currentLOD)
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xACAE58", Offset = "0xACAE58", VA = "0xACAE58", Slot = "6")]
		protected override void RefreshToOptimizeIndex()
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xACAEF8", Offset = "0xACAEF8", VA = "0xACAEF8", Slot = "19")]
		internal override ILODInstance GetCurrentLOD()
		{
			return null;
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xACAF7C", Offset = "0xACAF7C", VA = "0xACAF7C", Slot = "20")]
		internal override ILODInstance GetCullingLOD()
		{
			return null;
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xACB000", Offset = "0xACB000", VA = "0xACB000", Slot = "21")]
		internal override ILODInstance GetHiddenLOD()
		{
			return null;
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xACB080", Offset = "0xACB080", VA = "0xACB080", Slot = "12")]
		protected override List<ILODInstance> GetIFLODList()
		{
			return null;
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xACB1A0", Offset = "0xACB1A0", VA = "0xACB1A0", Slot = "4")]
		protected override void Editor_MonoSimplyfy()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class Optimizers_CullingContainer
	{
		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int MaxSlots;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A124", Offset = "0x57A124")]
		private int <ID>k__BackingField;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Destroying;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A134", Offset = "0x57A134")]
		private CullingGroup <CullingGroup>k__BackingField;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A144", Offset = "0x57A144")]
		private Optimizer_Base[] <Optimizers>k__BackingField;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A154", Offset = "0x57A154")]
		private BoundingSphere[] <CullingSpheres>k__BackingField;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A164", Offset = "0x57A164")]
		private int <BoundingCount>k__BackingField;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A174", Offset = "0x57A174")]
		private float[] <DistanceLevels>k__BackingField;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A184", Offset = "0x57A184")]
		private int <HighestIndex>k__BackingField;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A194", Offset = "0x57A194")]
		private int <LowestFreeIndex>k__BackingField;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A1A4", Offset = "0x57A1A4")]
		private int <SlotsTaken>k__BackingField;

		[Token(Token = "0x170005F2")]
		public int ID
		{
			[Token(Token = "0x6001A19")]
			[Address(RVA = "0xAC61B8", Offset = "0xAC61B8", VA = "0xAC61B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E1F0", Offset = "0x57E1F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0xAC61C0", Offset = "0xAC61C0", VA = "0xAC61C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E200", Offset = "0x57E200")]
			private set
			{
			}
		}

		[Token(Token = "0x170005F3")]
		public bool HaveFreeSlots
		{
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0xAC2BC4", Offset = "0xAC2BC4", VA = "0xAC2BC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005F4")]
		public CullingGroup CullingGroup
		{
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0xAC61C8", Offset = "0xAC61C8", VA = "0xAC61C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E210", Offset = "0x57E210")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0xAC61D0", Offset = "0xAC61D0", VA = "0xAC61D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E220", Offset = "0x57E220")]
			private set
			{
			}
		}

		[Token(Token = "0x170005F5")]
		public Optimizer_Base[] Optimizers
		{
			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0xAC61D8", Offset = "0xAC61D8", VA = "0xAC61D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E230", Offset = "0x57E230")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0xAC61E0", Offset = "0xAC61E0", VA = "0xAC61E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E240", Offset = "0x57E240")]
			private set
			{
			}
		}

		[Token(Token = "0x170005F6")]
		public BoundingSphere[] CullingSpheres
		{
			[Token(Token = "0x6001A20")]
			[Address(RVA = "0xAC61E8", Offset = "0xAC61E8", VA = "0xAC61E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E250", Offset = "0x57E250")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A21")]
			[Address(RVA = "0xAC61F0", Offset = "0xAC61F0", VA = "0xAC61F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E260", Offset = "0x57E260")]
			private set
			{
			}
		}

		[Token(Token = "0x170005F7")]
		public int BoundingCount
		{
			[Token(Token = "0x6001A22")]
			[Address(RVA = "0xAC61F8", Offset = "0xAC61F8", VA = "0xAC61F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E270", Offset = "0x57E270")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A23")]
			[Address(RVA = "0xAC6200", Offset = "0xAC6200", VA = "0xAC6200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E280", Offset = "0x57E280")]
			private set
			{
			}
		}

		[Token(Token = "0x170005F8")]
		public float[] DistanceLevels
		{
			[Token(Token = "0x6001A24")]
			[Address(RVA = "0xAC6208", Offset = "0xAC6208", VA = "0xAC6208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E290", Offset = "0x57E290")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A25")]
			[Address(RVA = "0xAC6210", Offset = "0xAC6210", VA = "0xAC6210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E2A0", Offset = "0x57E2A0")]
			private set
			{
			}
		}

		[Token(Token = "0x170005F9")]
		public int HighestIndex
		{
			[Token(Token = "0x6001A26")]
			[Address(RVA = "0xAC6218", Offset = "0xAC6218", VA = "0xAC6218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E2B0", Offset = "0x57E2B0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A27")]
			[Address(RVA = "0xAC6220", Offset = "0xAC6220", VA = "0xAC6220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E2C0", Offset = "0x57E2C0")]
			private set
			{
			}
		}

		[Token(Token = "0x170005FA")]
		public int LowestFreeIndex
		{
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0xAC6228", Offset = "0xAC6228", VA = "0xAC6228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E2D0", Offset = "0x57E2D0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0xAC6230", Offset = "0xAC6230", VA = "0xAC6230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E2E0", Offset = "0x57E2E0")]
			private set
			{
			}
		}

		[Token(Token = "0x170005FB")]
		public int SlotsTaken
		{
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0xAC6238", Offset = "0xAC6238", VA = "0xAC6238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E2F0", Offset = "0x57E2F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0xAC6240", Offset = "0xAC6240", VA = "0xAC6240")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E300", Offset = "0x57E300")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xAC31E0", Offset = "0xAC31E0", VA = "0xAC31E0")]
		public Optimizers_CullingContainer(int maxSlots)
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xAC3264", Offset = "0xAC3264", VA = "0xAC3264")]
		public void InitializeContainer(int id, float[] distances, Camera targetCamera)
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xAC0E94", Offset = "0xAC0E94", VA = "0xAC0E94")]
		public void SetNewCamera(Camera cam)
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xAC2D04", Offset = "0xAC2D04", VA = "0xAC2D04")]
		public bool AddOptimizer(Optimizer_Base optimizer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xAC35C4", Offset = "0xAC35C4", VA = "0xAC35C4")]
		public void RemoveOptimizer(Optimizer_Base optimizer)
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xAC6248", Offset = "0xAC6248", VA = "0xAC6248")]
		private void MoveStackOptimizerToFreeSlot()
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xAC6634", Offset = "0xAC6634", VA = "0xAC6634")]
		private void CullingGroupStateChanged(CullingGroupEvent cullingEvent)
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xAC672C", Offset = "0xAC672C", VA = "0xAC672C")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xAC6760", Offset = "0xAC6760", VA = "0xAC6760")]
		public static int GetId(float[] distances)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002A2")]
	public class Optimizers_CullingContainersList : List<Optimizers_CullingContainer>
	{
		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A1B4", Offset = "0x57A1B4")]
		private int <ID>k__BackingField;

		[Token(Token = "0x170005FC")]
		public int ID
		{
			[Token(Token = "0x6001A35")]
			[Address(RVA = "0xAC684C", Offset = "0xAC684C", VA = "0xAC684C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E310", Offset = "0x57E310")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A36")]
			[Address(RVA = "0xAC6854", Offset = "0xAC6854", VA = "0xAC6854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E320", Offset = "0x57E320")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xAC2C80", Offset = "0xAC2C80", VA = "0xAC2C80")]
		public Optimizers_CullingContainersList(int id)
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xAC3848", Offset = "0xAC3848", VA = "0xAC3848")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class Optimizers_DynamicClock
	{
		[Token(Token = "0x2000389")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FBE0", Offset = "0x56FBE0")]
		private sealed class <WatchUpdate>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Optimizers_DynamicClock <>4__this;

			[Token(Token = "0x4001B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private long <totalElapsed>5__2;

			[Token(Token = "0x4001B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private long <totalTicks>5__3;

			[Token(Token = "0x4001B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <ticksLimit>5__4;

			[Token(Token = "0x4001B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <i>5__5;

			[Token(Token = "0x1700066C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D57")]
				[Address(RVA = "0xAC6FB8", Offset = "0xAC6FB8", VA = "0xAC6FB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700066D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D59")]
				[Address(RVA = "0xAC7020", Offset = "0xAC7020", VA = "0xAC7020", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D54")]
			[Address(RVA = "0xAC68EC", Offset = "0xAC68EC", VA = "0xAC68EC")]
			[DebuggerHidden]
			public <WatchUpdate>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6001D55")]
			[Address(RVA = "0xAC6AD4", Offset = "0xAC6AD4", VA = "0xAC6AD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D56")]
			[Address(RVA = "0xAC6AD8", Offset = "0xAC6AD8", VA = "0xAC6AD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D58")]
			[Address(RVA = "0xAC6FC0", Offset = "0xAC6FC0", VA = "0xAC6FC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A1C4", Offset = "0x57A1C4")]
		private OptimizersManager <Manager>k__BackingField;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A1D4", Offset = "0x57A1D4")]
		private List<Optimizer_Base> <Optimizers>k__BackingField;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A1E4", Offset = "0x57A1E4")]
		private EOptimizingDistance <OptimizingDistanceType>k__BackingField;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A1F4", Offset = "0x57A1F4")]
		private long <FrameTicksConsumption>k__BackingField;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A204", Offset = "0x57A204")]
		private long <LastMSConsumption>k__BackingField;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A214", Offset = "0x57A214")]
		private long <LastTicksConsumption>k__BackingField;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A224", Offset = "0x57A224")]
		private int <LastTickFrame>k__BackingField;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A234", Offset = "0x57A234")]
		private int <DelaysCount>k__BackingField;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A244", Offset = "0x57A244")]
		private float <AdaptedDelay>k__BackingField;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int[] avgTicks;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int avgCounter;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Stopwatch watch;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WaitForEndOfFrame waitForLateUpdate;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly float delayTolerance;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private readonly float updateRatio;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly float maxDelay;

		[Token(Token = "0x170005FD")]
		public OptimizersManager Manager
		{
			[Token(Token = "0x6001A39")]
			[Address(RVA = "0xAC685C", Offset = "0xAC685C", VA = "0xAC685C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E330", Offset = "0x57E330")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A3A")]
			[Address(RVA = "0xAC6864", Offset = "0xAC6864", VA = "0xAC6864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E340", Offset = "0x57E340")]
			private set
			{
			}
		}

		[Token(Token = "0x170005FE")]
		public List<Optimizer_Base> Optimizers
		{
			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0xAC686C", Offset = "0xAC686C", VA = "0xAC686C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E350", Offset = "0x57E350")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0xAC6874", Offset = "0xAC6874", VA = "0xAC6874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E360", Offset = "0x57E360")]
			private set
			{
			}
		}

		[Token(Token = "0x170005FF")]
		public EOptimizingDistance OptimizingDistanceType
		{
			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0xAC687C", Offset = "0xAC687C", VA = "0xAC687C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E370", Offset = "0x57E370")]
			get
			{
				return default(EOptimizingDistance);
			}
			[Token(Token = "0x6001A3E")]
			[Address(RVA = "0xAC6884", Offset = "0xAC6884", VA = "0xAC6884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E380", Offset = "0x57E380")]
			private set
			{
			}
		}

		[Token(Token = "0x17000600")]
		public long FrameTicksConsumption
		{
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0xAC688C", Offset = "0xAC688C", VA = "0xAC688C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E390", Offset = "0x57E390")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001A40")]
			[Address(RVA = "0xAC6894", Offset = "0xAC6894", VA = "0xAC6894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E3A0", Offset = "0x57E3A0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000601")]
		public long LastMSConsumption
		{
			[Token(Token = "0x6001A41")]
			[Address(RVA = "0xAC689C", Offset = "0xAC689C", VA = "0xAC689C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E3B0", Offset = "0x57E3B0")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001A42")]
			[Address(RVA = "0xAC68A4", Offset = "0xAC68A4", VA = "0xAC68A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E3C0", Offset = "0x57E3C0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000602")]
		public long LastTicksConsumption
		{
			[Token(Token = "0x6001A43")]
			[Address(RVA = "0xAC68AC", Offset = "0xAC68AC", VA = "0xAC68AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E3D0", Offset = "0x57E3D0")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001A44")]
			[Address(RVA = "0xAC68B4", Offset = "0xAC68B4", VA = "0xAC68B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E3E0", Offset = "0x57E3E0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000603")]
		public int LastTickFrame
		{
			[Token(Token = "0x6001A45")]
			[Address(RVA = "0xAC68BC", Offset = "0xAC68BC", VA = "0xAC68BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E3F0", Offset = "0x57E3F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0xAC68C4", Offset = "0xAC68C4", VA = "0xAC68C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E400", Offset = "0x57E400")]
			private set
			{
			}
		}

		[Token(Token = "0x17000604")]
		public int DelaysCount
		{
			[Token(Token = "0x6001A47")]
			[Address(RVA = "0xAC68CC", Offset = "0xAC68CC", VA = "0xAC68CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E410", Offset = "0x57E410")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A48")]
			[Address(RVA = "0xAC68D4", Offset = "0xAC68D4", VA = "0xAC68D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E420", Offset = "0x57E420")]
			private set
			{
			}
		}

		[Token(Token = "0x17000605")]
		public float AdaptedDelay
		{
			[Token(Token = "0x6001A49")]
			[Address(RVA = "0xAC68DC", Offset = "0xAC68DC", VA = "0xAC68DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E430", Offset = "0x57E430")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0xAC68E4", Offset = "0xAC68E4", VA = "0xAC68E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E440", Offset = "0x57E440")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xAC41A4", Offset = "0xAC41A4", VA = "0xAC41A4")]
		public Optimizers_DynamicClock(OptimizersManager manager, EOptimizingDistance type, List<Optimizer_Base> optimizers)
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xAC43C8", Offset = "0xAC43C8", VA = "0xAC43C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57E450", Offset = "0x57E450")]
		public IEnumerator WatchUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xAC6918", Offset = "0xAC6918", VA = "0xAC6918")]
		private void UpdateAdaptation()
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xAC6A6C", Offset = "0xAC6A6C", VA = "0xAC6A6C")]
		private void AddAverage(int ticks)
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xAC69FC", Offset = "0xAC69FC", VA = "0xAC69FC")]
		public int GetAverage()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002A4")]
	public class Optimizers_LODTransition
	{
		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool done;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ILODInstance From;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ILODInstance To;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ILODInstance tempLOD;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ILODInstance breakLOD;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Component sceneComponent;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ILODInstance initialLODSettings;

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xAC75DC", Offset = "0xAC75DC", VA = "0xAC75DC")]
		public Optimizers_LODTransition(Component sceneComp, ILODInstance from, ILODInstance to, ILODInstance initialLODSettingsRef)
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xAC7A58", Offset = "0xAC7A58", VA = "0xAC7A58")]
		public void BreakCurrentTransition(ILODInstance to)
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xAC7BB4", Offset = "0xAC7BB4", VA = "0xAC7BB4")]
		public void Update(float progress, float secondsAfter = 0f)
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xAC7E88", Offset = "0xAC7E88", VA = "0xAC7E88")]
		public void Finish()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class Optimizers_ObstacleBounds
	{
		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Bounds Bounds;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 Normal;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 CastDirection;

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xAC7FA8", Offset = "0xAC7FA8", VA = "0xAC7FA8")]
		public Optimizers_ObstacleBounds(RaycastHit hit, Vector3 castDirection)
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class Optimizers_Transitioning
	{
		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Optimizer_Base Optimizer;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A254", Offset = "0x57A254")]
		private int <Id>k__BackingField;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57A264", Offset = "0x57A264")]
		private bool <Finished>k__BackingField;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Index;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float elapsed;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float transitionDuration;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int targetLODLevel;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool allDone;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Optimizers_LODTransition[] lodTypes;

		[Token(Token = "0x17000606")]
		public int Id
		{
			[Token(Token = "0x6001A56")]
			[Address(RVA = "0xAC803C", Offset = "0xAC803C", VA = "0xAC803C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E4B4", Offset = "0x57E4B4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0xAC8044", Offset = "0xAC8044", VA = "0xAC8044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E4C4", Offset = "0x57E4C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000607")]
		public bool Finished
		{
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0xAC804C", Offset = "0xAC804C", VA = "0xAC804C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E4D4", Offset = "0x57E4D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0xAC8054", Offset = "0xAC8054", VA = "0xAC8054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E4E4", Offset = "0x57E4E4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xAC5144", Offset = "0xAC5144", VA = "0xAC5144")]
		public Optimizers_Transitioning(int optimizerId, Optimizer_Base optimizer, int targetLODLevel, float duration, int index = -1)
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xAC8060", Offset = "0xAC8060", VA = "0xAC8060")]
		private void InitTransitioning()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xAC5090", Offset = "0xAC5090", VA = "0xAC5090")]
		internal void BreakCurrentTransition(float newDuration, int targetLODLevel)
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xAC8180", Offset = "0xAC8180", VA = "0xAC8180")]
		private void BreakTransitioning()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xAC52D0", Offset = "0xAC52D0", VA = "0xAC52D0")]
		public void Finish()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xAC5378", Offset = "0xAC5378", VA = "0xAC5378")]
		public void Update(float deltaTime)
		{
		}
	}
}
namespace Autohand
{
	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F1A4", Offset = "0x56F1A4")]
	public class GrabbableThrowEvent : MonoBehaviour
	{
		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A274", Offset = "0x57A274")]
		public float breakVelocity;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A2AC", Offset = "0x57A2AC")]
		public LayerMask collisionLayers;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnBreak;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody rb;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Grabbable grab;

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xBE0100", Offset = "0xBE0100", VA = "0xBE0100")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xBE0170", Offset = "0xBE0170", VA = "0xBE0170")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xBE0290", Offset = "0xBE0290", VA = "0xBE0290")]
		private void Break()
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xBE02AC", Offset = "0xBE02AC", VA = "0xBE02AC")]
		public GrabbableThrowEvent()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class Finger : MonoBehaviour
	{
		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57A2E4", Offset = "0x57A2E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A2E4", Offset = "0x57A2E4")]
		public Transform tip;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A344", Offset = "0x57A344")]
		public float tipRadius;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A37C", Offset = "0x57A37C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A37C", Offset = "0x57A37C")]
		public float bendOffset;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currBendOffset;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float bend;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool touching;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private Quaternion[] minGripRotPose;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private Vector3[] minGripPosPose;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private Quaternion[] maxGripRotPose;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private Vector3[] maxGripPosPose;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private Transform[] fingerJoints;

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xBDB3E4", Offset = "0xBDB3E4", VA = "0xBDB3E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xBDB4C8", Offset = "0xBDB4C8", VA = "0xBDB4C8")]
		public bool BendFingerUntilHit(int steps, int layermask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xBDB884", Offset = "0xBDB884", VA = "0xBDB884")]
		public bool BendFingerUntilHit(int steps, RaycastHit target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xBDBF08", Offset = "0xBDBF08", VA = "0xBDBF08")]
		public bool UpdateFingerBend(float bend, int layermask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xBDBCD8", Offset = "0xBDBCD8", VA = "0xBDBCD8")]
		public void SetFingerBend(float bend)
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xBDB3E8", Offset = "0xBDB3E8", VA = "0xBDB3E8")]
		private void SlowBend()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xBDB788", Offset = "0xBDB788", VA = "0xBDB788")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x57E4F4", Offset = "0x57E4F4")]
		public void ResetBend()
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xBDC1B0", Offset = "0xBDC1B0", VA = "0xBDC1B0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x57E52C", Offset = "0x57E52C")]
		public void Grip()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xBDC2AC", Offset = "0xBDC2AC", VA = "0xBDC2AC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x57E564", Offset = "0x57E564")]
		public void SetMinPose()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xBDC5D0", Offset = "0xBDC5D0", VA = "0xBDC5D0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x57E59C", Offset = "0x57E59C")]
		public void SetMaxPose()
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xBDC8F4", Offset = "0xBDC8F4", VA = "0xBDC8F4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xBDC948", Offset = "0xBDC948", VA = "0xBDC948")]
		public Finger()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xBDC380", Offset = "0xBDC380", VA = "0xBDC380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E5D4", Offset = "0x57E5D4")]
		private int <SetMinPose>g__GetKidsCount|19_0(Transform obj, ref int count)
		{
			return default(int);
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xBDC470", Offset = "0xBDC470", VA = "0xBDC470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E5E4", Offset = "0x57E5E4")]
		private void <SetMinPose>g__AssignChildrenPose|19_1(Transform obj, ref int index)
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xBDC95C", Offset = "0xBDC95C", VA = "0xBDC95C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E5F4", Offset = "0x57E5F4")]
		private void <SetMinPose>g__AssignPoint|19_2(int point, Vector3 pos, Quaternion rot, Transform joint)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xBDC6A4", Offset = "0xBDC6A4", VA = "0xBDC6A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E604", Offset = "0x57E604")]
		private int <SetMaxPose>g__GetKidsCount|20_0(Transform obj, ref int count)
		{
			return default(int);
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xBDC794", Offset = "0xBDC794", VA = "0xBDC794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E614", Offset = "0x57E614")]
		private void <SetMaxPose>g__AssignChildrenPose|20_1(Transform obj, ref int index)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xBDCA1C", Offset = "0xBDCA1C", VA = "0xBDCA1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E624", Offset = "0x57E624")]
		private void <SetMaxPose>g__AssignPoint|20_2(int point, Vector3 pos, Quaternion rot, Transform joint)
		{
		}
	}
	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F224", Offset = "0x56F224")]
	public class GrabLock : MonoBehaviour
	{
		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnGrabPressed;

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xBDCADC", Offset = "0xBDCADC", VA = "0xBDCADC")]
		public GrabLock()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class Grabbable : MonoBehaviour
	{
		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57A4E8", Offset = "0x57A4E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A4E8", Offset = "0x57A4E8")]
		public Rigidbody body;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 heldPositionOffset;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 heldRotationOffset;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A548", Offset = "0x57A548")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A548", Offset = "0x57A548")]
		public HandType handType;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A594", Offset = "0x57A594")]
		public bool singleHandOnly;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A5CC", Offset = "0x57A5CC")]
		public bool parentOnGrab;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A604", Offset = "0x57A604")]
		public bool releaseOnTeleport;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A63C", Offset = "0x57A63C")]
		public bool lockHandOnGrab;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57A674", Offset = "0x57A674")]
		public Material hightlightMaterial;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SkinnedMeshRenderer skinnedMeshInstead;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool useSkinnedMesh;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool useOtherMeshRenderer;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MeshRenderer otherMeshRenderer;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A6AC", Offset = "0x57A6AC")]
		public float throwMultiplyer;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A6F8", Offset = "0x57A6F8")]
		public bool pullApartBreakOnly;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A744", Offset = "0x57A744")]
		public bool makeChildrenGrabbable;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A790", Offset = "0x57A790")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A790", Offset = "0x57A790")]
		public int jointBreakForce;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A7EC", Offset = "0x57A7EC")]
		public int jointBreakTorque;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public HandGrabEvent OnGrabEvent;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public HandGrabEvent OnReleaseEvent;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public HandGrabEvent OnForceReleaseEvent;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public HandGrabEvent OnSqueezeEvent;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public HandGrabEvent OnUnsqueezeEvent;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public HandGrabEvent OnJointBreakEvent;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public UnityEvent onGrab;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public UnityEvent onRelease;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public UnityEvent onSqueeze;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public UnityEvent onUnsqueeze;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public UnityEvent OnJointBreak;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected bool beingHeld;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 lastCenterOfMassPos;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Quaternion lastCenterOfMassRot;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private CollisionDetectionMode detectionMode;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public List<Hand> heldBy;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool throwing;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		private bool hightlighting;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private GameObject highlightObj;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private PlacePoint placePoint;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Transform originalParent;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool grabbedCurrently;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		private bool beingDestroyed;

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xBDCAE4", Offset = "0xBDCAE4", VA = "0xBDCAE4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xBDCAF0", Offset = "0xBDCAF0", VA = "0xBDCAF0", Slot = "4")]
		public virtual void OnAwake()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xBDCE0C", Offset = "0xBDCE0C", VA = "0xBDCE0C")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xBDCE7C", Offset = "0xBDCE7C", VA = "0xBDCE7C", Slot = "5")]
		public virtual void Highlight()
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xBDD998", Offset = "0xBDD998", VA = "0xBDD998", Slot = "6")]
		public virtual void Unhighlight()
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xBDDA58", Offset = "0xBDDA58", VA = "0xBDDA58", Slot = "7")]
		public virtual void OnSqueeze(Hand hand)
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xBDDEA0", Offset = "0xBDDEA0", VA = "0xBDDEA0", Slot = "8")]
		public virtual void OnUnsqueeze(Hand hand)
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xBDDEE4", Offset = "0xBDDEE4", VA = "0xBDDEE4", Slot = "9")]
		public virtual void OnGrab(Hand hand)
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xBDE0C0", Offset = "0xBDE0C0", VA = "0xBDE0C0", Slot = "10")]
		public virtual void OnRelease(Hand hand, bool thrown)
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xBD8F04", Offset = "0xBD8F04", VA = "0xBD8F04")]
		public void ForceHandsRelease()
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xBDEA70", Offset = "0xBDEA70", VA = "0xBDEA70")]
		public int HeldCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xBDEAC0", Offset = "0xBDEAC0", VA = "0xBDEAC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xBDEACC", Offset = "0xBDEACC", VA = "0xBDEACC", Slot = "11")]
		public virtual void OnHandJointBreak(Hand hand)
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xBDEB60", Offset = "0xBDEB60", VA = "0xBDEB60")]
		public bool IsThrowing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xBDEB68", Offset = "0xBDEB68", VA = "0xBDEB68")]
		public Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xBDE6BC", Offset = "0xBDE6BC", VA = "0xBDE6BC")]
		public Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xBDEC2C", Offset = "0xBDEC2C", VA = "0xBDEC2C")]
		public void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xBDECF0", Offset = "0xBDECF0", VA = "0xBDECF0")]
		public void SetPlacePoint(PlacePoint point)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xBDECF8", Offset = "0xBDECF8", VA = "0xBDECF8")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xBDF0FC", Offset = "0xBDF0FC", VA = "0xBDF0FC")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xBDF218", Offset = "0xBDF218", VA = "0xBDF218")]
		protected void ResetThrowing()
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xBDF220", Offset = "0xBDF220", VA = "0xBDF220")]
		protected void ResetLayerAfterRelease()
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xBDE844", Offset = "0xBDE844", VA = "0xBDE844")]
		public void SetLayerRecursive(Transform obj, int oldLayer, int newLayer)
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xBDCCE8", Offset = "0xBDCCE8", VA = "0xBDCCE8")]
		private void MakeChildrenGrabbable()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xBDF308", Offset = "0xBDF308", VA = "0xBDF308")]
		private void AddChildGrabbableRecursive(Transform obj)
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xBDF524", Offset = "0xBDF524", VA = "0xBDF524")]
		public void DoDestroy()
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xBDE0A0", Offset = "0xBDE0A0", VA = "0xBDE0A0")]
		protected void ContinuousCollisionDetection()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xBDF5A0", Offset = "0xBDF5A0", VA = "0xBDF5A0")]
		protected void OriginalCollisionDetection()
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xBDE558", Offset = "0xBDE558", VA = "0xBDE558")]
		public void TryEnablingSplittable()
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xBDCD64", Offset = "0xBDCD64", VA = "0xBDCD64")]
		public void TryAddingGrabbable()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xBDF638", Offset = "0xBDF638", VA = "0xBDF638")]
		public Grabbable()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F288", Offset = "0x56F288")]
	public class GrabbableBucket : Grabbable
	{
		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xBDF664", Offset = "0xBDF664", VA = "0xBDF664")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xBDF674", Offset = "0xBDF674", VA = "0xBDF674")]
		public GrabbableBucket()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class GrabbableChild : MonoBehaviour
	{
		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabbable grabParent;

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xBDF6A0", Offset = "0xBDF6A0", VA = "0xBDF6A0")]
		public GrabbableChild()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class GrabbablePoint : GrabbablePointBase
	{
		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform rightPoint;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftPoint;

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xBDF6A8", Offset = "0xBDF6A8", VA = "0xBDF6A8", Slot = "4")]
		public override bool Align(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xBDF83C", Offset = "0xBDF83C", VA = "0xBDF83C")]
		public GrabbablePoint()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F2EC", Offset = "0x56F2EC")]
	public class GrabbablePointBase : MonoBehaviour
	{
		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xBDF84C", Offset = "0xBDF84C", VA = "0xBDF84C", Slot = "4")]
		public virtual bool Align(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xBDF844", Offset = "0xBDF844", VA = "0xBDF844")]
		public GrabbablePointBase()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class GrabbablePoints : GrabbablePointBase
	{
		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] leftPoints;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform[] rightPoints;

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xBDF854", Offset = "0xBDF854", VA = "0xBDF854", Slot = "4")]
		public override bool Align(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xBDF918", Offset = "0xBDF918", VA = "0xBDF918")]
		private Transform ClosestGrabPoint(Transform[] points, Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xBDFCB4", Offset = "0xBDFCB4", VA = "0xBDFCB4")]
		public GrabbablePoints()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B0")]
	public struct PoseData
	{
		[StructLayout(3)]
		[Token(Token = "0x200038A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FBF0", Offset = "0x56FBF0")]
		private struct <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<Vector3> posePositionsList;

			[Token(Token = "0x4001B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<Quaternion> poseRotationsList;
		}

		[StructLayout(3)]
		[Token(Token = "0x200038B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FC00", Offset = "0x56FC00")]
		private struct <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int i;
		}

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 handOffset;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 rotationOffset;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] posePositions;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion[] poseRotations;

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x5F6DA8", Offset = "0x5F6DA8", VA = "0x5F6DA8")]
		public PoseData(Hand hand, Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x5F6DB0", Offset = "0x5F6DB0", VA = "0x5F6DB0")]
		public PoseData(Hand hand)
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x5F6DB8", Offset = "0x5F6DB8", VA = "0x5F6DB8")]
		public void SavePose(Hand hand, Transform relativeTo)
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x5F6DC0", Offset = "0x5F6DC0", VA = "0x5F6DC0")]
		public void SetPose(Hand hand, Transform relativeTo)
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xBE69FC", Offset = "0xBE69FC", VA = "0xBE69FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E634", Offset = "0x57E634")]
		internal static void <SavePose>g__AssignChildrenPose|6_0(Transform obj, ref <>c__DisplayClass6_0 P_1)
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xBE6BEC", Offset = "0xBE6BEC", VA = "0xBE6BEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E644", Offset = "0x57E644")]
		internal static void <SavePose>g__AddPoint|6_1(Vector3 pos, Quaternion rot, ref <>c__DisplayClass6_0 P_2)
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xBE6AD8", Offset = "0xBE6AD8", VA = "0xBE6AD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E654", Offset = "0x57E654")]
		internal static void <SetPose>g__AssignChildrenPose|7_0(Transform obj, PoseData pose, ref <>c__DisplayClass7_0 P_2)
		{
		}
	}
	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F350", Offset = "0x56F350")]
	public class GrabbablePose : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200038C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FC10", Offset = "0x56FC10")]
		private struct <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int i;

			[Token(Token = "0x4001B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PoseData pose;
		}

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public PoseData rightPose;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool rightPoseSet;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public PoseData leftPose;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public bool leftPoseSet;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Grabbable grabbable;

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xBDFCBC", Offset = "0xBDFCBC", VA = "0xBDFCBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xBDFE20", Offset = "0xBDFE20", VA = "0xBDFE20")]
		public void SetGrabPose(Hand hand)
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xBE00F8", Offset = "0xBE00F8", VA = "0xBE00F8")]
		public GrabbablePose()
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xBE0004", Offset = "0xBE0004", VA = "0xBE0004")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E664", Offset = "0x57E664")]
		internal static void <SetGrabPose>g__AssignChildrenPose|6_0(Transform obj, ref <>c__DisplayClass6_0 P_1)
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public delegate void HandGrabEvent(Hand hand, Grabbable grabbable);
	[Token(Token = "0x20002B3")]
	public enum HandType
	{
		[Token(Token = "0x40016D6")]
		both,
		[Token(Token = "0x40016D7")]
		right,
		[Token(Token = "0x40016D8")]
		left
	}
	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F3B4", Offset = "0x56F3B4")]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x200038D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FC20", Offset = "0x56FC20")]
		private sealed class <GrabObject>d__94 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand <>4__this;

			[Token(Token = "0x4001B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RaycastHit hit;

			[Token(Token = "0x4001B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Grabbable <tempHoldingObj>5__2;

			[Token(Token = "0x4001B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private GrabbablePointBase <grabBase>5__3;

			[Token(Token = "0x1700066E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D5D")]
				[Address(RVA = "0xBE5948", Offset = "0xBE5948", VA = "0xBE5948", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700066F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D5F")]
				[Address(RVA = "0xBE59B0", Offset = "0xBE59B0", VA = "0xBE59B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0xBE3C84", Offset = "0xBE3C84", VA = "0xBE3C84")]
			[DebuggerHidden]
			public <GrabObject>d__94(int <>1__state)
			{
			}

			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0xBE4CD8", Offset = "0xBE4CD8", VA = "0xBE4CD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D5C")]
			[Address(RVA = "0xBE4CDC", Offset = "0xBE4CDC", VA = "0xBE4CDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0xBE5950", Offset = "0xBE5950", VA = "0xBE5950", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200038E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FC30", Offset = "0x56FC30")]
		private sealed class <TimedResetLayer>d__99 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand <>4__this;

			[Token(Token = "0x4001B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string startLayer;

			[Token(Token = "0x4001B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float seconds;

			[Token(Token = "0x4001B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string resetLayer;

			[Token(Token = "0x17000670")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D63")]
				[Address(RVA = "0xBE5D70", Offset = "0xBE5D70", VA = "0xBE5D70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000671")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D65")]
				[Address(RVA = "0xBE5DD8", Offset = "0xBE5DD8", VA = "0xBE5DD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D60")]
			[Address(RVA = "0xBE4360", Offset = "0xBE4360", VA = "0xBE4360")]
			[DebuggerHidden]
			public <TimedResetLayer>d__99(int <>1__state)
			{
			}

			[Token(Token = "0x6001D61")]
			[Address(RVA = "0xBE5C6C", Offset = "0xBE5C6C", VA = "0xBE5C6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D62")]
			[Address(RVA = "0xBE5C70", Offset = "0xBE5C70", VA = "0xBE5C70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D64")]
			[Address(RVA = "0xBE5D78", Offset = "0xBE5D78", VA = "0xBE5D78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200038F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FC40", Offset = "0x56FC40")]
		private sealed class <ReturnOffset>d__100 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand <>4__this;

			[Token(Token = "0x4001B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float seconds;

			[Token(Token = "0x4001B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <time>5__2;

			[Token(Token = "0x4001B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Transform <offset>5__3;

			[Token(Token = "0x4001B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <startPos>5__4;

			[Token(Token = "0x4001B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Quaternion <StartRot>5__5;

			[Token(Token = "0x17000672")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D69")]
				[Address(RVA = "0xBE5BFC", Offset = "0xBE5BFC", VA = "0xBE5BFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000673")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D6B")]
				[Address(RVA = "0xBE5C64", Offset = "0xBE5C64", VA = "0xBE5C64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D66")]
			[Address(RVA = "0xBE440C", Offset = "0xBE440C", VA = "0xBE440C")]
			[DebuggerHidden]
			public <ReturnOffset>d__100(int <>1__state)
			{
			}

			[Token(Token = "0x6001D67")]
			[Address(RVA = "0xBE59B8", Offset = "0xBE59B8", VA = "0xBE59B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D68")]
			[Address(RVA = "0xBE59BC", Offset = "0xBE59BC", VA = "0xBE59BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0xBE5C04", Offset = "0xBE5C04", VA = "0xBE5C04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FC50", Offset = "0x56FC50")]
		private sealed class <<GrabObject>g__AutoAllign|94_0>d : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand <>4__this;

			[Token(Token = "0x4001B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <mass>5__2;

			[Token(Token = "0x17000674")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D6F")]
				[Address(RVA = "0xBE4C68", Offset = "0xBE4C68", VA = "0xBE4C68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000675")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D71")]
				[Address(RVA = "0xBE4CD0", Offset = "0xBE4CD0", VA = "0xBE4CD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0xBE4834", Offset = "0xBE4834", VA = "0xBE4834")]
			[DebuggerHidden]
			public <<GrabObject>g__AutoAllign|94_0>d(int <>1__state)
			{
			}

			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0xBE4860", Offset = "0xBE4860", VA = "0xBE4860", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D6E")]
			[Address(RVA = "0xBE4864", Offset = "0xBE4864", VA = "0xBE4864", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D70")]
			[Address(RVA = "0xBE4C70", Offset = "0xBE4C70", VA = "0xBE4C70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57A8C8", Offset = "0x57A8C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A8C8", Offset = "0x57A8C8")]
		public Transform follow;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 followPositionOffset;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A928", Offset = "0x57A928")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x57A928", Offset = "0x57A928")]
		public float maxVelocity;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A978", Offset = "0x57A978")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x57A978", Offset = "0x57A978")]
		public float followPositionStrength;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A9C8", Offset = "0x57A9C8")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x57A9C8", Offset = "0x57A9C8")]
		public float followRotationStrength;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AA18", Offset = "0x57AA18")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x57AA18", Offset = "0x57AA18")]
		public float maxFollowDistance;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57AA68", Offset = "0x57AA68")]
		public bool left;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AAA0", Offset = "0x57AAA0")]
		public Transform palmTransform;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AAD8", Offset = "0x57AAD8")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x57AAD8", Offset = "0x57AAD8")]
		public float lookAssistSpeed;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AB28", Offset = "0x57AB28")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x57AB28", Offset = "0x57AB28")]
		public float throwPower;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AB78", Offset = "0x57AB78")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x57AB78", Offset = "0x57AB78")]
		public float reachDistance;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57ABC8", Offset = "0x57ABC8")]
		public float grabSpreadOffset;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AC00", Offset = "0x57AC00")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x57AC00", Offset = "0x57AC00")]
		public float ignoreReleaseTime;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AC50", Offset = "0x57AC50")]
		public int fingerBendSteps;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57AC88", Offset = "0x57AC88")]
		public Finger[] fingers;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57ACC0", Offset = "0x57ACC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57ACC0", Offset = "0x57ACC0")]
		public bool disableIK;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AD20", Offset = "0x57AD20")]
		public float swayStrength;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AD58", Offset = "0x57AD58")]
		public float gripOffset;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float idealGrip;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float currGrip;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public bool freezePos;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		[HideInInspector]
		public bool freezeRot;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal GameObject lookingAtObj;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal Grabbable holdingObj;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform moveTo;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rotationOffset;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RaycastHit lastLookHit;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Rigidbody body;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private FixedJoint joint1;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FixedJoint joint2;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool squeezing;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float triggerPoint;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3[] handRays;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Transform grabPoint;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool grabbing;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		private bool grabLocked;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 preRenderPos;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion preRenderRot;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private GrabbablePose grabPose;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 palmOffset;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private bool teleporting;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int handLayers;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Vector3 startGrabPos;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Quaternion startGrabRot;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool grabbingFrame;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		public bool useLateUpdate;

		[Token(Token = "0x14000009")]
		public event HandGrabEvent OnBeforeGrabbed
		{
			[Token(Token = "0x6001AAF")]
			[Address(RVA = "0xBE02E8", Offset = "0xBE02E8", VA = "0xBE02E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E674", Offset = "0x57E674")]
			add
			{
			}
			[Token(Token = "0x6001AB0")]
			[Address(RVA = "0xBE0390", Offset = "0xBE0390", VA = "0xBE0390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E684", Offset = "0x57E684")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000A")]
		public event HandGrabEvent OnGrabbed
		{
			[Token(Token = "0x6001AB1")]
			[Address(RVA = "0xBE0438", Offset = "0xBE0438", VA = "0xBE0438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E694", Offset = "0x57E694")]
			add
			{
			}
			[Token(Token = "0x6001AB2")]
			[Address(RVA = "0xBE04E0", Offset = "0xBE04E0", VA = "0xBE04E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E6A4", Offset = "0x57E6A4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000B")]
		public event HandGrabEvent OnBeforeReleased
		{
			[Token(Token = "0x6001AB3")]
			[Address(RVA = "0xBE0588", Offset = "0xBE0588", VA = "0xBE0588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E6B4", Offset = "0x57E6B4")]
			add
			{
			}
			[Token(Token = "0x6001AB4")]
			[Address(RVA = "0xBE0630", Offset = "0xBE0630", VA = "0xBE0630")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E6C4", Offset = "0x57E6C4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public event HandGrabEvent OnReleased
		{
			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0xBE06D8", Offset = "0xBE06D8", VA = "0xBE06D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E6D4", Offset = "0x57E6D4")]
			add
			{
			}
			[Token(Token = "0x6001AB6")]
			[Address(RVA = "0xBE0780", Offset = "0xBE0780", VA = "0xBE0780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E6E4", Offset = "0x57E6E4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public event HandGrabEvent OnForcedRelease
		{
			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0xBE0828", Offset = "0xBE0828", VA = "0xBE0828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E6F4", Offset = "0x57E6F4")]
			add
			{
			}
			[Token(Token = "0x6001AB8")]
			[Address(RVA = "0xBE08D0", Offset = "0xBE08D0", VA = "0xBE08D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E704", Offset = "0x57E704")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000E")]
		public event HandGrabEvent OnSqueezed
		{
			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0xBD732C", Offset = "0xBD732C", VA = "0xBD732C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E714", Offset = "0x57E714")]
			add
			{
			}
			[Token(Token = "0x6001ABA")]
			[Address(RVA = "0xBE0978", Offset = "0xBE0978", VA = "0xBE0978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E724", Offset = "0x57E724")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public event HandGrabEvent OnUnsqueezed
		{
			[Token(Token = "0x6001ABB")]
			[Address(RVA = "0xBD73D4", Offset = "0xBD73D4", VA = "0xBD73D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E734", Offset = "0x57E734")]
			add
			{
			}
			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0xBE0A20", Offset = "0xBE0A20", VA = "0xBE0A20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E744", Offset = "0x57E744")]
			remove
			{
			}
		}

		[Token(Token = "0x14000010")]
		public event HandGrabEvent OnHighlight
		{
			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0xBE0AC8", Offset = "0xBE0AC8", VA = "0xBE0AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E754", Offset = "0x57E754")]
			add
			{
			}
			[Token(Token = "0x6001ABE")]
			[Address(RVA = "0xBE0B70", Offset = "0xBE0B70", VA = "0xBE0B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E764", Offset = "0x57E764")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event HandGrabEvent OnStopHighlight
		{
			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0xBE0C18", Offset = "0xBE0C18", VA = "0xBE0C18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E774", Offset = "0x57E774")]
			add
			{
			}
			[Token(Token = "0x6001AC0")]
			[Address(RVA = "0xBE0CC0", Offset = "0xBE0CC0", VA = "0xBE0CC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E784", Offset = "0x57E784")]
			remove
			{
			}
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xBE0D68", Offset = "0xBE0D68", VA = "0xBE0D68")]
		public void Start()
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xBE0F08", Offset = "0xBE0F08", VA = "0xBE0F08")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xBE1290", Offset = "0xBE1290", VA = "0xBE1290")]
		public void Update()
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xBE1DFC", Offset = "0xBE1DFC", VA = "0xBE1DFC")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xBE26C8", Offset = "0xBE26C8", VA = "0xBE26C8")]
		public void OnPreRender()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xBE28C0", Offset = "0xBE28C0", VA = "0xBE28C0")]
		public void OnPostRender()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xBE1F70", Offset = "0xBE1F70", VA = "0xBE1F70")]
		private void MoveTo()
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xBE22A0", Offset = "0xBE22A0", VA = "0xBE22A0")]
		private void TorqueTo()
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xBE29A0", Offset = "0xBE29A0", VA = "0xBE29A0")]
		private void SetTransformToFollow()
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xBE2B88", Offset = "0xBE2B88", VA = "0xBE2B88")]
		public void SetGrip(float grip)
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xBE2B90", Offset = "0xBE2B90", VA = "0xBE2B90")]
		public void Grab()
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xBE3424", Offset = "0xBE3424", VA = "0xBE3424")]
		public void Release()
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xBDE9A4", Offset = "0xBDE9A4", VA = "0xBDE9A4")]
		public void ForceReleaseGrab()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xBE3568", Offset = "0xBE3568", VA = "0xBE3568")]
		public void BreakGrabConnection()
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xBE37B8", Offset = "0xBE37B8", VA = "0xBE37B8")]
		public void Squeeze()
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xBE3810", Offset = "0xBE3810", VA = "0xBE3810")]
		public void Unsqueeze()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xBE3864", Offset = "0xBE3864", VA = "0xBE3864")]
		private void OnJointBreak(float breakForce)
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xBDE614", Offset = "0xBDE614", VA = "0xBDE614")]
		internal Vector3 ThrowVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xBE1D68", Offset = "0xBE1D68", VA = "0xBE1D68")]
		private void DeterminPose()
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xBE183C", Offset = "0xBE183C", VA = "0xBE183C")]
		private void LookAssist()
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xBE3B30", Offset = "0xBE3B30", VA = "0xBE3B30")]
		private bool GetGrabbable(GameObject obj, out Grabbable grabbable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xBE338C", Offset = "0xBE338C", VA = "0xBE338C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57E794", Offset = "0x57E794")]
		private IEnumerator GrabObject(RaycastHit hit)
		{
			return null;
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xBE3CB0", Offset = "0xBE3CB0", VA = "0xBE3CB0")]
		public void SetHeldPose(PoseData pose, Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xBE428C", Offset = "0xBE428C", VA = "0xBE428C")]
		public PoseData GetHeldPose()
		{
			return default(PoseData);
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xBE4334", Offset = "0xBE4334", VA = "0xBE4334")]
		public PoseData GetHeldPose(out Grabbable held)
		{
			return default(PoseData);
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xBE4358", Offset = "0xBE4358", VA = "0xBE4358")]
		public Grabbable GetHeld()
		{
			return null;
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xBE3724", Offset = "0xBE3724", VA = "0xBE3724")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57E7F8", Offset = "0x57E7F8")]
		private IEnumerator TimedResetLayer(float seconds, string startLayer, string resetLayer)
		{
			return null;
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xBE438C", Offset = "0xBE438C", VA = "0xBE438C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57E85C", Offset = "0x57E85C")]
		private IEnumerator ReturnOffset(float seconds)
		{
			return null;
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xBE2E9C", Offset = "0xBE2E9C", VA = "0xBE2E9C")]
		public Vector3 HandClosestHit(out RaycastHit closestHit, float dist, int layerMask)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xBE3980", Offset = "0xBE3980", VA = "0xBE3980")]
		private void UpdateFingers()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xBE4438", Offset = "0xBE4438", VA = "0xBE4438")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x57E8C0", Offset = "0x57E8C0")]
		public void RelaxHand()
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xBE44B0", Offset = "0xBE44B0", VA = "0xBE44B0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x57E8F8", Offset = "0x57E8F8")]
		public void OpenHand()
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xBE451C", Offset = "0xBE451C", VA = "0xBE451C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x57E930", Offset = "0x57E930")]
		public void CloseHand()
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xBE4594", Offset = "0xBE4594", VA = "0xBE4594")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x57E968", Offset = "0x57E968")]
		public void ProceduralFingerBend()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xBE45A0", Offset = "0xBE45A0", VA = "0xBE45A0")]
		public void ProceduralFingerBend(int layermask)
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xBE4620", Offset = "0xBE4620", VA = "0xBE4620")]
		public void ProceduralFingerBend(RaycastHit hit)
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xBE46C8", Offset = "0xBE46C8", VA = "0xBE46C8")]
		public static void SetLayerRecursive(Transform obj, int fromLayer, int toLayer)
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xBE1200", Offset = "0xBE1200", VA = "0xBE1200")]
		public static void SetLayerRecursive(Transform obj, int newLayer)
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xBE4780", Offset = "0xBE4780", VA = "0xBE4780")]
		public Hand()
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xBE47C4", Offset = "0xBE47C4", VA = "0xBE47C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57E9A0", Offset = "0x57E9A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E9A0", Offset = "0x57E9A0")]
		private IEnumerator <GrabObject>g__AutoAllign|94_0()
		{
			return null;
		}
	}
	[Token(Token = "0x20002B5")]
	public class HandStabilizer : MonoBehaviour
	{
		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand[] hands;

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xBE5E1C", Offset = "0xBE5E1C", VA = "0xBE5E1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xBE5E90", Offset = "0xBE5E90", VA = "0xBE5E90")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xBE5EF8", Offset = "0xBE5EF8", VA = "0xBE5EF8")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xBE5F60", Offset = "0xBE5F60", VA = "0xBE5F60")]
		public HandStabilizer()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F418", Offset = "0x56F418")]
	public class PlacePoint : MonoBehaviour
	{
		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57AE40", Offset = "0x57AE40")]
		public float placeRadius;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AE78", Offset = "0x57AE78")]
		public Vector3 offset;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AEB0", Offset = "0x57AEB0")]
		public string[] placeNames;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AEE8", Offset = "0x57AEE8")]
		public bool makeKinematic;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AF20", Offset = "0x57AF20")]
		public Grabbable startPlaced;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57AF58", Offset = "0x57AF58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AF58", Offset = "0x57AF58")]
		public Rigidbody jointLink;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int jointBreakForce;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int jointBreakTorque;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57AFB8", Offset = "0x57AFB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AFB8", Offset = "0x57AFB8")]
		public bool callGrabbableHighlight;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent OnPlace;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent OnRemove;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent OnHighlight;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent OnStopHighlight;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FixedJoint joint;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Grabbable placedObject;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool occupied;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SphereCollider col;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform originParent;

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xBE5F68", Offset = "0xBE5F68", VA = "0xBE5F68")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xBE6094", Offset = "0xBE6094", VA = "0xBE6094", Slot = "4")]
		public virtual bool CanPlace(Transform placeObj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xBE6148", Offset = "0xBE6148", VA = "0xBE6148", Slot = "5")]
		public virtual void Place(Grabbable placeObj)
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xBE63B0", Offset = "0xBE63B0", VA = "0xBE63B0", Slot = "6")]
		public virtual void Remove(Grabbable placeObj)
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xBE6430", Offset = "0xBE6430", VA = "0xBE6430")]
		private void OnJointBreak(float breakForce)
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xBE6528", Offset = "0xBE6528", VA = "0xBE6528")]
		public Grabbable PlacedObject()
		{
			return null;
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xBDEF58", Offset = "0xBDEF58", VA = "0xBDEF58")]
		internal float Distance(Transform from)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xBDF06C", Offset = "0xBDF06C", VA = "0xBDF06C")]
		internal void Highlight()
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xBDE914", Offset = "0xBDE914", VA = "0xBDE914")]
		internal void StopHighlight()
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xBE6530", Offset = "0xBE6530", VA = "0xBE6530")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xBE6644", Offset = "0xBE6644", VA = "0xBE6644")]
		public PlacePoint()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class Teleporter : MonoBehaviour
	{
		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57B018", Offset = "0x57B018")]
		public GameObject teleportObject;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57B050", Offset = "0x57B050")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B050", Offset = "0x57B050")]
		public Transform aimer;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B0B0", Offset = "0x57B0B0")]
		public LayerMask layer;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B0E8", Offset = "0x57B0E8")]
		public float maxSurfaceAngle;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x57B120", Offset = "0x57B120")]
		public float distanceMultiplyer;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x57B134", Offset = "0x57B134")]
		public float curveStrength;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B148", Offset = "0x57B148")]
		public LineRenderer line;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B180", Offset = "0x57B180")]
		public int lineSegments;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57B1B8", Offset = "0x57B1B8")]
		public GameObject indicator;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] lineArr;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool aiming;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool hitting;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private RaycastHit aimHit;

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x843048", Offset = "0x843048", VA = "0x843048")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x8430A0", Offset = "0x8430A0", VA = "0x8430A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x8430EC", Offset = "0x8430EC", VA = "0x8430EC")]
		private void CalculateTeleport()
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x843590", Offset = "0x843590", VA = "0x843590")]
		private void DrawIndicator()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x8436C4", Offset = "0x8436C4", VA = "0x8436C4")]
		public void StartTeleport()
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x8436D0", Offset = "0x8436D0", VA = "0x8436D0")]
		public void CancelTeleport()
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x843708", Offset = "0x843708", VA = "0x843708")]
		public void Teleport()
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x843778", Offset = "0x843778", VA = "0x843778")]
		public Teleporter()
		{
		}
	}
}
namespace Autohand.Examples
{
	[Token(Token = "0x20002B8")]
	public class ThumbsUp : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000391")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x56FC60", Offset = "0x56FC60")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static HandGrabEvent <>9__1_0;

			[Token(Token = "0x6001D73")]
			[Address(RVA = "0xBDB350", Offset = "0xBDB350", VA = "0xBDB350")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D74")]
			[Address(RVA = "0xBDB358", Offset = "0xBDB358", VA = "0xBDB358")]
			internal void <Start>b__1_0(Hand hand, Grabbable holding)
			{
			}
		}

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float gripOffset;

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xBDB0F8", Offset = "0xBDB0F8", VA = "0xBDB0F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xBDB260", Offset = "0xBDB260", VA = "0xBDB260")]
		public ThumbsUp()
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xBDB268", Offset = "0xBDB268", VA = "0xBDB268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EA14", Offset = "0x57EA14")]
		private void <Start>b__1_1(Hand hand, Grabbable holding)
		{
		}
	}
	[Token(Token = "0x20002B9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F47C", Offset = "0x56F47C")]
	public class PhysicsButton : MonoBehaviour
	{
		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpringJoint spring;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 startPos;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool pressed;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float threshHold;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B1F0", Offset = "0x57B1F0")]
		public UnityEvent OnPressed;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnUnpressed;

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xBDAC34", Offset = "0xBDAC34", VA = "0xBDAC34")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xBDACB0", Offset = "0xBDACB0", VA = "0xBDACB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xBDAD7C", Offset = "0xBDAD7C", VA = "0xBDAD7C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xBDAE6C", Offset = "0xBDAE6C", VA = "0xBDAE6C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xBDAE44", Offset = "0xBDAE44", VA = "0xBDAE44")]
		public void Pressed()
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xBDAE58", Offset = "0xBDAE58", VA = "0xBDAE58")]
		public void Unpressed()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xBDAF3C", Offset = "0xBDAF3C", VA = "0xBDAF3C")]
		public PhysicsButton()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F4E0", Offset = "0x56F4E0")]
	public class PhysicsLever : MonoBehaviour
	{
		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HingeJoint joint;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float buffer;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent SwitchOn;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent SwitchOff;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool on;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float leverPoint;

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xBDAF50", Offset = "0xBDAF50", VA = "0xBDAF50")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xBDAFA8", Offset = "0xBDAFA8", VA = "0xBDAFA8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xBDB0BC", Offset = "0xBDB0BC", VA = "0xBDB0BC", Slot = "4")]
		public virtual void OnSwitchOn()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xBDB0D0", Offset = "0xBDB0D0", VA = "0xBDB0D0", Slot = "5")]
		public virtual void OnSwitchOff()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xBDB0E4", Offset = "0xBDB0E4", VA = "0xBDB0E4")]
		public PhysicsLever()
		{
		}
	}
}
namespace Autohand.Demo
{
	[Token(Token = "0x20002BB")]
	public class HandControllerLink : MonoBehaviour
	{
		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand hand;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VR_Controller controller;

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xBD75B8", Offset = "0xBD75B8", VA = "0xBD75B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xBD7968", Offset = "0xBD7968", VA = "0xBD7968")]
		public void ResetConnections()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xBD7A88", Offset = "0xBD7A88", VA = "0xBD7A88")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xBD7B1C", Offset = "0xBD7B1C", VA = "0xBD7B1C")]
		public HandControllerLink()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class TeleporterLink : MonoBehaviour
	{
		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VR_Controller controller;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Teleporter teleport;

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xBD949C", Offset = "0xBD949C", VA = "0xBD949C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xBD969C", Offset = "0xBD969C", VA = "0xBD969C")]
		private void AimTeleport(Vector2 clickPos)
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xBD96B8", Offset = "0xBD96B8", VA = "0xBD96B8")]
		private void TryTeleport(Vector2 clickPos)
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xBD96D4", Offset = "0xBD96D4", VA = "0xBD96D4")]
		public TeleporterLink()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public enum ControllerHand
	{
		[Token(Token = "0x4001742")]
		right,
		[Token(Token = "0x4001743")]
		left
	}
	[Token(Token = "0x20002BE")]
	public delegate void ClickedEventHandler();
	[Token(Token = "0x20002BF")]
	public delegate void AxisEventHandler(Vector2 pos);
	[Token(Token = "0x20002C0")]
	public class VR_Controller : MonoBehaviour
	{
		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool triggerPressed;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[HideInInspector]
		public bool triggerTouched;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[HideInInspector]
		public bool menuPressed;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private KeyCode menuKeyCode;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool padPressed;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private KeyCode padPressedKeyCode;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool padTouched;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private KeyCode padTouchedKeyCode;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public bool gripped;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private KeyCode gripKeyCode;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B260", Offset = "0x57B260")]
		public ControllerHand controllerHand;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _controllerHand;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 _lastFramePosition;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 _lastLastFramePosition;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion _lastFrameRotation;

		[Token(Token = "0x14000012")]
		public event ClickedEventHandler TriggerClicked
		{
			[Token(Token = "0x6001B1F")]
			[Address(RVA = "0xBD76D8", Offset = "0xBD76D8", VA = "0xBD76D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EA24", Offset = "0x57EA24")]
			add
			{
			}
			[Token(Token = "0x6001B20")]
			[Address(RVA = "0xBD96DC", Offset = "0xBD96DC", VA = "0xBD96DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EA34", Offset = "0x57EA34")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event ClickedEventHandler TriggerUnclicked
		{
			[Token(Token = "0x6001B21")]
			[Address(RVA = "0xBD777C", Offset = "0xBD777C", VA = "0xBD777C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EA44", Offset = "0x57EA44")]
			add
			{
			}
			[Token(Token = "0x6001B22")]
			[Address(RVA = "0xBD9780", Offset = "0xBD9780", VA = "0xBD9780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EA54", Offset = "0x57EA54")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event ClickedEventHandler TriggerTouched
		{
			[Token(Token = "0x6001B23")]
			[Address(RVA = "0xBD9824", Offset = "0xBD9824", VA = "0xBD9824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EA64", Offset = "0x57EA64")]
			add
			{
			}
			[Token(Token = "0x6001B24")]
			[Address(RVA = "0xBD98C8", Offset = "0xBD98C8", VA = "0xBD98C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EA74", Offset = "0x57EA74")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event ClickedEventHandler TriggerUntouched
		{
			[Token(Token = "0x6001B25")]
			[Address(RVA = "0xBD996C", Offset = "0xBD996C", VA = "0xBD996C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EA84", Offset = "0x57EA84")]
			add
			{
			}
			[Token(Token = "0x6001B26")]
			[Address(RVA = "0xBD9A10", Offset = "0xBD9A10", VA = "0xBD9A10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EA94", Offset = "0x57EA94")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event AxisEventHandler PadClicked
		{
			[Token(Token = "0x6001B27")]
			[Address(RVA = "0xBD9554", Offset = "0xBD9554", VA = "0xBD9554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EAA4", Offset = "0x57EAA4")]
			add
			{
			}
			[Token(Token = "0x6001B28")]
			[Address(RVA = "0xBD9AB4", Offset = "0xBD9AB4", VA = "0xBD9AB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EAB4", Offset = "0x57EAB4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event AxisEventHandler PadUnclicked
		{
			[Token(Token = "0x6001B29")]
			[Address(RVA = "0xBD95F8", Offset = "0xBD95F8", VA = "0xBD95F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EAC4", Offset = "0x57EAC4")]
			add
			{
			}
			[Token(Token = "0x6001B2A")]
			[Address(RVA = "0xBD9B58", Offset = "0xBD9B58", VA = "0xBD9B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EAD4", Offset = "0x57EAD4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event AxisEventHandler PadTouched
		{
			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0xBD9BFC", Offset = "0xBD9BFC", VA = "0xBD9BFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EAE4", Offset = "0x57EAE4")]
			add
			{
			}
			[Token(Token = "0x6001B2C")]
			[Address(RVA = "0xBD9CA0", Offset = "0xBD9CA0", VA = "0xBD9CA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EAF4", Offset = "0x57EAF4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event AxisEventHandler PadTouchedFrameUpdate
		{
			[Token(Token = "0x6001B2D")]
			[Address(RVA = "0xBD9D44", Offset = "0xBD9D44", VA = "0xBD9D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB04", Offset = "0x57EB04")]
			add
			{
			}
			[Token(Token = "0x6001B2E")]
			[Address(RVA = "0xBD9DE8", Offset = "0xBD9DE8", VA = "0xBD9DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB14", Offset = "0x57EB14")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event AxisEventHandler PadUntouched
		{
			[Token(Token = "0x6001B2F")]
			[Address(RVA = "0xBD9E8C", Offset = "0xBD9E8C", VA = "0xBD9E8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB24", Offset = "0x57EB24")]
			add
			{
			}
			[Token(Token = "0x6001B30")]
			[Address(RVA = "0xBD9F30", Offset = "0xBD9F30", VA = "0xBD9F30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB34", Offset = "0x57EB34")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event ClickedEventHandler Gripped
		{
			[Token(Token = "0x6001B31")]
			[Address(RVA = "0xBD7820", Offset = "0xBD7820", VA = "0xBD7820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB44", Offset = "0x57EB44")]
			add
			{
			}
			[Token(Token = "0x6001B32")]
			[Address(RVA = "0xBD9FD4", Offset = "0xBD9FD4", VA = "0xBD9FD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB54", Offset = "0x57EB54")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event ClickedEventHandler Ungripped
		{
			[Token(Token = "0x6001B33")]
			[Address(RVA = "0xBD78C4", Offset = "0xBD78C4", VA = "0xBD78C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB64", Offset = "0x57EB64")]
			add
			{
			}
			[Token(Token = "0x6001B34")]
			[Address(RVA = "0xBDA078", Offset = "0xBDA078", VA = "0xBDA078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB74", Offset = "0x57EB74")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event ClickedEventHandler MenuButtonClicked
		{
			[Token(Token = "0x6001B35")]
			[Address(RVA = "0xBDA11C", Offset = "0xBDA11C", VA = "0xBDA11C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB84", Offset = "0x57EB84")]
			add
			{
			}
			[Token(Token = "0x6001B36")]
			[Address(RVA = "0xBDA1C0", Offset = "0xBDA1C0", VA = "0xBDA1C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB94", Offset = "0x57EB94")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event ClickedEventHandler MenuButtonUnclicked
		{
			[Token(Token = "0x6001B37")]
			[Address(RVA = "0xBDA264", Offset = "0xBDA264", VA = "0xBDA264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EBA4", Offset = "0x57EBA4")]
			add
			{
			}
			[Token(Token = "0x6001B38")]
			[Address(RVA = "0xBDA308", Offset = "0xBDA308", VA = "0xBDA308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EBB4", Offset = "0x57EBB4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xBDA3AC", Offset = "0xBDA3AC", VA = "0xBDA3AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xBDA4A0", Offset = "0xBDA4A0", VA = "0xBDA4A0")]
		public void Update()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xBD7AC0", Offset = "0xBD7AC0", VA = "0xBD7AC0")]
		public float GetTriggerPressValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xBDA828", Offset = "0xBDA828", VA = "0xBDA828")]
		public Vector2 GetPadAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xBDA8D0", Offset = "0xBDA8D0", VA = "0xBDA8D0")]
		public Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xBDA9E4", Offset = "0xBDA9E4", VA = "0xBDA9E4")]
		public Vector3 GetTorque()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xBDAADC", Offset = "0xBDAADC", VA = "0xBDAADC", Slot = "4")]
		public virtual void OnTriggerClicked()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xBDAAEC", Offset = "0xBDAAEC", VA = "0xBDAAEC", Slot = "5")]
		public virtual void OnTriggerUnclicked()
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xBDAAFC", Offset = "0xBDAAFC", VA = "0xBDAAFC", Slot = "6")]
		public virtual void OnTriggerTouched()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xBDAB0C", Offset = "0xBDAB0C", VA = "0xBDAB0C", Slot = "7")]
		public virtual void OnTriggerUntouched()
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xBDAB1C", Offset = "0xBDAB1C", VA = "0xBDAB1C", Slot = "8")]
		public virtual void OnMenuClicked()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xBDAB2C", Offset = "0xBDAB2C", VA = "0xBDAB2C", Slot = "9")]
		public virtual void OnMenuUnclicked()
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xBDAB3C", Offset = "0xBDAB3C", VA = "0xBDAB3C", Slot = "10")]
		public virtual void OnPadClicked()
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xBDAB70", Offset = "0xBDAB70", VA = "0xBDAB70", Slot = "11")]
		public virtual void OnPadUnclicked()
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xBDABA4", Offset = "0xBDABA4", VA = "0xBDABA4", Slot = "12")]
		public virtual void OnPadTouched()
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xBDABD8", Offset = "0xBDABD8", VA = "0xBDABD8", Slot = "13")]
		public virtual void OnPadUntouched()
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xBDAC0C", Offset = "0xBDAC0C", VA = "0xBDAC0C", Slot = "14")]
		public virtual void OnGripped()
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xBDAC1C", Offset = "0xBDAC1C", VA = "0xBDAC1C", Slot = "15")]
		public virtual void OnUngripped()
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xBDAC2C", Offset = "0xBDAC2C", VA = "0xBDAC2C")]
		public VR_Controller()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class ButtonDemoRespawn : MonoBehaviour
	{
		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] respawns;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3[] startPos;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion[] startRot;

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xBD6144", Offset = "0xBD6144", VA = "0xBD6144")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xBD62B8", Offset = "0xBD62B8", VA = "0xBD62B8")]
		public void Respawn()
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xBD6530", Offset = "0xBD6530", VA = "0xBD6530")]
		public void ReloadScene()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xBD65C0", Offset = "0xBD65C0", VA = "0xBD65C0")]
		public ButtonDemoRespawn()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class CubeBreak : MonoBehaviour
	{
		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float force;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3[] offsets;

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xBD681C", Offset = "0xBD681C", VA = "0xBD681C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x57EBC4", Offset = "0x57EBC4")]
		public void Break()
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xBD6DD0", Offset = "0xBD6DD0", VA = "0xBD6DD0")]
		public CubeBreak()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class ExplosionSource : MonoBehaviour
	{
		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float radius;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float force;

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xBD7038", Offset = "0xBD7038", VA = "0xBD7038")]
		public void Explode(bool destroy)
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xBD7200", Offset = "0xBD7200", VA = "0xBD7200")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xBD7250", Offset = "0xBD7250", VA = "0xBD7250")]
		public ExplosionSource()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class FingerBend : MonoBehaviour
	{
		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand hand;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Finger thumb;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Finger index;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Finger middle;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Finger ring;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Finger pinky;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57B368", Offset = "0x57B368")]
		public float thumbBend;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57B380", Offset = "0x57B380")]
		public float indexBend;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57B398", Offset = "0x57B398")]
		public float middleBend;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57B3B0", Offset = "0x57B3B0")]
		public float ringBend;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57B3C8", Offset = "0x57B3C8")]
		public float pinkyBend;

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xBD7264", Offset = "0xBD7264", VA = "0xBD7264")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xBD747C", Offset = "0xBD747C", VA = "0xBD747C")]
		private void OnSqueezed(Hand hand, Grabbable grab)
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xBD750C", Offset = "0xBD750C", VA = "0xBD750C")]
		private void OnUnsqueezed(Hand hand, Grabbable grab)
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xBD7480", Offset = "0xBD7480", VA = "0xBD7480")]
		public void Bend()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xBD7510", Offset = "0xBD7510", VA = "0xBD7510")]
		public void Unbend()
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xBD759C", Offset = "0xBD759C", VA = "0xBD759C")]
		public FingerBend()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class MoverLever : PhysicsLever
	{
		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform move;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 axis;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float speed;

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xBD7B24", Offset = "0xBD7B24", VA = "0xBD7B24")]
		private new void Update()
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xBD7DD0", Offset = "0xBD7DD0", VA = "0xBD7DD0")]
		public MoverLever()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class PhysicsMover : MonoBehaviour
	{
		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand mover;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xBD819C", Offset = "0xBD819C", VA = "0xBD819C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xBD81A0", Offset = "0xBD81A0", VA = "0xBD81A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xBD81A4", Offset = "0xBD81A4", VA = "0xBD81A4")]
		public PhysicsMover()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class Pistol : MonoBehaviour
	{
		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform barrelTip;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody slide;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float hitPower;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float recoilPower;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float range;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask layer;

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xBD81B4", Offset = "0xBD81B4", VA = "0xBD81B4")]
		public void Shoot()
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xBD8D40", Offset = "0xBD8D40", VA = "0xBD8D40")]
		public void GrabSlide()
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xBD8DA8", Offset = "0xBD8DA8", VA = "0xBD8DA8")]
		public void ReleaseSlide()
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xBD8E10", Offset = "0xBD8E10", VA = "0xBD8E10")]
		public Pistol()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class ScaleHighlight : MonoBehaviour
	{
		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 highlighScale;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 normalScale;

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xBD8E28", Offset = "0xBD8E28", VA = "0xBD8E28")]
		public void Highlight()
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xBD8E60", Offset = "0xBD8E60", VA = "0xBD8E60")]
		public void HighlightStop()
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xBD8E98", Offset = "0xBD8E98", VA = "0xBD8E98")]
		public ScaleHighlight()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class Smash : MonoBehaviour
	{
		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float smashForce;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject effect;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject seedsToSpawn;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int seedNumberSpawn;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool active;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource audioSource;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip audioClip;

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xBD8EA0", Offset = "0xBD8EA0", VA = "0xBD8EA0")]
		public void DelayedSmash(float delay)
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xBD86C4", Offset = "0xBD86C4", VA = "0xBD86C4")]
		public void DoSmash()
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xBD925C", Offset = "0xBD925C", VA = "0xBD925C")]
		public Smash()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F544", Offset = "0x56F544")]
	public class Smasher : MonoBehaviour
	{
		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody rb;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float forceMulti;

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xBD926C", Offset = "0xBD926C", VA = "0xBD926C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xBD92C4", Offset = "0xBD92C4", VA = "0xBD92C4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xBD93C8", Offset = "0xBD93C8", VA = "0xBD93C8")]
		public Smasher()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class Spinner : MonoBehaviour
	{
		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rotationSpeed;

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xBD93D8", Offset = "0xBD93D8", VA = "0xBD93D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xBD9494", Offset = "0xBD9494", VA = "0xBD9494")]
		public Spinner()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F5A8", Offset = "0x56F5A8")]
	public class PhysicsButton : MonoBehaviour
	{
		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpringJoint spring;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 startPos;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool pressed;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float threshHold;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B3E0", Offset = "0x57B3E0")]
		public UnityEvent OnPressed;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnUnpressed;

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xBD7E00", Offset = "0xBD7E00", VA = "0xBD7E00")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xBD7E7C", Offset = "0xBD7E7C", VA = "0xBD7E7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xBD7F48", Offset = "0xBD7F48", VA = "0xBD7F48")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xBD8038", Offset = "0xBD8038", VA = "0xBD8038")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xBD8010", Offset = "0xBD8010", VA = "0xBD8010")]
		public void Pressed()
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xBD8024", Offset = "0xBD8024", VA = "0xBD8024")]
		public void Unpressed()
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xBD8108", Offset = "0xBD8108", VA = "0xBD8108")]
		public PhysicsButton()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F60C", Offset = "0x56F60C")]
	public class PhysicsLever : MonoBehaviour
	{
		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HingeJoint joint;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float buffer;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent SwitchOn;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent SwitchOff;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool on;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float leverPoint;

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xBD811C", Offset = "0xBD811C", VA = "0xBD811C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xBD7CBC", Offset = "0xBD7CBC", VA = "0xBD7CBC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xBD8174", Offset = "0xBD8174", VA = "0xBD8174", Slot = "4")]
		public virtual void OnSwitchOn()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xBD8188", Offset = "0xBD8188", VA = "0xBD8188", Slot = "5")]
		public virtual void OnSwitchOff()
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xBD7DEC", Offset = "0xBD7DEC", VA = "0xBD7DEC")]
		public PhysicsLever()
		{
		}
	}
}
