using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Xml;
using CurvedUI;
using DazzleSystem.Common;
using DazzleSystem.Common.Automatic;
using Il2CppDummyDll;
using Nikakudori.Common;
using Oculus.Spatializer.Propagation;
using TMPro;
using Tween;
using UMT;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.UI;
using UnityEngine.Video;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public static class Packer
{
	[Token(Token = "0x6000001")]
	[Address(RVA = "0xA8C0EC", Offset = "0xA8C0EC", VA = "0xA8C0EC")]
	public static float ToFloat(float x, float y, float z, float w)
	{
		return default(float);
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xA8C1D0", Offset = "0xA8C1D0", VA = "0xA8C1D0")]
	public static float ToFloat(Vector4 factor)
	{
		return default(float);
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xA8C298", Offset = "0xA8C298", VA = "0xA8C298")]
	public static float ToFloat(float x, float y, float z)
	{
		return default(float);
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xA8C354", Offset = "0xA8C354", VA = "0xA8C354")]
	public static float ToFloat(float x, float y)
	{
		return default(float);
	}
}
[Token(Token = "0x2000003")]
public class CUI_CameraRotationOnButtonHeld : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float Sensitivity;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 oldMousePos;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool move;

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xA164B4", Offset = "0xA164B4", VA = "0xA164B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xA164E0", Offset = "0xA164E0", VA = "0xA164E0")]
	public CUI_CameraRotationOnButtonHeld()
	{
	}
}
[Token(Token = "0x2000004")]
public class CUI_MoveAlong : MonoBehaviour
{
	[Token(Token = "0x6000007")]
	[Address(RVA = "0xA164F8", Offset = "0xA164F8", VA = "0xA164F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xA164FC", Offset = "0xA164FC", VA = "0xA164FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xA16750", Offset = "0xA16750", VA = "0xA16750")]
	public CUI_MoveAlong()
	{
	}
}
[Token(Token = "0x2000005")]
public class CUI_MoveHeartbeat : MonoBehaviour
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool wrapAroundParent;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform rectie;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform parentRectie;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xA16758", Offset = "0xA16758", VA = "0xA16758")]
	private void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xA16810", Offset = "0xA16810", VA = "0xA16810")]
	private void Update()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xA1695C", Offset = "0xA1695C", VA = "0xA1695C")]
	public CUI_MoveHeartbeat()
	{
	}
}
[Token(Token = "0x2000006")]
public class CUI_ShowParentCoordinates : MonoBehaviour
{
	[Token(Token = "0x600000D")]
	[Address(RVA = "0xA1696C", Offset = "0xA1696C", VA = "0xA1696C")]
	private void Start()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xA16A38", Offset = "0xA16A38", VA = "0xA16A38")]
	private void Update()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xA16A3C", Offset = "0xA16A3C", VA = "0xA16A3C")]
	public CUI_ShowParentCoordinates()
	{
	}
}
[Token(Token = "0x2000007")]
public class CUI_rotation_anim : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Rotation;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xA16A44", Offset = "0xA16A44", VA = "0xA16A44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xA16A48", Offset = "0xA16A48", VA = "0xA16A48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xA16C30", Offset = "0xA16C30", VA = "0xA16C30")]
	public CUI_rotation_anim()
	{
	}
}
[Token(Token = "0x2000008")]
public class CUI_touchpad : MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform container;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform dot;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xA16C38", Offset = "0xA16C38", VA = "0xA16C38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xA16CAC", Offset = "0xA16CAC", VA = "0xA16CAC")]
	private void MoveDotOnTouchpadAxisChanged(object o, ViveInputArgs args)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xA16D88", Offset = "0xA16D88", VA = "0xA16D88")]
	public CUI_touchpad()
	{
	}
}
[Token(Token = "0x2000009")]
[ExecuteInEditMode]
public class CurvedUIInputModule : StandaloneInputModule
{
	[Token(Token = "0x20001D2")]
	public enum CUIControlMethod
	{
		[Token(Token = "0x4000A6D")]
		MOUSE = 0,
		[Token(Token = "0x4000A6E")]
		GAZE = 1,
		[Token(Token = "0x4000A6F")]
		WORLD_MOUSE = 2,
		[Token(Token = "0x4000A70")]
		CUSTOM_RAY = 3,
		[Token(Token = "0x4000A71")]
		STEAMVR_LEGACY = 4,
		[Token(Token = "0x4000A72")]
		OCULUSVR = 5,
		[Token(Token = "0x4000A73")]
		GOOGLEVR = 7,
		[Token(Token = "0x4000A74")]
		STEAMVR_2 = 8,
		[Token(Token = "0x4000A75")]
		UNITY_XR = 9
	}

	[Token(Token = "0x20001D3")]
	public enum Hand
	{
		[Token(Token = "0x4000A77")]
		Both,
		[Token(Token = "0x4000A78")]
		Right,
		[Token(Token = "0x4000A79")]
		Left
	}

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private CUIControlMethod controlMethod;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string submitButtonName;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Camera mainEventCamera;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private LayerMask raycastLayerMask;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private bool gazeUseTimedClick;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float gazeClickTimer;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private float gazeClickTimerDelay;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Image gazeTimedClickProgressImage;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private float worldSpaceMouseSensitivity;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private Hand usedHand;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5C2F38", Offset = "0x5C2F38")]
	[SerializeField]
	private Transform pointerTransformOverride;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool disableOtherInputModulesOnStart;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CurvedUIInputModule instance;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject currentDragging;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject currentPointedAt;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject m_rightController;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject m_leftController;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float gazeTimerProgress;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Ray customControllerRay;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float dragThreshold;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool pressedDown;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	private bool pressedLastFrame;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 lastMouseOnScreenPos;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector2 worldSpaceMouseInCanvasSpace;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector2 lastWorldSpaceMouseOnCanvas;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector2 worldSpaceMouseOnCanvasDelta;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private Transform TouchControllerTransform;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private OVRInput.Button InteractionButton;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private OVRCameraRig oculusCameraRig;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private OVRInput.Controller activeCont;

	[Token(Token = "0x17000001")]
	public static CurvedUIInputModule Instance
	{
		[Token(Token = "0x6000023")]
		[Address(RVA = "0x88C63C", Offset = "0x88C63C", VA = "0x88C63C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000024")]
		[Address(RVA = "0x88C738", Offset = "0x88C738", VA = "0x88C738")]
		private set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public static CUIControlMethod ControlMethod
	{
		[Token(Token = "0x6000025")]
		[Address(RVA = "0x88BA04", Offset = "0x88BA04", VA = "0x88BA04")]
		get
		{
			return default(CUIControlMethod);
		}
		[Token(Token = "0x6000026")]
		[Address(RVA = "0x88C7A4", Offset = "0x88C7A4", VA = "0x88C7A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public LayerMask RaycastLayerMask
	{
		[Token(Token = "0x6000027")]
		[Address(RVA = "0x88C840", Offset = "0x88C840", VA = "0x88C840")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x6000028")]
		[Address(RVA = "0x88C848", Offset = "0x88C848", VA = "0x88C848")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public Hand UsedHand
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0x88C850", Offset = "0x88C850", VA = "0x88C850")]
		get
		{
			return default(Hand);
		}
		[Token(Token = "0x600002A")]
		[Address(RVA = "0x88C858", Offset = "0x88C858", VA = "0x88C858")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public Transform ControllerTransform
	{
		[Token(Token = "0x600002B")]
		[Address(RVA = "0x88C860", Offset = "0x88C860", VA = "0x88C860")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000006")]
	public Vector3 ControllerPointingDirection
	{
		[Token(Token = "0x600002C")]
		[Address(RVA = "0x88C984", Offset = "0x88C984", VA = "0x88C984")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000007")]
	public Vector3 ControllerPointingOrigin
	{
		[Token(Token = "0x600002D")]
		[Address(RVA = "0x88C9A4", Offset = "0x88C9A4", VA = "0x88C9A4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000008")]
	public Transform PointerTransformOverride
	{
		[Token(Token = "0x600002E")]
		[Address(RVA = "0x88C910", Offset = "0x88C910", VA = "0x88C910")]
		get
		{
			return null;
		}
		[Token(Token = "0x600002F")]
		[Address(RVA = "0x88C9C4", Offset = "0x88C9C4", VA = "0x88C9C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public GameObject CurrentPointedAt
	{
		[Token(Token = "0x6000030")]
		[Address(RVA = "0x88CA3C", Offset = "0x88CA3C", VA = "0x88CA3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000A")]
	public Camera EventCamera
	{
		[Token(Token = "0x6000031")]
		[Address(RVA = "0x88CA44", Offset = "0x88CA44", VA = "0x88CA44")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000032")]
		[Address(RVA = "0x88B6A4", Offset = "0x88B6A4", VA = "0x88B6A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public static Ray CustomControllerRay
	{
		[Token(Token = "0x6000034")]
		[Address(RVA = "0x88CCA8", Offset = "0x88CCA8", VA = "0x88CCA8")]
		get
		{
			return default(Ray);
		}
		[Token(Token = "0x6000035")]
		[Address(RVA = "0x88C4F8", Offset = "0x88C4F8", VA = "0x88C4F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public static bool CustomControllerButtonState
	{
		[Token(Token = "0x6000036")]
		[Address(RVA = "0x88CD2C", Offset = "0x88CD2C", VA = "0x88CD2C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000037")]
		[Address(RVA = "0x88C5C4", Offset = "0x88C5C4", VA = "0x88C5C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5CBD5C", Offset = "0x5CBD5C")]
	public static bool CustomControllerButtonDown
	{
		[Token(Token = "0x6000038")]
		[Address(RVA = "0x88CD98", Offset = "0x88CD98", VA = "0x88CD98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000039")]
		[Address(RVA = "0x88CE04", Offset = "0x88CE04", VA = "0x88CE04")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public Vector2 WorldSpaceMouseInCanvasSpace
	{
		[Token(Token = "0x600003A")]
		[Address(RVA = "0x88CE78", Offset = "0x88CE78", VA = "0x88CE78")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x600003B")]
		[Address(RVA = "0x88CE84", Offset = "0x88CE84", VA = "0x88CE84")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public Vector2 WorldSpaceMouseInCanvasSpaceDelta
	{
		[Token(Token = "0x600003C")]
		[Address(RVA = "0x88CE98", Offset = "0x88CE98", VA = "0x88CE98")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000010")]
	public float WorldSpaceMouseSensitivity
	{
		[Token(Token = "0x600003D")]
		[Address(RVA = "0x88CF2C", Offset = "0x88CF2C", VA = "0x88CF2C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600003E")]
		[Address(RVA = "0x88CF34", Offset = "0x88CF34", VA = "0x88CF34")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public bool GazeUseTimedClick
	{
		[Token(Token = "0x600003F")]
		[Address(RVA = "0x88CF3C", Offset = "0x88CF3C", VA = "0x88CF3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000040")]
		[Address(RVA = "0x88CF44", Offset = "0x88CF44", VA = "0x88CF44")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public float GazeClickTimer
	{
		[Token(Token = "0x6000041")]
		[Address(RVA = "0x88CF50", Offset = "0x88CF50", VA = "0x88CF50")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000042")]
		[Address(RVA = "0x88CF58", Offset = "0x88CF58", VA = "0x88CF58")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public float GazeClickTimerDelay
	{
		[Token(Token = "0x6000043")]
		[Address(RVA = "0x88CFD8", Offset = "0x88CFD8", VA = "0x88CFD8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000044")]
		[Address(RVA = "0x88CFE0", Offset = "0x88CFE0", VA = "0x88CFE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public float GazeTimerProgress
	{
		[Token(Token = "0x6000045")]
		[Address(RVA = "0x88D060", Offset = "0x88D060", VA = "0x88D060")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000015")]
	public Image GazeTimedClickProgressImage
	{
		[Token(Token = "0x6000046")]
		[Address(RVA = "0x88D068", Offset = "0x88D068", VA = "0x88D068")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000047")]
		[Address(RVA = "0x88D070", Offset = "0x88D070", VA = "0x88D070")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public OVRCameraRig OculusCameraRig
	{
		[Token(Token = "0x6000048")]
		[Address(RVA = "0x88D078", Offset = "0x88D078", VA = "0x88D078")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000049")]
		[Address(RVA = "0x88D080", Offset = "0x88D080", VA = "0x88D080")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public OVRInput.Button OculusTouchInteractionButton
	{
		[Token(Token = "0x600004A")]
		[Address(RVA = "0x88D088", Offset = "0x88D088", VA = "0x88D088")]
		get
		{
			return default(OVRInput.Button);
		}
		[Token(Token = "0x600004B")]
		[Address(RVA = "0x88D090", Offset = "0x88D090", VA = "0x88D090")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public Transform OculusTouchUsedControllerTransform
	{
		[Token(Token = "0x600004C")]
		[Address(RVA = "0x88C594", Offset = "0x88C594", VA = "0x88C594")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x88B52C", Offset = "0x88B52C", VA = "0x88B52C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x88B748", Offset = "0x88B748", VA = "0x88B748", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x88BA70", Offset = "0x88BA70", VA = "0x88BA70", Slot = "31")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x88BC88", Offset = "0x88BC88", VA = "0x88BC88", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x88BF58", Offset = "0x88BF58", VA = "0x88BF58", Slot = "32")]
	protected virtual void ProcessGaze()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x88BFC0", Offset = "0x88BFC0", VA = "0x88BFC0", Slot = "33")]
	protected virtual void ProcessCustomRayController()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x88BFC8", Offset = "0x88BFC8", VA = "0x88BFC8", Slot = "27")]
	protected override MouseState GetMousePointerEventData(int id)
	{
		return null;
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x88C0E8", Offset = "0x88C0E8", VA = "0x88C0E8")]
	private PointerEventData.FramePressState CustomRayFramePressedState()
	{
		return default(PointerEventData.FramePressState);
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x88C114", Offset = "0x88C114", VA = "0x88C114", Slot = "34")]
	protected virtual void ProcessViveControllers()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x88C118", Offset = "0x88C118", VA = "0x88C118", Slot = "35")]
	protected virtual void ProcessOculusVRController()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x88BF54", Offset = "0x88BF54", VA = "0x88BF54")]
	private void ProcessSteamVR2Controllers()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x88C638", Offset = "0x88C638", VA = "0x88C638", Slot = "36")]
	protected virtual void ProcessUnityXRController()
	{
	}

	[Token(Token = "0x6000022")]
	private static T EnableInputModule<T>() where T : BaseInputModule
	{
		return null;
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x88CA4C", Offset = "0x88CA4C", VA = "0x88CA4C")]
	public Ray GetEventRay([Optional] Camera eventCam)
	{
		return default(Ray);
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x88D098", Offset = "0x88D098", VA = "0x88D098")]
	public CurvedUIInputModule()
	{
	}
}
[Token(Token = "0x200000A")]
public class DAX_CameraControl_V2_1_Lightning : MonoBehaviour
{
	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float sensitivityX;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityY;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mHdg;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mPitch;

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x88DFBC", Offset = "0x88DFBC", VA = "0x88DFBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x88E100", Offset = "0x88E100", VA = "0x88E100")]
	private void Start()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x88E154", Offset = "0x88E154", VA = "0x88E154")]
	private void Update()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x88E674", Offset = "0x88E674", VA = "0x88E674")]
	private void MoveForwards(float aVal)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x88E46C", Offset = "0x88E46C", VA = "0x88E46C")]
	private void Strafe(float aVal)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x88E580", Offset = "0x88E580", VA = "0x88E580")]
	private void ChangeHeight(float aVal)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x88E7B0", Offset = "0x88E7B0", VA = "0x88E7B0")]
	private void ChangeHeading(float aVal)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x88E860", Offset = "0x88E860", VA = "0x88E860")]
	private void ChangePitch(float aVal)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x88E904", Offset = "0x88E904", VA = "0x88E904")]
	public static void WrapAngle(ref float angle)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x88E948", Offset = "0x88E948", VA = "0x88E948")]
	public DAX_CameraControl_V2_1_Lightning()
	{
	}
}
[Token(Token = "0x200000B")]
public class DAX_LightningCore : MonoBehaviour
{
	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float StartTime;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Duration;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float FreqPerSecond;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 FreqRandom;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float StartSize;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float curTime;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float fullTime;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem[] PSMatrix;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material[] Materials;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform b_Transform;

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x88E958", Offset = "0x88E958", VA = "0x88E958")]
	private void Start()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x88EA20", Offset = "0x88EA20", VA = "0x88EA20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x88E984", Offset = "0x88E984", VA = "0x88E984")]
	private void SelfEnable()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x88EA24", Offset = "0x88EA24", VA = "0x88EA24")]
	private void Spawn(int index)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x88ECCC", Offset = "0x88ECCC", VA = "0x88ECCC")]
	private void Update()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x88ED0C", Offset = "0x88ED0C", VA = "0x88ED0C")]
	public DAX_LightningCore()
	{
	}
}
[Token(Token = "0x200000C")]
public class DAX_LightningDestructor : MonoBehaviour
{
	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C26D0", Offset = "0x5C26D0")]
	private sealed class <PSAliveCouroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DAX_LightningDestructor <>4__this;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700022D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0x88F1AC", Offset = "0x88F1AC", VA = "0x88F1AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x88F214", Offset = "0x88F214", VA = "0x88F214", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x88EF6C", Offset = "0x88EF6C", VA = "0x88EF6C")]
		[DebuggerHidden]
		public <PSAliveCouroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x88EFA8", Offset = "0x88EFA8", VA = "0x88EFA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x88EFAC", Offset = "0x88EFAC", VA = "0x88EFAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x88F1B4", Offset = "0x88F1B4", VA = "0x88F1B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem[] ChildedPS;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Timer;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float eTime;

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x88ED28", Offset = "0x88ED28", VA = "0x88ED28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x88ED88", Offset = "0x88ED88", VA = "0x88ED88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x88EDE4", Offset = "0x88EDE4", VA = "0x88EDE4")]
	public void DAX_Start_Destruction_cBack()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x88EEFC", Offset = "0x88EEFC", VA = "0x88EEFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C8D64", Offset = "0x5C8D64")]
	private IEnumerator PSAliveCouroutine()
	{
		return null;
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x88EF98", Offset = "0x88EF98", VA = "0x88EF98")]
	public DAX_LightningDestructor()
	{
	}
}
[Token(Token = "0x200000D")]
public class DAX_CameraControl_V2_1 : MonoBehaviour
{
	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float sensitivityX;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityY;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mHdg;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mPitch;

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x88D620", Offset = "0x88D620", VA = "0x88D620")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x88D764", Offset = "0x88D764", VA = "0x88D764")]
	private void Start()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x88D7B8", Offset = "0x88D7B8", VA = "0x88D7B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x88DCD8", Offset = "0x88DCD8", VA = "0x88DCD8")]
	private void MoveForwards(float aVal)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x88DAD0", Offset = "0x88DAD0", VA = "0x88DAD0")]
	private void Strafe(float aVal)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x88DBE4", Offset = "0x88DBE4", VA = "0x88DBE4")]
	private void ChangeHeight(float aVal)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x88DE14", Offset = "0x88DE14", VA = "0x88DE14")]
	private void ChangeHeading(float aVal)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x88DEC4", Offset = "0x88DEC4", VA = "0x88DEC4")]
	private void ChangePitch(float aVal)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x88DF68", Offset = "0x88DF68", VA = "0x88DF68")]
	public static void WrapAngle(ref float angle)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x88DFAC", Offset = "0x88DFAC", VA = "0x88DFAC")]
	public DAX_CameraControl_V2_1()
	{
	}
}
[Token(Token = "0x200000E")]
public class DAX_PrefGen_V1_1 : MonoBehaviour
{
	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Items;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] Descr;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text OutText;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text OutDescr;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int curIndex;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject tmpPref;

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x88F21C", Offset = "0x88F21C", VA = "0x88F21C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x88F3CC", Offset = "0x88F3CC", VA = "0x88F3CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x88F498", Offset = "0x88F498", VA = "0x88F498")]
	private void Update()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x88F49C", Offset = "0x88F49C", VA = "0x88F49C")]
	public void Next()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x88F4D0", Offset = "0x88F4D0", VA = "0x88F4D0")]
	public void Prev()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x88F220", Offset = "0x88F220", VA = "0x88F220")]
	public void showPrefab()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x88F508", Offset = "0x88F508", VA = "0x88F508")]
	public DAX_PrefGen_V1_1()
	{
	}
}
[Token(Token = "0x200000F")]
public class DAX_PrefGen_V1_2_Snow : MonoBehaviour
{
	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Items;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] Descr;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text OutText;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text OutDescr;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int curIndex;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject tmpPref;

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x88F510", Offset = "0x88F510", VA = "0x88F510")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x88F6C0", Offset = "0x88F6C0", VA = "0x88F6C0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x88F78C", Offset = "0x88F78C", VA = "0x88F78C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x88F790", Offset = "0x88F790", VA = "0x88F790")]
	public void Next()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x88F7C4", Offset = "0x88F7C4", VA = "0x88F7C4")]
	public void Prev()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x88F514", Offset = "0x88F514", VA = "0x88F514")]
	public void showPrefab()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x88F7FC", Offset = "0x88F7FC", VA = "0x88F7FC")]
	public DAX_PrefGen_V1_2_Snow()
	{
	}
}
[Token(Token = "0x2000010")]
public class SM_MomoBehaviour : DzMonoBehaviour<SM_MomoBehaviour>
{
	[Token(Token = "0x600007C")]
	[Address(RVA = "0x8C5A18", Offset = "0x8C5A18", VA = "0x8C5A18", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x8C5A1C", Offset = "0x8C5A1C", VA = "0x8C5A1C", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x8C5A20", Offset = "0x8C5A20", VA = "0x8C5A20", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x8C5A24", Offset = "0x8C5A24", VA = "0x8C5A24")]
	public SM_MomoBehaviour()
	{
	}
}
[Token(Token = "0x2000011")]
public class DecalDestroyer : MonoBehaviour
{
	[Token(Token = "0x20001D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C26E0", Offset = "0x5C26E0")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DecalDestroyer <>4__this;

		[Token(Token = "0x1700022F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x89F350", Offset = "0x89F350", VA = "0x89F350", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000230")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0x89F3B8", Offset = "0x89F3B8", VA = "0x89F3B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x89F224", Offset = "0x89F224", VA = "0x89F224")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x89F260", Offset = "0x89F260", VA = "0x89F260", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x89F264", Offset = "0x89F264", VA = "0x89F264", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x89F358", Offset = "0x89F358", VA = "0x89F358", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifeTime;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x89F1B4", Offset = "0x89F1B4", VA = "0x89F1B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C8DC8", Offset = "0x5C8DC8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x89F250", Offset = "0x89F250", VA = "0x89F250")]
	public DecalDestroyer()
	{
	}
}
[Token(Token = "0x2000012")]
public class ExtinguishableFire : MonoBehaviour
{
	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C26F0", Offset = "0x5C26F0")]
	private sealed class <Extinguishing>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExtinguishableFire <>4__this;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000231")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0x90D6D4", Offset = "0x90D6D4", VA = "0x90D6D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0x90D73C", Offset = "0x90D73C", VA = "0x90D73C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x90D3E8", Offset = "0x90D3E8", VA = "0x90D3E8")]
		[DebuggerHidden]
		public <Extinguishing>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x90D448", Offset = "0x90D448", VA = "0x90D448", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x90D44C", Offset = "0x90D44C", VA = "0x90D44C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x90D6DC", Offset = "0x90D6DC", VA = "0x90D6DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2700", Offset = "0x5C2700")]
	private sealed class <StartingFire>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExtinguishableFire <>4__this;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000233")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0x90D928", Offset = "0x90D928", VA = "0x90D928", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F27")]
			[Address(RVA = "0x90D990", Offset = "0x90D990", VA = "0x90D990", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x90D414", Offset = "0x90D414", VA = "0x90D414")]
		[DebuggerHidden]
		public <StartingFire>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x90D744", Offset = "0x90D744", VA = "0x90D744", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x90D748", Offset = "0x90D748", VA = "0x90D748", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x90D930", Offset = "0x90D930", VA = "0x90D930", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem fireParticleSystem;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem smokeParticleSystem;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool m_isExtinguished;

	[Token(Token = "0x400004E")]
	private const float m_FireStartingTime = 2f;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x90D26C", Offset = "0x90D26C", VA = "0x90D26C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x90D338", Offset = "0x90D338", VA = "0x90D338")]
	public void Extinguish()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x90D378", Offset = "0x90D378", VA = "0x90D378")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C8E2C", Offset = "0x5C8E2C")]
	private IEnumerator Extinguishing()
	{
		return null;
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x90D2C8", Offset = "0x90D2C8", VA = "0x90D2C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C8E90", Offset = "0x5C8E90")]
	private IEnumerator StartingFire()
	{
		return null;
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x90D440", Offset = "0x90D440", VA = "0x90D440")]
	public ExtinguishableFire()
	{
	}
}
[Token(Token = "0x2000013")]
public class GunAim : MonoBehaviour
{
	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int borderLeft;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int borderRight;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int borderTop;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int borderBottom;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera parentCamera;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isOutOfBounds;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x919ED4", Offset = "0x919ED4", VA = "0x919ED4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x919F2C", Offset = "0x919F2C", VA = "0x919F2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x91A038", Offset = "0x91A038", VA = "0x91A038")]
	public bool GetIsOutOfBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x91A040", Offset = "0x91A040", VA = "0x91A040")]
	public GunAim()
	{
	}
}
[Token(Token = "0x2000014")]
public class GunShoot : MonoBehaviour
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fireRate;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float weaponRange;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform gunEnd;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem muzzleFlash;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem cartridgeEjection;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject metalHitEffect;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject sandHitEffect;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject stoneHitEffect;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject waterLeakEffect;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject waterLeakExtinguishEffect;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] fleshHitEffects;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject woodHitEffect;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float nextFire;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator anim;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GunAim gunAim;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x91A048", Offset = "0x91A048", VA = "0x91A048")]
	private void Start()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x91A0B8", Offset = "0x91A0B8", VA = "0x91A0B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x91A224", Offset = "0x91A224", VA = "0x91A224")]
	private void HandleHit(RaycastHit hit)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x91A620", Offset = "0x91A620", VA = "0x91A620")]
	private void SpawnDecal(RaycastHit hit, GameObject prefab)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x91A78C", Offset = "0x91A78C", VA = "0x91A78C")]
	public GunShoot()
	{
	}
}
[Token(Token = "0x2000015")]
public class ParticleCollision : MonoBehaviour
{
	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<ParticleCollisionEvent> m_CollisionEvents;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem m_ParticleSystem;

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x8BBB18", Offset = "0x8BBB18", VA = "0x8BBB18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x8BBB70", Offset = "0x8BBB70", VA = "0x8BBB70")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x8BBCB8", Offset = "0x8BBCB8", VA = "0x8BBCB8")]
	public ParticleCollision()
	{
	}
}
[Serializable]
[Token(Token = "0x2000016")]
public class ParticleExamples
{
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string title;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x5C2FB4", Offset = "0x5C2FB4")]
	public string description;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isWeaponEffect;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject particleSystemGO;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 particlePosition;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 particleRotation;

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x8BBD28", Offset = "0x8BBD28", VA = "0x8BBD28")]
	public ParticleExamples()
	{
	}
}
[Token(Token = "0x2000017")]
public class ParticleMenu : MonoBehaviour
{
	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleExamples[] particleSystems;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject gunGameObject;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentIndex;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject currentGO;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform spawnLocation;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text title;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text description;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text navigationDetails;

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x8BBD30", Offset = "0x8BBD30", VA = "0x8BBD30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x8BBD58", Offset = "0x8BBD58", VA = "0x8BBD58")]
	public void Navigate(int i)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x8BC110", Offset = "0x8BC110", VA = "0x8BC110")]
	public ParticleMenu()
	{
	}
}
[Token(Token = "0x2000018")]
public class starFxController : MonoBehaviour
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] starFX;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ea;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int currentEa;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float delay;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float currentDelay;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isEnd;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int idStar;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static starFxController myStarFxController;

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x11837A4", Offset = "0x11837A4", VA = "0x11837A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x11837F8", Offset = "0x11837F8", VA = "0x11837F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x11838B8", Offset = "0x11838B8", VA = "0x11838B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x11837FC", Offset = "0x11837FC", VA = "0x11837FC")]
	public void Reset()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x118399C", Offset = "0x118399C", VA = "0x118399C")]
	public starFxController()
	{
	}
}
[Token(Token = "0x2000019")]
public class vfxController : MonoBehaviour
{
	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] starFx01Prefabs;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] starFx02Prefabs;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] starFx03Prefabs;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] starFx04Prefabs;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] starFx05Prefabs;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] DesStarFxObjs;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] bgFxPrefabs;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currentStarImage;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int currentStarFx;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int currentLevel;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int currentBgFx;

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x11839A4", Offset = "0x11839A4", VA = "0x11839A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x11839B4", Offset = "0x11839B4", VA = "0x11839B4")]
	public void ChangedStarImage(int i)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x1183BC8", Offset = "0x1183BC8", VA = "0x1183BC8")]
	public void ChangedStarFX(int i)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1183BD0", Offset = "0x1183BD0", VA = "0x1183BD0")]
	public void ChangedLevel(int i)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1183BD8", Offset = "0x1183BD8", VA = "0x1183BD8")]
	public void ChangedBgFx(int i)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x11839BC", Offset = "0x11839BC", VA = "0x11839BC")]
	public void PlayStarFX()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x1183BE0", Offset = "0x1183BE0", VA = "0x1183BE0")]
	public vfxController()
	{
	}
}
[Token(Token = "0x200001A")]
public class OldGUIExamplesCS : MonoBehaviour
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D grumpy;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D beauty;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float w;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float h;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LTRect buttonRect1;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LTRect buttonRect2;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LTRect buttonRect3;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LTRect buttonRect4;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LTRect grumpyRect;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LTRect beautyTileRect;

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xA8AB5C", Offset = "0xA8AB5C", VA = "0xA8AB5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xA8AE7C", Offset = "0xA8AE7C", VA = "0xA8AE7C")]
	public void catMoved()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xA8AEE8", Offset = "0xA8AEE8", VA = "0xA8AEE8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xA8B988", Offset = "0xA8B988", VA = "0xA8B988")]
	public OldGUIExamplesCS()
	{
	}
}
[Token(Token = "0x200001B")]
public class TestingPunch : MonoBehaviour
{
	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2710", Offset = "0x5C2710")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Light lt;

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x9F6354", Offset = "0x9F6354", VA = "0x9F6354")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x9F6E7C", Offset = "0x9F6E7C", VA = "0x9F6E7C")]
		internal void <Update>b__2(float val)
		{
		}
	}

	[Token(Token = "0x20001D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2720", Offset = "0x5C2720")]
	private sealed class <>c__DisplayClass4_1
	{
		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float start;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TestingPunch <>4__this;

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x9F64A0", Offset = "0x9F64A0", VA = "0x9F64A0")]
		public <>c__DisplayClass4_1()
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x9F6E98", Offset = "0x9F6E98", VA = "0x9F6E98")]
		internal void <Update>b__6()
		{
		}
	}

	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2730", Offset = "0x5C2730")]
	private sealed class <>c__DisplayClass4_2
	{
		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject l;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TestingPunch <>4__this;

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x9F64A8", Offset = "0x9F64A8", VA = "0x9F64A8")]
		public <>c__DisplayClass4_2()
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x9F716C", Offset = "0x9F716C", VA = "0x9F716C")]
		internal void <Update>b__8(Vector2 val)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2740", Offset = "0x5C2740")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__4_1;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<float> <>9__4_4;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__4_5;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<float> <>9__5_0;

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x9F6CE0", Offset = "0x9F6CE0", VA = "0x9F6CE0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x9F6CE8", Offset = "0x9F6CE8", VA = "0x9F6CE8")]
		internal void <Update>b__4_1()
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x9F6D54", Offset = "0x9F6D54", VA = "0x9F6D54")]
		internal void <Update>b__4_4(float v)
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x9F6D58", Offset = "0x9F6D58", VA = "0x9F6D58")]
		internal void <Update>b__4_5()
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x9F6DC4", Offset = "0x9F6DC4", VA = "0x9F6DC4")]
		internal void <tweenStatically>b__5_0(float val)
		{
		}
	}

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve exportCurve;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float overShootValue;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LTDescr descr;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x9F4FDC", Offset = "0x9F4FDC", VA = "0x9F4FDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x9F5364", Offset = "0x9F5364", VA = "0x9F5364")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x9F635C", Offset = "0x9F635C", VA = "0x9F635C")]
	private static void tweenStatically(GameObject gameObject)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x9F64B0", Offset = "0x9F64B0", VA = "0x9F64B0")]
	private void enterMiniGameStart(object val)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x9F65E8", Offset = "0x9F65E8", VA = "0x9F65E8")]
	private void updateColor(Color c)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x9F6694", Offset = "0x9F6694", VA = "0x9F6694")]
	private void delayedMethod(object myVal)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x9F6848", Offset = "0x9F6848", VA = "0x9F6848")]
	private void destroyOnComp(object p)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x9F5070", Offset = "0x9F5070", VA = "0x9F5070")]
	private string curveToString(AnimationCurve curve)
	{
		return null;
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x9F68DC", Offset = "0x9F68DC", VA = "0x9F68DC")]
	public TestingPunch()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x9F68EC", Offset = "0x9F68EC", VA = "0x9F68EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8EF4", Offset = "0x5C8EF4")]
	private void <Update>b__4_0()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x9F6A1C", Offset = "0x9F6A1C", VA = "0x9F6A1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8F04", Offset = "0x5C8F04")]
	private void <Update>b__4_3()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x9F6BD4", Offset = "0x9F6BD4", VA = "0x9F6BD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8F14", Offset = "0x5C8F14")]
	private void <Update>b__4_7(Vector2 val)
	{
	}
}
[Token(Token = "0x200001C")]
public class TestingRigidbodyCS : MonoBehaviour
{
	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject ball1;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x9F7298", Offset = "0x9F7298", VA = "0x9F7298")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x9F73E8", Offset = "0x9F73E8", VA = "0x9F73E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x9F73EC", Offset = "0x9F73EC", VA = "0x9F73EC")]
	public TestingRigidbodyCS()
	{
	}
}
[Token(Token = "0x200001D")]
public class Following : MonoBehaviour
{
	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform planet;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform followArrow;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform dude1;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform dude2;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform dude3;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform dude4;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform dude5;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform dude1Title;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform dude2Title;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform dude3Title;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform dude4Title;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform dude5Title;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color dude1ColorVelocity;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 velocityPos;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float fromY;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float velocityY;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 fromVec3;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 velocityVec3;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Color fromColor;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Color velocityColor;

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x90D998", Offset = "0x90D998", VA = "0x90D998")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x90DEF4", Offset = "0x90DEF4", VA = "0x90DEF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x90E280", Offset = "0x90E280", VA = "0x90E280")]
	private void moveArrow()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x90E3F4", Offset = "0x90E3F4", VA = "0x90E3F4")]
	public Following()
	{
	}
}
[Token(Token = "0x200001E")]
public class GeneralAdvancedTechniques : MonoBehaviour
{
	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject avatarRecursive;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject avatar2dRecursive;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform wingPersonPanel;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform textField;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject avatarMove;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] movePts;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] avatarSpeed;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] avatarSpeed2;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] circleSm;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] circleLrg;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x912140", Offset = "0x912140", VA = "0x912140")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x912514", Offset = "0x912514", VA = "0x912514")]
	public GeneralAdvancedTechniques()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x913648", Offset = "0x913648", VA = "0x913648")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8F24", Offset = "0x5C8F24")]
	private void <Start>b__10_0(float val)
	{
	}
}
[Token(Token = "0x200001F")]
public class GeneralBasic : MonoBehaviour
{
	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2750", Offset = "0x5C2750")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject rotator;

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x9142B8", Offset = "0x9142B8", VA = "0x9142B8")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x9142C0", Offset = "0x9142C0", VA = "0x9142C0")]
		internal void <advancedExamples>b__1()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x914388", Offset = "0x914388", VA = "0x914388")]
		internal void <advancedExamples>b__2()
		{
		}
	}

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefabAvatar;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x913840", Offset = "0x913840", VA = "0x913840")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x913BC8", Offset = "0x913BC8", VA = "0x913BC8")]
	private void advancedExamples()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x913CA4", Offset = "0x913CA4", VA = "0x913CA4")]
	public GeneralBasic()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x913CAC", Offset = "0x913CAC", VA = "0x913CAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8F34", Offset = "0x5C8F34")]
	private void <advancedExamples>b__2_0()
	{
	}
}
[Token(Token = "0x2000020")]
public class GeneralBasics2d : MonoBehaviour
{
	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2760", Offset = "0x5C2760")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject rotator;

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x9151D4", Offset = "0x9151D4", VA = "0x9151D4")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x9151DC", Offset = "0x9151DC", VA = "0x9151DC")]
		internal void <advancedExamples>b__1()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x9152A4", Offset = "0x9152A4", VA = "0x9152A4")]
		internal void <advancedExamples>b__2()
		{
		}
	}

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D dudeTexture;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefabParticles;

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x9143F4", Offset = "0x9143F4", VA = "0x9143F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x914824", Offset = "0x914824", VA = "0x914824")]
	private GameObject createSpriteDude(string name, Vector3 pos, bool hasParticles = true)
	{
		return null;
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x914B08", Offset = "0x914B08", VA = "0x914B08")]
	private void advancedExamples()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x914BE4", Offset = "0x914BE4", VA = "0x914BE4")]
	public GeneralBasics2d()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x914BEC", Offset = "0x914BEC", VA = "0x914BEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8F44", Offset = "0x5C8F44")]
	private void <advancedExamples>b__4_0()
	{
	}
}
[Token(Token = "0x2000021")]
public class GeneralCameraShake : MonoBehaviour
{
	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2770", Offset = "0x5C2770")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GeneralCameraShake <>4__this;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float height;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x91584C", Offset = "0x91584C", VA = "0x91584C")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x915864", Offset = "0x915864", VA = "0x915864")]
		internal void <bigGuyJump>b__0()
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x915950", Offset = "0x915950", VA = "0x915950")]
		internal void <bigGuyJump>b__1()
		{
		}
	}

	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2780", Offset = "0x5C2780")]
	private sealed class <>c__DisplayClass4_1
	{
		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr shakeTween;

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x915DEC", Offset = "0x915DEC", VA = "0x915DEC")]
		public <>c__DisplayClass4_1()
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x915DF4", Offset = "0x915DF4", VA = "0x915DF4")]
		internal void <bigGuyJump>b__2(float val)
		{
		}
	}

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject avatarBig;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float jumpIter;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioClip boomAudioClip;

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x915310", Offset = "0x915310", VA = "0x915310")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x9156E0", Offset = "0x9156E0", VA = "0x9156E0")]
	private void bigGuyJump()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x915854", Offset = "0x915854", VA = "0x915854")]
	public GeneralCameraShake()
	{
	}
}
[Token(Token = "0x2000022")]
public class GeneralEasingTypes : MonoBehaviour
{
	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2790", Offset = "0x5C2790")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform obj1;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float obj1val;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GeneralEasingTypes <>4__this;

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x916200", Offset = "0x916200", VA = "0x916200")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x916AB4", Offset = "0x916AB4", VA = "0x916AB4")]
		internal void <demoEaseTypes>b__0(float val)
		{
		}
	}

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lineDrawScale;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] easeTypes;

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x915E88", Offset = "0x915E88", VA = "0x915E88")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x915E8C", Offset = "0x915E8C", VA = "0x915E8C")]
	private void demoEaseTypes()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x916208", Offset = "0x916208", VA = "0x916208")]
	private void resetLines()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x916304", Offset = "0x916304", VA = "0x916304")]
	public GeneralEasingTypes()
	{
	}
}
[Token(Token = "0x2000023")]
public class GeneralEventsListeners : MonoBehaviour
{
	[Token(Token = "0x20001E1")]
	public enum MyEvents
	{
		[Token(Token = "0x4000A9D")]
		CHANGE_COLOR,
		[Token(Token = "0x4000A9E")]
		JUMP,
		[Token(Token = "0x4000A9F")]
		LENGTH
	}

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 towardsRotation;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float turnForLength;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float turnForIter;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color fromColor;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x916B44", Offset = "0x916B44", VA = "0x916B44")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x916BF8", Offset = "0x916BF8", VA = "0x916BF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x916D0C", Offset = "0x916D0C", VA = "0x916D0C")]
	private void jumpUp(LTEvent e)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x916DB0", Offset = "0x916DB0", VA = "0x916DB0")]
	private void changeColor(LTEvent e)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x917024", Offset = "0x917024", VA = "0x917024")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x9170B0", Offset = "0x9170B0", VA = "0x9170B0")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x91710C", Offset = "0x91710C", VA = "0x91710C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x9172F0", Offset = "0x9172F0", VA = "0x9172F0")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x9173B4", Offset = "0x9173B4", VA = "0x9173B4")]
	public GeneralEventsListeners()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x9173C4", Offset = "0x9173C4", VA = "0x9173C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8F54", Offset = "0x5C8F54")]
	private void <changeColor>b__8_0(Color col)
	{
	}
}
[Token(Token = "0x2000024")]
public class GeneralSequencer : MonoBehaviour
{
	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject avatar1;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject star;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dustCloudPrefab;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speedScale;

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x917460", Offset = "0x917460", VA = "0x917460")]
	public void Start()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x91768C", Offset = "0x91768C", VA = "0x91768C")]
	public GeneralSequencer()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x91769C", Offset = "0x91769C", VA = "0x91769C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8F64", Offset = "0x5C8F64")]
	private void <Start>b__4_0()
	{
	}
}
[Token(Token = "0x2000025")]
public class GeneralSimpleUI : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C27A0", Offset = "0x5C27A0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<float> <>9__1_1;

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x9181D8", Offset = "0x9181D8", VA = "0x9181D8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x9181E0", Offset = "0x9181E0", VA = "0x9181E0")]
		internal void <Start>b__1_1(float volume)
		{
		}
	}

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform button;

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x91799C", Offset = "0x91799C", VA = "0x91799C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x917FB4", Offset = "0x917FB4", VA = "0x917FB4")]
	public GeneralSimpleUI()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x917FBC", Offset = "0x917FBC", VA = "0x917FBC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8F74", Offset = "0x5C8F74")]
	private void <Start>b__1_0(Vector2 val)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x917FD8", Offset = "0x917FD8", VA = "0x917FD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8F84", Offset = "0x5C8F84")]
	private void <Start>b__1_2(Vector3 val)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x918030", Offset = "0x918030", VA = "0x918030")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8F94", Offset = "0x5C8F94")]
	private void <Start>b__1_3(Color val)
	{
	}
}
[Token(Token = "0x2000026")]
public class GeneralUISpace : MonoBehaviour
{
	[Token(Token = "0x20001E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C27B0", Offset = "0x5C27B0")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GeneralUISpace <>4__this;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string origText;

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x918B50", Offset = "0x918B50", VA = "0x918B50")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x918B60", Offset = "0x918B60", VA = "0x918B60")]
		internal void <Start>b__0(float val)
		{
		}
	}

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform mainWindow;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform mainParagraphText;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform mainTitleText;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform mainButton1;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform mainButton2;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform pauseRing1;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform pauseRing2;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RectTransform pauseWindow;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RectTransform chatWindow;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform chatRect;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite[] chatSprites;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RectTransform chatBar1;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RectTransform chatBar2;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text chatText;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public RectTransform rawImageRect;

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x918298", Offset = "0x918298", VA = "0x918298")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x918B58", Offset = "0x918B58", VA = "0x918B58")]
	public GeneralUISpace()
	{
	}
}
[Token(Token = "0x2000027")]
public class LogoCinematic : MonoBehaviour
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lean;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject tween;

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x95F3E0", Offset = "0x95F3E0", VA = "0x95F3E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x95F3E4", Offset = "0x95F3E4", VA = "0x95F3E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x95F79C", Offset = "0x95F79C", VA = "0x95F79C")]
	private void playBoom()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x95FE50", Offset = "0x95FE50", VA = "0x95FE50")]
	public LogoCinematic()
	{
	}
}
[Token(Token = "0x2000028")]
public class PathBezier2d : MonoBehaviour
{
	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] cubes;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject dude1;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dude2;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LTBezierPath visualizePath;

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x8BC118", Offset = "0x8BC118", VA = "0x8BC118")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x8BC2F0", Offset = "0x8BC2F0", VA = "0x8BC2F0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x8BC338", Offset = "0x8BC338", VA = "0x8BC338")]
	public PathBezier2d()
	{
	}
}
[Token(Token = "0x2000029")]
public class ExampleSpline : MonoBehaviour
{
	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] trans;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTSpline spline;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject ltLogo;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject ltLogo2;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float iter;

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x90C710", Offset = "0x90C710", VA = "0x90C710")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x90CAA8", Offset = "0x90CAA8", VA = "0x90CAA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x90CB3C", Offset = "0x90CB3C", VA = "0x90CB3C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x90CB54", Offset = "0x90CB54", VA = "0x90CB54")]
	public ExampleSpline()
	{
	}
}
[Token(Token = "0x200002A")]
public class PathSpline2d : MonoBehaviour
{
	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] cubes;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject dude1;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dude2;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LTSpline visualizePath;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x8BC340", Offset = "0x8BC340", VA = "0x8BC340")]
	private void Start()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x8BC570", Offset = "0x8BC570", VA = "0x8BC570")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x8BC5B8", Offset = "0x8BC5B8", VA = "0x8BC5B8")]
	public PathSpline2d()
	{
	}
}
[Token(Token = "0x200002B")]
public class PathSplineEndless : MonoBehaviour
{
	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject trackTrailRenderers;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject car;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject carInternal;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] cubes;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int cubesIter;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] trees;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int treesIter;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float randomIterWidth;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LTSpline track;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> trackPts;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int zIter;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float carIter;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float carAdd;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int trackMaxItems;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int trackIter;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float pushTrackAhead;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float randomIter;

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x8BC5C0", Offset = "0x8BC5C0", VA = "0x8BC5C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x8BCA28", Offset = "0x8BCA28", VA = "0x8BCA28")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x8BD044", Offset = "0x8BD044", VA = "0x8BD044")]
	private GameObject objectQueue(GameObject[] arr, ref int lastIter)
	{
		return null;
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x8BC6C4", Offset = "0x8BC6C4", VA = "0x8BC6C4")]
	private void addRandomTrackPoint()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x8BC94C", Offset = "0x8BC94C", VA = "0x8BC94C")]
	private void refreshSpline()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x8BCC20", Offset = "0x8BCC20", VA = "0x8BCC20")]
	private void playSwish()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x8BD198", Offset = "0x8BD198", VA = "0x8BD198")]
	public PathSplineEndless()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x8BD220", Offset = "0x8BD220", VA = "0x8BD220")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8FA4", Offset = "0x5C8FA4")]
	private void <Start>b__17_0(float val)
	{
	}
}
[Token(Token = "0x200002C")]
public class PathSplinePerformance : MonoBehaviour
{
	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject trackTrailRenderers;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject car;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject carInternal;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float circleLength;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float randomRange;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int trackNodes;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float carSpeed;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float tracerSpeed;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LTSpline track;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int trackIter;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float carAdd;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float trackPosition;

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x8BD228", Offset = "0x8BD228", VA = "0x8BD228")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x8BD530", Offset = "0x8BD530", VA = "0x8BD530")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x8BDAB4", Offset = "0x8BDAB4", VA = "0x8BDAB4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x8BD690", Offset = "0x8BD690", VA = "0x8BD690")]
	private void playSwish()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x8BDAF0", Offset = "0x8BDAF0", VA = "0x8BDAF0")]
	public PathSplinePerformance()
	{
	}
}
[Token(Token = "0x200002D")]
public class PathSplineTrack : MonoBehaviour
{
	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject car;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject carInternal;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject trackTrailRenderers;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] trackOnePoints;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LTSpline track;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int trackIter;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float trackPosition;

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x8BDB20", Offset = "0x8BDB20", VA = "0x8BDB20")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x8BDD8C", Offset = "0x8BDD8C", VA = "0x8BDD8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x8BE328", Offset = "0x8BE328", VA = "0x8BE328")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x8BDF04", Offset = "0x8BDF04", VA = "0x8BDF04")]
	private void playSwish()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x8BE3CC", Offset = "0x8BE3CC", VA = "0x8BE3CC")]
	public PathSplineTrack()
	{
	}
}
[Token(Token = "0x200002E")]
public class PathSplines : MonoBehaviour
{
	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] trans;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTSpline cr;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject avatar1;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float iter;

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x8BE3DC", Offset = "0x8BE3DC", VA = "0x8BE3DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x8BE584", Offset = "0x8BE584", VA = "0x8BE584")]
	private void Start()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x8BE698", Offset = "0x8BE698", VA = "0x8BE698")]
	private void Update()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x8BE6EC", Offset = "0x8BE6EC", VA = "0x8BE6EC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x8BE744", Offset = "0x8BE744", VA = "0x8BE744")]
	public PathSplines()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x8BE74C", Offset = "0x8BE74C", VA = "0x8BE74C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8FB4", Offset = "0x5C8FB4")]
	private void <Start>b__4_0()
	{
	}
}
[Token(Token = "0x200002F")]
public class TestingZLegacy : MonoBehaviour
{
	[Token(Token = "0x20001E4")]
	public delegate void NextFunc();

	[Token(Token = "0x20001E5")]
	public enum TimingType
	{
		[Token(Token = "0x4000AA5")]
		SteadyNormalTime,
		[Token(Token = "0x4000AA6")]
		IgnoreTimeScale,
		[Token(Token = "0x4000AA7")]
		HalfTimeScale,
		[Token(Token = "0x4000AA8")]
		VariableTimeScale,
		[Token(Token = "0x4000AA9")]
		Length
	}

	[Serializable]
	[Token(Token = "0x20001E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C27C0", Offset = "0x5C27C0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<float> <>9__20_0;

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x9F9818", Offset = "0x9F9818", VA = "0x9F9818")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x9F9820", Offset = "0x9F9820", VA = "0x9F9820")]
		internal void <cycleThroughExamples>b__20_0(float val)
		{
		}
	}

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve customAnimationCurve;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform pt1;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pt2;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform pt3;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pt4;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pt5;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int exampleIter;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string[] exampleFunctions;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool useEstimatedTime;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject ltLogo;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TimingType timingType;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int descrTimeScaleChangeId;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 origin;

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x9F73F4", Offset = "0x9F73F4", VA = "0x9F73F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x9F73F8", Offset = "0x9F73F8", VA = "0x9F73F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x9F74D4", Offset = "0x9F74D4", VA = "0x9F74D4")]
	private void pauseNow()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x9F754C", Offset = "0x9F754C", VA = "0x9F754C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x9F7698", Offset = "0x9F7698", VA = "0x9F7698")]
	private void endlessCallback()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x9F7704", Offset = "0x9F7704", VA = "0x9F7704")]
	private void cycleThroughExamples()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x9F7A4C", Offset = "0x9F7A4C", VA = "0x9F7A4C")]
	public void updateValue3Example()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x9F7C74", Offset = "0x9F7C74", VA = "0x9F7C74")]
	public void updateValue3ExampleUpdate(Vector3 val)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x9F7C78", Offset = "0x9F7C78", VA = "0x9F7C78")]
	public void updateValue3ExampleCallback(Vector3 val)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x9F7CCC", Offset = "0x9F7CCC", VA = "0x9F7CCC")]
	public void loopTestClamp()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x9F7E60", Offset = "0x9F7E60", VA = "0x9F7E60")]
	public void loopTestPingPong()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x9F7FE8", Offset = "0x9F7FE8", VA = "0x9F7FE8")]
	public void colorExample()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x9F80E0", Offset = "0x9F80E0", VA = "0x9F80E0")]
	public void moveOnACurveExample()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x9F8334", Offset = "0x9F8334", VA = "0x9F8334")]
	public void customTweenExample()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x9F85A8", Offset = "0x9F85A8", VA = "0x9F85A8")]
	public void moveExample()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x9F86CC", Offset = "0x9F86CC", VA = "0x9F86CC")]
	public void rotateExample()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x9F88E4", Offset = "0x9F88E4", VA = "0x9F88E4")]
	public void rotateOnUpdate(float val)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x9F88E8", Offset = "0x9F88E8", VA = "0x9F88E8")]
	public void rotateFinished(object hash)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x9F89D0", Offset = "0x9F89D0", VA = "0x9F89D0")]
	public void scaleExample()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x9F8AF0", Offset = "0x9F8AF0", VA = "0x9F8AF0")]
	public void updateValueExample()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x9F8C98", Offset = "0x9F8C98", VA = "0x9F8C98")]
	public void updateValueExampleCallback(float val, object hash)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x9F8D14", Offset = "0x9F8D14", VA = "0x9F8D14")]
	public void delayedCallExample()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x9F8DF4", Offset = "0x9F8DF4", VA = "0x9F8DF4")]
	public void delayedCallExampleCallback()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x9F8F14", Offset = "0x9F8F14", VA = "0x9F8F14")]
	public void alphaExample()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x9F901C", Offset = "0x9F901C", VA = "0x9F901C")]
	public void moveLocalExample()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x9F918C", Offset = "0x9F918C", VA = "0x9F918C")]
	public void rotateAroundExample()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x9F92B4", Offset = "0x9F92B4", VA = "0x9F92B4")]
	public void loopPause()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x9F9334", Offset = "0x9F9334", VA = "0x9F9334")]
	public void loopResume()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x9F93B4", Offset = "0x9F93B4", VA = "0x9F93B4")]
	public void punchTest()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x9F944C", Offset = "0x9F944C", VA = "0x9F944C")]
	public TestingZLegacy()
	{
	}
}
[Token(Token = "0x2000030")]
public class TestingZLegacyExt : MonoBehaviour
{
	[Token(Token = "0x20001E7")]
	public delegate void NextFunc();

	[Token(Token = "0x20001E8")]
	public enum TimingType
	{
		[Token(Token = "0x4000AAD")]
		SteadyNormalTime,
		[Token(Token = "0x4000AAE")]
		IgnoreTimeScale,
		[Token(Token = "0x4000AAF")]
		HalfTimeScale,
		[Token(Token = "0x4000AB0")]
		VariableTimeScale,
		[Token(Token = "0x4000AB1")]
		Length
	}

	[Serializable]
	[Token(Token = "0x20001E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C27D0", Offset = "0x5C27D0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<float> <>9__20_0;

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x9FBB68", Offset = "0x9FBB68", VA = "0x9FBB68")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x9FBB70", Offset = "0x9FBB70", VA = "0x9FBB70")]
		internal void <cycleThroughExamples>b__20_0(float val)
		{
		}
	}

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve customAnimationCurve;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform pt1;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pt2;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform pt3;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pt4;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pt5;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int exampleIter;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string[] exampleFunctions;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool useEstimatedTime;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform ltLogo;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TimingType timingType;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int descrTimeScaleChangeId;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 origin;

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x9F9A7C", Offset = "0x9F9A7C", VA = "0x9F9A7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x9F9A80", Offset = "0x9F9A80", VA = "0x9F9A80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x9F9B5C", Offset = "0x9F9B5C", VA = "0x9F9B5C")]
	private void pauseNow()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x9F9BD4", Offset = "0x9F9BD4", VA = "0x9F9BD4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x9F9D20", Offset = "0x9F9D20", VA = "0x9F9D20")]
	private void endlessCallback()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x9F9D8C", Offset = "0x9F9D8C", VA = "0x9F9D8C")]
	private void cycleThroughExamples()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x9FA088", Offset = "0x9FA088", VA = "0x9FA088")]
	public void updateValue3Example()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x9FA290", Offset = "0x9FA290", VA = "0x9FA290")]
	public void updateValue3ExampleUpdate(Vector3 val)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x9FA294", Offset = "0x9FA294", VA = "0x9FA294")]
	public void updateValue3ExampleCallback(Vector3 val)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x9FA2E8", Offset = "0x9FA2E8", VA = "0x9FA2E8")]
	public void loopTestClamp()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x9FA450", Offset = "0x9FA450", VA = "0x9FA450")]
	public void loopTestPingPong()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x9FA5AC", Offset = "0x9FA5AC", VA = "0x9FA5AC")]
	public void colorExample()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x9FA690", Offset = "0x9FA690", VA = "0x9FA690")]
	public void moveOnACurveExample()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x9FA8C0", Offset = "0x9FA8C0", VA = "0x9FA8C0")]
	public void customTweenExample()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x9FAB04", Offset = "0x9FAB04", VA = "0x9FAB04")]
	public void moveExample()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x9FAC08", Offset = "0x9FAC08", VA = "0x9FAC08")]
	public void rotateExample()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x9FAE00", Offset = "0x9FAE00", VA = "0x9FAE00")]
	public void rotateOnUpdate(float val)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x9FAE04", Offset = "0x9FAE04", VA = "0x9FAE04")]
	public void rotateFinished(object hash)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x9FAEEC", Offset = "0x9FAEEC", VA = "0x9FAEEC")]
	public void scaleExample()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x9FAFE0", Offset = "0x9FAFE0", VA = "0x9FAFE0")]
	public void updateValueExample()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x9FB150", Offset = "0x9FB150", VA = "0x9FB150")]
	public void updateValueExampleCallback(float val, object hash)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x9FB1C0", Offset = "0x9FB1C0", VA = "0x9FB1C0")]
	public void delayedCallExample()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x9FB2A0", Offset = "0x9FB2A0", VA = "0x9FB2A0")]
	public void delayedCallExampleCallback()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x9FB394", Offset = "0x9FB394", VA = "0x9FB394")]
	public void alphaExample()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x9FB474", Offset = "0x9FB474", VA = "0x9FB474")]
	public void moveLocalExample()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x9FB5C4", Offset = "0x9FB5C4", VA = "0x9FB5C4")]
	public void rotateAroundExample()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x9FB6A4", Offset = "0x9FB6A4", VA = "0x9FB6A4")]
	public void loopPause()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x9FB6F8", Offset = "0x9FB6F8", VA = "0x9FB6F8")]
	public void loopResume()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x9FB74C", Offset = "0x9FB74C", VA = "0x9FB74C")]
	public void punchTest()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x9FB79C", Offset = "0x9FB79C", VA = "0x9FB79C")]
	public TestingZLegacyExt()
	{
	}
}
[Token(Token = "0x2000031")]
public class GuiButtons : MonoBehaviour
{
	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool ShowPlayerStats;

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x918C1C", Offset = "0x918C1C", VA = "0x918C1C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x919ECC", Offset = "0x919ECC", VA = "0x919ECC")]
	public GuiButtons()
	{
	}
}
[Token(Token = "0x2000032")]
public class LocalizationText
{
	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IDictionary<string, string> _content;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string _language;

	[Token(Token = "0x17000019")]
	private static string Language
	{
		[Token(Token = "0x6000145")]
		[Address(RVA = "0x91CF00", Offset = "0x91CF00", VA = "0x91CF00")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000146")]
		[Address(RVA = "0x91CF68", Offset = "0x91CF68", VA = "0x91CF68")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	private static IDictionary<string, string> Content
	{
		[Token(Token = "0x600014A")]
		[Address(RVA = "0x91D1E4", Offset = "0x91D1E4", VA = "0x91D1E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x919CD0", Offset = "0x919CD0", VA = "0x919CD0")]
	public static string GetText(string key)
	{
		return null;
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x91D324", Offset = "0x91D324", VA = "0x91D324")]
	public static string GetLanguage()
	{
		return null;
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x919E68", Offset = "0x919E68", VA = "0x919E68")]
	public static void SetLanguage(string language)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x91D3C8", Offset = "0x91D3C8", VA = "0x91D3C8")]
	private static IDictionary<string, string> GetContent()
	{
		return null;
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x91D508", Offset = "0x91D508", VA = "0x91D508")]
	private static void AddContent(XmlNode xNode)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x91D014", Offset = "0x91D014", VA = "0x91D014")]
	private static void CreateContent()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x91DDEC", Offset = "0x91DDEC", VA = "0x91DDEC")]
	public LocalizationText()
	{
	}
}
[Token(Token = "0x2000033")]
public class LocalizationUpdateComponentText : MonoBehaviour
{
	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _language;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject WelcomeText;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject lblCastle;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject CarName;

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x91DE80", Offset = "0x91DE80", VA = "0x91DE80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x91E150", Offset = "0x91E150", VA = "0x91E150")]
	private void Update()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x91DEA4", Offset = "0x91DEA4", VA = "0x91DEA4")]
	private void SetAllObjects()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x91DF2C", Offset = "0x91DF2C", VA = "0x91DF2C")]
	private void SetAllText()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x91E1F4", Offset = "0x91E1F4", VA = "0x91E1F4")]
	public LocalizationUpdateComponentText()
	{
	}
}
[Token(Token = "0x2000034")]
public class MTRandom
{
	[Token(Token = "0x20001EA")]
	public enum Normalization
	{
		[Token(Token = "0x4000AB5")]
		STDNORMAL,
		[Token(Token = "0x4000AB6")]
		POWERLAW
	}

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MersenneTwister _rand;

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x95FE58", Offset = "0x95FE58", VA = "0x95FE58")]
	public MTRandom()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x95FEC4", Offset = "0x95FEC4", VA = "0x95FEC4")]
	public MTRandom(int seed)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x95FF40", Offset = "0x95FF40", VA = "0x95FF40")]
	public MTRandom(string phrase)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x960084", Offset = "0x960084", VA = "0x960084")]
	public float value()
	{
		return default(float);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x9600A4", Offset = "0x9600A4", VA = "0x9600A4")]
	public float value(bool includeOne)
	{
		return default(float);
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x9600C4", Offset = "0x9600C4", VA = "0x9600C4")]
	public float valueNorm(float temperature)
	{
		return default(float);
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x96010C", Offset = "0x96010C", VA = "0x96010C")]
	public float valuePower(float temperature)
	{
		return default(float);
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x960158", Offset = "0x960158", VA = "0x960158")]
	public float valuePoisson(float lambda)
	{
		return default(float);
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x9601D4", Offset = "0x9601D4", VA = "0x9601D4")]
	public float valueExponential(float lambda)
	{
		return default(float);
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x960210", Offset = "0x960210", VA = "0x960210")]
	public float valueGamma(int order)
	{
		return default(float);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x96021C", Offset = "0x96021C", VA = "0x96021C")]
	public int Range(int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x960240", Offset = "0x960240", VA = "0x960240")]
	public int Range(int min, int max, bool includeMax)
	{
		return default(int);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x960274", Offset = "0x960274", VA = "0x960274")]
	public float Range(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x9602D8", Offset = "0x9602D8", VA = "0x9602D8")]
	public float RangeNorm(float min, float max, float temperature)
	{
		return default(float);
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x960344", Offset = "0x960344", VA = "0x960344")]
	public float RangePower(float min, float max, float temperature)
	{
		return default(float);
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x9603B4", Offset = "0x9603B4", VA = "0x9603B4")]
	public Color color()
	{
		return default(Color);
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x9603E0", Offset = "0x9603E0", VA = "0x9603E0")]
	public Color color(float min, float max)
	{
		return default(Color);
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x9604B0", Offset = "0x9604B0", VA = "0x9604B0")]
	public Vector2 PointInASquare()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x9604BC", Offset = "0x9604BC", VA = "0x9604BC")]
	public Vector2 PointInASquare(Normalization n, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x9604C8", Offset = "0x9604C8", VA = "0x9604C8")]
	public Vector2 PointInACircle()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x9604D4", Offset = "0x9604D4", VA = "0x9604D4")]
	public Vector2 PointInACircle(Normalization n, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x9604E0", Offset = "0x9604E0", VA = "0x9604E0")]
	public Vector2 PointInADisk()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x9604EC", Offset = "0x9604EC", VA = "0x9604EC")]
	public Vector2 PointInADisk(Normalization n, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x9604F8", Offset = "0x9604F8", VA = "0x9604F8")]
	public Vector3 PointInACube()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x960504", Offset = "0x960504", VA = "0x960504")]
	public Vector3 PointInACube(Normalization n, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x960510", Offset = "0x960510", VA = "0x960510")]
	public Vector3 PointOnACube()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x96051C", Offset = "0x96051C", VA = "0x96051C")]
	public Vector3 PointOnACube(Normalization n, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x960528", Offset = "0x960528", VA = "0x960528")]
	public Vector3 PointOnASphere()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x960534", Offset = "0x960534", VA = "0x960534")]
	public Vector3 PointInASphere()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x960540", Offset = "0x960540", VA = "0x960540")]
	public Vector3 PointOnCap(float spotAngle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x96054C", Offset = "0x96054C", VA = "0x96054C")]
	public Vector3 PointOnRing(float innerAngle, float outerAngle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x9602C0", Offset = "0x9602C0", VA = "0x9602C0")]
	public static float ScaleFloatToRange(float x, float newMin, float newMax, float oldMin, float oldMax)
	{
		return default(float);
	}
}
[Token(Token = "0x2000035")]
public class AppInitializer : DzInitializer
{
	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject PrefabGameManager;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject PrefabSoundManager;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject PrefabParticleManager;

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xA0CC20", Offset = "0xA0CC20", VA = "0xA0CC20", Slot = "7")]
	protected override void OnInitializeApp()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xA0D0EC", Offset = "0xA0D0EC", VA = "0xA0D0EC", Slot = "8")]
	protected override void OnFinalizeApp()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xA0D164", Offset = "0xA0D164", VA = "0xA0D164", Slot = "9")]
	protected override bool OnException(string condition, string stackTrace, LogType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xA0D16C", Offset = "0xA0D16C", VA = "0xA0D16C")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xA0D24C", Offset = "0xA0D24C", VA = "0xA0D24C")]
	public AppInitializer()
	{
	}
}
[Token(Token = "0x2000036")]
public class CPai : DzMonoBehaviour<CPai>
{
	[Token(Token = "0x20001EB")]
	public enum PaiMaterialType
	{
		[Token(Token = "0x4000AB8")]
		MATERIAL_NULL,
		[Token(Token = "0x4000AB9")]
		MATERIAL_NORMAL,
		[Token(Token = "0x4000ABA")]
		MATERIAL_NORMAL_FLIP,
		[Token(Token = "0x4000ABB")]
		MATERIAL_SHUFFLE,
		[Token(Token = "0x4000ABC")]
		MATERIAL_REFLECTION
	}

	[Token(Token = "0x20001EC")]
	public struct PaiDrawingFlags
	{
		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool current;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool select;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool select_swap;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public bool reverse;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool highlight;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool block;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public bool relation;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public bool match;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool vibration;

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xA11738", Offset = "0xA11738", VA = "0xA11738")]
		public PaiDrawingFlags(bool inFlag)
		{
		}
	}

	[Token(Token = "0x20001ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C27E0", Offset = "0x5C27E0")]
	private sealed class <>c__DisplayClass93_0
	{
		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CPai <>4__this;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action inComplateAction;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NikaSnd_SE inSndID;

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xA135C8", Offset = "0xA135C8", VA = "0xA135C8")]
		public <>c__DisplayClass93_0()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xA1516C", Offset = "0xA1516C", VA = "0xA1516C")]
		internal void <EffectTurnPai>b__0()
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xA151C0", Offset = "0xA151C0", VA = "0xA151C0")]
		internal void <EffectTurnPai>b__1()
		{
		}
	}

	[Token(Token = "0x20001EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C27F0", Offset = "0x5C27F0")]
	private sealed class <>c__DisplayClass94_0
	{
		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CPai <>4__this;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject inBtnEffectPai;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NikaSnd_SE inSndID;

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xA13910", Offset = "0xA13910", VA = "0xA13910")]
		public <>c__DisplayClass94_0()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xA15240", Offset = "0xA15240", VA = "0xA15240")]
		internal void <EffectTestTurnPai>b__0()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xA1530C", Offset = "0xA1530C", VA = "0xA1530C")]
		internal void <EffectTestTurnPai>b__1()
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xA1538C", Offset = "0xA1538C", VA = "0xA1538C")]
		internal void <EffectTestTurnPai>b__2()
		{
		}
	}

	[Token(Token = "0x20001EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2800", Offset = "0x5C2800")]
	private sealed class <>c__DisplayClass95_0
	{
		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action inComplateAction;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NikaSnd_SE inSndID;

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xA13BBC", Offset = "0xA13BBC", VA = "0xA13BBC")]
		public <>c__DisplayClass95_0()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xA15458", Offset = "0xA15458", VA = "0xA15458")]
		internal void <EffectSelectPai>b__0()
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xA1546C", Offset = "0xA1546C", VA = "0xA1546C")]
		internal void <EffectSelectPai>b__1()
		{
		}
	}

	[Token(Token = "0x20001F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2810", Offset = "0x5C2810")]
	private sealed class <>c__DisplayClass96_0
	{
		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CPai <>4__this;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action inComplateAction;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NikaSnd_SE inSndID;

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xA13BC4", Offset = "0xA13BC4", VA = "0xA13BC4")]
		public <>c__DisplayClass96_0()
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xA154EC", Offset = "0xA154EC", VA = "0xA154EC")]
		internal void <EffectUnSelectPai>b__0()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xA15534", Offset = "0xA15534", VA = "0xA15534")]
		internal void <EffectUnSelectPai>b__1()
		{
		}
	}

	[Token(Token = "0x20001F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2820", Offset = "0x5C2820")]
	private sealed class <>c__DisplayClass97_0
	{
		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action inComplateAction;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NikaSnd_SE inSndID;

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xA13DEC", Offset = "0xA13DEC", VA = "0xA13DEC")]
		public <>c__DisplayClass97_0()
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xA155B4", Offset = "0xA155B4", VA = "0xA155B4")]
		internal void <EffectSelectSwapPai>b__0()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xA155C8", Offset = "0xA155C8", VA = "0xA155C8")]
		internal void <EffectSelectSwapPai>b__1()
		{
		}
	}

	[Token(Token = "0x20001F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2830", Offset = "0x5C2830")]
	private sealed class <>c__DisplayClass98_0
	{
		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CPai <>4__this;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action inComplateAction;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NikaSnd_SE inSndID;

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xA13DF4", Offset = "0xA13DF4", VA = "0xA13DF4")]
		public <>c__DisplayClass98_0()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xA15648", Offset = "0xA15648", VA = "0xA15648")]
		internal void <EffectUnSelectSwapPai>b__0()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xA15690", Offset = "0xA15690", VA = "0xA15690")]
		internal void <EffectUnSelectSwapPai>b__1()
		{
		}
	}

	[Token(Token = "0x20001F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2840", Offset = "0x5C2840")]
	private sealed class <>c__DisplayClass100_0
	{
		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NikaSnd_SE inSndID;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 inTouchPoint;

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xA141BC", Offset = "0xA141BC", VA = "0xA141BC")]
		public <>c__DisplayClass100_0()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xA14FF4", Offset = "0xA14FF4", VA = "0xA14FF4")]
		internal void <EffectShakePai>b__0()
		{
		}
	}

	[Token(Token = "0x20001F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2850", Offset = "0x5C2850")]
	private sealed class <>c__DisplayClass101_0
	{
		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CPai <>4__this;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float inDurationTime;

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xA14348", Offset = "0xA14348", VA = "0xA14348")]
		public <>c__DisplayClass101_0()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xA15078", Offset = "0xA15078", VA = "0xA15078")]
		internal void <EffectVibrationPai>b__0()
		{
		}
	}

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] _paiPrefabs;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material _paiMaterial;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material _paiMaterial_Flip;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material _paiShuffleMaterial;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material _paiMaterial_Ref;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator _frameAnimator;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject _blockSprite;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CPaiData _paiData;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _touchEnabled;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CPai[] _samePaiList;

	[NonSerialized]
	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PaiDrawingFlags _flagPaiDrawing;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _oldSharedMeshName;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PaiMaterialType _oldPaiMaterial;

	[Token(Token = "0x400013D")]
	private const float TIME_HIGHLIGHT_PAI = 0.3f;

	[Token(Token = "0x400013E")]
	private const float LIMIT_EFFECT_DURATION = 0.2f;

	[Token(Token = "0x400013F")]
	private const float ROTATE_SELECT_PAI = -30f;

	[Token(Token = "0x4000140")]
	private const float TIME_SHAKE_PAI = 0.1f;

	[Token(Token = "0x4000141")]
	private const float ROTATE_SHAKE_PAI = 5f;

	[Token(Token = "0x4000142")]
	private const float TIME_VIBRATION_PAI = 0.15f;

	[Token(Token = "0x4000143")]
	private const float ROTATE_VIBRATION_PAI = 5f;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject s_PrefabPai;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float s_DurationFactor;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static bool s_IsKinematic;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Transform s_Grp_PaiTable;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float s_Scale_PaiStage;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static NikaPaiSuspendType s_PaiSuspend;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static PaiMaterialType s_DefaultPaiMaterialType;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static int s_PaiCount_GiveUp;

	[Token(Token = "0x1700001B")]
	public CPaiData PaiData
	{
		[Token(Token = "0x600017A")]
		[Address(RVA = "0xA11338", Offset = "0xA11338", VA = "0xA11338")]
		get
		{
			return null;
		}
		[Token(Token = "0x600017B")]
		[Address(RVA = "0xA11340", Offset = "0xA11340", VA = "0xA11340")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public int PaiID
	{
		[Token(Token = "0x600017C")]
		[Address(RVA = "0xA11348", Offset = "0xA11348", VA = "0xA11348")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600017D")]
		[Address(RVA = "0xA11364", Offset = "0xA11364", VA = "0xA11364")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public DzPoint PaiPos
	{
		[Token(Token = "0x600017E")]
		[Address(RVA = "0xA11380", Offset = "0xA11380", VA = "0xA11380")]
		get
		{
			return default(DzPoint);
		}
		[Token(Token = "0x600017F")]
		[Address(RVA = "0xA1139C", Offset = "0xA1139C", VA = "0xA1139C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public bool Flip
	{
		[Token(Token = "0x6000180")]
		[Address(RVA = "0xA113B8", Offset = "0xA113B8", VA = "0xA113B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000181")]
		[Address(RVA = "0xA113D4", Offset = "0xA113D4", VA = "0xA113D4")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public bool OpenFlag
	{
		[Token(Token = "0x6000182")]
		[Address(RVA = "0xA113F4", Offset = "0xA113F4", VA = "0xA113F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000183")]
		[Address(RVA = "0xA11410", Offset = "0xA11410", VA = "0xA11410")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public bool BlockFlag
	{
		[Token(Token = "0x6000184")]
		[Address(RVA = "0xA11430", Offset = "0xA11430", VA = "0xA11430")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000185")]
		[Address(RVA = "0xA1144C", Offset = "0xA1144C", VA = "0xA1144C")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public bool MatchFlag
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0xA1146C", Offset = "0xA1146C", VA = "0xA1146C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000187")]
		[Address(RVA = "0xA11488", Offset = "0xA11488", VA = "0xA11488")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public bool SearchMark
	{
		[Token(Token = "0x6000188")]
		[Address(RVA = "0xA10748", Offset = "0xA10748", VA = "0xA10748")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000189")]
		[Address(RVA = "0xA114A8", Offset = "0xA114A8", VA = "0xA114A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public bool BlockMark
	{
		[Token(Token = "0x600018A")]
		[Address(RVA = "0xA114C8", Offset = "0xA114C8", VA = "0xA114C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600018B")]
		[Address(RVA = "0xA114E4", Offset = "0xA114E4", VA = "0xA114E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public bool CheckedMark
	{
		[Token(Token = "0x600018C")]
		[Address(RVA = "0xA11504", Offset = "0xA11504", VA = "0xA11504")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600018D")]
		[Address(RVA = "0xA11520", Offset = "0xA11520", VA = "0xA11520")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public PaiDrawingFlags FlagPaiDrawing
	{
		[Token(Token = "0x600018E")]
		[Address(RVA = "0xA11540", Offset = "0xA11540", VA = "0xA11540")]
		get
		{
			return default(PaiDrawingFlags);
		}
		[Token(Token = "0x600018F")]
		[Address(RVA = "0xA11550", Offset = "0xA11550", VA = "0xA11550")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public bool IsTouchablePai
	{
		[Token(Token = "0x6000196")]
		[Address(RVA = "0xA11AAC", Offset = "0xA11AAC", VA = "0xA11AAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000027")]
	public bool IsThru
	{
		[Token(Token = "0x6000199")]
		[Address(RVA = "0xA11B14", Offset = "0xA11B14", VA = "0xA11B14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000028")]
	public bool IsExistSamePai
	{
		[Token(Token = "0x600019C")]
		[Address(RVA = "0xA11BE4", Offset = "0xA11BE4", VA = "0xA11BE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000029")]
	public static GameObject S_PrefabPai
	{
		[Token(Token = "0x60001C0")]
		[Address(RVA = "0xA147D0", Offset = "0xA147D0", VA = "0xA147D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001C1")]
		[Address(RVA = "0xA14838", Offset = "0xA14838", VA = "0xA14838")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public static float S_DurationFactor
	{
		[Token(Token = "0x60001C2")]
		[Address(RVA = "0xA148A4", Offset = "0xA148A4", VA = "0xA148A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0xA1490C", Offset = "0xA1490C", VA = "0xA1490C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public static bool S_IsKinematic
	{
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0xA14980", Offset = "0xA14980", VA = "0xA14980")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0xA149E8", Offset = "0xA149E8", VA = "0xA149E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public static Transform S_Grp_PaiTable
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xA14A58", Offset = "0xA14A58", VA = "0xA14A58")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0xA14AC0", Offset = "0xA14AC0", VA = "0xA14AC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public static float S_Scale_PaiStage
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0xA14B2C", Offset = "0xA14B2C", VA = "0xA14B2C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0xA14B94", Offset = "0xA14B94", VA = "0xA14B94")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public static NikaPaiSuspendType S_PaiSuspend
	{
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0xA14C08", Offset = "0xA14C08", VA = "0xA14C08")]
		get
		{
			return default(NikaPaiSuspendType);
		}
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0xA14C70", Offset = "0xA14C70", VA = "0xA14C70")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public static PaiMaterialType S_DefaultPaiMaterialType
	{
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0xA14CDC", Offset = "0xA14CDC", VA = "0xA14CDC")]
		get
		{
			return default(PaiMaterialType);
		}
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0xA14D44", Offset = "0xA14D44", VA = "0xA14D44")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public static int S_PaiCount_GiveUp
	{
		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xA14DB0", Offset = "0xA14DB0", VA = "0xA14DB0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xA14E18", Offset = "0xA14E18", VA = "0xA14E18")]
		set
		{
		}
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xA1155C", Offset = "0xA1155C", VA = "0xA1155C", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xA11758", Offset = "0xA11758", VA = "0xA11758", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xA11760", Offset = "0xA11760", VA = "0xA11760", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xA11764", Offset = "0xA11764", VA = "0xA11764")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xA11768", Offset = "0xA11768", VA = "0xA11768")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xA1176C", Offset = "0xA1176C", VA = "0xA1176C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xA11AB4", Offset = "0xA11AB4", VA = "0xA11AB4")]
	public void TouchablePai(PaiManager.PaiTouchableType inPaiTouchableType)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xA11750", Offset = "0xA11750", VA = "0xA11750")]
	public void UnTouchablePai()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xA11B48", Offset = "0xA11B48", VA = "0xA11B48")]
	public bool IsSamePai(CPai inPai)
	{
		return default(bool);
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xA11B80", Offset = "0xA11B80", VA = "0xA11B80")]
	public void RemoveSamePai()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xA11D18", Offset = "0xA11D18", VA = "0xA11D18")]
	public int CountBlockMarkSamePai()
	{
		return default(int);
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xA11DAC", Offset = "0xA11DAC", VA = "0xA11DAC")]
	public void ResetPaiPosToLocalPosition(bool inZeroReset = false)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xA11E50", Offset = "0xA11E50", VA = "0xA11E50")]
	public void ResetPaiRotation()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xA11FB4", Offset = "0xA11FB4", VA = "0xA11FB4")]
	public void Draw()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xA121D0", Offset = "0xA121D0", VA = "0xA121D0")]
	public void Open()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xA12280", Offset = "0xA12280", VA = "0xA12280")]
	public void Reverse()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xA12640", Offset = "0xA12640", VA = "0xA12640")]
	public void ShowPai()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xA12668", Offset = "0xA12668", VA = "0xA12668")]
	public void HidePai()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xA12690", Offset = "0xA12690", VA = "0xA12690")]
	public void DrawCurrentPai([Optional] CPai inBeforeCurrentPai)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xA12794", Offset = "0xA12794", VA = "0xA12794")]
	public void EraseCurrentPai()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xA12338", Offset = "0xA12338", VA = "0xA12338")]
	public void DrawHighlightPai()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xA1241C", Offset = "0xA1241C", VA = "0xA1241C")]
	public void EraseHighlightPai()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xA124F4", Offset = "0xA124F4", VA = "0xA124F4")]
	public void DrawBlockPai()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xA1259C", Offset = "0xA1259C", VA = "0xA1259C")]
	public void EraseBlockPai()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xA12868", Offset = "0xA12868", VA = "0xA12868")]
	public void DrawRelationPai()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xA12914", Offset = "0xA12914", VA = "0xA12914")]
	public void EraseRelationPai()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xA1298C", Offset = "0xA1298C", VA = "0xA1298C")]
	public void AdjustRelateSamePai(bool inNavigatePaiFlag, [Optional] CPai inBeforeEraseRelationPai)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xA12A94", Offset = "0xA12A94", VA = "0xA12A94")]
	public void EraseRelateSamePai()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xA120CC", Offset = "0xA120CC", VA = "0xA120CC")]
	private void SubSetupPaiMeshAndMaterial()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xA12AFC", Offset = "0xA12AFC", VA = "0xA12AFC")]
	private void SubSwitchMesh(int inPaiID)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xA12C2C", Offset = "0xA12C2C", VA = "0xA12C2C")]
	private void SubSwitchMaterial(PaiMaterialType inPaiMaterial)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xA12D30", Offset = "0xA12D30", VA = "0xA12D30")]
	public void RevokePaiEffect(float inDurationTime, [Optional] Action inComplateAction)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xA132DC", Offset = "0xA132DC", VA = "0xA132DC")]
	public void EffectTurnPai(float inDurationTime = 0f, float inDelayTime = 0f, NikaSnd_SE inSndID = NikaSnd_SE.SND_NONE, [Optional] Action inComplateAction)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xA135D0", Offset = "0xA135D0", VA = "0xA135D0")]
	public void EffectTestTurnPai(float inDurationTime, float inDurationFactor, GameObject inBtnEffectPai, NikaSnd_SE inSndID = NikaSnd_SE.SND_NONE)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xA13918", Offset = "0xA13918", VA = "0xA13918")]
	public void EffectSelectPai(float inDurationTime, NikaSnd_SE inSndID = NikaSnd_SE.SND_NONE, [Optional] Action inComplateAction)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xA12D68", Offset = "0xA12D68", VA = "0xA12D68")]
	public void EffectUnSelectPai(float inDurationTime, NikaSnd_SE inSndID = NikaSnd_SE.SND_NONE, [Optional] Action inComplateAction)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xA13BCC", Offset = "0xA13BCC", VA = "0xA13BCC")]
	public void EffectSelectSwapPai(float inDurationTime, NikaSnd_SE inSndID = NikaSnd_SE.SND_NONE, [Optional] Action inComplateAction)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xA13080", Offset = "0xA13080", VA = "0xA13080")]
	public void EffectUnSelectSwapPai(float inDurationTime, NikaSnd_SE inSndID = NikaSnd_SE.SND_NONE, [Optional] Action inComplateAction)
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xA13DFC", Offset = "0xA13DFC", VA = "0xA13DFC")]
	public void EffectParticlePai(int EmitCount)
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xA13FAC", Offset = "0xA13FAC", VA = "0xA13FAC")]
	public void EffectShakePai(Vector2 inTouchPoint, NikaSnd_SE inSndID = NikaSnd_SE.SND_NONE)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xA141C4", Offset = "0xA141C4", VA = "0xA141C4")]
	public void EffectVibrationPai(float inDurationTime)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xA14350", Offset = "0xA14350", VA = "0xA14350")]
	public void EffectUnVibrationPai()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xA143EC", Offset = "0xA143EC", VA = "0xA143EC")]
	public static CPai CreatePai(int inPaiNum, bool inFlip)
	{
		return null;
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xA1457C", Offset = "0xA1457C", VA = "0xA1457C")]
	public static CPai CreatePai(CPaiData inPaiData)
	{
		return null;
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xA146F0", Offset = "0xA146F0", VA = "0xA146F0")]
	public void AppendSamePai(CPai inPai1, CPai inPai2, CPai inPai3)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xA14E84", Offset = "0xA14E84", VA = "0xA14E84")]
	public static void ReflectPaiPreference(CPrefModel inPrefModel)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xA14EFC", Offset = "0xA14EFC", VA = "0xA14EFC")]
	public CPai()
	{
	}
}
[Serializable]
[Token(Token = "0x2000037")]
public class CPaiData : DzSerializableObject<CPaiData>
{
	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int _paiID;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private DzPoint _paiPos;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _flip;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool _openFlag;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool _blockFlag;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	private bool _matchFlag;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _searchMark;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _blockMark;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool _checkedMark;

	[Token(Token = "0x17000031")]
	public int PaiID
	{
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0xA15710", Offset = "0xA15710", VA = "0xA15710")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0xA15718", Offset = "0xA15718", VA = "0xA15718")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public DzPoint PaiPos
	{
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0xA15720", Offset = "0xA15720", VA = "0xA15720")]
		get
		{
			return default(DzPoint);
		}
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xA15728", Offset = "0xA15728", VA = "0xA15728")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public bool Flip
	{
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0xA15730", Offset = "0xA15730", VA = "0xA15730")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0xA15738", Offset = "0xA15738", VA = "0xA15738")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public bool OpenFlag
	{
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0xA15744", Offset = "0xA15744", VA = "0xA15744")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xA1574C", Offset = "0xA1574C", VA = "0xA1574C")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public bool BlockFlag
	{
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xA15758", Offset = "0xA15758", VA = "0xA15758")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xA15760", Offset = "0xA15760", VA = "0xA15760")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public bool MatchFlag
	{
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xA1576C", Offset = "0xA1576C", VA = "0xA1576C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xA15774", Offset = "0xA15774", VA = "0xA15774")]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public bool SearchMark
	{
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xA15780", Offset = "0xA15780", VA = "0xA15780")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xA15788", Offset = "0xA15788", VA = "0xA15788")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public bool BlockMark
	{
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xA15794", Offset = "0xA15794", VA = "0xA15794")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xA1579C", Offset = "0xA1579C", VA = "0xA1579C")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public bool CheckedMark
	{
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xA157A8", Offset = "0xA157A8", VA = "0xA157A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xA157B0", Offset = "0xA157B0", VA = "0xA157B0")]
		set
		{
		}
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xA157BC", Offset = "0xA157BC", VA = "0xA157BC", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xA157F8", Offset = "0xA157F8", VA = "0xA157F8", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xA116E8", Offset = "0xA116E8", VA = "0xA116E8")]
	public CPaiData()
	{
	}
}
[Token(Token = "0x2000038")]
public class CStageDefine : DzSerializableObject<CStageDefine>
{
	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int _maxPaiChange;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int _maxPaiCount;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _paiCount;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _paiH;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _paiV;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _stageScale;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _stagePosition;

	[Token(Token = "0x1700003A")]
	public int MaxPaiChange
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xA15C78", Offset = "0xA15C78", VA = "0xA15C78")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003B")]
	public int MaxPaiCount
	{
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xA15C80", Offset = "0xA15C80", VA = "0xA15C80")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003C")]
	public int PaiCount
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xA15C88", Offset = "0xA15C88", VA = "0xA15C88")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003D")]
	public int PaiH
	{
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xA15C90", Offset = "0xA15C90", VA = "0xA15C90")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003E")]
	public int PaiV
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xA15C98", Offset = "0xA15C98", VA = "0xA15C98")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003F")]
	public float StageScale
	{
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0xA15CA0", Offset = "0xA15CA0", VA = "0xA15CA0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000040")]
	public Vector3 StagePosition
	{
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0xA15CA8", Offset = "0xA15CA8", VA = "0xA15CA8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xA15CB4", Offset = "0xA15CB4", VA = "0xA15CB4")]
	public static CStageDefine CreateStage(int inNo, int inPaiCount, int inPaiH, int inPaiV, float inStageScale, Vector3 inStagePosition)
	{
		return null;
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xA15DB4", Offset = "0xA15DB4", VA = "0xA15DB4", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xA15DB8", Offset = "0xA15DB8", VA = "0xA15DB8", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xA15D64", Offset = "0xA15D64", VA = "0xA15D64")]
	public CStageDefine()
	{
	}
}
[Token(Token = "0x2000039")]
public class PaiManager : DzMonoBehaviour<PaiManager>
{
	[Token(Token = "0x20001F5")]
	public enum PaiSetupType
	{
		[Token(Token = "0x4000ADB")]
		SETUP_NONE,
		[Token(Token = "0x4000ADC")]
		SETUP_TITLE_PAITABLE,
		[Token(Token = "0x4000ADD")]
		SETUP_GAME_PAITABLE
	}

	[Token(Token = "0x20001F6")]
	private struct PaiPointRec
	{
		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public DzPoint topPoint;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public DzPoint rightPoint;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DzPoint bottomPoint;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DzPoint leftPoint;
	}

	[Token(Token = "0x20001F7")]
	private struct PareMatchRec
	{
		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool pareCheckEnd;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public CPai matchPai;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HashSet<CPai> matchPaiHashSet;

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x8BB57C", Offset = "0x8BB57C", VA = "0x8BB57C")]
		public PareMatchRec(CPai inPai)
		{
		}
	}

	[Token(Token = "0x20001F8")]
	private struct PaiEffectOrder
	{
		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NikaPaiEffectModeType effectType;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float effectDuration;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public CPai effectPai1;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CPai effectPai2;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NikaSnd_SE effectSound;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> destroyList;
	}

	[Token(Token = "0x20001F9")]
	public enum PaiTouchableType
	{
		[Token(Token = "0x4000AEC")]
		TOUCHABLE_ALL_PAI,
		[Token(Token = "0x4000AED")]
		TOUCHABLE_OPEN_PAI,
		[Token(Token = "0x4000AEE")]
		TOUCHABLE_BLOCK_PAI
	}

	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2860", Offset = "0x5C2860")]
	private sealed class <>c__DisplayClass44_0
	{
		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PaiEffectOrder effectOrder;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PaiManager <>4__this;

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xA8D764", Offset = "0xA8D764", VA = "0xA8D764")]
		public <>c__DisplayClass44_0()
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xA95BD0", Offset = "0xA95BD0", VA = "0xA95BD0")]
		internal void <Update>b__0()
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xA95C04", Offset = "0xA95C04", VA = "0xA95C04")]
		internal void <Update>b__1()
		{
		}
	}

	[Token(Token = "0x20001FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2870", Offset = "0x5C2870")]
	private sealed class <>c__DisplayClass44_1
	{
		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject go;

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xA8E764", Offset = "0xA8E764", VA = "0xA8E764")]
		public <>c__DisplayClass44_1()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xA95C38", Offset = "0xA95C38", VA = "0xA95C38")]
		internal void <Update>b__11()
		{
		}
	}

	[Token(Token = "0x20001FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2880", Offset = "0x5C2880")]
	private sealed class <>c__DisplayClass55_0
	{
		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action inComplateAction;

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xA8F834", Offset = "0xA8F834", VA = "0xA8F834")]
		public <>c__DisplayClass55_0()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xA95CA4", Offset = "0xA95CA4", VA = "0xA95CA4")]
		internal void <SubIgnitionBombAndWaitting>b__0()
		{
		}
	}

	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2890", Offset = "0x5C2890")]
	private sealed class <>c__DisplayClass56_0
	{
		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action inComplateAction;

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x8BB008", Offset = "0x8BB008", VA = "0x8BB008")]
		public <>c__DisplayClass56_0()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x8BB010", Offset = "0x8BB010", VA = "0x8BB010")]
		internal void <SubExplosionBomb>b__0()
		{
		}
	}

	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C28A0", Offset = "0x5C28A0")]
	private sealed class <>c__DisplayClass58_0
	{
		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int retOpenBlockCount;

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x8BB024", Offset = "0x8BB024", VA = "0x8BB024")]
		public <>c__DisplayClass58_0()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x8BB02C", Offset = "0x8BB02C", VA = "0x8BB02C")]
		internal void <CountOpenBlockPai>b__0(CPai inPai)
		{
		}
	}

	[Token(Token = "0x20001FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C28B0", Offset = "0x5C28B0")]
	private sealed class <>c__DisplayClass59_0
	{
		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<CPai> thePaiArray;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PaiManager <>4__this;

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x8BB080", Offset = "0x8BB080", VA = "0x8BB080")]
		public <>c__DisplayClass59_0()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x8BB088", Offset = "0x8BB088", VA = "0x8BB088")]
		internal void <DoShuffle>b__0(CPai inPai)
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x8BB124", Offset = "0x8BB124", VA = "0x8BB124")]
		internal void <DoShuffle>b__1()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C28C0", Offset = "0x5C28C0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__59_2;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<CPai> <>9__74_0;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<CPai> <>9__74_2;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<CPai> <>9__76_0;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action<CPai> <>9__79_0;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action<CPai> <>9__80_0;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Action<CPai> <>9__83_0;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Action<CPai> <>9__84_0;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Action<CPai> <>9__85_0;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Action<CPai> <>9__85_2;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static Action<CPai> <>9__119_0;

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xA95848", Offset = "0xA95848", VA = "0xA95848")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xA95850", Offset = "0xA95850", VA = "0xA95850")]
		internal void <DoShuffle>b__59_2()
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xA9593C", Offset = "0xA9593C", VA = "0xA9593C")]
		internal void <GiveUpPai>b__74_0(CPai inPai)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xA95A68", Offset = "0xA95A68", VA = "0xA95A68")]
		internal void <GiveUpPai>b__74_2(CPai inPai)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xA95A84", Offset = "0xA95A84", VA = "0xA95A84")]
		internal void <SubDrawPaiTable>b__76_0(CPai inPai)
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xA95AA0", Offset = "0xA95AA0", VA = "0xA95AA0")]
		internal void <SubShowPaiTable>b__79_0(CPai inPai)
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xA95ABC", Offset = "0xA95ABC", VA = "0xA95ABC")]
		internal void <SubHidePaiTable>b__80_0(CPai inPai)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xA95AD8", Offset = "0xA95AD8", VA = "0xA95AD8")]
		internal void <CountAvailablePai>b__83_0(CPai inPai)
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xA95AF8", Offset = "0xA95AF8", VA = "0xA95AF8")]
		internal void <DoSearch>b__84_0(CPai inPai)
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xA95B18", Offset = "0xA95B18", VA = "0xA95B18")]
		internal void <AutoOpenSearchPai>b__85_0(CPai inPai)
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xA95B38", Offset = "0xA95B38", VA = "0xA95B38")]
		internal void <AutoOpenSearchPai>b__85_2(CPai inPai)
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xA95B90", Offset = "0xA95B90", VA = "0xA95B90")]
		internal void <SubUnTouchablePaiTable>b__119_0(CPai inPai)
		{
		}
	}

	[Token(Token = "0x2000201")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C28D0", Offset = "0x5C28D0")]
	private sealed class <>c__DisplayClass74_0
	{
		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PaiManager <>4__this;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action inAction;

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x8BB20C", Offset = "0x8BB20C", VA = "0x8BB20C")]
		public <>c__DisplayClass74_0()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x8BB214", Offset = "0x8BB214", VA = "0x8BB214")]
		internal void <GiveUpPai>b__1()
		{
		}
	}

	[Token(Token = "0x2000202")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C28E0", Offset = "0x5C28E0")]
	private sealed class <>c__DisplayClass82_0
	{
		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action inComplateAction;

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x8BB31C", Offset = "0x8BB31C", VA = "0x8BB31C")]
		public <>c__DisplayClass82_0()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x8BB324", Offset = "0x8BB324", VA = "0x8BB324")]
		internal void <SubDrawSwappingPai>b__0()
		{
		}
	}

	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C28F0", Offset = "0x5C28F0")]
	private sealed class <>c__DisplayClass83_0
	{
		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PaiManager <>4__this;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int retAvailableCount;

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x8BB3BC", Offset = "0x8BB3BC", VA = "0x8BB3BC")]
		public <>c__DisplayClass83_0()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x8BB3C4", Offset = "0x8BB3C4", VA = "0x8BB3C4")]
		internal void <CountAvailablePai>b__1(CPai inPai)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x8BB418", Offset = "0x8BB418", VA = "0x8BB418")]
		internal void <CountAvailablePai>b__2(CPai inPai)
		{
		}
	}

	[Token(Token = "0x2000204")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2900", Offset = "0x5C2900")]
	private sealed class <>c__DisplayClass93_0
	{
		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PaiManager <>4__this;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CPai inPai;

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x8BB480", Offset = "0x8BB480", VA = "0x8BB480")]
		public <>c__DisplayClass93_0()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x8BB488", Offset = "0x8BB488", VA = "0x8BB488")]
		internal void <SubMarkingSearchMarkPai>b__0(int inDirection)
		{
		}
	}

	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2910", Offset = "0x5C2910")]
	private sealed class <>c__DisplayClass94_0
	{
		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PaiManager <>4__this;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CPai inPai;

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x8BB4D4", Offset = "0x8BB4D4", VA = "0x8BB4D4")]
		public <>c__DisplayClass94_0()
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x8BB4DC", Offset = "0x8BB4DC", VA = "0x8BB4DC")]
		internal void <SubMarkingMatchPai>b__0(int inDirection)
		{
		}
	}

	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2920", Offset = "0x5C2920")]
	private sealed class <>c__DisplayClass95_0
	{
		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PaiManager <>4__this;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CPai inPai;

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x8BB528", Offset = "0x8BB528", VA = "0x8BB528")]
		public <>c__DisplayClass95_0()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x8BB530", Offset = "0x8BB530", VA = "0x8BB530")]
		internal void <SubMarkingCheckedMarkPai>b__0(int inDirection)
		{
		}
	}

	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2930", Offset = "0x5C2930")]
	private sealed class <>c__DisplayClass118_0
	{
		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PaiTouchableType inPaiTouchableType;

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xA955C8", Offset = "0xA955C8", VA = "0xA955C8")]
		public <>c__DisplayClass118_0()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xA95BAC", Offset = "0xA95BAC", VA = "0xA95BAC")]
		internal void <SubTouchablePaiTable>b__0(CPai inPai)
		{
		}
	}

	[Token(Token = "0x400015C")]
	private const int MAX_PAI_H = 21;

	[Token(Token = "0x400015D")]
	private const int MAX_PAI_V = 12;

	[Token(Token = "0x400015E")]
	public const float TIME_ALLOPEN_TURN = 0.15f;

	[Token(Token = "0x400015F")]
	private const float DELAY_ALLOPEN_LINE = 0.2f;

	[Token(Token = "0x4000160")]
	private const float TIME_SELECT_PAI = 0.25f;

	[Token(Token = "0x4000161")]
	private const float TIME_SWAP_ROUTE = 1f;

	[Token(Token = "0x4000162")]
	private const float WAIT_SHUFFLE_PAI = 2f;

	[Token(Token = "0x4000163")]
	private const float TIME_VIBRATION_PAI = 0.25f;

	[Token(Token = "0x4000164")]
	private const float WAIT_BOMB_PAI = 2f;

	[Token(Token = "0x4000165")]
	private const float TIME_BOMB_EXPLOSION = 1.5f;

	[Token(Token = "0x4000166")]
	private const float FORCE_BURST_IMPLUS_PAI = 50f;

	[Token(Token = "0x4000167")]
	private const float FORCE_ROTATE_TORQUE_PAI = 200f;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _prefabPai;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _prefabRouteLine;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _prefabPaiSphere;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _prefabBomb;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PaiSetupType _paiSetupType;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CPrefModel _prefModel;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CTempModel _tempModel;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CPaiModel _paiModel;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CStageDefine _stageDef;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<CPai> _paiArray;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CPai[,] _paiTable;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CPai _dummyThruPai;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CPai _dummyWallPai;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CPai _currentPai;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _selectPaiCnt;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CPai[] _selectPai;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private DzPoint[] _directionOffset;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject _bombBall;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool _bombIgnitioned;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Queue<PaiEffectOrder> _paiEffectQueue;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _paiEffectDone1;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool _paiEffectDone2;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private PareMatchRec _pareMatchRec;

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xA8C3F4", Offset = "0xA8C3F4", VA = "0xA8C3F4", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xA8C6B8", Offset = "0xA8C6B8", VA = "0xA8C6B8", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xA8C6BC", Offset = "0xA8C6BC", VA = "0xA8C6BC", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xA8C6C0", Offset = "0xA8C6C0", VA = "0xA8C6C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xA8C86C", Offset = "0xA8C86C", VA = "0xA8C86C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xA8CA18", Offset = "0xA8CA18", VA = "0xA8CA18")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xA8E76C", Offset = "0xA8E76C", VA = "0xA8E76C")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xA8E770", Offset = "0xA8E770", VA = "0xA8E770")]
	private void OnGameRun()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xA8E90C", Offset = "0xA8E90C", VA = "0xA8E90C")]
	private void OnGameStop()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xA8EBFC", Offset = "0xA8EBFC", VA = "0xA8EBFC")]
	private void OnGameFinish()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xA8ECE8", Offset = "0xA8ECE8", VA = "0xA8ECE8")]
	private void OnGameModeChange()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xA8EE00", Offset = "0xA8EE00", VA = "0xA8EE00")]
	private void OnPrefModelChange()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xA8EEA8", Offset = "0xA8EEA8", VA = "0xA8EEA8")]
	private void SubPaiReset()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xA8F1AC", Offset = "0xA8F1AC", VA = "0xA8F1AC")]
	private void ActionLoopPaiTable(Action<CPai> inAction)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xA8F2B0", Offset = "0xA8F2B0", VA = "0xA8F2B0")]
	private void SubTouchMovedBomb(CPai inPai)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xA8F680", Offset = "0xA8F680", VA = "0xA8F680")]
	private void SubTouchEndedBomb(CPai inPai)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xA8E400", Offset = "0xA8E400", VA = "0xA8E400")]
	private void SubIgnitionBombAndWaitting(float inWaitTime, NikaSnd_SE inSndID = NikaSnd_SE.SND_NONE, [Optional] Action inComplateAction)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xA8E558", Offset = "0xA8E558", VA = "0xA8E558")]
	private void SubExplosionBomb(float inDurationTime, NikaSnd_SE inSndID = NikaSnd_SE.SND_NONE, [Optional] Action inComplateAction)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xA8F56C", Offset = "0xA8F56C", VA = "0xA8F56C")]
	private void SubRemoveBomb(bool inDestroyBomb = true, bool inUnVibration = true)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xA8F83C", Offset = "0xA8F83C", VA = "0xA8F83C")]
	public int CountOpenBlockPai()
	{
		return default(int);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xA8F8F0", Offset = "0xA8F8F0", VA = "0xA8F8F0")]
	public void DoShuffle()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xA8FB74", Offset = "0xA8FB74", VA = "0xA8FB74")]
	private void SubSwapPaiPos(CPai inPai1, CPai inPai2, bool inLocalPositionSwapFlag)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xA8FDA0", Offset = "0xA8FDA0", VA = "0xA8FDA0")]
	private void SubSelectPai(CPai inPai, int inIndex)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xA8FEDC", Offset = "0xA8FEDC", VA = "0xA8FEDC")]
	private void SubUnSelectPai(int inIndex, NikaPaiSelectModeType inPaiSelectType = NikaPaiSelectModeType.SELECT_EFFECT_TWEEN)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xA8E94C", Offset = "0xA8E94C", VA = "0xA8E94C")]
	private void SubUnSelectAllPai(NikaPaiSelectModeType inPaiSelectType = NikaPaiSelectModeType.SELECT_EFFECT_TWEEN)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xA90030", Offset = "0xA90030", VA = "0xA90030")]
	private void SubTouchSelectedNormal(CPai inPai)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xA908EC", Offset = "0xA908EC", VA = "0xA908EC")]
	private void SubTouchMovedNormal(CPai inPai)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xA909E0", Offset = "0xA909E0", VA = "0xA909E0")]
	private void SubTouchEndedNormal(CPai inPai)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xA90A7C", Offset = "0xA90A7C", VA = "0xA90A7C")]
	private void SubTouchSelectedSwap(CPai inPai)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xA90D64", Offset = "0xA90D64", VA = "0xA90D64")]
	private void SubTouchMovedSwap(CPai inPai)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xA90E20", Offset = "0xA90E20", VA = "0xA90E20")]
	private void SubTouchEndedSwap(CPai inPai)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xA8E278", Offset = "0xA8E278", VA = "0xA8E278")]
	private void SubSwapPaiPos(CPai inPai1, CPai inPai2)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xA90E24", Offset = "0xA90E24", VA = "0xA90E24")]
	private void SubMakeSwapVectorToList(List<Vector3> inSwapPosList, Vector3 inCenterVec, float inRadius, float inStartAngle, float inEndAngle, float inMoveAngle)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xA90F84", Offset = "0xA90F84", VA = "0xA90F84")]
	private void SubMakeSwapRoutePai(CPai inPai1, CPai inPai2, List<Vector3> inSwapPosList1, List<Vector3> inSwapPosList2)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xA913D8", Offset = "0xA913D8", VA = "0xA913D8")]
	public void AllOpenPai(Action inAction)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xA915F4", Offset = "0xA915F4", VA = "0xA915F4")]
	public void GiveUpPai(Action inAction)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xA919C4", Offset = "0xA919C4", VA = "0xA919C4")]
	private Vector3 FncConvertPaiposToVector(DzPoint inPaiPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xA91ACC", Offset = "0xA91ACC", VA = "0xA91ACC")]
	private void SubDrawPaiTable()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xA8EA5C", Offset = "0xA8EA5C", VA = "0xA8EA5C")]
	private void SubSuspendPaiTable()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xA8E7A8", Offset = "0xA8E7A8", VA = "0xA8E7A8")]
	private void SubResumePaiTable()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xA91BB4", Offset = "0xA91BB4", VA = "0xA91BB4")]
	private void SubShowPaiTable()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xA8EC00", Offset = "0xA8EC00", VA = "0xA8EC00")]
	private void SubHidePaiTable()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xA8D84C", Offset = "0xA8D84C", VA = "0xA8D84C")]
	private void SubDrawLineRoute(List<DzPoint> inPaiPosList, List<GameObject> inDestroyList)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xA8DD58", Offset = "0xA8DD58", VA = "0xA8DD58")]
	private void SubDrawSwappingPai(CPai inPai1, CPai inPai2, float inDurationTime = 0f, NikaSnd_SE inSndID = NikaSnd_SE.SND_NONE, [Optional] Action inComplateAction)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xA91C9C", Offset = "0xA91C9C", VA = "0xA91C9C")]
	public int CountAvailablePai()
	{
		return default(int);
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xA91E2C", Offset = "0xA91E2C", VA = "0xA91E2C")]
	public void DoSearch()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xA91FA4", Offset = "0xA91FA4", VA = "0xA91FA4")]
	public void AutoOpenSearchPai()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xA92158", Offset = "0xA92158", VA = "0xA92158")]
	private void ActionLoopDirection(Action<int> inAction)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xA921D0", Offset = "0xA921D0", VA = "0xA921D0")]
	private DzPoint FncAddDirectionOffset(DzPoint inPoint, int inDirection)
	{
		return default(DzPoint);
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xA9221C", Offset = "0xA9221C", VA = "0xA9221C")]
	private void SubResetPareCheckVariables(CPai inPai)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xA92288", Offset = "0xA92288", VA = "0xA92288")]
	private void SubCheckPaiMatch(CPai inPai)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xA9236C", Offset = "0xA9236C", VA = "0xA9236C")]
	private void SubCheckParePai_2Kaku(DzPoint inPaiPos, int inDirection)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xA92440", Offset = "0xA92440", VA = "0xA92440")]
	private void SubCheckParePai_1Kaku(DzPoint inPaiPos, int inDirection)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xA92598", Offset = "0xA92598", VA = "0xA92598")]
	private void SubCheckParePai(DzPoint inPaiPos, int inDirection)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xA926F0", Offset = "0xA926F0", VA = "0xA926F0")]
	private void SubMarkingSearchMarkPai(CPai inPai)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xA905D4", Offset = "0xA905D4", VA = "0xA905D4")]
	private void SubMarkingMatchPai(CPai inPai)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xA928A0", Offset = "0xA928A0", VA = "0xA928A0")]
	private void SubMarkingCheckedMarkPai(CPai inPai)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xA90798", Offset = "0xA90798", VA = "0xA90798")]
	private bool FncPaiPared()
	{
		return default(bool);
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xA92A50", Offset = "0xA92A50", VA = "0xA92A50")]
	private int FncConvertDirectionPaiPos(DzPoint inPaiPos1, DzPoint inPaiPos2)
	{
		return default(int);
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xA92A7C", Offset = "0xA92A7C", VA = "0xA92A7C")]
	private bool FncIsThruBetweenPai(DzPoint inStartPos, DzPoint inEndPos)
	{
		return default(bool);
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xA92B84", Offset = "0xA92B84", VA = "0xA92B84")]
	private PaiPointRec FncGetPaiPointRec(DzPoint isPaiPos)
	{
		return default(PaiPointRec);
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xA92D9C", Offset = "0xA92D9C", VA = "0xA92D9C")]
	private DzRect FncSectPaiRect(DzRect inRect1, DzRect inRect2)
	{
		return default(DzRect);
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xA92F38", Offset = "0xA92F38", VA = "0xA92F38")]
	private void SubUpdateRoutePaiPos(List<DzPoint> inCheckPaiPosList, List<DzPoint> inPaiPosList, ref int ioPaiDistance)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xA931DC", Offset = "0xA931DC", VA = "0xA931DC")]
	private bool FncCheckPaiRoute1(CPai inPai1, CPai inPai2, List<DzPoint> inPaiPosList)
	{
		return default(bool);
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xA932F8", Offset = "0xA932F8", VA = "0xA932F8")]
	private bool FncCheckPaiRoute2(CPai inPai1, CPai inPai2, List<DzPoint> inPaiPosList)
	{
		return default(bool);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xA93428", Offset = "0xA93428", VA = "0xA93428")]
	private bool FncCheckPaiRoute3(CPai inPai1, CPai inPai2, List<DzPoint> inPaiPosList)
	{
		return default(bool);
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xA935A8", Offset = "0xA935A8", VA = "0xA935A8")]
	private bool FncCheckPaiRoute4(CPai inPai1, CPai inPai2, List<DzPoint> inPaiPosList)
	{
		return default(bool);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xA8D76C", Offset = "0xA8D76C", VA = "0xA8D76C")]
	private void SubMakeRoutePai(CPai inPai1, CPai inPai2, List<DzPoint> inPaiPosList)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xA93B68", Offset = "0xA93B68", VA = "0xA93B68")]
	public void SetupPai(PaiSetupType inPaiSetupType, CStageDefine inStageDef, [Optional] List<CPaiData> ioPaiDataList, NikaPaiSuspendType inPaiSuspend = NikaPaiSuspendType.SUSPEND_NONE)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xA94794", Offset = "0xA94794", VA = "0xA94794")]
	public void SetupContinuePai(CStageDefine inStageDef, List<CPaiData> inPaiDataList, NikaPaiSuspendType inPaiSuspend)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xA94048", Offset = "0xA94048", VA = "0xA94048")]
	private void SubCreatePaiArray(List<CPaiData> ioPaiDataList)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xA9487C", Offset = "0xA9487C", VA = "0xA9487C")]
	private void SubCreateContinuePaiArray(List<CPaiData> inPaiDataList)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xA944B4", Offset = "0xA944B4", VA = "0xA944B4")]
	private void SubPaiArrayToPaiTable()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xA94F00", Offset = "0xA94F00", VA = "0xA94F00")]
	private void SubContinuePaiArrayToPaiTable()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xA951E0", Offset = "0xA951E0", VA = "0xA951E0")]
	public void PaiTapped(CPai inPai)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xA95298", Offset = "0xA95298", VA = "0xA95298")]
	public void PaiTouchMoved(CPai inPai)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xA953AC", Offset = "0xA953AC", VA = "0xA953AC")]
	public void PaiTouchEnded(CPai inPai)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xA953E0", Offset = "0xA953E0", VA = "0xA953E0")]
	public void PaiTouchLeave(bool inTapped)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xA8E85C", Offset = "0xA8E85C", VA = "0xA8E85C")]
	private void SubTouchablePaiTable(PaiTouchableType inPaiTouchableType)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xA8EB14", Offset = "0xA8EB14", VA = "0xA8EB14")]
	private void SubUnTouchablePaiTable()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xA955D0", Offset = "0xA955D0", VA = "0xA955D0")]
	public PaiManager()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xA95684", Offset = "0xA95684", VA = "0xA95684")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8FC4", Offset = "0x5C8FC4")]
	private void <Update>b__44_2()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xA95690", Offset = "0xA95690", VA = "0xA95690")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8FD4", Offset = "0x5C8FD4")]
	private void <Update>b__44_3()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xA9569C", Offset = "0xA9569C", VA = "0xA9569C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8FE4", Offset = "0x5C8FE4")]
	private void <Update>b__44_4()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xA956A8", Offset = "0xA956A8", VA = "0xA956A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8FF4", Offset = "0x5C8FF4")]
	private void <Update>b__44_5()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xA956B4", Offset = "0xA956B4", VA = "0xA956B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9004", Offset = "0x5C9004")]
	private void <Update>b__44_6()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xA956C0", Offset = "0xA956C0", VA = "0xA956C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9014", Offset = "0x5C9014")]
	private void <Update>b__44_7()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xA956CC", Offset = "0xA956CC", VA = "0xA956CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9024", Offset = "0x5C9024")]
	private void <Update>b__44_8()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xA956D8", Offset = "0xA956D8", VA = "0xA956D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9034", Offset = "0x5C9034")]
	private void <Update>b__44_9()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xA956E4", Offset = "0xA956E4", VA = "0xA956E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9044", Offset = "0x5C9044")]
	private void <Update>b__44_10()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xA956F0", Offset = "0xA956F0", VA = "0xA956F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9054", Offset = "0x5C9054")]
	private void <DoSearch>b__84_1(CPai inPai)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xA9573C", Offset = "0xA9573C", VA = "0xA9573C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9064", Offset = "0x5C9064")]
	private void <AutoOpenSearchPai>b__85_1(CPai inPai)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xA95788", Offset = "0xA95788", VA = "0xA95788")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9074", Offset = "0x5C9074")]
	private void <FncPaiPared>b__96_0(int inDirection)
	{
	}
}
[Serializable]
[Token(Token = "0x200003A")]
public class CDataModel : DzSerializableObject<CDataModel>
{
	[Token(Token = "0x2000208")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2940", Offset = "0x5C2940")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int gameScore;

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xA10740", Offset = "0xA10740", VA = "0xA10740")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xA10D60", Offset = "0xA10D60", VA = "0xA10D60")]
		internal void <AppendEvent_PaiChenge>b__0()
		{
		}
	}

	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2950", Offset = "0x5C2950")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int gameScore;

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xA108E8", Offset = "0xA108E8", VA = "0xA108E8")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xA10DE4", Offset = "0xA10DE4", VA = "0xA10DE4")]
		internal void <AppendEvent_PaiSearch>b__0()
		{
		}
	}

	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2960", Offset = "0x5C2960")]
	private sealed class <>c__DisplayClass44_0
	{
		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int gameScore;

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xA10A48", Offset = "0xA10A48", VA = "0xA10A48")]
		public <>c__DisplayClass44_0()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xA10E68", Offset = "0xA10E68", VA = "0xA10E68")]
		internal void <AppendEvent_PaiShuffle>b__0()
		{
		}
	}

	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2970", Offset = "0x5C2970")]
	private sealed class <>c__DisplayClass45_0
	{
		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int gameScore;

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xA10BA8", Offset = "0xA10BA8", VA = "0xA10BA8")]
		public <>c__DisplayClass45_0()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xA10EEC", Offset = "0xA10EEC", VA = "0xA10EEC")]
		internal void <AppendEvent_PaiBomb>b__0()
		{
		}
	}

	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2980", Offset = "0x5C2980")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int gameScore;

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xA10D08", Offset = "0xA10D08", VA = "0xA10D08")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xA10F70", Offset = "0xA10F70", VA = "0xA10F70")]
		internal void <AppendEvent_PaiSwap>b__0()
		{
		}
	}

	[Token(Token = "0x400017F")]
	private const float TIME_PAICHANGE_DELAY = 0.1f;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _iapFullVersion;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DateTime _startupDatetime;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NikaDataModelGameType _currentGameType;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CPrefModel _prefModel;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CGameModel _gameModel;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CPaiModel _paiModel;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CStatsModel _statsModel;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _stageCurNo;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _stagePartCurNo;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<CStageModel> _stageList;

	[Token(Token = "0x17000041")]
	public DateTime StartupDatetime
	{
		[Token(Token = "0x6000250")]
		[Address(RVA = "0xA0FAA8", Offset = "0xA0FAA8", VA = "0xA0FAA8")]
		get
		{
			return default(DateTime);
		}
		[Token(Token = "0x6000251")]
		[Address(RVA = "0xA0FAB0", Offset = "0xA0FAB0", VA = "0xA0FAB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public NikaDataModelGameType CurrentGameType
	{
		[Token(Token = "0x6000252")]
		[Address(RVA = "0xA0FAB8", Offset = "0xA0FAB8", VA = "0xA0FAB8")]
		get
		{
			return default(NikaDataModelGameType);
		}
		[Token(Token = "0x6000253")]
		[Address(RVA = "0xA0FAC0", Offset = "0xA0FAC0", VA = "0xA0FAC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public CPrefModel PrefModel
	{
		[Token(Token = "0x6000254")]
		[Address(RVA = "0xA0FAC8", Offset = "0xA0FAC8", VA = "0xA0FAC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000255")]
		[Address(RVA = "0xA0FAD0", Offset = "0xA0FAD0", VA = "0xA0FAD0")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public CGameModel GameModel
	{
		[Token(Token = "0x6000256")]
		[Address(RVA = "0xA0FAD8", Offset = "0xA0FAD8", VA = "0xA0FAD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000257")]
		[Address(RVA = "0xA0FAE0", Offset = "0xA0FAE0", VA = "0xA0FAE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public CPaiModel PaiModel
	{
		[Token(Token = "0x6000258")]
		[Address(RVA = "0xA0FAE8", Offset = "0xA0FAE8", VA = "0xA0FAE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000046")]
	public CStatsModel StatsModel
	{
		[Token(Token = "0x6000259")]
		[Address(RVA = "0xA0FAF0", Offset = "0xA0FAF0", VA = "0xA0FAF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000047")]
	public int StageCurNo
	{
		[Token(Token = "0x600025A")]
		[Address(RVA = "0xA0FAF8", Offset = "0xA0FAF8", VA = "0xA0FAF8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600025B")]
		[Address(RVA = "0xA0FB00", Offset = "0xA0FB00", VA = "0xA0FB00")]
		set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public int StagePartCurNo
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0xA0FB08", Offset = "0xA0FB08", VA = "0xA0FB08")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600025D")]
		[Address(RVA = "0xA0FB10", Offset = "0xA0FB10", VA = "0xA0FB10")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public List<CStageModel> StageList
	{
		[Token(Token = "0x600025E")]
		[Address(RVA = "0xA0FB18", Offset = "0xA0FB18", VA = "0xA0FB18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xA0FB20", Offset = "0xA0FB20", VA = "0xA0FB20", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xA0FE28", Offset = "0xA0FE28", VA = "0xA0FE28", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xA0FE90", Offset = "0xA0FE90", VA = "0xA0FE90")]
	public void RecordStatisticsStarted()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xA10060", Offset = "0xA10060", VA = "0xA10060")]
	public void RecordStatisticsCleared()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xA104D4", Offset = "0xA104D4", VA = "0xA104D4")]
	public void RecordStatisticsGameOvered()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xA104F0", Offset = "0xA104F0", VA = "0xA104F0")]
	public void RecordStatisticsExited()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xA105B4", Offset = "0xA105B4", VA = "0xA105B4")]
	public void AppendEvent_PaiChenge(CPai inPai1, CPai inPai2)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xA10764", Offset = "0xA10764", VA = "0xA10764")]
	public void AppendEvent_PaiChengeFailure()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xA10790", Offset = "0xA10790", VA = "0xA10790")]
	public void AppendEvent_PaiSearch(NikaAppendChangeType inAppendChangeType)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xA108F0", Offset = "0xA108F0", VA = "0xA108F0")]
	public void AppendEvent_PaiShuffle(NikaAppendChangeType inAppendChangeType)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xA10A50", Offset = "0xA10A50", VA = "0xA10A50")]
	public void AppendEvent_PaiBomb(NikaAppendChangeType inAppendChangeType)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xA10BB0", Offset = "0xA10BB0", VA = "0xA10BB0")]
	public void AppendEvent_PaiSwap(NikaAppendChangeType inAppendChangeType)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xA10D10", Offset = "0xA10D10", VA = "0xA10D10")]
	public CDataModel()
	{
	}
}
[Serializable]
[Token(Token = "0x200003B")]
public class CGameModel : DzSerializableObject<CGameModel>
{
	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool _stagePlaying;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int _stageNo;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _stagePartNo;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private NikaGameModelLevelType _gameLevel;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NikaGameModelSizeType _gameSize;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _totalScore;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _timerSecond;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _timeMeterFlag;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool _timeMeterOverFlag;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NikaGameModelTimeMeterType _timeMeterStatus;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _timeMeterSpeed;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _timeMeterSecond;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _timeLifeCount;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _itemSearchCount;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _itemSwapCount;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _itemBombCount;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _itemShuffleCount;

	[NonSerialized]
	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _ClearedStarCount;

	[NonSerialized]
	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MTRandom _mtRandom;

	[NonSerialized]
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _randSaved;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _randseed;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _randCount;

	[Token(Token = "0x1700004A")]
	public bool StagePlaying
	{
		[Token(Token = "0x600026C")]
		[Address(RVA = "0xA10FF4", Offset = "0xA10FF4", VA = "0xA10FF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600026D")]
		[Address(RVA = "0xA10FFC", Offset = "0xA10FFC", VA = "0xA10FFC")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public int StageNo
	{
		[Token(Token = "0x600026E")]
		[Address(RVA = "0xA11008", Offset = "0xA11008", VA = "0xA11008")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600026F")]
		[Address(RVA = "0xA11010", Offset = "0xA11010", VA = "0xA11010")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public int StagePartNo
	{
		[Token(Token = "0x6000270")]
		[Address(RVA = "0xA11018", Offset = "0xA11018", VA = "0xA11018")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000271")]
		[Address(RVA = "0xA11020", Offset = "0xA11020", VA = "0xA11020")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public NikaGameModelLevelType GameLevel
	{
		[Token(Token = "0x6000272")]
		[Address(RVA = "0xA11028", Offset = "0xA11028", VA = "0xA11028")]
		get
		{
			return default(NikaGameModelLevelType);
		}
		[Token(Token = "0x6000273")]
		[Address(RVA = "0xA11030", Offset = "0xA11030", VA = "0xA11030")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public NikaGameModelSizeType GameSize
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0xA11038", Offset = "0xA11038", VA = "0xA11038")]
		get
		{
			return default(NikaGameModelSizeType);
		}
		[Token(Token = "0x6000275")]
		[Address(RVA = "0xA11040", Offset = "0xA11040", VA = "0xA11040")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public int Randseed
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0xA11048", Offset = "0xA11048", VA = "0xA11048")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000277")]
		[Address(RVA = "0xA11050", Offset = "0xA11050", VA = "0xA11050")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public int RandCount
	{
		[Token(Token = "0x6000278")]
		[Address(RVA = "0xA11058", Offset = "0xA11058", VA = "0xA11058")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000279")]
		[Address(RVA = "0xA11060", Offset = "0xA11060", VA = "0xA11060")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public int TotalScore
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xA11068", Offset = "0xA11068", VA = "0xA11068")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xA11070", Offset = "0xA11070", VA = "0xA11070")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public float TimerSecond
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xA11078", Offset = "0xA11078", VA = "0xA11078")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600027D")]
		[Address(RVA = "0xA11080", Offset = "0xA11080", VA = "0xA11080")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public bool TimeMeterFlag
	{
		[Token(Token = "0x600027E")]
		[Address(RVA = "0xA11088", Offset = "0xA11088", VA = "0xA11088")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xA11090", Offset = "0xA11090", VA = "0xA11090")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public bool TimeMeterOverFlag
	{
		[Token(Token = "0x6000280")]
		[Address(RVA = "0xA1109C", Offset = "0xA1109C", VA = "0xA1109C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000281")]
		[Address(RVA = "0xA110A4", Offset = "0xA110A4", VA = "0xA110A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public NikaGameModelTimeMeterType TimeMeterStatus
	{
		[Token(Token = "0x6000282")]
		[Address(RVA = "0xA110B0", Offset = "0xA110B0", VA = "0xA110B0")]
		get
		{
			return default(NikaGameModelTimeMeterType);
		}
		[Token(Token = "0x6000283")]
		[Address(RVA = "0xA110B8", Offset = "0xA110B8", VA = "0xA110B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public float TimeMeterSpeed
	{
		[Token(Token = "0x6000284")]
		[Address(RVA = "0xA110C0", Offset = "0xA110C0", VA = "0xA110C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000285")]
		[Address(RVA = "0xA110C8", Offset = "0xA110C8", VA = "0xA110C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public float TimeMeterSecond
	{
		[Token(Token = "0x6000286")]
		[Address(RVA = "0xA110D0", Offset = "0xA110D0", VA = "0xA110D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000287")]
		[Address(RVA = "0xA110D8", Offset = "0xA110D8", VA = "0xA110D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public int TimeLifeCount
	{
		[Token(Token = "0x6000288")]
		[Address(RVA = "0xA110E0", Offset = "0xA110E0", VA = "0xA110E0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000289")]
		[Address(RVA = "0xA110E8", Offset = "0xA110E8", VA = "0xA110E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public int ItemSearchCount
	{
		[Token(Token = "0x600028A")]
		[Address(RVA = "0xA110F0", Offset = "0xA110F0", VA = "0xA110F0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600028B")]
		[Address(RVA = "0xA110F8", Offset = "0xA110F8", VA = "0xA110F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public int ItemSwapCount
	{
		[Token(Token = "0x600028C")]
		[Address(RVA = "0xA11100", Offset = "0xA11100", VA = "0xA11100")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600028D")]
		[Address(RVA = "0xA11108", Offset = "0xA11108", VA = "0xA11108")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public int ItemBombCount
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0xA11110", Offset = "0xA11110", VA = "0xA11110")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600028F")]
		[Address(RVA = "0xA11118", Offset = "0xA11118", VA = "0xA11118")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public int ItemShuffleCount
	{
		[Token(Token = "0x6000290")]
		[Address(RVA = "0xA11120", Offset = "0xA11120", VA = "0xA11120")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000291")]
		[Address(RVA = "0xA11128", Offset = "0xA11128", VA = "0xA11128")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public int ClearedStarCount
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0xA11130", Offset = "0xA11130", VA = "0xA11130")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xA11138", Offset = "0xA11138", VA = "0xA11138")]
		set
		{
		}
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xA11140", Offset = "0xA11140", VA = "0xA11140", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xA11148", Offset = "0xA11148", VA = "0xA11148", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xA1114C", Offset = "0xA1114C", VA = "0xA1114C")]
	public void ResetRandom(int inRandSeed, int inRandCount = 0, bool inRandSaved = true)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xA111F4", Offset = "0xA111F4", VA = "0xA111F4")]
	public float Random()
	{
		return default(float);
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xA11238", Offset = "0xA11238", VA = "0xA11238")]
	public int Random(int inMinValue, int inMaxValue)
	{
		return default(int);
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xA1127C", Offset = "0xA1127C", VA = "0xA1127C")]
	public int Random(int inRange)
	{
		return default(int);
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xA11318", Offset = "0xA11318", VA = "0xA11318")]
	public bool RandomBool()
	{
		return default(bool);
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xA0FCE8", Offset = "0xA0FCE8", VA = "0xA0FCE8")]
	public CGameModel()
	{
	}
}
[Serializable]
[Token(Token = "0x200003C")]
public class CPaiModel : DzSerializableObject<CPaiModel>
{
	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool _navigatePaiFlag;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool _flipPaiFlag;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int _paiChangeCount;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _paiAvailableCount;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _blockPaiCount;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _openBlockPaiCount;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<CPaiData> _paiDataArray;

	[Token(Token = "0x1700005E")]
	public bool NavigatePaiFlag
	{
		[Token(Token = "0x600029C")]
		[Address(RVA = "0xA157FC", Offset = "0xA157FC", VA = "0xA157FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600029D")]
		[Address(RVA = "0xA15804", Offset = "0xA15804", VA = "0xA15804")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public bool FlipPaiFlag
	{
		[Token(Token = "0x600029E")]
		[Address(RVA = "0xA15810", Offset = "0xA15810", VA = "0xA15810")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600029F")]
		[Address(RVA = "0xA15818", Offset = "0xA15818", VA = "0xA15818")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public int PaiChangeCount
	{
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xA15824", Offset = "0xA15824", VA = "0xA15824")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xA1582C", Offset = "0xA1582C", VA = "0xA1582C")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public int PaiAvailableCount
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xA15834", Offset = "0xA15834", VA = "0xA15834")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xA1583C", Offset = "0xA1583C", VA = "0xA1583C")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public int BlockPaiCount
	{
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xA15844", Offset = "0xA15844", VA = "0xA15844")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xA1584C", Offset = "0xA1584C", VA = "0xA1584C")]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public int OpenBlockPaiCount
	{
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xA15854", Offset = "0xA15854", VA = "0xA15854")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0xA1585C", Offset = "0xA1585C", VA = "0xA1585C")]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public List<CPaiData> PaiDataArray
	{
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xA15864", Offset = "0xA15864", VA = "0xA15864")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xA1586C", Offset = "0xA1586C", VA = "0xA1586C")]
		set
		{
		}
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xA15874", Offset = "0xA15874", VA = "0xA15874", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xA15888", Offset = "0xA15888", VA = "0xA15888", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xA1588C", Offset = "0xA1588C", VA = "0xA1588C")]
	public void Reset()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xA0FD38", Offset = "0xA0FD38", VA = "0xA0FD38")]
	public CPaiModel()
	{
	}
}
[Serializable]
[Token(Token = "0x200003D")]
public class CPrefModel : DzSerializableObject<CPrefModel>
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float _durationFactor;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool _drawRouteLine;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DzSoundVolume _soundVolume;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _playingBGM;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _languageSuffix;

	[Token(Token = "0x17000065")]
	public float DurationFactor
	{
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0xA1591C", Offset = "0xA1591C", VA = "0xA1591C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xA15924", Offset = "0xA15924", VA = "0xA15924")]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public bool DrawRouteLine
	{
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0xA1592C", Offset = "0xA1592C", VA = "0xA1592C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xA15934", Offset = "0xA15934", VA = "0xA15934")]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public DzSoundVolume SoundVolume
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xA15940", Offset = "0xA15940", VA = "0xA15940")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0xA15948", Offset = "0xA15948", VA = "0xA15948")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public bool PlayingBGM
	{
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0xA15950", Offset = "0xA15950", VA = "0xA15950")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0xA15958", Offset = "0xA15958", VA = "0xA15958")]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public string LanguageSuffix
	{
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0xA15964", Offset = "0xA15964", VA = "0xA15964")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0xA1596C", Offset = "0xA1596C", VA = "0xA1596C")]
		set
		{
		}
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xA0FC6C", Offset = "0xA0FC6C", VA = "0xA0FC6C")]
	public CPrefModel([Optional] CPrefModel inPrefModel)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xA15A10", Offset = "0xA15A10", VA = "0xA15A10", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xA15A98", Offset = "0xA15A98", VA = "0xA15A98", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xA15974", Offset = "0xA15974", VA = "0xA15974")]
	public void CopyValues(CPrefModel inPrefModel)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xA15AA0", Offset = "0xA15AA0", VA = "0xA15AA0")]
	public bool IsEqualAllValues(CPrefModel inPrefModel)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xA15A14", Offset = "0xA15A14", VA = "0xA15A14")]
	public void ResetFactorySetting()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xA15BF8", Offset = "0xA15BF8", VA = "0xA15BF8")]
	public void ChangePrefDataPost(Component sender)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xA15B90", Offset = "0xA15B90", VA = "0xA15B90")]
	private void SubInitLanguage()
	{
	}
}
[Serializable]
[Token(Token = "0x200003E")]
public class CStageModel : DzSerializableObject<CStageModel>
{
	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int _stageNo;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int _starCount;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _starAchievementRate;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _isStageCleared;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<CStagePartModel> _stageParts;

	[Token(Token = "0x1700006A")]
	public int StageNo
	{
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0xA15DBC", Offset = "0xA15DBC", VA = "0xA15DBC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xA15DC4", Offset = "0xA15DC4", VA = "0xA15DC4")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public int StarCount
	{
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xA15DCC", Offset = "0xA15DCC", VA = "0xA15DCC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xA15DD4", Offset = "0xA15DD4", VA = "0xA15DD4")]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public float StarAchievementRate
	{
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xA15DDC", Offset = "0xA15DDC", VA = "0xA15DDC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0xA15DE4", Offset = "0xA15DE4", VA = "0xA15DE4")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public bool IsStageCleared
	{
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xA15DEC", Offset = "0xA15DEC", VA = "0xA15DEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0xA15DF4", Offset = "0xA15DF4", VA = "0xA15DF4")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public List<CStagePartModel> StageParts
	{
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xA15E00", Offset = "0xA15E00", VA = "0xA15E00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xA15E08", Offset = "0xA15E08", VA = "0xA15E08", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xA15F78", Offset = "0xA15F78", VA = "0xA15F78", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xA0FDD8", Offset = "0xA0FDD8", VA = "0xA0FDD8")]
	public CStageModel()
	{
	}
}
[Serializable]
[Token(Token = "0x200003F")]
public class CStagePartModel : DzSerializableObject<CStagePartModel>
{
	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int _stagePartNo;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int _starCount;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NikaGameModelLevelType _gameLevel;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private NikaGameModelSizeType _gameSize;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _highScore;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _fastestTime;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _gameCount;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _clearCount;

	[NonSerialized]
	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isNewHighScore;

	[NonSerialized]
	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _isNewFastestTime;

	[Token(Token = "0x1700006F")]
	public int StagePartNo
	{
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xA15FD8", Offset = "0xA15FD8", VA = "0xA15FD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xA15FE0", Offset = "0xA15FE0", VA = "0xA15FE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public int StarCount
	{
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xA15FE8", Offset = "0xA15FE8", VA = "0xA15FE8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xA15FF0", Offset = "0xA15FF0", VA = "0xA15FF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public NikaGameModelLevelType GameLevel
	{
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xA15FF8", Offset = "0xA15FF8", VA = "0xA15FF8")]
		get
		{
			return default(NikaGameModelLevelType);
		}
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0xA16000", Offset = "0xA16000", VA = "0xA16000")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public NikaGameModelSizeType GameSize
	{
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xA16008", Offset = "0xA16008", VA = "0xA16008")]
		get
		{
			return default(NikaGameModelSizeType);
		}
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xA16010", Offset = "0xA16010", VA = "0xA16010")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public int HighScore
	{
		[Token(Token = "0x60002D4")]
		[Address(RVA = "0xA16018", Offset = "0xA16018", VA = "0xA16018")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0xA16020", Offset = "0xA16020", VA = "0xA16020")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public float FastestTime
	{
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0xA16028", Offset = "0xA16028", VA = "0xA16028")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0xA16030", Offset = "0xA16030", VA = "0xA16030")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public int GameCount
	{
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0xA16038", Offset = "0xA16038", VA = "0xA16038")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xA16040", Offset = "0xA16040", VA = "0xA16040")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public int ClearCount
	{
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0xA16048", Offset = "0xA16048", VA = "0xA16048")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0xA16050", Offset = "0xA16050", VA = "0xA16050")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public bool IsNewHighScore
	{
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0xA16058", Offset = "0xA16058", VA = "0xA16058")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0xA16060", Offset = "0xA16060", VA = "0xA16060")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public bool IsNewFastestTime
	{
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0xA1606C", Offset = "0xA1606C", VA = "0xA1606C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0xA16074", Offset = "0xA16074", VA = "0xA16074")]
		set
		{
		}
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xA16080", Offset = "0xA16080", VA = "0xA16080", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xA16098", Offset = "0xA16098", VA = "0xA16098", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xA15F28", Offset = "0xA15F28", VA = "0xA15F28")]
	public CStagePartModel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000040")]
public class CStatsModel : DzSerializableObject<CStatsModel>
{
	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int _totalStageCount;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int _totalStarCount;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _totalGameCount;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _totalClearCount;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _totalPlayTime;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<CStatsStageModel> _stageStats;

	[Token(Token = "0x17000079")]
	public int TotalStageCount
	{
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0xA1609C", Offset = "0xA1609C", VA = "0xA1609C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xA160A4", Offset = "0xA160A4", VA = "0xA160A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public int TotalStarCount
	{
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0xA160AC", Offset = "0xA160AC", VA = "0xA160AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002E6")]
		[Address(RVA = "0xA160B4", Offset = "0xA160B4", VA = "0xA160B4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public int TotalGameCount
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0xA160BC", Offset = "0xA160BC", VA = "0xA160BC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xA160C4", Offset = "0xA160C4", VA = "0xA160C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public int TotalClearCount
	{
		[Token(Token = "0x60002E9")]
		[Address(RVA = "0xA160CC", Offset = "0xA160CC", VA = "0xA160CC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002EA")]
		[Address(RVA = "0xA160D4", Offset = "0xA160D4", VA = "0xA160D4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public float TotalPlayTime
	{
		[Token(Token = "0x60002EB")]
		[Address(RVA = "0xA160DC", Offset = "0xA160DC", VA = "0xA160DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002EC")]
		[Address(RVA = "0xA160E4", Offset = "0xA160E4", VA = "0xA160E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public List<CStatsStageModel> StageStats
	{
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0xA160EC", Offset = "0xA160EC", VA = "0xA160EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xA160F4", Offset = "0xA160F4", VA = "0xA160F4", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xA16224", Offset = "0xA16224", VA = "0xA16224", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xA0FFB4", Offset = "0xA0FFB4", VA = "0xA0FFB4")]
	public CStatsStageModel CurrentStageStats()
	{
		return null;
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xA0FD88", Offset = "0xA0FD88", VA = "0xA0FD88")]
	public CStatsModel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000041")]
public class CStatsStageModel : DzSerializableObject<CStatsStageModel>
{
	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int _stageCount;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int _starCount;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _gameCount;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _clearCount;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _highScore;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _fastestTime;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _averageScore;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _totalPlayTime;

	[Token(Token = "0x1700007F")]
	public int StageCount
	{
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0xA16284", Offset = "0xA16284", VA = "0xA16284")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xA1628C", Offset = "0xA1628C", VA = "0xA1628C")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public int StarCount
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xA16294", Offset = "0xA16294", VA = "0xA16294")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0xA1629C", Offset = "0xA1629C", VA = "0xA1629C")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public int GameCount
	{
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0xA162A4", Offset = "0xA162A4", VA = "0xA162A4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0xA162AC", Offset = "0xA162AC", VA = "0xA162AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public int ClearCount
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0xA162B4", Offset = "0xA162B4", VA = "0xA162B4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0xA162BC", Offset = "0xA162BC", VA = "0xA162BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public int HighScore
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0xA162C4", Offset = "0xA162C4", VA = "0xA162C4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xA162CC", Offset = "0xA162CC", VA = "0xA162CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public float FastestTime
	{
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0xA162D4", Offset = "0xA162D4", VA = "0xA162D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0xA162DC", Offset = "0xA162DC", VA = "0xA162DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public int AverageScore
	{
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xA162E4", Offset = "0xA162E4", VA = "0xA162E4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0xA162EC", Offset = "0xA162EC", VA = "0xA162EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public float TotalPlayTime
	{
		[Token(Token = "0x6000300")]
		[Address(RVA = "0xA162F4", Offset = "0xA162F4", VA = "0xA162F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000301")]
		[Address(RVA = "0xA162FC", Offset = "0xA162FC", VA = "0xA162FC")]
		set
		{
		}
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xA16304", Offset = "0xA16304", VA = "0xA16304", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xA16318", Offset = "0xA16318", VA = "0xA16318", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xA161D4", Offset = "0xA161D4", VA = "0xA161D4")]
	public CStatsStageModel()
	{
	}
}
[Token(Token = "0x2000042")]
public class CTempModel : DzMonoObject<CTempModel>
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CPrefModel _newPrefModel;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NikaGameModelStatusType _gameStatus;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private NikaGameModelModeType _gameMode;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _hukidasiMessage;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Queue<int> _scoreQueue;

	[Token(Token = "0x17000087")]
	public CPrefModel NewPrefModel
	{
		[Token(Token = "0x6000305")]
		[Address(RVA = "0xA1631C", Offset = "0xA1631C", VA = "0xA1631C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000306")]
		[Address(RVA = "0xA16324", Offset = "0xA16324", VA = "0xA16324")]
		set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public NikaGameModelStatusType GameStatus
	{
		[Token(Token = "0x6000307")]
		[Address(RVA = "0xA1632C", Offset = "0xA1632C", VA = "0xA1632C")]
		get
		{
			return default(NikaGameModelStatusType);
		}
		[Token(Token = "0x6000308")]
		[Address(RVA = "0xA16334", Offset = "0xA16334", VA = "0xA16334")]
		set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public NikaGameModelModeType GameMode
	{
		[Token(Token = "0x6000309")]
		[Address(RVA = "0xA1633C", Offset = "0xA1633C", VA = "0xA1633C")]
		get
		{
			return default(NikaGameModelModeType);
		}
		[Token(Token = "0x600030A")]
		[Address(RVA = "0xA16344", Offset = "0xA16344", VA = "0xA16344")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public string HukidasiMessage
	{
		[Token(Token = "0x600030B")]
		[Address(RVA = "0xA1634C", Offset = "0xA1634C", VA = "0xA1634C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600030C")]
		[Address(RVA = "0xA16354", Offset = "0xA16354", VA = "0xA16354")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public Queue<int> ScoreQueue
	{
		[Token(Token = "0x600030D")]
		[Address(RVA = "0xA1635C", Offset = "0xA1635C", VA = "0xA1635C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xA16364", Offset = "0xA16364", VA = "0xA16364", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xA163F0", Offset = "0xA163F0", VA = "0xA163F0", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xA163F4", Offset = "0xA163F4", VA = "0xA163F4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xA16464", Offset = "0xA16464", VA = "0xA16464")]
	public CTempModel()
	{
	}
}
[Token(Token = "0x2000043")]
public class BasePanel : DzMonoBehaviour<BasePanel>
{
	[Token(Token = "0x40001CE")]
	protected const float TIME_PANEL_DIALOG = 0.3f;

	[Token(Token = "0x40001CF")]
	protected const float TIME_DESTROY_WAIT = 0.25f;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Button[] _defaultButtons;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button _BackButton;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected int _dialogOpenSoundID;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private ColorBlock _saveColorBlock;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private ColorBlock _pressedColorBlock;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool _alreadyTapped;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xA0E684", Offset = "0xA0E684", VA = "0xA0E684", Slot = "7")]
	protected virtual void OnDialogOpenDone()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xA0E688", Offset = "0xA0E688", VA = "0xA0E688", Slot = "8")]
	protected virtual void OnDialogCloseDone()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xA0E68C", Offset = "0xA0E68C", VA = "0xA0E68C", Slot = "9")]
	protected virtual void OnTappedAnyButton()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xA0D258", Offset = "0xA0D258", VA = "0xA0D258", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xA0D33C", Offset = "0xA0D33C", VA = "0xA0D33C", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xA0E690", Offset = "0xA0E690", VA = "0xA0E690")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xA0E788", Offset = "0xA0E788", VA = "0xA0E788")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xA0E880", Offset = "0xA0E880", VA = "0xA0E880")]
	private void OnBackKeyDown()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xA0D4C4", Offset = "0xA0D4C4", VA = "0xA0D4C4")]
	protected void SubInteractableDefaultButtons(bool inInteractable)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xA0DAEC", Offset = "0xA0DAEC", VA = "0xA0DAEC")]
	protected bool FncIsDoubleTapped()
	{
		return default(bool);
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xA0D670", Offset = "0xA0D670", VA = "0xA0D670")]
	public BasePanel()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xA0EA0C", Offset = "0xA0EA0C", VA = "0xA0EA0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9084", Offset = "0x5C9084")]
	private void <OnBackKeyDown>b__15_0()
	{
	}
}
[Token(Token = "0x2000044")]
public class Ext_LightningCore : MonoBehaviour
{
	[Token(Token = "0x200020D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2990", Offset = "0x5C2990")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int lightningAudioIdx;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Ext_LightningCore <>4__this;

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x90D1D8", Offset = "0x90D1D8", VA = "0x90D1D8")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x90D23C", Offset = "0x90D23C", VA = "0x90D23C")]
		internal void <Spawn>b__0()
		{
		}
	}

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float StartTime;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Duration;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float FreqPerSecond;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 FreqRandom;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float StartSize;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DzMinMaxValues _Range_X_Pos;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DzMinMaxValues _Range_Z_Pos;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float curTime;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float fullTime;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DzMinMaxValues _distance_MinMax;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem[] PSMatrix;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material[] Materials;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public DzAudioChanger _LightningAudio;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform b_Transform;

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x90CB5C", Offset = "0x90CB5C", VA = "0x90CB5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x90CD4C", Offset = "0x90CD4C", VA = "0x90CD4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x90CCB0", Offset = "0x90CCB0", VA = "0x90CCB0")]
	private void SelfEnable()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x90CD50", Offset = "0x90CD50", VA = "0x90CD50")]
	private void Spawn(int index)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x90D1E0", Offset = "0x90D1E0", VA = "0x90D1E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x90D220", Offset = "0x90D220", VA = "0x90D220")]
	public Ext_LightningCore()
	{
	}
}
[Token(Token = "0x2000045")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1A5C", Offset = "0x5C1A5C")]
public class LabelCopyright : DzMonoBehaviour<LabelCopyright>
{
	[Token(Token = "0x6000324")]
	[Address(RVA = "0x91C594", Offset = "0x91C594", VA = "0x91C594", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x91C598", Offset = "0x91C598", VA = "0x91C598", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x91C59C", Offset = "0x91C59C", VA = "0x91C59C", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x91C61C", Offset = "0x91C61C", VA = "0x91C61C")]
	public LabelCopyright()
	{
	}
}
[Token(Token = "0x2000046")]
public class DiceController : DzMonoBehaviour<DiceController>
{
	[Token(Token = "0x200020E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C29A0", Offset = "0x5C29A0")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float inRotateTorque;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DiceController <>4__this;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float inImpulseForce;

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x90BEB4", Offset = "0x90BEB4", VA = "0x90BEB4")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x90BF14", Offset = "0x90BF14", VA = "0x90BF14")]
		internal void <SubDiceRolling>b__0()
		{
		}
	}

	[Token(Token = "0x200020F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C29B0", Offset = "0x5C29B0")]
	private sealed class <>c__DisplayClass11_1
	{
		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rigidbody rig;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass11_0 CS$<>8__locals1;

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x90BEBC", Offset = "0x90BEBC", VA = "0x90BEBC")]
		public <>c__DisplayClass11_1()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x90BF30", Offset = "0x90BF30", VA = "0x90BF30")]
		internal void <SubDiceRolling>b__1()
		{
		}
	}

	[Token(Token = "0x40001E4")]
	private const float DICE_LIFTUP_TIME = 0.25f;

	[Token(Token = "0x40001E5")]
	private const float DICE_ROTATE_TORQUE = 100f;

	[Token(Token = "0x40001E6")]
	private const float DICE_THROW_FORCE = 1f;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _DiceThrowPoint;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Rigidbody[] _Dices;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip _DicePickUp_AudioClip;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isRolling;

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x90BB70", Offset = "0x90BB70", VA = "0x90BB70", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x90BB78", Offset = "0x90BB78", VA = "0x90BB78", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x90BB7C", Offset = "0x90BB7C", VA = "0x90BB7C", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x90BB80", Offset = "0x90BB80", VA = "0x90BB80")]
	public void RollingDice()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x90BB90", Offset = "0x90BB90", VA = "0x90BB90")]
	private void SubDiceRolling(float inImpulseForce, float inRotateTorque)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x90BEC4", Offset = "0x90BEC4", VA = "0x90BEC4")]
	public DiceController()
	{
	}
}
[Token(Token = "0x2000047")]
public class EnvironmentChanger : DzMonoBehaviour<EnvironmentChanger>
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _Lightning;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int[] _LightningSkyboxindices;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DzPrefabFactory _dzPrefabFactory_PaiTable;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DzSkyboxChanger _SkyboxChanger;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DzWeatherChanger _WeatherChanger;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DzAudioChanger _AudioChanger;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PearList_SkyboxAndWeather _PearList;

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x90C0E8", Offset = "0x90C0E8", VA = "0x90C0E8", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x90C1E0", Offset = "0x90C1E0", VA = "0x90C1E0", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x90C1E4", Offset = "0x90C1E4", VA = "0x90C1E4", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x90C204", Offset = "0x90C204", VA = "0x90C204")]
	public void CreatePaiTableForTitle()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x90C224", Offset = "0x90C224", VA = "0x90C224")]
	public void DestroyPaiTableForTitle()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x90C240", Offset = "0x90C240", VA = "0x90C240")]
	public void ChangeSkyboxAndWeather(NikaGameModelLevelType inGameLevel)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x90C334", Offset = "0x90C334", VA = "0x90C334")]
	public void ChangeSkybox()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x90C33C", Offset = "0x90C33C", VA = "0x90C33C")]
	public EnvironmentChanger()
	{
	}
}
[Token(Token = "0x2000048")]
public class EventDiceRolling : DzMonoBehaviour<EventDiceRolling>
{
	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _LaserBeamTransform;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller _activeCont;

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x90C38C", Offset = "0x90C38C", VA = "0x90C38C", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x90C390", Offset = "0x90C390", VA = "0x90C390", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x90C394", Offset = "0x90C394", VA = "0x90C394", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x90C398", Offset = "0x90C398", VA = "0x90C398")]
	private void Update()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x90C6C0", Offset = "0x90C6C0", VA = "0x90C6C0")]
	public EventDiceRolling()
	{
	}
}
[Token(Token = "0x2000049")]
public class MainScene : DzMonoBehaviour<MainScene>
{
	[Token(Token = "0x2000210")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C29C0", Offset = "0x5C29C0")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject go_gamePanel;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MainScene <>4__this;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action inAction;

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x960D6C", Offset = "0x960D6C", VA = "0x960D6C")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x960EAC", Offset = "0x960EAC", VA = "0x960EAC")]
		internal void <SubDestroyGamePanel>b__0()
		{
		}
	}

	[Token(Token = "0x40001F4")]
	public const string DEFAULT_TITLE_PANEL = "TitlePanel";

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _LaserBeamTransform;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _canvasFront;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GamePanel _prefabGamePanel;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform _POS_GamePanel;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TitlePanel _TitlePanel;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EnvironmentChanger _EnvironmentChanger;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CGameModel _gameModel;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GamePanel _GamePanel;

	[Token(Token = "0x1700008C")]
	public RectTransform POS_GamePanel
	{
		[Token(Token = "0x600033B")]
		[Address(RVA = "0x960558", Offset = "0x960558", VA = "0x960558")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008D")]
	public Transform LaserBeamTransform
	{
		[Token(Token = "0x600033C")]
		[Address(RVA = "0x960560", Offset = "0x960560", VA = "0x960560")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x960568", Offset = "0x960568", VA = "0x960568", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x960628", Offset = "0x960628", VA = "0x960628", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x96062C", Offset = "0x96062C", VA = "0x96062C", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x960754", Offset = "0x960754", VA = "0x960754")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x960870", Offset = "0x960870", VA = "0x960870")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x96098C", Offset = "0x96098C", VA = "0x96098C")]
	private void OnDzTimePauserPause()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x960990", Offset = "0x960990", VA = "0x960990")]
	private void OnDzTimePauserResume()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x9606D8", Offset = "0x9606D8", VA = "0x9606D8")]
	public TitlePanel CreateTitlePanel()
	{
		return null;
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x960B00", Offset = "0x960B00", VA = "0x960B00")]
	public GamePanel CreateGamePanel()
	{
		return null;
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x960C74", Offset = "0x960C74", VA = "0x960C74")]
	private void SubDestroyTitlePanel()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x960994", Offset = "0x960994", VA = "0x960994")]
	private void SubDestroyGamePanel(Action inAction)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x960D74", Offset = "0x960D74", VA = "0x960D74")]
	public MainScene()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x960DC4", Offset = "0x960DC4", VA = "0x960DC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9094", Offset = "0x5C9094")]
	private void <CreateTitlePanel>b__20_0()
	{
	}
}
[Token(Token = "0x200004A")]
public class PearList_SkyboxAndWeather : DzMonoBehaviour<PearList_SkyboxAndWeather>
{
	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DzIntPear[] _SkyboxAndWeatherList;

	[Token(Token = "0x1700008E")]
	public DzIntPear[] SkyboxAndWeatherList
	{
		[Token(Token = "0x600034A")]
		[Address(RVA = "0x8BF080", Offset = "0x8BF080", VA = "0x8BF080")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x8BF088", Offset = "0x8BF088", VA = "0x8BF088", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x8BF08C", Offset = "0x8BF08C", VA = "0x8BF08C", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x8BF090", Offset = "0x8BF090", VA = "0x8BF090")]
	public int GetPearValue2(int inPear1)
	{
		return default(int);
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x8BF100", Offset = "0x8BF100", VA = "0x8BF100")]
	public int GetPearValue1(int inPear2)
	{
		return default(int);
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x8BF170", Offset = "0x8BF170", VA = "0x8BF170")]
	public int GetRandomIndexAtGameLevel(NikaGameModelLevelType inGameLevel)
	{
		return default(int);
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x8BF418", Offset = "0x8BF418", VA = "0x8BF418")]
	public PearList_SkyboxAndWeather()
	{
	}
}
[Token(Token = "0x200004B")]
public class BaseTitlePanel : BasePanel
{
	[Token(Token = "0x40001FE")]
	protected new const float TIME_PANEL_DIALOG = 1f;

	[Token(Token = "0x40001FF")]
	private const float TIME_FADE_BLACKSHADE = 0.5f;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private TitlePanel _titlePanel;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private CanvasGroup _canvasGroup;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private CanvasGroup _canvasGroup_BlackShade;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Transform _BackBoard;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float _fromScale;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float _viewScale;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GameObject _goMoveSprite;

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xA0EC00", Offset = "0xA0EC00", VA = "0xA0EC00", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xA0ED34", Offset = "0xA0ED34", VA = "0xA0ED34", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xA0ED38", Offset = "0xA0ED38", VA = "0xA0ED38", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xA0F5D8", Offset = "0xA0F5D8", VA = "0xA0F5D8")]
	public void TappedCloseButton(bool inTappedSound = true)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xA0F2D4", Offset = "0xA0F2D4", VA = "0xA0F2D4")]
	public void EnableUI_TitlePanel(bool inEnableDisable, bool inBlackShade = true, bool inMustTrueBlockRaycast = false)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xA0F4D4", Offset = "0xA0F4D4", VA = "0xA0F4D4")]
	private void SubSetPanelVisible(bool inVisible)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xA0F7A0", Offset = "0xA0F7A0", VA = "0xA0F7A0")]
	public BaseTitlePanel()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xA0F7AC", Offset = "0xA0F7AC", VA = "0xA0F7AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C90A4", Offset = "0x5C90A4")]
	private void <OnStart>b__11_0()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xA0F814", Offset = "0xA0F814", VA = "0xA0F814")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C90B4", Offset = "0x5C90B4")]
	private void <TappedCloseButton>b__12_0()
	{
	}
}
[Token(Token = "0x200004C")]
public class PaiTable : DzMonoBehaviour<PaiTable>
{
	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _PaiStage;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PaiManager _paiMgr;

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x8BB5F8", Offset = "0x8BB5F8", VA = "0x8BB5F8", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x8BB678", Offset = "0x8BB678", VA = "0x8BB678", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x8BB67C", Offset = "0x8BB67C", VA = "0x8BB67C", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x8BB680", Offset = "0x8BB680", VA = "0x8BB680")]
	private void SubSceneSetup()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x8BB944", Offset = "0x8BB944", VA = "0x8BB944")]
	public PaiTable()
	{
	}
}
[Token(Token = "0x200004D")]
public class PanelNameplate : DzMonoBehaviour<PanelNameplate>
{
	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color _SelectedColor;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button _TargetButton;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Image _image;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color _saveColor;

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x8BB994", Offset = "0x8BB994", VA = "0x8BB994", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x8BB9FC", Offset = "0x8BB9FC", VA = "0x8BB9FC", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x8BBA00", Offset = "0x8BBA00", VA = "0x8BBA00", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x8BBA40", Offset = "0x8BBA40", VA = "0x8BBA40")]
	public void ChangeColor(bool inSelected)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x8BBAB8", Offset = "0x8BBAB8", VA = "0x8BBAB8")]
	public PanelNameplate()
	{
	}
}
[Token(Token = "0x200004E")]
public class TitleLocalizationUpdate : DzMonoLocalization<TitleLocalizationUpdate>
{
	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject LabelCopyright;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject LabelVersion;

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x9FECA8", Offset = "0x9FECA8", VA = "0x9FECA8", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x9FED1C", Offset = "0x9FED1C", VA = "0x9FED1C", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x9FECAC", Offset = "0x9FECAC", VA = "0x9FECAC")]
	private void SetAllObjects()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x9FED28", Offset = "0x9FED28", VA = "0x9FED28", Slot = "7")]
	protected override void OnLocalizationUpdate()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x9FEE7C", Offset = "0x9FEE7C", VA = "0x9FEE7C")]
	public TitleLocalizationUpdate()
	{
	}
}
[Token(Token = "0x200004F")]
public class TimeClock : DzMonoBehaviour<TimeClock>
{
	[Token(Token = "0x2000211")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C29D0", Offset = "0x5C29D0")]
	private sealed class <CoTimeClockLoop>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeClock <>4__this;

		[Token(Token = "0x17000235")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x9FC0D8", Offset = "0x9FC0D8", VA = "0x9FC0D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x9FC140", Offset = "0x9FC140", VA = "0x9FC140", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x9FBEEC", Offset = "0x9FBEEC", VA = "0x9FBEEC")]
		[DebuggerHidden]
		public <CoTimeClockLoop>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x9FC03C", Offset = "0x9FC03C", VA = "0x9FC03C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x9FC040", Offset = "0x9FC040", VA = "0x9FC040", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x9FC0E0", Offset = "0x9FC0E0", VA = "0x9FC0E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400020F")]
	private const float WAIT_CLOCK_DRAW = 0.5f;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text _Text_TimeClock;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CultureInfo _cultureInfo;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _oldTimeClockStr;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x9FBDCC", Offset = "0x9FBDCC", VA = "0x9FBDCC", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x9FBE48", Offset = "0x9FBE48", VA = "0x9FBE48", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x9FBE50", Offset = "0x9FBE50", VA = "0x9FBE50", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x9FBE7C", Offset = "0x9FBE7C", VA = "0x9FBE7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C90C4", Offset = "0x5C90C4")]
	private IEnumerator CoTimeClockLoop()
	{
		return null;
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x9FBF18", Offset = "0x9FBF18", VA = "0x9FBF18")]
	private void SubDrawTimeClock()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x9FBFEC", Offset = "0x9FBFEC", VA = "0x9FBFEC")]
	public TimeClock()
	{
	}
}
[Token(Token = "0x2000050")]
public class TitlePanel : BaseTitlePanel
{
	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private GameObject _canvasFront;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private Button _Item_StageSelect;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private GameObject _prefabPlaygamePanel;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private GameObject _prefabScoreboardPanel;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private GameObject _prefabStatisticsPanel;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private GameObject _prefabPreferencePanel;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private GameObject _prefabHowtoplayPanel;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private GameObject _prefabControllerManual;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool _isViewedControllerManual;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject _currentDialog;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Transform _currentButtonTransform;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float _currentButtonOffset;

	[Token(Token = "0x1700008F")]
	public Transform CurrentButtonTransform
	{
		[Token(Token = "0x600036F")]
		[Address(RVA = "0x9FEECC", Offset = "0x9FEECC", VA = "0x9FEECC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000090")]
	public float CurrentButtonOffset
	{
		[Token(Token = "0x6000370")]
		[Address(RVA = "0x9FEED4", Offset = "0x9FEED4", VA = "0x9FEED4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000091")]
	public GameObject CanvasFront
	{
		[Token(Token = "0x6000371")]
		[Address(RVA = "0x9FEEDC", Offset = "0x9FEEDC", VA = "0x9FEEDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x9FEEE4", Offset = "0x9FEEE4", VA = "0x9FEEE4", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x9FEF20", Offset = "0x9FEF20", VA = "0x9FEF20", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x9FEF28", Offset = "0x9FEF28", VA = "0x9FEF28", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x9FF0C0", Offset = "0x9FF0C0", VA = "0x9FF0C0")]
	public void TappedPlaygameButton([Optional] Button sender)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x9FF1E0", Offset = "0x9FF1E0", VA = "0x9FF1E0")]
	public void TappedScoreboardButton([Optional] Button sender)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x9FF2FC", Offset = "0x9FF2FC", VA = "0x9FF2FC")]
	public void TappedStatisticsButton([Optional] Button sender)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x9FF418", Offset = "0x9FF418", VA = "0x9FF418")]
	public void TappedPreferenceButton([Optional] Button sender)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x9FF534", Offset = "0x9FF534", VA = "0x9FF534")]
	public void TappedHowtoplayButton([Optional] Button sender)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x9FF650", Offset = "0x9FF650", VA = "0x9FF650")]
	public void TappedControllerButton([Optional] Button sender)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x9FF74C", Offset = "0x9FF74C", VA = "0x9FF74C")]
	public void TransitionTitlePanel()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x9FF8DC", Offset = "0x9FF8DC", VA = "0x9FF8DC")]
	public TitlePanel()
	{
	}
}
[Token(Token = "0x2000051")]
public class PlaygameMenuLayer : DzMonoBehaviour<PlaygameMenuLayer>
{
	[Serializable]
	[Token(Token = "0x2000212")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C29E0", Offset = "0x5C29E0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__15_0;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__16_0;

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x8C0BF8", Offset = "0x8C0BF8", VA = "0x8C0BF8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x8C0C00", Offset = "0x8C0C00", VA = "0x8C0C00")]
		internal void <TappedNewGameButton>b__15_0()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x8C0E68", Offset = "0x8C0E68", VA = "0x8C0E68")]
		internal void <TappedContinueButton>b__16_0()
		{
		}
	}

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlaygameSelectLayer _playgameSelectLayer;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button _Btn_NewGame;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button _Btn_ContinueGame;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Button _Btn_First;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Button _Btn_Last;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Button _Btn_Prior;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Button _Btn_Next;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CGameModel _gameModel;

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x8BF468", Offset = "0x8BF468", VA = "0x8BF468", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x8BF758", Offset = "0x8BF758", VA = "0x8BF758", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x8BF75C", Offset = "0x8BF75C", VA = "0x8BF75C", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x8BF760", Offset = "0x8BF760", VA = "0x8BF760")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x8BFB8C", Offset = "0x8BFB8C", VA = "0x8BFB8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x8BFCA8", Offset = "0x8BFCA8", VA = "0x8BFCA8")]
	private void OnLeftSwipe()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x8BFDD8", Offset = "0x8BFDD8", VA = "0x8BFDD8")]
	private void OnRightSwipe()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x8BFF08", Offset = "0x8BFF08", VA = "0x8BFF08")]
	public void TappedNewGameButton()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x8C0044", Offset = "0x8C0044", VA = "0x8C0044")]
	public void TappedContinueButton()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x8C0180", Offset = "0x8C0180", VA = "0x8C0180")]
	public void TappedStageFirstButton()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x8C088C", Offset = "0x8C088C", VA = "0x8C088C")]
	public void TappedStageLastButton()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x8C098C", Offset = "0x8C098C", VA = "0x8C098C")]
	public void TappedStagePriorButton()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x8C0A68", Offset = "0x8C0A68", VA = "0x8C0A68")]
	public void TappedStageNextButton()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x8BFA08", Offset = "0x8BFA08", VA = "0x8BFA08")]
	public void UpdateGamePlayButton()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x8BF87C", Offset = "0x8BF87C", VA = "0x8BF87C")]
	public void UpdateStageNaviButton()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x8C0B44", Offset = "0x8C0B44", VA = "0x8C0B44")]
	public PlaygameMenuLayer()
	{
	}
}
[Token(Token = "0x2000052")]
public class PlaygamePanel : BaseTitlePanel
{
	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private PlaygameMenuLayer _playgameMenuLayer;

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x8C0EE0", Offset = "0x8C0EE0", VA = "0x8C0EE0", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x8C0F6C", Offset = "0x8C0F6C", VA = "0x8C0F6C", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x8C0F74", Offset = "0x8C0F74", VA = "0x8C0F74", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x8C0F9C", Offset = "0x8C0F9C", VA = "0x8C0F9C")]
	private void SubCreateNextStage()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x8C1280", Offset = "0x8C1280", VA = "0x8C1280")]
	public PlaygamePanel()
	{
	}
}
[Token(Token = "0x2000053")]
public class PlaygameSelectLayer : DzMonoBehaviour<PlaygameSelectLayer>
{
	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlaygameMenuLayer _playgameMenuLayer;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text _LabelStageCount;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text _LabelStarCount;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform _ImgStar;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _Grp_LabelStageSize;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _Grp_SelectDetail;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject[] _Itm_SelectDetail;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _IsToggleEnabled;

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x8C1288", Offset = "0x8C1288", VA = "0x8C1288", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x8C14E0", Offset = "0x8C14E0", VA = "0x8C14E0", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x8C14E4", Offset = "0x8C14E4", VA = "0x8C14E4", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x8C18B4", Offset = "0x8C18B4", VA = "0x8C18B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x8C190C", Offset = "0x8C190C", VA = "0x8C190C")]
	public void ToggledHandler(GameObject sender)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x8C0254", Offset = "0x8C0254", VA = "0x8C0254")]
	public void RedrawStage()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x8C1F6C", Offset = "0x8C1F6C", VA = "0x8C1F6C")]
	public PlaygameSelectLayer()
	{
	}
}
[Token(Token = "0x2000054")]
public class SetterSelectDetail : DzMonoLocalization<SetterSelectDetail>
{
	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text _labelStagePartNO;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] _ImgStar;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text _textHighScore;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text _textFastestTime;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Text _textClearCount;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject _ImgCheckMark;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _stagePartNo;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CStagePartModel _stageParts;

	[Token(Token = "0x17000092")]
	public int StagePartNo
	{
		[Token(Token = "0x6000399")]
		[Address(RVA = "0x8C897C", Offset = "0x8C897C", VA = "0x8C897C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000093")]
	public GameObject ImgCheckMark
	{
		[Token(Token = "0x600039A")]
		[Address(RVA = "0x8C8984", Offset = "0x8C8984", VA = "0x8C8984")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x8C898C", Offset = "0x8C898C", VA = "0x8C898C", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x8C8BD0", Offset = "0x8C8BD0", VA = "0x8C8BD0", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x8C8C1C", Offset = "0x8C8C1C", VA = "0x8C8C1C", Slot = "7")]
	protected override void OnLocalizationUpdate()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x8C1AFC", Offset = "0x8C1AFC", VA = "0x8C1AFC")]
	public void RedrawDetail()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x8C8C20", Offset = "0x8C8C20", VA = "0x8C8C20")]
	public SetterSelectDetail()
	{
	}
}
[Token(Token = "0x2000055")]
public class SetterStatsDetail : DzMonoLocalization<SetterStatsDetail>
{
	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text _labelStagePartNO;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text _textGameCount;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text _textClearCount;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text _textClearRate;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Text _textPlayTime;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _stagePartNo;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CStatsStageModel _stageStats;

	[Token(Token = "0x17000094")]
	public int StagePartNo
	{
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x8C8C88", Offset = "0x8C8C88", VA = "0x8C8C88")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x8C8C90", Offset = "0x8C8C90", VA = "0x8C8C90", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x8C8EC0", Offset = "0x8C8EC0", VA = "0x8C8EC0", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x8C8F14", Offset = "0x8C8F14", VA = "0x8C8F14", Slot = "7")]
	protected override void OnLocalizationUpdate()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x8C934C", Offset = "0x8C934C", VA = "0x8C934C")]
	public SetterStatsDetail()
	{
	}
}
[Token(Token = "0x2000056")]
public class StatisticsListLayer : DzMonoBehaviour<StatisticsListLayer>
{
	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text _LabelTotalGameCount;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text _LabelTotalPlayTime;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _Grp_LabelStageSize;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _Grp_StatsDetail;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject[] _Itm_StatsDetail;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _whileTouched;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject _saveZoomObject;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _savePosition;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _saveSiblingIndex;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 _localCenterPos;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject _tempZoomObject;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _tempSiblingIndex;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private ColorBlock _saveColorBlock;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private ColorBlock _zoomedColorBlock;

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x8CD41C", Offset = "0x8CD41C", VA = "0x8CD41C", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x8CD670", Offset = "0x8CD670", VA = "0x8CD670", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x8CD674", Offset = "0x8CD674", VA = "0x8CD674", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x8CDE6C", Offset = "0x8CDE6C", VA = "0x8CDE6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x8CE174", Offset = "0x8CE174", VA = "0x8CE174")]
	public void TouchedHandler(GameObject sender)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x8CE440", Offset = "0x8CE440", VA = "0x8CE440")]
	public void TappedLayer()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x8CDE74", Offset = "0x8CDE74", VA = "0x8CDE74")]
	private void SubResetZoomed(bool inAnimeSoundFlag = true)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x8CE454", Offset = "0x8CE454", VA = "0x8CE454")]
	public StatisticsListLayer()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x8CE4BC", Offset = "0x8CE4BC", VA = "0x8CE4BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9128", Offset = "0x5C9128")]
	private void <TouchedHandler>b__18_0()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x8CE4C4", Offset = "0x8CE4C4", VA = "0x8CE4C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9138", Offset = "0x5C9138")]
	private void <SubResetZoomed>b__20_0()
	{
	}
}
[Token(Token = "0x2000057")]
public class StatisticsPanel : BaseTitlePanel
{
	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x8CE500", Offset = "0x8CE500", VA = "0x8CE500", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x8CE508", Offset = "0x8CE508", VA = "0x8CE508", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x8CE510", Offset = "0x8CE510", VA = "0x8CE510")]
	public StatisticsPanel()
	{
	}
}
[Token(Token = "0x2000058")]
public class ScoreBoardScoreLayer : DzMonoBehaviour<ScoreBoardScoreLayer>
{
	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text _LabelTotalStageCount;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text _LabelTotalStarCount;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform _ImgStar;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _Grp_LabelStageSize;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _Grp_ScoreDetail;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject[] _Itm_ScoreDetail;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _whileTouched;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject _saveZoomObject;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _savePosition;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _saveSiblingIndex;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 _localCenterPos;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject _tempZoomObject;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _tempSiblingIndex;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private ColorBlock _saveColorBlock;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private ColorBlock _zoomedColorBlock;

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x8C6920", Offset = "0x8C6920", VA = "0x8C6920", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x8C6BB0", Offset = "0x8C6BB0", VA = "0x8C6BB0", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x8C6BB4", Offset = "0x8C6BB4", VA = "0x8C6BB4", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x8C7248", Offset = "0x8C7248", VA = "0x8C7248")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x8C7550", Offset = "0x8C7550", VA = "0x8C7550")]
	public void TouchedHandler(GameObject sender)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x8C781C", Offset = "0x8C781C", VA = "0x8C781C")]
	public void TappedLayer()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x8C7250", Offset = "0x8C7250", VA = "0x8C7250")]
	private void SubResetZoomed(bool inAnimeSoundFlag = true)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x8C7830", Offset = "0x8C7830", VA = "0x8C7830")]
	public ScoreBoardScoreLayer()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x8C7898", Offset = "0x8C7898", VA = "0x8C7898")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9148", Offset = "0x5C9148")]
	private void <TouchedHandler>b__19_0()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x8C78A0", Offset = "0x8C78A0", VA = "0x8C78A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9158", Offset = "0x5C9158")]
	private void <SubResetZoomed>b__21_0()
	{
	}
}
[Token(Token = "0x2000059")]
public class ScoreboardPanel : BaseTitlePanel
{
	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x8C820C", Offset = "0x8C820C", VA = "0x8C820C", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x8C8214", Offset = "0x8C8214", VA = "0x8C8214", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x8C821C", Offset = "0x8C821C", VA = "0x8C821C")]
	public ScoreboardPanel()
	{
	}
}
[Token(Token = "0x200005A")]
public class SetterScoreDetail : DzMonoLocalization<SetterScoreDetail>
{
	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text _labelStagePartNO;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text _textStarCount;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject _imgStar;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text _textHighScore;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Text _textAverageScore;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Text _textFastestTime;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Text _textStarClearRate;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _stagePartNo;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CStatsStageModel _stageStats;

	[Token(Token = "0x17000095")]
	public int StagePartNo
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x8C8234", Offset = "0x8C8234", VA = "0x8C8234")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x8C823C", Offset = "0x8C823C", VA = "0x8C823C", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x8C84D4", Offset = "0x8C84D4", VA = "0x8C84D4", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x8C8528", Offset = "0x8C8528", VA = "0x8C8528", Slot = "7")]
	protected override void OnLocalizationUpdate()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x8C892C", Offset = "0x8C892C", VA = "0x8C892C")]
	public SetterScoreDetail()
	{
	}
}
[Token(Token = "0x200005B")]
public class HowtoplayPanel : BaseTitlePanel
{
	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x91AE08", Offset = "0x91AE08", VA = "0x91AE08", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x91AE10", Offset = "0x91AE10", VA = "0x91AE10", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x91AE18", Offset = "0x91AE18", VA = "0x91AE18")]
	public HowtoplayPanel()
	{
	}
}
[Token(Token = "0x200005C")]
public class HowtoplayScrollView : DzMonoBehaviour<HowtoplayScrollView>
{
	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _Grp_PageSelecter;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DzSnapScrollRect _scrollRect;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _curPageNo;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _firstPageFlag;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _maxPageCount;

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x91AE20", Offset = "0x91AE20", VA = "0x91AE20", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x91AEAC", Offset = "0x91AEAC", VA = "0x91AEAC", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x91AEB0", Offset = "0x91AEB0", VA = "0x91AEB0", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x91AEB4", Offset = "0x91AEB4", VA = "0x91AEB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x91B310", Offset = "0x91B310", VA = "0x91B310")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x91B49C", Offset = "0x91B49C", VA = "0x91B49C")]
	public void OnPageChange(int inIndexH, int inIndexV)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x91B580", Offset = "0x91B580", VA = "0x91B580")]
	private void OnLeftSwipe()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x91B680", Offset = "0x91B680", VA = "0x91B680")]
	private void OnRightSwipe()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x91B778", Offset = "0x91B778", VA = "0x91B778")]
	public void OnTogglePageSelecter()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x91B048", Offset = "0x91B048", VA = "0x91B048")]
	private void SubFirstPage()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x91BACC", Offset = "0x91BACC", VA = "0x91BACC")]
	public HowtoplayScrollView()
	{
	}
}
[Token(Token = "0x200005D")]
public class PreferencePanel : BaseTitlePanel
{
	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private PreferenceControlLayer _prefControlLayer;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private CPrefModel _newPrefModel;

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x8C3414", Offset = "0x8C3414", VA = "0x8C3414", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x8C3544", Offset = "0x8C3544", VA = "0x8C3544", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x8C354C", Offset = "0x8C354C", VA = "0x8C354C", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x8C35E8", Offset = "0x8C35E8", VA = "0x8C35E8", Slot = "7")]
	protected override void OnDialogOpenDone()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x8C3690", Offset = "0x8C3690", VA = "0x8C3690")]
	public void TappedFactorySetting()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x8C3730", Offset = "0x8C3730", VA = "0x8C3730")]
	public void TappedCancel()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x8C37F4", Offset = "0x8C37F4", VA = "0x8C37F4")]
	public void TappedConfirm()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x8C3578", Offset = "0x8C3578", VA = "0x8C3578")]
	private void SubSetActiveTestButtons(bool inActive)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x8C38F0", Offset = "0x8C38F0", VA = "0x8C38F0")]
	public PreferencePanel()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x8C38F8", Offset = "0x8C38F8", VA = "0x8C38F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9168", Offset = "0x5C9168")]
	private void <OnDialogOpenDone>b__5_0()
	{
	}
}
[Token(Token = "0x200005E")]
public class ControllerManual : BasePanel
{
	[Token(Token = "0x400026C")]
	private const float TIME_FADE_IN = 0.5f;

	[Token(Token = "0x400026D")]
	private const float ALPHA_CONTROLLERMANUAL_PANEL = 0.75f;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private TitlePanel _titlePanel;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private CanvasGroup _canvasGroup;

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x7B28D8", Offset = "0x7B28D8", VA = "0x7B28D8", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x7B296C", Offset = "0x7B296C", VA = "0x7B296C", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x7B2974", Offset = "0x7B2974", VA = "0x7B2974", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x7B2AD4", Offset = "0x7B2AD4", VA = "0x7B2AD4")]
	private void OnBackKeyDown()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x7B2BA0", Offset = "0x7B2BA0", VA = "0x7B2BA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x7B2D00", Offset = "0x7B2D00", VA = "0x7B2D00")]
	private void SubEnableUI_TitlePanel(bool inEnableDisable)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x7B2AD8", Offset = "0x7B2AD8", VA = "0x7B2AD8")]
	private void SubCloseControllerManual()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x7B2E14", Offset = "0x7B2E14", VA = "0x7B2E14")]
	public ControllerManual()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x7B2E1C", Offset = "0x7B2E1C", VA = "0x7B2E1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9178", Offset = "0x5C9178")]
	private void <OnStart>b__6_0()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x7B2E24", Offset = "0x7B2E24", VA = "0x7B2E24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9188", Offset = "0x5C9188")]
	private void <SubCloseControllerManual>b__10_0()
	{
	}
}
[Token(Token = "0x200005F")]
public class BaseGamePanel : BasePanel
{
	[Token(Token = "0x4000270")]
	protected const float TIME_GAMEPANEL_DIALOG = 0.75f;

	[Token(Token = "0x4000271")]
	protected const float TIME_TRANSITION_TITLESCENE = 0.1f;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
	protected bool _flagGameOver;

	[Token(Token = "0x17000096")]
	public bool FlagGameOver
	{
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xA0D80C", Offset = "0xA0D80C", VA = "0xA0D80C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xA0D814", Offset = "0xA0D814", VA = "0xA0D814", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xA0D838", Offset = "0xA0D838", VA = "0xA0D838", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xA0D83C", Offset = "0xA0D83C", VA = "0xA0D83C", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xA0D98C", Offset = "0xA0D98C", VA = "0xA0D98C")]
	public void TappedCloseButton(bool inTappedSound = true)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xA0DB0C", Offset = "0xA0DB0C", VA = "0xA0DB0C")]
	public void TappedHomeButton()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xA0DCA8", Offset = "0xA0DCA8", VA = "0xA0DCA8")]
	public void TappedStageListButton()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xA0DE44", Offset = "0xA0DE44", VA = "0xA0DE44")]
	public void TappedRetryGameButton()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xA0DFE0", Offset = "0xA0DFE0", VA = "0xA0DFE0")]
	public BaseGamePanel()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xA0DFE4", Offset = "0xA0DFE4", VA = "0xA0DFE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9198", Offset = "0x5C9198")]
	private void <OnStart>b__7_0()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xA0E014", Offset = "0xA0E014", VA = "0xA0E014")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C91A8", Offset = "0x5C91A8")]
	private void <TappedCloseButton>b__8_0()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xA0E0AC", Offset = "0xA0E0AC", VA = "0xA0E0AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C91B8", Offset = "0x5C91B8")]
	private void <TappedCloseButton>b__8_1()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xA0E1B8", Offset = "0xA0E1B8", VA = "0xA0E1B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C91C8", Offset = "0x5C91C8")]
	private void <TappedHomeButton>b__9_0()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xA0E250", Offset = "0xA0E250", VA = "0xA0E250")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C91D8", Offset = "0x5C91D8")]
	private void <TappedHomeButton>b__9_1()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xA0E344", Offset = "0xA0E344", VA = "0xA0E344")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C91E8", Offset = "0x5C91E8")]
	private void <TappedStageListButton>b__10_0()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xA0E3DC", Offset = "0xA0E3DC", VA = "0xA0E3DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C91F8", Offset = "0x5C91F8")]
	private void <TappedStageListButton>b__10_1()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xA0E4E0", Offset = "0xA0E4E0", VA = "0xA0E4E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9208", Offset = "0x5C9208")]
	private void <TappedRetryGameButton>b__11_0()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xA0E578", Offset = "0xA0E578", VA = "0xA0E578")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9218", Offset = "0x5C9218")]
	private void <TappedRetryGameButton>b__11_1()
	{
	}
}
[Token(Token = "0x2000060")]
public class ConerSphere : DzMonoBehaviour<ConerSphere>
{
	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMesh _Textmesh_TurnNumber;

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x7B27BC", Offset = "0x7B27BC", VA = "0x7B27BC", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x7B283C", Offset = "0x7B283C", VA = "0x7B283C", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x7B2840", Offset = "0x7B2840", VA = "0x7B2840", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x7B2844", Offset = "0x7B2844", VA = "0x7B2844")]
	public void SetConerNumber(int inConerNumber)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x7B2888", Offset = "0x7B2888", VA = "0x7B2888")]
	public ConerSphere()
	{
	}
}
[Token(Token = "0x2000061")]
public class GameLocalizationUpdate : DzMonoLocalization<GameLocalizationUpdate>
{
	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x90E3FC", Offset = "0x90E3FC", VA = "0x90E3FC", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x90E404", Offset = "0x90E404", VA = "0x90E404", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x90E400", Offset = "0x90E400", VA = "0x90E400")]
	private void SetAllObjects()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x90E410", Offset = "0x90E410", VA = "0x90E410", Slot = "7")]
	protected override void OnLocalizationUpdate()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x90E414", Offset = "0x90E414", VA = "0x90E414")]
	public GameLocalizationUpdate()
	{
	}
}
[Token(Token = "0x2000062")]
public class OverlaySprite : DzMonoBehaviour<OverlaySprite>
{
	[Token(Token = "0x2000213")]
	private enum GameModeSpriteType
	{
		[Token(Token = "0x4000B25")]
		SPRITE_SEARCH,
		[Token(Token = "0x4000B26")]
		SPRITE_SWAP,
		[Token(Token = "0x4000B27")]
		SPRITE_BOMB,
		[Token(Token = "0x4000B28")]
		SPRITE_SHUFFLE,
		[Token(Token = "0x4000B29")]
		SPRITE_PAUSE,
		[Token(Token = "0x4000B2A")]
		SPRITE_STALEMATE
	}

	[Token(Token = "0x4000274")]
	private const float TIME_FADE = 0.5f;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite[] _gameModeSprites;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SpriteRenderer _spriteRenderer;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CGameModel _gameModel;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CTempModel _tempModel;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _saveAlpha;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private NikaGameModelModeType _oldGameMode;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _saveScale;

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xA8B990", Offset = "0xA8B990", VA = "0xA8B990", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xA8BA78", Offset = "0xA8BA78", VA = "0xA8BA78", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xA8BA7C", Offset = "0xA8BA7C", VA = "0xA8BA7C", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xA8BB00", Offset = "0xA8BB00", VA = "0xA8BB00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xA8BBF8", Offset = "0xA8BBF8", VA = "0xA8BBF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xA8BCF0", Offset = "0xA8BCF0", VA = "0xA8BCF0")]
	private void OnGameModeChange()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xA8BD0C", Offset = "0xA8BD0C", VA = "0xA8BD0C")]
	private void SubChangeSprite(NikaGameModelModeType inGameMode)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xA8C07C", Offset = "0xA8C07C", VA = "0xA8C07C")]
	public OverlaySprite()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xA8C0CC", Offset = "0xA8C0CC", VA = "0xA8C0CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9228", Offset = "0x5C9228")]
	private void <SubChangeSprite>b__15_0()
	{
	}
}
[Token(Token = "0x2000063")]
public class TouchPaiTable : DzMonoBehaviour<TouchPaiTable>
{
	[Token(Token = "0x2000214")]
	private enum LaserPointerEventType
	{
		[Token(Token = "0x4000B2C")]
		EVENT_POINTER_BEGINED,
		[Token(Token = "0x4000B2D")]
		EVENT_POINTER_ENDED,
		[Token(Token = "0x4000B2E")]
		EVENT_POINTER_MOVED,
		[Token(Token = "0x4000B2F")]
		EVENT_POINTER_LEAVED
	}

	[Token(Token = "0x2000215")]
	private struct PointerEventOrder
	{
		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LaserPointerEventType eventType;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 worldPosition;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool pointerPressed;
	}

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Canvas _canvasFront;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PaiManager _paiMgr;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _tableArea;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventTrigger _triggerEvent;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CPai _movedPai;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Queue<PointerEventOrder> _pointerEventtQueue;

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x9FF8E4", Offset = "0x9FF8E4", VA = "0x9FF8E4", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x9FFA0C", Offset = "0x9FFA0C", VA = "0x9FFA0C", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x9FFA10", Offset = "0x9FFA10", VA = "0x9FFA10", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x9FFA30", Offset = "0x9FFA30", VA = "0x9FFA30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x9FFBDC", Offset = "0x9FFBDC", VA = "0x9FFBDC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x9FFD88", Offset = "0x9FFD88", VA = "0x9FFD88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xA00268", Offset = "0xA00268", VA = "0xA00268")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xA0026C", Offset = "0xA0026C", VA = "0xA0026C")]
	private void OnGameRun()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xA0028C", Offset = "0xA0028C", VA = "0xA0028C")]
	private void OnGameStop()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xA002AC", Offset = "0xA002AC", VA = "0xA002AC")]
	private void OnGameFinish()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xA002CC", Offset = "0xA002CC", VA = "0xA002CC")]
	private void OnTouchEnabled()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xA002EC", Offset = "0xA002EC", VA = "0xA002EC")]
	private void OnTouchDisabled()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xA0030C", Offset = "0xA0030C", VA = "0xA0030C")]
	public void PointerPaiBegin(BaseEventData inEventData)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xA00408", Offset = "0xA00408", VA = "0xA00408")]
	public void PointerPaiEnded(BaseEventData inEventData)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xA00508", Offset = "0xA00508", VA = "0xA00508")]
	public void PointerPaiLeaved(BaseEventData inEventData)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xA00608", Offset = "0xA00608", VA = "0xA00608")]
	public void OnLaserMove()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x9FFEF4", Offset = "0x9FFEF4", VA = "0x9FFEF4")]
	private void SubPointerPaiBegin(Vector3 inWorldPos)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xA00030", Offset = "0xA00030", VA = "0xA00030")]
	private void SubPointerPaiEnded(Vector3 inWorldPos)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xA000D8", Offset = "0xA000D8", VA = "0xA000D8")]
	private void SubPointerPaiMoved(Vector3 inWorldPos, bool inMousePressed)
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xA00248", Offset = "0xA00248", VA = "0xA00248")]
	private void SubPointerPaiLeaved(Vector3 inWorldPos)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xA00B30", Offset = "0xA00B30", VA = "0xA00B30")]
	private Vector3 FncScreenToLocalPoint(Vector3 inScreenPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xA00CFC", Offset = "0xA00CFC", VA = "0xA00CFC")]
	private Vector3 FncScreenToWorldPoint(Vector3 inScreenPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xA00E6C", Offset = "0xA00E6C", VA = "0xA00E6C")]
	private Vector2 FncWorldToScreenPoint(Vector3 inWorldPos)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xA0074C", Offset = "0xA0074C", VA = "0xA0074C")]
	private CPai FncHitWorldPointToCPai(Vector3 inWorldPoint, out Vector2 outPaiHitPoint)
	{
		return null;
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xA00F08", Offset = "0xA00F08", VA = "0xA00F08")]
	public TouchPaiTable()
	{
	}
}
[Token(Token = "0x2000064")]
public class AlertGiveUpConfirm : DzMonoBehaviour<AlertGiveUpConfirm>
{
	[Token(Token = "0x4000282")]
	private const float TIME_FADE = 0.5f;

	[Token(Token = "0x4000283")]
	private const float TIME_YURAYURA_MOVE = 1f;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _Img_Hukidashi_Body;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image _Img_Hukidashi_Arrow;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CGameModel _gameModel;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CTempModel _tempModel;

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xA0ADA4", Offset = "0xA0ADA4", VA = "0xA0ADA4", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xA0AE74", Offset = "0xA0AE74", VA = "0xA0AE74", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xA0AE78", Offset = "0xA0AE78", VA = "0xA0AE78", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xA0AFC4", Offset = "0xA0AFC4", VA = "0xA0AFC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xA0B0E0", Offset = "0xA0B0E0", VA = "0xA0B0E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xA0B1FC", Offset = "0xA0B1FC", VA = "0xA0B1FC")]
	private void OnGiveupConfirmAlert()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xA0B32C", Offset = "0xA0B32C", VA = "0xA0B32C")]
	private void OnGiveupConfirmOff()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xA0B204", Offset = "0xA0B204", VA = "0xA0B204")]
	private void SubFadeInHukidashi(float inFadeTime = 0f)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xA0AE80", Offset = "0xA0AE80", VA = "0xA0AE80")]
	private void SubFadeOutHukidashi(float inFadeTime = 0f)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xA0B334", Offset = "0xA0B334", VA = "0xA0B334")]
	public AlertGiveUpConfirm()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xA0B384", Offset = "0xA0B384", VA = "0xA0B384")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9238", Offset = "0x5C9238")]
	private void <SubFadeInHukidashi>b__13_0()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xA0B598", Offset = "0xA0B598", VA = "0xA0B598")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9248", Offset = "0x5C9248")]
	private void <SubFadeOutHukidashi>b__14_0()
	{
	}
}
[Token(Token = "0x2000065")]
public class AlertHukidashi : DzMonoBehaviour<AlertHukidashi>
{
	[Token(Token = "0x2000216")]
	private enum GameButtonType
	{
		[Token(Token = "0x4000B34")]
		BUTTON_SEARCH,
		[Token(Token = "0x4000B35")]
		BUTTON_SWAP,
		[Token(Token = "0x4000B36")]
		BUTTON_BOMB,
		[Token(Token = "0x4000B37")]
		BUTTON_SHUFFLE,
		[Token(Token = "0x4000B38")]
		BUTTON_PAUSE
	}

	[Token(Token = "0x4000288")]
	private const float TIME_FADE = 0.5f;

	[Token(Token = "0x4000289")]
	private const float TIME_YURAYURA_MOVE = 1f;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button[] _gameButtons;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _Img_Hukidashi_Body;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image _Img_Hukidashi_Arrow;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text _Label_Message;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _Grp_ConfirmButtons;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CGameModel _gameModel;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CTempModel _tempModel;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _saveHukidashiPosition;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector2 _saveHukidashiSizeDelta;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private NikaGameModelModeType _oldGameMode;

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xA0B630", Offset = "0xA0B630", VA = "0xA0B630", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xA0B810", Offset = "0xA0B810", VA = "0xA0B810", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xA0B814", Offset = "0xA0B814", VA = "0xA0B814", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xA0B960", Offset = "0xA0B960", VA = "0xA0B960")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xA0BA58", Offset = "0xA0BA58", VA = "0xA0BA58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xA0BB50", Offset = "0xA0BB50", VA = "0xA0BB50")]
	private void OnGameModeChange()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xA0BEE4", Offset = "0xA0BEE4", VA = "0xA0BEE4")]
	private void SubFadeInHukidashi(float inFadeTime = 0f)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xA0B81C", Offset = "0xA0B81C", VA = "0xA0B81C")]
	private void SubFadeOutHukidashi(float inFadeTime = 0f)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xA0BB70", Offset = "0xA0BB70", VA = "0xA0BB70")]
	private void SubChangeHukidashi(NikaGameModelModeType inGameMode, string inMessage)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xA0C00C", Offset = "0xA0C00C", VA = "0xA0C00C")]
	public AlertHukidashi()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xA0C05C", Offset = "0xA0C05C", VA = "0xA0C05C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9258", Offset = "0x5C9258")]
	private void <SubFadeInHukidashi>b__19_0()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xA0C270", Offset = "0xA0C270", VA = "0xA0C270")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9268", Offset = "0x5C9268")]
	private void <SubFadeOutHukidashi>b__20_0()
	{
	}
}
[Token(Token = "0x2000066")]
public class CheckMeter : DzMonoBehaviour<CheckMeter>
{
	[Token(Token = "0x2000217")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C29F0", Offset = "0x5C29F0")]
	private sealed class <CoDrawLoop>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CheckMeter <>4__this;

		[Token(Token = "0x17000237")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0xA1975C", Offset = "0xA1975C", VA = "0xA1975C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FB8")]
			[Address(RVA = "0xA197C4", Offset = "0xA197C4", VA = "0xA197C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xA18C4C", Offset = "0xA18C4C", VA = "0xA18C4C")]
		[DebuggerHidden]
		public <CoDrawLoop>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xA196A4", Offset = "0xA196A4", VA = "0xA196A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xA196A8", Offset = "0xA196A8", VA = "0xA196A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xA19764", Offset = "0xA19764", VA = "0xA19764", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000294")]
	private const float CHECKMETER_POS_X = 16f;

	[Token(Token = "0x4000295")]
	private const float CHECKMETER_GAP = 6f;

	[Token(Token = "0x4000296")]
	private const float WAIT_METER_DRAW = 0.1f;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _prefabCheckIndicater;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text _Label_Progress;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] _ind_CheckMeter;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CStageDefine _stageDefine;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _paiMeterCount;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _paiChangedCount;

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xA18978", Offset = "0xA18978", VA = "0xA18978", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xA18BA8", Offset = "0xA18BA8", VA = "0xA18BA8", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xA18BB0", Offset = "0xA18BB0", VA = "0xA18BB0", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xA18BDC", Offset = "0xA18BDC", VA = "0xA18BDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C9278", Offset = "0x5C9278")]
	private IEnumerator CoDrawLoop()
	{
		return null;
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xA18C78", Offset = "0xA18C78", VA = "0xA18C78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xA18E00", Offset = "0xA18E00", VA = "0xA18E00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xA18F88", Offset = "0xA18F88", VA = "0xA18F88")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xA191C4", Offset = "0xA191C4", VA = "0xA191C4")]
	private void OnGameInit()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xA19318", Offset = "0xA19318", VA = "0xA19318")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xA1931C", Offset = "0xA1931C", VA = "0xA1931C")]
	private void OnGameRun()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xA19360", Offset = "0xA19360", VA = "0xA19360")]
	private void OnGameStop()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xA193A8", Offset = "0xA193A8", VA = "0xA193A8")]
	private void OnGameFinish()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xA1949C", Offset = "0xA1949C", VA = "0xA1949C")]
	private void SubMeterDrawing()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xA1963C", Offset = "0xA1963C", VA = "0xA1963C")]
	public CheckMeter()
	{
	}
}
[Token(Token = "0x2000067")]
public class GameMenuLayer : DzMonoBehaviour<GameMenuLayer>
{
	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button _Btn_Search;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Button _Btn_Swap;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Button _Btn_Bomb;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Button _Btn_Shuffle;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Button _Btn_Pause;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Button _Btn_Preference;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Button _Btn_PlayManual;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Button _Btn_GiveUp;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Text _Text_Search;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Text _Text_Swap;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Text _Text_Bomb;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Text _Text_Shuffle;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private DzAutoZoomingButton _AutoEffect_Swap;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private DzAutoZoomingButton _AutoEffect_Bomb;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private DzAutoZoomingButton _AutoEffect_Shuffle;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CGameModel _gameModel;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private CPaiModel _paiModel;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private CTempModel _tempModel;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float _saveTextFontSize;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool _touchEnabled;

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x90E464", Offset = "0x90E464", VA = "0x90E464", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x90E8B0", Offset = "0x90E8B0", VA = "0x90E8B0", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x90E8B4", Offset = "0x90E8B4", VA = "0x90E8B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x90EAA8", Offset = "0x90EAA8", VA = "0x90EAA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x90EC9C", Offset = "0x90EC9C", VA = "0x90EC9C")]
	private void OnGameInit()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x90F1B4", Offset = "0x90F1B4", VA = "0x90F1B4")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x90F1B8", Offset = "0x90F1B8", VA = "0x90F1B8")]
	private void OnGameRun()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x90F588", Offset = "0x90F588", VA = "0x90F588")]
	private void OnGameStop()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x90F58C", Offset = "0x90F58C", VA = "0x90F58C")]
	private void OnGameModeChange()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x90F698", Offset = "0x90F698", VA = "0x90F698")]
	private void OnItemUsed()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x90F6C8", Offset = "0x90F6C8", VA = "0x90F6C8")]
	private void OnTouchEnabled()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x90F6D4", Offset = "0x90F6D4", VA = "0x90F6D4")]
	private void OnTouchDisabled()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x90ECC0", Offset = "0x90ECC0", VA = "0x90ECC0")]
	private void SubDisableItemButton()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x90F1BC", Offset = "0x90F1BC", VA = "0x90F1BC")]
	private void SubUpdateItemButton()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x90F618", Offset = "0x90F618", VA = "0x90F618")]
	private void SubEnabledMenuButton(bool inEnabled)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x90ED7C", Offset = "0x90ED7C", VA = "0x90ED7C")]
	private void SubDrawItemCount()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x90F6DC", Offset = "0x90F6DC", VA = "0x90F6DC")]
	public GameMenuLayer()
	{
	}
}
[Token(Token = "0x2000068")]
public class GamePanel : BasePanel
{
	[Token(Token = "0x2000218")]
	public enum GameSetupType
	{
		[Token(Token = "0x4000B3D")]
		SETUP_ONSTART,
		[Token(Token = "0x4000B3E")]
		SETUP_CONTINUE
	}

	[Token(Token = "0x2000219")]
	public enum GameDialogType
	{
		[Token(Token = "0x4000B40")]
		DIALOG_PLAYMANUAL,
		[Token(Token = "0x4000B41")]
		DIALOG_PREFERENCE,
		[Token(Token = "0x4000B42")]
		DIALOG_GAMEPAUSE,
		[Token(Token = "0x4000B43")]
		DIALOG_GAMESTART,
		[Token(Token = "0x4000B44")]
		DIALOG_GAMECLEAR,
		[Token(Token = "0x4000B45")]
		DIALOG_GAMEOVER_STALEMATE,
		[Token(Token = "0x4000B46")]
		DIALOG_GAMEOVER_TIMEOVER
	}

	[Serializable]
	[Token(Token = "0x200021A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2A00", Offset = "0x5C2A00")]
	private sealed class <>c
	{
		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__24_0;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__40_0;

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x912000", Offset = "0x912000", VA = "0x912000")]
		public <>c()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x912008", Offset = "0x912008", VA = "0x912008")]
		internal void <OnGameStart>b__24_0()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x9120C8", Offset = "0x9120C8", VA = "0x9120C8")]
		internal void <TappedGiveUpOKButton>b__40_0()
		{
		}
	}

	[Token(Token = "0x40002B1")]
	private const float TIME_PANEL_APPEAR = 1f;

	[Token(Token = "0x40002B2")]
	private const float TIME_PAISTAGE_MOVE = 1f;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private GameObject _PaiStage;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Transform _Grp_PaiTable;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject _prefabPlayManualPanel;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject _prefabPreferencePanel;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GameObject _prefabStartPanel;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private GameObject _prefabPausePanel;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private GameObject _prefabClearPanel;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private GameObject _prefabStalematePanel;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private GameObject _prefabTimeoverPanel;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private PaiManager _paiMgr;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private CGameModel _gameModel;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private CPaiModel _paiModel;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private CStageDefine _stageDef;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject _currentPanel;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3 _paiStage_Scale;

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x90F72C", Offset = "0x90F72C", VA = "0x90F72C", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x90F894", Offset = "0x90F894", VA = "0x90F894", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x90F89C", Offset = "0x90F89C", VA = "0x90F89C", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x90FB80", Offset = "0x90FB80", VA = "0x90FB80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x90FD50", Offset = "0x90FD50", VA = "0x90FD50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x90FF20", Offset = "0x90FF20", VA = "0x90FF20")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x910008", Offset = "0x910008", VA = "0x910008")]
	private void OnGameRun()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x9100DC", Offset = "0x9100DC", VA = "0x9100DC")]
	private void OnGameStop()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x9101AC", Offset = "0x9101AC", VA = "0x9101AC")]
	private void OnDzTimePauserPause()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x9101B0", Offset = "0x9101B0", VA = "0x9101B0")]
	private void OnDzTimePauserResume()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x9101B4", Offset = "0x9101B4", VA = "0x9101B4")]
	private void OnPrefModelChange()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x9101B8", Offset = "0x9101B8", VA = "0x9101B8")]
	public void TappedSearchButton([Optional] Button sender)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x91044C", Offset = "0x91044C", VA = "0x91044C")]
	public void TappedSwapButton([Optional] Button sender)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x9107AC", Offset = "0x9107AC", VA = "0x9107AC")]
	public void TappedBombButton([Optional] Button sender)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x910B1C", Offset = "0x910B1C", VA = "0x910B1C")]
	public void TappedShuffleButton([Optional] Button sender)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x910D94", Offset = "0x910D94", VA = "0x910D94")]
	public void TappedShuffleOKButton()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x910EBC", Offset = "0x910EBC", VA = "0x910EBC")]
	public void TappedShuffleCancelButton()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x910FA0", Offset = "0x910FA0", VA = "0x910FA0")]
	public void TappedPlayManualButton([Optional] Button sender)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x911170", Offset = "0x911170", VA = "0x911170")]
	public void TappedPreferenceButton([Optional] Button sender)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x91123C", Offset = "0x91123C", VA = "0x91123C")]
	public void TappedPauseButton([Optional] Button sender)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x911364", Offset = "0x911364", VA = "0x911364")]
	public void TappedGiveUpButton([Optional] Button sender)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x911468", Offset = "0x911468", VA = "0x911468")]
	public void TappedGiveUpOKButton()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x91162C", Offset = "0x91162C", VA = "0x91162C")]
	public void TappedGiveUpCancelButton()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x911730", Offset = "0x911730", VA = "0x911730")]
	public void TappedClearButton()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x9117A8", Offset = "0x9117A8", VA = "0x9117A8")]
	public void TappedStalemateButton()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x911820", Offset = "0x911820", VA = "0x911820")]
	public void GameSetup(GameSetupType inGameSetup, NikaDataModelGameType inGameType)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x91106C", Offset = "0x91106C", VA = "0x91106C")]
	public void ShowGameDialog(GameDialogType inDialogType)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x911E00", Offset = "0x911E00", VA = "0x911E00")]
	public GamePanel()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x911E08", Offset = "0x911E08", VA = "0x911E08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C92DC", Offset = "0x5C92DC")]
	private void <OnStart>b__21_0()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x911F8C", Offset = "0x911F8C", VA = "0x911F8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C92EC", Offset = "0x5C92EC")]
	private void <OnStart>b__21_1()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x911F94", Offset = "0x911F94", VA = "0x911F94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C92FC", Offset = "0x5C92FC")]
	private void <GameSetup>b__44_0()
	{
	}
}
[Token(Token = "0x2000069")]
public class ScoreViewer : DzMonoBehaviour<ScoreViewer>
{
	[Token(Token = "0x40002C2")]
	private const int FONT_SIZE_ADDSCORE = 20;

	[Token(Token = "0x40002C3")]
	private const float WAIT_ADDSCORE_DRAWING = 1f;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text _Label_Score;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CGameModel _gameModel;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CTempModel _tempModel;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color _saveScoreColor;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _saveScoreFontSize;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _lastScoreViewerSecs;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color _minusScoreColor;

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x8C78DC", Offset = "0x8C78DC", VA = "0x8C78DC", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x8C79D8", Offset = "0x8C79D8", VA = "0x8C79D8", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x8C79DC", Offset = "0x8C79DC", VA = "0x8C79DC", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x8C79E0", Offset = "0x8C79E0", VA = "0x8C79E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x8C7B68", Offset = "0x8C7B68", VA = "0x8C7B68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x8C7CF0", Offset = "0x8C7CF0", VA = "0x8C7CF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x8C8040", Offset = "0x8C8040", VA = "0x8C8040")]
	private void OnGameInit()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x8C80B8", Offset = "0x8C80B8", VA = "0x8C80B8")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x8C80BC", Offset = "0x8C80BC", VA = "0x8C80BC")]
	private void OnGameRun()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x8C8100", Offset = "0x8C8100", VA = "0x8C8100")]
	private void OnGameStop()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x8C8148", Offset = "0x8C8148", VA = "0x8C8148")]
	private void OnGameFinish()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x8C7DF8", Offset = "0x8C7DF8", VA = "0x8C7DF8")]
	private void SubAddDrawScore(int inAddScore)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x8C7F24", Offset = "0x8C7F24", VA = "0x8C7F24")]
	private void SubDrawTotalScore()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x8C81BC", Offset = "0x8C81BC", VA = "0x8C81BC")]
	public ScoreViewer()
	{
	}
}
[Token(Token = "0x200006A")]
public class TimeMeter : DzMonoBehaviour<TimeMeter>
{
	[Serializable]
	[Token(Token = "0x200021B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2A10", Offset = "0x5C2A10")]
	private sealed class <>c
	{
		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__27_0;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__27_1;

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x9FD3C4", Offset = "0x9FD3C4", VA = "0x9FD3C4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x9FD3CC", Offset = "0x9FD3CC", VA = "0x9FD3CC")]
		internal void <SubDrawTimer>b__27_0()
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x9FD444", Offset = "0x9FD444", VA = "0x9FD444")]
		internal void <SubDrawTimer>b__27_1()
		{
		}
	}

	[Token(Token = "0x40002CB")]
	private const float TIMEMETER_POS_Y = -27f;

	[Token(Token = "0x40002CC")]
	private const float TIMEMETER_GAP = -16f;

	[Token(Token = "0x40002CD")]
	private const int METER_FULL_CNT = 31;

	[Token(Token = "0x40002CE")]
	private const int METER_WARNING_CNT = 15;

	[Token(Token = "0x40002CF")]
	private const int METER_CRITICAL_CNT = 5;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _prefabTimeIndicater;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text _Label_Timer;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _StopWatchHand;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] _ind_TimeMeter;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CGameModel _gameModel;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CTempModel _tempModel;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _timeMeterCount;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _lastTimeMeterSecs;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _lastTimerSecs;

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x9FC148", Offset = "0x9FC148", VA = "0x9FC148", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x9FC37C", Offset = "0x9FC37C", VA = "0x9FC37C", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x9FC380", Offset = "0x9FC380", VA = "0x9FC380", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x9FC468", Offset = "0x9FC468", VA = "0x9FC468")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x9FC5F0", Offset = "0x9FC5F0", VA = "0x9FC5F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x9FC778", Offset = "0x9FC778", VA = "0x9FC778")]
	private void Update()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x9FCFFC", Offset = "0x9FCFFC", VA = "0x9FCFFC")]
	private void OnGameInit()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x9FD1C8", Offset = "0x9FD1C8", VA = "0x9FD1C8")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x9FD1CC", Offset = "0x9FD1CC", VA = "0x9FD1CC")]
	private void OnGameRun()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x9FD210", Offset = "0x9FD210", VA = "0x9FD210")]
	private void OnGameStop()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x9FD258", Offset = "0x9FD258", VA = "0x9FD258")]
	private void OnGameFinish()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x9FC844", Offset = "0x9FC844", VA = "0x9FC844")]
	private void SubDrawGameTimer()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x9FD098", Offset = "0x9FD098", VA = "0x9FD098")]
	private void SubDrawTimeMeter(float inTimeCount)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x9FC9F8", Offset = "0x9FC9F8", VA = "0x9FC9F8")]
	private void SubDrawTimer()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x9FD2F8", Offset = "0x9FD2F8", VA = "0x9FD2F8")]
	public TimeMeter()
	{
	}
}
[Token(Token = "0x200006B")]
public class TimerLife : DzMonoBehaviour<TimerLife>
{
	[Token(Token = "0x40002D9")]
	private const float TIMELIFE_GAP = 35f;

	[Token(Token = "0x40002DA")]
	private const float TIMELIFE_POS_Z = -16f;

	[Token(Token = "0x40002DB")]
	private const float TIMELIFE_HIDE_GAP = 100f;

	[Token(Token = "0x40002DC")]
	private const int MAX_LIFE_CNT = 5;

	[Token(Token = "0x40002DD")]
	private const float TIMELIFE_ROTATE_ANGLE = 30f;

	[Token(Token = "0x40002DE")]
	private const float TIMELIFE_MOVE_SPEED = 1f;

	[Token(Token = "0x40002DF")]
	private const float TIMELIFE_ROTATE_SPEED = 0.3f;

	[Token(Token = "0x40002E0")]
	private const float TIMELIFE_MOVE_WAIT = 0.25f;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _prefabTimerLife;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _StopWatchHand;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> _arrayTimerLife;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CGameModel _gameModel;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CTempModel _tempModel;

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x9FDA80", Offset = "0x9FDA80", VA = "0x9FDA80", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x9FDB44", Offset = "0x9FDB44", VA = "0x9FDB44", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x9FDC78", Offset = "0x9FDC78", VA = "0x9FDC78", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x9FDC7C", Offset = "0x9FDC7C", VA = "0x9FDC7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x9FDE28", Offset = "0x9FDE28", VA = "0x9FDE28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x9FDFD4", Offset = "0x9FDFD4", VA = "0x9FDFD4")]
	private void OnGameInit()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x9FE268", Offset = "0x9FE268", VA = "0x9FE268")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x9FE460", Offset = "0x9FE460", VA = "0x9FE460")]
	private void OnGameRun()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x9FE5A0", Offset = "0x9FE5A0", VA = "0x9FE5A0")]
	private void OnGameStop()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x9FE5F0", Offset = "0x9FE5F0", VA = "0x9FE5F0")]
	private void OnGameFinish()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x9FE6BC", Offset = "0x9FE6BC", VA = "0x9FE6BC")]
	private void OnGameTimeOut()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x9FE26C", Offset = "0x9FE26C", VA = "0x9FE26C")]
	private void SubMoveInTimeLifes()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x9FE4AC", Offset = "0x9FE4AC", VA = "0x9FE4AC")]
	private void SubBuruBuruOnOff(bool inOnOff)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x9FEAAC", Offset = "0x9FEAAC", VA = "0x9FEAAC")]
	public TimerLife()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x9FEAFC", Offset = "0x9FEAFC", VA = "0x9FEAFC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C930C", Offset = "0x5C930C")]
	private void <OnGameTimeOut>b__23_0()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x9FEB70", Offset = "0x9FEB70", VA = "0x9FEB70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C931C", Offset = "0x5C931C")]
	private void <SubMoveInTimeLifes>b__24_0()
	{
	}
}
[Token(Token = "0x200006C")]
public class StartBackgroundLayer : DzMonoBehaviour<StartBackgroundLayer>
{
	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite[] _Sprite_GameLevels;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text[] _Text_LimitScores;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text _Label_Title;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text _Label_StageNo;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Image _Img_GameLevel;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Text _Label_StageSize;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CGameModel _gameModel;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CStageModel _stageModel;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CStagePartModel _partModel;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CStageDefine _stageDef;

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x8CC834", Offset = "0x8CC834", VA = "0x8CC834", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x8CCA80", Offset = "0x8CCA80", VA = "0x8CCA80", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x8CCA84", Offset = "0x8CCA84", VA = "0x8CCA84", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x8CCEBC", Offset = "0x8CCEBC", VA = "0x8CCEBC")]
	public StartBackgroundLayer()
	{
	}
}
[Token(Token = "0x200006D")]
public class StartPanel : BaseGamePanel
{
	[Token(Token = "0x40002F0")]
	private const float TIME_GAMESTART_DIALOG = 0.3f;

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x8CD1F8", Offset = "0x8CD1F8", VA = "0x8CD1F8", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x8CD200", Offset = "0x8CD200", VA = "0x8CD200", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x8CD208", Offset = "0x8CD208", VA = "0x8CD208")]
	public void TappedStartGame()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x8CD330", Offset = "0x8CD330", VA = "0x8CD330")]
	public StartPanel()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x8CD338", Offset = "0x8CD338", VA = "0x8CD338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C932C", Offset = "0x5C932C")]
	private void <TappedStartGame>b__3_0()
	{
	}
}
[Token(Token = "0x200006E")]
public class PauseBackgroundLayer : DzMonoBehaviour<PauseBackgroundLayer>
{
	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite[] _Sprite_GameLevels;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text _Label_StageNo;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image _Img_GameLevel;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text _Label_StageSize;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text _Text_HighScore;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Text _Text_FastestTime;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Text _Text_ClearCount;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CGameModel _gameModel;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CStageModel _stageModel;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CStagePartModel _partModel;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CStageDefine _stageDef;

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x8BE8FC", Offset = "0x8BE8FC", VA = "0x8BE8FC", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x8BEC54", Offset = "0x8BEC54", VA = "0x8BEC54", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x8BEC58", Offset = "0x8BEC58", VA = "0x8BEC58", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x8BF018", Offset = "0x8BF018", VA = "0x8BF018")]
	public PauseBackgroundLayer()
	{
	}
}
[Token(Token = "0x200006F")]
public class PausePanel : BaseGamePanel
{
	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x8BF068", Offset = "0x8BF068", VA = "0x8BF068", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x8BF070", Offset = "0x8BF070", VA = "0x8BF070", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x8BF078", Offset = "0x8BF078", VA = "0x8BF078")]
	public PausePanel()
	{
	}
}
[Token(Token = "0x2000070")]
public class ClearBackgroundLayer : DzMonoBehaviour<ClearBackgroundLayer>
{
	[Token(Token = "0x40002FC")]
	protected const float TIME_COLOR_FLASH = 0.5f;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite[] _Sprite_GameLevels;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator[] _Animetor_Stars;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text _Label_StageNo;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Image _Img_GameLevel;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text _Label_StageSize;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Text _Text_ClearedScore;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Text _Text_ClearedTime;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Image _Img_NewMark_Score;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Image _Img_NewMark_Time;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CGameModel _gameModel;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CStageModel _stageModel;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CStagePartModel _partModel;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CStageDefine _stageDef;

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xA197CC", Offset = "0xA197CC", VA = "0xA197CC", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xA19AB8", Offset = "0xA19AB8", VA = "0xA19AB8", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xA19ABC", Offset = "0xA19ABC", VA = "0xA19ABC", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xA19E80", Offset = "0xA19E80", VA = "0xA19E80")]
	public ClearBackgroundLayer()
	{
	}
}
[Token(Token = "0x2000071")]
public class ClearPanel : BaseGamePanel
{
	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xA19ED0", Offset = "0xA19ED0", VA = "0xA19ED0", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xA19F74", Offset = "0xA19F74", VA = "0xA19F74", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xA19F78", Offset = "0xA19F78", VA = "0xA19F78", Slot = "9")]
	protected override void OnTappedAnyButton()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xA19FF8", Offset = "0xA19FF8", VA = "0xA19FF8")]
	public void TappedNextGame()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xA1A130", Offset = "0xA1A130", VA = "0xA1A130")]
	public ClearPanel()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xA1A134", Offset = "0xA1A134", VA = "0xA1A134")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C933C", Offset = "0x5C933C")]
	private void <TappedNextGame>b__3_0()
	{
	}
}
[Token(Token = "0x2000072")]
public class StalemateBackgroundLayer : DzMonoBehaviour<StalemateBackgroundLayer>
{
	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private StalematePanel _stalematePanel;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite[] _Sprite_GameLevels;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text _Label_Title;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text _Label_StageNo;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Image _Img_GameLevel;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Text _Label_StageSize;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Text _Label_Tezumari;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CGameModel _gameModel;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CStageModel _stageModel;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CStagePartModel _partModel;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CStageDefine _stageDef;

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x8CAD68", Offset = "0x8CAD68", VA = "0x8CAD68", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x8CAFE8", Offset = "0x8CAFE8", VA = "0x8CAFE8", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x8CAFEC", Offset = "0x8CAFEC", VA = "0x8CAFEC", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x8CB2CC", Offset = "0x8CB2CC", VA = "0x8CB2CC")]
	public StalemateBackgroundLayer()
	{
	}
}
[Token(Token = "0x2000073")]
public class StalemateMenuLayer : DzMonoBehaviour<StalemateMenuLayer>
{
	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button _Btn_Close;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Button _Btn_Swap;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Button _Btn_Bomb;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Button _Btn_Shuffle;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text _Text_Swap;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Text _Text_Bomb;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Text _Text_Shuffle;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CGameModel _gameModel;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CPaiModel _paiModel;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _saveTextFontSize;

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x8CB31C", Offset = "0x8CB31C", VA = "0x8CB31C", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x8CB5A4", Offset = "0x8CB5A4", VA = "0x8CB5A4", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x8CB5A8", Offset = "0x8CB5A8", VA = "0x8CB5A8", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x8CB648", Offset = "0x8CB648", VA = "0x8CB648")]
	public void UpdateItemButton()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x8CB6F0", Offset = "0x8CB6F0", VA = "0x8CB6F0")]
	public void DrawItemCount()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x8CBA34", Offset = "0x8CBA34", VA = "0x8CBA34")]
	public StalemateMenuLayer()
	{
	}
}
[Token(Token = "0x2000074")]
public class StalematePanel : BaseGamePanel
{
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private StalemateMenuLayer _layerStalemateMenu;

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x8CBA84", Offset = "0x8CBA84", VA = "0x8CBA84", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x8CBB1C", Offset = "0x8CBB1C", VA = "0x8CBB1C", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x8CBB24", Offset = "0x8CBB24", VA = "0x8CBB24", Slot = "7")]
	protected override void OnDialogOpenDone()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x8CBB58", Offset = "0x8CBB58", VA = "0x8CBB58")]
	public void TappedSwapItem([Optional] Button sender)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x8CBD68", Offset = "0x8CBD68", VA = "0x8CBD68")]
	public void TappedBombItem([Optional] Button sender)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x8CBF78", Offset = "0x8CBF78", VA = "0x8CBF78")]
	public void TappedShuffleItem([Optional] Button sender)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x8CC188", Offset = "0x8CC188", VA = "0x8CC188")]
	public StalematePanel()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x8CC190", Offset = "0x8CC190", VA = "0x8CC190")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C934C", Offset = "0x5C934C")]
	private void <TappedSwapItem>b__4_0()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x8CC27C", Offset = "0x8CC27C", VA = "0x8CC27C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C935C", Offset = "0x5C935C")]
	private void <TappedBombItem>b__5_0()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x8CC368", Offset = "0x8CC368", VA = "0x8CC368")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C936C", Offset = "0x5C936C")]
	private void <TappedShuffleItem>b__6_0()
	{
	}
}
[Token(Token = "0x2000075")]
public class TimeoverBackgroundLayer : DzMonoBehaviour<TimeoverBackgroundLayer>
{
	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite[] _Sprite_GameLevels;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text _Label_StageNo;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image _Img_GameLevel;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text _Label_StageSize;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CGameModel _gameModel;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CStageModel _stageModel;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CStagePartModel _partModel;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CStageDefine _stageDef;

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x9FD4BC", Offset = "0x9FD4BC", VA = "0x9FD4BC", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x9FD6D8", Offset = "0x9FD6D8", VA = "0x9FD6D8", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x9FD6DC", Offset = "0x9FD6DC", VA = "0x9FD6DC", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x9FD8F4", Offset = "0x9FD8F4", VA = "0x9FD8F4")]
	public TimeoverBackgroundLayer()
	{
	}
}
[Token(Token = "0x2000076")]
public class TimeoverMenuLayer : DzMonoBehaviour<TimeoverMenuLayer>
{
	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CGameModel _gameModel;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CPaiModel _paiModel;

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x9FD944", Offset = "0x9FD944", VA = "0x9FD944", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x9FD9E8", Offset = "0x9FD9E8", VA = "0x9FD9E8", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x9FD9EC", Offset = "0x9FD9EC", VA = "0x9FD9EC", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x9FD9F0", Offset = "0x9FD9F0", VA = "0x9FD9F0")]
	public TimeoverMenuLayer()
	{
	}
}
[Token(Token = "0x2000077")]
public class TimeoverPanel : BaseGamePanel
{
	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x9FDA40", Offset = "0x9FDA40", VA = "0x9FDA40", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x9FDA6C", Offset = "0x9FDA6C", VA = "0x9FDA6C", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x9FDA74", Offset = "0x9FDA74", VA = "0x9FDA74", Slot = "7")]
	protected override void OnDialogOpenDone()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x9FDA78", Offset = "0x9FDA78", VA = "0x9FDA78")]
	public TimeoverPanel()
	{
	}
}
[Token(Token = "0x2000078")]
public class PreferenceDialog : BaseGamePanel
{
	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private PreferenceControlLayer _prefControlLayer;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private CPrefModel _newPrefModel;

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x8C2FEC", Offset = "0x8C2FEC", VA = "0x8C2FEC", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x8C311C", Offset = "0x8C311C", VA = "0x8C311C", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x8C3124", Offset = "0x8C3124", VA = "0x8C3124")]
	public void TappedFactorySetting()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x8C31C4", Offset = "0x8C31C4", VA = "0x8C31C4")]
	public void TappedCancel()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x8C327C", Offset = "0x8C327C", VA = "0x8C327C")]
	public void TappedConfirm()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x8C340C", Offset = "0x8C340C", VA = "0x8C340C")]
	public PreferenceDialog()
	{
	}
}
[Token(Token = "0x2000079")]
public class HowtoplayDialog : BaseGamePanel
{
	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x91ADF0", Offset = "0x91ADF0", VA = "0x91ADF0", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x91ADF8", Offset = "0x91ADF8", VA = "0x91ADF8", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x91AE00", Offset = "0x91AE00", VA = "0x91AE00")]
	public HowtoplayDialog()
	{
	}
}
[Token(Token = "0x200007A")]
public class BaseDialogPanel : BasePanel
{
	[Token(Token = "0x400032C")]
	protected new const float TIME_PANEL_DIALOG = 0.5f;

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xA0D254", Offset = "0xA0D254", VA = "0xA0D254", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xA0D338", Offset = "0xA0D338", VA = "0xA0D338", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xA0D340", Offset = "0xA0D340", VA = "0xA0D340", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xA0D540", Offset = "0xA0D540", VA = "0xA0D540")]
	public void TappedCloseButton(bool inTappedSound = true)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xA0D66C", Offset = "0xA0D66C", VA = "0xA0D66C")]
	public BaseDialogPanel()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xA0D6C0", Offset = "0xA0D6C0", VA = "0xA0D6C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C937C", Offset = "0x5C937C")]
	private void <OnStart>b__3_0()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xA0D6F0", Offset = "0xA0D6F0", VA = "0xA0D6F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C938C", Offset = "0x5C938C")]
	private void <TappedCloseButton>b__4_0()
	{
	}
}
[Token(Token = "0x200007B")]
public class PreferenceControlLayer : DzMonoBehaviour<PreferenceControlLayer>
{
	[Token(Token = "0x200021C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2A20", Offset = "0x5C2A20")]
	private sealed class <CoValueCheckLoop>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PreferenceControlLayer <>4__this;

		[Token(Token = "0x17000239")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0x8C2F7C", Offset = "0x8C2F7C", VA = "0x8C2F7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0x8C2FE4", Offset = "0x8C2FE4", VA = "0x8C2FE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x8C25A8", Offset = "0x8C25A8", VA = "0x8C25A8")]
		[DebuggerHidden]
		public <CoValueCheckLoop>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x8C2E64", Offset = "0x8C2E64", VA = "0x8C2E64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x8C2E68", Offset = "0x8C2E68", VA = "0x8C2E68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x8C2F84", Offset = "0x8C2F84", VA = "0x8C2F84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400032D")]
	private const float WAIT_VALUE_CHECK = 0.5f;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button _Btn_SettingDone;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Slider _Slider_EffectSpeed;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Button _Btn_PaiEffectTest;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CPai _Effect_Pai;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Switch _Switch_DrawLine;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Slider _Slider_SoundVolume;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Toggle _Tgl_SoundMute;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Button _Btn_VolumeTest;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Animator _Anim_VolumeTest;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Switch _Switch_SoundBGM;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Toggle _Tgl_SoundBGM_On;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Toggle _Tgl_SoundBGM_Off;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Switch _Switch_Language;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Toggle _Tgl_LangJapanese;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Toggle _Tgl_LangEnglish;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _manualControl;

	[Token(Token = "0x17000097")]
	public Button Btn_PaiEffectTest
	{
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x8C1FD4", Offset = "0x8C1FD4", VA = "0x8C1FD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000098")]
	public Button Btn_VolumeTest
	{
		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x8C1FDC", Offset = "0x8C1FDC", VA = "0x8C1FDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000099")]
	public Animator Anim_VolumeTest
	{
		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x8C1FE4", Offset = "0x8C1FE4", VA = "0x8C1FE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x8C1FEC", Offset = "0x8C1FEC", VA = "0x8C1FEC", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x8C2354", Offset = "0x8C2354", VA = "0x8C2354", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x8C235C", Offset = "0x8C235C", VA = "0x8C235C", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x8C2538", Offset = "0x8C2538", VA = "0x8C2538")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C939C", Offset = "0x5C939C")]
	private IEnumerator CoValueCheckLoop()
	{
		return null;
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x8C25D4", Offset = "0x8C25D4", VA = "0x8C25D4")]
	public void TappedPaiEffectTest()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x8C269C", Offset = "0x8C269C", VA = "0x8C269C")]
	public void TappedVolumeTest()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x8C2804", Offset = "0x8C2804", VA = "0x8C2804")]
	public void ToggledSoundMute(bool inOnOff)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x8C28A4", Offset = "0x8C28A4", VA = "0x8C28A4")]
	public void ToggledSoundBGM_On(bool inIsOn)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x8C28E4", Offset = "0x8C28E4", VA = "0x8C28E4")]
	public void ToggledSoundBGM_Off(bool inIsOn)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x8C2924", Offset = "0x8C2924", VA = "0x8C2924")]
	public void ValueChangeSoundBGM(bool inIsOn)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x8C2984", Offset = "0x8C2984", VA = "0x8C2984")]
	public void ToggledLanguage_Japanese(bool inIsOn)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x8C29C4", Offset = "0x8C29C4", VA = "0x8C29C4")]
	public void ToggledLanguage_English(bool inIsOn)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x8C2A04", Offset = "0x8C2A04", VA = "0x8C2A04")]
	public void ValueChangeLanguage(bool inIsOn)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x8C2410", Offset = "0x8C2410", VA = "0x8C2410")]
	public void SetPrefControlValues(CPrefModel inNewPrefModel)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x8C2A64", Offset = "0x8C2A64", VA = "0x8C2A64")]
	private bool FncAllValueCheck(CPrefModel inNewPrefModel)
	{
		return default(bool);
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x8C2DF4", Offset = "0x8C2DF4", VA = "0x8C2DF4")]
	public PreferenceControlLayer()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x8C2E44", Offset = "0x8C2E44", VA = "0x8C2E44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9400", Offset = "0x5C9400")]
	private void <TappedVolumeTest>b__28_0()
	{
	}
}
[Token(Token = "0x200007C")]
public class SelectLanguageDialog : MonoBehaviour
{
	[Token(Token = "0x6000505")]
	[Address(RVA = "0x8C8224", Offset = "0x8C8224", VA = "0x8C8224")]
	private void Start()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x8C8228", Offset = "0x8C8228", VA = "0x8C8228")]
	private void Update()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x8C822C", Offset = "0x8C822C", VA = "0x8C822C")]
	public SelectLanguageDialog()
	{
	}
}
[Token(Token = "0x200007D")]
public class SGameManager : DzMonoSingleton<SGameManager>
{
	[Token(Token = "0x200021D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2A30", Offset = "0x5C2A30")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SGameManager <>4__this;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string inTitlePanel;

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x8C4C58", Offset = "0x8C4C58", VA = "0x8C4C58")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x8C59E0", Offset = "0x8C59E0", VA = "0x8C59E0")]
		internal void <DelayedTransitionTitlePanel>b__0()
		{
		}
	}

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GamePanel _refGamePanel;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MainScene _MainScene;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PaiManager _PaiManager;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DiceController _DiceController;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private StageClearEffectsController _StageClearEffectsController;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text _DBG_Message;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CGameModel _gameModel;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CTempModel _tempModel;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CPaiModel _paiModel;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _titleTopPanel;

	[Token(Token = "0x1700009A")]
	public GamePanel RefGamePanel
	{
		[Token(Token = "0x6000508")]
		[Address(RVA = "0x8C3C28", Offset = "0x8C3C28", VA = "0x8C3C28")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000509")]
		[Address(RVA = "0x8C3C30", Offset = "0x8C3C30", VA = "0x8C3C30")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public string TitleTopPanel
	{
		[Token(Token = "0x600050A")]
		[Address(RVA = "0x8C3C38", Offset = "0x8C3C38", VA = "0x8C3C38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009C")]
	public MainScene MainScene
	{
		[Token(Token = "0x600050B")]
		[Address(RVA = "0x8C3C40", Offset = "0x8C3C40", VA = "0x8C3C40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009D")]
	public Transform LaserBeamTransform
	{
		[Token(Token = "0x600050C")]
		[Address(RVA = "0x8C3C48", Offset = "0x8C3C48", VA = "0x8C3C48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009E")]
	public PaiManager PaiManager
	{
		[Token(Token = "0x600050D")]
		[Address(RVA = "0x8C3C64", Offset = "0x8C3C64", VA = "0x8C3C64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009F")]
	public StageClearEffectsController StageClearEffectsController
	{
		[Token(Token = "0x600050E")]
		[Address(RVA = "0x8C3C6C", Offset = "0x8C3C6C", VA = "0x8C3C6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x8C3C74", Offset = "0x8C3C74", VA = "0x8C3C74", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x8C3E60", Offset = "0x8C3E60", VA = "0x8C3E60", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x8C3E64", Offset = "0x8C3E64", VA = "0x8C3E64", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x8C3E68", Offset = "0x8C3E68", VA = "0x8C3E68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x8C3F60", Offset = "0x8C3F60", VA = "0x8C3F60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x8C4058", Offset = "0x8C4058", VA = "0x8C4058")]
	private void OnPrefModelChange()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x8C41E4", Offset = "0x8C41E4", VA = "0x8C41E4")]
	public bool IsRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x8C4208", Offset = "0x8C4208", VA = "0x8C4208")]
	public bool IsExistsDefeatItems(bool inBlockPaiExists)
	{
		return default(bool);
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x8C425C", Offset = "0x8C425C", VA = "0x8C425C")]
	public bool IsStalemate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x8C4290", Offset = "0x8C4290", VA = "0x8C4290")]
	public bool IsEqualGameMode(params NikaGameModelModeType[] inGameMode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x8C4300", Offset = "0x8C4300", VA = "0x8C4300")]
	public void ChangeGameStatusPost(NikaGameModelStatusType inGameStatus)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x8C43C8", Offset = "0x8C43C8", VA = "0x8C43C8")]
	public void ChangeGameModePost(NikaGameModelModeType inGameMode, bool inAutoModeChange, string inHukidashiMessage = "")
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x8C0C78", Offset = "0x8C0C78", VA = "0x8C0C78")]
	public void TransitionGamePanel(NikaDataModelGameType inGameType)
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x8C4994", Offset = "0x8C4994", VA = "0x8C4994")]
	public void DelayedGameStart(float inDelayTime)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x8C4A38", Offset = "0x8C4A38", VA = "0x8C4A38")]
	public void DelayedGameRetry(float inDelayTime)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x8C4ADC", Offset = "0x8C4ADC", VA = "0x8C4ADC")]
	public void DelayedGameNext(float inDelayTime)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x8C4B80", Offset = "0x8C4B80", VA = "0x8C4B80")]
	public void DelayedTransitionTitlePanel(float inDelayTime, string inTitlePanel = "TitlePanel")
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x8C4C60", Offset = "0x8C4C60", VA = "0x8C4C60")]
	public void GameStart(GamePanel.GameSetupType inGameSetupType, NikaDataModelGameType inGameType = NikaDataModelGameType.GAMETYPE_NEW)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x8C4D50", Offset = "0x8C4D50", VA = "0x8C4D50")]
	public void GameClear()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x8C4E7C", Offset = "0x8C4E7C", VA = "0x8C4E7C")]
	public void GameStalemate()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x8C4EF8", Offset = "0x8C4EF8", VA = "0x8C4EF8")]
	public void GameTimeover()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x8C4FD4", Offset = "0x8C4FD4", VA = "0x8C4FD4")]
	public void GameExit()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x8C5080", Offset = "0x8C5080", VA = "0x8C5080")]
	public void GameGiveUp()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x8C510C", Offset = "0x8C510C", VA = "0x8C510C")]
	public void PostEventPaiChange(NikaGameModelModeType inGameMode, int inGameScore)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x8C1AE0", Offset = "0x8C1AE0", VA = "0x8C1AE0")]
	public void RollingDice()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x8C5338", Offset = "0x8C5338", VA = "0x8C5338")]
	public void SetDebugMessage(string inMessage)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x8C4808", Offset = "0x8C4808", VA = "0x8C4808")]
	private void SubInitModel()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x8C4934", Offset = "0x8C4934", VA = "0x8C4934")]
	private void SubContinueModel()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x8C44C4", Offset = "0x8C44C4", VA = "0x8C44C4")]
	private void SubSetupGameMode()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x8C535C", Offset = "0x8C535C", VA = "0x8C535C")]
	public SGameManager()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x8C53CC", Offset = "0x8C53CC", VA = "0x8C53CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9410", Offset = "0x5C9410")]
	private void <DelayedGameStart>b__36_0()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x8C53D4", Offset = "0x8C53D4", VA = "0x8C53D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9420", Offset = "0x5C9420")]
	private void <DelayedGameRetry>b__37_0()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x8C5558", Offset = "0x8C5558", VA = "0x8C5558")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9430", Offset = "0x5C9430")]
	private void <DelayedGameNext>b__38_0()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x8C58D4", Offset = "0x8C58D4", VA = "0x8C58D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9440", Offset = "0x5C9440")]
	private void <GameGiveUp>b__45_0()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x8C59D8", Offset = "0x8C59D8", VA = "0x8C59D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9450", Offset = "0x5C9450")]
	private void <PostEventPaiChange>b__46_0()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x8C59DC", Offset = "0x8C59DC", VA = "0x8C59DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9460", Offset = "0x5C9460")]
	private void <PostEventPaiChange>b__46_1()
	{
	}
}
[Token(Token = "0x200007E")]
public class SModelManager : DzMonoSingleton<SModelManager>
{
	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CDataModel _dataModel;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CTempModel _tempModel;

	[Token(Token = "0x170000A0")]
	public CDataModel DataModel
	{
		[Token(Token = "0x6000533")]
		[Address(RVA = "0x8C5A74", Offset = "0x8C5A74", VA = "0x8C5A74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A1")]
	public CTempModel TempModel
	{
		[Token(Token = "0x6000534")]
		[Address(RVA = "0x8C5A7C", Offset = "0x8C5A7C", VA = "0x8C5A7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000535")]
		[Address(RVA = "0x8C5A84", Offset = "0x8C5A84", VA = "0x8C5A84")]
		set
		{
		}
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x8C5A8C", Offset = "0x8C5A8C", VA = "0x8C5A8C", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x8C5C00", Offset = "0x8C5C00", VA = "0x8C5C00", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x8C5C08", Offset = "0x8C5C08", VA = "0x8C5C08", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x8C336C", Offset = "0x8C336C", VA = "0x8C336C")]
	public void SaveData()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x8C5C34", Offset = "0x8C5C34", VA = "0x8C5C34")]
	public SModelManager()
	{
	}
}
[Token(Token = "0x200007F")]
public class SParticleManager : DzMonoSingleton<SParticleManager>
{
	[Token(Token = "0x200021E")]
	public enum NikaParticleType
	{
		[Token(Token = "0x4000B53")]
		PARTICLE_THUNDER,
		[Token(Token = "0x4000B54")]
		PARTICLE_ITEMUSE,
		[Token(Token = "0x4000B55")]
		PARTICLE_SELECTPAI,
		[Token(Token = "0x4000B56")]
		PARTICLE_STARSHOWER,
		[Token(Token = "0x4000B57")]
		PARTICLE_EXPLOSION_BIG
	}

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem[] _prefab_Particles;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ParticleSystem> _particles;

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x8C5CA4", Offset = "0x8C5CA4", VA = "0x8C5CA4", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x8C5E28", Offset = "0x8C5E28", VA = "0x8C5E28", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x8C5F74", Offset = "0x8C5F74", VA = "0x8C5F74", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x8C5F78", Offset = "0x8C5F78", VA = "0x8C5F78")]
	public void PlayParticle(NikaParticleType inParticleType, Vector3 inWorldVector)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x8C5F80", Offset = "0x8C5F80", VA = "0x8C5F80")]
	public void PlayParticle(NikaParticleType inParticleType, Vector3 inWorldVector, float inScale)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x8C609C", Offset = "0x8C609C", VA = "0x8C609C")]
	public void EmitParticle(NikaParticleType inParticleType, Vector3 inWorldVector, int inEmitCount)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x8C60A4", Offset = "0x8C60A4", VA = "0x8C60A4")]
	public void EmitParticle(NikaParticleType inParticleType, Vector3 inWorldVector, float inScale, int inEmitCount)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x8C61C8", Offset = "0x8C61C8", VA = "0x8C61C8")]
	public SParticleManager()
	{
	}
}
[Token(Token = "0x2000080")]
public class SSoundManager : DzSoundManager
{
	[Token(Token = "0x6000543")]
	[Address(RVA = "0x8C6238", Offset = "0x8C6238", VA = "0x8C6238")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x8C6330", Offset = "0x8C6330", VA = "0x8C6330")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x8C6428", Offset = "0x8C6428", VA = "0x8C6428")]
	private void OnPrefModelChange()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x8C6644", Offset = "0x8C6644", VA = "0x8C6644")]
	public SSoundManager()
	{
	}
}
[Token(Token = "0x2000081")]
public class SStageManager : DzMonoSingleton<SStageManager>
{
	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, CStageDefine> _stageSizeDict;

	[Token(Token = "0x170000A2")]
	public Dictionary<int, CStageDefine> StageSizeDict
	{
		[Token(Token = "0x6000547")]
		[Address(RVA = "0x8C664C", Offset = "0x8C664C", VA = "0x8C664C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x8C6654", Offset = "0x8C6654", VA = "0x8C6654", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x8C6848", Offset = "0x8C6848", VA = "0x8C6848", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x8C68A8", Offset = "0x8C68A8", VA = "0x8C68A8", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x8BEBB0", Offset = "0x8BEBB0", VA = "0x8BEBB0")]
	public CStageDefine CurrentStageDefine()
	{
		return null;
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x8C68AC", Offset = "0x8C68AC", VA = "0x8C68AC")]
	public CStageDefine GetStageDefine(int inIdex)
	{
		return null;
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x8BB8DC", Offset = "0x8BB8DC", VA = "0x8BB8DC")]
	public CStageDefine GetStageDefine(NikaGameModelSizeType inSize)
	{
		return null;
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x8C68B0", Offset = "0x8C68B0", VA = "0x8C68B0")]
	public SStageManager()
	{
	}
}
[Token(Token = "0x2000082")]
public class KeyEventController : DzMonoBehaviour<KeyEventController>
{
	[Token(Token = "0x400034D")]
	private const float PLAYER_MOVE_DURATION = 0.5f;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _SpeedRotationIncrement;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _MovableRange;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraController;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _saveZ_Pos;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private OVRInput.Controller _activeCont;

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x91BED0", Offset = "0x91BED0", VA = "0x91BED0", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x91C01C", Offset = "0x91C01C", VA = "0x91C01C", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x91C020", Offset = "0x91C020", VA = "0x91C020", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x91C024", Offset = "0x91C024", VA = "0x91C024")]
	private void Update()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x91C394", Offset = "0x91C394", VA = "0x91C394")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x91C154", Offset = "0x91C154", VA = "0x91C154")]
	private void SubUpdateRecenterPose()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x91C158", Offset = "0x91C158", VA = "0x91C158")]
	private void SubBackKeyPost()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x91C258", Offset = "0x91C258", VA = "0x91C258")]
	private void SubLeftAndRightSwipePost()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x91C538", Offset = "0x91C538", VA = "0x91C538")]
	public KeyEventController()
	{
	}
}
[Token(Token = "0x2000083")]
public class OculusController : DzMonoBehaviour<OculusController>
{
	[Token(Token = "0x6000558")]
	[Address(RVA = "0x860458", Offset = "0x860458", VA = "0x860458", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x86045C", Offset = "0x86045C", VA = "0x86045C", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x860460", Offset = "0x860460", VA = "0x860460", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x860464", Offset = "0x860464", VA = "0x860464")]
	private void Update()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x860468", Offset = "0x860468", VA = "0x860468")]
	private void SubUpdateRecenterPose()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x86046C", Offset = "0x86046C", VA = "0x86046C")]
	private void SubBackKeyPost()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x86050C", Offset = "0x86050C", VA = "0x86050C")]
	public OculusController()
	{
	}
}
[Token(Token = "0x2000084")]
public class OculusInitialize : DzMonoBehaviour<OculusInitialize>
{
	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private OVRManager.FixedFoveatedRenderingLevel _Oculus_TiledMultiResLevel;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _Oculu__EyeTextureResolutionScale;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _Oculus_DisplayFrequency;

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x86055C", Offset = "0x86055C", VA = "0x86055C", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x860960", Offset = "0x860960", VA = "0x860960", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x860964", Offset = "0x860964", VA = "0x860964", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x860968", Offset = "0x860968", VA = "0x860968")]
	public OculusInitialize()
	{
	}
}
[Token(Token = "0x2000085")]
public class OculusMoveTrigger : DzMonoBehaviour<OculusMoveTrigger>, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Serializable]
	[Token(Token = "0x200021F")]
	public class PointerDataEvent : UnityEvent<PointerEventData>
	{
		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x860DB4", Offset = "0x860DB4", VA = "0x860DB4")]
		public PointerDataEvent()
		{
		}
	}

	[Token(Token = "0x2000220")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2A40", Offset = "0x5C2A40")]
	private sealed class <TrackPointer>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusMoveTrigger <>4__this;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <laserPos>5__2;

		[Token(Token = "0x1700023B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x860D44", Offset = "0x860D44", VA = "0x860D44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0x860DAC", Offset = "0x860DAC", VA = "0x860DAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x860B14", Offset = "0x860B14", VA = "0x860B14")]
		[DebuggerHidden]
		public <TrackPointer>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x860B90", Offset = "0x860B90", VA = "0x860B90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x860B94", Offset = "0x860B94", VA = "0x860B94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x860D4C", Offset = "0x860D4C", VA = "0x860D4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent OnMouseMove;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PointerDataEvent OnMouseLeave;

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x8609C4", Offset = "0x8609C4", VA = "0x8609C4", Slot = "7")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x860A18", Offset = "0x860A18", VA = "0x860A18", Slot = "8")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x860AA4", Offset = "0x860AA4", VA = "0x860AA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C9470", Offset = "0x5C9470")]
	private IEnumerator TrackPointer()
	{
		return null;
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x860B40", Offset = "0x860B40", VA = "0x860B40")]
	public OculusMoveTrigger()
	{
	}
}
[Token(Token = "0x2000086")]
public class PreferenceUtil : MonoBehaviour
{
	[Token(Token = "0x6000567")]
	[Address(RVA = "0x8C395C", Offset = "0x8C395C", VA = "0x8C395C")]
	public PreferenceUtil()
	{
	}

	[Token(Token = "0x6000568")]
	public static bool Save<T>(string prefKey, T serializableObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000569")]
	public static T Load<T>(string prefKey)
	{
		return (T)null;
	}
}
[Token(Token = "0x2000087")]
public class StageClearEffectsController : DzMonoBehaviour<StageClearEffectsController>
{
	[Token(Token = "0x4000358")]
	public const int MAX_STAR_CNT = 3;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] _StarFxPrefabs;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] _BgFxPrefabs;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] _ParticleFxPrefabs;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Vector3 _StarPosOffset;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Vector3 _BgPosOffset;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Vector3 _ParticlePosOffset;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float _StarLocalScale;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float _BgLocalScale;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float _ParticleLocalScale;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _currentStarCnt;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject[] _desStarFxObjs;

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x8CA8C4", Offset = "0x8CA8C4", VA = "0x8CA8C4", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x8CA8CC", Offset = "0x8CA8CC", VA = "0x8CA8CC", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x8CA8D0", Offset = "0x8CA8D0", VA = "0x8CA8D0", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x8C4E54", Offset = "0x8C4E54", VA = "0x8C4E54")]
	public void PlayStageClearEffects(int inStarCount)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x8CACB0", Offset = "0x8CACB0", VA = "0x8CACB0")]
	public void DestroyStageClearEffects()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x8CA9BC", Offset = "0x8CA9BC", VA = "0x8CA9BC")]
	private void SubPlayStarFX()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x8CA8D4", Offset = "0x8CA8D4", VA = "0x8CA8D4")]
	private void SubDestroyStartFX()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x8CACB8", Offset = "0x8CACB8", VA = "0x8CACB8")]
	public StageClearEffectsController()
	{
	}
}
[Token(Token = "0x2000088")]
public class StarFxEffectController : DzMonoBehaviour<StarFxEffectController>
{
	[Token(Token = "0x2000221")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2A50", Offset = "0x5C2A50")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sndID;

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x8CC75C", Offset = "0x8CC75C", VA = "0x8CC75C")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x8CC7B4", Offset = "0x8CC7B4", VA = "0x8CC7B4")]
		internal void <Update>b__0()
		{
		}
	}

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StarFxEffectController myStarFxController;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] _starFX;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int _ea;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int _currentEa;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _delay;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _currentDelay;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _isEnd;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private int _idStar;

	[Token(Token = "0x170000A3")]
	public static StarFxEffectController MyStarFxController
	{
		[Token(Token = "0x6000572")]
		[Address(RVA = "0x8CC450", Offset = "0x8CC450", VA = "0x8CC450")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A4")]
	public int Ea
	{
		[Token(Token = "0x6000573")]
		[Address(RVA = "0x8CC4A0", Offset = "0x8CC4A0", VA = "0x8CC4A0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000574")]
		[Address(RVA = "0x8CC4A8", Offset = "0x8CC4A8", VA = "0x8CC4A8")]
		set
		{
		}
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x8CC4B0", Offset = "0x8CC4B0", VA = "0x8CC4B0", Slot = "4")]
	protected override void OnInitialize()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x8CC504", Offset = "0x8CC504", VA = "0x8CC504", Slot = "5")]
	protected override void OnFinalize()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x8CC508", Offset = "0x8CC508", VA = "0x8CC508", Slot = "6")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x8CC5C8", Offset = "0x8CC5C8", VA = "0x8CC5C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x8CC50C", Offset = "0x8CC50C", VA = "0x8CC50C")]
	public void Reset()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x8CC764", Offset = "0x8CC764", VA = "0x8CC764")]
	public StarFxEffectController()
	{
	}
}
[Token(Token = "0x2000089")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x5C1AC0", Offset = "0x5C1AC0")]
public class FastList<T>
{
	[Token(Token = "0x2000222")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000223")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2A60", Offset = "0x5C2A60")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x1700023D")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000FD9")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700023E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FDB")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FD6")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000FD7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FD8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDA")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x170000A5")]
	public int Count
	{
		[Token(Token = "0x600057D")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600057E")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public T Item
	{
		[Token(Token = "0x600057F")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000580")]
		set
		{
		}
	}

	[Token(Token = "0x600057B")]
	public FastList()
	{
	}

	[Token(Token = "0x600057C")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000581")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000582")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000583")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000584")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000585")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000586")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000587")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000588")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000589")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600058A")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x600058B")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x600058C")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x600058D")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600058E")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600058F")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C94D4", Offset = "0x5C94D4")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000590")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000591")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000592")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000593")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000594")]
	public void Release()
	{
	}
}
[Token(Token = "0x200008A")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x91BB48", Offset = "0x91BB48", VA = "0x91BB48")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x200008B")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x91BB1C", Offset = "0x91BB1C", VA = "0x91BB1C")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x200008C")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000224")]
	public delegate void OnClick();

	[Token(Token = "0x2000225")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000226")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000227")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000228")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2A70", Offset = "0x5C2A70")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x89D0C8", Offset = "0x89D0C8", VA = "0x89D0C8")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x89DB44", Offset = "0x89DB44", VA = "0x89DB44")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000229")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2A80", Offset = "0x5C2A80")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x89D33C", Offset = "0x89D33C", VA = "0x89D33C")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x89DD68", Offset = "0x89DD68", VA = "0x89DD68")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200022A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2A90", Offset = "0x5C2A90")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x89D554", Offset = "0x89D554", VA = "0x89D554")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x89DFE0", Offset = "0x89DFE0", VA = "0x89DFE0")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2AA0", Offset = "0x5C2AA0")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x89D6E8", Offset = "0x89D6E8", VA = "0x89D6E8")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x89E394", Offset = "0x89E394", VA = "0x89E394")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200022C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2AB0", Offset = "0x5C2AB0")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x89D940", Offset = "0x89D940", VA = "0x89D940")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x89E3B4", Offset = "0x89E3B4", VA = "0x89E3B4")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000371")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000372")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000373")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] reEnable;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000381")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000382")]
	private const float marginH = 16f;

	[Token(Token = "0x4000383")]
	private const float marginV = 16f;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LaserPointer lp;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LineRenderer lr;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x89C074", Offset = "0x89C074", VA = "0x89C074")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x89C478", Offset = "0x89C478", VA = "0x89C478")]
	public void Show()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x89CA44", Offset = "0x89CA44", VA = "0x89CA44")]
	public void Hide()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x89C7F0", Offset = "0x89C7F0", VA = "0x89C7F0")]
	private void Relayout()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x89CBEC", Offset = "0x89CBEC", VA = "0x89CBEC")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x89CEA0", Offset = "0x89CEA0", VA = "0x89CEA0")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x89D0D0", Offset = "0x89D0D0", VA = "0x89D0D0")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x89D1B4", Offset = "0x89D1B4", VA = "0x89D1B4")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x89D344", Offset = "0x89D344", VA = "0x89D344")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x89D3E0", Offset = "0x89D3E0", VA = "0x89D3E0")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x89D55C", Offset = "0x89D55C", VA = "0x89D55C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x89D6F0", Offset = "0x89D6F0", VA = "0x89D6F0")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x89D948", Offset = "0x89D948", VA = "0x89D948")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x89DA24", Offset = "0x89DA24", VA = "0x89DA24")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x89DAD4", Offset = "0x89DAD4", VA = "0x89DAD4")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200008D")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x91A7A0", Offset = "0x91A7A0", VA = "0x91A7A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x91A828", Offset = "0x91A828", VA = "0x91A828")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x91A8F0", Offset = "0x91A8F0", VA = "0x91A8F0")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x91A92C", Offset = "0x91A92C", VA = "0x91A92C")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200008E")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x200022D")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000B6A")]
		On,
		[Token(Token = "0x4000B6B")]
		Off,
		[Token(Token = "0x4000B6C")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x170000A7")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x91C6B0", Offset = "0x91C6B0", VA = "0x91C6B0")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x91C66C", Offset = "0x91C66C", VA = "0x91C66C")]
		set
		{
		}
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x91C6B8", Offset = "0x91C6B8", VA = "0x91C6B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x91C710", Offset = "0x91C710", VA = "0x91C710")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x91C828", Offset = "0x91C828", VA = "0x91C828", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x91C844", Offset = "0x91C844", VA = "0x91C844", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x91C898", Offset = "0x91C898", VA = "0x91C898")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x91CAF4", Offset = "0x91CAF4", VA = "0x91CAF4")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x91CC08", Offset = "0x91CC08", VA = "0x91CC08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x91CC9C", Offset = "0x91CC9C", VA = "0x91CC9C")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x91CD6C", Offset = "0x91CD6C", VA = "0x91CD6C")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x91CE24", Offset = "0x91CE24", VA = "0x91CE24")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x91CEF0", Offset = "0x91CEF0", VA = "0x91CEF0")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200008F")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000397")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000398")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000399")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3694", Offset = "0x5C3694")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C36CC", Offset = "0x5C36CC")]
	public LayerMask CollideLayers;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3704", Offset = "0x5C3704")]
	public float HeightOffset;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C373C", Offset = "0x5C373C")]
	public float MinimumHeight;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3774", Offset = "0x5C3774")]
	public float MaximumHeight;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xA170C8", Offset = "0xA170C8", VA = "0xA170C8")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xA170D0", Offset = "0xA170D0", VA = "0xA170D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xA17140", Offset = "0xA17140", VA = "0xA17140")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xA171CC", Offset = "0xA171CC", VA = "0xA171CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xA17258", Offset = "0xA17258", VA = "0xA17258")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xA17660", Offset = "0xA17660", VA = "0xA17660")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xA17908", Offset = "0xA17908", VA = "0xA17908")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000090")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x91E264", Offset = "0x91E264", VA = "0x91E264")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x91E310", Offset = "0x91E310", VA = "0x91E310")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000091")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x200022E")]
	public enum States
	{
		[Token(Token = "0x4000B6E")]
		Ready,
		[Token(Token = "0x4000B6F")]
		Aim,
		[Token(Token = "0x4000B70")]
		CancelAim,
		[Token(Token = "0x4000B71")]
		PreTeleport,
		[Token(Token = "0x4000B72")]
		CancelTeleport,
		[Token(Token = "0x4000B73")]
		Teleporting,
		[Token(Token = "0x4000B74")]
		PostTeleport
	}

	[Token(Token = "0x200022F")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000B76")]
		None,
		[Token(Token = "0x4000B77")]
		Aim,
		[Token(Token = "0x4000B78")]
		PreTeleport,
		[Token(Token = "0x4000B79")]
		Teleport
	}

	[Token(Token = "0x2000230")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000B7B")]
		Point,
		[Token(Token = "0x4000B7C")]
		Sphere,
		[Token(Token = "0x4000B7D")]
		Capsule
	}

	[Token(Token = "0x2000231")]
	public class AimData
	{
		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C6FB8", Offset = "0x5C6FB8")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700023F")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0x95F36C", Offset = "0x95F36C", VA = "0x95F36C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB09C", Offset = "0x5CB09C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x95F374", Offset = "0x95F374", VA = "0x95F374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB0AC", Offset = "0x5CB0AC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x95F2F8", Offset = "0x95F2F8", VA = "0x95F2F8")]
		public AimData()
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x95F37C", Offset = "0x95F37C", VA = "0x95F37C")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000232")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2AC0", Offset = "0x5C2AC0")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000240")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x95F144", Offset = "0x95F144", VA = "0x95F144", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000241")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0x95F1AC", Offset = "0x95F1AC", VA = "0x95F1AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x95D648", Offset = "0x95D648", VA = "0x95D648")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x95F05C", Offset = "0x95F05C", VA = "0x95F05C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x95F060", Offset = "0x95F060", VA = "0x95F060", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x95F14C", Offset = "0x95F14C", VA = "0x95F14C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000233")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2AD0", Offset = "0x5C2AD0")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000242")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001003")]
			[Address(RVA = "0x95EB24", Offset = "0x95EB24", VA = "0x95EB24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000243")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001005")]
			[Address(RVA = "0x95EB8C", Offset = "0x95EB8C", VA = "0x95EB8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x95DB30", Offset = "0x95DB30", VA = "0x95DB30")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x95E9EC", Offset = "0x95E9EC", VA = "0x95E9EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x95E9F0", Offset = "0x95E9F0", VA = "0x95E9F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x95EB2C", Offset = "0x95EB2C", VA = "0x95EB2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000234")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2AE0", Offset = "0x5C2AE0")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000244")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001009")]
			[Address(RVA = "0x95EC38", Offset = "0x95EC38", VA = "0x95EC38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000245")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0x95ECA0", Offset = "0x95ECA0", VA = "0x95ECA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x95DD14", Offset = "0x95DD14", VA = "0x95DD14")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x95EB94", Offset = "0x95EB94", VA = "0x95EB94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x95EB98", Offset = "0x95EB98", VA = "0x95EB98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x95EC40", Offset = "0x95EC40", VA = "0x95EC40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000235")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2AF0", Offset = "0x5C2AF0")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000246")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600100F")]
			[Address(RVA = "0x95EFEC", Offset = "0x95EFEC", VA = "0x95EFEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0x95F054", Offset = "0x95F054", VA = "0x95F054", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x95DEF8", Offset = "0x95DEF8", VA = "0x95DEF8")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x95EF14", Offset = "0x95EF14", VA = "0x95EF14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x95EF18", Offset = "0x95EF18", VA = "0x95EF18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x95EFF4", Offset = "0x95EFF4", VA = "0x95EFF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B00", Offset = "0x5C2B00")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000248")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001015")]
			[Address(RVA = "0x95ED4C", Offset = "0x95ED4C", VA = "0x95ED4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0x95EDB4", Offset = "0x95EDB4", VA = "0x95EDB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x95E0DC", Offset = "0x95E0DC", VA = "0x95E0DC")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x95ECA8", Offset = "0x95ECA8", VA = "0x95ECA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x95ECAC", Offset = "0x95ECAC", VA = "0x95ECAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x95ED54", Offset = "0x95ED54", VA = "0x95ED54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000237")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B10", Offset = "0x5C2B10")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700024A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600101B")]
			[Address(RVA = "0x95F288", Offset = "0x95F288", VA = "0x95F288", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0x95F2F0", Offset = "0x95F2F0", VA = "0x95F2F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x95E2C0", Offset = "0x95E2C0", VA = "0x95E2C0")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x95F1B4", Offset = "0x95F1B4", VA = "0x95F1B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x95F1B8", Offset = "0x95F1B8", VA = "0x95F1B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x95F290", Offset = "0x95F290", VA = "0x95F290", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B20", Offset = "0x5C2B20")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700024C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001021")]
			[Address(RVA = "0x95EEA4", Offset = "0x95EEA4", VA = "0x95EEA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001023")]
			[Address(RVA = "0x95EF0C", Offset = "0x95EF0C", VA = "0x95EF0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x95E4A4", Offset = "0x95E4A4", VA = "0x95E4A4")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x95EDBC", Offset = "0x95EDBC", VA = "0x95EDBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x95EDC0", Offset = "0x95EDC0", VA = "0x95EDC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x95EEAC", Offset = "0x95EEAC", VA = "0x95EEAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C37AC", Offset = "0x5C37AC")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C37E4", Offset = "0x5C37E4")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C381C", Offset = "0x5C381C")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3854", Offset = "0x5C3854")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C388C", Offset = "0x5C388C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C38C4", Offset = "0x5C38C4")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C38FC", Offset = "0x5C38FC")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3934", Offset = "0x5C3934")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C396C", Offset = "0x5C396C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C397C", Offset = "0x5C397C")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C39B4", Offset = "0x5C39B4")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C39FC", Offset = "0x5C39FC")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3A0C", Offset = "0x5C3A0C")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3A44", Offset = "0x5C3A44")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3A7C", Offset = "0x5C3A7C")]
	public float AimCollisionRadius;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3AB4", Offset = "0x5C3AB4")]
	public float AimCollisionHeight;

	[Token(Token = "0x170000A8")]
	public States CurrentState
	{
		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x95CB8C", Offset = "0x95CB8C", VA = "0x95CB8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9538", Offset = "0x5C9538")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x95CB94", Offset = "0x95CB94", VA = "0x95CB94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9548", Offset = "0x5C9548")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x95CDC4", Offset = "0x95CDC4", VA = "0x95CDC4")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170000AA")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x95CDEC", Offset = "0x95CDEC", VA = "0x95CDEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9578", Offset = "0x5C9578")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x95CDF4", Offset = "0x95CDF4", VA = "0x95CDF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9588", Offset = "0x5C9588")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x95CB9C", Offset = "0x95CB9C", VA = "0x95CB9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9558", Offset = "0x5C9558")]
		add
		{
		}
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x95CC40", Offset = "0x95CC40", VA = "0x95CC40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9568", Offset = "0x5C9568")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x95D500", Offset = "0x95D500", VA = "0x95D500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C95D0", Offset = "0x5C95D0")]
		add
		{
		}
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x95D5A4", Offset = "0x95D5A4", VA = "0x95D5A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C95E0", Offset = "0x5C95E0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x95D674", Offset = "0x95D674", VA = "0x95D674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9654", Offset = "0x5C9654")]
		add
		{
		}
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x95D718", Offset = "0x95D718", VA = "0x95D718")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9664", Offset = "0x5C9664")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x95D7BC", Offset = "0x95D7BC", VA = "0x95D7BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9674", Offset = "0x5C9674")]
		add
		{
		}
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x95D860", Offset = "0x95D860", VA = "0x95D860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9684", Offset = "0x5C9684")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x95D978", Offset = "0x95D978", VA = "0x95D978")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9694", Offset = "0x5C9694")]
		add
		{
		}
		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x95DA1C", Offset = "0x95DA1C", VA = "0x95DA1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C96A4", Offset = "0x5C96A4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x95DB5C", Offset = "0x95DB5C", VA = "0x95DB5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9718", Offset = "0x5C9718")]
		add
		{
		}
		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x95DC00", Offset = "0x95DC00", VA = "0x95DC00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9728", Offset = "0x5C9728")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x95DD40", Offset = "0x95DD40", VA = "0x95DD40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C979C", Offset = "0x5C979C")]
		add
		{
		}
		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x95DDE4", Offset = "0x95DDE4", VA = "0x95DDE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C97AC", Offset = "0x5C97AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x95DF24", Offset = "0x95DF24", VA = "0x95DF24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9820", Offset = "0x5C9820")]
		add
		{
		}
		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x95DFC8", Offset = "0x95DFC8", VA = "0x95DFC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9830", Offset = "0x5C9830")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x95E108", Offset = "0x95E108", VA = "0x95E108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C98A4", Offset = "0x5C98A4")]
		add
		{
		}
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x95E1AC", Offset = "0x95E1AC", VA = "0x95E1AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C98B4", Offset = "0x5C98B4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x95E2EC", Offset = "0x95E2EC", VA = "0x95E2EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9928", Offset = "0x5C9928")]
		add
		{
		}
		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x95E390", Offset = "0x95E390", VA = "0x95E390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9938", Offset = "0x5C9938")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x95E4D0", Offset = "0x95E4D0", VA = "0x95E4D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C99AC", Offset = "0x5C99AC")]
		add
		{
		}
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x95E574", Offset = "0x95E574", VA = "0x95E574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C99BC", Offset = "0x5C99BC")]
		remove
		{
		}
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x95CB44", Offset = "0x95CB44", VA = "0x95CB44")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x95CB68", Offset = "0x95CB68", VA = "0x95CB68")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x95CCE4", Offset = "0x95CCE4", VA = "0x95CCE4")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x95CDFC", Offset = "0x95CDFC", VA = "0x95CDFC")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x95D154", Offset = "0x95D154", VA = "0x95D154")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5C9598", Offset = "0x5C9598")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x95D20C", Offset = "0x95D20C", VA = "0x95D20C")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x95D2D4", Offset = "0x95D2D4", VA = "0x95D2D4")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x95D2F0", Offset = "0x95D2F0", VA = "0x95D2F0")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x95D3B8", Offset = "0x95D3B8", VA = "0x95D3B8")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x95D3FC", Offset = "0x95D3FC", VA = "0x95D3FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x95D458", Offset = "0x95D458", VA = "0x95D458", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x95D4F8", Offset = "0x95D4F8", VA = "0x95D4F8", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x95D488", Offset = "0x95D488", VA = "0x95D488")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C95F0", Offset = "0x5C95F0")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x95D904", Offset = "0x95D904", VA = "0x95D904")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x95DAC0", Offset = "0x95DAC0", VA = "0x95DAC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C96B4", Offset = "0x5C96B4")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x95DCA4", Offset = "0x95DCA4", VA = "0x95DCA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C9738", Offset = "0x5C9738")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x95DE88", Offset = "0x95DE88", VA = "0x95DE88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C97BC", Offset = "0x5C97BC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x95E06C", Offset = "0x95E06C", VA = "0x95E06C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C9840", Offset = "0x5C9840")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x95E250", Offset = "0x95E250", VA = "0x95E250")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C98C4", Offset = "0x5C98C4")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x95E434", Offset = "0x95E434", VA = "0x95E434")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C9948", Offset = "0x5C9948")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x95E618", Offset = "0x95E618", VA = "0x95E618")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x95E75C", Offset = "0x95E75C", VA = "0x95E75C")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x95E790", Offset = "0x95E790", VA = "0x95E790")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x95E8B0", Offset = "0x95E8B0", VA = "0x95E8B0")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x95E9DC", Offset = "0x95E9DC", VA = "0x95E9DC")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000092")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x8C94D4", Offset = "0x8C94D4", VA = "0x8C94D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C99CC", Offset = "0x5C99CC")]
		add
		{
		}
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x8C9578", Offset = "0x8C9578", VA = "0x8C9578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C99DC", Offset = "0x5C99DC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x8C961C", Offset = "0x8C961C", VA = "0x8C961C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C99EC", Offset = "0x5C99EC")]
		add
		{
		}
		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x8C96C0", Offset = "0x8C96C0", VA = "0x8C96C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C99FC", Offset = "0x5C99FC")]
		remove
		{
		}
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x8C9764", Offset = "0x8C9764", VA = "0x8C9764")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x8C980C", Offset = "0x8C980C", VA = "0x8C980C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x8C9810", Offset = "0x8C9810", VA = "0x8C9810")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x8C9884", Offset = "0x8C9884", VA = "0x8C9884")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x8C99F4", Offset = "0x8C99F4", VA = "0x8C99F4")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x8C9CD8", Offset = "0x8C9CD8", VA = "0x8C9CD8")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x8C9F24", Offset = "0x8C9F24", VA = "0x8C9F24")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000093")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x8CE518", Offset = "0x8CE518", VA = "0x8CE518", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x8CE54C", Offset = "0x8CE54C", VA = "0x8CE54C", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000601")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x8CE5E4", Offset = "0x8CE5E4", VA = "0x8CE5E4")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000094")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3BAC", Offset = "0x5C3BAC")]
	public float Range;

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x8CE5EC", Offset = "0x8CE5EC", VA = "0x8CE5EC", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x8CE748", Offset = "0x8CE748", VA = "0x8CE748")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000095")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3BE4", Offset = "0x5C3BE4")]
	public float Range;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3C1C", Offset = "0x5C3C1C")]
	public float MinimumElevation;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3C54", Offset = "0x5C3C54")]
	public float Gravity;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3C8C", Offset = "0x5C3C8C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C3C8C", Offset = "0x5C3C8C")]
	public float AimVelocity;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3CE8", Offset = "0x5C3CE8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C3CE8", Offset = "0x5C3CE8")]
	public float AimStep;

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x8CE758", Offset = "0x8CE758", VA = "0x8CE758", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x8CE9A4", Offset = "0x8CE9A4", VA = "0x8CE9A4")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000096")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3D40", Offset = "0x5C3D40")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x8CE9B8", Offset = "0x8CE9B8", VA = "0x8CE9B8")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x8CEA9C", Offset = "0x8CEA9C", VA = "0x8CEA9C")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x8CEACC", Offset = "0x8CEACC", VA = "0x8CEACC")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x8CEAFC", Offset = "0x8CEAFC", VA = "0x8CEAFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x8CEB9C", Offset = "0x8CEB9C", VA = "0x8CEB9C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x8CEBFC", Offset = "0x8CEBFC", VA = "0x8CEBFC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x8CEC60", Offset = "0x8CEC60", VA = "0x8CEC60")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000097")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3D78", Offset = "0x5C3D78")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3D88", Offset = "0x5C3D88")]
	public Transform PositionIndicator;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3DC0", Offset = "0x5C3DC0")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3DF8", Offset = "0x5C3DF8")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x170000AB")]
	public bool IsValidDestination
	{
		[Token(Token = "0x600060E")]
		[Address(RVA = "0x8CED7C", Offset = "0x8CED7C", VA = "0x8CED7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9A0C", Offset = "0x5C9A0C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600060F")]
		[Address(RVA = "0x8CED84", Offset = "0x8CED84", VA = "0x8CED84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9A1C", Offset = "0x5C9A1C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000614")]
		[Address(RVA = "0x8CEF34", Offset = "0x8CEF34", VA = "0x8CEF34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9A2C", Offset = "0x5C9A2C")]
		add
		{
		}
		[Token(Token = "0x6000615")]
		[Address(RVA = "0x8CEFD8", Offset = "0x8CEFD8", VA = "0x8CEFD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9A3C", Offset = "0x5C9A3C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x8CED90", Offset = "0x8CED90", VA = "0x8CED90")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x8CEE18", Offset = "0x8CEE18", VA = "0x8CEE18")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x8CEEF0", Offset = "0x8CEEF0", VA = "0x8CEEF0")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x8CEF30", Offset = "0x8CEF30", VA = "0x8CEF30")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x8CF07C", Offset = "0x8CF07C", VA = "0x8CF07C")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x8CF0E4", Offset = "0x8CF0E4", VA = "0x8CF0E4")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x8CF104", Offset = "0x8CF104", VA = "0x8CF104", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000098")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000239")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B30", Offset = "0x5C2B30")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700024E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001027")]
			[Address(RVA = "0x8CF7CC", Offset = "0x8CF7CC", VA = "0x8CF7CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001029")]
			[Address(RVA = "0x8CF834", Offset = "0x8CF834", VA = "0x8CF834", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x8CF518", Offset = "0x8CF518", VA = "0x8CF518")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x8CF73C", Offset = "0x8CF73C", VA = "0x8CF73C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x8CF740", Offset = "0x8CF740", VA = "0x8CF740", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x8CF7D4", Offset = "0x8CF7D4", VA = "0x8CF7D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B40", Offset = "0x5C2B40")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000250")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600102D")]
			[Address(RVA = "0x8CF6CC", Offset = "0x8CF6CC", VA = "0x8CF6CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000251")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600102F")]
			[Address(RVA = "0x8CF734", Offset = "0x8CF734", VA = "0x8CF734", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x8CF5B4", Offset = "0x8CF5B4", VA = "0x8CF5B4")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x8CF638", Offset = "0x8CF638", VA = "0x8CF638", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x8CF63C", Offset = "0x8CF63C", VA = "0x8CF63C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x8CF6D4", Offset = "0x8CF6D4", VA = "0x8CF6D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x8CF2E4", Offset = "0x8CF2E4", VA = "0x8CF2E4")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x8CF390", Offset = "0x8CF390", VA = "0x8CF390", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x8CF3E8", Offset = "0x8CF3E8", VA = "0x8CF3E8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x8CF4A8", Offset = "0x8CF4A8", VA = "0x8CF4A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C9A4C", Offset = "0x5C9A4C")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x8CF544", Offset = "0x8CF544", VA = "0x8CF544")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C9AB0", Offset = "0x5C9AB0")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600061E")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x600061F")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x8CF5E0", Offset = "0x8CF5E0", VA = "0x8CF5E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9B14", Offset = "0x5C9B14")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x8CF60C", Offset = "0x8CF60C", VA = "0x8CF60C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9B24", Offset = "0x5C9B24")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000099")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3E40", Offset = "0x5C3E40")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3E50", Offset = "0x5C3E50")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3E88", Offset = "0x5C3E88")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3EC0", Offset = "0x5C3EC0")]
	public bool FastTeleport;

	[Token(Token = "0x170000AC")]
	public Transform Pointer
	{
		[Token(Token = "0x6000622")]
		[Address(RVA = "0x8CF83C", Offset = "0x8CF83C", VA = "0x8CF83C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9B34", Offset = "0x5C9B34")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000623")]
		[Address(RVA = "0x8CF844", Offset = "0x8CF844", VA = "0x8CF844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9B44", Offset = "0x5C9B44")]
		private set
		{
		}
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x8CF84C", Offset = "0x8CF84C", VA = "0x8CF84C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x8CF9A8", Offset = "0x8CF9A8", VA = "0x8CF9A8", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x8CFA60", Offset = "0x8CFA60", VA = "0x8CFA60")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200009A")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200023B")]
	public enum InputModes
	{
		[Token(Token = "0x4000B9F")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000BA0")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000BA1")]
		ThumbstickTeleport,
		[Token(Token = "0x4000BA2")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200023C")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000BA4")]
		A,
		[Token(Token = "0x4000BA5")]
		B,
		[Token(Token = "0x4000BA6")]
		LeftTrigger,
		[Token(Token = "0x4000BA7")]
		LeftThumbstick,
		[Token(Token = "0x4000BA8")]
		RightTrigger,
		[Token(Token = "0x4000BA9")]
		RightThumbstick,
		[Token(Token = "0x4000BAA")]
		X,
		[Token(Token = "0x4000BAB")]
		Y
	}

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3EF8", Offset = "0x5C3EF8")]
	public InputModes InputMode;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3F30", Offset = "0x5C3F30")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3F68", Offset = "0x5C3F68")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3FA0", Offset = "0x5C3FA0")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x8CFA64", Offset = "0x8CFA64", VA = "0x8CFA64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x8CFA68", Offset = "0x8CFA68", VA = "0x8CFA68", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x8CFEB0", Offset = "0x8CFEB0", VA = "0x8CFEB0", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x8CFF70", Offset = "0x8CFF70", VA = "0x8CFF70")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200009B")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x200023D")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000BAD")]
		HeadRelative,
		[Token(Token = "0x4000BAE")]
		ForwardFacing
	}

	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B50", Offset = "0x5C2B50")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000252")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001033")]
			[Address(RVA = "0x9F2E1C", Offset = "0x9F2E1C", VA = "0x9F2E1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001035")]
			[Address(RVA = "0x9F2E84", Offset = "0x9F2E84", VA = "0x9F2E84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x9F2BF8", Offset = "0x9F2BF8", VA = "0x9F2BF8")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x9F2D74", Offset = "0x9F2D74", VA = "0x9F2D74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x9F2D78", Offset = "0x9F2D78", VA = "0x9F2D78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x9F2E24", Offset = "0x9F2E24", VA = "0x9F2E24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x9F2A1C", Offset = "0x9F2A1C", VA = "0x9F2A1C")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x9F2AD8", Offset = "0x9F2AD8", VA = "0x9F2AD8")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x9F2AE0", Offset = "0x9F2AE0", VA = "0x9F2AE0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x9F2B38", Offset = "0x9F2B38", VA = "0x9F2B38", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x9F2B88", Offset = "0x9F2B88", VA = "0x9F2B88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C9B54", Offset = "0x5C9B54")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000630")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000631")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x9F2C24", Offset = "0x9F2C24", VA = "0x9F2C24")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x9F2D48", Offset = "0x9F2D48", VA = "0x9F2D48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9BB8", Offset = "0x5C9BB8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200009C")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000634")]
	[Address(RVA = "0x9F2E8C", Offset = "0x9F2E8C", VA = "0x9F2E8C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x9F2E90", Offset = "0x9F2E90", VA = "0x9F2E90", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x9F2F0C", Offset = "0x9F2F0C", VA = "0x9F2F0C")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200009D")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3FD8", Offset = "0x5C3FD8")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4010", Offset = "0x5C4010")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4048", Offset = "0x5C4048")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4080", Offset = "0x5C4080")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x9F2F10", Offset = "0x9F2F10", VA = "0x9F2F10", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x9F2F80", Offset = "0x9F2F80", VA = "0x9F2F80", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x9F33F8", Offset = "0x9F33F8", VA = "0x9F33F8")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200009E")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C40B8", Offset = "0x5C40B8")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C40F0", Offset = "0x5C40F0")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4128", Offset = "0x5C4128")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x9F33FC", Offset = "0x9F33FC", VA = "0x9F33FC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x9F3440", Offset = "0x9F3440", VA = "0x9F3440", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x9F38B0", Offset = "0x9F38B0", VA = "0x9F38B0")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200009F")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x9F38C0", Offset = "0x9F38C0", VA = "0x9F38C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x9F38C4", Offset = "0x9F38C4", VA = "0x9F38C4")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x9F38CC", Offset = "0x9F38CC", VA = "0x9F38CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x9F39B4", Offset = "0x9F39B4", VA = "0x9F39B4")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x9F39DC", Offset = "0x9F39DC", VA = "0x9F39DC")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000A0")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4160", Offset = "0x5C4160")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x170000AD")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000642")]
		[Address(RVA = "0x9F39F4", Offset = "0x9F39F4", VA = "0x9F39F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9BC8", Offset = "0x5C9BC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000643")]
		[Address(RVA = "0x9F39FC", Offset = "0x9F39FC", VA = "0x9F39FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9BD8", Offset = "0x5C9BD8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x9F3A04", Offset = "0x9F3A04", VA = "0x9F3A04", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x9F3A68", Offset = "0x9F3A68", VA = "0x9F3A68", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x9F3A94", Offset = "0x9F3A94", VA = "0x9F3A94")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5C9BE8", Offset = "0x5C9BE8")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x9F2B2C", Offset = "0x9F2B2C", VA = "0x9F2B2C", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x9F2B80", Offset = "0x9F2B80", VA = "0x9F2B80", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x9F2AD0", Offset = "0x9F2AD0", VA = "0x9F2AD0")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000A1")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x200023F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B60", Offset = "0x5C2B60")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000254")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001039")]
			[Address(RVA = "0x9F40E8", Offset = "0x9F40E8", VA = "0x9F40E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000255")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600103B")]
			[Address(RVA = "0x9F4150", Offset = "0x9F4150", VA = "0x9F4150", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x9F3CE4", Offset = "0x9F3CE4", VA = "0x9F3CE4")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x9F3E7C", Offset = "0x9F3E7C", VA = "0x9F3E7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x9F3E80", Offset = "0x9F3E80", VA = "0x9F3E80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x9F40F0", Offset = "0x9F40F0", VA = "0x9F40F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4170", Offset = "0x5C4170")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x400040E")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x9F3B5C", Offset = "0x9F3B5C", VA = "0x9F3B5C")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x9F3C20", Offset = "0x9F3C20", VA = "0x9F3C20", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x9F3C4C", Offset = "0x9F3C4C", VA = "0x9F3C4C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x9F3C74", Offset = "0x9F3C74", VA = "0x9F3C74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C9C20", Offset = "0x5C9C20")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x9F3D10", Offset = "0x9F3D10", VA = "0x9F3D10", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x600064F")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x9F3D2C", Offset = "0x9F3D2C", VA = "0x9F3D2C", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x9F3E50", Offset = "0x9F3E50", VA = "0x9F3E50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9C84", Offset = "0x5C9C84")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000A2")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x9F4158", Offset = "0x9F4158", VA = "0x9F4158")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x9F41B8", Offset = "0x9F41B8", VA = "0x9F41B8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x9F433C", Offset = "0x9F433C", VA = "0x9F433C", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x9F442C", Offset = "0x9F442C", VA = "0x9F442C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5C9C94", Offset = "0x5C9C94")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x9F4430", Offset = "0x9F4430", VA = "0x9F4430")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000A3")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C41A8", Offset = "0x5C41A8")]
	public float LOSOffset;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C41E0", Offset = "0x5C41E0")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x9F443C", Offset = "0x9F443C", VA = "0x9F443C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x9F466C", Offset = "0x9F466C", VA = "0x9F466C")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000A4")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000659")]
	[Address(RVA = "0x9F4678", Offset = "0x9F4678", VA = "0x9F4678", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x9F47FC", Offset = "0x9F47FC", VA = "0x9F47FC")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000A5")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x600065B")]
	[Address(RVA = "0x9F4800", Offset = "0x9F4800", VA = "0x9F4800", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x9F4898", Offset = "0x9F4898", VA = "0x9F4898", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600065D")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x9F492C", Offset = "0x9F492C", VA = "0x9F492C")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000A6")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000240")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B70", Offset = "0x5C2B70")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000256")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600103F")]
			[Address(RVA = "0x9F4C94", Offset = "0x9F4C94", VA = "0x9F4C94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001041")]
			[Address(RVA = "0x9F4CFC", Offset = "0x9F4CFC", VA = "0x9F4CFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x9F49D0", Offset = "0x9F49D0", VA = "0x9F49D0")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x9F4B94", Offset = "0x9F4B94", VA = "0x9F4B94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x9F4B98", Offset = "0x9F4B98", VA = "0x9F4B98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x9F4C9C", Offset = "0x9F4C9C", VA = "0x9F4C9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4218", Offset = "0x5C4218")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C4218", Offset = "0x5C4218")]
	public float TransitionDuration;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4270", Offset = "0x5C4270")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C4270", Offset = "0x5C4270")]
	public float TeleportDelay;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C42C4", Offset = "0x5C42C4")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x9F4934", Offset = "0x9F4934", VA = "0x9F4934", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x9F4960", Offset = "0x9F4960", VA = "0x9F4960")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C9CCC", Offset = "0x5C9CCC")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x9F49FC", Offset = "0x9F49FC", VA = "0x9F49FC")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000A7")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000662")]
	[Address(RVA = "0x9F4D04", Offset = "0x9F4D04", VA = "0x9F4D04", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x9F4D20", Offset = "0x9F4D20", VA = "0x9F4D20")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000A8")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000241")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B80", Offset = "0x5C2B80")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000258")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001045")]
			[Address(RVA = "0x9F4F6C", Offset = "0x9F4F6C", VA = "0x9F4F6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001047")]
			[Address(RVA = "0x9F4FD4", Offset = "0x9F4FD4", VA = "0x9F4FD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x9F4DC4", Offset = "0x9F4DC4", VA = "0x9F4DC4")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x9F4E38", Offset = "0x9F4E38", VA = "0x9F4E38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x9F4E3C", Offset = "0x9F4E3C", VA = "0x9F4E3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x9F4F74", Offset = "0x9F4F74", VA = "0x9F4F74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C42FC", Offset = "0x5C42FC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C42FC", Offset = "0x5C42FC")]
	public float TransitionDuration;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x9F4D28", Offset = "0x9F4D28", VA = "0x9F4D28", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x9F4D54", Offset = "0x9F4D54", VA = "0x9F4D54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C9D30", Offset = "0x5C9D30")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x9F4DF0", Offset = "0x9F4DF0", VA = "0x9F4DF0")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000A9")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000242")]
	public enum PlabackState
	{
		[Token(Token = "0x4000BC1")]
		Idle = 1,
		[Token(Token = "0x4000BC2")]
		Preparing,
		[Token(Token = "0x4000BC3")]
		Buffering,
		[Token(Token = "0x4000BC4")]
		Ready,
		[Token(Token = "0x4000BC5")]
		Ended
	}

	[Token(Token = "0x2000243")]
	public enum StereoMode
	{
		[Token(Token = "0x4000BC7")]
		Unknown = -1,
		[Token(Token = "0x4000BC8")]
		Mono,
		[Token(Token = "0x4000BC9")]
		TopBottom,
		[Token(Token = "0x4000BCA")]
		LeftRight,
		[Token(Token = "0x4000BCB")]
		Mesh
	}

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x170000AE")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000667")]
		[Address(RVA = "0x965910", Offset = "0x965910", VA = "0x965910")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170000AF")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000668")]
		[Address(RVA = "0x965BCC", Offset = "0x965BCC", VA = "0x965BCC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170000B0")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000669")]
		[Address(RVA = "0x962A24", Offset = "0x962A24", VA = "0x962A24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B1")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600066A")]
		[Address(RVA = "0x964020", Offset = "0x964020", VA = "0x964020")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B2")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x600066B")]
		[Address(RVA = "0x965E10", Offset = "0x965E10", VA = "0x965E10")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x170000B3")]
	public static long Duration
	{
		[Token(Token = "0x600066C")]
		[Address(RVA = "0x964204", Offset = "0x964204", VA = "0x964204")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x170000B4")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x600066D")]
		[Address(RVA = "0x96300C", Offset = "0x96300C", VA = "0x96300C")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x170000B5")]
	public static int VideoWidth
	{
		[Token(Token = "0x600066E")]
		[Address(RVA = "0x962E24", Offset = "0x962E24", VA = "0x962E24")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B6")]
	public static int VideoHeight
	{
		[Token(Token = "0x600066F")]
		[Address(RVA = "0x962F18", Offset = "0x962F18", VA = "0x962F18")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B7")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000670")]
		[Address(RVA = "0x964110", Offset = "0x964110", VA = "0x964110")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000671")]
		[Address(RVA = "0x9637E4", Offset = "0x9637E4", VA = "0x9637E4")]
		set
		{
		}
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x964864", Offset = "0x964864", VA = "0x964864")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x9645A8", Offset = "0x9645A8", VA = "0x9645A8")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x963474", Offset = "0x963474", VA = "0x963474")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x9635F8", Offset = "0x9635F8", VA = "0x9635F8")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x9643D0", Offset = "0x9643D0", VA = "0x9643D0")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x964A58", Offset = "0x964A58", VA = "0x964A58")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x963E64", Offset = "0x963E64", VA = "0x963E64")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000AA")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x600067A")]
		[Address(RVA = "0xA0F944", Offset = "0xA0F944", VA = "0xA0F944")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9D94", Offset = "0x5C9D94")]
		add
		{
		}
		[Token(Token = "0x600067B")]
		[Address(RVA = "0xA0F9E8", Offset = "0xA0F9E8", VA = "0xA0F9E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9DA4", Offset = "0x5C9DA4")]
		remove
		{
		}
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xA0FA8C", Offset = "0xA0FA8C", VA = "0xA0FA8C", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xA0FAA0", Offset = "0xA0FAA0", VA = "0xA0FAA0")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000AB")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000244")]
	public enum ButtonType
	{
		[Token(Token = "0x4000BCD")]
		Play,
		[Token(Token = "0x4000BCE")]
		Pause,
		[Token(Token = "0x4000BCF")]
		FastForward,
		[Token(Token = "0x4000BD0")]
		Rewind,
		[Token(Token = "0x4000BD1")]
		SkipForward,
		[Token(Token = "0x4000BD2")]
		SkipBack,
		[Token(Token = "0x4000BD3")]
		Stop
	}

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x170000B8")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600067E")]
		[Address(RVA = "0x960F38", Offset = "0x960F38", VA = "0x960F38")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600067F")]
		[Address(RVA = "0x960F40", Offset = "0x960F40", VA = "0x960F40")]
		set
		{
		}
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x960F64", Offset = "0x960F64", VA = "0x960F64", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x962430", Offset = "0x962430", VA = "0x962430")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000AC")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000245")]
	public enum VideoShape
	{
		[Token(Token = "0x4000BD5")]
		_360,
		[Token(Token = "0x4000BD6")]
		_180,
		[Token(Token = "0x4000BD7")]
		Quad
	}

	[Token(Token = "0x2000246")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000BD9")]
		Mono,
		[Token(Token = "0x4000BDA")]
		TopBottom,
		[Token(Token = "0x4000BDB")]
		LeftRight,
		[Token(Token = "0x4000BDC")]
		BottomTop
	}

	[Token(Token = "0x2000247")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B90", Offset = "0x5C2B90")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700025A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600104B")]
			[Address(RVA = "0x964D20", Offset = "0x964D20", VA = "0x964D20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600104D")]
			[Address(RVA = "0x964D88", Offset = "0x964D88", VA = "0x964D88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x963170", Offset = "0x963170", VA = "0x963170")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x964B9C", Offset = "0x964B9C", VA = "0x964B9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x964BA0", Offset = "0x964BA0", VA = "0x964BA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x964D28", Offset = "0x964D28", VA = "0x964D28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2BA0", Offset = "0x5C2BA0")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x9633D8", Offset = "0x9633D8", VA = "0x9633D8")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x964790", Offset = "0x964790", VA = "0x964790")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4384", Offset = "0x5C4384")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4394", Offset = "0x5C4394")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C43A4", Offset = "0x5C43A4")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x170000B9")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000682")]
		[Address(RVA = "0x9627D8", Offset = "0x9627D8", VA = "0x9627D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9DB4", Offset = "0x5C9DB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000683")]
		[Address(RVA = "0x9627E0", Offset = "0x9627E0", VA = "0x9627E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9DC4", Offset = "0x5C9DC4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public long Duration
	{
		[Token(Token = "0x6000684")]
		[Address(RVA = "0x9627EC", Offset = "0x9627EC", VA = "0x9627EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9DD4", Offset = "0x5C9DD4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000685")]
		[Address(RVA = "0x9627F4", Offset = "0x9627F4", VA = "0x9627F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9DE4", Offset = "0x5C9DE4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000686")]
		[Address(RVA = "0x9627FC", Offset = "0x9627FC", VA = "0x9627FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9DF4", Offset = "0x5C9DF4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000687")]
		[Address(RVA = "0x962804", Offset = "0x962804", VA = "0x962804")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9E04", Offset = "0x5C9E04")]
		private set
		{
		}
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x96280C", Offset = "0x96280C", VA = "0x96280C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x962A8C", Offset = "0x962A8C", VA = "0x962A8C")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x962AF4", Offset = "0x962AF4", VA = "0x962AF4")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x963100", Offset = "0x963100", VA = "0x963100")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C9E14", Offset = "0x5C9E14")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x96319C", Offset = "0x96319C", VA = "0x96319C")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x9633E0", Offset = "0x9633E0", VA = "0x9633E0")]
	public void Play()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x963568", Offset = "0x963568", VA = "0x963568")]
	public void Pause()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x9636EC", Offset = "0x9636EC", VA = "0x9636EC")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x963924", Offset = "0x963924", VA = "0x963924")]
	private void Update()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x9642F8", Offset = "0x9642F8", VA = "0x9642F8")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x964518", Offset = "0x964518", VA = "0x964518")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x96469C", Offset = "0x96469C", VA = "0x96469C")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x964780", Offset = "0x964780", VA = "0x964780")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000AD")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x2000249")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000BE4")]
		Playing,
		[Token(Token = "0x4000BE5")]
		Paused,
		[Token(Token = "0x4000BE6")]
		Rewinding,
		[Token(Token = "0x4000BE7")]
		FastForwarding
	}

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x964D90", Offset = "0x964D90", VA = "0x964D90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x96508C", Offset = "0x96508C", VA = "0x96508C")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x965268", Offset = "0x965268", VA = "0x965268")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x96539C", Offset = "0x96539C", VA = "0x96539C")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x9654A4", Offset = "0x9654A4", VA = "0x9654A4")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x965370", Offset = "0x965370", VA = "0x965370")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x96556C", Offset = "0x96556C", VA = "0x96556C")]
	private void Update()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x964F80", Offset = "0x964F80", VA = "0x964F80")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x965900", Offset = "0x965900", VA = "0x965900")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000AE")]
public static class VectorUtil
{
	[Token(Token = "0x600069E")]
	[Address(RVA = "0xAC01D4", Offset = "0xAC01D4", VA = "0xAC01D4")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000AF")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x4000459")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x400045A")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xA0C308", Offset = "0xA0C308", VA = "0xA0C308")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xA0C610", Offset = "0xA0C610", VA = "0xA0C610")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xA0C830", Offset = "0xA0C830", VA = "0xA0C830")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xA0C96C", Offset = "0xA0C96C", VA = "0xA0C96C")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xA0CAAC", Offset = "0xA0CAAC", VA = "0xA0CAAC")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xA0CC10", Offset = "0xA0CC10", VA = "0xA0CC10")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x20000B0")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x4000463")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x88D1E8", Offset = "0x88D1E8", VA = "0x88D1E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x88D23C", Offset = "0x88D23C", VA = "0x88D23C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x88D240", Offset = "0x88D240", VA = "0x88D240")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x88D244", Offset = "0x88D244", VA = "0x88D244")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x88D438", Offset = "0x88D438", VA = "0x88D438")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x88D618", Offset = "0x88D618", VA = "0x88D618")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x20000B1")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x89E784", Offset = "0x89E784", VA = "0x89E784")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x89EB54", Offset = "0x89EB54", VA = "0x89EB54")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x89EC0C", Offset = "0x89EC0C", VA = "0x89EC0C")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x89EE0C", Offset = "0x89EE0C", VA = "0x89EE0C")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x89EEF4", Offset = "0x89EEF4", VA = "0x89EEF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x89EFD0", Offset = "0x89EFD0", VA = "0x89EFD0")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x89F03C", Offset = "0x89F03C", VA = "0x89F03C")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x89F044", Offset = "0x89F044", VA = "0x89F044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9E88", Offset = "0x5C9E88")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x89F0A0", Offset = "0x89F0A0", VA = "0x89F0A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9E98", Offset = "0x5C9E98")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x89F0FC", Offset = "0x89F0FC", VA = "0x89F0FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9EA8", Offset = "0x5C9EA8")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x89F158", Offset = "0x89F158", VA = "0x89F158")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9EB8", Offset = "0x5C9EB8")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000B2")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2BB0", Offset = "0x5C2BB0")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700025C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001053")]
			[Address(RVA = "0x91AD80", Offset = "0x91AD80", VA = "0x91AD80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001055")]
			[Address(RVA = "0x91ADE8", Offset = "0x91ADE8", VA = "0x91ADE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x91AC30", Offset = "0x91AC30", VA = "0x91AC30")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x91AC64", Offset = "0x91AC64", VA = "0x91AC64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x91AC68", Offset = "0x91AC68", VA = "0x91AC68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x91AD88", Offset = "0x91AD88", VA = "0x91AD88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x91A934", Offset = "0x91A934", VA = "0x91A934")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x91AA34", Offset = "0x91AA34", VA = "0x91AA34")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x91A9C4", Offset = "0x91A9C4", VA = "0x91A9C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5C9EC8", Offset = "0x5C9EC8")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x91AC5C", Offset = "0x91AC5C", VA = "0x91AC5C")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000B3")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C43D4", Offset = "0x5C43D4")]
	public int SubdivisionsU;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C43F0", Offset = "0x5C43F0")]
	public int SubdivisionsV;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xA17EB8", Offset = "0xA17EB8", VA = "0xA17EB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xA18970", Offset = "0xA18970", VA = "0xA18970")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000B4")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x170000BC")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x91E318", Offset = "0x91E318", VA = "0x91E318")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x91E370", Offset = "0x91E370", VA = "0x91E370")]
	public void Start()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x91E6D4", Offset = "0x91E6D4", VA = "0x91E6D4")]
	public void Update()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x91E7B8", Offset = "0x91E7B8", VA = "0x91E7B8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5C9F2C", Offset = "0x5C9F2C")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60006C0")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60006C1")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60006C2")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60006C3")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60006C4")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60006C5")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60006C6")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60006C7")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x91E820", Offset = "0x91E820", VA = "0x91E820")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x91E85C", Offset = "0x91E85C", VA = "0x91E85C")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x91E8D0", Offset = "0x91E8D0", VA = "0x91E8D0")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x91EA0C", Offset = "0x91EA0C", VA = "0x91EA0C")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x91EAE0", Offset = "0x91EAE0", VA = "0x91EAE0")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x91E5C0", Offset = "0x91E5C0", VA = "0x91E5C0")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x91EBAC", Offset = "0x91EBAC", VA = "0x91EBAC")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x91EC14", Offset = "0x91EC14", VA = "0x91EC14")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x91ED14", Offset = "0x91ED14", VA = "0x91ED14")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000B5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1B18", Offset = "0x5C1B18")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x200024B")]
	public enum DrawMode
	{
		[Token(Token = "0x4000BEC")]
		Opaque,
		[Token(Token = "0x4000BED")]
		OpaqueWithClip,
		[Token(Token = "0x4000BEE")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000BEF")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x170000BD")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x85F110", Offset = "0x85F110", VA = "0x85F110")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x85F1A4", Offset = "0x85F1A4", VA = "0x85F1A4")]
		set
		{
		}
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x85DAA0", Offset = "0x85DAA0", VA = "0x85DAA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x85E710", Offset = "0x85E710", VA = "0x85E710")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x85E794", Offset = "0x85E794", VA = "0x85E794")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x85E888", Offset = "0x85E888", VA = "0x85E888")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x85E97C", Offset = "0x85E97C", VA = "0x85E97C", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x85EB80", Offset = "0x85EB80", VA = "0x85EB80")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x85F274", Offset = "0x85F274", VA = "0x85F274")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000B6")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x200024C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2BC0", Offset = "0x5C2BC0")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x8CD0CC", Offset = "0x8CD0CC", VA = "0x8CD0CC")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x8CD1DC", Offset = "0x8CD1DC", VA = "0x8CD1DC")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x8CCF0C", Offset = "0x8CCF0C", VA = "0x8CCF0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x8CD0D4", Offset = "0x8CD0D4", VA = "0x8CD0D4")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x8CD1D4", Offset = "0x8CD1D4", VA = "0x8CD1D4")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000B7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5C1B7C", Offset = "0x5C1B7C")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x200024D")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000BF3")]
		MouseXAndY,
		[Token(Token = "0x4000BF4")]
		MouseX,
		[Token(Token = "0x4000BF5")]
		MouseY
	}

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x962498", Offset = "0x962498", VA = "0x962498")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x9626F8", Offset = "0x9626F8", VA = "0x9626F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x9627B8", Offset = "0x9627B8", VA = "0x9627B8")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000B8")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200024E")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000BF7")]
		Uninitialized = -1,
		[Token(Token = "0x4000BF8")]
		NotEnabled,
		[Token(Token = "0x4000BF9")]
		Success,
		[Token(Token = "0x4000BFA")]
		StreamError,
		[Token(Token = "0x4000BFB")]
		ProcessError,
		[Token(Token = "0x4000BFC")]
		MaxStatValue
	}

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x965F98", Offset = "0x965F98", VA = "0x965F98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x9661CC", Offset = "0x9661CC", VA = "0x9661CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x9663B8", Offset = "0x9663B8", VA = "0x9663B8")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000B9")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x200024F")]
	private enum Parameters
	{
		[Token(Token = "0x4000BFE")]
		P_GAIN,
		[Token(Token = "0x4000BFF")]
		P_USEINVSQR,
		[Token(Token = "0x4000C00")]
		P_NEAR,
		[Token(Token = "0x4000C01")]
		P_FAR,
		[Token(Token = "0x4000C02")]
		P_RADIUS,
		[Token(Token = "0x4000C03")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000C04")]
		P_AMBISTAT,
		[Token(Token = "0x4000C05")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000C06")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000C07")]
		P_SENDLEVEL,
		[Token(Token = "0x4000C08")]
		P_NUM
	}

	[Token(Token = "0x4000499")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x170000BE")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x966604", Offset = "0x966604", VA = "0x966604")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x96660C", Offset = "0x96660C", VA = "0x96660C")]
		set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public float Gain
	{
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x966618", Offset = "0x966618", VA = "0x966618")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x966620", Offset = "0x966620", VA = "0x966620")]
		set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x9666A4", Offset = "0x9666A4", VA = "0x9666A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x9666AC", Offset = "0x9666AC", VA = "0x9666AC")]
		set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public float Near
	{
		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x9666B8", Offset = "0x9666B8", VA = "0x9666B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x9666C0", Offset = "0x9666C0", VA = "0x9666C0")]
		set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public float Far
	{
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x966748", Offset = "0x966748", VA = "0x966748")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x966750", Offset = "0x966750", VA = "0x966750")]
		set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x9667D8", Offset = "0x9667D8", VA = "0x9667D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x9667E0", Offset = "0x9667E0", VA = "0x9667E0")]
		set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public float ReverbSend
	{
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x966868", Offset = "0x966868", VA = "0x966868")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x966870", Offset = "0x966870", VA = "0x966870")]
		set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public bool EnableRfl
	{
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x9668F8", Offset = "0x9668F8", VA = "0x9668F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x966900", Offset = "0x966900", VA = "0x966900")]
		set
		{
		}
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x96642C", Offset = "0x96642C", VA = "0x96642C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x5C9F64", Offset = "0x5C9F64")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x966524", Offset = "0x966524", VA = "0x966524")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x96690C", Offset = "0x96690C", VA = "0x96690C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x966A80", Offset = "0x966A80", VA = "0x966A80")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x966A84", Offset = "0x966A84", VA = "0x966A84")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x966978", Offset = "0x966978", VA = "0x966978")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x966B4C", Offset = "0x966B4C", VA = "0x966B4C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x966FAC", Offset = "0x966FAC", VA = "0x966FAC")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x9664A4", Offset = "0x9664A4", VA = "0x9664A4")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x96707C", Offset = "0x96707C", VA = "0x96707C")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000BA")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x40004A4")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x40004A6")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x96709C", Offset = "0x96709C", VA = "0x96709C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x9670A8", Offset = "0x9670A8", VA = "0x9670A8")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000702")]
	[Address(RVA = "0x967160", Offset = "0x967160", VA = "0x967160")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000703")]
	[Address(RVA = "0x9670E0", Offset = "0x9670E0", VA = "0x9670E0")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x9671E0", Offset = "0x9671E0", VA = "0x9671E0")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000BB")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000250")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000251")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x40004AD")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x170000C6")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000705")]
		[Address(RVA = "0x969C5C", Offset = "0x969C5C", VA = "0x969C5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C7")]
	public string filePath
	{
		[Token(Token = "0x6000706")]
		[Address(RVA = "0x969CE8", Offset = "0x969CE8", VA = "0x969CE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x969D60", Offset = "0x969D60", VA = "0x969D60")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x969EA8", Offset = "0x969EA8", VA = "0x969EA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x969EAC", Offset = "0x969EAC", VA = "0x969EAC")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x96A40C", Offset = "0x96A40C", VA = "0x96A40C")]
	private void Update()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x96A7A4", Offset = "0x96A7A4", VA = "0x96A7A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x96A900", Offset = "0x96A900", VA = "0x96A900")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x96AFD8", Offset = "0x96AFD8", VA = "0x96AFD8")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x96B014", Offset = "0x96B014", VA = "0x96B014")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x96C80C", Offset = "0x96C80C", VA = "0x96C80C")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x96C550", Offset = "0x96C550", VA = "0x96C550")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x96A244", Offset = "0x96A244", VA = "0x96A244")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x96A078", Offset = "0x96A078", VA = "0x96A078")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x96CE20", Offset = "0x96CE20", VA = "0x96CE20")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x96D25C", Offset = "0x96D25C", VA = "0x96D25C")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000BC")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000252")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000C0F")]
		Int8,
		[Token(Token = "0x4000C10")]
		UInt8,
		[Token(Token = "0x4000C11")]
		Int16,
		[Token(Token = "0x4000C12")]
		UInt16,
		[Token(Token = "0x4000C13")]
		Int32,
		[Token(Token = "0x4000C14")]
		UInt32,
		[Token(Token = "0x4000C15")]
		Int64,
		[Token(Token = "0x4000C16")]
		UInt64,
		[Token(Token = "0x4000C17")]
		Float16,
		[Token(Token = "0x4000C18")]
		Float32,
		[Token(Token = "0x4000C19")]
		Float64
	}

	[Token(Token = "0x2000253")]
	public class ClientType
	{
		[Token(Token = "0x4000C1A")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000C1B")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000C1C")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000C1D")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000C1E")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000C1F")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000C20")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000C21")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000C22")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000C23")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000C24")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000C25")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000C26")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4000C27")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4000C28")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x4000C29")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2021_1 = 15u;

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x967694", Offset = "0x967694", VA = "0x967694")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000254")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6001059")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x600105A")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x600105B")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x600105C")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600105D")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x600105E")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600105F")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001060")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001061")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001062")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001063")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001064")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6001065")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001066")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001067")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000255")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000C2A")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700025E")]
		private IntPtr context
		{
			[Token(Token = "0x6001068")]
			[Address(RVA = "0x968304", Offset = "0x968304", VA = "0x968304")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001069")]
		[Address(RVA = "0x968368", Offset = "0x968368", VA = "0x968368")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600106A")]
		[Address(RVA = "0x9683F8", Offset = "0x9683F8", VA = "0x9683F8")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x968488", Offset = "0x968488", VA = "0x968488", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600106C")]
		[Address(RVA = "0x9684AC", Offset = "0x9684AC", VA = "0x9684AC")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x96853C", Offset = "0x96853C", VA = "0x96853C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600106E")]
		[Address(RVA = "0x968560", Offset = "0x968560", VA = "0x968560")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x9685EC", Offset = "0x9685EC", VA = "0x9685EC", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001070")]
		[Address(RVA = "0x968610", Offset = "0x968610", VA = "0x968610")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x968690", Offset = "0x968690", VA = "0x968690", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001072")]
		[Address(RVA = "0x968698", Offset = "0x968698", VA = "0x968698")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x9687B8", Offset = "0x9687B8", VA = "0x9687B8", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001074")]
		[Address(RVA = "0x9688B0", Offset = "0x9688B0", VA = "0x9688B0")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x968948", Offset = "0x968948", VA = "0x968948", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001076")]
		[Address(RVA = "0x968954", Offset = "0x968954", VA = "0x968954")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x968A80", Offset = "0x968A80", VA = "0x968A80", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001078")]
		[Address(RVA = "0x968A8C", Offset = "0x968A8C", VA = "0x968A8C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x968B38", Offset = "0x968B38", VA = "0x968B38", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600107A")]
		[Address(RVA = "0x968B44", Offset = "0x968B44", VA = "0x968B44")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x968BF0", Offset = "0x968BF0", VA = "0x968BF0", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600107C")]
		[Address(RVA = "0x968BFC", Offset = "0x968BFC", VA = "0x968BFC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x968CA8", Offset = "0x968CA8", VA = "0x968CA8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600107E")]
		[Address(RVA = "0x968CB4", Offset = "0x968CB4", VA = "0x968CB4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x968D40", Offset = "0x968D40", VA = "0x968D40", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001080")]
		[Address(RVA = "0x968D64", Offset = "0x968D64", VA = "0x968D64")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x968DE4", Offset = "0x968DE4", VA = "0x968DE4", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001082")]
		[Address(RVA = "0x968DEC", Offset = "0x968DEC", VA = "0x968DEC")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x968E94", Offset = "0x968E94", VA = "0x968E94", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001084")]
		[Address(RVA = "0x968EA0", Offset = "0x968EA0", VA = "0x968EA0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x968F48", Offset = "0x968F48", VA = "0x968F48", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001086")]
		[Address(RVA = "0x968F58", Offset = "0x968F58", VA = "0x968F58")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x968FE8", Offset = "0x968FE8", VA = "0x968FE8", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x967640", Offset = "0x967640", VA = "0x967640")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000256")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000C2C")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700025F")]
		private IntPtr context
		{
			[Token(Token = "0x6001089")]
			[Address(RVA = "0x968FF4", Offset = "0x968FF4", VA = "0x968FF4")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600108A")]
		[Address(RVA = "0x967488", Offset = "0x967488", VA = "0x967488")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600108B")]
		[Address(RVA = "0x969058", Offset = "0x969058", VA = "0x969058")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x9690E8", Offset = "0x9690E8", VA = "0x9690E8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600108D")]
		[Address(RVA = "0x96910C", Offset = "0x96910C", VA = "0x96910C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x96919C", Offset = "0x96919C", VA = "0x96919C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600108F")]
		[Address(RVA = "0x9691C0", Offset = "0x9691C0", VA = "0x9691C0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x969250", Offset = "0x969250", VA = "0x969250", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001091")]
		[Address(RVA = "0x969274", Offset = "0x969274", VA = "0x969274")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x9692F4", Offset = "0x9692F4", VA = "0x9692F4", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001093")]
		[Address(RVA = "0x9692FC", Offset = "0x9692FC", VA = "0x9692FC")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x96941C", Offset = "0x96941C", VA = "0x96941C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001095")]
		[Address(RVA = "0x969514", Offset = "0x969514", VA = "0x969514")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x9695AC", Offset = "0x9695AC", VA = "0x9695AC", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001097")]
		[Address(RVA = "0x9695B8", Offset = "0x9695B8", VA = "0x9695B8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x9696E4", Offset = "0x9696E4", VA = "0x9696E4", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001099")]
		[Address(RVA = "0x9696F0", Offset = "0x9696F0", VA = "0x9696F0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x96979C", Offset = "0x96979C", VA = "0x96979C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600109B")]
		[Address(RVA = "0x9697A8", Offset = "0x9697A8", VA = "0x9697A8")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x969854", Offset = "0x969854", VA = "0x969854", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600109D")]
		[Address(RVA = "0x969860", Offset = "0x969860", VA = "0x969860")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x96990C", Offset = "0x96990C", VA = "0x96990C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600109F")]
		[Address(RVA = "0x969918", Offset = "0x969918", VA = "0x969918")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x9699A8", Offset = "0x9699A8", VA = "0x9699A8", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x9699CC", Offset = "0x9699CC", VA = "0x9699CC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x969A4C", Offset = "0x969A4C", VA = "0x969A4C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x969A54", Offset = "0x969A54", VA = "0x969A54")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x969AFC", Offset = "0x969AFC", VA = "0x969AFC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x969B08", Offset = "0x969B08", VA = "0x969B08")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x969BB0", Offset = "0x969BB0", VA = "0x969BB0", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x969BC0", Offset = "0x969BC0", VA = "0x969BC0")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x969C50", Offset = "0x969C50", VA = "0x969C50", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x967518", Offset = "0x967518", VA = "0x967518")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000257")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000C2E")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000260")]
		private IntPtr context
		{
			[Token(Token = "0x60010AA")]
			[Address(RVA = "0x96769C", Offset = "0x96769C", VA = "0x96769C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x967564", Offset = "0x967564", VA = "0x967564")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x967700", Offset = "0x967700", VA = "0x967700")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x967790", Offset = "0x967790", VA = "0x967790", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x9677B4", Offset = "0x9677B4", VA = "0x9677B4")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x967844", Offset = "0x967844", VA = "0x967844", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x967868", Offset = "0x967868", VA = "0x967868")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x9678F8", Offset = "0x9678F8", VA = "0x9678F8", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x96791C", Offset = "0x96791C", VA = "0x96791C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x96799C", Offset = "0x96799C", VA = "0x96799C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x9679A4", Offset = "0x9679A4", VA = "0x9679A4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x967AC4", Offset = "0x967AC4", VA = "0x967AC4", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x967BBC", Offset = "0x967BBC", VA = "0x967BBC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x967C54", Offset = "0x967C54", VA = "0x967C54", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x967C60", Offset = "0x967C60", VA = "0x967C60")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x967D8C", Offset = "0x967D8C", VA = "0x967D8C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x967D98", Offset = "0x967D98", VA = "0x967D98")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x967E44", Offset = "0x967E44", VA = "0x967E44", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x967E50", Offset = "0x967E50", VA = "0x967E50")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x967EFC", Offset = "0x967EFC", VA = "0x967EFC", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x967F08", Offset = "0x967F08", VA = "0x967F08")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x967FB4", Offset = "0x967FB4", VA = "0x967FB4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x967FC0", Offset = "0x967FC0", VA = "0x967FC0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x968050", Offset = "0x968050", VA = "0x968050", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x968074", Offset = "0x968074", VA = "0x968074")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x9680F4", Offset = "0x9680F4", VA = "0x9680F4", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x9680FC", Offset = "0x9680FC", VA = "0x9680FC")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x9681A4", Offset = "0x9681A4", VA = "0x9681A4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x9681B0", Offset = "0x9681B0", VA = "0x9681B0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x968258", Offset = "0x968258", VA = "0x968258", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x968268", Offset = "0x968268", VA = "0x968268")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x9682F8", Offset = "0x9682F8", VA = "0x9682F8", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x9675F4", Offset = "0x9675F4", VA = "0x9675F4")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x170000C8")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000716")]
		[Address(RVA = "0x9671F0", Offset = "0x9671F0", VA = "0x9671F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x967260", Offset = "0x967260", VA = "0x967260")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x96768C", Offset = "0x96768C", VA = "0x96768C")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000BD")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000258")]
	public enum Preset
	{
		[Token(Token = "0x4000C31")]
		Custom,
		[Token(Token = "0x4000C32")]
		AcousticTile,
		[Token(Token = "0x4000C33")]
		Brick,
		[Token(Token = "0x4000C34")]
		BrickPainted,
		[Token(Token = "0x4000C35")]
		Carpet,
		[Token(Token = "0x4000C36")]
		CarpetHeavy,
		[Token(Token = "0x4000C37")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000C38")]
		CeramicTile,
		[Token(Token = "0x4000C39")]
		Concrete,
		[Token(Token = "0x4000C3A")]
		ConcreteRough,
		[Token(Token = "0x4000C3B")]
		ConcreteBlock,
		[Token(Token = "0x4000C3C")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000C3D")]
		Curtain,
		[Token(Token = "0x4000C3E")]
		Foliage,
		[Token(Token = "0x4000C3F")]
		Glass,
		[Token(Token = "0x4000C40")]
		GlassHeavy,
		[Token(Token = "0x4000C41")]
		Grass,
		[Token(Token = "0x4000C42")]
		Gravel,
		[Token(Token = "0x4000C43")]
		GypsumBoard,
		[Token(Token = "0x4000C44")]
		PlasterOnBrick,
		[Token(Token = "0x4000C45")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000C46")]
		Soil,
		[Token(Token = "0x4000C47")]
		SoundProof,
		[Token(Token = "0x4000C48")]
		Snow,
		[Token(Token = "0x4000C49")]
		Steel,
		[Token(Token = "0x4000C4A")]
		Water,
		[Token(Token = "0x4000C4B")]
		WoodThin,
		[Token(Token = "0x4000C4C")]
		WoodThick,
		[Token(Token = "0x4000C4D")]
		WoodFloor,
		[Token(Token = "0x4000C4E")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000259")]
	public sealed class Point
	{
		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x853D10", Offset = "0x853D10", VA = "0x853D10")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x853D48", Offset = "0x853D48", VA = "0x853D48")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x853DB8", Offset = "0x853DB8", VA = "0x853DB8")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x200025A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x5C2BD0", Offset = "0x5C2BD0")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20002EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2E68", Offset = "0x5C2E68")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4000F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x600120D")]
			[Address(RVA = "0x854288", Offset = "0x854288", VA = "0x854288")]
			public <>c()
			{
			}

			[Token(Token = "0x600120E")]
			[Address(RVA = "0x854290", Offset = "0x854290", VA = "0x854290")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x600120F")]
			[Address(RVA = "0x8542A8", Offset = "0x8542A8", VA = "0x8542A8")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000261")]
		public float Item
		{
			[Token(Token = "0x60010CE")]
			[Address(RVA = "0x853DF0", Offset = "0x853DF0", VA = "0x853DF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x8541AC", Offset = "0x8541AC", VA = "0x8541AC")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C44FC", Offset = "0x5C44FC")]
	public Spectrum absorption;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4534", Offset = "0x5C4534")]
	public Spectrum transmission;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C456C", Offset = "0x5C456C")]
	public Spectrum scattering;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x170000C9")]
	public Preset preset
	{
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x96D334", Offset = "0x96D334", VA = "0x96D334")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x600071A")]
		[Address(RVA = "0x96D33C", Offset = "0x96D33C", VA = "0x96D33C")]
		set
		{
		}
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x96D364", Offset = "0x96D364", VA = "0x96D364")]
	private void Start()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x96CCB4", Offset = "0x96CCB4", VA = "0x96CCB4")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x96D914", Offset = "0x96D914", VA = "0x96D914")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x96D918", Offset = "0x96D918", VA = "0x96D918")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x96D368", Offset = "0x96D368", VA = "0x96D368")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x96C678", Offset = "0x96C678", VA = "0x96C678")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x96D9FC", Offset = "0x96D9FC", VA = "0x96D9FC")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x96DE9C", Offset = "0x96DE9C", VA = "0x96DE9C")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x96E340", Offset = "0x96E340", VA = "0x96E340")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x96E7E0", Offset = "0x96E7E0", VA = "0x96E7E0")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x96EC94", Offset = "0x96EC94", VA = "0x96EC94")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x96F134", Offset = "0x96F134", VA = "0x96F134")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x96F5D4", Offset = "0x96F5D4", VA = "0x96F5D4")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x96FA7C", Offset = "0x96FA7C", VA = "0x96FA7C")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x96FF24", Offset = "0x96FF24", VA = "0x96FF24")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x9703D0", Offset = "0x9703D0", VA = "0x9703D0")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x970878", Offset = "0x970878", VA = "0x970878")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x970D28", Offset = "0x970D28", VA = "0x970D28")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x9711C8", Offset = "0x9711C8", VA = "0x9711C8")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x971674", Offset = "0x971674", VA = "0x971674")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x971B04", Offset = "0x971B04", VA = "0x971B04")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x971FA0", Offset = "0x971FA0", VA = "0x971FA0")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x972328", Offset = "0x972328", VA = "0x972328")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x9726A8", Offset = "0x9726A8", VA = "0x9726A8")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x972B58", Offset = "0x972B58", VA = "0x972B58")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x973004", Offset = "0x973004", VA = "0x973004")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x9734A8", Offset = "0x9734A8", VA = "0x9734A8")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x973834", Offset = "0x973834", VA = "0x973834")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x973998", Offset = "0x973998", VA = "0x973998")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x973D14", Offset = "0x973D14", VA = "0x973D14")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x9741A4", Offset = "0x9741A4", VA = "0x9741A4")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x974648", Offset = "0x974648", VA = "0x974648")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x974AE0", Offset = "0x974AE0", VA = "0x974AE0")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x974F80", Offset = "0x974F80", VA = "0x974F80")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x975428", Offset = "0x975428", VA = "0x975428")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x9758CC", Offset = "0x9758CC", VA = "0x9758CC")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000BE")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x8542C0", Offset = "0x8542C0", VA = "0x8542C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x854394", Offset = "0x854394", VA = "0x854394")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000BF")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x170000CA")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000741")]
		[Address(RVA = "0x854950", Offset = "0x854950", VA = "0x854950")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x854A64", Offset = "0x854A64", VA = "0x854A64")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000C0")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40004B8")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000743")]
	[Address(RVA = "0x854A74", Offset = "0x854A74", VA = "0x854A74")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x854B0C", Offset = "0x854B0C", VA = "0x854B0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x854C18", Offset = "0x854C18", VA = "0x854C18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x854C1C", Offset = "0x854C1C", VA = "0x854C1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x854C20", Offset = "0x854C20", VA = "0x854C20")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000C1")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x200025B")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x40004C7")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40004CD")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xA889B8", Offset = "0xA889B8", VA = "0xA889B8")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xA887E8", Offset = "0xA887E8", VA = "0xA887E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5C9F78", Offset = "0x5C9F78")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xA889F0", Offset = "0xA889F0", VA = "0xA889F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xA88B24", Offset = "0xA88B24", VA = "0xA88B24")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xA88C18", Offset = "0xA88C18", VA = "0xA88C18")]
	private void Update()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xA895D0", Offset = "0xA895D0", VA = "0xA895D0")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600074E")]
	[Address(RVA = "0xA88A90", Offset = "0xA88A90", VA = "0xA88A90")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600074F")]
	[Address(RVA = "0xA88B88", Offset = "0xA88B88", VA = "0xA88B88")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000750")]
	[Address(RVA = "0xA89338", Offset = "0xA89338", VA = "0xA89338")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000751")]
	[Address(RVA = "0xA893B8", Offset = "0xA893B8", VA = "0xA893B8")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000752")]
	[Address(RVA = "0xA89440", Offset = "0xA89440", VA = "0xA89440")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000753")]
	[Address(RVA = "0xA894C8", Offset = "0xA894C8", VA = "0xA894C8")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000754")]
	[Address(RVA = "0xA89548", Offset = "0xA89548", VA = "0xA89548")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000755")]
	[Address(RVA = "0xA8A408", Offset = "0xA8A408", VA = "0xA8A408")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000756")]
	[Address(RVA = "0xA8A4B0", Offset = "0xA8A4B0", VA = "0xA8A4B0")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xA8A558", Offset = "0xA8A558", VA = "0xA8A558")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000C2")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000C3")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x8543A4", Offset = "0x8543A4", VA = "0x8543A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x8543A8", Offset = "0x8543A8", VA = "0x8543A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x8543AC", Offset = "0x8543AC", VA = "0x8543AC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x854514", Offset = "0x854514", VA = "0x854514")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x8543F8", Offset = "0x8543F8", VA = "0x8543F8")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x854488", Offset = "0x854488", VA = "0x854488")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x854560", Offset = "0x854560", VA = "0x854560")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x8545F8", Offset = "0x8545F8", VA = "0x8545F8")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x854760", Offset = "0x854760", VA = "0x854760")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x8548C8", Offset = "0x8548C8", VA = "0x8548C8")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000C4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1BB4", Offset = "0x5C1BB4")]
public class ReverseNormals : MonoBehaviour
{
	[Token(Token = "0x6000764")]
	[Address(RVA = "0x8C3964", Offset = "0x8C3964", VA = "0x8C3964")]
	private void Start()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x8C3C20", Offset = "0x8C3C20", VA = "0x8C3C20")]
	public ReverseNormals()
	{
	}
}
[Token(Token = "0x20000C5")]
public class randomParticleRotation : MonoBehaviour
{
	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool x;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool y;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool z;

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x1183388", Offset = "0x1183388", VA = "0x1183388")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x11835DC", Offset = "0x11835DC", VA = "0x11835DC")]
	public randomParticleRotation()
	{
	}
}
[Token(Token = "0x20000C6")]
public class rotation : MonoBehaviour
{
	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xRotation;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float yRotation;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float zRotation;

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x11835E4", Offset = "0x11835E4", VA = "0x11835E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x1183644", Offset = "0x1183644", VA = "0x1183644")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x118364C", Offset = "0x118364C", VA = "0x118364C")]
	public void clickOn()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x11836AC", Offset = "0x11836AC", VA = "0x11836AC")]
	public void clickOff()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x11836B4", Offset = "0x11836B4", VA = "0x11836B4")]
	private void rotate()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x118379C", Offset = "0x118379C", VA = "0x118379C")]
	public rotation()
	{
	}
}
[Token(Token = "0x20000C7")]
public class CannonBehavior : MonoBehaviour
{
	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_cannonRot;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_muzzle;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_shotPrefab;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_guiTexture;

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xA16D90", Offset = "0xA16D90", VA = "0xA16D90")]
	private void Start()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xA16D94", Offset = "0xA16D94", VA = "0xA16D94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xA16FD4", Offset = "0xA16FD4", VA = "0xA16FD4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xA170C0", Offset = "0xA170C0", VA = "0xA170C0")]
	public CannonBehavior()
	{
	}
}
[Token(Token = "0x20000C8")]
public class CreateSinShapedLineStrip : MonoBehaviour
{
	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_numVertices;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_volumetricLineStripMaterial;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color m_color;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_start;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_end;

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x7B2F44", Offset = "0x7B2F44", VA = "0x7B2F44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x7B319C", Offset = "0x7B319C", VA = "0x7B319C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x7B32E4", Offset = "0x7B32E4", VA = "0x7B32E4")]
	public CreateSinShapedLineStrip()
	{
	}
}
[Token(Token = "0x20000C9")]
public class ShotBehavior : MonoBehaviour
{
	[Token(Token = "0x6000775")]
	[Address(RVA = "0x8C939C", Offset = "0x8C939C", VA = "0x8C939C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x8C93A0", Offset = "0x8C93A0", VA = "0x8C93A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x8C94CC", Offset = "0x8C94CC", VA = "0x8C94CC")]
	public ShotBehavior()
	{
	}
}
[Token(Token = "0x20000CA")]
public class VolumetricLineSettings : MonoBehaviour
{
	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_disableFieldOfViewScaling;

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xAC0268", Offset = "0xAC0268", VA = "0xAC0268")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xAC0334", Offset = "0xAC0334", VA = "0xAC0334")]
	public VolumetricLineSettings()
	{
	}
}
[Token(Token = "0x20000CB")]
public class InstanceExample : MonoBehaviour
{
	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InstanceExample Instance;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem effectA;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem effectB;

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x91BB80", Offset = "0x91BB80", VA = "0x91BB80")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x91BC50", Offset = "0x91BC50", VA = "0x91BC50")]
	private void Update()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x91BD50", Offset = "0x91BD50", VA = "0x91BD50")]
	public void Explosion(Vector3 position)
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x91BDA0", Offset = "0x91BDA0", VA = "0x91BDA0")]
	private ParticleSystem instantiate(ParticleSystem prefab, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x91BEC8", Offset = "0x91BEC8", VA = "0x91BEC8")]
	public InstanceExample()
	{
	}
}
namespace VolumetricLines
{
	[Token(Token = "0x20000CC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1C18", Offset = "0x5C1C18")]
	[ExecuteInEditMode]
	public class SetFovGlobalShaderVariable : MonoBehaviour
	{
		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera m_camera;

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xAC033C", Offset = "0xAC033C", VA = "0xAC033C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xAC03A4", Offset = "0xAC03A4", VA = "0xAC03A4")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xAC0408", Offset = "0xAC0408", VA = "0xAC0408")]
		public SetFovGlobalShaderVariable()
		{
		}
	}
	[Token(Token = "0x20000CD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1C8C", Offset = "0x5C1C8C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1C8C", Offset = "0x5C1C8C")]
	[ExecuteInEditMode]
	public class VolumetricLineBehavior : MonoBehaviour
	{
		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 m_startPos;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 m_endPos;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C4634", Offset = "0x5C4634")]
		private float m_lightSaberFactor;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_material;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x170000CB")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x6000782")]
			[Address(RVA = "0xAC047C", Offset = "0xAC047C", VA = "0xAC047C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000783")]
			[Address(RVA = "0xAC0484", Offset = "0xAC0484", VA = "0xAC0484")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x6000784")]
			[Address(RVA = "0xAC048C", Offset = "0xAC048C", VA = "0xAC048C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000785")]
			[Address(RVA = "0xAC0494", Offset = "0xAC0494", VA = "0xAC0494")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public Color LineColor
		{
			[Token(Token = "0x6000786")]
			[Address(RVA = "0xAC04A0", Offset = "0xAC04A0", VA = "0xAC04A0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000787")]
			[Address(RVA = "0xAC04AC", Offset = "0xAC04AC", VA = "0xAC04AC")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public float LineWidth
		{
			[Token(Token = "0x6000788")]
			[Address(RVA = "0xAC06A8", Offset = "0xAC06A8", VA = "0xAC06A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000789")]
			[Address(RVA = "0xAC06B0", Offset = "0xAC06B0", VA = "0xAC06B0")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public float LightSaberFactor
		{
			[Token(Token = "0x600078A")]
			[Address(RVA = "0xAC0770", Offset = "0xAC0770", VA = "0xAC0770")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600078B")]
			[Address(RVA = "0xAC0778", Offset = "0xAC0778", VA = "0xAC0778")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public Vector3 StartPos
		{
			[Token(Token = "0x600078C")]
			[Address(RVA = "0xAC0838", Offset = "0xAC0838", VA = "0xAC0838")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600078D")]
			[Address(RVA = "0xAC0844", Offset = "0xAC0844", VA = "0xAC0844")]
			set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		public Vector3 EndPos
		{
			[Token(Token = "0x600078E")]
			[Address(RVA = "0xAC0AE0", Offset = "0xAC0AE0", VA = "0xAC0AE0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600078F")]
			[Address(RVA = "0xAC0AEC", Offset = "0xAC0AEC", VA = "0xAC0AEC")]
			set
			{
			}
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0xAC0588", Offset = "0xAC0588", VA = "0xAC0588")]
		private void CreateMaterial()
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0xAC0C34", Offset = "0xAC0C34", VA = "0xAC0C34")]
		private void DestroyMaterial()
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0xAC0B0C", Offset = "0xAC0B0C", VA = "0xAC0B0C")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0xAC0858", Offset = "0xAC0858", VA = "0xAC0858")]
		public void SetStartAndEndPoints(Vector3 startPoint, Vector3 endPoint)
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0xAC0CE0", Offset = "0xAC0CE0", VA = "0xAC0CE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0xAC0FD0", Offset = "0xAC0FD0", VA = "0xAC0FD0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xAC0FD4", Offset = "0xAC0FD4", VA = "0xAC0FD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0xAC10A4", Offset = "0xAC10A4", VA = "0xAC10A4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0xAC10C8", Offset = "0xAC10C8", VA = "0xAC10C8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xAC1188", Offset = "0xAC1188", VA = "0xAC1188")]
		public VolumetricLineBehavior()
		{
		}
	}
	[Token(Token = "0x20000CE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1D28", Offset = "0x5C1D28")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1D28", Offset = "0x5C1D28")]
	[ExecuteInEditMode]
	public class VolumetricLineStripBehavior : MonoBehaviour
	{
		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C46B4", Offset = "0x5C46B4")]
		private float m_lightSaberFactor;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_material;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector3[] m_lineVertices;

		[Token(Token = "0x170000D2")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x600079A")]
			[Address(RVA = "0xAC11EC", Offset = "0xAC11EC", VA = "0xAC11EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600079B")]
			[Address(RVA = "0xAC11F4", Offset = "0xAC11F4", VA = "0xAC11F4")]
			set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x600079C")]
			[Address(RVA = "0xAC11FC", Offset = "0xAC11FC", VA = "0xAC11FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600079D")]
			[Address(RVA = "0xAC1204", Offset = "0xAC1204", VA = "0xAC1204")]
			set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public Color LineColor
		{
			[Token(Token = "0x600079E")]
			[Address(RVA = "0xAC1210", Offset = "0xAC1210", VA = "0xAC1210")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600079F")]
			[Address(RVA = "0xAC121C", Offset = "0xAC121C", VA = "0xAC121C")]
			set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public float LineWidth
		{
			[Token(Token = "0x60007A0")]
			[Address(RVA = "0xAC1418", Offset = "0xAC1418", VA = "0xAC1418")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007A1")]
			[Address(RVA = "0xAC1420", Offset = "0xAC1420", VA = "0xAC1420")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public float LightSaberFactor
		{
			[Token(Token = "0x60007A2")]
			[Address(RVA = "0xAC14E0", Offset = "0xAC14E0", VA = "0xAC14E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007A3")]
			[Address(RVA = "0xAC14E8", Offset = "0xAC14E8", VA = "0xAC14E8")]
			set
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public Vector3[] LineVertices
		{
			[Token(Token = "0x60007A4")]
			[Address(RVA = "0xAC15A8", Offset = "0xAC15A8", VA = "0xAC15A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xAC12F8", Offset = "0xAC12F8", VA = "0xAC12F8")]
		private void CreateMaterial()
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xAC16D0", Offset = "0xAC16D0", VA = "0xAC16D0")]
		private void DestroyMaterial()
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xAC15B0", Offset = "0xAC15B0", VA = "0xAC15B0")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xAC177C", Offset = "0xAC177C", VA = "0xAC177C")]
		public void UpdateLineVertices(Vector3[] m_newSetOfVertices)
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xAC26D8", Offset = "0xAC26D8", VA = "0xAC26D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xAC2700", Offset = "0xAC2700", VA = "0xAC2700")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xAC2704", Offset = "0xAC2704", VA = "0xAC2704")]
		private void Update()
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xAC27D4", Offset = "0xAC27D4", VA = "0xAC27D4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xAC27F8", Offset = "0xAC27F8", VA = "0xAC27F8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xAC2958", Offset = "0xAC2958", VA = "0xAC2958")]
		public VolumetricLineStripBehavior()
		{
		}
	}
	[Token(Token = "0x20000CF")]
	public static class VolumetricLineVertexData
	{
		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector2[] TexCoords;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Vector2[] VertexOffsets;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int[] Indices;
	}
	[Token(Token = "0x20000D0")]
	public class VolumetricMultiLineBehavior : MonoBehaviour
	{
		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C4744", Offset = "0x5C4744")]
		private float m_lightSaberFactor;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector3[] m_lineVertices;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VolumetricLineBehavior[] m_volumetricLines;

		[Token(Token = "0x170000D8")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x60007B0")]
			[Address(RVA = "0xAC2CFC", Offset = "0xAC2CFC", VA = "0xAC2CFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007B1")]
			[Address(RVA = "0xAC2D04", Offset = "0xAC2D04", VA = "0xAC2D04")]
			set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x60007B2")]
			[Address(RVA = "0xAC2D0C", Offset = "0xAC2D0C", VA = "0xAC2D0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007B3")]
			[Address(RVA = "0xAC2D14", Offset = "0xAC2D14", VA = "0xAC2D14")]
			set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public Color LineColor
		{
			[Token(Token = "0x60007B4")]
			[Address(RVA = "0xAC2D20", Offset = "0xAC2D20", VA = "0xAC2D20")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60007B5")]
			[Address(RVA = "0xAC2D2C", Offset = "0xAC2D2C", VA = "0xAC2D2C")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public float LineWidth
		{
			[Token(Token = "0x60007B6")]
			[Address(RVA = "0xAC2E8C", Offset = "0xAC2E8C", VA = "0xAC2E8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007B7")]
			[Address(RVA = "0xAC2E94", Offset = "0xAC2E94", VA = "0xAC2E94")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public float LightSaberFactor
		{
			[Token(Token = "0x60007B8")]
			[Address(RVA = "0xAC2FD0", Offset = "0xAC2FD0", VA = "0xAC2FD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007B9")]
			[Address(RVA = "0xAC2FD8", Offset = "0xAC2FD8", VA = "0xAC2FD8")]
			set
			{
			}
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xAC3114", Offset = "0xAC3114", VA = "0xAC3114")]
		public void CreateAllVolumetricLines()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xAC3438", Offset = "0xAC3438", VA = "0xAC3438")]
		public void DestroyAllVolumetricLines()
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xAC35BC", Offset = "0xAC35BC", VA = "0xAC35BC")]
		public void UpdateLineVertices(Vector3[] newSetOfVertices)
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xAC35E8", Offset = "0xAC35E8", VA = "0xAC35E8")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xAC3624", Offset = "0xAC3624", VA = "0xAC3624")]
		private void Start()
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xAC3628", Offset = "0xAC3628", VA = "0xAC3628")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xAC362C", Offset = "0xAC362C", VA = "0xAC362C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xAC3630", Offset = "0xAC3630", VA = "0xAC3630")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xAC3790", Offset = "0xAC3790", VA = "0xAC3790")]
		public VolumetricMultiLineBehavior()
		{
		}
	}
}
namespace VolumetricLines.Utils
{
	[Token(Token = "0x20000D1")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x5C1DC4", Offset = "0x5C1DC4")]
	public class ExposePropertyAttribute : Attribute
	{
		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xAC0410", Offset = "0xAC0410", VA = "0xAC0410")]
		public ExposePropertyAttribute()
		{
		}
	}
	[Token(Token = "0x20000D2")]
	public static class TransformExtensionMethods
	{
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xAC0418", Offset = "0xAC0418", VA = "0xAC0418")]
		public static float GetGlobalUniformScaleForLineWidth(this Transform trans)
		{
			return default(float);
		}
	}
}
namespace Tween
{
	[Token(Token = "0x20000D3")]
	public enum Ease
	{
		[Token(Token = "0x4000504")]
		None = -1,
		[Token(Token = "0x4000505")]
		Linear,
		[Token(Token = "0x4000506")]
		EaseInQuad,
		[Token(Token = "0x4000507")]
		EaseOutQuad,
		[Token(Token = "0x4000508")]
		EaseInOutQuad,
		[Token(Token = "0x4000509")]
		EaseOutInQuad,
		[Token(Token = "0x400050A")]
		EaseInCubic,
		[Token(Token = "0x400050B")]
		EaseOutCubic,
		[Token(Token = "0x400050C")]
		EaseInOutCubic,
		[Token(Token = "0x400050D")]
		EaseOutInCubic,
		[Token(Token = "0x400050E")]
		EaseInQuart,
		[Token(Token = "0x400050F")]
		EaseOutQuart,
		[Token(Token = "0x4000510")]
		EaseInOutQuart,
		[Token(Token = "0x4000511")]
		EaseOutInQuart,
		[Token(Token = "0x4000512")]
		EaseInQuint,
		[Token(Token = "0x4000513")]
		EaseOutQuint,
		[Token(Token = "0x4000514")]
		EaseInOutQuint,
		[Token(Token = "0x4000515")]
		EaseOutInQuint,
		[Token(Token = "0x4000516")]
		EaseInSine,
		[Token(Token = "0x4000517")]
		EaseOutSine,
		[Token(Token = "0x4000518")]
		EaseInOutSine,
		[Token(Token = "0x4000519")]
		EaseOutInSine,
		[Token(Token = "0x400051A")]
		EaseInExpo,
		[Token(Token = "0x400051B")]
		EaseOutExpo,
		[Token(Token = "0x400051C")]
		EaseInOutExpo,
		[Token(Token = "0x400051D")]
		EaseOutInExpo,
		[Token(Token = "0x400051E")]
		EaseInCirc,
		[Token(Token = "0x400051F")]
		EaseOutCirc,
		[Token(Token = "0x4000520")]
		EaseInOutCirc,
		[Token(Token = "0x4000521")]
		EaseOutInCirc,
		[Token(Token = "0x4000522")]
		EaseInElastic,
		[Token(Token = "0x4000523")]
		EaseOutElastic,
		[Token(Token = "0x4000524")]
		EaseInOutElastic,
		[Token(Token = "0x4000525")]
		EaseOutInElastic,
		[Token(Token = "0x4000526")]
		EaseInBack,
		[Token(Token = "0x4000527")]
		EaseOutBack,
		[Token(Token = "0x4000528")]
		EaseInOutBack,
		[Token(Token = "0x4000529")]
		EaseOutInBack,
		[Token(Token = "0x400052A")]
		EaseInBounce,
		[Token(Token = "0x400052B")]
		EaseOutBounce,
		[Token(Token = "0x400052C")]
		EaseInOutBounce,
		[Token(Token = "0x400052D")]
		EaseOutInBounce
	}
	[Token(Token = "0x20000D4")]
	public class Equations
	{
		[Token(Token = "0x200025C")]
		public delegate float EaseDelegate(float t, float b, float c, float d);

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static EaseDelegate[] methods;

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xA00F58", Offset = "0xA00F58", VA = "0xA00F58")]
		public static float EaseNone(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xA00F68", Offset = "0xA00F68", VA = "0xA00F68")]
		public static float EaseInQuad(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xA00F7C", Offset = "0xA00F7C", VA = "0xA00F7C")]
		public static float EaseOutQuad(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xA00F98", Offset = "0xA00F98", VA = "0xA00F98")]
		public static float EaseInOutQuad(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xA00FEC", Offset = "0xA00FEC", VA = "0xA00FEC")]
		public static float EaseOutInQuad(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xA010D8", Offset = "0xA010D8", VA = "0xA010D8")]
		public static float EaseInCubic(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xA010F0", Offset = "0xA010F0", VA = "0xA010F0")]
		public static float EaseOutCubic(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xA01118", Offset = "0xA01118", VA = "0xA01118")]
		public static float EaseInOutCubic(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xA0116C", Offset = "0xA0116C", VA = "0xA0116C")]
		public static float EaseOutInCubic(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xA01260", Offset = "0xA01260", VA = "0xA01260")]
		public static float EaseInQuart(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xA0127C", Offset = "0xA0127C", VA = "0xA0127C")]
		public static float EaseOutQuart(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xA012A4", Offset = "0xA012A4", VA = "0xA012A4")]
		public static float EaseInOutQuart(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xA01300", Offset = "0xA01300", VA = "0xA01300")]
		public static float EaseOutInQuart(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xA01400", Offset = "0xA01400", VA = "0xA01400")]
		public static float EaseInQuint(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xA01420", Offset = "0xA01420", VA = "0xA01420")]
		public static float EaseOutQuint(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xA01450", Offset = "0xA01450", VA = "0xA01450")]
		public static float EaseInOutQuint(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xA014B4", Offset = "0xA014B4", VA = "0xA014B4")]
		public static float EaseOutInQuint(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xA015B8", Offset = "0xA015B8", VA = "0xA015B8")]
		public static float EaseInSine(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xA01654", Offset = "0xA01654", VA = "0xA01654")]
		public static float EaseOutSine(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xA016EC", Offset = "0xA016EC", VA = "0xA016EC")]
		public static float EaseInOutSine(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xA01794", Offset = "0xA01794", VA = "0xA01794")]
		public static float EaseOutInSine(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xA01874", Offset = "0xA01874", VA = "0xA01874")]
		public static float EaseInExpo(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xA0192C", Offset = "0xA0192C", VA = "0xA0192C")]
		public static float EaseOutExpo(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xA019DC", Offset = "0xA019DC", VA = "0xA019DC")]
		public static float EaseInOutExpo(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xA01B14", Offset = "0xA01B14", VA = "0xA01B14")]
		public static float EaseOutInExpo(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xA01BF4", Offset = "0xA01BF4", VA = "0xA01BF4")]
		public static float EaseInCirc(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xA01CA4", Offset = "0xA01CA4", VA = "0xA01CA4")]
		public static float EaseOutCirc(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xA01D54", Offset = "0xA01D54", VA = "0xA01D54")]
		public static float EaseInOutCirc(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xA01E50", Offset = "0xA01E50", VA = "0xA01E50")]
		public static float EaseOutInCirc(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xA01F30", Offset = "0xA01F30", VA = "0xA01F30")]
		public static float EaseInElastic(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xA02034", Offset = "0xA02034", VA = "0xA02034")]
		public static float EaseOutElastic(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xA02134", Offset = "0xA02134", VA = "0xA02134")]
		public static float EaseInOutElastic(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xA022A8", Offset = "0xA022A8", VA = "0xA022A8")]
		public static float EaseOutInElastic(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xA02388", Offset = "0xA02388", VA = "0xA02388")]
		public static float EaseInBack(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xA023B8", Offset = "0xA023B8", VA = "0xA023B8")]
		public static float EaseOutBack(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xA023F8", Offset = "0xA023F8", VA = "0xA023F8")]
		public static float EaseInOutBack(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xA02478", Offset = "0xA02478", VA = "0xA02478")]
		public static float EaseOutInBack(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xA0259C", Offset = "0xA0259C", VA = "0xA0259C")]
		public static float EaseInBounce(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xA02634", Offset = "0xA02634", VA = "0xA02634")]
		public static float EaseOutBounce(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xA026FC", Offset = "0xA026FC", VA = "0xA026FC")]
		public static float EaseInOutBounce(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xA027E4", Offset = "0xA027E4", VA = "0xA027E4")]
		public static float EaseOutInBounce(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xA028C4", Offset = "0xA028C4", VA = "0xA028C4")]
		public Equations()
		{
		}
	}
}
namespace SpriteGlow
{
	[Token(Token = "0x20000D5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5C1DE8", Offset = "0x5C1DE8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1DE8", Offset = "0x5C1DE8")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	public class SpriteGlowEffect : MonoBehaviour
	{
		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4794", Offset = "0x5C4794")]
		private SpriteRenderer <Renderer>k__BackingField;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C47A4", Offset = "0x5C47A4")]
		[SerializeField]
		private Color _glowColor;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C47F0", Offset = "0x5C47F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C47F0", Offset = "0x5C47F0")]
		[SerializeField]
		private float _glowBrightness;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4854", Offset = "0x5C4854")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C4854", Offset = "0x5C4854")]
		[SerializeField]
		private int _outlineWidth;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C48B8", Offset = "0x5C48B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C48B8", Offset = "0x5C48B8")]
		[SerializeField]
		private float _alphaThreshold;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C491C", Offset = "0x5C491C")]
		[SerializeField]
		private bool _drawOutside;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4968", Offset = "0x5C4968")]
		[SerializeField]
		private bool _enableInstancing;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialPropertyBlock materialProperties;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int isOutlineEnabledId;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int outlineColorId;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int outlineSizeId;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int alphaThresholdId;

		[Token(Token = "0x170000DD")]
		public SpriteRenderer Renderer
		{
			[Token(Token = "0x60007F0")]
			[Address(RVA = "0x8C9F44", Offset = "0x8C9F44", VA = "0x8C9F44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9FEC", Offset = "0x5C9FEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007F1")]
			[Address(RVA = "0x8C9F4C", Offset = "0x8C9F4C", VA = "0x8C9F4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9FFC", Offset = "0x5C9FFC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public Color GlowColor
		{
			[Token(Token = "0x60007F2")]
			[Address(RVA = "0x8C9F54", Offset = "0x8C9F54", VA = "0x8C9F54")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60007F3")]
			[Address(RVA = "0x8C9F60", Offset = "0x8C9F60", VA = "0x8C9F60")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public float GlowBrightness
		{
			[Token(Token = "0x60007F4")]
			[Address(RVA = "0x8CA184", Offset = "0x8CA184", VA = "0x8CA184")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007F5")]
			[Address(RVA = "0x8CA18C", Offset = "0x8CA18C", VA = "0x8CA18C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public int OutlineWidth
		{
			[Token(Token = "0x60007F6")]
			[Address(RVA = "0x8CA1A4", Offset = "0x8CA1A4", VA = "0x8CA1A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007F7")]
			[Address(RVA = "0x8CA1AC", Offset = "0x8CA1AC", VA = "0x8CA1AC")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public float AlphaThreshold
		{
			[Token(Token = "0x60007F8")]
			[Address(RVA = "0x8CA1C4", Offset = "0x8CA1C4", VA = "0x8CA1C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007F9")]
			[Address(RVA = "0x8CA1CC", Offset = "0x8CA1CC", VA = "0x8CA1CC")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public bool DrawOutside
		{
			[Token(Token = "0x60007FA")]
			[Address(RVA = "0x8CA1E4", Offset = "0x8CA1E4", VA = "0x8CA1E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007FB")]
			[Address(RVA = "0x8CA1EC", Offset = "0x8CA1EC", VA = "0x8CA1EC")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public bool EnableInstancing
		{
			[Token(Token = "0x60007FC")]
			[Address(RVA = "0x8CA210", Offset = "0x8CA210", VA = "0x8CA210")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007FD")]
			[Address(RVA = "0x8CA218", Offset = "0x8CA218", VA = "0x8CA218")]
			set
			{
			}
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x8CA23C", Offset = "0x8CA23C", VA = "0x8CA23C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x8CA2F4", Offset = "0x8CA2F4", VA = "0x8CA2F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x8CA2F8", Offset = "0x8CA2F8", VA = "0x8CA2F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x8CA2FC", Offset = "0x8CA2FC", VA = "0x8CA2FC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x8CA300", Offset = "0x8CA300", VA = "0x8CA300")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x8C9FE4", Offset = "0x8C9FE4", VA = "0x8C9FE4")]
		private void SetMaterialProperties()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x8CA60C", Offset = "0x8CA60C", VA = "0x8CA60C")]
		public SpriteGlowEffect()
		{
		}
	}
	[Token(Token = "0x20000D6")]
	public class SpriteGlowMaterial : Material
	{
		[Token(Token = "0x400053B")]
		private const string OUTLINE_SHADER_NAME = "Sprites/Outline";

		[Token(Token = "0x400053C")]
		private const string OUTSIDE_MATERIAL_KEYWORD = "SPRITE_OUTLINE_OUTSIDE";

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Shader OUTLINE_SHADER;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<SpriteGlowMaterial> sharedMaterials;

		[Token(Token = "0x170000E4")]
		public Texture SpriteTexture
		{
			[Token(Token = "0x6000805")]
			[Address(RVA = "0x8CA658", Offset = "0x8CA658", VA = "0x8CA658")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		public bool DrawOutside
		{
			[Token(Token = "0x6000806")]
			[Address(RVA = "0x8CA660", Offset = "0x8CA660", VA = "0x8CA660")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E6")]
		public bool InstancingEnabled
		{
			[Token(Token = "0x6000807")]
			[Address(RVA = "0x8CA6B4", Offset = "0x8CA6B4", VA = "0x8CA6B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x8CA6BC", Offset = "0x8CA6BC", VA = "0x8CA6BC")]
		public SpriteGlowMaterial(Texture spriteTexture, bool drawOutside = false, bool instancingEnabled = false)
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x8CA304", Offset = "0x8CA304", VA = "0x8CA304")]
		public static Material GetSharedFor(SpriteGlowEffect spriteGlow)
		{
			return null;
		}
	}
}
namespace UnityEngine.UI
{
	[Token(Token = "0x20000D7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5C1E90", Offset = "0x5C1E90")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1E90", Offset = "0x5C1E90")]
	public class Switch : Selectable, IPointerClickHandler, IEventSystemHandler, ISubmitHandler, ICanvasElement
	{
		[Serializable]
		[Token(Token = "0x200025D")]
		public class ToggleEvent : UnityEvent<bool>
		{
			[Token(Token = "0x60010D8")]
			[Address(RVA = "0xABF81C", Offset = "0xABF81C", VA = "0xABF81C")]
			public ToggleEvent()
			{
			}
		}

		[Token(Token = "0x200025E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C08", Offset = "0x5C2C08")]
		private sealed class <Tweening>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Switch <>4__this;

			[Token(Token = "0x4000C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x4000C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x17000262")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010DC")]
				[Address(RVA = "0xAC0164", Offset = "0xAC0164", VA = "0xAC0164", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000263")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010DE")]
				[Address(RVA = "0xAC01CC", Offset = "0xAC01CC", VA = "0xAC01CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010D9")]
			[Address(RVA = "0xABFEA0", Offset = "0xABFEA0", VA = "0xABFEA0")]
			[DebuggerHidden]
			public <Tweening>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x60010DA")]
			[Address(RVA = "0xAC0008", Offset = "0xAC0008", VA = "0xAC0008", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010DB")]
			[Address(RVA = "0xAC000C", Offset = "0xAC000C", VA = "0xAC000C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010DD")]
			[Address(RVA = "0xAC016C", Offset = "0xAC016C", VA = "0xAC016C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool isTweening;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Dictionary<string, Text> m_OnOffText;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C49C4", Offset = "0x5C49C4")]
		public float TransitionDuration;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Color[] m_textColor;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Color[] PanelColor;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Ease toggleTransition;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Image graphic;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private RectTransform m_selectPanel;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public ToggleEvent onValueChanged;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C49E0", Offset = "0x5C49E0")]
		[SerializeField]
		private bool m_IsOn;

		[Token(Token = "0x170000E7")]
		public Dictionary<string, Text> OnOffText
		{
			[Token(Token = "0x600080B")]
			[Address(RVA = "0xABF310", Offset = "0xABF310", VA = "0xABF310")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		public RectTransform selectedPanel
		{
			[Token(Token = "0x600080C")]
			[Address(RVA = "0xABF490", Offset = "0xABF490", VA = "0xABF490")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		public bool isOn
		{
			[Token(Token = "0x6000812")]
			[Address(RVA = "0xABFC08", Offset = "0xABFC08", VA = "0xABFC08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000813")]
			[Address(RVA = "0xABFC10", Offset = "0xABFC10", VA = "0xABFC10")]
			set
			{
			}
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0xABF5DC", Offset = "0xABF5DC", VA = "0xABF5DC")]
		protected Switch()
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0xABF86C", Offset = "0xABF86C", VA = "0xABF86C", Slot = "46")]
		public virtual void Rebuild(CanvasUpdate executing)
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xABF870", Offset = "0xABF870", VA = "0xABF870", Slot = "47")]
		public virtual void LayoutComplete()
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xABF874", Offset = "0xABF874", VA = "0xABF874", Slot = "48")]
		public virtual void GraphicUpdateComplete()
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0xABF878", Offset = "0xABF878", VA = "0xABF878", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0xABFC1C", Offset = "0xABFC1C", VA = "0xABFC1C")]
		private void Set(bool value)
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0xABFC28", Offset = "0xABFC28", VA = "0xABFC28")]
		private void Set(bool value, bool sendCallback)
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0xABFCD8", Offset = "0xABFCD8", VA = "0xABFCD8")]
		private void PlayEffect(bool instant)
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0xABFDA0", Offset = "0xABFDA0", VA = "0xABFDA0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0xABFDA8", Offset = "0xABFDA8", VA = "0xABFDA8")]
		private void InternalToggle()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xABFE0C", Offset = "0xABFE0C", VA = "0xABFE0C", Slot = "49")]
		public virtual void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0xABFE2C", Offset = "0xABFE2C", VA = "0xABFE2C", Slot = "50")]
		public virtual void OnSubmit(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xABF8A4", Offset = "0xABF8A4", VA = "0xABF8A4")]
		private void ToggleState(float CompletionRatio)
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xABFE30", Offset = "0xABFE30", VA = "0xABFE30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA00C", Offset = "0x5CA00C")]
		private IEnumerator Tweening()
		{
			return null;
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xABFECC", Offset = "0xABFECC", VA = "0xABFECC", Slot = "26")]
		protected override void DoStateTransition(SelectionState state, bool instant)
		{
		}

		[SpecialName]
		[Token(Token = "0x600081E")]
		[Address(RVA = "0xAC0000", Offset = "0xAC0000", VA = "0xAC0000", Slot = "42")]
		private Transform UnityEngine.UI.ICanvasElement.get_transform()
		{
			return null;
		}
	}
}
namespace UnityEngine.PostProcessing
{
	[Token(Token = "0x20000D8")]
	public sealed class GetSetAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool dirty;

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xAB68BC", Offset = "0xAB68BC", VA = "0xAB68BC")]
		public GetSetAttribute(string name)
		{
		}
	}
	[Token(Token = "0x20000D9")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xAB76A0", Offset = "0xAB76A0", VA = "0xAB76A0")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x20000DA")]
	public sealed class TrackballAttribute : PropertyAttribute
	{
		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string method;

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xABEA54", Offset = "0xABEA54", VA = "0xABEA54")]
		public TrackballAttribute(string method)
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public sealed class TrackballGroupAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000822")]
		[Address(RVA = "0xABEA80", Offset = "0xABEA80", VA = "0xABEA80")]
		public TrackballGroupAttribute()
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public sealed class AmbientOcclusionComponent : PostProcessingComponentCommandBuffer<AmbientOcclusionModel>
	{
		[Token(Token = "0x200025F")]
		private static class Uniforms
		{
			[Token(Token = "0x4000C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Intensity;

			[Token(Token = "0x4000C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Radius;

			[Token(Token = "0x4000C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Downsample;

			[Token(Token = "0x4000C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _SampleCount;

			[Token(Token = "0x4000C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _OcclusionTexture1;

			[Token(Token = "0x4000C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _OcclusionTexture2;

			[Token(Token = "0x4000C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _OcclusionTexture;

			[Token(Token = "0x4000C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4000C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x2000260")]
		private enum OcclusionSource
		{
			[Token(Token = "0x4000C62")]
			DepthTexture,
			[Token(Token = "0x4000C63")]
			DepthNormalsTexture,
			[Token(Token = "0x4000C64")]
			GBuffer
		}

		[Token(Token = "0x400054D")]
		private const string k_BlitShaderString = "Hidden/Post FX/Blit";

		[Token(Token = "0x400054E")]
		private const string k_ShaderString = "Hidden/Post FX/Ambient Occlusion";

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTargetIdentifier[] m_MRT;

		[Token(Token = "0x170000EA")]
		private OcclusionSource occlusionSource
		{
			[Token(Token = "0x6000823")]
			[Address(RVA = "0xA072A8", Offset = "0xA072A8", VA = "0xA072A8")]
			get
			{
				return default(OcclusionSource);
			}
		}

		[Token(Token = "0x170000EB")]
		private bool ambientOnlySupported
		{
			[Token(Token = "0x6000824")]
			[Address(RVA = "0xA07354", Offset = "0xA07354", VA = "0xA07354")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EC")]
		public override bool active
		{
			[Token(Token = "0x6000825")]
			[Address(RVA = "0xA073EC", Offset = "0xA073EC", VA = "0xA073EC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xA07468", Offset = "0xA07468", VA = "0xA07468", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0xA074A4", Offset = "0xA074A4", VA = "0xA074A4", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xA074EC", Offset = "0xA074EC", VA = "0xA074EC", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0xA07550", Offset = "0xA07550", VA = "0xA07550", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0xA07DE0", Offset = "0xA07DE0", VA = "0xA07DE0")]
		public AmbientOcclusionComponent()
		{
		}
	}
	[Token(Token = "0x20000DD")]
	public sealed class BloomComponent : PostProcessingComponentRenderTexture<BloomModel>
	{
		[Token(Token = "0x2000261")]
		private static class Uniforms
		{
			[Token(Token = "0x4000C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x4000C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Threshold;

			[Token(Token = "0x4000C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Curve;

			[Token(Token = "0x4000C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _PrefilterOffs;

			[Token(Token = "0x4000C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleScale;

			[Token(Token = "0x4000C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _BaseTex;

			[Token(Token = "0x4000C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _BloomTex;

			[Token(Token = "0x4000C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Bloom_Settings;

			[Token(Token = "0x4000C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _Bloom_DirtTex;

			[Token(Token = "0x4000C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Bloom_DirtIntensity;
		}

		[Token(Token = "0x4000550")]
		private const int k_MaxPyramidBlurLevel = 16;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTexture[] m_BlurBuffer1;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly RenderTexture[] m_BlurBuffer2;

		[Token(Token = "0x170000ED")]
		public override bool active
		{
			[Token(Token = "0x600082B")]
			[Address(RVA = "0xA08334", Offset = "0xA08334", VA = "0xA08334", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0xA083B0", Offset = "0xA083B0", VA = "0xA083B0")]
		public void Prepare(RenderTexture source, Material uberMaterial, Texture autoExposure)
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0xA08E20", Offset = "0xA08E20", VA = "0xA08E20")]
		public BloomComponent()
		{
		}
	}
	[Token(Token = "0x20000DE")]
	public sealed class BuiltinDebugViewsComponent : PostProcessingComponentCommandBuffer<BuiltinDebugViewsModel>
	{
		[Token(Token = "0x2000262")]
		private static class Uniforms
		{
			[Token(Token = "0x4000C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthScale;

			[Token(Token = "0x4000C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _TempRT;

			[Token(Token = "0x4000C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Opacity;

			[Token(Token = "0x4000C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4000C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT2;

			[Token(Token = "0x4000C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Amplitude;

			[Token(Token = "0x4000C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Scale;
		}

		[Token(Token = "0x2000263")]
		private enum Pass
		{
			[Token(Token = "0x4000C77")]
			Depth,
			[Token(Token = "0x4000C78")]
			Normals,
			[Token(Token = "0x4000C79")]
			MovecOpacity,
			[Token(Token = "0x4000C7A")]
			MovecImaging,
			[Token(Token = "0x4000C7B")]
			MovecArrows
		}

		[Token(Token = "0x2000264")]
		private class ArrowArray
		{
			[Token(Token = "0x4000C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C6FC8", Offset = "0x5C6FC8")]
			private Mesh <mesh>k__BackingField;

			[Token(Token = "0x4000C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C6FD8", Offset = "0x5C6FD8")]
			private int <columnCount>k__BackingField;

			[Token(Token = "0x4000C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C6FE8", Offset = "0x5C6FE8")]
			private int <rowCount>k__BackingField;

			[Token(Token = "0x17000264")]
			public Mesh mesh
			{
				[Token(Token = "0x60010E2")]
				[Address(RVA = "0xAAFE90", Offset = "0xAAFE90", VA = "0xAAFE90")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB5BC", Offset = "0x5CB5BC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60010E3")]
				[Address(RVA = "0xAAFE98", Offset = "0xAAFE98", VA = "0xAAFE98")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB5CC", Offset = "0x5CB5CC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000265")]
			public int columnCount
			{
				[Token(Token = "0x60010E4")]
				[Address(RVA = "0xAAFEA0", Offset = "0xAAFEA0", VA = "0xAAFEA0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB5DC", Offset = "0x5CB5DC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60010E5")]
				[Address(RVA = "0xAAFEA8", Offset = "0xAAFEA8", VA = "0xAAFEA8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB5EC", Offset = "0x5CB5EC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000266")]
			public int rowCount
			{
				[Token(Token = "0x60010E6")]
				[Address(RVA = "0xAAFEB0", Offset = "0xAAFEB0", VA = "0xAAFEB0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB5FC", Offset = "0x5CB5FC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60010E7")]
				[Address(RVA = "0xAAFEB8", Offset = "0xAAFEB8", VA = "0xAAFEB8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB60C", Offset = "0x5CB60C")]
				private set
				{
				}
			}

			[Token(Token = "0x60010E8")]
			[Address(RVA = "0xAAFEC0", Offset = "0xAAFEC0", VA = "0xAAFEC0")]
			public void BuildMesh(int columns, int rows)
			{
			}

			[Token(Token = "0x60010E9")]
			[Address(RVA = "0xAB0308", Offset = "0xAB0308", VA = "0xAB0308")]
			public void Release()
			{
			}

			[Token(Token = "0x60010EA")]
			[Address(RVA = "0xAB03D0", Offset = "0xAB03D0", VA = "0xAB03D0")]
			public ArrowArray()
			{
			}
		}

		[Token(Token = "0x4000553")]
		private const string k_ShaderString = "Hidden/Post FX/Builtin Debug Views";

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ArrowArray m_Arrows;

		[Token(Token = "0x170000EE")]
		public override bool active
		{
			[Token(Token = "0x600082E")]
			[Address(RVA = "0xA09178", Offset = "0xA09178", VA = "0xA09178", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0xA0920C", Offset = "0xA0920C", VA = "0xA0920C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0xA0927C", Offset = "0xA0927C", VA = "0xA0927C", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0xA092DC", Offset = "0xA092DC", VA = "0xA092DC", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0xA09324", Offset = "0xA09324", VA = "0xA09324", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0xA09434", Offset = "0xA09434", VA = "0xA09434")]
		private void DepthPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0xA0954C", Offset = "0xA0954C", VA = "0xA0954C")]
		private void DepthNormalsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0xA09610", Offset = "0xA09610", VA = "0xA09610")]
		private void MotionVectorsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0xA09BAC", Offset = "0xA09BAC", VA = "0xA09BAC")]
		private void PrepareArrows()
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xA09CA4", Offset = "0xA09CA4", VA = "0xA09CA4", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xA09CD4", Offset = "0xA09CD4", VA = "0xA09CD4")]
		public BuiltinDebugViewsComponent()
		{
		}
	}
	[Token(Token = "0x20000DF")]
	public sealed class ChromaticAberrationComponent : PostProcessingComponentRenderTexture<ChromaticAberrationModel>
	{
		[Token(Token = "0x2000265")]
		private static class Uniforms
		{
			[Token(Token = "0x4000C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _ChromaticAberration_Amount;

			[Token(Token = "0x4000C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ChromaticAberration_Spectrum;
		}

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_SpectrumLut;

		[Token(Token = "0x170000EF")]
		public override bool active
		{
			[Token(Token = "0x6000839")]
			[Address(RVA = "0xAB05F8", Offset = "0xAB05F8", VA = "0xAB05F8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0xAB0674", Offset = "0xAB0674", VA = "0xAB0674", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xAB069C", Offset = "0xAB069C", VA = "0xAB069C", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0xAB0954", Offset = "0xAB0954", VA = "0xAB0954")]
		public ChromaticAberrationComponent()
		{
		}
	}
	[Token(Token = "0x20000E0")]
	public sealed class ColorGradingComponent : PostProcessingComponentRenderTexture<ColorGradingModel>
	{
		[Token(Token = "0x2000266")]
		private static class Uniforms
		{
			[Token(Token = "0x4000C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _LutParams;

			[Token(Token = "0x4000C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _NeutralTonemapperParams1;

			[Token(Token = "0x4000C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _NeutralTonemapperParams2;

			[Token(Token = "0x4000C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _HueShift;

			[Token(Token = "0x4000C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Saturation;

			[Token(Token = "0x4000C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Contrast;

			[Token(Token = "0x4000C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Balance;

			[Token(Token = "0x4000C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Lift;

			[Token(Token = "0x4000C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _InvGamma;

			[Token(Token = "0x4000C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Gain;

			[Token(Token = "0x4000C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _Slope;

			[Token(Token = "0x4000C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _Power;

			[Token(Token = "0x4000C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _Offset;

			[Token(Token = "0x4000C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _ChannelMixerRed;

			[Token(Token = "0x4000C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _ChannelMixerGreen;

			[Token(Token = "0x4000C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _ChannelMixerBlue;

			[Token(Token = "0x4000C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _Curves;

			[Token(Token = "0x4000C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _LogLut;

			[Token(Token = "0x4000C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _LogLut_Params;

			[Token(Token = "0x4000C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ExposureEV;
		}

		[Token(Token = "0x4000556")]
		private const int k_InternalLogLutSize = 32;

		[Token(Token = "0x4000557")]
		private const int k_CurvePrecision = 128;

		[Token(Token = "0x4000558")]
		private const float k_CurveStep = 1f / 128f;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_GradingCurves;

		[Token(Token = "0x170000F0")]
		public override bool active
		{
			[Token(Token = "0x600083D")]
			[Address(RVA = "0xAB0A70", Offset = "0xAB0A70", VA = "0xAB0A70", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0xAB0AE0", Offset = "0xAB0AE0", VA = "0xAB0AE0")]
		private float StandardIlluminantY(float x)
		{
			return default(float);
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xAB0B0C", Offset = "0xAB0B0C", VA = "0xAB0B0C")]
		private Vector3 CIExyToLMS(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xAB0BCC", Offset = "0xAB0BCC", VA = "0xAB0BCC")]
		private Vector3 CalculateColorBalance(float temperature, float tint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xAB0CC0", Offset = "0xAB0CC0", VA = "0xAB0CC0")]
		private static Color NormalizeColor(Color c)
		{
			return default(Color);
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xAB0DB4", Offset = "0xAB0DB4", VA = "0xAB0DB4")]
		private static Vector3 ClampVector(Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xAB0EB0", Offset = "0xAB0EB0", VA = "0xAB0EB0")]
		public static Vector3 GetLiftValue(Color lift)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xAB0F3C", Offset = "0xAB0F3C", VA = "0xAB0F3C")]
		public static Vector3 GetGammaValue(Color gamma)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xAB10BC", Offset = "0xAB10BC", VA = "0xAB10BC")]
		public static Vector3 GetGainValue(Color gain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0xAB11EC", Offset = "0xAB11EC", VA = "0xAB11EC")]
		public static void CalculateLiftGammaGain(Color lift, Color gamma, Color gain, out Vector3 outLift, out Vector3 outGamma, out Vector3 outGain)
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0xAB1294", Offset = "0xAB1294", VA = "0xAB1294")]
		public static Vector3 GetSlopeValue(Color slope)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0xAB1338", Offset = "0xAB1338", VA = "0xAB1338")]
		public static Vector3 GetPowerValue(Color power)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0xAB14A0", Offset = "0xAB14A0", VA = "0xAB14A0")]
		public static Vector3 GetOffsetValue(Color offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0xAB153C", Offset = "0xAB153C", VA = "0xAB153C")]
		public static void CalculateSlopePowerOffset(Color slope, Color power, Color offset, out Vector3 outSlope, out Vector3 outPower, out Vector3 outOffset)
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xAB15E4", Offset = "0xAB15E4", VA = "0xAB15E4")]
		private Texture2D GetCurveTexture()
		{
			return null;
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0xAB1B54", Offset = "0xAB1B54", VA = "0xAB1B54")]
		private bool IsLogLutValid(RenderTexture lut)
		{
			return default(bool);
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xAB1C00", Offset = "0xAB1C00", VA = "0xAB1C00")]
		private void GenerateLut()
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0xAB2630", Offset = "0xAB2630", VA = "0xAB2630", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0xAB2870", Offset = "0xAB2870", VA = "0xAB2870")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0xAB29B8", Offset = "0xAB29B8", VA = "0xAB29B8", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xAB2A24", Offset = "0xAB2A24", VA = "0xAB2A24")]
		public ColorGradingComponent()
		{
		}
	}
	[Token(Token = "0x20000E1")]
	public sealed class DepthOfFieldComponent : PostProcessingComponentRenderTexture<DepthOfFieldModel>
	{
		[Token(Token = "0x2000267")]
		private static class Uniforms
		{
			[Token(Token = "0x4000C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthOfFieldTex;

			[Token(Token = "0x4000C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Distance;

			[Token(Token = "0x4000C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _LensCoeff;

			[Token(Token = "0x4000C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _MaxCoC;

			[Token(Token = "0x4000C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _RcpMaxCoC;

			[Token(Token = "0x4000C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _RcpAspect;

			[Token(Token = "0x4000C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4000C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _HistoryCoC;

			[Token(Token = "0x4000C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _HistoryWeight;

			[Token(Token = "0x4000C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _DepthOfFieldParams;
		}

		[Token(Token = "0x400055A")]
		private const string k_ShaderString = "Hidden/Post FX/Depth Of Field";

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_CoCHistory;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderBuffer[] m_MRT;

		[Token(Token = "0x400055D")]
		private const float k_FilmHeight = 0.024f;

		[Token(Token = "0x170000F1")]
		public override bool active
		{
			[Token(Token = "0x6000852")]
			[Address(RVA = "0xAB3968", Offset = "0xAB3968", VA = "0xAB3968", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0xAB39F8", Offset = "0xAB39F8", VA = "0xAB39F8", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0xAB3A00", Offset = "0xAB3A00", VA = "0xAB3A00")]
		private float CalculateFocalLength()
		{
			return default(float);
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xAB3ACC", Offset = "0xAB3ACC", VA = "0xAB3ACC")]
		private float CalculateMaxCoCRadius(int screenHeight)
		{
			return default(float);
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0xAB3B78", Offset = "0xAB3B78", VA = "0xAB3B78")]
		public void Prepare(RenderTexture source, Material uberMaterial, bool antialiasCoC)
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0xAB469C", Offset = "0xAB469C", VA = "0xAB469C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xAB4724", Offset = "0xAB4724", VA = "0xAB4724")]
		public DepthOfFieldComponent()
		{
		}
	}
	[Token(Token = "0x20000E2")]
	public sealed class DitheringComponent : PostProcessingComponentRenderTexture<DitheringModel>
	{
		[Token(Token = "0x2000268")]
		private static class Uniforms
		{
			[Token(Token = "0x4000C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DitheringTex;

			[Token(Token = "0x4000CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DitheringCoords;
		}

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D[] noiseTextures;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int textureIndex;

		[Token(Token = "0x4000560")]
		private const int k_TextureCount = 64;

		[Token(Token = "0x170000F2")]
		public override bool active
		{
			[Token(Token = "0x6000859")]
			[Address(RVA = "0xAB49C0", Offset = "0xAB49C0", VA = "0xAB49C0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0xAB4A30", Offset = "0xAB4A30", VA = "0xAB4A30", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0xAB4A38", Offset = "0xAB4A38", VA = "0xAB4A38")]
		private void LoadNoiseTextures()
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0xAB4B8C", Offset = "0xAB4B8C", VA = "0xAB4B8C", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0xAB4D68", Offset = "0xAB4D68", VA = "0xAB4D68")]
		public DitheringComponent()
		{
		}
	}
	[Token(Token = "0x20000E3")]
	public sealed class EyeAdaptationComponent : PostProcessingComponentRenderTexture<EyeAdaptationModel>
	{
		[Token(Token = "0x2000269")]
		private static class Uniforms
		{
			[Token(Token = "0x4000CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Params;

			[Token(Token = "0x4000CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Speed;

			[Token(Token = "0x4000CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _ScaleOffsetRes;

			[Token(Token = "0x4000CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _ExposureCompensation;

			[Token(Token = "0x4000CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x4000CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _DebugWidth;
		}

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ComputeShader m_EyeCompute;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ComputeBuffer m_HistogramBuffer;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly RenderTexture[] m_AutoExposurePool;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_AutoExposurePingPing;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_CurrentAutoExposure;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_DebugHistogram;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] s_EmptyHistogramBuffer;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_FirstFrame;

		[Token(Token = "0x4000569")]
		private const int k_HistogramBins = 64;

		[Token(Token = "0x400056A")]
		private const int k_HistogramThreadX = 16;

		[Token(Token = "0x400056B")]
		private const int k_HistogramThreadY = 16;

		[Token(Token = "0x170000F3")]
		public override bool active
		{
			[Token(Token = "0x600085E")]
			[Address(RVA = "0xAB4E68", Offset = "0xAB4E68", VA = "0xAB4E68", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0xAB4EE4", Offset = "0xAB4EE4", VA = "0xAB4EE4")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0xAB4EF0", Offset = "0xAB4EF0", VA = "0xAB4EF0", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0xAB4EFC", Offset = "0xAB4EFC", VA = "0xAB4EFC", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0xAB4FF4", Offset = "0xAB4FF4", VA = "0xAB4FF4")]
		private Vector4 GetHistogramScaleOffsetRes()
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0xAB5118", Offset = "0xAB5118", VA = "0xAB5118")]
		public Texture Prepare(RenderTexture source, Material uberMaterial)
		{
			return null;
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0xAB5A7C", Offset = "0xAB5A7C", VA = "0xAB5A7C")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xAB5BF8", Offset = "0xAB5BF8", VA = "0xAB5BF8")]
		public EyeAdaptationComponent()
		{
		}
	}
	[Token(Token = "0x20000E4")]
	public sealed class FogComponent : PostProcessingComponentCommandBuffer<FogModel>
	{
		[Token(Token = "0x200026A")]
		private static class Uniforms
		{
			[Token(Token = "0x4000CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _FogColor;

			[Token(Token = "0x4000CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Density;

			[Token(Token = "0x4000CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Start;

			[Token(Token = "0x4000CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _End;

			[Token(Token = "0x4000CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x400056C")]
		private const string k_ShaderString = "Hidden/Post FX/Fog";

		[Token(Token = "0x170000F4")]
		public override bool active
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0xAB5E6C", Offset = "0xAB5E6C", VA = "0xAB5E6C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xAB5F24", Offset = "0xAB5F24", VA = "0xAB5F24", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xAB5F6C", Offset = "0xAB5F6C", VA = "0xAB5F6C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xAB5F74", Offset = "0xAB5F74", VA = "0xAB5F74", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xAB5F7C", Offset = "0xAB5F7C", VA = "0xAB5F7C", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xAB63A4", Offset = "0xAB63A4", VA = "0xAB63A4")]
		public FogComponent()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public sealed class FxaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x200026B")]
		private static class Uniforms
		{
			[Token(Token = "0x4000CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _QualitySettings;

			[Token(Token = "0x4000CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ConsoleSettings;
		}

		[Token(Token = "0x170000F5")]
		public override bool active
		{
			[Token(Token = "0x600086C")]
			[Address(RVA = "0xAB650C", Offset = "0xAB650C", VA = "0xAB650C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xAB6584", Offset = "0xAB6584", VA = "0xAB6584")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0xAB67E8", Offset = "0xAB67E8", VA = "0xAB67E8")]
		public FxaaComponent()
		{
		}
	}
	[Token(Token = "0x20000E6")]
	public sealed class GrainComponent : PostProcessingComponentRenderTexture<GrainModel>
	{
		[Token(Token = "0x200026C")]
		private static class Uniforms
		{
			[Token(Token = "0x4000CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Grain_Params1;

			[Token(Token = "0x4000CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Grain_Params2;

			[Token(Token = "0x4000CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _GrainTex;

			[Token(Token = "0x4000CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Phase;
		}

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_GrainLookupRT;

		[Token(Token = "0x170000F6")]
		public override bool active
		{
			[Token(Token = "0x600086F")]
			[Address(RVA = "0xAB68E8", Offset = "0xAB68E8", VA = "0xAB68E8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0xAB6974", Offset = "0xAB6974", VA = "0xAB6974", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xAB699C", Offset = "0xAB699C", VA = "0xAB699C", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0xAB6D5C", Offset = "0xAB6D5C", VA = "0xAB6D5C")]
		public GrainComponent()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public sealed class MotionBlurComponent : PostProcessingComponentCommandBuffer<MotionBlurModel>
	{
		[Token(Token = "0x200026D")]
		private static class Uniforms
		{
			[Token(Token = "0x4000CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _VelocityScale;

			[Token(Token = "0x4000CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _MaxBlurRadius;

			[Token(Token = "0x4000CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _RcpMaxBlurRadius;

			[Token(Token = "0x4000CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _VelocityTex;

			[Token(Token = "0x4000CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4000CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Tile2RT;

			[Token(Token = "0x4000CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Tile4RT;

			[Token(Token = "0x4000CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Tile8RT;

			[Token(Token = "0x4000CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _TileMaxOffs;

			[Token(Token = "0x4000CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TileMaxLoop;

			[Token(Token = "0x4000CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _TileVRT;

			[Token(Token = "0x4000CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _NeighborMaxTex;

			[Token(Token = "0x4000CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _LoopCount;

			[Token(Token = "0x4000CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _TempRT;

			[Token(Token = "0x4000CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _History1LumaTex;

			[Token(Token = "0x4000CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _History2LumaTex;

			[Token(Token = "0x4000CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _History3LumaTex;

			[Token(Token = "0x4000CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _History4LumaTex;

			[Token(Token = "0x4000CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _History1ChromaTex;

			[Token(Token = "0x4000CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _History2ChromaTex;

			[Token(Token = "0x4000CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _History3ChromaTex;

			[Token(Token = "0x4000CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _History4ChromaTex;

			[Token(Token = "0x4000CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _History1Weight;

			[Token(Token = "0x4000CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _History2Weight;

			[Token(Token = "0x4000CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _History3Weight;

			[Token(Token = "0x4000CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _History4Weight;
		}

		[Token(Token = "0x200026E")]
		private enum Pass
		{
			[Token(Token = "0x4000CCD")]
			VelocitySetup,
			[Token(Token = "0x4000CCE")]
			TileMax1,
			[Token(Token = "0x4000CCF")]
			TileMax2,
			[Token(Token = "0x4000CD0")]
			TileMaxV,
			[Token(Token = "0x4000CD1")]
			NeighborMax,
			[Token(Token = "0x4000CD2")]
			Reconstruction,
			[Token(Token = "0x4000CD3")]
			FrameCompression,
			[Token(Token = "0x4000CD4")]
			FrameBlendingChroma,
			[Token(Token = "0x4000CD5")]
			FrameBlendingRaw
		}

		[Token(Token = "0x200026F")]
		public class ReconstructionFilter
		{
			[Token(Token = "0x4000CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RenderTextureFormat m_VectorRTFormat;

			[Token(Token = "0x4000CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_PackedRTFormat;

			[Token(Token = "0x60010F4")]
			[Address(RVA = "0xAB773C", Offset = "0xAB773C", VA = "0xAB773C")]
			public ReconstructionFilter()
			{
			}

			[Token(Token = "0x60010F5")]
			[Address(RVA = "0xAB97DC", Offset = "0xAB97DC", VA = "0xAB97DC")]
			private void CheckTextureFormatSupport()
			{
			}

			[Token(Token = "0x60010F6")]
			[Address(RVA = "0xAB7924", Offset = "0xAB7924", VA = "0xAB7924")]
			public bool IsSupported()
			{
				return default(bool);
			}

			[Token(Token = "0x60010F7")]
			[Address(RVA = "0xAB8040", Offset = "0xAB8040", VA = "0xAB8040")]
			public void ProcessImage(PostProcessingContext context, CommandBuffer cb, ref MotionBlurModel.Settings settings, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}
		}

		[Token(Token = "0x2000270")]
		public class FrameBlendingFilter
		{
			[Token(Token = "0x20002EC")]
			private struct Frame
			{
				[Token(Token = "0x4000F1E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public RenderTexture lumaTexture;

				[Token(Token = "0x4000F1F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public RenderTexture chromaTexture;

				[Token(Token = "0x4000F20")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private float m_Time;

				[Token(Token = "0x4000F21")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private RenderTargetIdentifier[] m_MRT;

				[Token(Token = "0x6001210")]
				[Address(RVA = "0xAB96F8", Offset = "0xAB96F8", VA = "0xAB96F8")]
				public float CalculateWeight(float strength, float currentTime)
				{
					return default(float);
				}

				[Token(Token = "0x6001211")]
				[Address(RVA = "0xAB9194", Offset = "0xAB9194", VA = "0xAB9194")]
				public void Release()
				{
				}

				[Token(Token = "0x6001212")]
				[Address(RVA = "0xAB9260", Offset = "0xAB9260", VA = "0xAB9260")]
				public void MakeRecord(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
				{
				}

				[Token(Token = "0x6001213")]
				[Address(RVA = "0xAB9510", Offset = "0xAB9510", VA = "0xAB9510")]
				public void MakeRecordRaw(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, RenderTextureFormat format)
				{
				}
			}

			[Token(Token = "0x4000CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool m_UseCompression;

			[Token(Token = "0x4000CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_RawTextureFormat;

			[Token(Token = "0x4000CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Frame[] m_FrameList;

			[Token(Token = "0x4000CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_LastFrameCount;

			[Token(Token = "0x60010F8")]
			[Address(RVA = "0xAB77E8", Offset = "0xAB77E8", VA = "0xAB77E8")]
			public FrameBlendingFilter()
			{
			}

			[Token(Token = "0x60010F9")]
			[Address(RVA = "0xAB79A0", Offset = "0xAB79A0", VA = "0xAB79A0")]
			public void Dispose()
			{
			}

			[Token(Token = "0x60010FA")]
			[Address(RVA = "0xAB8EF0", Offset = "0xAB8EF0", VA = "0xAB8EF0")]
			public void PushFrame(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
			{
			}

			[Token(Token = "0x60010FB")]
			[Address(RVA = "0xAB8990", Offset = "0xAB8990", VA = "0xAB8990")]
			public void BlendFrames(CommandBuffer cb, float strength, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}

			[Token(Token = "0x60010FC")]
			[Address(RVA = "0xAB908C", Offset = "0xAB908C", VA = "0xAB908C")]
			private static bool CheckSupportCompression()
			{
				return default(bool);
			}

			[Token(Token = "0x60010FD")]
			[Address(RVA = "0xAB90C4", Offset = "0xAB90C4", VA = "0xAB90C4")]
			private static RenderTextureFormat GetPreferredRenderTextureFormat()
			{
				return default(RenderTextureFormat);
			}

			[Token(Token = "0x60010FE")]
			[Address(RVA = "0xAB9680", Offset = "0xAB9680", VA = "0xAB9680")]
			private Frame GetFrameRelative(int offset)
			{
				return default(Frame);
			}
		}

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReconstructionFilter m_ReconstructionFilter;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FrameBlendingFilter m_FrameBlendingFilter;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_FirstFrame;

		[Token(Token = "0x170000F7")]
		public ReconstructionFilter reconstructionFilter
		{
			[Token(Token = "0x6000873")]
			[Address(RVA = "0xAB76D4", Offset = "0xAB76D4", VA = "0xAB76D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		public FrameBlendingFilter frameBlendingFilter
		{
			[Token(Token = "0x6000874")]
			[Address(RVA = "0xAB7780", Offset = "0xAB7780", VA = "0xAB7780")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		public override bool active
		{
			[Token(Token = "0x6000875")]
			[Address(RVA = "0xAB7860", Offset = "0xAB7860", VA = "0xAB7860", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0xAB792C", Offset = "0xAB792C", VA = "0xAB792C", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0xAB7974", Offset = "0xAB7974", VA = "0xAB7974")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0xAB7A28", Offset = "0xAB7A28", VA = "0xAB7A28", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0xAB7A30", Offset = "0xAB7A30", VA = "0xAB7A30", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0xAB7A38", Offset = "0xAB7A38", VA = "0xAB7A38", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0xAB7A44", Offset = "0xAB7A44", VA = "0xAB7A44", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0xAB9024", Offset = "0xAB9024", VA = "0xAB9024", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xAB9034", Offset = "0xAB9034", VA = "0xAB9034")]
		public MotionBlurComponent()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public sealed class ScreenSpaceReflectionComponent : PostProcessingComponentCommandBuffer<ScreenSpaceReflectionModel>
	{
		[Token(Token = "0x2000271")]
		private static class Uniforms
		{
			[Token(Token = "0x4000CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _RayStepSize;

			[Token(Token = "0x4000CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _AdditiveReflection;

			[Token(Token = "0x4000CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _BilateralUpsampling;

			[Token(Token = "0x4000CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _TreatBackfaceHitAsMiss;

			[Token(Token = "0x4000CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AllowBackwardsRays;

			[Token(Token = "0x4000CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _TraceBehindObjects;

			[Token(Token = "0x4000CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _MaxSteps;

			[Token(Token = "0x4000CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _FullResolutionFiltering;

			[Token(Token = "0x4000CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _HalfResolution;

			[Token(Token = "0x4000CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _HighlightSuppression;

			[Token(Token = "0x4000CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _PixelsPerMeterAtOneMeter;

			[Token(Token = "0x4000CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _ScreenEdgeFading;

			[Token(Token = "0x4000CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _ReflectionBlur;

			[Token(Token = "0x4000CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _MaxRayTraceDistance;

			[Token(Token = "0x4000CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _FadeDistance;

			[Token(Token = "0x4000CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _LayerThickness;

			[Token(Token = "0x4000CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _SSRMultiplier;

			[Token(Token = "0x4000CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _FresnelFade;

			[Token(Token = "0x4000CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _FresnelFadePower;

			[Token(Token = "0x4000CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ReflectionBufferSize;

			[Token(Token = "0x4000CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _ScreenSize;

			[Token(Token = "0x4000CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _InvScreenSize;

			[Token(Token = "0x4000CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _ProjInfo;

			[Token(Token = "0x4000CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _CameraClipInfo;

			[Token(Token = "0x4000CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _ProjectToPixelMatrix;

			[Token(Token = "0x4000CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _WorldToCameraMatrix;

			[Token(Token = "0x4000CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly int _CameraToWorldMatrix;

			[Token(Token = "0x4000CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			internal static readonly int _Axis;

			[Token(Token = "0x4000CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly int _CurrentMipLevel;

			[Token(Token = "0x4000CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			internal static readonly int _NormalAndRoughnessTexture;

			[Token(Token = "0x4000CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly int _HitPointTexture;

			[Token(Token = "0x4000CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			internal static readonly int _BlurTexture;

			[Token(Token = "0x4000CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly int _FilteredReflections;

			[Token(Token = "0x4000CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			internal static readonly int _FinalReflectionTexture;

			[Token(Token = "0x4000CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly int _TempTexture;
		}

		[Token(Token = "0x2000272")]
		private enum PassIndex
		{
			[Token(Token = "0x4000D00")]
			RayTraceStep,
			[Token(Token = "0x4000D01")]
			CompositeFinal,
			[Token(Token = "0x4000D02")]
			Blur,
			[Token(Token = "0x4000D03")]
			CompositeSSR,
			[Token(Token = "0x4000D04")]
			MinMipGeneration,
			[Token(Token = "0x4000D05")]
			HitPointToReflections,
			[Token(Token = "0x4000D06")]
			BilateralKeyPack,
			[Token(Token = "0x4000D07")]
			BlitDepthAsCSZ,
			[Token(Token = "0x4000D08")]
			PoissonBlur
		}

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool k_HighlightSuppression;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool k_TraceBehindObjects;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool k_TreatBackfaceHitAsMiss;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool k_BilateralUpsample;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int[] m_ReflectionTextures;

		[Token(Token = "0x170000FA")]
		public override bool active
		{
			[Token(Token = "0x600087F")]
			[Address(RVA = "0xABC694", Offset = "0xABC694", VA = "0xABC694", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xABC68C", Offset = "0xABC68C", VA = "0xABC68C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xABC714", Offset = "0xABC714", VA = "0xABC714", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xABC83C", Offset = "0xABC83C", VA = "0xABC83C", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xABC884", Offset = "0xABC884", VA = "0xABC884", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0xABC88C", Offset = "0xABC88C", VA = "0xABC88C", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0xABA1A0", Offset = "0xABA1A0", VA = "0xABA1A0")]
		public ScreenSpaceReflectionComponent()
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public sealed class TaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x2000273")]
		private static class Uniforms
		{
			[Token(Token = "0x4000D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static int _Jitter;

			[Token(Token = "0x4000D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static int _SharpenParameters;

			[Token(Token = "0x4000D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static int _FinalBlendParameters;

			[Token(Token = "0x4000D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static int _HistoryTex;

			[Token(Token = "0x4000D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static int _MainTex;
		}

		[Token(Token = "0x4000576")]
		private const string k_ShaderString = "Hidden/Post FX/Temporal Anti-aliasing";

		[Token(Token = "0x4000577")]
		private const int k_SampleCount = 8;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderBuffer[] m_MRT;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_SampleIndex;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_ResetHistory;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture m_HistoryTexture;

		[Token(Token = "0x170000FB")]
		public override bool active
		{
			[Token(Token = "0x6000885")]
			[Address(RVA = "0xABE0D8", Offset = "0xABE0D8", VA = "0xABE0D8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0xABE170", Offset = "0xABE170", VA = "0xABE170", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0xABC154", Offset = "0xABC154", VA = "0xABC154")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0xABABF8", Offset = "0xABABF8", VA = "0xABABF8")]
		public void SetProjectionMatrix(Func<Vector2, Matrix4x4> jitteredFunc)
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0xABB6EC", Offset = "0xABB6EC", VA = "0xABB6EC")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0xABE898", Offset = "0xABE898", VA = "0xABE898")]
		private float GetHaltonValue(int index, int radix)
		{
			return default(float);
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0xABE178", Offset = "0xABE178", VA = "0xABE178")]
		private Vector2 GenerateRandomOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xABE240", Offset = "0xABE240", VA = "0xABE240")]
		private Matrix4x4 GetPerspectiveProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0xABE704", Offset = "0xABE704", VA = "0xABE704")]
		private Matrix4x4 GetOrthographicProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0xABE8DC", Offset = "0xABE8DC", VA = "0xABE8DC", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0xABA214", Offset = "0xABA214", VA = "0xABA214")]
		public TaaComponent()
		{
		}
	}
	[Token(Token = "0x20000EA")]
	public sealed class UserLutComponent : PostProcessingComponentRenderTexture<UserLutModel>
	{
		[Token(Token = "0x2000274")]
		private static class Uniforms
		{
			[Token(Token = "0x4000D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _UserLut;

			[Token(Token = "0x4000D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _UserLut_Params;
		}

		[Token(Token = "0x170000FC")]
		public override bool active
		{
			[Token(Token = "0x6000890")]
			[Address(RVA = "0xABEA88", Offset = "0xABEA88", VA = "0xABEA88", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0xABEBB8", Offset = "0xABEBB8", VA = "0xABEBB8", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0xABBDB8", Offset = "0xABBDB8", VA = "0xABBDB8")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0xABA284", Offset = "0xABA284", VA = "0xABA284")]
		public UserLutComponent()
		{
		}
	}
	[Token(Token = "0x20000EB")]
	public sealed class VignetteComponent : PostProcessingComponentRenderTexture<VignetteModel>
	{
		[Token(Token = "0x2000275")]
		private static class Uniforms
		{
			[Token(Token = "0x4000D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Vignette_Color;

			[Token(Token = "0x4000D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Vignette_Center;

			[Token(Token = "0x4000D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Vignette_Settings;

			[Token(Token = "0x4000D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Vignette_Mask;

			[Token(Token = "0x4000D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Vignette_Opacity;
		}

		[Token(Token = "0x170000FD")]
		public override bool active
		{
			[Token(Token = "0x6000894")]
			[Address(RVA = "0xABEDC4", Offset = "0xABEDC4", VA = "0xABEDC4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xABEE34", Offset = "0xABEE34", VA = "0xABEE34", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0xABA2D4", Offset = "0xABA2D4", VA = "0xABA2D4")]
		public VignetteComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000EC")]
	public class AmbientOcclusionModel : PostProcessingModel
	{
		[Token(Token = "0x2000276")]
		public enum SampleCount
		{
			[Token(Token = "0x4000D16")]
			Lowest = 3,
			[Token(Token = "0x4000D17")]
			Low = 6,
			[Token(Token = "0x4000D18")]
			Medium = 10,
			[Token(Token = "0x4000D19")]
			High = 16
		}

		[Serializable]
		[Token(Token = "0x2000277")]
		public struct Settings
		{
			[Token(Token = "0x4000D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6FF8", Offset = "0x5C6FF8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C6FF8", Offset = "0x5C6FF8")]
			public float intensity;

			[Token(Token = "0x4000D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x5C704C", Offset = "0x5C704C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C704C", Offset = "0x5C704C")]
			public float radius;

			[Token(Token = "0x4000D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C70A0", Offset = "0x5C70A0")]
			public SampleCount sampleCount;

			[Token(Token = "0x4000D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C70D8", Offset = "0x5C70D8")]
			public bool downsampling;

			[Token(Token = "0x4000D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7110", Offset = "0x5C7110")]
			public bool forceForwardCompatibility;

			[Token(Token = "0x4000D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7148", Offset = "0x5C7148")]
			public bool ambientOnly;

			[Token(Token = "0x4000D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7180", Offset = "0x5C7180")]
			public bool highPrecision;

			[Token(Token = "0x17000267")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001103")]
				[Address(RVA = "0xA0807C", Offset = "0xA0807C", VA = "0xA0807C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000FE")]
		public Settings settings
		{
			[Token(Token = "0x6000897")]
			[Address(RVA = "0xA08050", Offset = "0xA08050", VA = "0xA08050")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000898")]
			[Address(RVA = "0xA08060", Offset = "0xA08060", VA = "0xA08060")]
			set
			{
			}
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xA0806C", Offset = "0xA0806C", VA = "0xA0806C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0xA08094", Offset = "0xA08094", VA = "0xA08094")]
		public AmbientOcclusionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000ED")]
	public class AntialiasingModel : PostProcessingModel
	{
		[Token(Token = "0x2000278")]
		public enum Method
		{
			[Token(Token = "0x4000D22")]
			Fxaa,
			[Token(Token = "0x4000D23")]
			Taa
		}

		[Token(Token = "0x2000279")]
		public enum FxaaPreset
		{
			[Token(Token = "0x4000D25")]
			ExtremePerformance,
			[Token(Token = "0x4000D26")]
			Performance,
			[Token(Token = "0x4000D27")]
			Default,
			[Token(Token = "0x4000D28")]
			Quality,
			[Token(Token = "0x4000D29")]
			ExtremeQuality
		}

		[Serializable]
		[Token(Token = "0x200027A")]
		public struct FxaaQualitySettings
		{
			[Token(Token = "0x4000D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C71B8", Offset = "0x5C71B8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C71B8", Offset = "0x5C71B8")]
			public float subpixelAliasingRemovalAmount;

			[Token(Token = "0x4000D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C720C", Offset = "0x5C720C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C720C", Offset = "0x5C720C")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4000D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7268", Offset = "0x5C7268")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7268", Offset = "0x5C7268")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4000D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaQualitySettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x200027B")]
		public struct FxaaConsoleSettings
		{
			[Token(Token = "0x4000D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C72C0", Offset = "0x5C72C0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C72C0", Offset = "0x5C72C0")]
			public float subpixelSpreadAmount;

			[Token(Token = "0x4000D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7318", Offset = "0x5C7318")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7318", Offset = "0x5C7318")]
			public float edgeSharpnessAmount;

			[Token(Token = "0x4000D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C736C", Offset = "0x5C736C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C736C", Offset = "0x5C736C")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4000D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C73C0", Offset = "0x5C73C0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C73C0", Offset = "0x5C73C0")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4000D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaConsoleSettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x200027C")]
		public struct FxaaSettings
		{
			[Token(Token = "0x4000D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FxaaPreset preset;

			[Token(Token = "0x17000268")]
			public static FxaaSettings defaultSettings
			{
				[Token(Token = "0x6001106")]
				[Address(RVA = "0xA0830C", Offset = "0xA0830C", VA = "0xA0830C")]
				get
				{
					return default(FxaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200027D")]
		public struct TaaSettings
		{
			[Token(Token = "0x4000D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C741C", Offset = "0x5C741C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C741C", Offset = "0x5C741C")]
			public float jitterSpread;

			[Token(Token = "0x4000D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7474", Offset = "0x5C7474")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7474", Offset = "0x5C7474")]
			public float sharpen;

			[Token(Token = "0x4000D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C74C8", Offset = "0x5C74C8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C74C8", Offset = "0x5C74C8")]
			public float stationaryBlending;

			[Token(Token = "0x4000D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7520", Offset = "0x5C7520")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7520", Offset = "0x5C7520")]
			public float motionBlending;

			[Token(Token = "0x17000269")]
			public static TaaSettings defaultSettings
			{
				[Token(Token = "0x6001107")]
				[Address(RVA = "0xA08314", Offset = "0xA08314", VA = "0xA08314")]
				get
				{
					return default(TaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200027E")]
		public struct Settings
		{
			[Token(Token = "0x4000D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Method method;

			[Token(Token = "0x4000D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public FxaaSettings fxaaSettings;

			[Token(Token = "0x4000D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TaaSettings taaSettings;

			[Token(Token = "0x1700026A")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001108")]
				[Address(RVA = "0xA080EC", Offset = "0xA080EC", VA = "0xA080EC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000FF")]
		public Settings settings
		{
			[Token(Token = "0x600089B")]
			[Address(RVA = "0xA080A8", Offset = "0xA080A8", VA = "0xA080A8")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600089C")]
			[Address(RVA = "0xA080BC", Offset = "0xA080BC", VA = "0xA080BC")]
			set
			{
			}
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0xA080D0", Offset = "0xA080D0", VA = "0xA080D0", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0xA08108", Offset = "0xA08108", VA = "0xA08108")]
		public AntialiasingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000EE")]
	public class BloomModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200027F")]
		public struct BloomSettings
		{
			[Token(Token = "0x4000D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x5C7578", Offset = "0x5C7578")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7578", Offset = "0x5C7578")]
			public float intensity;

			[Token(Token = "0x4000D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x5C75C8", Offset = "0x5C75C8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C75C8", Offset = "0x5C75C8")]
			public float threshold;

			[Token(Token = "0x4000D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7618", Offset = "0x5C7618")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7618", Offset = "0x5C7618")]
			public float softKnee;

			[Token(Token = "0x4000D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C766C", Offset = "0x5C766C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C766C", Offset = "0x5C766C")]
			public float radius;

			[Token(Token = "0x4000D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C76C0", Offset = "0x5C76C0")]
			public bool antiFlicker;

			[Token(Token = "0x1700026B")]
			public float thresholdLinear
			{
				[Token(Token = "0x600110A")]
				[Address(RVA = "0xA08DAC", Offset = "0xA08DAC", VA = "0xA08DAC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001109")]
				[Address(RVA = "0xA090D4", Offset = "0xA090D4", VA = "0xA090D4")]
				set
				{
				}
			}

			[Token(Token = "0x1700026C")]
			public static BloomSettings defaultSettings
			{
				[Token(Token = "0x600110B")]
				[Address(RVA = "0xA09150", Offset = "0xA09150", VA = "0xA09150")]
				get
				{
					return default(BloomSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000280")]
		public struct LensDirtSettings
		{
			[Token(Token = "0x4000D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C76F8", Offset = "0x5C76F8")]
			public Texture texture;

			[Token(Token = "0x4000D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x5C7730", Offset = "0x5C7730")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7730", Offset = "0x5C7730")]
			public float intensity;

			[Token(Token = "0x1700026D")]
			public static LensDirtSettings defaultSettings
			{
				[Token(Token = "0x600110C")]
				[Address(RVA = "0xA0916C", Offset = "0xA0916C", VA = "0xA0916C")]
				get
				{
					return default(LensDirtSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000281")]
		public struct Settings
		{
			[Token(Token = "0x4000D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BloomSettings bloom;

			[Token(Token = "0x4000D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LensDirtSettings lensDirt;

			[Token(Token = "0x1700026E")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600110D")]
				[Address(RVA = "0xA09078", Offset = "0xA09078", VA = "0xA09078")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000100")]
		public Settings settings
		{
			[Token(Token = "0x600089F")]
			[Address(RVA = "0xA0901C", Offset = "0xA0901C", VA = "0xA0901C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60008A0")]
			[Address(RVA = "0xA09034", Offset = "0xA09034", VA = "0xA09034")]
			set
			{
			}
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xA0904C", Offset = "0xA0904C", VA = "0xA0904C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xA090A4", Offset = "0xA090A4", VA = "0xA090A4")]
		public BloomModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000EF")]
	public class BuiltinDebugViewsModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000282")]
		public struct DepthSettings
		{
			[Token(Token = "0x4000D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7780", Offset = "0x5C7780")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7780", Offset = "0x5C7780")]
			public float scale;

			[Token(Token = "0x1700026F")]
			public static DepthSettings defaultSettings
			{
				[Token(Token = "0x600110E")]
				[Address(RVA = "0xAB05D4", Offset = "0xAB05D4", VA = "0xAB05D4")]
				get
				{
					return default(DepthSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000283")]
		public struct MotionVectorsSettings
		{
			[Token(Token = "0x4000D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C77D4", Offset = "0x5C77D4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C77D4", Offset = "0x5C77D4")]
			public float sourceOpacity;

			[Token(Token = "0x4000D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7828", Offset = "0x5C7828")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7828", Offset = "0x5C7828")]
			public float motionImageOpacity;

			[Token(Token = "0x4000D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x5C787C", Offset = "0x5C787C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C787C", Offset = "0x5C787C")]
			public float motionImageAmplitude;

			[Token(Token = "0x4000D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C78CC", Offset = "0x5C78CC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C78CC", Offset = "0x5C78CC")]
			public float motionVectorsOpacity;

			[Token(Token = "0x4000D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7920", Offset = "0x5C7920")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7920", Offset = "0x5C7920")]
			public int motionVectorsResolution;

			[Token(Token = "0x4000D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x5C7978", Offset = "0x5C7978")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7978", Offset = "0x5C7978")]
			public float motionVectorsAmplitude;

			[Token(Token = "0x17000270")]
			public static MotionVectorsSettings defaultSettings
			{
				[Token(Token = "0x600110F")]
				[Address(RVA = "0xAB05DC", Offset = "0xAB05DC", VA = "0xAB05DC")]
				get
				{
					return default(MotionVectorsSettings);
				}
			}
		}

		[Token(Token = "0x2000284")]
		public enum Mode
		{
			[Token(Token = "0x4000D4C")]
			None,
			[Token(Token = "0x4000D4D")]
			Depth,
			[Token(Token = "0x4000D4E")]
			Normals,
			[Token(Token = "0x4000D4F")]
			MotionVectors,
			[Token(Token = "0x4000D50")]
			AmbientOcclusion,
			[Token(Token = "0x4000D51")]
			EyeAdaptation,
			[Token(Token = "0x4000D52")]
			FocusPlane,
			[Token(Token = "0x4000D53")]
			PreGradingLog,
			[Token(Token = "0x4000D54")]
			LogLut,
			[Token(Token = "0x4000D55")]
			UserLut
		}

		[Serializable]
		[Token(Token = "0x2000285")]
		public struct Settings
		{
			[Token(Token = "0x4000D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mode mode;

			[Token(Token = "0x4000D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public DepthSettings depth;

			[Token(Token = "0x4000D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MotionVectorsSettings motionVectors;

			[Token(Token = "0x17000271")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001110")]
				[Address(RVA = "0xAB0578", Offset = "0xAB0578", VA = "0xAB0578")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000101")]
		public Settings settings
		{
			[Token(Token = "0x60008A3")]
			[Address(RVA = "0xAB04FC", Offset = "0xAB04FC", VA = "0xAB04FC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60008A4")]
			[Address(RVA = "0xAB050C", Offset = "0xAB050C", VA = "0xAB050C")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public bool willInterrupt
		{
			[Token(Token = "0x60008A5")]
			[Address(RVA = "0xAB051C", Offset = "0xAB051C", VA = "0xAB051C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xAB0550", Offset = "0xAB0550", VA = "0xAB0550", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xAB0540", Offset = "0xAB0540", VA = "0xAB0540")]
		public bool IsModeActive(Mode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xAB05A0", Offset = "0xAB05A0", VA = "0xAB05A0")]
		public BuiltinDebugViewsModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F0")]
	public class ChromaticAberrationModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000286")]
		public struct Settings
		{
			[Token(Token = "0x4000D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C79C8", Offset = "0x5C79C8")]
			public Texture2D spectralTexture;

			[Token(Token = "0x4000D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7A00", Offset = "0x5C7A00")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7A00", Offset = "0x5C7A00")]
			public float intensity;

			[Token(Token = "0x17000272")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001111")]
				[Address(RVA = "0xAB0A4C", Offset = "0xAB0A4C", VA = "0xAB0A4C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000103")]
		public Settings settings
		{
			[Token(Token = "0x60008A9")]
			[Address(RVA = "0xAB0A28", Offset = "0xAB0A28", VA = "0xAB0A28")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60008AA")]
			[Address(RVA = "0xAB0A34", Offset = "0xAB0A34", VA = "0xAB0A34")]
			set
			{
			}
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xAB0A3C", Offset = "0xAB0A3C", VA = "0xAB0A3C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xAB0A5C", Offset = "0xAB0A5C", VA = "0xAB0A5C")]
		public ChromaticAberrationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F1")]
	public class ColorGradingModel : PostProcessingModel
	{
		[Token(Token = "0x2000287")]
		public enum Tonemapper
		{
			[Token(Token = "0x4000D5C")]
			None,
			[Token(Token = "0x4000D5D")]
			ACES,
			[Token(Token = "0x4000D5E")]
			Neutral
		}

		[Serializable]
		[Token(Token = "0x2000288")]
		public struct TonemappingSettings
		{
			[Token(Token = "0x4000D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7A54", Offset = "0x5C7A54")]
			public Tonemapper tonemapper;

			[Token(Token = "0x4000D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7A8C", Offset = "0x5C7A8C")]
			public float neutralBlackIn;

			[Token(Token = "0x4000D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7AAC", Offset = "0x5C7AAC")]
			public float neutralWhiteIn;

			[Token(Token = "0x4000D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7AC4", Offset = "0x5C7AC4")]
			public float neutralBlackOut;

			[Token(Token = "0x4000D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7AE4", Offset = "0x5C7AE4")]
			public float neutralWhiteOut;

			[Token(Token = "0x4000D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7AFC", Offset = "0x5C7AFC")]
			public float neutralWhiteLevel;

			[Token(Token = "0x4000D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7B18", Offset = "0x5C7B18")]
			public float neutralWhiteClip;

			[Token(Token = "0x17000273")]
			public static TonemappingSettings defaultSettings
			{
				[Token(Token = "0x6001112")]
				[Address(RVA = "0xAB3940", Offset = "0xAB3940", VA = "0xAB3940")]
				get
				{
					return default(TonemappingSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000289")]
		public struct BasicSettings
		{
			[Token(Token = "0x4000D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7B30", Offset = "0x5C7B30")]
			public float postExposure;

			[Token(Token = "0x4000D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7B68", Offset = "0x5C7B68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7B68", Offset = "0x5C7B68")]
			public float temperature;

			[Token(Token = "0x4000D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7BC4", Offset = "0x5C7BC4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7BC4", Offset = "0x5C7BC4")]
			public float tint;

			[Token(Token = "0x4000D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7C20", Offset = "0x5C7C20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7C20", Offset = "0x5C7C20")]
			public float hueShift;

			[Token(Token = "0x4000D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7C7C", Offset = "0x5C7C7C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7C7C", Offset = "0x5C7C7C")]
			public float saturation;

			[Token(Token = "0x4000D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7CD0", Offset = "0x5C7CD0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7CD0", Offset = "0x5C7CD0")]
			public float contrast;

			[Token(Token = "0x17000274")]
			public static BasicSettings defaultSettings
			{
				[Token(Token = "0x6001113")]
				[Address(RVA = "0xAB2FD0", Offset = "0xAB2FD0", VA = "0xAB2FD0")]
				get
				{
					return default(BasicSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200028A")]
		public struct ChannelMixerSettings
		{
			[Token(Token = "0x4000D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 red;

			[Token(Token = "0x4000D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 green;

			[Token(Token = "0x4000D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 blue;

			[Token(Token = "0x4000D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[HideInInspector]
			public int currentEditingChannel;

			[Token(Token = "0x17000275")]
			public static ChannelMixerSettings defaultSettings
			{
				[Token(Token = "0x6001114")]
				[Address(RVA = "0xAB2FE0", Offset = "0xAB2FE0", VA = "0xAB2FE0")]
				get
				{
					return default(ChannelMixerSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200028B")]
		public struct LogWheelsSettings
		{
			[Token(Token = "0x4000D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x5C7D34", Offset = "0x5C7D34")]
			public Color slope;

			[Token(Token = "0x4000D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x5C7D6C", Offset = "0x5C7D6C")]
			public Color power;

			[Token(Token = "0x4000D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x5C7DA4", Offset = "0x5C7DA4")]
			public Color offset;

			[Token(Token = "0x17000276")]
			public static LogWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001115")]
				[Address(RVA = "0xAB312C", Offset = "0xAB312C", VA = "0xAB312C")]
				get
				{
					return default(LogWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200028C")]
		public struct LinearWheelsSettings
		{
			[Token(Token = "0x4000D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x5C7DDC", Offset = "0x5C7DDC")]
			public Color lift;

			[Token(Token = "0x4000D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x5C7E14", Offset = "0x5C7E14")]
			public Color gamma;

			[Token(Token = "0x4000D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x5C7E4C", Offset = "0x5C7E4C")]
			public Color gain;

			[Token(Token = "0x17000277")]
			public static LinearWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001116")]
				[Address(RVA = "0xAB31B8", Offset = "0xAB31B8", VA = "0xAB31B8")]
				get
				{
					return default(LinearWheelsSettings);
				}
			}
		}

		[Token(Token = "0x200028D")]
		public enum ColorWheelMode
		{
			[Token(Token = "0x4000D77")]
			Linear,
			[Token(Token = "0x4000D78")]
			Log
		}

		[Serializable]
		[Token(Token = "0x200028E")]
		public struct ColorWheelsSettings
		{
			[Token(Token = "0x4000D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorWheelMode mode;

			[Token(Token = "0x4000D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[TrackballGroup]
			public LogWheelsSettings log;

			[Token(Token = "0x4000D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[TrackballGroup]
			public LinearWheelsSettings linear;

			[Token(Token = "0x17000278")]
			public static ColorWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001117")]
				[Address(RVA = "0xAB30B0", Offset = "0xAB30B0", VA = "0xAB30B0")]
				get
				{
					return default(ColorWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200028F")]
		public struct CurvesSettings
		{
			[Token(Token = "0x4000D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorGradingCurve master;

			[Token(Token = "0x4000D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ColorGradingCurve red;

			[Token(Token = "0x4000D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColorGradingCurve green;

			[Token(Token = "0x4000D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColorGradingCurve blue;

			[Token(Token = "0x4000D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColorGradingCurve hueVShue;

			[Token(Token = "0x4000D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColorGradingCurve hueVSsat;

			[Token(Token = "0x4000D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ColorGradingCurve satVSsat;

			[Token(Token = "0x4000D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ColorGradingCurve lumVSsat;

			[Token(Token = "0x4000D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[HideInInspector]
			public int e_CurrentEditingCurve;

			[Token(Token = "0x4000D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[HideInInspector]
			public bool e_CurveY;

			[Token(Token = "0x4000D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
			[HideInInspector]
			public bool e_CurveR;

			[Token(Token = "0x4000D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
			[HideInInspector]
			public bool e_CurveG;

			[Token(Token = "0x4000D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
			[HideInInspector]
			public bool e_CurveB;

			[Token(Token = "0x17000279")]
			public static CurvesSettings defaultSettings
			{
				[Token(Token = "0x6001118")]
				[Address(RVA = "0xAB3244", Offset = "0xAB3244", VA = "0xAB3244")]
				get
				{
					return default(CurvesSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000290")]
		public struct Settings
		{
			[Token(Token = "0x4000D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TonemappingSettings tonemapping;

			[Token(Token = "0x4000D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public BasicSettings basic;

			[Token(Token = "0x4000D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public ChannelMixerSettings channelMixer;

			[Token(Token = "0x4000D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public ColorWheelsSettings colorWheels;

			[Token(Token = "0x4000D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public CurvesSettings curves;

			[Token(Token = "0x1700027A")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001119")]
				[Address(RVA = "0xAB2E54", Offset = "0xAB2E54", VA = "0xAB2E54")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4A8C", Offset = "0x5C4A8C")]
		private bool <isDirty>k__BackingField;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4A9C", Offset = "0x5C4A9C")]
		private RenderTexture <bakedLut>k__BackingField;

		[Token(Token = "0x17000104")]
		public Settings settings
		{
			[Token(Token = "0x60008AD")]
			[Address(RVA = "0xAB2DA4", Offset = "0xAB2DA4", VA = "0xAB2DA4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60008AE")]
			[Address(RVA = "0xAB2DB4", Offset = "0xAB2DB4", VA = "0xAB2DB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public bool isDirty
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0xAB2DE8", Offset = "0xAB2DE8", VA = "0xAB2DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA070", Offset = "0x5CA070")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008B0")]
			[Address(RVA = "0xAB2DF0", Offset = "0xAB2DF0", VA = "0xAB2DF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA080", Offset = "0x5CA080")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public RenderTexture bakedLut
		{
			[Token(Token = "0x60008B1")]
			[Address(RVA = "0xAB2DFC", Offset = "0xAB2DFC", VA = "0xAB2DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA090", Offset = "0x5CA090")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008B2")]
			[Address(RVA = "0xAB2E04", Offset = "0xAB2E04", VA = "0xAB2E04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA0A0", Offset = "0x5CA0A0")]
			internal set
			{
			}
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xAB2E0C", Offset = "0xAB2E0C", VA = "0xAB2E0C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xAB2F80", Offset = "0xAB2F80", VA = "0xAB2F80", Slot = "5")]
		public override void OnValidate()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xAB2F8C", Offset = "0xAB2F8C", VA = "0xAB2F8C")]
		public ColorGradingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F2")]
	public class DepthOfFieldModel : PostProcessingModel
	{
		[Token(Token = "0x2000291")]
		public enum KernelSize
		{
			[Token(Token = "0x4000D8F")]
			Small,
			[Token(Token = "0x4000D90")]
			Medium,
			[Token(Token = "0x4000D91")]
			Large,
			[Token(Token = "0x4000D92")]
			VeryLarge
		}

		[Serializable]
		[Token(Token = "0x2000292")]
		public struct Settings
		{
			[Token(Token = "0x4000D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x5C7EF4", Offset = "0x5C7EF4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7EF4", Offset = "0x5C7EF4")]
			public float focusDistance;

			[Token(Token = "0x4000D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7F48", Offset = "0x5C7F48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7F48", Offset = "0x5C7F48")]
			public float aperture;

			[Token(Token = "0x4000D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7FA4", Offset = "0x5C7FA4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7FA4", Offset = "0x5C7FA4")]
			public float focalLength;

			[Token(Token = "0x4000D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7FFC", Offset = "0x5C7FFC")]
			public bool useCameraFov;

			[Token(Token = "0x4000D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8034", Offset = "0x5C8034")]
			public KernelSize kernelSize;

			[Token(Token = "0x1700027B")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600111A")]
				[Address(RVA = "0xAB4964", Offset = "0xAB4964", VA = "0xAB4964")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000107")]
		public Settings settings
		{
			[Token(Token = "0x60008B6")]
			[Address(RVA = "0xAB4910", Offset = "0xAB4910", VA = "0xAB4910")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60008B7")]
			[Address(RVA = "0xAB4924", Offset = "0xAB4924", VA = "0xAB4924")]
			set
			{
			}
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xAB4938", Offset = "0xAB4938", VA = "0xAB4938", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xAB4990", Offset = "0xAB4990", VA = "0xAB4990")]
		public DepthOfFieldModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F3")]
	public class DitheringModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000293")]
		public struct Settings
		{
			[Token(Token = "0x1700027C")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600111B")]
				[Address(RVA = "0xAB4E54", Offset = "0xAB4E54", VA = "0xAB4E54")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000108")]
		public Settings settings
		{
			[Token(Token = "0x60008BA")]
			[Address(RVA = "0xAB4E3C", Offset = "0xAB4E3C", VA = "0xAB4E3C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60008BB")]
			[Address(RVA = "0xAB4E44", Offset = "0xAB4E44", VA = "0xAB4E44")]
			set
			{
			}
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xAB4E4C", Offset = "0xAB4E4C", VA = "0xAB4E4C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xAB4E5C", Offset = "0xAB4E5C", VA = "0xAB4E5C")]
		public DitheringModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F4")]
	public class EyeAdaptationModel : PostProcessingModel
	{
		[Token(Token = "0x2000294")]
		public enum EyeAdaptationType
		{
			[Token(Token = "0x4000D99")]
			Progressive,
			[Token(Token = "0x4000D9A")]
			Fixed
		}

		[Serializable]
		[Token(Token = "0x2000295")]
		public struct Settings
		{
			[Token(Token = "0x4000D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C806C", Offset = "0x5C806C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C806C", Offset = "0x5C806C")]
			public float lowPercent;

			[Token(Token = "0x4000D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C80C4", Offset = "0x5C80C4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C80C4", Offset = "0x5C80C4")]
			public float highPercent;

			[Token(Token = "0x4000D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C811C", Offset = "0x5C811C")]
			public float minLuminance;

			[Token(Token = "0x4000D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8154", Offset = "0x5C8154")]
			public float maxLuminance;

			[Token(Token = "0x4000D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x5C818C", Offset = "0x5C818C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C818C", Offset = "0x5C818C")]
			public float keyValue;

			[Token(Token = "0x4000DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C81DC", Offset = "0x5C81DC")]
			public bool dynamicKeyValue;

			[Token(Token = "0x4000DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8214", Offset = "0x5C8214")]
			public EyeAdaptationType adaptationType;

			[Token(Token = "0x4000DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x5C824C", Offset = "0x5C824C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C824C", Offset = "0x5C824C")]
			public float speedUp;

			[Token(Token = "0x4000DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x5C829C", Offset = "0x5C829C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C829C", Offset = "0x5C829C")]
			public float speedDown;

			[Token(Token = "0x4000DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C82EC", Offset = "0x5C82EC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C82EC", Offset = "0x5C82EC")]
			public int logMin;

			[Token(Token = "0x4000DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8340", Offset = "0x5C8340")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8340", Offset = "0x5C8340")]
			public int logMax;

			[Token(Token = "0x1700027D")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600111C")]
				[Address(RVA = "0xAB5DE4", Offset = "0xAB5DE4", VA = "0xAB5DE4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000109")]
		public Settings settings
		{
			[Token(Token = "0x60008BE")]
			[Address(RVA = "0xAB5D6C", Offset = "0xAB5D6C", VA = "0xAB5D6C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60008BF")]
			[Address(RVA = "0xAB5D84", Offset = "0xAB5D84", VA = "0xAB5D84")]
			set
			{
			}
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xAB5DA4", Offset = "0xAB5DA4", VA = "0xAB5DA4", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xAB5E28", Offset = "0xAB5E28", VA = "0xAB5E28")]
		public EyeAdaptationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F5")]
	public class FogModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000296")]
		public struct Settings
		{
			[Token(Token = "0x4000DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8394", Offset = "0x5C8394")]
			public bool excludeSkybox;

			[Token(Token = "0x1700027E")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600111D")]
				[Address(RVA = "0xAB64F4", Offset = "0xAB64F4", VA = "0xAB64F4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700010A")]
		public Settings settings
		{
			[Token(Token = "0x60008C2")]
			[Address(RVA = "0xAB64D8", Offset = "0xAB64D8", VA = "0xAB64D8")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60008C3")]
			[Address(RVA = "0xAB64E0", Offset = "0xAB64E0", VA = "0xAB64E0")]
			set
			{
			}
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xAB64E8", Offset = "0xAB64E8", VA = "0xAB64E8", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xAB64FC", Offset = "0xAB64FC", VA = "0xAB64FC")]
		public FogModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F6")]
	public class GrainModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000297")]
		public struct Settings
		{
			[Token(Token = "0x4000DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C83CC", Offset = "0x5C83CC")]
			public bool colored;

			[Token(Token = "0x4000DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8404", Offset = "0x5C8404")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8404", Offset = "0x5C8404")]
			public float intensity;

			[Token(Token = "0x4000DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8458", Offset = "0x5C8458")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8458", Offset = "0x5C8458")]
			public float size;

			[Token(Token = "0x4000DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C84B0", Offset = "0x5C84B0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C84B0", Offset = "0x5C84B0")]
			public float luminanceContribution;

			[Token(Token = "0x1700027F")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600111E")]
				[Address(RVA = "0xAB6E9C", Offset = "0xAB6E9C", VA = "0xAB6E9C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700010B")]
		public Settings settings
		{
			[Token(Token = "0x60008C6")]
			[Address(RVA = "0xAB6E70", Offset = "0xAB6E70", VA = "0xAB6E70")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0xAB6E80", Offset = "0xAB6E80", VA = "0xAB6E80")]
			set
			{
			}
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xAB6E8C", Offset = "0xAB6E8C", VA = "0xAB6E8C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xAB6EB4", Offset = "0xAB6EB4", VA = "0xAB6EB4")]
		public GrainModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F7")]
	public class MotionBlurModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000298")]
		public struct Settings
		{
			[Token(Token = "0x4000DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8504", Offset = "0x5C8504")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8504", Offset = "0x5C8504")]
			public float shutterAngle;

			[Token(Token = "0x4000DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C855C", Offset = "0x5C855C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C855C", Offset = "0x5C855C")]
			public int sampleCount;

			[Token(Token = "0x4000DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C85B4", Offset = "0x5C85B4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C85B4", Offset = "0x5C85B4")]
			public float frameBlending;

			[Token(Token = "0x17000280")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600111F")]
				[Address(RVA = "0xAB9BC0", Offset = "0xAB9BC0", VA = "0xAB9BC0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700010C")]
		public Settings settings
		{
			[Token(Token = "0x60008CA")]
			[Address(RVA = "0xAB9B90", Offset = "0xAB9B90", VA = "0xAB9B90")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60008CB")]
			[Address(RVA = "0xAB9BA0", Offset = "0xAB9BA0", VA = "0xAB9BA0")]
			set
			{
			}
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xAB9BAC", Offset = "0xAB9BAC", VA = "0xAB9BAC", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xAB9BD0", Offset = "0xAB9BD0", VA = "0xAB9BD0")]
		public MotionBlurModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F8")]
	public class ScreenSpaceReflectionModel : PostProcessingModel
	{
		[Token(Token = "0x2000299")]
		public enum SSRResolution
		{
			[Token(Token = "0x4000DAF")]
			High = 0,
			[Token(Token = "0x4000DB0")]
			Low = 2
		}

		[Token(Token = "0x200029A")]
		public enum SSRReflectionBlendType
		{
			[Token(Token = "0x4000DB2")]
			PhysicallyBased,
			[Token(Token = "0x4000DB3")]
			Additive
		}

		[Serializable]
		[Token(Token = "0x200029B")]
		public struct IntensitySettings
		{
			[Token(Token = "0x4000DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8608", Offset = "0x5C8608")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8608", Offset = "0x5C8608")]
			public float reflectionMultiplier;

			[Token(Token = "0x4000DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C865C", Offset = "0x5C865C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C865C", Offset = "0x5C865C")]
			public float fadeDistance;

			[Token(Token = "0x4000DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C86B4", Offset = "0x5C86B4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C86B4", Offset = "0x5C86B4")]
			public float fresnelFade;

			[Token(Token = "0x4000DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8708", Offset = "0x5C8708")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8708", Offset = "0x5C8708")]
			public float fresnelFadePower;
		}

		[Serializable]
		[Token(Token = "0x200029C")]
		public struct ReflectionSettings
		{
			[Token(Token = "0x4000DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8760", Offset = "0x5C8760")]
			public SSRReflectionBlendType blendType;

			[Token(Token = "0x4000DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8798", Offset = "0x5C8798")]
			public SSRResolution reflectionQuality;

			[Token(Token = "0x4000DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C87D0", Offset = "0x5C87D0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C87D0", Offset = "0x5C87D0")]
			public float maxDistance;

			[Token(Token = "0x4000DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C882C", Offset = "0x5C882C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C882C", Offset = "0x5C882C")]
			public int iterationCount;

			[Token(Token = "0x4000DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8884", Offset = "0x5C8884")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8884", Offset = "0x5C8884")]
			public int stepSize;

			[Token(Token = "0x4000DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C88D8", Offset = "0x5C88D8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C88D8", Offset = "0x5C88D8")]
			public float widthModifier;

			[Token(Token = "0x4000DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8930", Offset = "0x5C8930")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8930", Offset = "0x5C8930")]
			public float reflectionBlur;

			[Token(Token = "0x4000DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8988", Offset = "0x5C8988")]
			public bool reflectBackfaces;
		}

		[Serializable]
		[Token(Token = "0x200029D")]
		public struct ScreenEdgeMask
		{
			[Token(Token = "0x4000DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C89C0", Offset = "0x5C89C0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C89C0", Offset = "0x5C89C0")]
			public float intensity;
		}

		[Serializable]
		[Token(Token = "0x200029E")]
		public struct Settings
		{
			[Token(Token = "0x4000DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectionSettings reflection;

			[Token(Token = "0x4000DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntensitySettings intensity;

			[Token(Token = "0x4000DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ScreenEdgeMask screenEdgeMask;

			[Token(Token = "0x17000281")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001120")]
				[Address(RVA = "0xABE084", Offset = "0xABE084", VA = "0xABE084")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700010D")]
		public Settings settings
		{
			[Token(Token = "0x60008CE")]
			[Address(RVA = "0xABDFF4", Offset = "0xABDFF4", VA = "0xABDFF4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60008CF")]
			[Address(RVA = "0xABE014", Offset = "0xABE014", VA = "0xABE014")]
			set
			{
			}
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xABE034", Offset = "0xABE034", VA = "0xABE034", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xABC5D0", Offset = "0xABC5D0", VA = "0xABC5D0")]
		public ScreenSpaceReflectionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F9")]
	public class UserLutModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200029F")]
		public struct Settings
		{
			[Token(Token = "0x4000DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8A14", Offset = "0x5C8A14")]
			public Texture2D lut;

			[Token(Token = "0x4000DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8A4C", Offset = "0x5C8A4C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8A4C", Offset = "0x5C8A4C")]
			public float contribution;

			[Token(Token = "0x17000282")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001121")]
				[Address(RVA = "0xABEDB8", Offset = "0xABEDB8", VA = "0xABEDB8")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700010E")]
		public Settings settings
		{
			[Token(Token = "0x60008D2")]
			[Address(RVA = "0xABED94", Offset = "0xABED94", VA = "0xABED94")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60008D3")]
			[Address(RVA = "0xABEDA0", Offset = "0xABEDA0", VA = "0xABEDA0")]
			set
			{
			}
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xABEDA8", Offset = "0xABEDA8", VA = "0xABEDA8", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xABC624", Offset = "0xABC624", VA = "0xABC624")]
		public UserLutModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FA")]
	public class VignetteModel : PostProcessingModel
	{
		[Token(Token = "0x20002A0")]
		public enum Mode
		{
			[Token(Token = "0x4000DC7")]
			Classic,
			[Token(Token = "0x4000DC8")]
			Masked
		}

		[Serializable]
		[Token(Token = "0x20002A1")]
		public struct Settings
		{
			[Token(Token = "0x4000DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8AA0", Offset = "0x5C8AA0")]
			public Mode mode;

			[Token(Token = "0x4000DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x5C8AD8", Offset = "0x5C8AD8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8AD8", Offset = "0x5C8AD8")]
			public Color color;

			[Token(Token = "0x4000DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8B28", Offset = "0x5C8B28")]
			public Vector2 center;

			[Token(Token = "0x4000DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8B60", Offset = "0x5C8B60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8B60", Offset = "0x5C8B60")]
			public float intensity;

			[Token(Token = "0x4000DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8BB4", Offset = "0x5C8BB4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8BB4", Offset = "0x5C8BB4")]
			public float smoothness;

			[Token(Token = "0x4000DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8C0C", Offset = "0x5C8C0C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8C0C", Offset = "0x5C8C0C")]
			public float roundness;

			[Token(Token = "0x4000DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8C60", Offset = "0x5C8C60")]
			public Texture mask;

			[Token(Token = "0x4000DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8C98", Offset = "0x5C8C98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8C98", Offset = "0x5C8C98")]
			public float opacity;

			[Token(Token = "0x4000DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8CEC", Offset = "0x5C8CEC")]
			public bool rounded;

			[Token(Token = "0x17000283")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001122")]
				[Address(RVA = "0xABF270", Offset = "0xABF270", VA = "0xABF270")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700010F")]
		public Settings settings
		{
			[Token(Token = "0x60008D6")]
			[Address(RVA = "0xABF1E4", Offset = "0xABF1E4", VA = "0xABF1E4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60008D7")]
			[Address(RVA = "0xABF204", Offset = "0xABF204", VA = "0xABF204")]
			set
			{
			}
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xABF224", Offset = "0xABF224", VA = "0xABF224", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xABC638", Offset = "0xABC638", VA = "0xABC638")]
		public VignetteModel()
		{
		}
	}
	[Token(Token = "0x20000FB")]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1F1C", Offset = "0x5C1F1C")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5C1F1C", Offset = "0x5C1F1C")]
	public class PostProcessingBehaviour : MonoBehaviour
	{
		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PostProcessingProfile profile;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<Vector2, Matrix4x4> jitteredMatrixFunc;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Type, KeyValuePair<CameraEvent, CommandBuffer>> m_CommandBuffers;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PostProcessingComponentBase> m_Components;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<PostProcessingComponentBase, bool> m_ComponentStates;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialFactory m_MaterialFactory;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTextureFactory m_RenderTextureFactory;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PostProcessingContext m_Context;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera m_Camera;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PostProcessingProfile m_PreviousProfile;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_RenderingInSceneView;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BuiltinDebugViewsComponent m_DebugViews;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AmbientOcclusionComponent m_AmbientOcclusion;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ScreenSpaceReflectionComponent m_ScreenSpaceReflection;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FogComponent m_FogComponent;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MotionBlurComponent m_MotionBlur;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TaaComponent m_Taa;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EyeAdaptationComponent m_EyeAdaptation;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DepthOfFieldComponent m_DepthOfField;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BloomComponent m_Bloom;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ChromaticAberrationComponent m_ChromaticAberration;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ColorGradingComponent m_ColorGrading;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private UserLutComponent m_UserLut;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GrainComponent m_Grain;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private VignetteComponent m_Vignette;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private DitheringComponent m_Dithering;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FxaaComponent m_Fxaa;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<PostProcessingComponentBase> m_ComponentsToEnable;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<PostProcessingComponentBase> m_ComponentsToDisable;

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xAB9BE8", Offset = "0xAB9BE8", VA = "0xAB9BE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xABA324", Offset = "0xABA324", VA = "0xABA324")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xABAEBC", Offset = "0xABAEBC", VA = "0xABAEBC")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xABAFBC", Offset = "0xABAFBC", VA = "0xABAFBC")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xABB0E4", Offset = "0xABB0E4", VA = "0xABB0E4")]
		[ImageEffectTransformsToLDR]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xABBC04", Offset = "0xABBC04", VA = "0xABBC04")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xABBEE4", Offset = "0xABBEE4", VA = "0xABBEE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xABC0FC", Offset = "0xABC0FC", VA = "0xABC0FC")]
		public void ResetTemporalEffects()
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xABA948", Offset = "0xABA948", VA = "0xABA948")]
		private void CheckObservers()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xABA828", Offset = "0xABA828", VA = "0xABA828")]
		private void DisableComponents()
		{
		}

		[Token(Token = "0x60008E4")]
		private CommandBuffer AddCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x60008E5")]
		private void RemoveCommandBuffer<T>() where T : PostProcessingModel
		{
		}

		[Token(Token = "0x60008E6")]
		private CommandBuffer GetCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x60008E7")]
		private void TryExecuteCommandBuffer<T>(PostProcessingComponentCommandBuffer<T> component) where T : PostProcessingModel
		{
		}

		[Token(Token = "0x60008E8")]
		private bool TryPrepareUberImageEffect<T>(PostProcessingComponentRenderTexture<T> component, Material material) where T : PostProcessingModel
		{
			return default(bool);
		}

		[Token(Token = "0x60008E9")]
		private T AddComponent<T>(T component) where T : PostProcessingComponentBase
		{
			return null;
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xABC160", Offset = "0xABC160", VA = "0xABC160")]
		public PostProcessingBehaviour()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public abstract class PostProcessingComponentBase
	{
		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingContext context;

		[Token(Token = "0x17000110")]
		public abstract bool active
		{
			[Token(Token = "0x60008EC")]
			get;
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xABC1F0", Offset = "0xABC1F0", VA = "0xABC1F0", Slot = "4")]
		public virtual DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xABC1F8", Offset = "0xABC1F8", VA = "0xABC1F8", Slot = "6")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xABC1FC", Offset = "0xABC1FC", VA = "0xABC1FC", Slot = "7")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x60008EF")]
		public abstract PostProcessingModel GetModel();

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xABC200", Offset = "0xABC200", VA = "0xABC200")]
		protected PostProcessingComponentBase()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public abstract class PostProcessingComponent<T> : PostProcessingComponentBase where T : PostProcessingModel
	{
		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4B3C", Offset = "0x5C4B3C")]
		private T <model>k__BackingField;

		[Token(Token = "0x17000111")]
		public T model
		{
			[Token(Token = "0x60008F1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA0C0", Offset = "0x5CA0C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008F2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA0D0", Offset = "0x5CA0D0")]
			internal set
			{
			}
		}

		[Token(Token = "0x60008F3")]
		public virtual void Init(PostProcessingContext pcontext, T pmodel)
		{
		}

		[Token(Token = "0x60008F4")]
		public override PostProcessingModel GetModel()
		{
			return null;
		}

		[Token(Token = "0x60008F5")]
		protected PostProcessingComponent()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public abstract class PostProcessingComponentCommandBuffer<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x60008F6")]
		public abstract CameraEvent GetCameraEvent();

		[Token(Token = "0x60008F7")]
		public abstract string GetName();

		[Token(Token = "0x60008F8")]
		public abstract void PopulateCommandBuffer(CommandBuffer cb);

		[Token(Token = "0x60008F9")]
		protected PostProcessingComponentCommandBuffer()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public abstract class PostProcessingComponentRenderTexture<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x60008FA")]
		public virtual void Prepare(Material material)
		{
		}

		[Token(Token = "0x60008FB")]
		protected PostProcessingComponentRenderTexture()
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class PostProcessingContext
	{
		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingProfile profile;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialFactory materialFactory;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTextureFactory renderTextureFactory;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4B4C", Offset = "0x5C4B4C")]
		private bool <interrupted>k__BackingField;

		[Token(Token = "0x17000112")]
		public bool interrupted
		{
			[Token(Token = "0x60008FC")]
			[Address(RVA = "0xABC208", Offset = "0xABC208", VA = "0xABC208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA0E0", Offset = "0x5CA0E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008FD")]
			[Address(RVA = "0xABC210", Offset = "0xABC210", VA = "0xABC210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA0F0", Offset = "0x5CA0F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public bool isGBufferAvailable
		{
			[Token(Token = "0x6000900")]
			[Address(RVA = "0xAB5EF8", Offset = "0xAB5EF8", VA = "0xAB5EF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000114")]
		public bool isHdr
		{
			[Token(Token = "0x6000901")]
			[Address(RVA = "0xAB6388", Offset = "0xAB6388", VA = "0xAB6388")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000115")]
		public int width
		{
			[Token(Token = "0x6000902")]
			[Address(RVA = "0xAB4344", Offset = "0xAB4344", VA = "0xAB4344")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000116")]
		public int height
		{
			[Token(Token = "0x6000903")]
			[Address(RVA = "0xAB4360", Offset = "0xAB4360", VA = "0xAB4360")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000117")]
		public Rect viewport
		{
			[Token(Token = "0x6000904")]
			[Address(RVA = "0xAB299C", Offset = "0xAB299C", VA = "0xAB299C")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xAB4564", Offset = "0xAB4564", VA = "0xAB4564")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xABA818", Offset = "0xABA818", VA = "0xABA818")]
		public PostProcessingContext Reset()
		{
			return null;
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0xABA198", Offset = "0xABA198", VA = "0xABA198")]
		public PostProcessingContext()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000101")]
	public abstract class PostProcessingModel
	{
		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "GetSetAttribute", RVA = "0x5C4B5C", Offset = "0x5C4B5C")]
		private bool m_Enabled;

		[Token(Token = "0x17000118")]
		public bool enabled
		{
			[Token(Token = "0x6000906")]
			[Address(RVA = "0xABC21C", Offset = "0xABC21C", VA = "0xABC21C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000907")]
			[Address(RVA = "0xABC224", Offset = "0xABC224", VA = "0xABC224")]
			set
			{
			}
		}

		[Token(Token = "0x6000908")]
		public abstract void Reset();

		[Token(Token = "0x6000909")]
		[Address(RVA = "0xABC240", Offset = "0xABC240", VA = "0xABC240", Slot = "5")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0xAB05CC", Offset = "0xAB05CC", VA = "0xAB05CC")]
		protected PostProcessingModel()
		{
		}
	}
	[Token(Token = "0x2000102")]
	public class PostProcessingProfile : ScriptableObject
	{
		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuiltinDebugViewsModel debugViews;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FogModel fog;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AntialiasingModel antialiasing;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AmbientOcclusionModel ambientOcclusion;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ScreenSpaceReflectionModel screenSpaceReflection;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DepthOfFieldModel depthOfField;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MotionBlurModel motionBlur;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EyeAdaptationModel eyeAdaptation;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BloomModel bloom;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ColorGradingModel colorGrading;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UserLutModel userLut;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChromaticAberrationModel chromaticAberration;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GrainModel grain;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public VignetteModel vignette;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public DitheringModel dithering;

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xABC244", Offset = "0xABC244", VA = "0xABC244")]
		public PostProcessingProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000103")]
	public sealed class ColorGradingCurve
	{
		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_Loop;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ZeroValue;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Range;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve m_InternalLoopingCurve;

		[Token(Token = "0x600090C")]
		[Address(RVA = "0xAB2D38", Offset = "0xAB2D38", VA = "0xAB2D38")]
		public ColorGradingCurve(AnimationCurve curve, float zeroValue, bool loop, Vector2 bounds)
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xAB18EC", Offset = "0xAB18EC", VA = "0xAB18EC")]
		public void Cache()
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0xAB1AC8", Offset = "0xAB1AC8", VA = "0xAB1AC8")]
		public float Evaluate(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000104")]
	public static class GraphicsUtils
	{
		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D s_WhiteTexture;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Mesh s_Quad;

		[Token(Token = "0x17000119")]
		public static bool isLinearColorSpace
		{
			[Token(Token = "0x600090F")]
			[Address(RVA = "0xAB6EC8", Offset = "0xAB6EC8", VA = "0xAB6EC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011A")]
		public static bool supportsDX11
		{
			[Token(Token = "0x6000910")]
			[Address(RVA = "0xAB6EE8", Offset = "0xAB6EE8", VA = "0xAB6EE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011B")]
		public static Texture2D whiteTexture
		{
			[Token(Token = "0x6000911")]
			[Address(RVA = "0xAB6F18", Offset = "0xAB6F18", VA = "0xAB6F18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		public static Mesh quad
		{
			[Token(Token = "0x6000912")]
			[Address(RVA = "0xAB7050", Offset = "0xAB7050", VA = "0xAB7050")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xAB4460", Offset = "0xAB4460", VA = "0xAB4460")]
		public static void Blit(Material material, int pass)
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xAB738C", Offset = "0xAB738C", VA = "0xAB738C")]
		public static void ClearAndBlit(Texture source, RenderTexture destination, Material material, int pass, bool clearColor = true, bool clearDepth = false)
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xAB0330", Offset = "0xAB0330", VA = "0xAB0330")]
		public static void Destroy(Object obj)
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xAB7528", Offset = "0xAB7528", VA = "0xAB7528")]
		public static void Dispose()
		{
		}
	}
	[Token(Token = "0x2000105")]
	public sealed class MaterialFactory : IDisposable
	{
		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, Material> m_Materials;

		[Token(Token = "0x6000917")]
		[Address(RVA = "0xAB7578", Offset = "0xAB7578", VA = "0xAB7578")]
		public MaterialFactory()
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0xAB2460", Offset = "0xAB2460", VA = "0xAB2460")]
		public Material Get(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0xAB75EC", Offset = "0xAB75EC", VA = "0xAB75EC", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000106")]
	public sealed class RenderTextureFactory : IDisposable
	{
		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x600091A")]
		[Address(RVA = "0xABA124", Offset = "0xABA124", VA = "0xABA124")]
		public RenderTextureFactory()
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xABB5DC", Offset = "0xABB5DC", VA = "0xABB5DC")]
		public RenderTexture Get(RenderTexture baseRenderTexture)
		{
			return null;
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xAB437C", Offset = "0xAB437C", VA = "0xAB437C")]
		public RenderTexture Get(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, RenderTextureReadWrite rw = RenderTextureReadWrite.Default, FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, string name = "FactoryTempTexture")
		{
			return null;
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xAB4570", Offset = "0xAB4570", VA = "0xAB4570")]
		public void Release(RenderTexture rt)
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0xABBB54", Offset = "0xABBB54", VA = "0xABBB54")]
		public void ReleaseAll()
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0xABC0F8", Offset = "0xABC0F8", VA = "0xABC0F8", Slot = "4")]
		public void Dispose()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000107")]
	public enum FaceType : uint
	{
		[Token(Token = "0x40005CB")]
		TRIANGLES,
		[Token(Token = "0x40005CC")]
		QUADS
	}
	[Token(Token = "0x2000108")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x40005CE")]
		ABSORPTION,
		[Token(Token = "0x40005CF")]
		TRANSMISSION,
		[Token(Token = "0x40005D0")]
		SCATTERING
	}
	[Token(Token = "0x2000109")]
	public struct MeshGroup
	{
		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x200010A")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700011D")]
		public bool Highlight
		{
			[Token(Token = "0x6000920")]
			[Address(RVA = "0x862178", Offset = "0x862178", VA = "0x862178")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000921")]
			[Address(RVA = "0x862180", Offset = "0x862180", VA = "0x862180")]
			set
			{
			}
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x86218C", Offset = "0x86218C", VA = "0x86218C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x862358", Offset = "0x862358", VA = "0x862358", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x862380", Offset = "0x862380", VA = "0x862380", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x8623A8", Offset = "0x8623A8", VA = "0x8623A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x862258", Offset = "0x862258", VA = "0x862258")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x8625FC", Offset = "0x8625FC", VA = "0x8625FC")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700011E")]
		public bool InRange
		{
			[Token(Token = "0x6000929")]
			[Address(RVA = "0x862A5C", Offset = "0x862A5C", VA = "0x862A5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600092A")]
			[Address(RVA = "0x862A64", Offset = "0x862A64", VA = "0x862A64")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public bool Targeted
		{
			[Token(Token = "0x600092B")]
			[Address(RVA = "0x862BE0", Offset = "0x862BE0", VA = "0x862BE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600092C")]
			[Address(RVA = "0x862BE8", Offset = "0x862BE8", VA = "0x862BE8")]
			set
			{
			}
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x862BF4", Offset = "0x862BF4", VA = "0x862BF4", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x862A70", Offset = "0x862A70", VA = "0x862A70")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x862D94", Offset = "0x862D94", VA = "0x862D94")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x200010C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1FD8", Offset = "0x5C1FD8")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000120")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000930")]
			[Address(RVA = "0x862D9C", Offset = "0x862D9C", VA = "0x862D9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000931")]
			[Address(RVA = "0x862DA4", Offset = "0x862DA4", VA = "0x862DA4")]
			set
			{
			}
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x862DC0", Offset = "0x862DC0", VA = "0x862DC0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x862FC8", Offset = "0x862FC8", VA = "0x862FC8", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x8638E4", Offset = "0x8638E4", VA = "0x8638E4", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x863EA0", Offset = "0x863EA0", VA = "0x863EA0", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x864280", Offset = "0x864280", VA = "0x864280")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x863214", Offset = "0x863214", VA = "0x863214")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x86435C", Offset = "0x86435C", VA = "0x86435C")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x864798", Offset = "0x864798", VA = "0x864798", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x8647B0", Offset = "0x8647B0", VA = "0x8647B0", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x8647B8", Offset = "0x8647B8", VA = "0x8647B8")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x200010D")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x866308", Offset = "0x866308", VA = "0x866308")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x8663B8", Offset = "0x8663B8", VA = "0x8663B8")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x866464", Offset = "0x866464", VA = "0x866464")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x200010E")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20002A2")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000DD3")]
			Disabled,
			[Token(Token = "0x4000DD4")]
			Enabled,
			[Token(Token = "0x4000DD5")]
			Targeted
		}

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x86646C", Offset = "0x86646C", VA = "0x86646C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x862CF8", Offset = "0x862CF8", VA = "0x862CF8")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x8664D4", Offset = "0x8664D4", VA = "0x8664D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x86651C", Offset = "0x86651C", VA = "0x86651C")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x200010F")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000943")]
		[Address(RVA = "0xA815AC", Offset = "0xA815AC", VA = "0xA815AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0xA81678", Offset = "0xA81678", VA = "0xA81678")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0xA81684", Offset = "0xA81684", VA = "0xA81684")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0xA81690", Offset = "0xA81690", VA = "0xA81690")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000110")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x860E04", Offset = "0x860E04", VA = "0x860E04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x860E5C", Offset = "0x860E5C", VA = "0x860E5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x861100", Offset = "0x861100", VA = "0x861100")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x8611F0", Offset = "0x8611F0", VA = "0x8611F0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x860E60", Offset = "0x860E60", VA = "0x860E60")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x8612E0", Offset = "0x8612E0", VA = "0x8612E0")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000111")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20002A3")]
		public enum ContactTest
		{
			[Token(Token = "0x4000DD7")]
			PerpenTest,
			[Token(Token = "0x4000DD8")]
			BackwardsPress
		}

		[Token(Token = "0x40005F9")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40005FA")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000121")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x600094D")]
			[Address(RVA = "0x861378", Offset = "0x861378", VA = "0x861378", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000122")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x600094E")]
			[Address(RVA = "0x861380", Offset = "0x861380", VA = "0x861380")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x86138C", Offset = "0x86138C", VA = "0x86138C", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x8614DC", Offset = "0x8614DC", VA = "0x8614DC")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x8616E4", Offset = "0x8616E4", VA = "0x8616E4", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x861C28", Offset = "0x861C28", VA = "0x861C28")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x861B40", Offset = "0x861B40", VA = "0x861B40")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x861D78", Offset = "0x861D78", VA = "0x861D78")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x861E6C", Offset = "0x861E6C", VA = "0x861E6C")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x861F98", Offset = "0x861F98", VA = "0x861F98")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000112")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4D08", Offset = "0x5C4D08")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4D18", Offset = "0x5C4D18")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000123")]
		public Collider Collider
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0x862084", Offset = "0x862084", VA = "0x862084", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA100", Offset = "0x5CA100")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000958")]
			[Address(RVA = "0x86208C", Offset = "0x86208C", VA = "0x86208C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA110", Offset = "0x5CA110")]
			private set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000959")]
			[Address(RVA = "0x862094", Offset = "0x862094", VA = "0x862094", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA120", Offset = "0x5CA120")]
			get
			{
				return null;
			}
			[Token(Token = "0x600095A")]
			[Address(RVA = "0x86209C", Offset = "0x86209C", VA = "0x86209C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA130", Offset = "0x5CA130")]
			private set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600095B")]
			[Address(RVA = "0x8620A4", Offset = "0x8620A4", VA = "0x8620A4", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x8620F4", Offset = "0x8620F4", VA = "0x8620F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x862170", Offset = "0x862170", VA = "0x862170")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000113")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000126")]
		Collider Collider
		{
			[Token(Token = "0x600095E")]
			get;
		}

		[Token(Token = "0x17000127")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x600095F")]
			get;
		}

		[Token(Token = "0x17000128")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000960")]
			get;
		}
	}
	[Token(Token = "0x2000114")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x861640", Offset = "0x861640", VA = "0x861640")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000115")]
	public enum InteractionType
	{
		[Token(Token = "0x400060E")]
		Enter,
		[Token(Token = "0x400060F")]
		Stay,
		[Token(Token = "0x4000610")]
		Exit
	}
	[Token(Token = "0x2000116")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20002A4")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000DDA")]
			Mesh,
			[Token(Token = "0x4000DDB")]
			Skeleton,
			[Token(Token = "0x4000DDC")]
			Both
		}

		[Token(Token = "0x20002A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C18", Offset = "0x5C2C18")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000284")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001126")]
				[Address(RVA = "0x867410", Offset = "0x867410", VA = "0x867410", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000285")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001128")]
				[Address(RVA = "0x867478", Offset = "0x867478", VA = "0x867478", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001123")]
			[Address(RVA = "0x866F04", Offset = "0x866F04", VA = "0x866F04")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001124")]
			[Address(RVA = "0x8671F0", Offset = "0x8671F0", VA = "0x8671F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001125")]
			[Address(RVA = "0x8671F4", Offset = "0x8671F4", VA = "0x8671F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001127")]
			[Address(RVA = "0x867418", Offset = "0x867418", VA = "0x867418", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000611")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4D48", Offset = "0x5C4D48")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000129")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000962")]
			[Address(RVA = "0x86540C", Offset = "0x86540C", VA = "0x86540C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000963")]
			[Address(RVA = "0x866524", Offset = "0x866524", VA = "0x866524")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000964")]
			[Address(RVA = "0x865F8C", Offset = "0x865F8C", VA = "0x865F8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000965")]
			[Address(RVA = "0x86658C", Offset = "0x86658C", VA = "0x86658C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000966")]
			[Address(RVA = "0x8665F4", Offset = "0x8665F4", VA = "0x8665F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000967")]
			[Address(RVA = "0x86662C", Offset = "0x86662C", VA = "0x86662C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000968")]
			[Address(RVA = "0x866694", Offset = "0x866694", VA = "0x866694")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x8666CC", Offset = "0x8666CC", VA = "0x8666CC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x600096A")]
			[Address(RVA = "0x866734", Offset = "0x866734", VA = "0x866734")]
			get
			{
				return null;
			}
			[Token(Token = "0x600096B")]
			[Address(RVA = "0x86676C", Offset = "0x86676C", VA = "0x86676C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x600096C")]
			[Address(RVA = "0x8653D8", Offset = "0x8653D8", VA = "0x8653D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600096D")]
			[Address(RVA = "0x8667D4", Offset = "0x8667D4", VA = "0x8667D4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x600096E")]
			[Address(RVA = "0x865F58", Offset = "0x865F58", VA = "0x865F58")]
			get
			{
				return null;
			}
			[Token(Token = "0x600096F")]
			[Address(RVA = "0x866838", Offset = "0x866838", VA = "0x866838")]
			private set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6000970")]
			[Address(RVA = "0x86689C", Offset = "0x86689C", VA = "0x86689C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000971")]
			[Address(RVA = "0x8668D0", Offset = "0x8668D0", VA = "0x8668D0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6000972")]
			[Address(RVA = "0x866934", Offset = "0x866934", VA = "0x866934")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000973")]
			[Address(RVA = "0x866968", Offset = "0x866968", VA = "0x866968")]
			private set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6000974")]
			[Address(RVA = "0x8669CC", Offset = "0x8669CC", VA = "0x8669CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000975")]
			[Address(RVA = "0x866A00", Offset = "0x866A00", VA = "0x866A00")]
			private set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6000976")]
			[Address(RVA = "0x866A64", Offset = "0x866A64", VA = "0x866A64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA140", Offset = "0x5CA140")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000977")]
			[Address(RVA = "0x866AB4", Offset = "0x866AB4", VA = "0x866AB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA150", Offset = "0x5CA150")]
			private set
			{
			}
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x866B08", Offset = "0x866B08", VA = "0x866B08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x866E7C", Offset = "0x866E7C", VA = "0x866E7C")]
		private void Update()
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x866E0C", Offset = "0x866E0C", VA = "0x866E0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA160", Offset = "0x5CA160")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x8628B0", Offset = "0x8628B0", VA = "0x8628B0")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x866F30", Offset = "0x866F30", VA = "0x866F30")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x865FC4", Offset = "0x865FC4", VA = "0x865FC4")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x865248", Offset = "0x865248", VA = "0x865248")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x867110", Offset = "0x867110", VA = "0x867110")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000117")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002A6")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001129")]
			[Address(RVA = "0x867BC8", Offset = "0x867BC8", VA = "0x867BC8")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000134")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6000980")]
			[Address(RVA = "0x867480", Offset = "0x867480", VA = "0x867480")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6000981")]
			[Address(RVA = "0x867488", Offset = "0x867488", VA = "0x867488")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6000982")]
			[Address(RVA = "0x867490", Offset = "0x867490", VA = "0x867490")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000983")]
			[Address(RVA = "0x867498", Offset = "0x867498", VA = "0x867498", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000984")]
			[Address(RVA = "0x8674A0", Offset = "0x8674A0", VA = "0x8674A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA1C4", Offset = "0x5CA1C4")]
			add
			{
			}
			[Token(Token = "0x6000985")]
			[Address(RVA = "0x867544", Offset = "0x867544", VA = "0x867544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA1D4", Offset = "0x5CA1D4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000987")]
			[Address(RVA = "0x86765C", Offset = "0x86765C", VA = "0x86765C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA1E4", Offset = "0x5CA1E4")]
			add
			{
			}
			[Token(Token = "0x6000988")]
			[Address(RVA = "0x867700", Offset = "0x867700", VA = "0x867700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA1F4", Offset = "0x5CA1F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x600098A")]
			[Address(RVA = "0x867818", Offset = "0x867818", VA = "0x867818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA204", Offset = "0x5CA204")]
			add
			{
			}
			[Token(Token = "0x600098B")]
			[Address(RVA = "0x8678BC", Offset = "0x8678BC", VA = "0x8678BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA214", Offset = "0x5CA214")]
			remove
			{
			}
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x8675E8", Offset = "0x8675E8", VA = "0x8675E8", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x8677A4", Offset = "0x8677A4", VA = "0x8677A4", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x867960", Offset = "0x867960", VA = "0x867960", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600098D")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x861478", Offset = "0x861478", VA = "0x861478", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x867A9C", Offset = "0x867A9C", VA = "0x867A9C", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x86207C", Offset = "0x86207C", VA = "0x86207C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000118")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000629")]
		None,
		[Token(Token = "0x400062A")]
		Proximity,
		[Token(Token = "0x400062B")]
		Contact,
		[Token(Token = "0x400062C")]
		Action
	}
	[Token(Token = "0x2000119")]
	public enum InteractableState
	{
		[Token(Token = "0x400062E")]
		Default,
		[Token(Token = "0x400062F")]
		ProximityState,
		[Token(Token = "0x4000630")]
		ContactState,
		[Token(Token = "0x4000631")]
		ActionState
	}
	[Token(Token = "0x200011A")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x861CD4", Offset = "0x861CD4", VA = "0x861CD4")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x200011B")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000138")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000992")]
			[Address(RVA = "0x867C18", Offset = "0x867C18", VA = "0x867C18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x8679D4", Offset = "0x8679D4", VA = "0x8679D4")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x867B00", Offset = "0x867B00", VA = "0x867B00")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x867C80", Offset = "0x867C80", VA = "0x867C80")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x200011C")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20002A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C28", Offset = "0x5C2C28")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000286")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600112E")]
				[Address(RVA = "0x868CC0", Offset = "0x868CC0", VA = "0x868CC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000287")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001130")]
				[Address(RVA = "0x868D28", Offset = "0x868D28", VA = "0x868D28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600112A")]
			[Address(RVA = "0x868784", Offset = "0x868784", VA = "0x868784")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600112B")]
			[Address(RVA = "0x8688B0", Offset = "0x8688B0", VA = "0x8688B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600112C")]
			[Address(RVA = "0x868924", Offset = "0x868924", VA = "0x868924", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600112D")]
			[Address(RVA = "0x8688CC", Offset = "0x8688CC", VA = "0x8688CC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600112F")]
			[Address(RVA = "0x868CC8", Offset = "0x868CC8", VA = "0x868CC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x86867C", Offset = "0x86867C", VA = "0x86867C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x8686F8", Offset = "0x8686F8", VA = "0x8686F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA224", Offset = "0x5CA224")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x8687B0", Offset = "0x8687B0", VA = "0x8687B0")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x8688A8", Offset = "0x8688A8", VA = "0x8688A8")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000139")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x600099B")]
			[Address(RVA = "0x864C84", Offset = "0x864C84", VA = "0x864C84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x864DEC", Offset = "0x864DEC", VA = "0x864DEC")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x868D30", Offset = "0x868D30", VA = "0x868D30")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x868DDC", Offset = "0x868DDC", VA = "0x868DDC")]
		private void Update()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x8690A4", Offset = "0x8690A4", VA = "0x8690A4")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x8690EC", Offset = "0x8690EC", VA = "0x8690EC")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x86933C", Offset = "0x86933C", VA = "0x86933C")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x869468", Offset = "0x869468", VA = "0x869468")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x200011E")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20002A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C38", Offset = "0x5C2C38")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000288")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001134")]
				[Address(RVA = "0x8661D4", Offset = "0x8661D4", VA = "0x8661D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000289")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001136")]
				[Address(RVA = "0x86623C", Offset = "0x86623C", VA = "0x86623C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001131")]
			[Address(RVA = "0x864F08", Offset = "0x864F08", VA = "0x864F08")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001132")]
			[Address(RVA = "0x865BF0", Offset = "0x865BF0", VA = "0x865BF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001133")]
			[Address(RVA = "0x865BF4", Offset = "0x865BF4", VA = "0x865BF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001135")]
			[Address(RVA = "0x8661DC", Offset = "0x8661DC", VA = "0x8661DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000641")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x1700013A")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60009A3")]
			[Address(RVA = "0x864B68", Offset = "0x864B68", VA = "0x864B68", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700013B")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60009A4")]
			[Address(RVA = "0x864B70", Offset = "0x864B70", VA = "0x864B70", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700013C")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60009A5")]
			[Address(RVA = "0x864B78", Offset = "0x864B78", VA = "0x864B78", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013D")]
		public override bool EnableState
		{
			[Token(Token = "0x60009A6")]
			[Address(RVA = "0x864B80", Offset = "0x864B80", VA = "0x864B80", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009A7")]
			[Address(RVA = "0x864BAC", Offset = "0x864BAC", VA = "0x864BAC", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x864BE8", Offset = "0x864BE8", VA = "0x864BE8", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x864E98", Offset = "0x864E98", VA = "0x864E98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA288", Offset = "0x5CA288")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x864F34", Offset = "0x864F34", VA = "0x864F34")]
		private void Update()
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x865444", Offset = "0x865444", VA = "0x865444")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x8656BC", Offset = "0x8656BC", VA = "0x8656BC")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x8657FC", Offset = "0x8657FC", VA = "0x8657FC", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x865AC4", Offset = "0x865AC4", VA = "0x865AC4", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x865AC8", Offset = "0x865AC8", VA = "0x865AC8", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x865ACC", Offset = "0x865ACC", VA = "0x865ACC")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200011F")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4DD8", Offset = "0x5C4DD8")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4DE8", Offset = "0x5C4DE8")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4DF8", Offset = "0x5C4DF8")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700013E")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0x866244", Offset = "0x866244", VA = "0x866244", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA2EC", Offset = "0x5CA2EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0x86624C", Offset = "0x86624C", VA = "0x86624C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA2FC", Offset = "0x5CA2FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public bool EnableState
		{
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0x866254", Offset = "0x866254", VA = "0x866254", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009B4")]
			[Address(RVA = "0x866270", Offset = "0x866270", VA = "0x866270", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60009B5")]
			[Address(RVA = "0x866290", Offset = "0x866290", VA = "0x866290", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA30C", Offset = "0x5CA30C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009B6")]
			[Address(RVA = "0x866298", Offset = "0x866298", VA = "0x866298", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA31C", Offset = "0x5CA31C")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public float SphereRadius
		{
			[Token(Token = "0x60009B7")]
			[Address(RVA = "0x8662A4", Offset = "0x8662A4", VA = "0x8662A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA32C", Offset = "0x5CA32C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009B8")]
			[Address(RVA = "0x8662AC", Offset = "0x8662AC", VA = "0x8662AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA33C", Offset = "0x5CA33C")]
			private set
			{
			}
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x8662B4", Offset = "0x8662B4", VA = "0x8662B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x8662FC", Offset = "0x8662FC", VA = "0x8662FC", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x866300", Offset = "0x866300", VA = "0x866300")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000120")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000651")]
		None = 0,
		[Token(Token = "0x4000652")]
		Ray = 1,
		[Token(Token = "0x4000653")]
		Poke = 4,
		[Token(Token = "0x4000654")]
		All = -1
	}
	[Token(Token = "0x2000121")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000656")]
		Inactive,
		[Token(Token = "0x4000657")]
		PrimaryInputDown,
		[Token(Token = "0x4000658")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000659")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000122")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x865A80", Offset = "0x865A80", VA = "0x865A80")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000123")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4E08", Offset = "0x5C4E08")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4E18", Offset = "0x5C4E18")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4E28", Offset = "0x5C4E28")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000142")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60009BD")]
			[Address(RVA = "0x861F90", Offset = "0x861F90", VA = "0x861F90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60009BE")]
			[Address(RVA = "0x867CFC", Offset = "0x867CFC", VA = "0x867CFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA34C", Offset = "0x5CA34C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009BF")]
			[Address(RVA = "0x867D04", Offset = "0x867D04", VA = "0x867D04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA35C", Offset = "0x5CA35C")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x60009C0")]
			get;
		}

		[Token(Token = "0x17000145")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x60009C1")]
			get;
		}

		[Token(Token = "0x17000146")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x60009C2")]
			get;
		}

		[Token(Token = "0x17000147")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60009C3")]
			[Address(RVA = "0x867D10", Offset = "0x867D10", VA = "0x867D10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA36C", Offset = "0x5CA36C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60009C4")]
			[Address(RVA = "0x867D1C", Offset = "0x867D1C", VA = "0x867D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA37C", Offset = "0x5CA37C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60009C5")]
			[Address(RVA = "0x867D28", Offset = "0x867D28", VA = "0x867D28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA38C", Offset = "0x5CA38C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60009C6")]
			[Address(RVA = "0x867D34", Offset = "0x867D34", VA = "0x867D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA39C", Offset = "0x5CA39C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60009CB")]
			get;
			[Token(Token = "0x60009CC")]
			set;
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x867D40", Offset = "0x867D40", VA = "0x867D40")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60009C8")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60009C9")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60009CA")]
		public abstract void DeFocus();

		[Token(Token = "0x60009CD")]
		public abstract void Initialize();

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x867D48", Offset = "0x867D48", VA = "0x867D48")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x867D98", Offset = "0x867D98", VA = "0x867D98")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x867DF0", Offset = "0x867DF0", VA = "0x867DF0", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x868034", Offset = "0x868034", VA = "0x868034", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x865AE0", Offset = "0x865AE0", VA = "0x865AE0")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000124")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700014A")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60009D3")]
			get;
		}

		[Token(Token = "0x1700014B")]
		bool EnableState
		{
			[Token(Token = "0x60009D5")]
			get;
			[Token(Token = "0x60009D6")]
			set;
		}

		[Token(Token = "0x1700014C")]
		bool ToolActivateState
		{
			[Token(Token = "0x60009D7")]
			get;
			[Token(Token = "0x60009D8")]
			set;
		}

		[Token(Token = "0x60009D4")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000125")]
	public class PinchStateModule
	{
		[Token(Token = "0x20002A9")]
		private enum PinchState
		{
			[Token(Token = "0x4000DED")]
			None,
			[Token(Token = "0x4000DEE")]
			PinchDown,
			[Token(Token = "0x4000DEF")]
			PinchStay,
			[Token(Token = "0x4000DF0")]
			PinchUp
		}

		[Token(Token = "0x4000666")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700014D")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60009D9")]
			[Address(RVA = "0xA81698", Offset = "0xA81698", VA = "0xA81698")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014E")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60009DA")]
			[Address(RVA = "0xA81724", Offset = "0xA81724", VA = "0xA81724")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014F")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0xA817B0", Offset = "0xA817B0", VA = "0xA817B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xA8183C", Offset = "0xA8183C", VA = "0xA8183C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xA81868", Offset = "0xA81868", VA = "0xA81868")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000126")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000669")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x400066A")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x400066B")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x400066C")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x400066D")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C4E48", Offset = "0x5C4E48")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000150")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60009DE")]
			[Address(RVA = "0xA81B08", Offset = "0xA81B08", VA = "0xA81B08", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000151")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0xA81B10", Offset = "0xA81B10", VA = "0xA81B10", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000152")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60009E0")]
			[Address(RVA = "0xA81B78", Offset = "0xA81B78", VA = "0xA81B78", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000153")]
		public override bool EnableState
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0xA81B80", Offset = "0xA81B80", VA = "0xA81B80", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0xA81BC4", Offset = "0xA81BC4", VA = "0xA81BC4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xA81C38", Offset = "0xA81C38", VA = "0xA81C38", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xA81C98", Offset = "0xA81C98", VA = "0xA81C98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xA81D40", Offset = "0xA81D40", VA = "0xA81D40")]
		private void Update()
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xA82048", Offset = "0xA82048", VA = "0xA82048")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xA82144", Offset = "0xA82144", VA = "0xA82144", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xA824A8", Offset = "0xA824A8", VA = "0xA824A8")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xA8264C", Offset = "0xA8264C", VA = "0xA8264C")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xA82774", Offset = "0xA82774", VA = "0xA82774")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xA82AAC", Offset = "0xA82AAC", VA = "0xA82AAC")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xA82EBC", Offset = "0xA82EBC", VA = "0xA82EBC", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xA82F90", Offset = "0xA82F90", VA = "0xA82F90", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xA82FC4", Offset = "0xA82FC4", VA = "0xA82FC4")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000679")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x400067A")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4EBC", Offset = "0x5C4EBC")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000154")]
		public bool EnableState
		{
			[Token(Token = "0x60009EF")]
			[Address(RVA = "0xA81BA8", Offset = "0xA81BA8", VA = "0xA81BA8", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0xA81BE0", Offset = "0xA81BE0", VA = "0xA81BE0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60009F1")]
			[Address(RVA = "0xA83080", Offset = "0xA83080", VA = "0xA83080", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009F2")]
			[Address(RVA = "0xA8200C", Offset = "0xA8200C", VA = "0xA8200C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60009F4")]
			[Address(RVA = "0xA832B0", Offset = "0xA832B0", VA = "0xA832B0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA3AC", Offset = "0x5CA3AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0xA832B8", Offset = "0xA832B8", VA = "0xA832B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA3BC", Offset = "0x5CA3BC")]
			set
			{
			}
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xA83088", Offset = "0xA83088", VA = "0xA83088")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xA82EF0", Offset = "0xA82EF0", VA = "0xA82EF0", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xA832C0", Offset = "0xA832C0", VA = "0xA832C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xA835EC", Offset = "0xA835EC", VA = "0xA835EC")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0xA837DC", Offset = "0xA837DC", VA = "0xA837DC")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000157")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60009FA")]
			[Address(RVA = "0x8647D8", Offset = "0x8647D8", VA = "0x8647D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009FB")]
			[Address(RVA = "0x8647E0", Offset = "0x8647E0", VA = "0x8647E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60009FC")]
			[Address(RVA = "0x864868", Offset = "0x864868", VA = "0x864868")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009FD")]
			[Address(RVA = "0x864870", Offset = "0x864870", VA = "0x864870")]
			set
			{
			}
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x8648DC", Offset = "0x8648DC", VA = "0x8648DC")]
		private void Start()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x864B40", Offset = "0x864B40", VA = "0x864B40")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x864B50", Offset = "0x864B50", VA = "0x864B50")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x864B60", Offset = "0x864B60", VA = "0x864B60")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x8626E8", Offset = "0x8626E8", VA = "0x8626E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x8626EC", Offset = "0x8626EC", VA = "0x8626EC")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x862724", Offset = "0x862724", VA = "0x862724")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x86275C", Offset = "0x86275C", VA = "0x86275C")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x862794", Offset = "0x862794", VA = "0x862794")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x8627CC", Offset = "0x8627CC", VA = "0x8627CC")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x862804", Offset = "0x862804", VA = "0x862804")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x86283C", Offset = "0x86283C", VA = "0x86283C")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x862998", Offset = "0x862998", VA = "0x862998")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x862A08", Offset = "0x862A08", VA = "0x862A08")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x862A10", Offset = "0x862A10", VA = "0x862A10")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x862A14", Offset = "0x862A14", VA = "0x862A14")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x8629CC", Offset = "0x8629CC", VA = "0x8629CC")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x862A54", Offset = "0x862A54", VA = "0x862A54")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20002AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C48", Offset = "0x5C2C48")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700028A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600113A")]
				[Address(RVA = "0xA8153C", Offset = "0xA8153C", VA = "0xA8153C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600113C")]
				[Address(RVA = "0xA815A4", Offset = "0xA815A4", VA = "0xA815A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001137")]
			[Address(RVA = "0xA81270", Offset = "0xA81270", VA = "0xA81270")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001138")]
			[Address(RVA = "0xA8134C", Offset = "0xA8134C", VA = "0xA8134C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001139")]
			[Address(RVA = "0xA81350", Offset = "0xA81350", VA = "0xA81350", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600113B")]
			[Address(RVA = "0xA81544", Offset = "0xA81544", VA = "0xA81544", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400068A")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x400068B")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xA80E88", Offset = "0xA80E88", VA = "0xA80E88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xA80F20", Offset = "0xA80F20", VA = "0xA80F20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xA811AC", Offset = "0xA811AC", VA = "0xA811AC")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xA8113C", Offset = "0xA8113C", VA = "0xA8113C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA3CC", Offset = "0x5CA3CC")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xA8129C", Offset = "0xA8129C", VA = "0xA8129C")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20002AB")]
		public enum SelectionState
		{
			[Token(Token = "0x4000DF8")]
			Off,
			[Token(Token = "0x4000DF9")]
			Selected,
			[Token(Token = "0x4000DFA")]
			Highlighted
		}

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000159")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6000A15")]
			[Address(RVA = "0xA8383C", Offset = "0xA8383C", VA = "0xA8383C")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000A16")]
			[Address(RVA = "0xA83844", Offset = "0xA83844", VA = "0xA83844")]
			set
			{
			}
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xA839CC", Offset = "0xA839CC", VA = "0xA839CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xA83B8C", Offset = "0xA83B8C", VA = "0xA83B8C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xA838CC", Offset = "0xA838CC", VA = "0xA838CC")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xA83C7C", Offset = "0xA83C7C", VA = "0xA83C7C")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20002AC")]
		public enum SegmentType
		{
			[Token(Token = "0x4000DFC")]
			Straight,
			[Token(Token = "0x4000DFD")]
			LeftTurn,
			[Token(Token = "0x4000DFE")]
			RightTurn,
			[Token(Token = "0x4000DFF")]
			Switch
		}

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x40006A0")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x40006A1")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4F9C", Offset = "0x5C4F9C")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700015A")]
		public float StartDistance
		{
			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0xA83CE8", Offset = "0xA83CE8", VA = "0xA83CE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA430", Offset = "0x5CA430")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0xA83CF0", Offset = "0xA83CF0", VA = "0xA83CF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA440", Offset = "0x5CA440")]
			set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public float GridSize
		{
			[Token(Token = "0x6000A1E")]
			[Address(RVA = "0xA83CF8", Offset = "0xA83CF8", VA = "0xA83CF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A1F")]
			[Address(RVA = "0xA83D00", Offset = "0xA83D00", VA = "0xA83D00")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public int SubDivCount
		{
			[Token(Token = "0x6000A20")]
			[Address(RVA = "0xA83D08", Offset = "0xA83D08", VA = "0xA83D08")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A21")]
			[Address(RVA = "0xA83D10", Offset = "0xA83D10", VA = "0xA83D10")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public SegmentType Type
		{
			[Token(Token = "0x6000A22")]
			[Address(RVA = "0xA83D18", Offset = "0xA83D18", VA = "0xA83D18")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x1700015E")]
		public Pose EndPose
		{
			[Token(Token = "0x6000A23")]
			[Address(RVA = "0xA83D20", Offset = "0xA83D20", VA = "0xA83D20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		public float Radius
		{
			[Token(Token = "0x6000A24")]
			[Address(RVA = "0xA841B4", Offset = "0xA841B4", VA = "0xA841B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000160")]
		public float SegmentLength
		{
			[Token(Token = "0x6000A26")]
			[Address(RVA = "0xA83D88", Offset = "0xA83D88", VA = "0xA83D88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xA841C4", Offset = "0xA841C4", VA = "0xA841C4")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xA841DC", Offset = "0xA841DC", VA = "0xA841DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xA83DC8", Offset = "0xA83DC8", VA = "0xA83DC8")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xA841E0", Offset = "0xA841E0", VA = "0xA841E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xA841E4", Offset = "0xA841E4", VA = "0xA841E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xA84250", Offset = "0xA84250", VA = "0xA84250")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xA84DD8", Offset = "0xA84DD8", VA = "0xA84DD8")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xA850E4", Offset = "0xA850E4", VA = "0xA850E4")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20002AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C58", Offset = "0x5C2C58")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700028C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001140")]
				[Address(RVA = "0xA85CFC", Offset = "0xA85CFC", VA = "0xA85CFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001142")]
				[Address(RVA = "0xA85D64", Offset = "0xA85D64", VA = "0xA85D64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600113D")]
			[Address(RVA = "0xA85A74", Offset = "0xA85A74", VA = "0xA85A74")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600113E")]
			[Address(RVA = "0xA85B50", Offset = "0xA85B50", VA = "0xA85B50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600113F")]
			[Address(RVA = "0xA85B54", Offset = "0xA85B54", VA = "0xA85B54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001141")]
			[Address(RVA = "0xA85D04", Offset = "0xA85D04", VA = "0xA85D04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006A7")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40006A8")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xA85188", Offset = "0xA85188", VA = "0xA85188")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xA85234", Offset = "0xA85234", VA = "0xA85234")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xA852E8", Offset = "0xA852E8", VA = "0xA852E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xA8541C", Offset = "0xA8541C", VA = "0xA8541C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xA85594", Offset = "0xA85594", VA = "0xA85594")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xA85730", Offset = "0xA85730", VA = "0xA85730")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xA859AC", Offset = "0xA859AC", VA = "0xA859AC")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xA85844", Offset = "0xA85844", VA = "0xA85844")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xA85858", Offset = "0xA85858", VA = "0xA85858")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xA85A04", Offset = "0xA85A04", VA = "0xA85A04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA450", Offset = "0x5CA450")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xA85AA0", Offset = "0xA85AA0", VA = "0xA85AA0")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000161")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000A39")]
			[Address(RVA = "0xA85D6C", Offset = "0xA85D6C", VA = "0xA85D6C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xA85D7C", Offset = "0xA85D7C", VA = "0xA85D7C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xA85D84", Offset = "0xA85D84", VA = "0xA85D84", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xA861F0", Offset = "0xA861F0", VA = "0xA861F0")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x40006BB")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x40006BC")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C509C", Offset = "0x5C509C")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000162")]
		public float Distance
		{
			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0xA862E8", Offset = "0xA862E8", VA = "0xA862E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA4B4", Offset = "0x5CA4B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A3E")]
			[Address(RVA = "0xA862F0", Offset = "0xA862F0", VA = "0xA862F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA4C4", Offset = "0x5CA4C4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000163")]
		public float Scale
		{
			[Token(Token = "0x6000A3F")]
			[Address(RVA = "0xA862F8", Offset = "0xA862F8", VA = "0xA862F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A40")]
			[Address(RVA = "0xA86300", Offset = "0xA86300", VA = "0xA86300")]
			set
			{
			}
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xA85D80", Offset = "0xA85D80", VA = "0xA85D80", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xA86308", Offset = "0xA86308", VA = "0xA86308")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xA85DCC", Offset = "0xA85DCC", VA = "0xA85DCC")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xA860A4", Offset = "0xA860A4", VA = "0xA860A4")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000A45")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xA86260", Offset = "0xA86260", VA = "0xA86260")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20002AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C68", Offset = "0x5C2C68")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4000E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4000E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4000E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700028E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001146")]
				[Address(RVA = "0xA86C90", Offset = "0xA86C90", VA = "0xA86C90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001148")]
				[Address(RVA = "0xA86CF8", Offset = "0xA86CF8", VA = "0xA86CF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001143")]
			[Address(RVA = "0xA868D4", Offset = "0xA868D4", VA = "0xA868D4")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001144")]
			[Address(RVA = "0xA86A6C", Offset = "0xA86A6C", VA = "0xA86A6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001145")]
			[Address(RVA = "0xA86A70", Offset = "0xA86A70", VA = "0xA86A70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001147")]
			[Address(RVA = "0xA86C98", Offset = "0xA86C98", VA = "0xA86C98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xA864D8", Offset = "0xA864D8", VA = "0xA864D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xA86524", Offset = "0xA86524", VA = "0xA86524")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xA86630", Offset = "0xA86630", VA = "0xA86630")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xA86778", Offset = "0xA86778", VA = "0xA86778")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xA8668C", Offset = "0xA8668C", VA = "0xA8668C")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xA86854", Offset = "0xA86854", VA = "0xA86854")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA4D4", Offset = "0x5CA4D4")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xA86900", Offset = "0xA86900", VA = "0xA86900")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xA869AC", Offset = "0xA869AC", VA = "0xA869AC")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xA86A0C", Offset = "0xA86A0C", VA = "0xA86A0C")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20002AF")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4000E12")]
			Start,
			[Token(Token = "0x4000E13")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4000E14")]
			Stop
		}

		[Token(Token = "0x20002B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C78", Offset = "0x5C2C78")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4000E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4000E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4000E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4000E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4000E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000290")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600114C")]
				[Address(RVA = "0xA87938", Offset = "0xA87938", VA = "0xA87938", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000291")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600114E")]
				[Address(RVA = "0xA879A0", Offset = "0xA879A0", VA = "0xA879A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001149")]
			[Address(RVA = "0xA87004", Offset = "0xA87004", VA = "0xA87004")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x600114A")]
			[Address(RVA = "0xA87718", Offset = "0xA87718", VA = "0xA87718", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600114B")]
			[Address(RVA = "0xA8771C", Offset = "0xA8771C", VA = "0xA8771C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600114D")]
			[Address(RVA = "0xA87940", Offset = "0xA87940", VA = "0xA87940", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006CF")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x40006D0")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x40006D1")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x40006D2")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C50FC", Offset = "0x5C50FC")]
		protected float _initialSpeed;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xA86D00", Offset = "0xA86D00", VA = "0xA86D00")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xA86E58", Offset = "0xA86E58", VA = "0xA86E58")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xA86E64", Offset = "0xA86E64", VA = "0xA86E64", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xA86FB8", Offset = "0xA86FB8", VA = "0xA86FB8")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xA86DD4", Offset = "0xA86DD4", VA = "0xA86DD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA538", Offset = "0x5CA538")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xA87030", Offset = "0xA87030", VA = "0xA87030")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xA86F54", Offset = "0xA86F54", VA = "0xA86F54")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xA87264", Offset = "0xA87264", VA = "0xA87264")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xA87410", Offset = "0xA87410", VA = "0xA87410")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xA87320", Offset = "0xA87320", VA = "0xA87320")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xA874CC", Offset = "0xA874CC", VA = "0xA874CC")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xA87554", Offset = "0xA87554", VA = "0xA87554")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xA875E0", Offset = "0xA875E0", VA = "0xA875E0")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xA8769C", Offset = "0xA8769C", VA = "0xA8769C")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xA876AC", Offset = "0xA876AC", VA = "0xA876AC")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000133")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000164")]
		public float TrackLength
		{
			[Token(Token = "0x6000A60")]
			[Address(RVA = "0xA879A8", Offset = "0xA879A8", VA = "0xA879A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A61")]
			[Address(RVA = "0xA879B0", Offset = "0xA879B0", VA = "0xA879B0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xA879B8", Offset = "0xA879B8", VA = "0xA879B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xA86388", Offset = "0xA86388", VA = "0xA86388")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xA879BC", Offset = "0xA879BC", VA = "0xA879BC")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xA87BB4", Offset = "0xA87BB4", VA = "0xA87BB4")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xA87CD0", Offset = "0xA87CD0", VA = "0xA87CD0")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000134")]
	public class Pose
	{
		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xA819EC", Offset = "0xA819EC", VA = "0xA819EC")]
		public Pose()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xA81A98", Offset = "0xA81A98", VA = "0xA81A98")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20002B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C88", Offset = "0x5C2C88")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4000E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4000E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000292")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001152")]
				[Address(RVA = "0xA882B4", Offset = "0xA882B4", VA = "0xA882B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000293")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001154")]
				[Address(RVA = "0xA8831C", Offset = "0xA8831C", VA = "0xA8831C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600114F")]
			[Address(RVA = "0xA87F78", Offset = "0xA87F78", VA = "0xA87F78")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001150")]
			[Address(RVA = "0xA880D8", Offset = "0xA880D8", VA = "0xA880D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001151")]
			[Address(RVA = "0xA880DC", Offset = "0xA880DC", VA = "0xA880DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001153")]
			[Address(RVA = "0xA882BC", Offset = "0xA882BC", VA = "0xA882BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C98", Offset = "0x5C2C98")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4000E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4000E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000294")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001158")]
				[Address(RVA = "0xA883F0", Offset = "0xA883F0", VA = "0xA883F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000295")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600115A")]
				[Address(RVA = "0xA88458", Offset = "0xA88458", VA = "0xA88458", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001155")]
			[Address(RVA = "0xA88038", Offset = "0xA88038", VA = "0xA88038")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001156")]
			[Address(RVA = "0xA88324", Offset = "0xA88324", VA = "0xA88324", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001157")]
			[Address(RVA = "0xA88328", Offset = "0xA88328", VA = "0xA88328", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001159")]
			[Address(RVA = "0xA883F8", Offset = "0xA883F8", VA = "0xA883F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006F5")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C52E4", Offset = "0x5C52E4")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000165")]
		public bool IsMoving
		{
			[Token(Token = "0x6000A69")]
			[Address(RVA = "0xA87CEC", Offset = "0xA87CEC", VA = "0xA87CEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA59C", Offset = "0x5CA59C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0xA87CF4", Offset = "0xA87CF4", VA = "0xA87CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA5AC", Offset = "0x5CA5AC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xA87D00", Offset = "0xA87D00", VA = "0xA87D00")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xA87D3C", Offset = "0xA87D3C", VA = "0xA87D3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xA87E90", Offset = "0xA87E90", VA = "0xA87E90")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xA87EF8", Offset = "0xA87EF8", VA = "0xA87EF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA5BC", Offset = "0x5CA5BC")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xA87FA4", Offset = "0xA87FA4", VA = "0xA87FA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA620", Offset = "0x5CA620")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xA88064", Offset = "0xA88064", VA = "0xA88064")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xA880D0", Offset = "0xA880D0", VA = "0xA880D0")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xA88460", Offset = "0xA88460", VA = "0xA88460")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xA884C8", Offset = "0xA884C8", VA = "0xA884C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xA88580", Offset = "0xA88580", VA = "0xA88580")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xA88680", Offset = "0xA88680", VA = "0xA88680")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xA886FC", Offset = "0xA886FC", VA = "0xA886FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xA887D8", Offset = "0xA887D8", VA = "0xA887D8")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000706")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000707")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000708")]
		EUDT_None,
		[Token(Token = "0x4000709")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000138")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20002B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2CA8", Offset = "0x5C2CA8")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000296")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600115E")]
				[Address(RVA = "0xA80E18", Offset = "0xA80E18", VA = "0xA80E18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000297")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001160")]
				[Address(RVA = "0xA80E80", Offset = "0xA80E80", VA = "0xA80E80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600115B")]
			[Address(RVA = "0xA80B98", Offset = "0xA80B98", VA = "0xA80B98")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x600115C")]
			[Address(RVA = "0xA80BC4", Offset = "0xA80BC4", VA = "0xA80BC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600115D")]
			[Address(RVA = "0xA80BC8", Offset = "0xA80BC8", VA = "0xA80BC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600115F")]
			[Address(RVA = "0xA80E20", Offset = "0xA80E20", VA = "0xA80E20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x400070B")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x400070C")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x400070D")]
		private const string noneID = "NoneID";

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C5324", Offset = "0x5C5324")]
		public GameObject mainCamera;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C535C", Offset = "0x5C535C")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x869528", Offset = "0x869528", VA = "0x869528")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x869D08", Offset = "0x869D08", VA = "0x869D08")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x869E48", Offset = "0x869E48", VA = "0x869E48")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x869F70", Offset = "0x869F70", VA = "0x869F70")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x86A098", Offset = "0x86A098", VA = "0x86A098")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x869E1C", Offset = "0x869E1C", VA = "0x869E1C")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x86A170", Offset = "0x86A170", VA = "0x86A170")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA684", Offset = "0x5CA684")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x86A1E0", Offset = "0x86A1E0", VA = "0x86A1E0")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x869894", Offset = "0x869894", VA = "0x869894")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x86A308", Offset = "0x86A308", VA = "0x86A308")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x86A214", Offset = "0x86A214", VA = "0x86A214")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x86A6A4", Offset = "0x86A6A4", VA = "0x86A6A4")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x86A780", Offset = "0x86A780", VA = "0x86A780")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x86A7FC", Offset = "0x86A7FC", VA = "0x86A7FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA6E8", Offset = "0x5CA6E8")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x86A84C", Offset = "0x86A84C", VA = "0x86A84C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA6F8", Offset = "0x5CA6F8")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x86A89C", Offset = "0x86A89C", VA = "0x86A89C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA708", Offset = "0x5CA708")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000139")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C204C", Offset = "0x5C204C")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2CB8", Offset = "0x5C2CB8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001162")]
			[Address(RVA = "0x8600E8", Offset = "0x8600E8", VA = "0x8600E8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001163")]
			[Address(RVA = "0x8600F0", Offset = "0x8600F0", VA = "0x8600F0")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000722")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000723")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000724")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000725")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000726")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000727")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000728")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000729")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x400072A")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x400072B")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x400072C")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x85F32C", Offset = "0x85F32C", VA = "0x85F32C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x85F384", Offset = "0x85F384", VA = "0x85F384")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x85F78C", Offset = "0x85F78C", VA = "0x85F78C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x85F858", Offset = "0x85F858", VA = "0x85F858")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x85F964", Offset = "0x85F964", VA = "0x85F964")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x85FC9C", Offset = "0x85FC9C", VA = "0x85FC9C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x85FE04", Offset = "0x85FE04", VA = "0x85FE04")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x85FF50", Offset = "0x85FF50", VA = "0x85FF50")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x85FA00", Offset = "0x85FA00", VA = "0x85FA00")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x85FAA0", Offset = "0x85FAA0", VA = "0x85FAA0")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x85F5E0", Offset = "0x85F5E0", VA = "0x85F5E0")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x86006C", Offset = "0x86006C", VA = "0x86006C")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public enum HandPoseId
	{
		[Token(Token = "0x400073F")]
		Default,
		[Token(Token = "0x4000740")]
		Generic,
		[Token(Token = "0x4000741")]
		PingPongBall,
		[Token(Token = "0x4000742")]
		Controller
	}
	[Token(Token = "0x200013B")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000166")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000A94")]
			[Address(RVA = "0x86011C", Offset = "0x86011C", VA = "0x86011C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000167")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000A95")]
			[Address(RVA = "0x860124", Offset = "0x860124", VA = "0x860124")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000168")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0x86012C", Offset = "0x86012C", VA = "0x86012C")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x860134", Offset = "0x860134", VA = "0x860134")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x86013C", Offset = "0x86013C", VA = "0x86013C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x8603B0", Offset = "0x8603B0", VA = "0x8603B0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x86040C", Offset = "0x86040C", VA = "0x86040C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x860450", Offset = "0x860450", VA = "0x860450")]
		public TouchController()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x200013D")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x5C5414", Offset = "0x5C5414")]
		public SoundFXRef testSound1;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x85D9D4", Offset = "0x85D9D4", VA = "0x85D9D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x85D9D8", Offset = "0x85D9D8", VA = "0x85D9D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x85DA98", Offset = "0x85DA98", VA = "0x85DA98")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x200013E")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5460", Offset = "0x5C5460")]
		public bool autoRetrigger;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x5C5498", Offset = "0x5C5498")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C54BC", Offset = "0x5C54BC")]
		public Transform[] playPositions;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x854C28", Offset = "0x854C28", VA = "0x854C28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x854DAC", Offset = "0x854DAC", VA = "0x854DAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x854F88", Offset = "0x854F88", VA = "0x854F88")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x854E0C", Offset = "0x854E0C", VA = "0x854E0C")]
		public void Play()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x8550C8", Offset = "0x8550C8", VA = "0x8550C8")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x85523C", Offset = "0x85523C", VA = "0x85523C")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x200013F")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000756")]
		Default,
		[Token(Token = "0x4000757")]
		Preload,
		[Token(Token = "0x4000758")]
		ManualPreload
	}
	[Token(Token = "0x2000140")]
	public enum Fade
	{
		[Token(Token = "0x400075A")]
		In,
		[Token(Token = "0x400075B")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000141")]
	public class SoundGroup
	{
		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C54F4", Offset = "0x5C54F4")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x85D8B4", Offset = "0x85D8B4", VA = "0x85D8B4")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x85D948", Offset = "0x85D948", VA = "0x85D948")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x85C320", Offset = "0x85C320", VA = "0x85C320")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x85C460", Offset = "0x85C460", VA = "0x85C460")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x85CF18", Offset = "0x85CF18", VA = "0x85CF18")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000142")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20002B5")]
		public enum Fade
		{
			[Token(Token = "0x4000E30")]
			In,
			[Token(Token = "0x4000E31")]
			Out
		}

		[Token(Token = "0x20002B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2CC8", Offset = "0x5C2CC8")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x4000E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6001164")]
			[Address(RVA = "0x859460", Offset = "0x859460", VA = "0x859460")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6001165")]
			[Address(RVA = "0x85BDDC", Offset = "0x85BDDC", VA = "0x85BDDC")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20002B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2CD8", Offset = "0x5C2CD8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6001167")]
			[Address(RVA = "0x85BD44", Offset = "0x85BD44", VA = "0x85BD44")]
			public <>c()
			{
			}

			[Token(Token = "0x6001168")]
			[Address(RVA = "0x85BD4C", Offset = "0x85BD4C", VA = "0x85BD4C")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5520", Offset = "0x5C5520")]
		public bool makePersistent;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5558", Offset = "0x5C5558")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5590", Offset = "0x5C5590")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C55C8", Offset = "0x5C55C8")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5600", Offset = "0x5C5600")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5638", Offset = "0x5C5638")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5670", Offset = "0x5C5670")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C56A8", Offset = "0x5C56A8")]
		public bool verboseLogging;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C56E0", Offset = "0x5C56E0")]
		public int maxSoundEmitters;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5718", Offset = "0x5C5718")]
		public float volumeSoundFX;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5750", Offset = "0x5C5750")]
		public float soundFxFadeSecs;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x17000169")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0x8552FC", Offset = "0x8552FC", VA = "0x8552FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016A")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0x8553DC", Offset = "0x8553DC", VA = "0x8553DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0x855444", Offset = "0x855444", VA = "0x855444")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016C")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0x8554B8", Offset = "0x8554B8", VA = "0x8554B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016D")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0x85552C", Offset = "0x85552C", VA = "0x85552C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0x8555A0", Offset = "0x8555A0", VA = "0x8555A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0x855614", Offset = "0x855614", VA = "0x855614")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0x857384", Offset = "0x857384", VA = "0x857384")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x855688", Offset = "0x855688", VA = "0x855688")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x8558B0", Offset = "0x8558B0", VA = "0x8558B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x85568C", Offset = "0x85568C", VA = "0x85568C")]
		private void Init()
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x8564FC", Offset = "0x8564FC", VA = "0x8564FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x855A08", Offset = "0x855A08", VA = "0x855A08")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x856B20", Offset = "0x856B20", VA = "0x856B20")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x856CA0", Offset = "0x856CA0", VA = "0x856CA0")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x856E3C", Offset = "0x856E3C", VA = "0x856E3C")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x856F3C", Offset = "0x856F3C", VA = "0x856F3C")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x856FCC", Offset = "0x856FCC", VA = "0x856FCC")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x8573EC", Offset = "0x8573EC", VA = "0x8573EC")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x857464", Offset = "0x857464", VA = "0x857464")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x855E54", Offset = "0x855E54", VA = "0x855E54")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x856500", Offset = "0x856500", VA = "0x856500")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x8576F4", Offset = "0x8576F4", VA = "0x8576F4")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x8577F8", Offset = "0x8577F8", VA = "0x8577F8")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x857900", Offset = "0x857900", VA = "0x857900")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x8575BC", Offset = "0x8575BC", VA = "0x8575BC")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x857A6C", Offset = "0x857A6C", VA = "0x857A6C")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x857BC0", Offset = "0x857BC0", VA = "0x857BC0")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x857D70", Offset = "0x857D70", VA = "0x857D70")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x855018", Offset = "0x855018", VA = "0x855018")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x85518C", Offset = "0x85518C", VA = "0x85518C")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x857F1C", Offset = "0x857F1C", VA = "0x857F1C")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x857FE8", Offset = "0x857FE8", VA = "0x857FE8")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x85807C", Offset = "0x85807C", VA = "0x85807C")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x858140", Offset = "0x858140", VA = "0x858140")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x8581E4", Offset = "0x8581E4", VA = "0x8581E4")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x8582C4", Offset = "0x8582C4", VA = "0x8582C4")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x858DA8", Offset = "0x858DA8", VA = "0x858DA8")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x859468", Offset = "0x859468", VA = "0x859468")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x859648", Offset = "0x859648", VA = "0x859648")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x85A38C", Offset = "0x85A38C", VA = "0x85A38C")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x8584CC", Offset = "0x8584CC", VA = "0x8584CC")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x85A4AC", Offset = "0x85A4AC", VA = "0x85A4AC")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x85A580", Offset = "0x85A580", VA = "0x85A580")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x85A660", Offset = "0x85A660", VA = "0x85A660")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x85AA18", Offset = "0x85AA18", VA = "0x85AA18")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x85AC14", Offset = "0x85AC14", VA = "0x85AC14")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x85AD30", Offset = "0x85AD30", VA = "0x85AD30")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x85AEF8", Offset = "0x85AEF8", VA = "0x85AEF8")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x85AFD0", Offset = "0x85AFD0", VA = "0x85AFD0")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x85B104", Offset = "0x85B104", VA = "0x85B104")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x85B4F0", Offset = "0x85B4F0", VA = "0x85B4F0")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000143")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000783")]
		None = -1,
		[Token(Token = "0x4000784")]
		Reserved,
		[Token(Token = "0x4000785")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000144")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x85BED8", Offset = "0x85BED8", VA = "0x85BED8")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x85BE7C", Offset = "0x85BE7C", VA = "0x85BE7C")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20002B8")]
		public enum FadeState
		{
			[Token(Token = "0x4000E36")]
			Null,
			[Token(Token = "0x4000E37")]
			FadingIn,
			[Token(Token = "0x4000E38")]
			FadingOut,
			[Token(Token = "0x4000E39")]
			Ducking
		}

		[Token(Token = "0x20002B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2CE8", Offset = "0x5C2CE8")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4000E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4000E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000298")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600116C")]
				[Address(RVA = "0x85C924", Offset = "0x85C924", VA = "0x85C924", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000299")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600116E")]
				[Address(RVA = "0x85C98C", Offset = "0x85C98C", VA = "0x85C98C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001169")]
			[Address(RVA = "0x85C604", Offset = "0x85C604", VA = "0x85C604")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x600116A")]
			[Address(RVA = "0x85C834", Offset = "0x85C834", VA = "0x85C834", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600116B")]
			[Address(RVA = "0x85C838", Offset = "0x85C838", VA = "0x85C838", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600116D")]
			[Address(RVA = "0x85C92C", Offset = "0x85C92C", VA = "0x85C92C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2CF8", Offset = "0x5C2CF8")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4000E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4000E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4000E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4000E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x1700029A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001172")]
				[Address(RVA = "0x85CDD8", Offset = "0x85CDD8", VA = "0x85CDD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001174")]
				[Address(RVA = "0x85CE40", Offset = "0x85CE40", VA = "0x85CE40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600116F")]
			[Address(RVA = "0x85C7C4", Offset = "0x85C7C4", VA = "0x85C7C4")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001170")]
			[Address(RVA = "0x85CC6C", Offset = "0x85CC6C", VA = "0x85CC6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001171")]
			[Address(RVA = "0x85CC70", Offset = "0x85CC70", VA = "0x85CC70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001173")]
			[Address(RVA = "0x85CDE0", Offset = "0x85CDE0", VA = "0x85CDE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D08", Offset = "0x5C2D08")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4000E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4000E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4000E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4000E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4000E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4000E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4000E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4000E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x1700029C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001178")]
				[Address(RVA = "0x85CBFC", Offset = "0x85CBFC", VA = "0x85CBFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600117A")]
				[Address(RVA = "0x85CC64", Offset = "0x85CC64", VA = "0x85CC64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001175")]
			[Address(RVA = "0x85C7F0", Offset = "0x85C7F0", VA = "0x85C7F0")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001176")]
			[Address(RVA = "0x85C994", Offset = "0x85C994", VA = "0x85C994", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001177")]
			[Address(RVA = "0x85C998", Offset = "0x85C998", VA = "0x85C998", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001179")]
			[Address(RVA = "0x85CC04", Offset = "0x85CC04", VA = "0x85CC04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x17000171")]
		public float volume
		{
			[Token(Token = "0x6000AE1")]
			[Address(RVA = "0x85A370", Offset = "0x85A370", VA = "0x85A370")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0x85BF78", Offset = "0x85BF78", VA = "0x85BF78")]
			set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public float pitch
		{
			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0x85BF94", Offset = "0x85BF94", VA = "0x85BF94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0x85BFB0", Offset = "0x85BFB0", VA = "0x85BFB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public AudioClip clip
		{
			[Token(Token = "0x6000AE5")]
			[Address(RVA = "0x85BFCC", Offset = "0x85BFCC", VA = "0x85BFCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0x85BFE8", Offset = "0x85BFE8", VA = "0x85BFE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public float time
		{
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x85C004", Offset = "0x85C004", VA = "0x85C004")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x8582A8", Offset = "0x8582A8", VA = "0x8582A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public float length
		{
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x85C020", Offset = "0x85C020", VA = "0x85C020")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000176")]
		public bool loop
		{
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0x85C0D8", Offset = "0x85C0D8", VA = "0x85C0D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0x85C0F4", Offset = "0x85C0F4", VA = "0x85C0F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000177")]
		public bool mute
		{
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x85C114", Offset = "0x85C114", VA = "0x85C114")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AED")]
			[Address(RVA = "0x85C130", Offset = "0x85C130", VA = "0x85C130")]
			set
			{
			}
		}

		[Token(Token = "0x17000178")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000AEE")]
			[Address(RVA = "0x85C150", Offset = "0x85C150", VA = "0x85C150")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000AEF")]
			[Address(RVA = "0x85C16C", Offset = "0x85C16C", VA = "0x85C16C")]
			set
			{
			}
		}

		[Token(Token = "0x17000179")]
		public bool isPlaying
		{
			[Token(Token = "0x6000AF0")]
			[Address(RVA = "0x85C188", Offset = "0x85C188", VA = "0x85C188")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x85C1A4", Offset = "0x85C1A4", VA = "0x85C1A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x85A35C", Offset = "0x85A35C", VA = "0x85A35C")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x85C3B0", Offset = "0x85C3B0", VA = "0x85C3B0")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x85A658", Offset = "0x85A658", VA = "0x85A658")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x85C3B8", Offset = "0x85C3B8", VA = "0x85C3B8")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x85C3C0", Offset = "0x85C3C0", VA = "0x85C3C0")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x85AE50", Offset = "0x85AE50", VA = "0x85AE50")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x857688", Offset = "0x857688", VA = "0x857688")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x85C3C8", Offset = "0x85C3C8", VA = "0x85C3C8")]
		public void Play()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x85C428", Offset = "0x85C428", VA = "0x85C428")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x8574DC", Offset = "0x8574DC", VA = "0x8574DC")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x85C4F0", Offset = "0x85C4F0", VA = "0x85C4F0")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x85A91C", Offset = "0x85A91C", VA = "0x85A91C")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x85AB5C", Offset = "0x85AB5C", VA = "0x85AB5C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x857A2C", Offset = "0x857A2C", VA = "0x857A2C")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x85C548", Offset = "0x85C548", VA = "0x85C548")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x85C574", Offset = "0x85C574", VA = "0x85C574")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA718", Offset = "0x5CA718")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x85C630", Offset = "0x85C630", VA = "0x85C630")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x857E28", Offset = "0x857E28", VA = "0x857E28")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x857EA4", Offset = "0x857EA4", VA = "0x857EA4")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x857CD8", Offset = "0x857CD8", VA = "0x857CD8")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x857B24", Offset = "0x857B24", VA = "0x857B24")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x85C698", Offset = "0x85C698", VA = "0x85C698")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA77C", Offset = "0x5CA77C")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x85C71C", Offset = "0x85C71C", VA = "0x85C71C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA7E0", Offset = "0x5CA7E0")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x85C81C", Offset = "0x85C81C", VA = "0x85C81C")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000147")]
	public enum SoundFXNext
	{
		[Token(Token = "0x400079C")]
		Random,
		[Token(Token = "0x400079D")]
		Sequential
	}
	[Token(Token = "0x2000148")]
	public enum FreqHint
	{
		[Token(Token = "0x400079F")]
		None,
		[Token(Token = "0x40007A0")]
		Wide,
		[Token(Token = "0x40007A1")]
		Narrow
	}
	[Token(Token = "0x2000149")]
	public enum SoundPriority
	{
		[Token(Token = "0x40007A3")]
		VeryLow = -2,
		[Token(Token = "0x40007A4")]
		Low,
		[Token(Token = "0x40007A5")]
		Default,
		[Token(Token = "0x40007A6")]
		High,
		[Token(Token = "0x40007A7")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x200014A")]
	public class OSPProps
	{
		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5838", Offset = "0x5C5838")]
		public bool enableSpatialization;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5870", Offset = "0x5C5870")]
		public bool useFastOverride;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C58A8", Offset = "0x5C58A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C58A8", Offset = "0x5C58A8")]
		public float gain;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C58FC", Offset = "0x5C58FC")]
		public bool enableInvSquare;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5934", Offset = "0x5C5934")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C5934", Offset = "0x5C5934")]
		public float volumetric;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C598C", Offset = "0x5C598C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x5C598C", Offset = "0x5C598C")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x85BEE8", Offset = "0x85BEE8", VA = "0x85BEE8")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014B")]
	public class SoundFX
	{
		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C59EC", Offset = "0x5C59EC")]
		public string name;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5A24", Offset = "0x5C5A24")]
		public SoundFXNext playback;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5A5C", Offset = "0x5C5A5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C5A5C", Offset = "0x5C5A5C")]
		public float volume;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5AB0", Offset = "0x5C5AB0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x5C5AB0", Offset = "0x5C5AB0")]
		public Vector2 pitchVariance;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5B0C", Offset = "0x5C5B0C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x5C5B0C", Offset = "0x5C5B0C")]
		public Vector2 falloffDistance;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5B6C", Offset = "0x5C5B6C")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5BA4", Offset = "0x5C5BA4")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5BDC", Offset = "0x5C5BDC")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5C14", Offset = "0x5C5C14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C5C14", Offset = "0x5C5C14")]
		public float spread;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5C6C", Offset = "0x5C5C6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C5C6C", Offset = "0x5C5C6C")]
		public float pctChanceToPlay;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5CC0", Offset = "0x5C5CC0")]
		public SoundPriority priority;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5CF8", Offset = "0x5C5CF8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x5C5CF8", Offset = "0x5C5CF8")]
		public Vector2 delay;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5D54", Offset = "0x5C5D54")]
		public bool looping;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5D8C", Offset = "0x5C5D8C")]
		public AudioClip[] soundClips;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x1700017A")]
		public int Length
		{
			[Token(Token = "0x6000B0C")]
			[Address(RVA = "0x85CE48", Offset = "0x85CE48", VA = "0x85CE48")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700017B")]
		public bool IsValid
		{
			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0x85CE64", Offset = "0x85CE64", VA = "0x85CE64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017C")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000B0E")]
			[Address(RVA = "0x85CF08", Offset = "0x85CF08", VA = "0x85CF08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0x85CF10", Offset = "0x85CF10", VA = "0x85CF10")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000B10")]
			[Address(RVA = "0x85A264", Offset = "0x85A264", VA = "0x85A264")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017E")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0x85A298", Offset = "0x85A298", VA = "0x85A298")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x85B7F8", Offset = "0x85B7F8", VA = "0x85B7F8")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x85A194", Offset = "0x85A194", VA = "0x85A194")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x85A2BC", Offset = "0x85A2BC", VA = "0x85A2BC")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x85A270", Offset = "0x85A270", VA = "0x85A270")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x85CF38", Offset = "0x85CF38", VA = "0x85CF38")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x85A2B0", Offset = "0x85A2B0", VA = "0x85A2B0")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x85D034", Offset = "0x85D034", VA = "0x85D034")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x85D110", Offset = "0x85D110", VA = "0x85D110")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x85D224", Offset = "0x85D224", VA = "0x85D224")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x85D2B0", Offset = "0x85D2B0", VA = "0x85D2B0")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x85D344", Offset = "0x85D344", VA = "0x85D344")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x85D3D0", Offset = "0x85D3D0", VA = "0x85D3D0")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x85D45C", Offset = "0x85D45C", VA = "0x85D45C")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014C")]
	public class SoundFXRef
	{
		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x1700017F")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000B1E")]
			[Address(RVA = "0x85D4D4", Offset = "0x85D4D4", VA = "0x85D4D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		public string name
		{
			[Token(Token = "0x6000B1F")]
			[Address(RVA = "0x85D5C8", Offset = "0x85D5C8", VA = "0x85D5C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B20")]
			[Address(RVA = "0x85D5D0", Offset = "0x85D5D0", VA = "0x85D5D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public int Length
		{
			[Token(Token = "0x6000B22")]
			[Address(RVA = "0x85D5D8", Offset = "0x85D5D8", VA = "0x85D5D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000182")]
		public bool IsValid
		{
			[Token(Token = "0x6000B23")]
			[Address(RVA = "0x85D61C", Offset = "0x85D61C", VA = "0x85D61C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x85D504", Offset = "0x85D504", VA = "0x85D504")]
		private void Init()
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x85D654", Offset = "0x85D654", VA = "0x85D654")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x85D68C", Offset = "0x85D68C", VA = "0x85D68C")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x85D6CC", Offset = "0x85D6CC", VA = "0x85D6CC")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x854F98", Offset = "0x854F98", VA = "0x854F98")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x85D714", Offset = "0x85D714", VA = "0x85D714")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x85D754", Offset = "0x85D754", VA = "0x85D754")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x85D7A4", Offset = "0x85D7A4", VA = "0x85D7A4")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x85D7DC", Offset = "0x85D7DC", VA = "0x85D7DC")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x85D81C", Offset = "0x85D81C", VA = "0x85D81C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x85D854", Offset = "0x85D854", VA = "0x85D854")]
		public SoundFXRef()
		{
		}
	}
}
namespace Nikakudori.Common
{
	[Token(Token = "0x200014D")]
	public class NikaDefines
	{
		[Token(Token = "0x40007C4")]
		public const bool DEBUG_MODE = false;

		[Token(Token = "0x40007C5")]
		public const string STR_COPYRIGHTS = "Copyright (C) 2018-2021 DazzleSystem Co.,Ltd., All Rights Reserved.";

		[Token(Token = "0x40007C6")]
		public const float SCREEN_WIDTH = 1024f;

		[Token(Token = "0x40007C7")]
		public const float SCREEN_HEIGHT = 768f;

		[Token(Token = "0x40007C8")]
		public const float DELAY_DIALOG_NEXTEXEC = 0.2f;

		[Token(Token = "0x40007C9")]
		public const float Z_POS_DETAIL_INFO_PANEL = -100f;

		[Token(Token = "0x40007CA")]
		public const float ALPHA_DETAIL_INFO_PANEL = 0.9f;

		[Token(Token = "0x40007CB")]
		public const int MAX_LEVEL_PATTERN = 3;

		[Token(Token = "0x40007CC")]
		public const int MAX_STAGE_PATTERN = 6;

		[Token(Token = "0x40007CD")]
		public const int MAX_STAGE_PART = 18;

		[Token(Token = "0x40007CE")]
		public const int MAX_STAR_COUNT = 54;

		[Token(Token = "0x40007CF")]
		public const int MAX_PAI = 68;

		[Token(Token = "0x40007D0")]
		public const int MIN_PAI = 20;

		[Token(Token = "0x40007D1")]
		public const int INFINITY_ITEM = 99;

		[Token(Token = "0x40007D2")]
		public const int MAX_SCORE = 30;

		[Token(Token = "0x40007D3")]
		public const int MAX_TIMEMETER = 30;

		[Token(Token = "0x40007D4")]
		public const int NON_SCORE = -9999;

		[Token(Token = "0x40007D5")]
		public const int MIN_SCORE = -9999;

		[Token(Token = "0x40007D6")]
		public const int SCORE_PENALTY = -100;

		[Token(Token = "0x40007D7")]
		public const int CNT_PENALTY = 10;

		[Token(Token = "0x40007D8")]
		public const int PAI_COUNT_ALL = 34;

		[Token(Token = "0x40007D9")]
		public const float PAI_HEIGHT = 0.256f;

		[Token(Token = "0x40007DA")]
		public const float PAI_WIDTH = 0.186f;

		[Token(Token = "0x40007DB")]
		public const float PAI_SPHERE_SIZE = 24f;

		[Token(Token = "0x40007DC")]
		public const int PAI_ID_NONE = 99;

		[Token(Token = "0x40007DD")]
		public const float PAI_ZOOM = 1.2f;

		[Token(Token = "0x40007DE")]
		public const int PAI_GIVEUP_COLLISION_FREQ = 10;

		[Token(Token = "0x40007DF")]
		public const int STAR_1_SCORE = 0;

		[Token(Token = "0x40007E0")]
		public const int STAR_2_SCORE = 10;

		[Token(Token = "0x40007E1")]
		public const int STAR_3_SCORE = 20;

		[Token(Token = "0x40007E2")]
		public const string INIT_SCORE = "-----";

		[Token(Token = "0x40007E3")]
		public const string INIT_TIME = "--:--";

		[Token(Token = "0x40007E4")]
		public const string INIT_RATE = "-.--%";

		[Token(Token = "0x40007E5")]
		public const string INIT_PLAY_TIME = "0:00";

		[Token(Token = "0x40007E6")]
		public const string INIT_DATE_AND_TIME = "----/--/-- --:--:--";

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x965F70", Offset = "0x965F70", VA = "0x965F70")]
		public NikaDefines()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class NikaNotification
	{
		[Token(Token = "0x40007E7")]
		public const string POST_BACK_KEYDOWN = "OnBackKeyDown";

		[Token(Token = "0x40007E8")]
		public const string POST_LEFT_SWIPE = "OnLeftSwipe";

		[Token(Token = "0x40007E9")]
		public const string POST_RIGHT_SWIPE = "OnRightSwipe";

		[Token(Token = "0x40007EA")]
		public const string POST_TOUCH_ENABLED = "OnTouchEnabled";

		[Token(Token = "0x40007EB")]
		public const string POST_TOUCH_DISABLED = "OnTouchDisabled";

		[Token(Token = "0x40007EC")]
		public const string POST_PREFMODEL_CHANGE = "OnPrefModelChange";

		[Token(Token = "0x40007ED")]
		public const string POST_GAME_INIT = "OnGameInit";

		[Token(Token = "0x40007EE")]
		public const string POST_GAME_START = "OnGameStart";

		[Token(Token = "0x40007EF")]
		public const string POST_GAME_RUN = "OnGameRun";

		[Token(Token = "0x40007F0")]
		public const string POST_GAME_STOP = "OnGameStop";

		[Token(Token = "0x40007F1")]
		public const string POST_GAME_FINISH = "OnGameFinish";

		[Token(Token = "0x40007F2")]
		public const string POST_GAME_TIMEOUT = "OnGameTimeOut";

		[Token(Token = "0x40007F3")]
		public const string POST_GAMEMODE_CHANGE = "OnGameModeChange";

		[Token(Token = "0x40007F4")]
		public const string POST_GIVEUP_CONFIRM_ALERT = "OnGiveupConfirmAlert";

		[Token(Token = "0x40007F5")]
		public const string POST_GIVEUP_CONFIRM_OFF = "OnGiveupConfirmOff";

		[Token(Token = "0x40007F6")]
		public const string POST_ITEM_USED = "OnItemUsed";

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x965F88", Offset = "0x965F88", VA = "0x965F88")]
		public NikaNotification()
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class NikaKeys
	{
		[Token(Token = "0x40007F7")]
		public const string PLAYER_PREF_DATA = "Nikakudori.DataModel";

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x965F78", Offset = "0x965F78", VA = "0x965F78")]
		public NikaKeys()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class NikaLayers
	{
		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x965F80", Offset = "0x965F80", VA = "0x965F80")]
		public NikaLayers()
		{
		}
	}
	[Token(Token = "0x2000151")]
	public class NikaTags
	{
		[Token(Token = "0x40007F8")]
		public const string Tag_PaiObject = "Pai";

		[Token(Token = "0x40007F9")]
		public const string Tag_InitDisable = "Init_Disable";

		[Token(Token = "0x40007FA")]
		public const string Tag_TitlePanel = "TitlePanel";

		[Token(Token = "0x40007FB")]
		public const string Tag_GamePanel = "GamePanel";

		[Token(Token = "0x40007FC")]
		public const string Tag_DiceRolling = "DiceRolling";

		[Token(Token = "0x40007FD")]
		public const string Tag_PaiTable = "PaiTable";

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x965F90", Offset = "0x965F90", VA = "0x965F90")]
		public NikaTags()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class NikaColors
	{
		[Token(Token = "0x40007FE")]
		public const string Color_Current = "#99CCFFDD";

		[Token(Token = "0x40007FF")]
		public const string Color_Highlight = "#EEEEAA88";

		[Token(Token = "0x4000800")]
		public const string Color_MinusScore = "#AA0000FF";

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x965F68", Offset = "0x965F68", VA = "0x965F68")]
		public NikaColors()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public enum NikaDataModelGameType
	{
		[Token(Token = "0x4000802")]
		GAMETYPE_NONE,
		[Token(Token = "0x4000803")]
		GAMETYPE_NEW,
		[Token(Token = "0x4000804")]
		GAMETYPE_CONTINUE
	}
	[Token(Token = "0x2000154")]
	public enum NikaPaiSuspendType
	{
		[Token(Token = "0x4000806")]
		SUSPEND_NONE,
		[Token(Token = "0x4000807")]
		SUSPEND_REVERSE,
		[Token(Token = "0x4000808")]
		SUSPEND_SHUFFLE
	}
	[Token(Token = "0x2000155")]
	public enum NikaGameModelLevelType
	{
		[Token(Token = "0x400080A")]
		GAME_UNKNOWN,
		[Token(Token = "0x400080B")]
		GAME_EASY,
		[Token(Token = "0x400080C")]
		GAME_NORMAL,
		[Token(Token = "0x400080D")]
		GAME_HARD
	}
	[Token(Token = "0x2000156")]
	public enum NikaGameModelSizeType
	{
		[Token(Token = "0x400080F")]
		STAGE_1ST_40,
		[Token(Token = "0x4000810")]
		STAGE_2ND_56,
		[Token(Token = "0x4000811")]
		STAGE_3RD_72,
		[Token(Token = "0x4000812")]
		STAGE_4TH_96,
		[Token(Token = "0x4000813")]
		STAGE_5TH_112,
		[Token(Token = "0x4000814")]
		STAGE_6TH_136
	}
	[Token(Token = "0x2000157")]
	public enum NikaGameModelStatusType
	{
		[Token(Token = "0x4000816")]
		GAME_NONE = -1,
		[Token(Token = "0x4000817")]
		GAME_INIT,
		[Token(Token = "0x4000818")]
		GAME_START,
		[Token(Token = "0x4000819")]
		GAME_RUN,
		[Token(Token = "0x400081A")]
		GAME_STOP,
		[Token(Token = "0x400081B")]
		GAME_FINISH
	}
	[Token(Token = "0x2000158")]
	public enum NikaGameModelModeType
	{
		[Token(Token = "0x400081D")]
		MODE_NONE = -1,
		[Token(Token = "0x400081E")]
		MODE_INIT,
		[Token(Token = "0x400081F")]
		MODE_NORMAL,
		[Token(Token = "0x4000820")]
		MODE_SEARCH,
		[Token(Token = "0x4000821")]
		MODE_SWAP,
		[Token(Token = "0x4000822")]
		MODE_BOMB,
		[Token(Token = "0x4000823")]
		MODE_SHUFFLE_DIALOG,
		[Token(Token = "0x4000824")]
		MODE_SHUFFLE,
		[Token(Token = "0x4000825")]
		MODE_STALEMATE,
		[Token(Token = "0x4000826")]
		MODE_PAUSE,
		[Token(Token = "0x4000827")]
		MODE_FINISH
	}
	[Token(Token = "0x2000159")]
	public enum NikaGameModelTimeMeterType
	{
		[Token(Token = "0x4000829")]
		TIME_METER_STOP,
		[Token(Token = "0x400082A")]
		TIME_METER_INIT,
		[Token(Token = "0x400082B")]
		TIME_METER_CONT,
		[Token(Token = "0x400082C")]
		TIME_METER_MOVE,
		[Token(Token = "0x400082D")]
		TIME_METER_FULL,
		[Token(Token = "0x400082E")]
		TIME_METER_PENALTY
	}
	[Token(Token = "0x200015A")]
	public enum NikaAppendChangeType
	{
		[Token(Token = "0x4000830")]
		APPEND_ALL,
		[Token(Token = "0x4000831")]
		APPEND_COUNTDOWN,
		[Token(Token = "0x4000832")]
		APPEND_PENALTY
	}
	[Token(Token = "0x200015B")]
	public enum NikaPaiSelectModeType
	{
		[Token(Token = "0x4000834")]
		SELECT_EFFECT_NONE,
		[Token(Token = "0x4000835")]
		SELECT_EFFECT_TWEEN
	}
	[Token(Token = "0x200015C")]
	public enum NikaPaiEffectModeType
	{
		[Token(Token = "0x4000837")]
		EFFECT_REVOKE_PAI,
		[Token(Token = "0x4000838")]
		EFFECT_SELECT_PAI,
		[Token(Token = "0x4000839")]
		EFFECT_SELECT_SWAP,
		[Token(Token = "0x400083A")]
		EFFECT_TURN_PAI,
		[Token(Token = "0x400083B")]
		EFFECT_ROUTE_PAI,
		[Token(Token = "0x400083C")]
		EFFECT_SWAP_PAI,
		[Token(Token = "0x400083D")]
		EFFECT_SWAP_PAI_END,
		[Token(Token = "0x400083E")]
		EFFECT_BOMB_PAI_IGNITION,
		[Token(Token = "0x400083F")]
		EFFECT_BOMB_PAI_EXPLOSION,
		[Token(Token = "0x4000840")]
		EFFECT_BOMB_PAI_END,
		[Token(Token = "0x4000841")]
		EFFECT_DESTROY,
		[Token(Token = "0x4000842")]
		EFFECT_MODE_NORMAL
	}
	[Token(Token = "0x200015D")]
	public enum NikaSnd_SE
	{
		[Token(Token = "0x4000844")]
		SND_NONE = -1,
		[Token(Token = "0x4000845")]
		SND_BlockPai_Chenge,
		[Token(Token = "0x4000846")]
		SND_Change,
		[Token(Token = "0x4000847")]
		SND_Explosion,
		[Token(Token = "0x4000848")]
		SND_GameClear,
		[Token(Token = "0x4000849")]
		SND_GameOpening,
		[Token(Token = "0x400084A")]
		SND_GetStar,
		[Token(Token = "0x400084B")]
		SND_ItemUsed,
		[Token(Token = "0x400084C")]
		SND_SelectPai,
		[Token(Token = "0x400084D")]
		SND_ShufflePai,
		[Token(Token = "0x400084E")]
		SND_SwapPai,
		[Token(Token = "0x400084F")]
		SND_SwapPai_End,
		[Token(Token = "0x4000850")]
		SND_Switch_01,
		[Token(Token = "0x4000851")]
		SND_Switch_02,
		[Token(Token = "0x4000852")]
		SND_Switch_03,
		[Token(Token = "0x4000853")]
		SND_Switch_04,
		[Token(Token = "0x4000854")]
		SND_Switch_05,
		[Token(Token = "0x4000855")]
		SND_SwitchTapped,
		[Token(Token = "0x4000856")]
		SND_TimeMeter_down1,
		[Token(Token = "0x4000857")]
		SND_TimeMeter_down2,
		[Token(Token = "0x4000858")]
		SND_TimeMeter_Over,
		[Token(Token = "0x4000859")]
		SND_Transition_01,
		[Token(Token = "0x400085A")]
		SND_Transition_02,
		[Token(Token = "0x400085B")]
		SND_Transition_03,
		[Token(Token = "0x400085C")]
		SND_Transition_PageCurl,
		[Token(Token = "0x400085D")]
		SND_Transition_Scene_01,
		[Token(Token = "0x400085E")]
		SND_UnMatchPai,
		[Token(Token = "0x400085F")]
		SND_ZoomDetailPanel,
		[Token(Token = "0x4000860")]
		SND_TezumariVoice,
		[Token(Token = "0x4000861")]
		SND_BurningBomb,
		[Token(Token = "0x4000862")]
		SND_PaiBreak,
		[Token(Token = "0x4000863")]
		SND_StageClear_Fanfare,
		[Token(Token = "0x4000864")]
		SND_StarGet_01,
		[Token(Token = "0x4000865")]
		SND_StarGet_02
	}
	[Token(Token = "0x200015E")]
	public enum NikaSnd_BGM
	{
		[Token(Token = "0x4000867")]
		SND_BGM_01
	}
	[Token(Token = "0x200015F")]
	public enum NikaSnd_Voice
	{

	}
}
namespace UMT
{
	[Token(Token = "0x2000160")]
	public static class ExponentialDistribution
	{
		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xA03958", Offset = "0xA03958", VA = "0xA03958")]
		public static float Normalize(float randx, float lambda)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000161")]
	public static class GammaDistribution
	{
		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xA03A08", Offset = "0xA03A08", VA = "0xA03A08")]
		public static float Normalize(ref MersenneTwister _rand, int ia)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000162")]
	public class MersenneTwister : System.Random
	{
		[Token(Token = "0x4000869")]
		private const int N = 624;

		[Token(Token = "0x400086A")]
		private const int M = 397;

		[Token(Token = "0x400086B")]
		private const uint MatrixA = 2567483615u;

		[Token(Token = "0x400086C")]
		private const uint UpperMask = 2147483648u;

		[Token(Token = "0x400086D")]
		private const uint LowerMask = 2147483647u;

		[Token(Token = "0x400086E")]
		private const uint TemperingMaskB = 2636928640u;

		[Token(Token = "0x400086F")]
		private const uint TemperingMaskC = 4022730752u;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly uint[] _mt;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private short _mti;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly uint[] _mag01;

		[Token(Token = "0x4000873")]
		private const double FiftyThreeBitsOf1s = 9007199254740991.0;

		[Token(Token = "0x4000874")]
		private const double Inverse53BitsOf1s = 1.1102230246251568E-16;

		[Token(Token = "0x4000875")]
		private const double OnePlus53BitsOf1s = 9007199254740992.0;

		[Token(Token = "0x4000876")]
		private const double InverseOnePlus53BitsOf1s = 1.1102230246251565E-16;

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xA03C6C", Offset = "0xA03C6C", VA = "0xA03C6C")]
		public MersenneTwister(int seed)
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xA03D94", Offset = "0xA03D94", VA = "0xA03D94")]
		public MersenneTwister()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xA03E10", Offset = "0xA03E10", VA = "0xA03E10")]
		public MersenneTwister(int[] initKey)
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xA04104", Offset = "0xA04104", VA = "0xA04104", Slot = "10")]
		public virtual uint NextUInt32()
		{
			return default(uint);
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xA04408", Offset = "0xA04408", VA = "0xA04408", Slot = "11")]
		public virtual uint NextUInt32(uint maxValue)
		{
			return default(uint);
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xA04444", Offset = "0xA04444", VA = "0xA04444", Slot = "12")]
		public virtual uint NextUInt32(uint minValue, uint maxValue)
		{
			return default(uint);
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xA044F8", Offset = "0xA044F8", VA = "0xA044F8", Slot = "5")]
		public override int Next()
		{
			return default(int);
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xA04508", Offset = "0xA04508", VA = "0xA04508", Slot = "7")]
		public override int Next(int maxValue)
		{
			return default(int);
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xA045B4", Offset = "0xA045B4", VA = "0xA045B4", Slot = "6")]
		public override int Next(int minValue, int maxValue)
		{
			return default(int);
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xA04650", Offset = "0xA04650", VA = "0xA04650", Slot = "9")]
		public override void NextBytes(byte[] buffer)
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xA0472C", Offset = "0xA0472C", VA = "0xA0472C", Slot = "8")]
		public override double NextDouble()
		{
			return default(double);
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xA047F0", Offset = "0xA047F0", VA = "0xA047F0")]
		public double NextDouble(bool includeOne)
		{
			return default(double);
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xA04870", Offset = "0xA04870", VA = "0xA04870")]
		public double NextDoublePositive()
		{
			return default(double);
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xA048D0", Offset = "0xA048D0", VA = "0xA048D0")]
		public float NextSingle()
		{
			return default(float);
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xA03C50", Offset = "0xA03C50", VA = "0xA03C50")]
		public float NextSingle(bool includeOne)
		{
			return default(float);
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xA048F0", Offset = "0xA048F0", VA = "0xA048F0")]
		public float NextSinglePositive()
		{
			return default(float);
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xA04108", Offset = "0xA04108", VA = "0xA04108")]
		protected uint GenerateUInt32()
		{
			return default(uint);
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xA04908", Offset = "0xA04908", VA = "0xA04908")]
		private static uint temperingShiftU(uint y)
		{
			return default(uint);
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xA04910", Offset = "0xA04910", VA = "0xA04910")]
		private static uint temperingShiftS(uint y)
		{
			return default(uint);
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xA04918", Offset = "0xA04918", VA = "0xA04918")]
		private static uint temperingShiftT(uint y)
		{
			return default(uint);
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xA04920", Offset = "0xA04920", VA = "0xA04920")]
		private static uint temperingShiftL(uint y)
		{
			return default(uint);
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xA03CE4", Offset = "0xA03CE4", VA = "0xA03CE4")]
		private void init(uint seed)
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xA03F30", Offset = "0xA03F30", VA = "0xA03F30")]
		private void init(uint[] key)
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xA0478C", Offset = "0xA0478C", VA = "0xA0478C")]
		private double compute53BitRandom(double translate, double scale)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000163")]
	public static class NormalDistribution
	{
		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xA049B8", Offset = "0xA049B8", VA = "0xA049B8")]
		public static double StdNormalCDF(double u)
		{
			return default(double);
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xA04F24", Offset = "0xA04F24", VA = "0xA04F24")]
		public static double StdNormalINV(double p)
		{
			return default(double);
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xA052F4", Offset = "0xA052F4", VA = "0xA052F4")]
		public static double Normalize(double rn, float temperature)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000164")]
	public static class PoissonDistribution
	{
		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static double[] cof;

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xA05384", Offset = "0xA05384", VA = "0xA05384")]
		public static double gammln(double xx)
		{
			return default(double);
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xA054D4", Offset = "0xA054D4", VA = "0xA054D4")]
		public static float Normalize(ref MersenneTwister _rand, float xm)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000165")]
	public static class PowerLaw
	{
		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xA057E0", Offset = "0xA057E0", VA = "0xA057E0")]
		public static double Normalize(float x, float t, float min, float max)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000166")]
	public static class RandomCube
	{
		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xA058D0", Offset = "0xA058D0", VA = "0xA058D0")]
		public static Vector3 Surface(ref MersenneTwister _rand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xA05A34", Offset = "0xA05A34", VA = "0xA05A34")]
		public static Vector3 Surface(ref MersenneTwister _rand, MTRandom.Normalization n, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xA05988", Offset = "0xA05988", VA = "0xA05988")]
		private static Vector3 GetPointOnCubeSurface(float xx, float yy, int side)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xA05BB8", Offset = "0xA05BB8", VA = "0xA05BB8")]
		public static Vector3 Volume(ref MersenneTwister _rand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xA05C84", Offset = "0xA05C84", VA = "0xA05C84")]
		public static Vector3 Volume(ref MersenneTwister _rand, MTRandom.Normalization n, float t)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000167")]
	public static class RandomDisk
	{
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xA05E2C", Offset = "0xA05E2C", VA = "0xA05E2C")]
		public static Vector2 Circle(ref MersenneTwister _rand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xA05F14", Offset = "0xA05F14", VA = "0xA05F14")]
		public static Vector2 Circle(ref MersenneTwister _rand, MTRandom.Normalization n, float t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xA06084", Offset = "0xA06084", VA = "0xA06084")]
		public static Vector2 Disk(ref MersenneTwister _rand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xA061AC", Offset = "0xA061AC", VA = "0xA061AC")]
		public static Vector2 Disk(ref MersenneTwister _rand, MTRandom.Normalization n, float temp)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000168")]
	public static class RandomSphere
	{
		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xA06394", Offset = "0xA06394", VA = "0xA06394")]
		public static Vector3 Surface(ref MersenneTwister _rand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xA065D8", Offset = "0xA065D8", VA = "0xA065D8")]
		public static Vector3 Volume(ref MersenneTwister _rand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xA063FC", Offset = "0xA063FC", VA = "0xA063FC")]
		private static Vector3 PickCubePoints(ref MersenneTwister _rand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xA06640", Offset = "0xA06640", VA = "0xA06640")]
		private static bool isNotInsideSphere(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xA064E0", Offset = "0xA064E0", VA = "0xA064E0")]
		private static bool IsNotOnSurface(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xA06504", Offset = "0xA06504", VA = "0xA06504")]
		private static Vector3 Normalize(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xA06664", Offset = "0xA06664", VA = "0xA06664")]
		public static Vector3 GetPointOnCap(float spotAngle, ref MersenneTwister _rand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xA067F4", Offset = "0xA067F4", VA = "0xA067F4")]
		public static Vector3 GetPointOnCap(float spotAngle, ref MersenneTwister _rand, Quaternion orientation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xA068C0", Offset = "0xA068C0", VA = "0xA068C0")]
		public static Vector3 GetPointOnCap(float spotAngle, ref MersenneTwister _rand, Transform relativeTo, float radius)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xA06984", Offset = "0xA06984", VA = "0xA06984")]
		public static Vector3 GetPointOnRing(float innerSpotAngle, float outerSpotAngle, ref MersenneTwister _rand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xA06B18", Offset = "0xA06B18", VA = "0xA06B18")]
		public static Vector3 GetPointOnRing(float innerSpotAngle, float outerSpotAngle, ref MersenneTwister _rand, Quaternion orientation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xA06BEC", Offset = "0xA06BEC", VA = "0xA06BEC")]
		public static Vector3 GetPointOnRing(float innerSpotAngle, float outerSpotAngle, ref MersenneTwister _rand, Transform relativeTo, float radius)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000169")]
	public static class RandomSquare
	{
		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xA06CB8", Offset = "0xA06CB8", VA = "0xA06CB8")]
		public static Vector2 Area(ref MersenneTwister _rand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xA06D38", Offset = "0xA06D38", VA = "0xA06D38")]
		public static Vector2 Area(ref MersenneTwister _rand, MTRandom.Normalization n, float t)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x200016A")]
	public class WaveToRgb
	{
		[Token(Token = "0x4000878")]
		public const float MinVisibleWaveLength = 350f;

		[Token(Token = "0x4000879")]
		public const float MaxVisibleWaveLength = 650f;

		[Token(Token = "0x400087A")]
		public const float Gamma = 0.8f;

		[Token(Token = "0x400087B")]
		public const int IntesityMax = 255;

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xA06E5C", Offset = "0xA06E5C", VA = "0xA06E5C")]
		public static Color LinearToRgb(float linearvalue)
		{
			return default(Color);
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xA06E78", Offset = "0xA06E78", VA = "0xA06E78")]
		private static float GetWaveLengthFromDataPoint(float x, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xA07190", Offset = "0xA07190", VA = "0xA07190")]
		private static int Adjust(float color, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xA06EA0", Offset = "0xA06EA0", VA = "0xA06EA0")]
		private static Color WaveLengthToRgb(float wave)
		{
			return default(Color);
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xA072A0", Offset = "0xA072A0", VA = "0xA072A0")]
		public WaveToRgb()
		{
		}
	}
}
namespace DentedPixel.LTExamples
{
	[Token(Token = "0x200016B")]
	public class PathBezier : MonoBehaviour
	{
		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] trans;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LTBezierPath cr;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject avatar1;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float iter;

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x89F3C0", Offset = "0x89F3C0", VA = "0x89F3C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x89F610", Offset = "0x89F610", VA = "0x89F610")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x89F79C", Offset = "0x89F79C", VA = "0x89F79C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x89F7F0", Offset = "0x89F7F0", VA = "0x89F7F0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x89F848", Offset = "0x89F848", VA = "0x89F848")]
		public PathBezier()
		{
		}
	}
	[Token(Token = "0x200016C")]
	public class TestingUnitTests : MonoBehaviour
	{
		[Token(Token = "0x20002BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D18", Offset = "0x5C2D18")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4000E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x4000E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject[] cubes;

			[Token(Token = "0x4000E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int[] tweenIds;

			[Token(Token = "0x4000E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int onCompleteCount;

			[Token(Token = "0x4000E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject cubeToTrans;

			[Token(Token = "0x4000E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 cubeDestEnd;

			[Token(Token = "0x4000E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject cubeSpline;

			[Token(Token = "0x4000E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int jumpTimeId;

			[Token(Token = "0x4000E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public GameObject jumpCube;

			[Token(Token = "0x4000E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public GameObject zeroCube;

			[Token(Token = "0x4000E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public GameObject cubeScale;

			[Token(Token = "0x4000E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public GameObject cubeRotate;

			[Token(Token = "0x4000E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public GameObject cubeRotateA;

			[Token(Token = "0x4000E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public GameObject cubeRotateB;

			[Token(Token = "0x4000E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public float onStartTime;

			[Token(Token = "0x4000E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public Vector3 beforePos;

			[Token(Token = "0x4000E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public Vector3 beforePos2;

			[Token(Token = "0x4000E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public int totalEasingCheck;

			[Token(Token = "0x4000E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public int totalEasingCheckSuccess;

			[Token(Token = "0x4000E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			public bool value2UpdateCalled;

			[Token(Token = "0x4000E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Action <>9__21;

			[Token(Token = "0x600117B")]
			[Address(RVA = "0x904E74", Offset = "0x904E74", VA = "0x904E74")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x600117C")]
			[Address(RVA = "0x904E7C", Offset = "0x904E7C", VA = "0x904E7C")]
			internal void <Start>b__0()
			{
			}

			[Token(Token = "0x600117D")]
			[Address(RVA = "0x904F30", Offset = "0x904F30", VA = "0x904F30")]
			internal void <Start>b__1()
			{
			}

			[Token(Token = "0x600117E")]
			[Address(RVA = "0x905104", Offset = "0x905104", VA = "0x905104")]
			internal void <Start>b__21()
			{
			}

			[Token(Token = "0x600117F")]
			[Address(RVA = "0x90519C", Offset = "0x90519C", VA = "0x90519C")]
			internal void <Start>b__2()
			{
			}

			[Token(Token = "0x6001180")]
			[Address(RVA = "0x9052A8", Offset = "0x9052A8", VA = "0x9052A8")]
			internal void <Start>b__4()
			{
			}

			[Token(Token = "0x6001181")]
			[Address(RVA = "0x9053D4", Offset = "0x9053D4", VA = "0x9053D4")]
			internal void <Start>b__5()
			{
			}

			[Token(Token = "0x6001182")]
			[Address(RVA = "0x9055B4", Offset = "0x9055B4", VA = "0x9055B4")]
			internal void <Start>b__6()
			{
			}

			[Token(Token = "0x6001183")]
			[Address(RVA = "0x9056BC", Offset = "0x9056BC", VA = "0x9056BC")]
			internal void <Start>b__8()
			{
			}

			[Token(Token = "0x6001184")]
			[Address(RVA = "0x9058C0", Offset = "0x9058C0", VA = "0x9058C0")]
			internal void <Start>b__9()
			{
			}

			[Token(Token = "0x6001185")]
			[Address(RVA = "0x905AC8", Offset = "0x905AC8", VA = "0x905AC8")]
			internal void <Start>b__10()
			{
			}

			[Token(Token = "0x6001186")]
			[Address(RVA = "0x905CD0", Offset = "0x905CD0", VA = "0x905CD0")]
			internal void <Start>b__11()
			{
			}

			[Token(Token = "0x6001187")]
			[Address(RVA = "0x905F80", Offset = "0x905F80", VA = "0x905F80")]
			internal void <Start>b__13(object completeObj)
			{
			}

			[Token(Token = "0x6001188")]
			[Address(RVA = "0x9060A8", Offset = "0x9060A8", VA = "0x9060A8")]
			internal void <Start>b__14()
			{
			}

			[Token(Token = "0x6001189")]
			[Address(RVA = "0x906358", Offset = "0x906358", VA = "0x906358")]
			internal void <Start>b__15()
			{
			}

			[Token(Token = "0x600118A")]
			[Address(RVA = "0x906380", Offset = "0x906380", VA = "0x906380")]
			internal void <Start>b__16()
			{
			}

			[Token(Token = "0x600118B")]
			[Address(RVA = "0x906464", Offset = "0x906464", VA = "0x906464")]
			internal void <Start>b__17()
			{
			}

			[Token(Token = "0x600118C")]
			[Address(RVA = "0x9067C0", Offset = "0x9067C0", VA = "0x9067C0")]
			internal void <Start>b__19(Vector2 value)
			{
			}

			[Token(Token = "0x600118D")]
			[Address(RVA = "0x9067CC", Offset = "0x9067CC", VA = "0x9067CC")]
			internal void <Start>b__20()
			{
			}
		}

		[Token(Token = "0x20002BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D28", Offset = "0x5C2D28")]
		private sealed class <>c__DisplayClass22_1
		{
			[Token(Token = "0x4000E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float beforeX;

			[Token(Token = "0x4000E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass22_0 CS$<>8__locals1;

			[Token(Token = "0x600118E")]
			[Address(RVA = "0x9055AC", Offset = "0x9055AC", VA = "0x9055AC")]
			public <>c__DisplayClass22_1()
			{
			}

			[Token(Token = "0x600118F")]
			[Address(RVA = "0x90684C", Offset = "0x90684C", VA = "0x90684C")]
			internal void <Start>b__23()
			{
			}
		}

		[Token(Token = "0x20002BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D38", Offset = "0x5C2D38")]
		private sealed class <>c__DisplayClass22_2
		{
			[Token(Token = "0x4000E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int totalTweenTypeLength;

			[Token(Token = "0x4000E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass22_0 CS$<>8__locals2;

			[Token(Token = "0x4000E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<object> <>9__24;

			[Token(Token = "0x6001190")]
			[Address(RVA = "0x906BC8", Offset = "0x906BC8", VA = "0x906BC8")]
			public <>c__DisplayClass22_2()
			{
			}

			[Token(Token = "0x6001191")]
			[Address(RVA = "0x906BD0", Offset = "0x906BD0", VA = "0x906BD0")]
			internal void <Start>b__24(object obj)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D48", Offset = "0x5C2D48")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__22_3;

			[Token(Token = "0x4000E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__22_22;

			[Token(Token = "0x4000E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action <>9__22_7;

			[Token(Token = "0x4000E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<float> <>9__22_12;

			[Token(Token = "0x4000E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action <>9__22_18;

			[Token(Token = "0x4000E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Action <>9__26_0;

			[Token(Token = "0x6001193")]
			[Address(RVA = "0x904C64", Offset = "0x904C64", VA = "0x904C64")]
			public <>c()
			{
			}

			[Token(Token = "0x6001194")]
			[Address(RVA = "0x904C6C", Offset = "0x904C6C", VA = "0x904C6C")]
			internal void <Start>b__22_3()
			{
			}

			[Token(Token = "0x6001195")]
			[Address(RVA = "0x904CE0", Offset = "0x904CE0", VA = "0x904CE0")]
			internal void <Start>b__22_22()
			{
			}

			[Token(Token = "0x6001196")]
			[Address(RVA = "0x904CE4", Offset = "0x904CE4", VA = "0x904CE4")]
			internal void <Start>b__22_7()
			{
			}

			[Token(Token = "0x6001197")]
			[Address(RVA = "0x904D58", Offset = "0x904D58", VA = "0x904D58")]
			internal void <Start>b__22_12(float val)
			{
			}

			[Token(Token = "0x6001198")]
			[Address(RVA = "0x904DDC", Offset = "0x904DDC", VA = "0x904DDC")]
			internal void <Start>b__22_18()
			{
			}

			[Token(Token = "0x6001199")]
			[Address(RVA = "0x904E68", Offset = "0x904E68", VA = "0x904E68")]
			internal void <pauseTimeNow>b__26_0()
			{
			}
		}

		[Token(Token = "0x20002C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D58", Offset = "0x5C2D58")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4000E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x4000E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int pauseCount;

			[Token(Token = "0x4000E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject cubeRound;

			[Token(Token = "0x4000E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 onStartPos;

			[Token(Token = "0x4000E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 onStartPosSpline;

			[Token(Token = "0x4000E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject cubeSpline;

			[Token(Token = "0x4000E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject cubeSeq;

			[Token(Token = "0x4000E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public GameObject cubeBounds;

			[Token(Token = "0x4000E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool didPassBounds;

			[Token(Token = "0x4000E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 failPoint;

			[Token(Token = "0x4000E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int setOnStartNum;

			[Token(Token = "0x4000E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public bool setPosOnUpdate;

			[Token(Token = "0x4000E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int setPosNum;

			[Token(Token = "0x4000E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public bool hasGroupTweensCheckStarted;

			[Token(Token = "0x4000E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public float previousXlt4;

			[Token(Token = "0x4000E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public bool onUpdateWasCalled;

			[Token(Token = "0x4000E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public float start;

			[Token(Token = "0x4000E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public float expectedTime;

			[Token(Token = "0x4000E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public bool didGetCorrectOnUpdate;

			[Token(Token = "0x4000E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Action <>9__13;

			[Token(Token = "0x4000E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public Action<Vector3> <>9__14;

			[Token(Token = "0x4000E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public Action <>9__16;

			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public Action<object> <>9__15;

			[Token(Token = "0x600119A")]
			[Address(RVA = "0x906CF0", Offset = "0x906CF0", VA = "0x906CF0")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x600119B")]
			[Address(RVA = "0x906CF8", Offset = "0x906CF8", VA = "0x906CF8")]
			internal void <timeBasedTesting>b__0()
			{
			}

			[Token(Token = "0x600119C")]
			[Address(RVA = "0x906D28", Offset = "0x906D28", VA = "0x906D28")]
			internal void <timeBasedTesting>b__1()
			{
			}

			[Token(Token = "0x600119D")]
			[Address(RVA = "0x906D58", Offset = "0x906D58", VA = "0x906D58")]
			internal void <timeBasedTesting>b__2(float val)
			{
			}

			[Token(Token = "0x600119E")]
			[Address(RVA = "0x906D68", Offset = "0x906D68", VA = "0x906D68")]
			internal void <timeBasedTesting>b__3()
			{
			}

			[Token(Token = "0x600119F")]
			[Address(RVA = "0x906FE0", Offset = "0x906FE0", VA = "0x906FE0")]
			internal void <timeBasedTesting>b__4()
			{
			}

			[Token(Token = "0x60011A0")]
			[Address(RVA = "0x907314", Offset = "0x907314", VA = "0x907314")]
			internal void <timeBasedTesting>b__5()
			{
			}

			[Token(Token = "0x60011A1")]
			[Address(RVA = "0x9074BC", Offset = "0x9074BC", VA = "0x9074BC")]
			internal void <timeBasedTesting>b__6(float val)
			{
			}

			[Token(Token = "0x60011A2")]
			[Address(RVA = "0x9075E8", Offset = "0x9075E8", VA = "0x9075E8")]
			internal void <timeBasedTesting>b__7()
			{
			}

			[Token(Token = "0x60011A3")]
			[Address(RVA = "0x907830", Offset = "0x907830", VA = "0x907830")]
			internal void <timeBasedTesting>b__13()
			{
			}

			[Token(Token = "0x60011A4")]
			[Address(RVA = "0x907840", Offset = "0x907840", VA = "0x907840")]
			internal void <timeBasedTesting>b__14(Vector3 newPosition)
			{
			}

			[Token(Token = "0x60011A5")]
			[Address(RVA = "0x907894", Offset = "0x907894", VA = "0x907894")]
			internal void <timeBasedTesting>b__15(object param)
			{
			}

			[Token(Token = "0x60011A6")]
			[Address(RVA = "0x907AE8", Offset = "0x907AE8", VA = "0x907AE8")]
			internal void <timeBasedTesting>b__16()
			{
			}

			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x907F9C", Offset = "0x907F9C", VA = "0x907F9C")]
			internal void <timeBasedTesting>b__8()
			{
			}

			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x9082A8", Offset = "0x9082A8", VA = "0x9082A8")]
			internal void <timeBasedTesting>b__9(float val)
			{
			}

			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x9082B4", Offset = "0x9082B4", VA = "0x9082B4")]
			internal void <timeBasedTesting>b__10()
			{
			}

			[Token(Token = "0x60011AA")]
			[Address(RVA = "0x908584", Offset = "0x908584", VA = "0x908584")]
			internal void <timeBasedTesting>b__11(Vector3 val)
			{
			}

			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x9085C0", Offset = "0x9085C0", VA = "0x9085C0")]
			internal void <timeBasedTesting>b__12()
			{
			}
		}

		[Token(Token = "0x20002C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D68", Offset = "0x5C2D68")]
		private sealed class <timeBasedTesting>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x4000E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass24_0 <>8__1;

			[Token(Token = "0x4000E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <descriptionMatchCount>5__2;

			[Token(Token = "0x1700029E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011AF")]
				[Address(RVA = "0x90BB00", Offset = "0x90BB00", VA = "0x90BB00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011B1")]
				[Address(RVA = "0x90BB68", Offset = "0x90BB68", VA = "0x90BB68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011AC")]
			[Address(RVA = "0x909570", Offset = "0x909570", VA = "0x909570")]
			[DebuggerHidden]
			public <timeBasedTesting>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60011AD")]
			[Address(RVA = "0x90959C", Offset = "0x90959C", VA = "0x90959C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011AE")]
			[Address(RVA = "0x9095A0", Offset = "0x9095A0", VA = "0x9095A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011B0")]
			[Address(RVA = "0x90BB08", Offset = "0x90BB08", VA = "0x90BB08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D78", Offset = "0x5C2D78")]
		private sealed class <lotsOfCancels>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x4000E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <cubeCount>5__2;

			[Token(Token = "0x4000E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int[] <tweensA>5__3;

			[Token(Token = "0x4000E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private GameObject[] <aGOs>5__4;

			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int[] <tweensB>5__5;

			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private GameObject[] <bGOs>5__6;

			[Token(Token = "0x170002A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011B5")]
				[Address(RVA = "0x90929C", Offset = "0x90929C", VA = "0x90929C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011B7")]
				[Address(RVA = "0x909304", Offset = "0x909304", VA = "0x909304", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011B2")]
			[Address(RVA = "0x908640", Offset = "0x908640", VA = "0x908640")]
			[DebuggerHidden]
			public <lotsOfCancels>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60011B3")]
			[Address(RVA = "0x90866C", Offset = "0x90866C", VA = "0x90866C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011B4")]
			[Address(RVA = "0x908670", Offset = "0x908670", VA = "0x908670", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011B6")]
			[Address(RVA = "0x9092A4", Offset = "0x9092A4", VA = "0x9092A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D88", Offset = "0x5C2D88")]
		private sealed class <pauseTimeNow>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x170002A2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011BB")]
				[Address(RVA = "0x909500", Offset = "0x909500", VA = "0x909500", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011BD")]
				[Address(RVA = "0x909568", Offset = "0x909568", VA = "0x909568", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011B8")]
			[Address(RVA = "0x90930C", Offset = "0x90930C", VA = "0x90930C")]
			[DebuggerHidden]
			public <pauseTimeNow>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x909338", Offset = "0x909338", VA = "0x909338", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011BA")]
			[Address(RVA = "0x90933C", Offset = "0x90933C", VA = "0x90933C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011BC")]
			[Address(RVA = "0x909508", Offset = "0x909508", VA = "0x909508", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject cube1;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject cube2;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject cube3;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject cube4;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject cubeAlpha1;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject cubeAlpha2;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool eventGameObjectWasCalled;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool eventGeneralWasCalled;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lt1Id;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LTDescr lt2;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LTDescr lt3;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LTDescr lt4;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private LTDescr[] groupTweens;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject[] groupGOs;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int groupTweensCnt;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int rotateRepeat;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int rotateRepeatAngle;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject boxNoCollider;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float timeElapsedNormalTimeScale;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float timeElapsedIgnoreTimeScale;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool pauseTweenDidFinish;

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x89F850", Offset = "0x89F850", VA = "0x89F850")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x89F924", Offset = "0x89F924", VA = "0x89F924")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x8A1344", Offset = "0x8A1344", VA = "0x8A1344")]
		private GameObject cubeNamed(string name)
		{
			return null;
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x8A13E4", Offset = "0x8A13E4", VA = "0x8A13E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA844", Offset = "0x5CA844")]
		private IEnumerator timeBasedTesting()
		{
			return null;
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x8A1454", Offset = "0x8A1454", VA = "0x8A1454")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA8A8", Offset = "0x5CA8A8")]
		private IEnumerator lotsOfCancels()
		{
			return null;
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x8A14C4", Offset = "0x8A14C4", VA = "0x8A14C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA90C", Offset = "0x5CA90C")]
		private IEnumerator pauseTimeNow()
		{
			return null;
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x8A1534", Offset = "0x8A1534", VA = "0x8A1534")]
		private void rotateRepeatFinished()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x8A15EC", Offset = "0x8A15EC", VA = "0x8A15EC")]
		private void rotateRepeatAllFinished()
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x8A178C", Offset = "0x8A178C", VA = "0x8A178C")]
		private void eventGameObjectCalled(LTEvent e)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x8A1798", Offset = "0x8A1798", VA = "0x8A1798")]
		private void eventGeneralCalled(LTEvent e)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x8A17A4", Offset = "0x8A17A4", VA = "0x8A17A4")]
		public TestingUnitTests()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x8A17AC", Offset = "0x8A17AC", VA = "0x8A17AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA970", Offset = "0x5CA970")]
		private void <lotsOfCancels>b__25_0()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x8A17B8", Offset = "0x8A17B8", VA = "0x8A17B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CA980", Offset = "0x5CA980")]
		private void <pauseTimeNow>b__26_1()
		{
		}
	}
}
namespace DazzleSystem.Common
{
	[Token(Token = "0x200016D")]
	public abstract class DzBaseDialog<T> : DzMonoBehaviour<T> where T : DzBaseDialog<T>
	{
		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private DzTimePauser _pauser;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isUIEnable;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isGameEnable;

		[Token(Token = "0x17000183")]
		public bool IsUIEnable
		{
			[Token(Token = "0x6000B84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B85")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public bool IsGameEnable
		{
			[Token(Token = "0x6000B86")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B87")]
			set
			{
			}
		}

		[Token(Token = "0x6000B88")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000B89")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B8A")]
		public void OnCloseButton()
		{
		}

		[Token(Token = "0x6000B8B")]
		protected DzBaseDialog()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public class DzConfig
	{
		[Token(Token = "0x20002C4")]
		public enum BuiltinLayers
		{
			[Token(Token = "0x4000E9E")]
			Default = 0,
			[Token(Token = "0x4000E9F")]
			TransparentFX = 1,
			[Token(Token = "0x4000EA0")]
			IgnoreRaycast = 2,
			[Token(Token = "0x4000EA1")]
			Water = 4,
			[Token(Token = "0x4000EA2")]
			UI = 5
		}

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string _PrefabPath;

		[Token(Token = "0x17000185")]
		public static string PrefabPath
		{
			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0x8917E0", Offset = "0x8917E0", VA = "0x8917E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0x891848", Offset = "0x891848", VA = "0x891848")]
			set
			{
			}
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x8918B4", Offset = "0x8918B4", VA = "0x8918B4")]
		public DzConfig()
		{
		}
	}
	[Token(Token = "0x200016F")]
	public class DzInitializer : DzMonoSingleton<DzInitializer>
	{
		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _condition;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _stackTrace;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _type;

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x89212C", Offset = "0x89212C", VA = "0x89212C", Slot = "7")]
		protected virtual void OnInitializeApp()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x892130", Offset = "0x892130", VA = "0x892130", Slot = "8")]
		protected virtual void OnFinalizeApp()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x892134", Offset = "0x892134", VA = "0x892134", Slot = "9")]
		protected virtual bool OnException(string condition, string stackTrace, LogType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x89213C", Offset = "0x89213C", VA = "0x89213C", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x892200", Offset = "0x892200", VA = "0x892200", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x892274", Offset = "0x892274", VA = "0x892274")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x892280", Offset = "0x892280", VA = "0x892280")]
		private void SubHandleLog(string condition, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x892350", Offset = "0x892350", VA = "0x892350")]
		private void SubQuitApplication(bool inQuitFlag)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x892548", Offset = "0x892548", VA = "0x892548")]
		public DzInitializer()
		{
		}
	}
	[Token(Token = "0x2000170")]
	public abstract class DzMonoBehaviour<T> : MonoBehaviour where T : DzMonoBehaviour<T>
	{
		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isReadyUpdate;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isPause;

		[Token(Token = "0x17000186")]
		protected bool IsReadyUpdate
		{
			[Token(Token = "0x6000B99")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B9A")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public bool IsPause
		{
			[Token(Token = "0x6000B9B")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B9C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B9D")]
		protected virtual void OnInitialize()
		{
		}

		[Token(Token = "0x6000B9E")]
		protected virtual void OnFinalize()
		{
		}

		[Token(Token = "0x6000B9F")]
		protected virtual void OnStart()
		{
		}

		[Token(Token = "0x6000BA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BA1")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BA2")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BA3")]
		protected DzMonoBehaviour()
		{
		}
	}
	[Token(Token = "0x2000171")]
	public abstract class DzMonoLocalization<T> : DzMonoBehaviour<T> where T : DzMonoLocalization<T>
	{
		[Token(Token = "0x400089E")]
		public const string POST_LOCALIZATION_CHANGE = "OnLocalizationChange";

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string _language;

		[Token(Token = "0x6000BA4")]
		protected virtual void OnLocalizationUpdate()
		{
		}

		[Token(Token = "0x6000BA5")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BA6")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BA7")]
		private void OnLocalizationChange()
		{
		}

		[Token(Token = "0x6000BA8")]
		protected DzMonoLocalization()
		{
		}
	}
	[Token(Token = "0x2000172")]
	public abstract class DzMonoObject<T> where T : DzMonoObject<T>
	{
		[Token(Token = "0x6000BA9")]
		protected virtual void OnInitialize()
		{
		}

		[Token(Token = "0x6000BAA")]
		protected virtual void OnFinalize()
		{
		}

		[Token(Token = "0x6000BAB")]
		public DzMonoObject()
		{
		}

		[Token(Token = "0x6000BAC")]
		~DzMonoObject()
		{
		}
	}
	[Token(Token = "0x2000173")]
	public abstract class DzMonoSingleton<T> : MonoBehaviour where T : DzMonoSingleton<T>
	{
		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T s_Instance;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_ApplicationIsQuitting;

		[Token(Token = "0x17000188")]
		public static T Instance
		{
			[Token(Token = "0x6000BAD")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BAE")]
		public static T InstanceWithPath(string inPath)
		{
			return null;
		}

		[Token(Token = "0x6000BAF")]
		public static T InstanceFromPrefab()
		{
			return null;
		}

		[Token(Token = "0x6000BB0")]
		public static T InstanceWithPrefab(GameObject inPrefab)
		{
			return null;
		}

		[Token(Token = "0x6000BB1")]
		public static bool IsExistsInstance()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB2")]
		private static void Initialize(T instance)
		{
		}

		[Token(Token = "0x6000BB3")]
		private static void Destroyed(T instance)
		{
		}

		[Token(Token = "0x6000BB4")]
		protected virtual void OnInitialize()
		{
		}

		[Token(Token = "0x6000BB5")]
		protected virtual void OnFinalize()
		{
		}

		[Token(Token = "0x6000BB6")]
		protected virtual void OnStart()
		{
		}

		[Token(Token = "0x6000BB7")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BB9")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BBA")]
		protected DzMonoSingleton()
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class DzNormalModalDialog : DzBaseDialog<DzNormalModalDialog>
	{
		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x89496C", Offset = "0x89496C", VA = "0x89496C", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x8949C8", Offset = "0x8949C8", VA = "0x8949C8")]
		public DzNormalModalDialog()
		{
		}
	}
	[Token(Token = "0x2000175")]
	public abstract class DzSceneLoader<T> : MonoBehaviour where T : DzSceneLoader<T>
	{
		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Enable_ResizeCamera;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ResizeCamera_Width;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ResizeCamera_Height;

		[Token(Token = "0x6000BBE")]
		protected virtual void OnInitialize()
		{
		}

		[Token(Token = "0x6000BBF")]
		protected virtual void OnFinalize()
		{
		}

		[Token(Token = "0x6000BC0")]
		protected virtual void OnStart()
		{
		}

		[Token(Token = "0x6000BC1")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BC2")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BC3")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BC4")]
		private void SubResizeCamera(float inWidth, float inHeight)
		{
		}

		[Token(Token = "0x6000BC5")]
		protected DzSceneLoader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000176")]
	public abstract class DzSerializableObject<T> where T : DzSerializableObject<T>
	{
		[Token(Token = "0x6000BC6")]
		protected virtual void OnInitialize()
		{
		}

		[Token(Token = "0x6000BC7")]
		protected virtual void OnFinalize()
		{
		}

		[Token(Token = "0x6000BC8")]
		public DzSerializableObject()
		{
		}

		[Token(Token = "0x6000BC9")]
		~DzSerializableObject()
		{
		}
	}
	[Token(Token = "0x2000177")]
	public class DzSystemModalDialog : DzBaseDialog<DzSystemModalDialog>
	{
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x89AC48", Offset = "0x89AC48", VA = "0x89AC48", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x89ACA0", Offset = "0x89ACA0", VA = "0x89ACA0")]
		public DzSystemModalDialog()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000178")]
	public class DzIntPear
	{
		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly DzIntPear Empty;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int _pear1;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int _pear2;

		[Token(Token = "0x17000189")]
		public static DzIntPear Zero
		{
			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0x8925CC", Offset = "0x8925CC", VA = "0x8925CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		public int Pear1
		{
			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0x892664", Offset = "0x892664", VA = "0x892664")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BCE")]
			[Address(RVA = "0x89266C", Offset = "0x89266C", VA = "0x89266C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		public int Pear2
		{
			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0x892674", Offset = "0x892674", VA = "0x892674")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0x89267C", Offset = "0x89267C", VA = "0x89267C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public int P1
		{
			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0x892684", Offset = "0x892684", VA = "0x892684")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0x89268C", Offset = "0x89268C", VA = "0x89268C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public int P2
		{
			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0x892694", Offset = "0x892694", VA = "0x892694")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0x89269C", Offset = "0x89269C", VA = "0x89269C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public bool IsEmpty
		{
			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0x8926A4", Offset = "0x8926A4", VA = "0x8926A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x89262C", Offset = "0x89262C", VA = "0x89262C")]
		public DzIntPear(int p1, int p2)
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x8926C4", Offset = "0x8926C4", VA = "0x8926C4")]
		public static bool operator ==(DzIntPear inPear1, DzIntPear inPear2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x892708", Offset = "0x892708", VA = "0x892708")]
		public static bool operator !=(DzIntPear inPear1, DzIntPear inPear2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x89274C", Offset = "0x89274C", VA = "0x89274C")]
		public static DzIntPear operator -(DzIntPear inPear1, DzIntPear inPear2)
		{
			return null;
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x8927DC", Offset = "0x8927DC", VA = "0x8927DC")]
		public static DzIntPear Add(DzIntPear inPear1, DzIntPear inPear2)
		{
			return null;
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x89286C", Offset = "0x89286C", VA = "0x89286C")]
		public static DzIntPear Subtract(DzIntPear inPear1, DzIntPear inPear2)
		{
			return null;
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x8928FC", Offset = "0x8928FC", VA = "0x8928FC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x89299C", Offset = "0x89299C", VA = "0x89299C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x8929A8", Offset = "0x8929A8", VA = "0x8929A8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000179")]
	public class DzMinMaxValues
	{
		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float _minValue;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float _maxValue;

		[Token(Token = "0x1700018F")]
		public static DzMinMaxValues Zero
		{
			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0x894130", Offset = "0x894130", VA = "0x894130")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		public float MinValue
		{
			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0x8941C8", Offset = "0x8941C8", VA = "0x8941C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x8941D0", Offset = "0x8941D0", VA = "0x8941D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000191")]
		public float MaxValue
		{
			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0x8941D8", Offset = "0x8941D8", VA = "0x8941D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0x8941E0", Offset = "0x8941E0", VA = "0x8941E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000192")]
		public float IntervalValue
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x8941E8", Offset = "0x8941E8", VA = "0x8941E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x894258", Offset = "0x894258", VA = "0x894258")]
		public DzMinMaxValues()
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x894190", Offset = "0x894190", VA = "0x894190")]
		public DzMinMaxValues(float inMin, float inMax)
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x894288", Offset = "0x894288", VA = "0x894288")]
		public static bool operator ==(DzMinMaxValues inMinMaxValues1, DzMinMaxValues inMinMaxValues2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x8942CC", Offset = "0x8942CC", VA = "0x8942CC")]
		public static bool operator !=(DzMinMaxValues inMinMaxValues1, DzMinMaxValues inMinMaxValues2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x894310", Offset = "0x894310", VA = "0x894310")]
		public static DzMinMaxValues operator -(DzMinMaxValues inMinMaxValues1, DzMinMaxValues inMinMaxValues2)
		{
			return null;
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x8943A0", Offset = "0x8943A0", VA = "0x8943A0")]
		public static DzMinMaxValues Add(DzMinMaxValues inMinMaxValues1, DzMinMaxValues inMinMaxValues2)
		{
			return null;
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x894430", Offset = "0x894430", VA = "0x894430")]
		public static DzMinMaxValues Subtract(DzMinMaxValues inMinMaxValues1, DzMinMaxValues inMinMaxValues2)
		{
			return null;
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x8944C0", Offset = "0x8944C0", VA = "0x8944C0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x894560", Offset = "0x894560", VA = "0x894560", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x894574", Offset = "0x894574", VA = "0x894574", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200017A")]
	public struct DzPoint
	{
		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly DzPoint Empty;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _hx;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private int _vy;

		[Token(Token = "0x17000193")]
		public static DzPoint Zero
		{
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0x895B38", Offset = "0x895B38", VA = "0x895B38")]
			get
			{
				return default(DzPoint);
			}
		}

		[Token(Token = "0x17000194")]
		public int H
		{
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0x895B48", Offset = "0x895B48", VA = "0x895B48")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0x895B50", Offset = "0x895B50", VA = "0x895B50")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public int V
		{
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0x895B58", Offset = "0x895B58", VA = "0x895B58")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0x895B60", Offset = "0x895B60", VA = "0x895B60")]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public int X
		{
			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0x895B68", Offset = "0x895B68", VA = "0x895B68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0x895B70", Offset = "0x895B70", VA = "0x895B70")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public int Y
		{
			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0x895B78", Offset = "0x895B78", VA = "0x895B78")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0x895B80", Offset = "0x895B80", VA = "0x895B80")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public bool IsEmpty
		{
			[Token(Token = "0x6000BF8")]
			[Address(RVA = "0x895B88", Offset = "0x895B88", VA = "0x895B88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x895BA8", Offset = "0x895BA8", VA = "0x895BA8")]
		public DzPoint(DzSize sz)
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x895B40", Offset = "0x895B40", VA = "0x895B40")]
		public DzPoint(int x, int y)
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x895BB4", Offset = "0x895BB4", VA = "0x895BB4")]
		public static DzPoint operator +(DzPoint pt, DzSize sz)
		{
			return default(DzPoint);
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x895BCC", Offset = "0x895BCC", VA = "0x895BCC")]
		public static bool operator ==(DzPoint left, DzPoint right)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x895BEC", Offset = "0x895BEC", VA = "0x895BEC")]
		public static bool operator !=(DzPoint left, DzPoint right)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x895C0C", Offset = "0x895C0C", VA = "0x895C0C")]
		public static DzPoint operator -(DzPoint pt, DzSize sz)
		{
			return default(DzPoint);
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x895C24", Offset = "0x895C24", VA = "0x895C24")]
		public static explicit operator DzSize(DzPoint p)
		{
			return default(DzSize);
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x895C30", Offset = "0x895C30", VA = "0x895C30")]
		public static implicit operator Vector2(DzPoint p)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x895C68", Offset = "0x895C68", VA = "0x895C68")]
		public static DzPoint Ceiling(Vector2 value)
		{
			return default(DzPoint);
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x895CFC", Offset = "0x895CFC", VA = "0x895CFC")]
		public static DzPoint Round(Vector2 value)
		{
			return default(DzPoint);
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x895D90", Offset = "0x895D90", VA = "0x895D90")]
		public static DzPoint Truncate(Vector2 value)
		{
			return default(DzPoint);
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x895E24", Offset = "0x895E24", VA = "0x895E24")]
		public static DzPoint Add(DzPoint pt, DzSize sz)
		{
			return default(DzPoint);
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x895E3C", Offset = "0x895E3C", VA = "0x895E3C")]
		public static DzPoint Subtract(DzPoint pt, DzSize sz)
		{
			return default(DzPoint);
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x895E54", Offset = "0x895E54", VA = "0x895E54", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x895EE8", Offset = "0x895EE8", VA = "0x895EE8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x895EF4", Offset = "0x895EF4", VA = "0x895EF4")]
		public void Offset(int dx, int dy)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x895F08", Offset = "0x895F08", VA = "0x895F08", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x895F80", Offset = "0x895F80", VA = "0x895F80")]
		public void Offset(DzPoint p)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017B")]
	public struct DzRect
	{
		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly DzRect Empty;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Rect _rect;

		[Token(Token = "0x17000199")]
		public Rect Rect
		{
			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0x8962DC", Offset = "0x8962DC", VA = "0x8962DC")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x1700019A")]
		public int X
		{
			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0x8962E8", Offset = "0x8962E8", VA = "0x8962E8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0x896304", Offset = "0x896304", VA = "0x896304")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public int Y
		{
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0x896310", Offset = "0x896310", VA = "0x896310")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0x89632C", Offset = "0x89632C", VA = "0x89632C")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		public int Width
		{
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x896338", Offset = "0x896338", VA = "0x896338")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x896354", Offset = "0x896354", VA = "0x896354")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public int Height
		{
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0x896360", Offset = "0x896360", VA = "0x896360")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C13")]
			[Address(RVA = "0x89637C", Offset = "0x89637C", VA = "0x89637C")]
			set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		public bool IsZero
		{
			[Token(Token = "0x6000C14")]
			[Address(RVA = "0x896388", Offset = "0x896388", VA = "0x896388")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019F")]
		public bool IsEmpty
		{
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0x8963FC", Offset = "0x8963FC", VA = "0x8963FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A0")]
		public DzPoint Location
		{
			[Token(Token = "0x6000C16")]
			[Address(RVA = "0x89644C", Offset = "0x89644C", VA = "0x89644C")]
			get
			{
				return default(DzPoint);
			}
			[Token(Token = "0x6000C17")]
			[Address(RVA = "0x89648C", Offset = "0x89648C", VA = "0x89648C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A1")]
		public DzSize Size
		{
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0x8964C4", Offset = "0x8964C4", VA = "0x8964C4")]
			get
			{
				return default(DzSize);
			}
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0x896504", Offset = "0x896504", VA = "0x896504")]
			set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		public int Left
		{
			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0x89653C", Offset = "0x89653C", VA = "0x89653C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A3")]
		public int Top
		{
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0x896558", Offset = "0x896558", VA = "0x896558")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A4")]
		public int Right
		{
			[Token(Token = "0x6000C1C")]
			[Address(RVA = "0x896574", Offset = "0x896574", VA = "0x896574")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A5")]
		public int Bottom
		{
			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0x8965B0", Offset = "0x8965B0", VA = "0x8965B0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A6")]
		public int MaxX
		{
			[Token(Token = "0x6000C1E")]
			[Address(RVA = "0x8965EC", Offset = "0x8965EC", VA = "0x8965EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A7")]
		public int MaxY
		{
			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0x896608", Offset = "0x896608", VA = "0x896608")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A8")]
		public int MinX
		{
			[Token(Token = "0x6000C20")]
			[Address(RVA = "0x896624", Offset = "0x896624", VA = "0x896624")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A9")]
		public int MinY
		{
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0x896640", Offset = "0x896640", VA = "0x896640")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x89665C", Offset = "0x89665C", VA = "0x89665C")]
		public DzRect(DzPoint location, DzSize size)
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x896724", Offset = "0x896724", VA = "0x896724")]
		public DzRect(int x, int y, int width, int height)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x896770", Offset = "0x896770", VA = "0x896770")]
		public static bool operator ==(DzRect left, DzRect right)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x89687C", Offset = "0x89687C", VA = "0x89687C")]
		public static bool operator !=(DzRect left, DzRect right)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x896988", Offset = "0x896988", VA = "0x896988")]
		public static DzRect FromLTRB(int left, int top, int right, int bottom)
		{
			return default(DzRect);
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x8969D0", Offset = "0x8969D0", VA = "0x8969D0")]
		public static DzRect Ceiling(DzRect value)
		{
			return default(DzRect);
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x896AE8", Offset = "0x896AE8", VA = "0x896AE8")]
		public static DzRect Round(DzRect value)
		{
			return default(DzRect);
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x896C00", Offset = "0x896C00", VA = "0x896C00")]
		public static DzRect Truncate(DzRect value)
		{
			return default(DzRect);
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x896D18", Offset = "0x896D18", VA = "0x896D18")]
		public static DzRect Inflate(DzRect rect, int x, int y)
		{
			return default(DzRect);
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x896DD0", Offset = "0x896DD0", VA = "0x896DD0")]
		public static DzRect Intersect(DzRect a, DzRect b)
		{
			return default(DzRect);
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x8970F8", Offset = "0x8970F8", VA = "0x8970F8")]
		public static DzRect Union(DzRect a, DzRect b)
		{
			return default(DzRect);
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x8972A0", Offset = "0x8972A0", VA = "0x8972A0")]
		public static DzRect Offset(DzRect o, int oX, int oY)
		{
			return default(DzRect);
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x8973B8", Offset = "0x8973B8", VA = "0x8973B8")]
		public bool Contains(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x897470", Offset = "0x897470", VA = "0x897470")]
		public bool Contains(DzPoint pt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x897478", Offset = "0x897478", VA = "0x897478")]
		public bool Contains(DzRect rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x8974E8", Offset = "0x8974E8", VA = "0x8974E8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x8975A4", Offset = "0x8975A4", VA = "0x8975A4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x897610", Offset = "0x897610", VA = "0x897610")]
		public bool IntersectsWith(DzRect rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x896FD0", Offset = "0x896FD0", VA = "0x896FD0")]
		private bool IntersectsWithInclusive(DzRect r)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x89734C", Offset = "0x89734C", VA = "0x89734C")]
		public void Offset(int x, int y)
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x897738", Offset = "0x897738", VA = "0x897738")]
		public void Offset(DzPoint pos)
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x8977A4", Offset = "0x8977A4", VA = "0x8977A4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x896DC4", Offset = "0x896DC4", VA = "0x896DC4")]
		public void Inflate(int width, int height)
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x897978", Offset = "0x897978", VA = "0x897978")]
		public void Inflate(DzSize size)
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x897A2C", Offset = "0x897A2C", VA = "0x897A2C")]
		public void Intersect(DzRect rect)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017C")]
	public struct DzSize
	{
		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly DzSize Empty;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _width;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private int _height;

		[Token(Token = "0x170001AA")]
		public static DzSize Zero
		{
			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0x898464", Offset = "0x898464", VA = "0x898464")]
			get
			{
				return default(DzSize);
			}
		}

		[Token(Token = "0x170001AB")]
		public int Width
		{
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0x89846C", Offset = "0x89846C", VA = "0x89846C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0x898474", Offset = "0x898474", VA = "0x898474")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public int Height
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0x89847C", Offset = "0x89847C", VA = "0x89847C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0x898484", Offset = "0x898484", VA = "0x898484")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public bool IsEmpty
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x89848C", Offset = "0x89848C", VA = "0x89848C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x8984AC", Offset = "0x8984AC", VA = "0x8984AC")]
		public DzSize(DzPoint pt)
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x895C28", Offset = "0x895C28", VA = "0x895C28")]
		public DzSize(int width, int height)
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x8984B8", Offset = "0x8984B8", VA = "0x8984B8")]
		public static DzSize operator +(DzSize sz1, DzSize sz2)
		{
			return default(DzSize);
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x89685C", Offset = "0x89685C", VA = "0x89685C")]
		public static bool operator ==(DzSize sz1, DzSize sz2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x896968", Offset = "0x896968", VA = "0x896968")]
		public static bool operator !=(DzSize sz1, DzSize sz2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x8984D0", Offset = "0x8984D0", VA = "0x8984D0")]
		public static DzSize operator -(DzSize sz1, DzSize sz2)
		{
			return default(DzSize);
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x8984E8", Offset = "0x8984E8", VA = "0x8984E8")]
		public static explicit operator DzPoint(DzSize DzSize)
		{
			return default(DzPoint);
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x8966EC", Offset = "0x8966EC", VA = "0x8966EC")]
		public static implicit operator Vector2(DzSize p)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x8984EC", Offset = "0x8984EC", VA = "0x8984EC")]
		public static DzSize Ceiling(Vector2 value)
		{
			return default(DzSize);
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x898580", Offset = "0x898580", VA = "0x898580")]
		public static DzSize Round(Vector2 value)
		{
			return default(DzSize);
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x898614", Offset = "0x898614", VA = "0x898614")]
		public static DzSize Truncate(Vector2 value)
		{
			return default(DzSize);
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x8986A8", Offset = "0x8986A8", VA = "0x8986A8")]
		public static DzSize Add(DzSize sz1, DzSize sz2)
		{
			return default(DzSize);
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x8986C0", Offset = "0x8986C0", VA = "0x8986C0")]
		public static DzSize Subtract(DzSize sz1, DzSize sz2)
		{
			return default(DzSize);
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x8986D8", Offset = "0x8986D8", VA = "0x8986D8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x89876C", Offset = "0x89876C", VA = "0x89876C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x898778", Offset = "0x898778", VA = "0x898778", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200017D")]
	public class DzSnapScrollRect : ScrollRect
	{
		[Token(Token = "0x20002C5")]
		public delegate void PageChange_Callback(int inIndexH, int inIndexV);

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public int hIndex;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public int vIndex;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public int horizontalPages;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public int verticalPages;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float smooth;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public bool forcePositionUpdate;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector2 targetPosition;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float hPerPage;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private float vPerPage;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool dragging;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private PageChange_Callback callbacks_PageChange;

		[Token(Token = "0x170001AE")]
		public PageChange_Callback Callbacks_PageChange
		{
			[Token(Token = "0x6000C51")]
			[Address(RVA = "0x899028", Offset = "0x899028", VA = "0x899028")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x899030", Offset = "0x899030", VA = "0x899030")]
			set
			{
			}
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x899038", Offset = "0x899038", VA = "0x899038", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x899058", Offset = "0x899058", VA = "0x899058", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x899130", Offset = "0x899130", VA = "0x899130")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x8992B0", Offset = "0x8992B0", VA = "0x8992B0", Slot = "44")]
		public override void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x8992DC", Offset = "0x8992DC", VA = "0x8992DC", Slot = "45")]
		public override void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x899494", Offset = "0x899494", VA = "0x899494")]
		public void ImmediateIndexChange(int inIndexH, int inIndexV)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x899320", Offset = "0x899320", VA = "0x899320")]
		private void UpdateIndex(bool inForceUpdate = false)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x899080", Offset = "0x899080", VA = "0x899080")]
		private Vector2 GetSnapPosition()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x89974C", Offset = "0x89974C", VA = "0x89974C")]
		public DzSnapScrollRect()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017E")]
	public class DzSoundVolume : DzSerializableObject<DzSoundVolume>
	{
		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _BGM;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float _Voice;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _SE;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _Mute;

		[Token(Token = "0x170001AF")]
		public float BGM
		{
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0x89A6E4", Offset = "0x89A6E4", VA = "0x89A6E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0x89A6EC", Offset = "0x89A6EC", VA = "0x89A6EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public float Voice
		{
			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0x89A6F4", Offset = "0x89A6F4", VA = "0x89A6F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C5F")]
			[Address(RVA = "0x89A6FC", Offset = "0x89A6FC", VA = "0x89A6FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public float SE
		{
			[Token(Token = "0x6000C60")]
			[Address(RVA = "0x89A704", Offset = "0x89A704", VA = "0x89A704")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C61")]
			[Address(RVA = "0x89A70C", Offset = "0x89A70C", VA = "0x89A70C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public bool Mute
		{
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0x89A714", Offset = "0x89A714", VA = "0x89A714")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0x89A71C", Offset = "0x89A71C", VA = "0x89A71C")]
			set
			{
			}
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x89A728", Offset = "0x89A728", VA = "0x89A728")]
		public DzSoundVolume([Optional] DzSoundVolume inSoundVolume)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x89A7E0", Offset = "0x89A7E0", VA = "0x89A7E0", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x89A7F8", Offset = "0x89A7F8", VA = "0x89A7F8", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x89A7AC", Offset = "0x89A7AC", VA = "0x89A7AC")]
		public void CopyValues(DzSoundVolume inSoundVolume)
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class DzNotificationCenter : DzMonoBehaviour<DzNotificationCenter>
	{
		[Token(Token = "0x20002C6")]
		public class Notification
		{
			[Token(Token = "0x4000EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Component sender;

			[Token(Token = "0x4000EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4000EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hashtable data;

			[Token(Token = "0x60011C2")]
			[Address(RVA = "0x895284", Offset = "0x895284", VA = "0x895284")]
			public Notification(Component aSender, string aName)
			{
			}

			[Token(Token = "0x60011C3")]
			[Address(RVA = "0x894D30", Offset = "0x894D30", VA = "0x894D30")]
			public Notification(Component aSender, string aName, Hashtable aData)
			{
			}
		}

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_ApplicationIsQuitting;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static DzNotificationCenter defaultCenter;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Hashtable notifications;

		[Token(Token = "0x170001B3")]
		public static DzNotificationCenter DefaultCenter
		{
			[Token(Token = "0x6000C68")]
			[Address(RVA = "0x88FA10", Offset = "0x88FA10", VA = "0x88FA10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x894A18", Offset = "0x894A18", VA = "0x894A18")]
		public static void ReInitialize()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x894A80", Offset = "0x894A80", VA = "0x894A80")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x88FB70", Offset = "0x88FB70", VA = "0x88FB70")]
		public void AddObserver(Component observer, string name)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x894AEC", Offset = "0x894AEC", VA = "0x894AEC")]
		public void AddObserver(Component observer, string name, Component sender)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x88FC78", Offset = "0x88FC78", VA = "0x88FC78")]
		public void RemoveObserver(Component observer, string name)
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x894CA0", Offset = "0x894CA0", VA = "0x894CA0")]
		public void PostNotification(Component aSender, string aName)
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x894CA8", Offset = "0x894CA8", VA = "0x894CA8")]
		public void PostNotification(Component aSender, string aName, Hashtable aData)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x894D70", Offset = "0x894D70", VA = "0x894D70")]
		public void PostNotification(Notification aNotification)
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x8950B4", Offset = "0x8950B4", VA = "0x8950B4")]
		public bool IsExistsNotification(Component aSender, string aName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x8950BC", Offset = "0x8950BC", VA = "0x8950BC")]
		public bool IsExistsNotification(Component aSender, string aName, Hashtable aData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x895144", Offset = "0x895144", VA = "0x895144")]
		public bool IsExistsNotification(Notification aNotification)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x895210", Offset = "0x895210", VA = "0x895210")]
		public DzNotificationCenter()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public class DzScreenManager : DzMonoBehaviour<DzScreenManager>
	{
		[Token(Token = "0x20002C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D98", Offset = "0x5C2D98")]
		private sealed class <DisablePanelDeleyed>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Animator anim;

			[Token(Token = "0x4000EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DzScreenManager <>4__this;

			[Token(Token = "0x4000EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <closedStateReached>5__2;

			[Token(Token = "0x4000EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			private bool <wantToClose>5__3;

			[Token(Token = "0x170002A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011C7")]
				[Address(RVA = "0x8983F4", Offset = "0x8983F4", VA = "0x8983F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011C9")]
				[Address(RVA = "0x89845C", Offset = "0x89845C", VA = "0x89845C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011C4")]
			[Address(RVA = "0x8981CC", Offset = "0x8981CC", VA = "0x8981CC")]
			[DebuggerHidden]
			public <DisablePanelDeleyed>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60011C5")]
			[Address(RVA = "0x898250", Offset = "0x898250", VA = "0x898250", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011C6")]
			[Address(RVA = "0x898254", Offset = "0x898254", VA = "0x898254", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011C8")]
			[Address(RVA = "0x8983FC", Offset = "0x8983FC", VA = "0x8983FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008C4")]
		private const string k_OpenTransitionName = "Open";

		[Token(Token = "0x40008C5")]
		private const string k_ClosedStateName = "Closed";

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _initiallyOpen;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _TappedSoundID;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int _TransitionSoundID;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator m_Open;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_OpenParameterId;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_PreviouslySelected;

		[Token(Token = "0x170001B4")]
		public Animator InitiallyOpen
		{
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0x897A74", Offset = "0x897A74", VA = "0x897A74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C77")]
			[Address(RVA = "0x897A7C", Offset = "0x897A7C", VA = "0x897A7C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public GameObject CurrentOpenPanel
		{
			[Token(Token = "0x6000C78")]
			[Address(RVA = "0x897A84", Offset = "0x897A84", VA = "0x897A84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x897B1C", Offset = "0x897B1C", VA = "0x897B1C", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x897B20", Offset = "0x897B20", VA = "0x897B20", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x897B24", Offset = "0x897B24", VA = "0x897B24")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x897D88", Offset = "0x897D88", VA = "0x897D88")]
		private static GameObject FindFirstEnabledSelectable(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x897BC8", Offset = "0x897BC8", VA = "0x897BC8")]
		public void OpenPanel(Animator anim)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x897FF8", Offset = "0x897FF8", VA = "0x897FF8")]
		public void CloseCurrent()
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x898150", Offset = "0x898150", VA = "0x898150")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA990", Offset = "0x5CA990")]
		private IEnumerator DisablePanelDeleyed(Animator anim)
		{
			return null;
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x8980B4", Offset = "0x8980B4", VA = "0x8980B4")]
		private void SetSelected(GameObject go)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x8981F8", Offset = "0x8981F8", VA = "0x8981F8")]
		public DzScreenManager()
		{
		}
	}
	[Token(Token = "0x2000181")]
	public class DzSoundManager : DzMonoSingleton<DzSoundManager>
	{
		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DzSoundVolume Volume;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] BGM;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip[] SE;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip[] Voice;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource BGMsource;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float BGMtime;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource[] SEsources;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource[] VoiceSources;

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x899820", Offset = "0x899820", VA = "0x899820", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x8999DC", Offset = "0x8999DC", VA = "0x8999DC", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x8999E0", Offset = "0x8999E0", VA = "0x8999E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x899BB0", Offset = "0x899BB0", VA = "0x899BB0")]
		public void PlayBGM(int index)
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x899CF0", Offset = "0x899CF0", VA = "0x899CF0")]
		public void PlayBGM(int index, float playTime)
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x899E54", Offset = "0x899E54", VA = "0x899E54")]
		public void StopBGM()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x899E94", Offset = "0x899E94", VA = "0x899E94")]
		public void PauseBGM()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x899ECC", Offset = "0x899ECC", VA = "0x899ECC")]
		public void ResumeBGM(int index)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x899ED4", Offset = "0x899ED4", VA = "0x899ED4")]
		public bool IsPauseingBGM()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x897E80", Offset = "0x897E80", VA = "0x897E80")]
		public void PlaySE(int index)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x899F1C", Offset = "0x899F1C", VA = "0x899F1C")]
		public void PlaySE(int index, float volume)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x89A09C", Offset = "0x89A09C", VA = "0x89A09C")]
		public void PlayLoopSE(int index)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x89A224", Offset = "0x89A224", VA = "0x89A224")]
		public void PlayLoopSE(int index, float volume)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x89A3B4", Offset = "0x89A3B4", VA = "0x89A3B4")]
		public void StopSE()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x89A44C", Offset = "0x89A44C", VA = "0x89A44C")]
		public void PlayVoice(int index)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x89A5C4", Offset = "0x89A5C4", VA = "0x89A5C4")]
		public void StopVoice()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x89A64C", Offset = "0x89A64C", VA = "0x89A64C")]
		public DzSoundManager()
		{
		}
	}
	[Token(Token = "0x2000182")]
	public class DzAsyncSceneLoader : DzMonoBehaviour<DzAsyncSceneLoader>
	{
		[Token(Token = "0x20002C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2DA8", Offset = "0x5C2DA8")]
		private sealed class <LoadNewScene>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DzAsyncSceneLoader <>4__this;

			[Token(Token = "0x4000EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x170002A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011CD")]
				[Address(RVA = "0x891248", Offset = "0x891248", VA = "0x891248", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011CF")]
				[Address(RVA = "0x8912B0", Offset = "0x8912B0", VA = "0x8912B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011CA")]
			[Address(RVA = "0x89109C", Offset = "0x89109C", VA = "0x89109C")]
			[DebuggerHidden]
			public <LoadNewScene>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60011CB")]
			[Address(RVA = "0x891120", Offset = "0x891120", VA = "0x891120", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011CC")]
			[Address(RVA = "0x891124", Offset = "0x891124", VA = "0x891124", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011CE")]
			[Address(RVA = "0x891250", Offset = "0x891250", VA = "0x891250", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _Scene;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _LoadingText;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _WaitForSeconds;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool loadScene;

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x890EA0", Offset = "0x890EA0", VA = "0x890EA0", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x890EA4", Offset = "0x890EA4", VA = "0x890EA4", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x890EA8", Offset = "0x890EA8", VA = "0x890EA8", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x890EAC", Offset = "0x890EAC", VA = "0x890EAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x89102C", Offset = "0x89102C", VA = "0x89102C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CA9F4", Offset = "0x5CA9F4")]
		private IEnumerator LoadNewScene()
		{
			return null;
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x8910C8", Offset = "0x8910C8", VA = "0x8910C8")]
		public DzAsyncSceneLoader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000183")]
	public class DzAudioChanger : DzMonoBehaviour<DzAudioChanger>
	{
		[Serializable]
		[Token(Token = "0x20002C9")]
		public class DzAudioSourceArray
		{
			[Token(Token = "0x4000EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private List<AudioSource> _AudioSourcesArray;

			[Token(Token = "0x170002A8")]
			public List<AudioSource> AudioSourcesArray
			{
				[Token(Token = "0x60011D0")]
				[Address(RVA = "0x8917AC", Offset = "0x8917AC", VA = "0x8917AC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x891390", Offset = "0x891390", VA = "0x891390")]
			public DzAudioSourceArray()
			{
			}

			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x8917B4", Offset = "0x8917B4", VA = "0x8917B4")]
			public DzAudioSourceArray(List<AudioSource> inList)
			{
			}
		}

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DzAudioSourceArray[] _AudioSources;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _AudioIndex;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DzAudioSourceArray _currentAudioSource;

		[Token(Token = "0x170001B6")]
		public int AudioCount
		{
			[Token(Token = "0x6000C99")]
			[Address(RVA = "0x8912B8", Offset = "0x8912B8", VA = "0x8912B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x8912D4", Offset = "0x8912D4", VA = "0x8912D4", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x891544", Offset = "0x891544", VA = "0x891544", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x891548", Offset = "0x891548", VA = "0x891548", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x89154C", Offset = "0x89154C", VA = "0x89154C")]
		public void ChangeAudioSource(int inAudioIndex)
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x8915C8", Offset = "0x8915C8", VA = "0x8915C8")]
		public void PlayAudioSource(int inAudioIndex)
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x891554", Offset = "0x891554", VA = "0x891554")]
		private void SubAudioChange()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x891614", Offset = "0x891614", VA = "0x891614")]
		private void SubAudioPlay(DzAudioSourceArray inAudioArray)
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x891404", Offset = "0x891404", VA = "0x891404")]
		private void SubAudioStop(DzAudioSourceArray inAudioArray)
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x891754", Offset = "0x891754", VA = "0x891754")]
		public DzAudioChanger()
		{
		}
	}
	[Token(Token = "0x2000184")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C20B0", Offset = "0x5C20B0")]
	public class DzGrid : DzMonoBehaviour<DzGrid>
	{
		[Token(Token = "0x20002CA")]
		public enum Face
		{
			[Token(Token = "0x4000EB2")]
			xy,
			[Token(Token = "0x4000EB3")]
			zx,
			[Token(Token = "0x4000EB4")]
			yz
		}

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float gridSize;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int size;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color color;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Face face;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool back;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float preGridSize;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int preSize;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color preColor;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Face preFace;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool preBack;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Mesh mesh;

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x891918", Offset = "0x891918", VA = "0x891918", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x89191C", Offset = "0x89191C", VA = "0x89191C", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x891920", Offset = "0x891920", VA = "0x891920", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x891EAC", Offset = "0x891EAC", VA = "0x891EAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x8919CC", Offset = "0x8919CC", VA = "0x8919CC")]
		private Mesh FncReGrid(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x891F70", Offset = "0x891F70", VA = "0x891F70")]
		private Vector3[] RotationVertices(Vector3[] vertices, Vector3 rotDirection)
		{
			return null;
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x8920A0", Offset = "0x8920A0", VA = "0x8920A0")]
		public DzGrid()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class DzKeyPressedActivator : DzMonoBehaviour<DzKeyPressedActivator>
	{
		[Token(Token = "0x20002CB")]
		public enum PressedKeyType
		{
			[Token(Token = "0x4000EB6")]
			PRESS_NONE,
			[Token(Token = "0x4000EB7")]
			PRESS_SHIFT,
			[Token(Token = "0x4000EB8")]
			PRESS_CTRL,
			[Token(Token = "0x4000EB9")]
			PRESS_ALT
		}

		[Token(Token = "0x20002CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2DB8", Offset = "0x5C2DB8")]
		private sealed class <CoKeyPressedMonitor>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DzKeyPressedActivator <>4__this;

			[Token(Token = "0x170002A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011D6")]
				[Address(RVA = "0x892D2C", Offset = "0x892D2C", VA = "0x892D2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011D8")]
				[Address(RVA = "0x892D94", Offset = "0x892D94", VA = "0x892D94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x892BD4", Offset = "0x892BD4", VA = "0x892BD4")]
			[DebuggerHidden]
			public <CoKeyPressedMonitor>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60011D4")]
			[Address(RVA = "0x892C50", Offset = "0x892C50", VA = "0x892C50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011D5")]
			[Address(RVA = "0x892C54", Offset = "0x892C54", VA = "0x892C54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011D7")]
			[Address(RVA = "0x892D34", Offset = "0x892D34", VA = "0x892D34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private PressedKeyType _PressedKeyType;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MonoBehaviour _ActiveteComponent;

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x892A20", Offset = "0x892A20", VA = "0x892A20", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x892A24", Offset = "0x892A24", VA = "0x892A24", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x892A28", Offset = "0x892A28", VA = "0x892A28", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x892A2C", Offset = "0x892A2C", VA = "0x892A2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x892A80", Offset = "0x892A80", VA = "0x892A80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x892AD4", Offset = "0x892AD4", VA = "0x892AD4")]
		private bool FncGetkeyCheck(PressedKeyType inPressedKeyType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x892B64", Offset = "0x892B64", VA = "0x892B64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CAA58", Offset = "0x5CAA58")]
		private IEnumerator CoKeyPressedMonitor()
		{
			return null;
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x892C00", Offset = "0x892C00", VA = "0x892C00")]
		public DzKeyPressedActivator()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class DzLocalizationText
	{
		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<string, string> _content;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string _language;

		[Token(Token = "0x170001B7")]
		private static string Language
		{
			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0x892D9C", Offset = "0x892D9C", VA = "0x892D9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0x892E04", Offset = "0x892E04", VA = "0x892E04")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		private static IDictionary<string, string> Content
		{
			[Token(Token = "0x6000CB7")]
			[Address(RVA = "0x89308C", Offset = "0x89308C", VA = "0x89308C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x890384", Offset = "0x890384", VA = "0x890384")]
		public static string GetText(string key)
		{
			return null;
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x8931CC", Offset = "0x8931CC", VA = "0x8931CC")]
		public static string GetLanguage()
		{
			return null;
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x893270", Offset = "0x893270", VA = "0x893270")]
		public static void SetLanguage(string language)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x8932D4", Offset = "0x8932D4", VA = "0x8932D4")]
		private static IDictionary<string, string> GetContent()
		{
			return null;
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x893414", Offset = "0x893414", VA = "0x893414")]
		private static void AddContent(XmlNode xNode)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x892EB0", Offset = "0x892EB0", VA = "0x892EB0")]
		private static void CreateContent()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x89409C", Offset = "0x89409C", VA = "0x89409C")]
		public DzLocalizationText()
		{
		}
	}
	[Token(Token = "0x2000187")]
	public class DzMouseMoveTrigger : DzMonoBehaviour<DzMouseMoveTrigger>, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x20002CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2DC8", Offset = "0x5C2DC8")]
		private sealed class <TrackPointer>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DzMouseMoveTrigger <>4__this;

			[Token(Token = "0x4000EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <mousePos>5__2;

			[Token(Token = "0x170002AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011DC")]
				[Address(RVA = "0x8948FC", Offset = "0x8948FC", VA = "0x8948FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011DE")]
				[Address(RVA = "0x894964", Offset = "0x894964", VA = "0x894964", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011D9")]
			[Address(RVA = "0x894704", Offset = "0x894704", VA = "0x894704")]
			[DebuggerHidden]
			public <TrackPointer>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60011DA")]
			[Address(RVA = "0x894780", Offset = "0x894780", VA = "0x894780", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011DB")]
			[Address(RVA = "0x894784", Offset = "0x894784", VA = "0x894784", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x894904", Offset = "0x894904", VA = "0x894904", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onMouseMove;

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x8945EC", Offset = "0x8945EC", VA = "0x8945EC", Slot = "7")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x894640", Offset = "0x894640", VA = "0x894640", Slot = "8")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x894694", Offset = "0x894694", VA = "0x894694")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CAABC", Offset = "0x5CAABC")]
		private IEnumerator TrackPointer()
		{
			return null;
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x894730", Offset = "0x894730", VA = "0x894730")]
		public DzMouseMoveTrigger()
		{
		}
	}
	[Token(Token = "0x2000188")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C2130", Offset = "0x5C2130")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C2130", Offset = "0x5C2130")]
	public class DzPlayAudioAtBothCollision : DzMonoBehaviour<DzPlayAudioAtBothCollision>
	{
		[Token(Token = "0x20002CE")]
		public enum PlayAudioType
		{
			[Token(Token = "0x4000EC2")]
			PLAYAUDIO_STOP,
			[Token(Token = "0x4000EC3")]
			PLAYAUDIO_CYCLE,
			[Token(Token = "0x4000EC4")]
			PLAYAUDIO_RANDOM,
			[Token(Token = "0x4000EC5")]
			PLAYAUDIO_ALLSYNC
		}

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private PlayAudioType _PlayAudioType;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<string> _CollisionTags;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip[] _CollisionEnterAudioClips;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip[] _TriggerEnterAudioClips;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int _CollisionAudioIndex;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int _TriggerAudioIndex;

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x8952C0", Offset = "0x8952C0", VA = "0x8952C0", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x8952C4", Offset = "0x8952C4", VA = "0x8952C4", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x8952C8", Offset = "0x8952C8", VA = "0x8952C8", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x8952CC", Offset = "0x8952CC", VA = "0x8952CC")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x8955B4", Offset = "0x8955B4", VA = "0x8955B4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x8953A0", Offset = "0x8953A0", VA = "0x8953A0")]
		private int FncPlayAudioClip(AudioClip[] inAudioClips, int inCurrentAudioIdx, Vector3 inPlayPosition)
		{
			return default(int);
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x89567C", Offset = "0x89567C", VA = "0x89567C")]
		public DzPlayAudioAtBothCollision()
		{
		}
	}
	[Token(Token = "0x2000189")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C21BC", Offset = "0x5C21BC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C21BC", Offset = "0x5C21BC")]
	public class DzPlayAudioAtCollision : DzMonoBehaviour<DzPlayAudioAtCollision>
	{
		[Token(Token = "0x20002CF")]
		public enum PlayAudioType
		{
			[Token(Token = "0x4000EC7")]
			PLAYAUDIO_STOP,
			[Token(Token = "0x4000EC8")]
			PLAYAUDIO_CYCLE,
			[Token(Token = "0x4000EC9")]
			PLAYAUDIO_RANDOM,
			[Token(Token = "0x4000ECA")]
			PLAYAUDIO_ALLSYNC
		}

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private PlayAudioType _PlayAudioType;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<string> _CollisionTags;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip[] _AudioClips;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _AudioIndex;

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x8956FC", Offset = "0x8956FC", VA = "0x8956FC", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x895700", Offset = "0x895700", VA = "0x895700", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x895704", Offset = "0x895704", VA = "0x895704", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x895708", Offset = "0x895708", VA = "0x895708")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x8959F0", Offset = "0x8959F0", VA = "0x8959F0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x8957DC", Offset = "0x8957DC", VA = "0x8957DC")]
		private int FncPlayAudioClip(AudioClip[] inAudioClips, int inCurrentAudioIdx, Vector3 inPlayPosition)
		{
			return default(int);
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x895AB8", Offset = "0x895AB8", VA = "0x895AB8")]
		public DzPlayAudioAtCollision()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class DzPrefabFactory : DzMonoBehaviour<DzPrefabFactory>
	{
		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool _InitialInstantiate;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _PrefabObject;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _FadeEffectTime;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject _instantiatedObject;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform _rectTransform;

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x895F98", Offset = "0x895F98", VA = "0x895F98", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x896000", Offset = "0x896000", VA = "0x896000", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x896004", Offset = "0x896004", VA = "0x896004", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x896018", Offset = "0x896018", VA = "0x896018")]
		public void CreatePrefabObject(bool inWorldStays)
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x896158", Offset = "0x896158", VA = "0x896158")]
		public void DestroyPrefabObject()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x89620C", Offset = "0x89620C", VA = "0x89620C")]
		public DzPrefabFactory()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x89625C", Offset = "0x89625C", VA = "0x89625C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAB20", Offset = "0x5CAB20")]
		private void <CreatePrefabObject>b__8_0()
		{
		}
	}
	[Token(Token = "0x200018B")]
	public class DzSkyboxChanger : DzMonoBehaviour<DzSkyboxChanger>
	{
		[Token(Token = "0x20002D0")]
		public enum MaterialChangeType
		{
			[Token(Token = "0x4000ECC")]
			CHANGE_FIX,
			[Token(Token = "0x4000ECD")]
			CHANGE_SEQUENCE,
			[Token(Token = "0x4000ECE")]
			CHANGE_RANDOM
		}

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private MaterialChangeType _MaterialChangeType;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _MaterialChangeTime;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Cubemap[] _MaterialCubemaps;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _SkyboxIndex;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _IBL_Enabled;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material _crossFadeMaterial;

		[Token(Token = "0x170001B9")]
		public int SkyboxIndex
		{
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0x898814", Offset = "0x898814", VA = "0x898814")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x89881C", Offset = "0x89881C", VA = "0x89881C", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x8988E4", Offset = "0x8988E4", VA = "0x8988E4", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x8988E8", Offset = "0x8988E8", VA = "0x8988E8", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x8988EC", Offset = "0x8988EC", VA = "0x8988EC")]
		public void ChangeSkyboxMaterial(int inMaterialIndex = int.MinValue)
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x898904", Offset = "0x898904", VA = "0x898904")]
		private void SubMaterialChange(bool inChanging = true)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x898C00", Offset = "0x898C00", VA = "0x898C00")]
		public DzSkyboxChanger()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x898C60", Offset = "0x898C60", VA = "0x898C60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAB30", Offset = "0x5CAB30")]
		private void <SubMaterialChange>b__13_0(float val)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x898CCC", Offset = "0x898CCC", VA = "0x898CCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAB40", Offset = "0x5CAB40")]
		private void <SubMaterialChange>b__13_1()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class DzSkyboxSwicher : DzMonoBehaviour<DzSkyboxSwicher>
	{
		[Token(Token = "0x20002D1")]
		public enum MaterialChangeType
		{
			[Token(Token = "0x4000ED0")]
			CHANGE_FIX,
			[Token(Token = "0x4000ED1")]
			CHANGE_SEQUENCE,
			[Token(Token = "0x4000ED2")]
			CHANGE_RANDOM
		}

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private MaterialChangeType _MaterialChangeType;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Cubemap[] _MaterialCubemaps;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _SkyboxIndex;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _skyboxID;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material _cubemapMaterial;

		[Token(Token = "0x170001BA")]
		public int SkyboxIndex
		{
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x898D2C", Offset = "0x898D2C", VA = "0x898D2C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x898D34", Offset = "0x898D34", VA = "0x898D34", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x898E08", Offset = "0x898E08", VA = "0x898E08", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x898E0C", Offset = "0x898E0C", VA = "0x898E0C", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x898E10", Offset = "0x898E10", VA = "0x898E10")]
		public void ChangeSkyboxMaterial(int inMaterialIndex = int.MinValue)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x898E28", Offset = "0x898E28", VA = "0x898E28")]
		private void SubMaterialChange(bool inChanging = true)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x898FD8", Offset = "0x898FD8", VA = "0x898FD8")]
		public DzSkyboxSwicher()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class DzSpriteLoader : DzMonoObject<DzSpriteLoader>
	{
		[Token(Token = "0x20002D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2DD8", Offset = "0x5C2DD8")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string inSpriteName;

			[Token(Token = "0x60011DF")]
			[Address(RVA = "0x89A8DC", Offset = "0x89A8DC", VA = "0x89A8DC")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60011E0")]
			[Address(RVA = "0x89AC0C", Offset = "0x89AC0C", VA = "0x89AC0C")]
			internal bool <SpriteLoad>b__0(Sprite sprite)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, Sprite> _dic;

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x89A7FC", Offset = "0x89A7FC", VA = "0x89A7FC", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x89A800", Offset = "0x89A800", VA = "0x89A800", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x89051C", Offset = "0x89051C", VA = "0x89051C")]
		public static Sprite SpriteLoad(string inFileName)
		{
			return null;
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x89A804", Offset = "0x89A804", VA = "0x89A804")]
		public static Sprite SpriteLoad(string inFileName, string inSpriteName)
		{
			return null;
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x89A8E4", Offset = "0x89A8E4", VA = "0x89A8E4")]
		public int PreLoad(string path)
		{
			return default(int);
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x89AAA0", Offset = "0x89AAA0", VA = "0x89AAA0")]
		public Sprite GetSprite(string name)
		{
			return null;
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x89AB34", Offset = "0x89AB34", VA = "0x89AB34")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x89AB94", Offset = "0x89AB94", VA = "0x89AB94")]
		public DzSpriteLoader()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class DzTimePauser : DzMonoObject<DzTimePauser>
	{
		[Serializable]
		[Token(Token = "0x20002D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2DE8", Offset = "0x5C2DE8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<Selectable> <>9__8_0;

			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<Selectable> <>9__9_1;

			[Token(Token = "0x4000ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<Selectable> <>9__9_0;

			[Token(Token = "0x4000ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<GameObject> <>9__11_0;

			[Token(Token = "0x4000ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Predicate<GameObject> <>9__12_0;

			[Token(Token = "0x4000EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Predicate<GameObject> <>9__13_0;

			[Token(Token = "0x60011E2")]
			[Address(RVA = "0x89B820", Offset = "0x89B820", VA = "0x89B820")]
			public <>c()
			{
			}

			[Token(Token = "0x60011E3")]
			[Address(RVA = "0x89B828", Offset = "0x89B828", VA = "0x89B828")]
			internal void <Resume>b__8_0(Selectable o)
			{
			}

			[Token(Token = "0x60011E4")]
			[Address(RVA = "0x89B848", Offset = "0x89B848", VA = "0x89B848")]
			internal bool <Pause>b__9_1(Selectable cmp)
			{
				return default(bool);
			}

			[Token(Token = "0x60011E5")]
			[Address(RVA = "0x89B860", Offset = "0x89B860", VA = "0x89B860")]
			internal void <Pause>b__9_0(Selectable o)
			{
			}

			[Token(Token = "0x60011E6")]
			[Address(RVA = "0x89B880", Offset = "0x89B880", VA = "0x89B880")]
			internal bool <Root>b__11_0(GameObject item)
			{
				return default(bool);
			}

			[Token(Token = "0x60011E7")]
			[Address(RVA = "0x89B914", Offset = "0x89B914", VA = "0x89B914")]
			internal bool <UIObject>b__12_0(GameObject obj)
			{
				return default(bool);
			}

			[Token(Token = "0x60011E8")]
			[Address(RVA = "0x89B9A4", Offset = "0x89B9A4", VA = "0x89B9A4")]
			internal bool <GmObject>b__13_0(GameObject obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000906")]
		public const string POST_DZTIMEPAUSER_PAUSE = "OnDzTimePauserPause";

		[Token(Token = "0x4000907")]
		public const string POST_DZTIMEPAUSER_RESUME = "OnDzTimePauserResume";

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Selectable> _pause_selectables;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject _excludeObject;

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x89ACF0", Offset = "0x89ACF0", VA = "0x89ACF0")]
		public DzTimePauser()
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x89AD68", Offset = "0x89AD68", VA = "0x89AD68")]
		public DzTimePauser(GameObject excludeObject)
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x89ADF4", Offset = "0x89ADF4", VA = "0x89ADF4")]
		public void PauseUI()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x89B2D0", Offset = "0x89B2D0", VA = "0x89B2D0")]
		public void PauseGame()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x89B3F0", Offset = "0x89B3F0", VA = "0x89B3F0")]
		public void Resume()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x89B034", Offset = "0x89B034", VA = "0x89B034")]
		private void Pause(GameObject[] objs)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x89B528", Offset = "0x89B528", VA = "0x89B528")]
		private bool IsExclude(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x89B698", Offset = "0x89B698", VA = "0x89B698")]
		private static GameObject[] Root()
		{
			return null;
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x89AE1C", Offset = "0x89AE1C", VA = "0x89AE1C")]
		private static GameObject[] UIObject()
		{
			return null;
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x89B2F8", Offset = "0x89B2F8", VA = "0x89B2F8")]
		private static GameObject[] GmObject()
		{
			return null;
		}
	}
	[Token(Token = "0x200018F")]
	public class DzTransformFollow : DzMonoBehaviour<DzTransformFollow>
	{
		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _TrackingObject;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _cachedTransform;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _cachedPosition;

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x89BA34", Offset = "0x89BA34", VA = "0x89BA34", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x89BA38", Offset = "0x89BA38", VA = "0x89BA38", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x89BA3C", Offset = "0x89BA3C", VA = "0x89BA3C", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x89BAE4", Offset = "0x89BAE4", VA = "0x89BAE4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x89BC28", Offset = "0x89BC28", VA = "0x89BC28")]
		public DzTransformFollow()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public struct DzUtilEnum
	{
		[Token(Token = "0x6000CFD")]
		public static TEnum GetEnum<TEnum>(string value) where TEnum : struct
		{
			return (TEnum)null;
		}

		[Token(Token = "0x6000CFE")]
		public static TEnum GetEnum<TEnum>(int value) where TEnum : struct
		{
			return (TEnum)null;
		}
	}
	[Token(Token = "0x2000191")]
	public class DzWeatherChanger : DzMonoBehaviour<DzWeatherChanger>
	{
		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] _WeatherParticales;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _WeatherParticleIndex;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem _currentParticle;

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x89BC78", Offset = "0x89BC78", VA = "0x89BC78", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x89BD18", Offset = "0x89BD18", VA = "0x89BD18", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x89BD1C", Offset = "0x89BD1C", VA = "0x89BD1C", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x89BD20", Offset = "0x89BD20", VA = "0x89BD20")]
		public void ChangeWeatherParticle(int inWeatherIndex)
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x89BD28", Offset = "0x89BD28", VA = "0x89BD28")]
		private void SubWeatherChange()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x89BEC8", Offset = "0x89BEC8", VA = "0x89BEC8")]
		public DzWeatherChanger()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000192")]
	[ExecuteInEditMode]
	public static class DzXMLTools
	{
		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x893CF8", Offset = "0x893CF8", VA = "0x893CF8")]
		public static XmlDocument loadXml(TextAsset xmlFile)
		{
			return null;
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x89BF20", Offset = "0x89BF20", VA = "0x89BF20")]
		public static void writeXml(string filepath, XmlDocument xmlDoc)
		{
		}
	}
}
namespace DazzleSystem.Common.Automatic
{
	[Token(Token = "0x2000193")]
	public class DzAutoButtonEffect : DzMonoBehaviour<DzAutoButtonEffect>
	{
		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _ZoomingScale;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _ZoomingDuration;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool _ZoomingEnabled;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Button _button;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _saveButtonScale;

		[Token(Token = "0x170001BB")]
		public float ZoomingScale
		{
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0x88F804", Offset = "0x88F804", VA = "0x88F804")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D08")]
			[Address(RVA = "0x88F80C", Offset = "0x88F80C", VA = "0x88F80C")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public float ZoomingDuration
		{
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0x88F814", Offset = "0x88F814", VA = "0x88F814")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0x88F81C", Offset = "0x88F81C", VA = "0x88F81C")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public bool ZoomingEnabled
		{
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0x88F824", Offset = "0x88F824", VA = "0x88F824")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0x88F82C", Offset = "0x88F82C", VA = "0x88F82C")]
			set
			{
			}
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x88F838", Offset = "0x88F838", VA = "0x88F838", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x88F8C8", Offset = "0x88F8C8", VA = "0x88F8C8", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x88F8CC", Offset = "0x88F8CC", VA = "0x88F8CC", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x88F910", Offset = "0x88F910", VA = "0x88F910")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x88FB74", Offset = "0x88FB74", VA = "0x88FB74")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x88FD90", Offset = "0x88FD90", VA = "0x88FD90")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x88FED0", Offset = "0x88FED0", VA = "0x88FED0")]
		private void OnDzTimePauserPause()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x88FF18", Offset = "0x88FF18", VA = "0x88FF18")]
		private void OnDzTimePauserResume()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x88FF5C", Offset = "0x88FF5C", VA = "0x88FF5C")]
		public DzAutoButtonEffect()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class DzAutoDebugActivator : DzMonoBehaviour<DzAutoDebugActivator>
	{
		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool _TrueIsDebugOn_Activate;

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x88FFC0", Offset = "0x88FFC0", VA = "0x88FFC0", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x890058", Offset = "0x890058", VA = "0x890058", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x89005C", Offset = "0x89005C", VA = "0x89005C", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x890060", Offset = "0x890060", VA = "0x890060")]
		public DzAutoDebugActivator()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class DzAutoLocalization : DzMonoLocalization<DzAutoLocalization>
	{
		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x8900B0", Offset = "0x8900B0", VA = "0x8900B0", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x8900B4", Offset = "0x8900B4", VA = "0x8900B4", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x8900B8", Offset = "0x8900B8", VA = "0x8900B8", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x8900C4", Offset = "0x8900C4", VA = "0x8900C4", Slot = "7")]
		protected override void OnLocalizationUpdate()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x890590", Offset = "0x890590", VA = "0x890590")]
		public DzAutoLocalization()
		{
		}
	}
	[Token(Token = "0x2000196")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C2258", Offset = "0x5C2258")]
	public class DzAutoShowFPS : DzMonoBehaviour<DzAutoShowFPS>
	{
		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _textFPS;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _curFPS;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _updateInterval;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _accum;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _frames;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _timeLeft;

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x8905E0", Offset = "0x8905E0", VA = "0x8905E0", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x890638", Offset = "0x890638", VA = "0x890638", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x89063C", Offset = "0x89063C", VA = "0x89063C", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x890640", Offset = "0x890640", VA = "0x890640")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x890754", Offset = "0x890754", VA = "0x890754")]
		public DzAutoShowFPS()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class DzAutoZoomingButton : DzMonoBehaviour<DzAutoZoomingButton>
	{
		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _ZoomingScale;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _ZoomingDuration;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool _ZoomingEnabled;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Button _button;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _saveButtonScale;

		[Token(Token = "0x170001BE")]
		public float ZoomingScale
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x8907B0", Offset = "0x8907B0", VA = "0x8907B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x8907B8", Offset = "0x8907B8", VA = "0x8907B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public float ZoomingDuration
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0x8907C0", Offset = "0x8907C0", VA = "0x8907C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x8907C8", Offset = "0x8907C8", VA = "0x8907C8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public bool ZoomingEnabled
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0x8907D0", Offset = "0x8907D0", VA = "0x8907D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x8907D8", Offset = "0x8907D8", VA = "0x8907D8")]
			set
			{
			}
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x8907E4", Offset = "0x8907E4", VA = "0x8907E4", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x89086C", Offset = "0x89086C", VA = "0x89086C", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x890870", Offset = "0x890870", VA = "0x890870", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x890874", Offset = "0x890874", VA = "0x890874")]
		public bool IsTweening()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x8908F8", Offset = "0x8908F8", VA = "0x8908F8")]
		public void TweenOnce()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x8909E8", Offset = "0x8909E8", VA = "0x8909E8")]
		public DzAutoZoomingButton()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class DzAutoZoomingController : DzMonoBehaviour<DzAutoZoomingController>
	{
		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DzAutoZoomingButton[] _ZoomingButtons;

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x890A4C", Offset = "0x890A4C", VA = "0x890A4C", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x890A94", Offset = "0x890A94", VA = "0x890A94", Slot = "5")]
		protected override void OnFinalize()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x890A98", Offset = "0x890A98", VA = "0x890A98", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x890ADC", Offset = "0x890ADC", VA = "0x890ADC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x890BDC", Offset = "0x890BDC", VA = "0x890BDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x890CE0", Offset = "0x890CE0", VA = "0x890CE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x890DC4", Offset = "0x890DC4", VA = "0x890DC4")]
		private void OnDzTimePauserPause()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x890E0C", Offset = "0x890E0C", VA = "0x890E0C")]
		private void OnDzTimePauserResume()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x890E50", Offset = "0x890E50", VA = "0x890E50")]
		public DzAutoZoomingController()
		{
		}
	}
}
namespace CurvedUI
{
	[Token(Token = "0x2000199")]
	public class CUI_AnimateCurvedFillOnStart : MonoBehaviour
	{
		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x7B3300", Offset = "0x7B3300", VA = "0x7B3300")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x7B34F0", Offset = "0x7B34F0", VA = "0x7B34F0")]
		public CUI_AnimateCurvedFillOnStart()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class CUI_CameraController : MonoBehaviour
	{
		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CUI_CameraController instance;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform CameraObject;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rotationMargin;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool runInEditorOnly;

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x7B34F8", Offset = "0x7B34F8", VA = "0x7B34F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x7B354C", Offset = "0x7B354C", VA = "0x7B354C")]
		public CUI_CameraController()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class CUI_ChangeColor : MonoBehaviour
	{
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x7B3564", Offset = "0x7B3564", VA = "0x7B3564")]
		public void ChangeColorToBlue()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x7B35E0", Offset = "0x7B35E0", VA = "0x7B35E0")]
		public void ChangeColorToCyan()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x7B365C", Offset = "0x7B365C", VA = "0x7B365C")]
		public void ChangeColorToWhite()
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x7B36D8", Offset = "0x7B36D8", VA = "0x7B36D8")]
		public CUI_ChangeColor()
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class CUI_ChangeValueOnHold : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool pressed;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool selected;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image bg;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color SelectedColor;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color NormalColor;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CanvasGroup IntroCG;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CanvasGroup MenuCG;

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x7B36E0", Offset = "0x7B36E0", VA = "0x7B36E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x7B3764", Offset = "0x7B3764", VA = "0x7B3764")]
		private void ChangeVal()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x7B38CC", Offset = "0x7B38CC", VA = "0x7B38CC", Slot = "4")]
		public void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x7B3964", Offset = "0x7B3964", VA = "0x7B3964", Slot = "5")]
		public void OnPointerExit(PointerEventData data)
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x7B39F0", Offset = "0x7B39F0", VA = "0x7B39F0")]
		public CUI_ChangeValueOnHold()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class CUI_DragBetweenCanvases : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 dragPoint;

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x7B39F8", Offset = "0x7B39F8", VA = "0x7B39F8", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x7B3D38", Offset = "0x7B3D38", VA = "0x7B3D38", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x7B44F8", Offset = "0x7B44F8", VA = "0x7B44F8", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x7B3B40", Offset = "0x7B3B40", VA = "0x7B3B40")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x7B4564", Offset = "0x7B4564", VA = "0x7B4564")]
		public CUI_DragBetweenCanvases()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class CUI_GunController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2DF8", Offset = "0x5C2DF8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__2_0;

			[Token(Token = "0x60011EA")]
			[Address(RVA = "0x7B4ACC", Offset = "0x7B4ACC", VA = "0x7B4ACC")]
			public <>c()
			{
			}

			[Token(Token = "0x60011EB")]
			[Address(RVA = "0x7B4AD4", Offset = "0x7B4AD4", VA = "0x7B4AD4")]
			internal bool <Update>b__2_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings ControlledCanvas;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x7B456C", Offset = "0x7B456C", VA = "0x7B456C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x7B4A60", Offset = "0x7B4A60", VA = "0x7B4A60")]
		public CUI_GunController()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class CUI_GunMovement : MonoBehaviour
	{
		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform pivot;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float sensitivity;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 lastMouse;

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x7B4B9C", Offset = "0x7B4B9C", VA = "0x7B4B9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x7B4BC8", Offset = "0x7B4BC8", VA = "0x7B4BC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x7B4DE4", Offset = "0x7B4DE4", VA = "0x7B4DE4")]
		public CUI_GunMovement()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class CUI_OrientOnCurvedSpace : MonoBehaviour
	{
		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurvedUISettings mySettings;

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x7B4DF8", Offset = "0x7B4DF8", VA = "0x7B4DF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x7B4E50", Offset = "0x7B4E50", VA = "0x7B4E50")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x7B54E0", Offset = "0x7B54E0", VA = "0x7B54E0")]
		public CUI_OrientOnCurvedSpace()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class CUI_PerlinNoisePosition : MonoBehaviour
	{
		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Range;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform rectie;

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x7B54E8", Offset = "0x7B54E8", VA = "0x7B54E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x7B555C", Offset = "0x7B555C", VA = "0x7B555C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x7B56B4", Offset = "0x7B56B4", VA = "0x7B56B4")]
		public CUI_PerlinNoisePosition()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class CUI_PerlinNoiseRotation : MonoBehaviour
	{
		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxrotation;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform rectie;

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x7B56C4", Offset = "0x7B56C4", VA = "0x7B56C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x7B5738", Offset = "0x7B5738", VA = "0x7B5738")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x7B582C", Offset = "0x7B582C", VA = "0x7B582C")]
		public CUI_PerlinNoiseRotation()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class CUI_PickImageFromSet : MonoBehaviour
	{
		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CUI_PickImageFromSet picked;

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x7B5840", Offset = "0x7B5840", VA = "0x7B5840")]
		public void PickThis()
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x7B5A04", Offset = "0x7B5A04", VA = "0x7B5A04")]
		public CUI_PickImageFromSet()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class CUI_RaycastToCanvas : MonoBehaviour
	{
		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x7B5A10", Offset = "0x7B5A10", VA = "0x7B5A10")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x7B5A68", Offset = "0x7B5A68", VA = "0x7B5A68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x7B5B68", Offset = "0x7B5B68", VA = "0x7B5B68")]
		public CUI_RaycastToCanvas()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class CUI_RiseChildrenOverTime : MonoBehaviour
	{
		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float current;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Speed;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RiseBy;

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x7B5B70", Offset = "0x7B5B70", VA = "0x7B5B70")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x7B5B74", Offset = "0x7B5B74", VA = "0x7B5B74")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x7B5D6C", Offset = "0x7B5D6C", VA = "0x7B5D6C")]
		public CUI_RiseChildrenOverTime()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class CUI_TMPChecker : MonoBehaviour
	{
		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject testMsg;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject enabledMsg;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject disabledMsg;

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x7B5D80", Offset = "0x7B5D80", VA = "0x7B5D80")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x7B5DFC", Offset = "0x7B5DFC", VA = "0x7B5DFC")]
		public CUI_TMPChecker()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class CUI_ViveButtonState : MonoBehaviour
	{
		[Token(Token = "0x20002D5")]
		private enum ViveButton
		{
			[Token(Token = "0x4000EDE")]
			Trigger,
			[Token(Token = "0x4000EDF")]
			TouchpadTouch,
			[Token(Token = "0x4000EE0")]
			TouchpadPress,
			[Token(Token = "0x4000EE1")]
			Grip,
			[Token(Token = "0x4000EE2")]
			Menu
		}

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color ActiveColor;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color InActiveColor;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ViveButton ShowStateFor;

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x7B5E04", Offset = "0x7B5E04", VA = "0x7B5E04")]
		public CUI_ViveButtonState()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class CUI_ViveHapticPulse : MonoBehaviour
	{
		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float PulseStrength;

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x7B5E48", Offset = "0x7B5E48", VA = "0x7B5E48")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x7B5E54", Offset = "0x7B5E54", VA = "0x7B5E54")]
		public void SetPulseStrength(float newStr)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x7B5ED8", Offset = "0x7B5ED8", VA = "0x7B5ED8")]
		public void TriggerPulse()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x7B5EDC", Offset = "0x7B5EDC", VA = "0x7B5EDC")]
		public CUI_ViveHapticPulse()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class CUI_WorldSpaceCursorFollow : MonoBehaviour
	{
		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x7B5EE4", Offset = "0x7B5EE4", VA = "0x7B5EE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x7B603C", Offset = "0x7B603C", VA = "0x7B603C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x7B6110", Offset = "0x7B6110", VA = "0x7B6110")]
		public CUI_WorldSpaceCursorFollow()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class CUI_WorldSpaceMouseMultipleCanvases : MonoBehaviour
	{
		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CurvedUISettings> ControlledCanvases;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform WorldSpaceMouse;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CurvedUISettings MouseCanvas;

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x7B6118", Offset = "0x7B6118", VA = "0x7B6118")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x7B64B0", Offset = "0x7B64B0", VA = "0x7B64B0")]
		public CUI_WorldSpaceMouseMultipleCanvases()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class CUI_draggable : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 savedVector;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isDragged;

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x7B64B8", Offset = "0x7B64B8", VA = "0x7B64B8", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x7B6800", Offset = "0x7B6800", VA = "0x7B6800", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x7B6804", Offset = "0x7B6804", VA = "0x7B6804", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x7B687C", Offset = "0x7B687C", VA = "0x7B687C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x7B6608", Offset = "0x7B6608", VA = "0x7B6608")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x7B6990", Offset = "0x7B6990", VA = "0x7B6990")]
		public CUI_draggable()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class CUI_inventory_paralax : MonoBehaviour
	{
		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform front;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform back;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 initFG;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initBG;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float change;

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x7B6998", Offset = "0x7B6998", VA = "0x7B6998")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x7B69E8", Offset = "0x7B69E8", VA = "0x7B69E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x7B6C24", Offset = "0x7B6C24", VA = "0x7B6C24")]
		public CUI_inventory_paralax()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class CurvedUIEventSystem : EventSystem
	{
		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CurvedUIEventSystem instance;

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x7B6C34", Offset = "0x7B6C34", VA = "0x7B6C34", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x7B6C94", Offset = "0x7B6C94", VA = "0x7B6C94", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x7B6CA0", Offset = "0x7B6CA0", VA = "0x7B6CA0")]
		public CurvedUIEventSystem()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public static class CurvedUIExtensionMethods
	{
		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x7B6D08", Offset = "0x7B6D08", VA = "0x7B6D08")]
		public static bool AlmostEqual(this Vector3 a, Vector3 b, double accuracy = 0.01)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x7B5698", Offset = "0x7B5698", VA = "0x7B5698")]
		public static float Remap(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x7B6DD4", Offset = "0x7B6DD4", VA = "0x7B6DD4")]
		public static float RemapAndClamp(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x7B6E80", Offset = "0x7B6E80", VA = "0x7B6E80")]
		public static float Remap(this int value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x7B6EA0", Offset = "0x7B6EA0", VA = "0x7B6EA0")]
		public static double Remap(this double value, double from1, double to1, double from2, double to2)
		{
			return default(double);
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x7B6DF8", Offset = "0x7B6DF8", VA = "0x7B6DF8")]
		public static float Clamp(this float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x7B6EBC", Offset = "0x7B6EBC", VA = "0x7B6EBC")]
		public static float Clamp(this int value, int min, int max)
		{
			return default(float);
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x7B6F44", Offset = "0x7B6F44", VA = "0x7B6F44")]
		public static int Abs(this int value)
		{
			return default(int);
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x7B6FAC", Offset = "0x7B6FAC", VA = "0x7B6FAC")]
		public static float Abs(this float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x7B7018", Offset = "0x7B7018", VA = "0x7B7018")]
		public static int ToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x7B7088", Offset = "0x7B7088", VA = "0x7B7088")]
		public static int FloorToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x7B70F8", Offset = "0x7B70F8", VA = "0x7B70F8")]
		public static int CeilToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x7B49F0", Offset = "0x7B49F0", VA = "0x7B49F0")]
		public static Vector3 ModifyX(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x7B4A28", Offset = "0x7B4A28", VA = "0x7B4A28")]
		public static Vector3 ModifyY(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x7B49B8", Offset = "0x7B49B8", VA = "0x7B49B8")]
		public static Vector3 ModifyZ(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x7B7168", Offset = "0x7B7168", VA = "0x7B7168")]
		public static Vector2 ModifyVectorX(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x7B7208", Offset = "0x7B7208", VA = "0x7B7208")]
		public static Vector2 ModifyVectorY(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x7B418C", Offset = "0x7B418C", VA = "0x7B418C")]
		public static void ResetTransform(this Transform trans)
		{
		}

		[Token(Token = "0x6000D8C")]
		public static T AddComponentIfMissing<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000D8D")]
		public static T AddComponentIfMissing<T>(this Component go) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x20001AF")]
	public class CurvedUIHandSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject LaserBeam;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C6284", Offset = "0x5C6284")]
		private bool autoSwitchHands;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C62D0", Offset = "0x5C62D0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C62D0", Offset = "0x5C62D0")]
		private Transform leftHandOverride;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C6340", Offset = "0x5C6340")]
		private Transform rightHandOverride;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRInput.Controller activeCont;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool initialized;

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x7B72A8", Offset = "0x7B72A8", VA = "0x7B72A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x7B7894", Offset = "0x7B7894", VA = "0x7B7894")]
		private bool IsButtonDownOnController(OVRInput.Controller cont, OVRInput.Controller cont2 = OVRInput.Controller.None)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x7B757C", Offset = "0x7B757C", VA = "0x7B757C")]
		private void SwitchHandTo(CurvedUIInputModule.Hand newHand)
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x7B79C8", Offset = "0x7B79C8", VA = "0x7B79C8")]
		public CurvedUIHandSwitcher()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class CurvedUIInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x20002D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2E08", Offset = "0x5C2E08")]
		private sealed class <CaretBlinker>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUIInputFieldCaret <>4__this;

			[Token(Token = "0x170002AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011EF")]
				[Address(RVA = "0x7B8638", Offset = "0x7B8638", VA = "0x7B8638", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011F1")]
				[Address(RVA = "0x7B86A0", Offset = "0x7B86A0", VA = "0x7B86A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011EC")]
			[Address(RVA = "0x7B81F0", Offset = "0x7B81F0", VA = "0x7B81F0")]
			[DebuggerHidden]
			public <CaretBlinker>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60011ED")]
			[Address(RVA = "0x7B851C", Offset = "0x7B851C", VA = "0x7B851C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011EE")]
			[Address(RVA = "0x7B8520", Offset = "0x7B8520", VA = "0x7B8520", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x7B8640", Offset = "0x7B8640", VA = "0x7B8640", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField myField;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lastCharDist;

		[Token(Token = "0x170001C1")]
		public Color CaretColor
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0x7B84A4", Offset = "0x7B84A4", VA = "0x7B84A4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0x7B84B0", Offset = "0x7B84B0", VA = "0x7B84B0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public Color SelectionColor
		{
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0x7B84BC", Offset = "0x7B84BC", VA = "0x7B84BC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0x7B84C8", Offset = "0x7B84C8", VA = "0x7B84C8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0x7B84D4", Offset = "0x7B84D4", VA = "0x7B84D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0x7B84F0", Offset = "0x7B84F0", VA = "0x7B84F0")]
			set
			{
			}
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x7B79D8", Offset = "0x7B79D8", VA = "0x7B79D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x7B7A30", Offset = "0x7B7A30", VA = "0x7B7A30")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x7B7D70", Offset = "0x7B7D70", VA = "0x7B7D70", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x7B81B8", Offset = "0x7B81B8", VA = "0x7B81B8", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x7B8148", Offset = "0x7B8148", VA = "0x7B8148")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CAC90", Offset = "0x5CAC90")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x7B7E30", Offset = "0x7B7E30", VA = "0x7B7E30")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x7B7A40", Offset = "0x7B7A40", VA = "0x7B7A40")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x7B821C", Offset = "0x7B821C", VA = "0x7B821C")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x7B850C", Offset = "0x7B850C", VA = "0x7B850C")]
		public CurvedUIInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class CurvedUILaserBeam : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2E18", Offset = "0x5C2E18")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__3_0;

			[Token(Token = "0x60011F3")]
			[Address(RVA = "0x7B8C38", Offset = "0x7B8C38", VA = "0x7B8C38")]
			public <>c()
			{
			}

			[Token(Token = "0x60011F4")]
			[Address(RVA = "0x7B8C40", Offset = "0x7B8C40", VA = "0x7B8C40")]
			internal bool <Update>b__3_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamDot;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool hideWhenNotAimingAtCanvas;

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x7B86A8", Offset = "0x7B86A8", VA = "0x7B86A8")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x7B8BCC", Offset = "0x7B8BCC", VA = "0x7B8BCC")]
		public CurvedUILaserBeam()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class CurvedUILaserBeam2 : MonoBehaviour
	{
		[Token(Token = "0x4000963")]
		private const float MAX_DISTANCE = 100f;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamDot;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool CollideWithMyLayerOnly;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool hideWhenNotAimingAtCanvas;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool CollideMustUILayer;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _MaxDistance;

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x7B8D34", Offset = "0x7B8D34", VA = "0x7B8D34")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x7B91B4", Offset = "0x7B91B4", VA = "0x7B91B4")]
		public CurvedUILaserBeam2()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class CurvedUIPhysicsRaycaster : BaseRaycaster
	{
		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int sortOrder;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private RaycastHit hitInfo;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RaycastResult result;

		[Token(Token = "0x170001C4")]
		public int CompoundEventMask
		{
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0x7B94A8", Offset = "0x7B94A8", VA = "0x7B94A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C5")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0x7B95A8", Offset = "0x7B95A8", VA = "0x7B95A8", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		public virtual int Depth
		{
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0x7B9678", Offset = "0x7B9678", VA = "0x7B9678", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C7")]
		public override int sortOrderPriority
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x7B9738", Offset = "0x7B9738", VA = "0x7B9738", Slot = "20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x7B91C4", Offset = "0x7B91C4", VA = "0x7B91C4")]
		protected CurvedUIPhysicsRaycaster()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x7B91D4", Offset = "0x7B91D4", VA = "0x7B91D4", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class CurvedUIPointerEventData : PointerEventData
	{
		[Token(Token = "0x20002D8")]
		public enum ControllerType
		{
			[Token(Token = "0x4000EE9")]
			NONE = -1,
			[Token(Token = "0x4000EEA")]
			VIVE
		}

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GameObject Controller;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Vector2 TouchPadAxis;

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x7B9740", Offset = "0x7B9740", VA = "0x7B9740")]
		public CurvedUIPointerEventData(EventSystem eventSystem)
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class CurvedUIRaycaster : GraphicRaycaster
	{
		[Serializable]
		[Token(Token = "0x20002D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2E28", Offset = "0x5C2E28")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__21_0;

			[Token(Token = "0x4000EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Graphic> <>9__32_0;

			[Token(Token = "0x4000EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Comparison<Graphic> <>9__55_0;

			[Token(Token = "0x60011F6")]
			[Address(RVA = "0x7C1C20", Offset = "0x7C1C20", VA = "0x7C1C20")]
			public <>c()
			{
			}

			[Token(Token = "0x60011F7")]
			[Address(RVA = "0x7C1C28", Offset = "0x7C1C28", VA = "0x7C1C28")]
			internal bool <Update>b__21_0(GameObject obj)
			{
				return default(bool);
			}

			[Token(Token = "0x60011F8")]
			[Address(RVA = "0x7C1CEC", Offset = "0x7C1CEC", VA = "0x7C1CEC")]
			internal int <FlatRaycastAndSort>b__32_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}

			[Token(Token = "0x60011F9")]
			[Address(RVA = "0x7C1D44", Offset = "0x7C1D44", VA = "0x7C1D44")]
			internal int <GetObjectsHitByRay>b__55_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool showDebug;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool overrideEventData;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas myCanvas;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 cyllinderMidPoint;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GameObject> objectsUnderPointer;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 lastCanvasPos;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject colliderContainer;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PointerEventData lastFrameEventData;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PointerEventData curEventData;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PointerEventData eventDataToUse;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Ray cachedRay;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Graphic gph;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<GameObject> selectablesUnderGaze;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<GameObject> selectablesUnderGazeLastFrame;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float objectsUnderGazeLastChangeTime;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool gazeClickExecuted;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool pointingAtCanvas;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		private bool pointingAtCanvasLastFrame;

		[NonSerialized]
		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<Graphic> m_RaycastResults;

		[NonSerialized]
		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Graphic> s_SortedGraphics;

		[Token(Token = "0x170001C8")]
		private Image GazeProgressImage
		{
			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0x7BA75C", Offset = "0x7BA75C", VA = "0x7BA75C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x7C1288", Offset = "0x7C1288", VA = "0x7C1288")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x7B97C8", Offset = "0x7B97C8", VA = "0x7B97C8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x7B9A4C", Offset = "0x7B9A4C", VA = "0x7B9A4C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x7BA1F0", Offset = "0x7BA1F0", VA = "0x7BA1F0", Slot = "22")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x7BA5A4", Offset = "0x7BA5A4", VA = "0x7BA5A4")]
		private void ProcessGazeTimedClick()
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x7BA578", Offset = "0x7BA578", VA = "0x7BA578")]
		private void ResetGazeTimedClick()
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x7BAD58", Offset = "0x7BAD58", VA = "0x7BAD58", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x7BC07C", Offset = "0x7BC07C", VA = "0x7BC07C", Slot = "23")]
		public virtual bool RaycastToCyllinderCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x7BC948", Offset = "0x7BC948", VA = "0x7BC948", Slot = "24")]
		public virtual bool RaycastToCyllinderVerticalCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x7BD060", Offset = "0x7BD060", VA = "0x7BD060", Slot = "25")]
		public virtual bool RaycastToRingCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x7BD610", Offset = "0x7BD610", VA = "0x7BD610", Slot = "26")]
		public virtual bool RaycastToSphereCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x7BBA10", Offset = "0x7BBA10", VA = "0x7BBA10")]
		private void FlatRaycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x7BE134", Offset = "0x7BE134", VA = "0x7BE134")]
		private static void FlatRaycastAndSort(Canvas canvas, Camera eventCamera, Vector2 pointerPosition, IList<Graphic> foundGraphics, List<Graphic> results)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x7B9CE8", Offset = "0x7B9CE8", VA = "0x7B9CE8")]
		protected void CreateCollider()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x7BFBE0", Offset = "0x7BFBE0", VA = "0x7BFBE0")]
		private void SetupMeshColliderUsingMesh(Mesh meshie)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x7BE5EC", Offset = "0x7BE5EC", VA = "0x7BE5EC")]
		private GameObject CreateConvexCyllinderCollider(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x7BF270", Offset = "0x7BF270", VA = "0x7BF270")]
		private Mesh CreateCyllinderColliderMesh(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x7BFC90", Offset = "0x7BFC90", VA = "0x7BFC90")]
		private Mesh CreateSphereColliderMesh()
		{
			return null;
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x7C07E4", Offset = "0x7C07E4", VA = "0x7C07E4")]
		private bool IsInLayerMask(int layer, LayerMask layermask)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x7BC794", Offset = "0x7BC794", VA = "0x7BC794")]
		private LayerMask GetRaycastLayerMask()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x7BC804", Offset = "0x7BC804", VA = "0x7BC804")]
		private float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x7C083C", Offset = "0x7C083C", VA = "0x7C083C")]
		private bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x7C090C", Offset = "0x7C090C", VA = "0x7C090C", Slot = "27")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x7BB53C", Offset = "0x7BB53C", VA = "0x7BB53C")]
		protected void UpdateSelectedObjects(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x7C0924", Offset = "0x7C0924", VA = "0x7C0924")]
		protected void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget)
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x7C0F54", Offset = "0x7C0F54", VA = "0x7C0F54")]
		protected static GameObject FindCommonRoot(GameObject g1, GameObject g2)
		{
			return null;
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x7C10FC", Offset = "0x7C10FC", VA = "0x7C10FC")]
		private bool GetScreenSpacePointByRay(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x7B9ADC", Offset = "0x7B9ADC", VA = "0x7B9ADC")]
		private bool CheckEventCamera()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x7C1290", Offset = "0x7C1290", VA = "0x7C1290")]
		public void RebuildCollider()
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x7B4944", Offset = "0x7B4944", VA = "0x7B4944")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x7C12FC", Offset = "0x7C12FC", VA = "0x7C12FC")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 screenPos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x7C140C", Offset = "0x7C140C", VA = "0x7C140C")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x7BA7CC", Offset = "0x7BA7CC", VA = "0x7BA7CC")]
		public void Click()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x7C0480", Offset = "0x7C0480", VA = "0x7C0480")]
		private void ModifyQuad(List<Vector3> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x7C1830", Offset = "0x7C1830", VA = "0x7C1830")]
		private Vector3 TesselateQuad(List<Vector3> quad, float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x7C1A24", Offset = "0x7C1A24", VA = "0x7C1A24")]
		public CurvedUIRaycaster()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5C22CC", Offset = "0x5C22CC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C22CC", Offset = "0x5C22CC")]
	public class CurvedUISettings : MonoBehaviour
	{
		[Token(Token = "0x20002DA")]
		public enum CurvedUIShape
		{
			[Token(Token = "0x4000EF0")]
			CYLINDER,
			[Token(Token = "0x4000EF1")]
			RING,
			[Token(Token = "0x4000EF2")]
			SPHERE,
			[Token(Token = "0x4000EF3")]
			CYLINDER_VERTICAL
		}

		[Token(Token = "0x4000984")]
		public const string Version = "3.2";

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUIShape shape;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float quality;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool interactable;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool blocksRaycasts;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool forceUseBoxCollider;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int angle;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool preserveAspect;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int vertAngle;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float ringFill;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int ringExternalDiamater;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool ringFlipVertical;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int baseCircleSegments;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 savedRectSize;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float savedRadius;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas myCanvas;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x170001CA")]
		private RectTransform RectTransform
		{
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x7C1E28", Offset = "0x7C1E28", VA = "0x7C1E28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		public int BaseCircleSegments
		{
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0x7C31E8", Offset = "0x7C31E8", VA = "0x7C31E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CC")]
		public int Angle
		{
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0x7C31F0", Offset = "0x7C31F0", VA = "0x7C31F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0x7C31F8", Offset = "0x7C31F8", VA = "0x7C31F8")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public float Quality
		{
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x7C320C", Offset = "0x7C320C", VA = "0x7C320C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0x7C3214", Offset = "0x7C3214", VA = "0x7C3214")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public CurvedUIShape Shape
		{
			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x7C3230", Offset = "0x7C3230", VA = "0x7C3230")]
			get
			{
				return default(CurvedUIShape);
			}
			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0x7C3238", Offset = "0x7C3238", VA = "0x7C3238")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public int VerticalAngle
		{
			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0x7C3258", Offset = "0x7C3258", VA = "0x7C3258")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DED")]
			[Address(RVA = "0x7C3260", Offset = "0x7C3260", VA = "0x7C3260")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public float RingFill
		{
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0x7C3280", Offset = "0x7C3280", VA = "0x7C3280")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0x7B34D4", Offset = "0x7B34D4", VA = "0x7B34D4")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public float SavedRadius
		{
			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0x7C27F4", Offset = "0x7C27F4", VA = "0x7C27F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001D2")]
		public int RingExternalDiameter
		{
			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0x7C3288", Offset = "0x7C3288", VA = "0x7C3288")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0x7C3290", Offset = "0x7C3290", VA = "0x7C3290")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public bool RingFlipVertical
		{
			[Token(Token = "0x6000DF3")]
			[Address(RVA = "0x7C32B0", Offset = "0x7C32B0", VA = "0x7C32B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0x7C32B8", Offset = "0x7C32B8", VA = "0x7C32B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public bool PreserveAspect
		{
			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0x7C32E4", Offset = "0x7C32E4", VA = "0x7C32E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x7C32EC", Offset = "0x7C32EC", VA = "0x7C32EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public bool Interactable
		{
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x7C3318", Offset = "0x7C3318", VA = "0x7C3318")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0x7C3320", Offset = "0x7C3320", VA = "0x7C3320")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public bool ForceUseBoxCollider
		{
			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0x7C332C", Offset = "0x7C332C", VA = "0x7C332C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0x7C3334", Offset = "0x7C3334", VA = "0x7C3334")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public bool BlocksRaycasts
		{
			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0x7C3340", Offset = "0x7C3340", VA = "0x7C3340")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0x7C3348", Offset = "0x7C3348", VA = "0x7C3348")]
			set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5CBD94", Offset = "0x5CBD94")]
		public bool RaycastMyLayerOnly
		{
			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0x7C3430", Offset = "0x7C3430", VA = "0x7C3430")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0x7C3438", Offset = "0x7C3438", VA = "0x7C3438")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6000E00")]
			[Address(RVA = "0x7C34F8", Offset = "0x7C34F8", VA = "0x7C34F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DA")]
		public CurvedUIInputModule.CUIControlMethod ControlMethod
		{
			[Token(Token = "0x6000E02")]
			[Address(RVA = "0x7C0EF4", Offset = "0x7C0EF4", VA = "0x7C0EF4")]
			get
			{
				return default(CurvedUIInputModule.CUIControlMethod);
			}
			[Token(Token = "0x6000E03")]
			[Address(RVA = "0x7C36A8", Offset = "0x7C36A8", VA = "0x7C36A8")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public bool GazeUseTimedClick
		{
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0x7C3968", Offset = "0x7C3968", VA = "0x7C3968")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0x7C39D8", Offset = "0x7C39D8", VA = "0x7C39D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public float GazeClickTimer
		{
			[Token(Token = "0x6000E09")]
			[Address(RVA = "0x7C3A50", Offset = "0x7C3A50", VA = "0x7C3A50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0x7C3AC0", Offset = "0x7C3AC0", VA = "0x7C3AC0")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public float GazeClickTimerDelay
		{
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0x7C3B40", Offset = "0x7C3B40", VA = "0x7C3B40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0x7C3BB0", Offset = "0x7C3BB0", VA = "0x7C3BB0")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public float GazeTimerProgress
		{
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0x7C3C30", Offset = "0x7C3C30", VA = "0x7C3C30")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x7C1D9C", Offset = "0x7C1D9C", VA = "0x7C1D9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x7C1ED4", Offset = "0x7C1ED4", VA = "0x7C1ED4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x7C2218", Offset = "0x7C2218", VA = "0x7C2218")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x7C22C8", Offset = "0x7C22C8", VA = "0x7C22C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x7C2378", Offset = "0x7C2378", VA = "0x7C2378")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x7C24CC", Offset = "0x7C24CC", VA = "0x7C24CC")]
		private void SetUIAngle(int newAngle)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x7C26C4", Offset = "0x7C26C4", VA = "0x7C26C4")]
		private Vector3 CanvasToCyllinder(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x7C2824", Offset = "0x7C2824", VA = "0x7C2824")]
		private Vector3 CanvasToCyllinderVertical(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x7C2954", Offset = "0x7C2954", VA = "0x7C2954")]
		private Vector3 CanvasToRing(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x7C2A8C", Offset = "0x7C2A8C", VA = "0x7C2A8C")]
		private Vector3 CanvasToSphere(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x7C2C74", Offset = "0x7C2C74", VA = "0x7C2C74")]
		public void AddEffectToChildren()
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x7C2FB4", Offset = "0x7C2FB4", VA = "0x7C2FB4")]
		public Vector3 VertexPositionToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x7B5040", Offset = "0x7B5040", VA = "0x7B5040")]
		public Vector3 CanvasToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x7B5160", Offset = "0x7B5160", VA = "0x7B5160")]
		public Vector3 CanvasToCurvedCanvasNormal(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x7B4348", Offset = "0x7B4348", VA = "0x7B4348")]
		public bool RaycastToCanvasSpace(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x7B98D0", Offset = "0x7B98D0", VA = "0x7B98D0")]
		public float GetCyllinderRadiusInCanvasSpace()
		{
			return default(float);
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x7C024C", Offset = "0x7C024C", VA = "0x7C024C")]
		public Vector2 GetTesslationSize(bool modifiedByQuality = true)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x7C30E4", Offset = "0x7C30E4", VA = "0x7C30E4")]
		private float GetSegmentsByAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x7C343C", Offset = "0x7C343C", VA = "0x7C343C")]
		public void SetAllChildrenDirty(bool recalculateCurveOnly = false)
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x7C35EC", Offset = "0x7C35EC", VA = "0x7C35EC")]
		public void Click()
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x7B8AE8", Offset = "0x7B8AE8", VA = "0x7B8AE8")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x7C3710", Offset = "0x7C3710", VA = "0x7C3710")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 pos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x7C3858", Offset = "0x7C3858", VA = "0x7C3858")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x7C3CA0", Offset = "0x7C3CA0", VA = "0x7C3CA0")]
		public CurvedUISettings()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class CurvedUIVertexEffect : BaseMeshEffect
	{
		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C64EC", Offset = "0x5C64EC")]
		public bool DoNotTesselate;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas myCanvas;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Graphic myGraphic;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text myText;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMeshProUGUI myTMP;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUITMPSubmesh myTMPSubMesh;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_tesselationRequired;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool curvingRequired;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool TransformMisaligned;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Matrix4x4 CanvasToWorld;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Matrix4x4 CanvasToLocal;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Matrix4x4 MyToWorld;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Matrix4x4 MyToLocal;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<UIVertex> m_tesselatedVerts;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<UIVertex> m_curvedVerts;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private List<UIVertex> m_vertsInQuads;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private UIVertex m_ret;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private UIVertex[] m_quad;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private float[] m_weights;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedPos;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedUp;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedRectSize;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[HideInInspector]
		private Color savedColor;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedTextUV0;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		[HideInInspector]
		private float savedFill;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Vector2 _uv0;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private Vector2 _uv1;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Vector3 _pos;

		[Token(Token = "0x170001DF")]
		private bool tesselationRequired
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0x7C6428", Offset = "0x7C6428", VA = "0x7C6428")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0x7C6430", Offset = "0x7C6430", VA = "0x7C6430")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public bool TesselationRequired
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x7C902C", Offset = "0x7C902C", VA = "0x7C902C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0x7B3958", Offset = "0x7B3958", VA = "0x7B3958")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public bool CurvingRequired
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0x7C9034", Offset = "0x7C9034", VA = "0x7C9034")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E26")]
			[Address(RVA = "0x7C903C", Offset = "0x7C903C", VA = "0x7C903C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x7C643C", Offset = "0x7C643C", VA = "0x7C643C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x7C64E8", Offset = "0x7C64E8", VA = "0x7C64E8", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x7C668C", Offset = "0x7C668C", VA = "0x7C668C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x7C6C04", Offset = "0x7C6C04", VA = "0x7C6C04", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x7C6D84", Offset = "0x7C6D84", VA = "0x7C6D84")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x7C6D90", Offset = "0x7C6D90", VA = "0x7C6D90")]
		private void FontTextureRebuiltCallback(Font fontie)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x7C6E34", Offset = "0x7C6E34", VA = "0x7C6E34")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x7C73E4", Offset = "0x7C73E4", VA = "0x7C73E4", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x7C4BE8", Offset = "0x7C4BE8", VA = "0x7C4BE8")]
		public void ModifyTMPMesh(ref List<UIVertex> vertexList)
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x7C7A60", Offset = "0x7C7A60", VA = "0x7C7A60")]
		private bool ShouldModify()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x7C7B64", Offset = "0x7C7B64", VA = "0x7C7B64")]
		private void CheckTextFontMaterial()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x7B424C", Offset = "0x7B424C", VA = "0x7B424C")]
		public CurvedUISettings FindParentSettings(bool forceNew = false)
		{
			return null;
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x7C7FE0", Offset = "0x7C7FE0", VA = "0x7C7FE0")]
		private UIVertex CurveVertex(UIVertex input, float cylinder_angle, float radius, Vector2 canvasSize)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x7C7E08", Offset = "0x7C7E08", VA = "0x7C7E08")]
		private void TesselateGeometry(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x7C8604", Offset = "0x7C8604", VA = "0x7C8604")]
		private void ModifyQuad(List<UIVertex> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x7C83A4", Offset = "0x7C83A4", VA = "0x7C83A4")]
		private void TrisToQuads(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x7C8CA0", Offset = "0x7C8CA0", VA = "0x7C8CA0")]
		private UIVertex TesselateQuad(float x, float y)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x7C26B8", Offset = "0x7C26B8", VA = "0x7C26B8")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x7C9048", Offset = "0x7C9048", VA = "0x7C9048")]
		public CurvedUIVertexEffect()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class CurvedUIViveController : MonoBehaviour
	{
		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x88AC40", Offset = "0x88AC40", VA = "0x88AC40")]
		public CurvedUIViveController()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public struct ViveInputArgs
	{
		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float buttonPressure;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 touchpadAxis;
	}
	[Token(Token = "0x20001BA")]
	public delegate void ViveInputEvent(object sender, ViveInputArgs e);
	[Token(Token = "0x20001BB")]
	public delegate void ViveEvent(object sender);
	[Token(Token = "0x20001BC")]
	[ExecuteInEditMode]
	public class CurvedUITMP : MonoBehaviour
	{
		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI tmpText;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UIVertex> m_UIVerts;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UIVertex m_tempVertex;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CurvedUITMPSubmesh m_tempSubMsh;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 savedSize;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 savedUp;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 savedPos;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 savedLocalScale;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 savedGlobalScale;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<CurvedUITMPSubmesh> subMeshes;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool Dirty;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool curvingRequired;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		private bool tesselationRequired;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		private bool quitting;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3[] vertices;

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x7C3CE4", Offset = "0x7C3CE4", VA = "0x7C3CE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x7C3D74", Offset = "0x7C3D74", VA = "0x7C3D74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x7C4018", Offset = "0x7C4018", VA = "0x7C4018")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x7C4164", Offset = "0x7C4164", VA = "0x7C4164")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x7C4170", Offset = "0x7C4170", VA = "0x7C4170")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x7C49C8", Offset = "0x7C49C8", VA = "0x7C49C8")]
		private void CreateUIVertexList(Mesh mesh)
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x7C5470", Offset = "0x7C5470", VA = "0x7C5470")]
		private void GetUIVertexFromMesh(ref UIVertex vert, int i)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x7C4E9C", Offset = "0x7C4E9C", VA = "0x7C4E9C")]
		private void FillMeshWithUIVertexList(Mesh mesh, List<UIVertex> list)
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x7C3EF8", Offset = "0x7C3EF8", VA = "0x7C3EF8")]
		private void FindTMP()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x7C4FF0", Offset = "0x7C4FF0", VA = "0x7C4FF0")]
		private void FindSubmeshes()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x7C4648", Offset = "0x7C4648", VA = "0x7C4648")]
		private bool ShouldTesselate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x7C54C0", Offset = "0x7C54C0", VA = "0x7C54C0")]
		private void TMPTextChangedCallback(object obj)
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x7C54DC", Offset = "0x7C54DC", VA = "0x7C54DC")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x7C54E8", Offset = "0x7C54E8", VA = "0x7C54E8")]
		public CurvedUITMP()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	[ExecuteInEditMode]
	public class CurvedUITMPInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x20002DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2E38", Offset = "0x5C2E38")]
		private sealed class <CaretBlinker>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUITMPInputFieldCaret <>4__this;

			[Token(Token = "0x170002AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011FD")]
				[Address(RVA = "0x7C63B0", Offset = "0x7C63B0", VA = "0x7C63B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011FF")]
				[Address(RVA = "0x7C6418", Offset = "0x7C6418", VA = "0x7C6418", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011FA")]
			[Address(RVA = "0x7C6104", Offset = "0x7C6104", VA = "0x7C6104")]
			[DebuggerHidden]
			public <CaretBlinker>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60011FB")]
			[Address(RVA = "0x7C6294", Offset = "0x7C6294", VA = "0x7C6294", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011FC")]
			[Address(RVA = "0x7C6298", Offset = "0x7C6298", VA = "0x7C6298", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011FE")]
			[Address(RVA = "0x7C63B8", Offset = "0x7C63B8", VA = "0x7C63B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_InputField myField;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x170001E2")]
		public Color CaretColor
		{
			[Token(Token = "0x6000E48")]
			[Address(RVA = "0x7C6224", Offset = "0x7C6224", VA = "0x7C6224")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0x7C6230", Offset = "0x7C6230", VA = "0x7C6230")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public Color SelectionColor
		{
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0x7C623C", Offset = "0x7C623C", VA = "0x7C623C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x7C6248", Offset = "0x7C6248", VA = "0x7C6248")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x7C6254", Offset = "0x7C6254", VA = "0x7C6254")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0x7C6270", Offset = "0x7C6270", VA = "0x7C6270")]
			set
			{
			}
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x7C5580", Offset = "0x7C5580", VA = "0x7C5580")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x7C5938", Offset = "0x7C5938", VA = "0x7C5938")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x7C5C64", Offset = "0x7C5C64", VA = "0x7C5C64", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x7C60CC", Offset = "0x7C60CC", VA = "0x7C60CC", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x7C605C", Offset = "0x7C605C", VA = "0x7C605C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CACF4", Offset = "0x5CACF4")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x7C5D24", Offset = "0x7C5D24", VA = "0x7C5D24")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x7C5948", Offset = "0x7C5948", VA = "0x7C5948")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x7C6130", Offset = "0x7C6130", VA = "0x7C6130")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x7C561C", Offset = "0x7C561C", VA = "0x7C561C")]
		private void CheckAndConvertMask()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x7C628C", Offset = "0x7C628C", VA = "0x7C628C")]
		public CurvedUITMPInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	[ExecuteInEditMode]
	public class CurvedUITMPSubmesh : MonoBehaviour
	{
		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VertexHelper vh;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh straightMesh;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh curvedMesh;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TMP_SubMeshUI TMPsub;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMeshProUGUI TMPtext;

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x7C50FC", Offset = "0x7C50FC", VA = "0x7C50FC")]
		public void UpdateSubmesh(bool tesselate, bool curve)
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x7C6420", Offset = "0x7C6420", VA = "0x7C6420")]
		public CurvedUITMPSubmesh()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5C2384", Offset = "0x5C2384")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x5C2384", Offset = "0x5C2384")]
	public class OptionalDependencyAttribute : Attribute
	{
		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string dependentClass;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string define;

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x88AC48", Offset = "0x88AC48", VA = "0x88AC48")]
		public OptionalDependencyAttribute(string dependentClass, string define)
		{
		}
	}
}
namespace Coffee.UIExtensions
{
	[Token(Token = "0x20001C0")]
	public class UIEffect_Demo : MonoBehaviour
	{
		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectMask2D mask;

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xA1D860", Offset = "0xA1D860", VA = "0xA1D860")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xA1D8F4", Offset = "0xA1D8F4", VA = "0xA1D8F4")]
		public void SetTimeScale(float scale)
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xA1D8FC", Offset = "0xA1D8FC", VA = "0xA1D8FC")]
		public void Open(Animator anim)
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xA1D990", Offset = "0xA1D990", VA = "0xA1D990")]
		public void Close(Animator anim)
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xA1D9EC", Offset = "0xA1D9EC", VA = "0xA1D9EC")]
		public void Capture(Animator anim)
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xA1DA64", Offset = "0xA1DA64", VA = "0xA1DA64")]
		public UIEffect_Demo()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public enum BlurMode
	{
		[Token(Token = "0x40009D6")]
		None,
		[Token(Token = "0x40009D7")]
		FastBlur,
		[Token(Token = "0x40009D8")]
		MediumBlur,
		[Token(Token = "0x40009D9")]
		DetailBlur
	}
	[Token(Token = "0x20001C2")]
	public enum ColorMode
	{
		[Token(Token = "0x40009DB")]
		Multiply,
		[Token(Token = "0x40009DC")]
		Fill,
		[Token(Token = "0x40009DD")]
		Add,
		[Token(Token = "0x40009DE")]
		Subtract
	}
	[Token(Token = "0x20001C3")]
	public enum EffectArea
	{
		[Token(Token = "0x40009E0")]
		RectTransform,
		[Token(Token = "0x40009E1")]
		Fit,
		[Token(Token = "0x40009E2")]
		Character
	}
	[Token(Token = "0x20001C4")]
	public class MaterialCache
	{
		[Token(Token = "0x20002DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2E48", Offset = "0x5C2E48")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4000EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColorMode color;

			[Token(Token = "0x4000EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Texture tex;

			[Token(Token = "0x6001200")]
			[Address(RVA = "0xA1A3E0", Offset = "0xA1A3E0", VA = "0xA1A3E0")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001201")]
			[Address(RVA = "0xA1A5A8", Offset = "0xA1A5A8", VA = "0xA1A5A8")]
			internal bool <Register>b__0(MaterialCache x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColorMode colorMode;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int referenceCount;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture texture;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material material;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<MaterialCache> materialCache;

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xA1A240", Offset = "0xA1A240", VA = "0xA1A240")]
		public static MaterialCache Register(ColorMode color, Texture tex, Func<Material> onCreateMaterial)
		{
			return null;
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xA1A3F0", Offset = "0xA1A3F0", VA = "0xA1A3F0")]
		public static void Unregister(MaterialCache cache)
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xA1A494", Offset = "0xA1A494", VA = "0xA1A494")]
		public bool IsMatch(ColorMode color, Texture tex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xA1A3E8", Offset = "0xA1A3E8", VA = "0xA1A3E8")]
		public MaterialCache()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	internal struct Matrix2x3
	{
		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m10;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m11;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m12;

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xA1A5CC", Offset = "0xA1A5CC", VA = "0xA1A5CC")]
		public Matrix2x3(Rect rect, float cos, float sin)
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xA1A6DC", Offset = "0xA1A6DC", VA = "0xA1A6DC")]
		public static Vector2 operator *(Matrix2x3 m, Vector2 v)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x20001C6")]
	public enum ShadowStyle
	{
		[Token(Token = "0x40009EF")]
		None,
		[Token(Token = "0x40009F0")]
		Shadow,
		[Token(Token = "0x40009F1")]
		Outline,
		[Token(Token = "0x40009F2")]
		Outline8,
		[Token(Token = "0x40009F3")]
		Shadow3
	}
	[Token(Token = "0x20001C7")]
	public enum ToneMode
	{
		[Token(Token = "0x40009F5")]
		None,
		[Token(Token = "0x40009F6")]
		Grayscale,
		[Token(Token = "0x40009F7")]
		Sepia,
		[Token(Token = "0x40009F8")]
		Nega,
		[Token(Token = "0x40009F9")]
		Pixel,
		[Token(Token = "0x40009FA")]
		Mono,
		[Token(Token = "0x40009FB")]
		Cutoff,
		[Token(Token = "0x40009FC")]
		Hue
	}
	[Token(Token = "0x20001C8")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C23E4", Offset = "0x5C23E4")]
	[DisallowMultipleComponent]
	public abstract class UIEffectBase : BaseMeshEffect
	{
		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly Rect rectForCharacter;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static readonly Vector2[] splitedCharacterPosition;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static readonly List<UIVertex> tempVerts;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Material m_EffectMaterial;

		[Token(Token = "0x170001E5")]
		public Graphic targetGraphic
		{
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0xA1C684", Offset = "0xA1C684", VA = "0xA1C684")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		public Material effectMaterial
		{
			[Token(Token = "0x6000E60")]
			[Address(RVA = "0xA1C68C", Offset = "0xA1C68C", VA = "0xA1C68C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xA1B624", Offset = "0xA1B624", VA = "0xA1B624", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xA1B6E0", Offset = "0xA1B6E0", VA = "0xA1B6E0", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xA1A74C", Offset = "0xA1A74C", VA = "0xA1A74C")]
		protected void SetDirty()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xA1B3B8", Offset = "0xA1B3B8", VA = "0xA1B3B8")]
		protected Rect GetEffectArea(VertexHelper vh, EffectArea area)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xA1AAD0", Offset = "0xA1AAD0", VA = "0xA1AAD0")]
		protected UIEffectBase()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C2468", Offset = "0x5C2468")]
	[DisallowMultipleComponent]
	public class UICustomEffect : UIEffectBase
	{
		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector4 m_CustomFactor1;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector4 m_CustomFactor2;

		[Token(Token = "0x170001E7")]
		public Vector4 customFactor1
		{
			[Token(Token = "0x6000E67")]
			[Address(RVA = "0xA1A734", Offset = "0xA1A734", VA = "0xA1A734")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x6000E68")]
			[Address(RVA = "0xA1A740", Offset = "0xA1A740", VA = "0xA1A740")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public Vector4 customFactor2
		{
			[Token(Token = "0x6000E69")]
			[Address(RVA = "0xA1A7FC", Offset = "0xA1A7FC", VA = "0xA1A7FC")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0xA1A808", Offset = "0xA1A808", VA = "0xA1A808")]
			set
			{
			}
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xA1A814", Offset = "0xA1A814", VA = "0xA1A814", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xA1AA68", Offset = "0xA1AA68", VA = "0xA1AA68")]
		public UICustomEffect()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	[ExecuteInEditMode]
	public class UIDissolve : UIEffectBase, IMaterialModifier
	{
		[Token(Token = "0x4000A03")]
		public const string shaderName = "UI/Hidden/UI-Effect-Dissolve";

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C66B4", Offset = "0x5C66B4")]
		private float m_Location;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C66F4", Offset = "0x5C66F4")]
		private float m_Width;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6734", Offset = "0x5C6734")]
		private float m_Softness;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x5C6774", Offset = "0x5C6774")]
		private Color m_Color;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private ColorMode m_ColorMode;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Texture m_NoiseTexture;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected EffectArea m_EffectArea;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C67E0", Offset = "0x5C67E0")]
		[SerializeField]
		private bool m_Play;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C682C", Offset = "0x5C682C")]
		private float m_Duration;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private AnimatorUpdateMode m_UpdateMode;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MaterialCache _materialCache;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _time;

		[Token(Token = "0x170001E9")]
		public float location
		{
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0xA1AAD8", Offset = "0xA1AAD8", VA = "0xA1AAD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0xA1AAE0", Offset = "0xA1AAE0", VA = "0xA1AAE0")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public float width
		{
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0xA1AB94", Offset = "0xA1AB94", VA = "0xA1AB94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0xA1AB9C", Offset = "0xA1AB9C", VA = "0xA1AB9C")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public float softness
		{
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0xA1AC50", Offset = "0xA1AC50", VA = "0xA1AC50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E72")]
			[Address(RVA = "0xA1AC58", Offset = "0xA1AC58", VA = "0xA1AC58")]
			set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public Color color
		{
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0xA1AD0C", Offset = "0xA1AD0C", VA = "0xA1AD0C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0xA1AD18", Offset = "0xA1AD18", VA = "0xA1AD18")]
			set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public Texture noiseTexture
		{
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0xA1AD9C", Offset = "0xA1AD9C", VA = "0xA1AD9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0xA1ADA4", Offset = "0xA1ADA4", VA = "0xA1ADA4")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public EffectArea effectArea
		{
			[Token(Token = "0x6000E77")]
			[Address(RVA = "0xA1AE98", Offset = "0xA1AE98", VA = "0xA1AE98")]
			get
			{
				return default(EffectArea);
			}
			[Token(Token = "0x6000E78")]
			[Address(RVA = "0xA1AEA0", Offset = "0xA1AEA0", VA = "0xA1AEA0")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public ColorMode colorMode
		{
			[Token(Token = "0x6000E79")]
			[Address(RVA = "0xA1AEB8", Offset = "0xA1AEB8", VA = "0xA1AEB8")]
			get
			{
				return default(ColorMode);
			}
		}

		[Token(Token = "0x170001F0")]
		public bool play
		{
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0xA1AEC0", Offset = "0xA1AEC0", VA = "0xA1AEC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0xA1AEC8", Offset = "0xA1AEC8", VA = "0xA1AEC8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public float duration
		{
			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0xA1AED4", Offset = "0xA1AED4", VA = "0xA1AED4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0xA1AEDC", Offset = "0xA1AEDC", VA = "0xA1AEDC")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public AnimatorUpdateMode updateMode
		{
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0xA1AF60", Offset = "0xA1AF60", VA = "0xA1AF60")]
			get
			{
				return default(AnimatorUpdateMode);
			}
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0xA1AF68", Offset = "0xA1AF68", VA = "0xA1AF68")]
			set
			{
			}
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xA1AF70", Offset = "0xA1AF70", VA = "0xA1AF70", Slot = "21")]
		public Material GetModifiedMaterial(Material baseMaterial)
		{
			return null;
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xA1B11C", Offset = "0xA1B11C", VA = "0xA1B11C", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xA1B60C", Offset = "0xA1B60C", VA = "0xA1B60C")]
		public void Play()
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xA1B61C", Offset = "0xA1B61C", VA = "0xA1B61C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xA1B66C", Offset = "0xA1B66C", VA = "0xA1B66C", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xA1B728", Offset = "0xA1B728", VA = "0xA1B728")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xA1B7B4", Offset = "0xA1B7B4", VA = "0xA1B7B4")]
		public UIDissolve()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xA1B86C", Offset = "0xA1B86C", VA = "0xA1B86C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAD58", Offset = "0x5CAD58")]
		private Material <GetModifiedMaterial>b__40_0()
		{
			return null;
		}
	}
	[Token(Token = "0x20001CB")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C24FC", Offset = "0x5C24FC")]
	[DisallowMultipleComponent]
	public class UIEffect : UIEffectBase
	{
		[Serializable]
		[Token(Token = "0x20002DD")]
		public class AdditionalShadow
		{
			[Token(Token = "0x4000EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8D34", Offset = "0x5C8D34")]
			public float shadowBlur;

			[Token(Token = "0x4000EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ShadowStyle shadowMode;

			[Token(Token = "0x4000EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color shadowColor;

			[Token(Token = "0x4000EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2 effectDistance;

			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool useGraphicAlpha;

			[Token(Token = "0x6001202")]
			[Address(RVA = "0xA1C618", Offset = "0xA1C618", VA = "0xA1C618")]
			public AdditionalShadow()
			{
			}
		}

		[Token(Token = "0x4000A10")]
		public const string shaderName = "UI/Hidden/UI-Effect";

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6880", Offset = "0x5C6880")]
		private float m_ToneLevel;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C68C0", Offset = "0x5C68C0")]
		private float m_Blur;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6900", Offset = "0x5C6900")]
		private float m_ShadowBlur;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private ShadowStyle m_ShadowStyle;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ToneMode m_ToneMode;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private ColorMode m_ColorMode;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BlurMode m_BlurMode;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Color m_ShadowColor;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Vector2 m_EffectDistance;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private bool m_UseGraphicAlpha;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color m_EffectColor;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private List<AdditionalShadow> m_AdditionalShadows;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool m_CustomEffect;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector4 m_CustomFactor;

		[Token(Token = "0x170001F3")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5CBDCC", Offset = "0x5CBDCC")]
		public new Graphic graphic
		{
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0xA1B900", Offset = "0xA1B900", VA = "0xA1B900")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		public float toneLevel
		{
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0xA1B908", Offset = "0xA1B908", VA = "0xA1B908")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0xA1B910", Offset = "0xA1B910", VA = "0xA1B910")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public float blur
		{
			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0xA1B998", Offset = "0xA1B998", VA = "0xA1B998")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0xA1B9A0", Offset = "0xA1B9A0", VA = "0xA1B9A0")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public float shadowBlur
		{
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0xA1BA28", Offset = "0xA1BA28", VA = "0xA1BA28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0xA1BA30", Offset = "0xA1BA30", VA = "0xA1BA30")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public ShadowStyle shadowStyle
		{
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0xA1BAB8", Offset = "0xA1BAB8", VA = "0xA1BAB8")]
			get
			{
				return default(ShadowStyle);
			}
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0xA1BAC0", Offset = "0xA1BAC0", VA = "0xA1BAC0")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public ToneMode toneMode
		{
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0xA1BAC8", Offset = "0xA1BAC8", VA = "0xA1BAC8")]
			get
			{
				return default(ToneMode);
			}
		}

		[Token(Token = "0x170001F9")]
		public ColorMode colorMode
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0xA1BAD0", Offset = "0xA1BAD0", VA = "0xA1BAD0")]
			get
			{
				return default(ColorMode);
			}
		}

		[Token(Token = "0x170001FA")]
		public BlurMode blurMode
		{
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0xA1BAD8", Offset = "0xA1BAD8", VA = "0xA1BAD8")]
			get
			{
				return default(BlurMode);
			}
		}

		[Token(Token = "0x170001FB")]
		public Color shadowColor
		{
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0xA1BAE0", Offset = "0xA1BAE0", VA = "0xA1BAE0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0xA1BAEC", Offset = "0xA1BAEC", VA = "0xA1BAEC")]
			set
			{
			}
		}

		[Token(Token = "0x170001FC")]
		public Vector2 effectDistance
		{
			[Token(Token = "0x6000E96")]
			[Address(RVA = "0xA1BAF8", Offset = "0xA1BAF8", VA = "0xA1BAF8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000E97")]
			[Address(RVA = "0xA1BB00", Offset = "0xA1BB00", VA = "0xA1BB00")]
			set
			{
			}
		}

		[Token(Token = "0x170001FD")]
		public bool useGraphicAlpha
		{
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0xA1BB08", Offset = "0xA1BB08", VA = "0xA1BB08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E99")]
			[Address(RVA = "0xA1BB10", Offset = "0xA1BB10", VA = "0xA1BB10")]
			set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public Color effectColor
		{
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0xA1BB1C", Offset = "0xA1BB1C", VA = "0xA1BB1C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0xA1BB28", Offset = "0xA1BB28", VA = "0xA1BB28")]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public List<AdditionalShadow> additionalShadows
		{
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0xA1BB34", Offset = "0xA1BB34", VA = "0xA1BB34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		public Vector4 customFactor
		{
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0xA1BB3C", Offset = "0xA1BB3C", VA = "0xA1BB3C")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0xA1BB48", Offset = "0xA1BB48", VA = "0xA1BB48")]
			set
			{
			}
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xA1BB54", Offset = "0xA1BB54", VA = "0xA1BB54", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xA1BEB8", Offset = "0xA1BEB8", VA = "0xA1BEB8")]
		private void _ApplyShadow(List<UIVertex> verts, ref int start, ref int end, ShadowStyle mode, float toneLevel, float blur, Vector2 effectDistance, Color color, bool useGraphicAlpha)
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xA1C2D8", Offset = "0xA1C2D8", VA = "0xA1C2D8")]
		private void _ApplyShadowZeroAlloc(List<UIVertex> verts, ref int start, ref int end, float x, float y, Vector2 factor, Color color, bool useGraphicAlpha)
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xA1C520", Offset = "0xA1C520", VA = "0xA1C520")]
		public UIEffect()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class UIEffectCapturedImage : RawImage
	{
		[Token(Token = "0x20002DE")]
		public enum DesamplingRate
		{
			[Token(Token = "0x4000EFF")]
			None = 0,
			[Token(Token = "0x4000F00")]
			x1 = 1,
			[Token(Token = "0x4000F01")]
			x2 = 2,
			[Token(Token = "0x4000F02")]
			x4 = 4,
			[Token(Token = "0x4000F03")]
			x8 = 8
		}

		[Token(Token = "0x20002DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2E58", Offset = "0x5C2E58")]
		private sealed class <_CoUpdateTextureOnNextFrame>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIEffectCapturedImage <>4__this;

			[Token(Token = "0x170002B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001206")]
				[Address(RVA = "0xA1D7F0", Offset = "0xA1D7F0", VA = "0xA1D7F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001208")]
				[Address(RVA = "0xA1D858", Offset = "0xA1D858", VA = "0xA1D858", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001203")]
			[Address(RVA = "0xA1D6BC", Offset = "0xA1D6BC", VA = "0xA1D6BC")]
			[DebuggerHidden]
			public <_CoUpdateTextureOnNextFrame>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6001204")]
			[Address(RVA = "0xA1D734", Offset = "0xA1D734", VA = "0xA1D734", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001205")]
			[Address(RVA = "0xA1D738", Offset = "0xA1D738", VA = "0xA1D738", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001207")]
			[Address(RVA = "0xA1D7F8", Offset = "0xA1D7F8", VA = "0xA1D7F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A1F")]
		public const string shaderName = "UI/Hidden/UI-EffectCapture";

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C69F0", Offset = "0x5C69F0")]
		private float m_ToneLevel;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6A30", Offset = "0x5C6A30")]
		private float m_Blur;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private ToneMode m_ToneMode;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private ColorMode m_ColorMode;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private BlurMode m_BlurMode;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private Color m_EffectColor;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private DesamplingRate m_DesamplingRate;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private DesamplingRate m_ReductionRate;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private FilterMode m_FilterMode;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Material m_EffectMaterial;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6AF0", Offset = "0x5C6AF0")]
		private int m_Iterations;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		private bool m_KeepCanvasSize;

		[Token(Token = "0x4000A2C")]
		private const CameraEvent kCameraEvent = CameraEvent.AfterEverything;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Camera _camera;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private RenderTexture _rt;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private RenderTexture _rtToRelease;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private CommandBuffer _buffer;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int s_CopyId;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int s_EffectId1;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int s_EffectId2;

		[Token(Token = "0x17000201")]
		public float toneLevel
		{
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0xA1C7F8", Offset = "0xA1C7F8", VA = "0xA1C7F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0xA1C800", Offset = "0xA1C800", VA = "0xA1C800")]
			set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public float blur
		{
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0xA1C884", Offset = "0xA1C884", VA = "0xA1C884")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0xA1C88C", Offset = "0xA1C88C", VA = "0xA1C88C")]
			set
			{
			}
		}

		[Token(Token = "0x17000203")]
		public ToneMode toneMode
		{
			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0xA1C910", Offset = "0xA1C910", VA = "0xA1C910")]
			get
			{
				return default(ToneMode);
			}
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0xA1C918", Offset = "0xA1C918", VA = "0xA1C918")]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public ColorMode colorMode
		{
			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0xA1C920", Offset = "0xA1C920", VA = "0xA1C920")]
			get
			{
				return default(ColorMode);
			}
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0xA1C928", Offset = "0xA1C928", VA = "0xA1C928")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public BlurMode blurMode
		{
			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0xA1C930", Offset = "0xA1C930", VA = "0xA1C930")]
			get
			{
				return default(BlurMode);
			}
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0xA1C938", Offset = "0xA1C938", VA = "0xA1C938")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public Color effectColor
		{
			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0xA1C940", Offset = "0xA1C940", VA = "0xA1C940")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0xA1C94C", Offset = "0xA1C94C", VA = "0xA1C94C")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public virtual Material effectMaterial
		{
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0xA1C958", Offset = "0xA1C958", VA = "0xA1C958", Slot = "65")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		public DesamplingRate desamplingRate
		{
			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0xA1C960", Offset = "0xA1C960", VA = "0xA1C960")]
			get
			{
				return default(DesamplingRate);
			}
			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0xA1C968", Offset = "0xA1C968", VA = "0xA1C968")]
			set
			{
			}
		}

		[Token(Token = "0x17000209")]
		public DesamplingRate reductionRate
		{
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0xA1C970", Offset = "0xA1C970", VA = "0xA1C970")]
			get
			{
				return default(DesamplingRate);
			}
			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0xA1C978", Offset = "0xA1C978", VA = "0xA1C978")]
			set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		public FilterMode filterMode
		{
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0xA1C980", Offset = "0xA1C980", VA = "0xA1C980")]
			get
			{
				return default(FilterMode);
			}
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0xA1C988", Offset = "0xA1C988", VA = "0xA1C988")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public RenderTexture capturedTexture
		{
			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0xA1C990", Offset = "0xA1C990", VA = "0xA1C990")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		public int iterations
		{
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0xA1C998", Offset = "0xA1C998", VA = "0xA1C998")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0xA1C9A0", Offset = "0xA1C9A0", VA = "0xA1C9A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public bool keepCanvasSize
		{
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0xA1C9A8", Offset = "0xA1C9A8", VA = "0xA1C9A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0xA1C9B0", Offset = "0xA1C9B0", VA = "0xA1C9B0")]
			set
			{
			}
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xA1C9BC", Offset = "0xA1C9BC", VA = "0xA1C9BC", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xA1CB4C", Offset = "0xA1CB4C", VA = "0xA1CB4C", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xA1CC3C", Offset = "0xA1CC3C", VA = "0xA1CC3C")]
		public void GetDesamplingSize(DesamplingRate rate, out int w, out int h)
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xA1CD34", Offset = "0xA1CD34", VA = "0xA1CD34")]
		public void Capture()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xA1D6B4", Offset = "0xA1D6B4", VA = "0xA1D6B4")]
		public void Release()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xA1C9E8", Offset = "0xA1C9E8", VA = "0xA1C9E8")]
		private void _Release(bool releaseRT)
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xA1D644", Offset = "0xA1D644", VA = "0xA1D644")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CAD68", Offset = "0x5CAD68")]
		private IEnumerator _CoUpdateTextureOnNextFrame()
		{
			return null;
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xA1D6E8", Offset = "0xA1D6E8", VA = "0xA1D6E8")]
		public UIEffectCapturedImage()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C2580", Offset = "0x5C2580")]
	[DisallowMultipleComponent]
	public class UIFlip : BaseMeshEffect
	{
		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_Horizontal;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool m_Veritical;

		[Token(Token = "0x1700020E")]
		public bool horizontal
		{
			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0xA1DA6C", Offset = "0xA1DA6C", VA = "0xA1DA6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0xA1DA74", Offset = "0xA1DA74", VA = "0xA1DA74")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public bool vertical
		{
			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0xA1DA80", Offset = "0xA1DA80", VA = "0xA1DA80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0xA1DA88", Offset = "0xA1DA88", VA = "0xA1DA88")]
			set
			{
			}
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xA1DA94", Offset = "0xA1DA94", VA = "0xA1DA94", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xA1DBE0", Offset = "0xA1DBE0", VA = "0xA1DBE0")]
		public UIFlip()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	[DisallowMultipleComponent]
	public class UIGradient : BaseMeshEffect
	{
		[Token(Token = "0x20002E0")]
		public enum Direction
		{
			[Token(Token = "0x4000F08")]
			Horizontal,
			[Token(Token = "0x4000F09")]
			Vertical,
			[Token(Token = "0x4000F0A")]
			Angle,
			[Token(Token = "0x4000F0B")]
			Diagonal
		}

		[Token(Token = "0x20002E1")]
		public enum GradientStyle
		{
			[Token(Token = "0x4000F0D")]
			Rect,
			[Token(Token = "0x4000F0E")]
			Fit,
			[Token(Token = "0x4000F0F")]
			Split
		}

		[Token(Token = "0x20002E2")]
		private struct Matrix2x3
		{
			[Token(Token = "0x4000F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float m00;

			[Token(Token = "0x4000F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float m01;

			[Token(Token = "0x4000F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float m02;

			[Token(Token = "0x4000F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float m10;

			[Token(Token = "0x4000F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float m11;

			[Token(Token = "0x4000F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float m12;

			[Token(Token = "0x6001209")]
			[Address(RVA = "0x7B0DE8", Offset = "0x7B0DE8", VA = "0x7B0DE8")]
			public Matrix2x3(Rect rect, float cos, float sin)
			{
			}

			[Token(Token = "0x600120A")]
			[Address(RVA = "0x7B0EF8", Offset = "0x7B0EF8", VA = "0x7B0EF8")]
			public static Vector2 operator *(Matrix2x3 m, Vector2 v)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Direction m_Direction;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color m_Color1;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Color m_Color2;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Color m_Color3;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Color m_Color4;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6BB0", Offset = "0x5C6BB0")]
		private float m_Rotation;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6BF8", Offset = "0x5C6BF8")]
		private float m_Offset1;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6C38", Offset = "0x5C6C38")]
		private float m_Offset2;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GradientStyle m_GradientStyle;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private ColorSpace m_ColorSpace;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool m_IgnoreAspectRatio;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector2[] s_SplitedCharacterPosition;

		[Token(Token = "0x17000210")]
		public new Graphic graphic
		{
			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0xA1DBE8", Offset = "0xA1DBE8", VA = "0xA1DBE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		public Direction direction
		{
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0xA1DBF0", Offset = "0xA1DBF0", VA = "0xA1DBF0")]
			get
			{
				return default(Direction);
			}
			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0xA1DBF8", Offset = "0xA1DBF8", VA = "0xA1DBF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public Color color1
		{
			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0xA1DC3C", Offset = "0xA1DC3C", VA = "0xA1DC3C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0xA1DC48", Offset = "0xA1DC48", VA = "0xA1DC48")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public Color color2
		{
			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0xA1DCE8", Offset = "0xA1DCE8", VA = "0xA1DCE8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0xA1DCF4", Offset = "0xA1DCF4", VA = "0xA1DCF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public Color color3
		{
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0xA1DD94", Offset = "0xA1DD94", VA = "0xA1DD94")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0xA1DDA0", Offset = "0xA1DDA0", VA = "0xA1DDA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public Color color4
		{
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0xA1DE40", Offset = "0xA1DE40", VA = "0xA1DE40")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0xA1DE4C", Offset = "0xA1DE4C", VA = "0xA1DE4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public float rotation
		{
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0xA1DEEC", Offset = "0xA1DEEC", VA = "0xA1DEEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0xA1DF18", Offset = "0xA1DF18", VA = "0xA1DF18")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public float offset
		{
			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0xA1DFD0", Offset = "0xA1DFD0", VA = "0xA1DFD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0xA1DFD8", Offset = "0xA1DFD8", VA = "0xA1DFD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public Vector2 offset2
		{
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0xA1E01C", Offset = "0xA1E01C", VA = "0xA1E01C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0xA1E04C", Offset = "0xA1E04C", VA = "0xA1E04C")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public GradientStyle gradientStyle
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0xA1E09C", Offset = "0xA1E09C", VA = "0xA1E09C")]
			get
			{
				return default(GradientStyle);
			}
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0xA1E0A4", Offset = "0xA1E0A4", VA = "0xA1E0A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public ColorSpace colorSpace
		{
			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0xA1E0E8", Offset = "0xA1E0E8", VA = "0xA1E0E8")]
			get
			{
				return default(ColorSpace);
			}
			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0xA1E0F0", Offset = "0xA1E0F0", VA = "0xA1E0F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public bool ignoreAspectRatio
		{
			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0xA1E134", Offset = "0xA1E134", VA = "0xA1E134")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0xA1E13C", Offset = "0xA1E13C", VA = "0xA1E13C")]
			set
			{
			}
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xA1E18C", Offset = "0xA1E18C", VA = "0xA1E18C", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xA1E84C", Offset = "0xA1E84C", VA = "0xA1E84C")]
		public UIGradient()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C2604", Offset = "0x5C2604")]
	[DisallowMultipleComponent]
	public class UIShadow : Shadow
	{
		[Serializable]
		[Token(Token = "0x20002E3")]
		public class AdditionalShadow
		{
			[Token(Token = "0x4000F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8D4C", Offset = "0x5C8D4C")]
			public float blur;

			[Token(Token = "0x4000F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ShadowStyle style;

			[Token(Token = "0x4000F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color effectColor;

			[Token(Token = "0x4000F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2 effectDistance;

			[Token(Token = "0x4000F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool useGraphicAlpha;

			[Token(Token = "0x600120B")]
			[Address(RVA = "0x7B1B74", Offset = "0x7B1B74", VA = "0x7B1B74")]
			public AdditionalShadow()
			{
			}
		}

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6CA8", Offset = "0x5C6CA8")]
		private float m_Blur;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ShadowStyle m_Style;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<AdditionalShadow> m_AdditionalShadows;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UIEffect _uiEffect;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 _factor;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<UIVertex> s_Verts;

		[Token(Token = "0x1700021C")]
		public new Graphic graphic
		{
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x7B0F50", Offset = "0x7B0F50", VA = "0x7B0F50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		public float blur
		{
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x7B0F58", Offset = "0x7B0F58", VA = "0x7B0F58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x7B0F60", Offset = "0x7B0F60", VA = "0x7B0F60")]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		public ShadowStyle style
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x7B1098", Offset = "0x7B1098", VA = "0x7B1098")]
			get
			{
				return default(ShadowStyle);
			}
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x7B10A0", Offset = "0x7B10A0", VA = "0x7B10A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		public List<AdditionalShadow> additionalShadows
		{
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x7B10A8", Offset = "0x7B10A8", VA = "0x7B10A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x7B10B0", Offset = "0x7B10B0", VA = "0x7B10B0", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x7B133C", Offset = "0x7B133C", VA = "0x7B133C")]
		private void UpdateFactor(float tone, float blur, Color color)
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x7B1448", Offset = "0x7B1448", VA = "0x7B1448")]
		private void _ApplyShadow(List<UIVertex> verts, Color color, ref int start, ref int end, Vector2 effectDistance, ShadowStyle style, bool useGraphicAlpha)
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x7B1818", Offset = "0x7B1818", VA = "0x7B1818")]
		private void _ApplyShadowZeroAlloc(List<UIVertex> verts, Color color, ref int start, ref int end, float x, float y, bool useGraphicAlpha)
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x7B0FE8", Offset = "0x7B0FE8", VA = "0x7B0FE8")]
		private void _SetDirty()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x7B1A84", Offset = "0x7B1A84", VA = "0x7B1A84")]
		public UIShadow()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	public class UIShiny : UIEffectBase
	{
		[Token(Token = "0x4000A48")]
		public const string shaderName = "UI/Hidden/UI-Effect-Shiny";

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6D08", Offset = "0x5C6D08")]
		private float m_Location;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6D48", Offset = "0x5C6D48")]
		private float m_Width;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6D88", Offset = "0x5C6D88")]
		private float m_Rotation;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6DD0", Offset = "0x5C6DD0")]
		private float m_Softness;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5C6E14", Offset = "0x5C6E14")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6E14", Offset = "0x5C6E14")]
		private float m_Brightness;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6E78", Offset = "0x5C6E78")]
		private float m_Highlight;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected EffectArea m_EffectArea;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C6EC8", Offset = "0x5C6EC8")]
		[SerializeField]
		private bool m_Play;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[SerializeField]
		private bool m_Loop;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6F24", Offset = "0x5C6F24")]
		private float m_Duration;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6F68", Offset = "0x5C6F68")]
		private float m_LoopDelay;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimatorUpdateMode m_UpdateMode;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _time;

		[Token(Token = "0x17000220")]
		public float location
		{
			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0x7B1BE0", Offset = "0x7B1BE0", VA = "0x7B1BE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EF1")]
			[Address(RVA = "0x7B1BE8", Offset = "0x7B1BE8", VA = "0x7B1BE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000221")]
		public float width
		{
			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0x7B1CA0", Offset = "0x7B1CA0", VA = "0x7B1CA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0x7B1CA8", Offset = "0x7B1CA8", VA = "0x7B1CA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public float softness
		{
			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0x7B1D60", Offset = "0x7B1D60", VA = "0x7B1D60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0x7B1D68", Offset = "0x7B1D68", VA = "0x7B1D68")]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5CBE04", Offset = "0x5CBE04")]
		public float alpha
		{
			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x7B1E24", Offset = "0x7B1E24", VA = "0x7B1E24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x7B1E2C", Offset = "0x7B1E2C", VA = "0x7B1E2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public float brightness
		{
			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0x7B1EE4", Offset = "0x7B1EE4", VA = "0x7B1EE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0x7B1EEC", Offset = "0x7B1EEC", VA = "0x7B1EEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public float highlight
		{
			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x7B1FA4", Offset = "0x7B1FA4", VA = "0x7B1FA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0x7B1FAC", Offset = "0x7B1FAC", VA = "0x7B1FAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public float rotation
		{
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x7B2064", Offset = "0x7B2064", VA = "0x7B2064")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x7B206C", Offset = "0x7B206C", VA = "0x7B206C")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public EffectArea effectArea
		{
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x7B210C", Offset = "0x7B210C", VA = "0x7B210C")]
			get
			{
				return default(EffectArea);
			}
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x7B2114", Offset = "0x7B2114", VA = "0x7B2114")]
			set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public bool play
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x7B2130", Offset = "0x7B2130", VA = "0x7B2130")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x7B2138", Offset = "0x7B2138", VA = "0x7B2138")]
			set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public bool loop
		{
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x7B2144", Offset = "0x7B2144", VA = "0x7B2144")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x7B214C", Offset = "0x7B214C", VA = "0x7B214C")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public float duration
		{
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x7B2158", Offset = "0x7B2158", VA = "0x7B2158")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F05")]
			[Address(RVA = "0x7B2160", Offset = "0x7B2160", VA = "0x7B2160")]
			set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public float loopDelay
		{
			[Token(Token = "0x6000F06")]
			[Address(RVA = "0x7B21E4", Offset = "0x7B21E4", VA = "0x7B21E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x7B21EC", Offset = "0x7B21EC", VA = "0x7B21EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public AnimatorUpdateMode updateMode
		{
			[Token(Token = "0x6000F08")]
			[Address(RVA = "0x7B226C", Offset = "0x7B226C", VA = "0x7B226C")]
			get
			{
				return default(AnimatorUpdateMode);
			}
			[Token(Token = "0x6000F09")]
			[Address(RVA = "0x7B2274", Offset = "0x7B2274", VA = "0x7B2274")]
			set
			{
			}
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x7B227C", Offset = "0x7B227C", VA = "0x7B227C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x7B2288", Offset = "0x7B2288", VA = "0x7B2288", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x7B2684", Offset = "0x7B2684", VA = "0x7B2684")]
		public void Play()
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x7B2694", Offset = "0x7B2694", VA = "0x7B2694")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x7B2738", Offset = "0x7B2738", VA = "0x7B2738")]
		public UIShiny()
		{
		}
	}
}
