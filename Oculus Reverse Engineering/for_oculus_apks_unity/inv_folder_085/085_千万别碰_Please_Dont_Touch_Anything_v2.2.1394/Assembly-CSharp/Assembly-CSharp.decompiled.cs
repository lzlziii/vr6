using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using DG.Tweening;
using DG.Tweening.Core;
using Il2CppDummyDll;
using JetBrains.Annotations;
using Oculus.Platform;
using TMPro;
using Unity.XR.CoreUtils;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR.Interaction.Toolkit;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class AsteroidEnding : BaseEnding
{
	[Token(Token = "0x2000003")]
	[CompilerGenerated]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AsteroidEnding <>4__this;

		[Token(Token = "0x4000006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Game <game>5__2;

		[Token(Token = "0x4000007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000008")]
			[Address(RVA = "0x857134", Offset = "0x857134", VA = "0x857134", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600000A")]
			[Address(RVA = "0x85717C", Offset = "0x85717C", VA = "0x85717C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000005")]
		[Address(RVA = "0x856CEC", Offset = "0x856CEC", VA = "0x856CEC")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000006")]
		[Address(RVA = "0x856F38", Offset = "0x856F38", VA = "0x856F38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000007")]
		[Address(RVA = "0x856F3C", Offset = "0x856F3C", VA = "0x856F3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000009")]
		[Address(RVA = "0x85713C", Offset = "0x85713C", VA = "0x85713C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject asteroidHitEffectPrefab;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x856C78", Offset = "0x856C78", VA = "0x856C78")]
	[IteratorStateMachine(typeof(<Start>d__2))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x856D14", Offset = "0x856D14", VA = "0x856D14", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x856D80", Offset = "0x856D80", VA = "0x856D80")]
	private void AsteroidHit()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x856F28", Offset = "0x856F28", VA = "0x856F28")]
	public AsteroidEnding()
	{
	}
}
[Token(Token = "0x2000004")]
public abstract class BaseEnding : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal bool noGravity;

	[Token(Token = "0x600000B")]
	public abstract void CleanUp();

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x857184", Offset = "0x857184", VA = "0x857184", Slot = "5")]
	public virtual bool AllowUse(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x856F30", Offset = "0x856F30", VA = "0x856F30")]
	protected BaseEnding()
	{
	}
}
[Token(Token = "0x2000005")]
public class BenderEnding : BaseEnding
{
	[Token(Token = "0x2000006")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x400000B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Animator animator;

		[Token(Token = "0x6000011")]
		[Address(RVA = "0x8572A0", Offset = "0x8572A0", VA = "0x8572A0")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6000012")]
		[Address(RVA = "0x8572A8", Offset = "0x8572A8", VA = "0x8572A8")]
		internal bool <Start>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000007")]
	[CompilerGenerated]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400000C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400000D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400000E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BenderEnding <>4__this;

		[Token(Token = "0x400000F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass2_0 <>8__1;

		[Token(Token = "0x4000010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Game <game>5__2;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000016")]
			[Address(RVA = "0x8576C0", Offset = "0x8576C0", VA = "0x8576C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000018")]
			[Address(RVA = "0x857708", Offset = "0x857708", VA = "0x857708", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000013")]
		[Address(RVA = "0x857200", Offset = "0x857200", VA = "0x857200")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000014")]
		[Address(RVA = "0x857344", Offset = "0x857344", VA = "0x857344", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000015")]
		[Address(RVA = "0x857348", Offset = "0x857348", VA = "0x857348", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000017")]
		[Address(RVA = "0x8576C8", Offset = "0x8576C8", VA = "0x8576C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject bigBoomPrefab;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject fx;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x85718C", Offset = "0x85718C", VA = "0x85718C")]
	[IteratorStateMachine(typeof(<Start>d__2))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x857228", Offset = "0x857228", VA = "0x857228", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x857298", Offset = "0x857298", VA = "0x857298")]
	public BenderEnding()
	{
	}
}
[Token(Token = "0x2000008")]
public class BlackHoleEnding : BaseEnding
{
	[Token(Token = "0x2000009")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4000016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Game game;

		[Token(Token = "0x4000017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BlackHoleEnding <>4__this;

		[Token(Token = "0x600001D")]
		[Address(RVA = "0x857878", Offset = "0x857878", VA = "0x857878")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x600001E")]
		[Address(RVA = "0x857880", Offset = "0x857880", VA = "0x857880")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x200000A")]
	[CompilerGenerated]
	private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400001A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlackHoleEnding <>4__this;

		[Token(Token = "0x400001B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass6_0 <>8__1;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000022")]
			[Address(RVA = "0x857C78", Offset = "0x857C78", VA = "0x857C78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000024")]
			[Address(RVA = "0x857CC0", Offset = "0x857CC0", VA = "0x857CC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600001F")]
		[Address(RVA = "0x8577A4", Offset = "0x8577A4", VA = "0x8577A4")]
		[DebuggerHidden]
		public <Start>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000020")]
		[Address(RVA = "0x85792C", Offset = "0x85792C", VA = "0x85792C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000021")]
		[Address(RVA = "0x857930", Offset = "0x857930", VA = "0x857930", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000023")]
		[Address(RVA = "0x857C80", Offset = "0x857C80", VA = "0x857C80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject fxRoot;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource spawnSound;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material skyboxMaterial;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Texture3D colorCorrectionLUT;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SceneObjectToggler sceneObjectToggler;

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x857710", Offset = "0x857710", VA = "0x857710")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x857730", Offset = "0x857730", VA = "0x857730")]
	[IteratorStateMachine(typeof(<Start>d__6))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x8577CC", Offset = "0x8577CC", VA = "0x8577CC", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x857870", Offset = "0x857870", VA = "0x857870")]
	public BlackHoleEnding()
	{
	}
}
[Token(Token = "0x200000B")]
public class BloodyBabyEnding : BaseEnding
{
	[Serializable]
	[Token(Token = "0x200000C")]
	private class WaveData
	{
		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Transform> spawnLocations;

		[Token(Token = "0x6000031")]
		[Address(RVA = "0x8582F0", Offset = "0x8582F0", VA = "0x8582F0")]
		public WaveData()
		{
		}
	}

	[Token(Token = "0x200000D")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BloodyBaby baby;

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DOGetter<float> <>9__0;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DOSetter<float> <>9__1;

		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DOGetter<float> <>9__3;

		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DOSetter<float> <>9__4;

		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TweenCallback <>9__2;

		[Token(Token = "0x6000032")]
		[Address(RVA = "0x8590BC", Offset = "0x8590BC", VA = "0x8590BC")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6000033")]
		[Address(RVA = "0x8590C4", Offset = "0x8590C4", VA = "0x8590C4")]
		internal float <VictorySequence>b__0()
		{
			return default(float);
		}

		[Token(Token = "0x6000034")]
		[Address(RVA = "0x8590E0", Offset = "0x8590E0", VA = "0x8590E0")]
		internal void <VictorySequence>b__1(float x)
		{
		}

		[Token(Token = "0x6000035")]
		[Address(RVA = "0x8590FC", Offset = "0x8590FC", VA = "0x8590FC")]
		internal void <VictorySequence>b__2()
		{
		}

		[Token(Token = "0x6000036")]
		[Address(RVA = "0x859258", Offset = "0x859258", VA = "0x859258")]
		internal float <VictorySequence>b__3()
		{
			return default(float);
		}

		[Token(Token = "0x6000037")]
		[Address(RVA = "0x859274", Offset = "0x859274", VA = "0x859274")]
		internal void <VictorySequence>b__4(float x)
		{
		}
	}

	[Token(Token = "0x200000E")]
	[CompilerGenerated]
	private sealed class <VictorySequence>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BloodyBabyEnding <>4__this;

		[Token(Token = "0x400003A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass28_0 <>8__1;

		[Token(Token = "0x400003B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600003B")]
			[Address(RVA = "0x8596F0", Offset = "0x8596F0", VA = "0x8596F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600003D")]
			[Address(RVA = "0x859738", Offset = "0x859738", VA = "0x859738", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000038")]
		[Address(RVA = "0x858F94", Offset = "0x858F94", VA = "0x858F94")]
		[DebuggerHidden]
		public <VictorySequence>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000039")]
		[Address(RVA = "0x859290", Offset = "0x859290", VA = "0x859290", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600003A")]
		[Address(RVA = "0x859294", Offset = "0x859294", VA = "0x859294", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600003C")]
		[Address(RVA = "0x8596F8", Offset = "0x8596F8", VA = "0x8596F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200000F")]
	[CompilerGenerated]
	private sealed class <GameOverTimer>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400003C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400003D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400003E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BloodyBabyEnding <>4__this;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000041")]
			[Address(RVA = "0x859950", Offset = "0x859950", VA = "0x859950", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000043")]
			[Address(RVA = "0x859998", Offset = "0x859998", VA = "0x859998", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600003E")]
		[Address(RVA = "0x858FBC", Offset = "0x858FBC", VA = "0x858FBC")]
		[DebuggerHidden]
		public <GameOverTimer>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600003F")]
		[Address(RVA = "0x859740", Offset = "0x859740", VA = "0x859740", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000040")]
		[Address(RVA = "0x859744", Offset = "0x859744", VA = "0x859744", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000042")]
		[Address(RVA = "0x859958", Offset = "0x859958", VA = "0x859958", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Texture3D colorCorrectionLUT;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject babyPrefab;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform babySpawnPoint;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject blobPrefab;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip babyDeathClip;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Renderer timerStreak;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip[] buttonHitClips;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioClip fullGameMusic;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] waveRoots;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<WaveData> waveData;

	[Token(Token = "0x4000026")]
	private const float gameOverTime = 60f;

	[Token(Token = "0x4000027")]
	private const int numberOfButtonHitsBeforeBaby = 3;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int buttonHitCount;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int currentWave;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool babyIsDefeated;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<BloodyBlob> currentWaveObjects;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private BigRedButton bigRedButton;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Animator babyAnimator;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material streakMaterial;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float startTime;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x857CC8", Offset = "0x857CC8", VA = "0x857CC8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x858378", Offset = "0x858378", VA = "0x858378")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x8583D4", Offset = "0x8583D4", VA = "0x8583D4", Slot = "5")]
	public override bool AllowUse(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x858508", Offset = "0x858508", VA = "0x858508", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x858574", Offset = "0x858574", VA = "0x858574")]
	public bool CanHitButton()
	{
		return default(bool);
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x858584", Offset = "0x858584", VA = "0x858584")]
	public AudioClip GetHitButtonClip()
	{
		return null;
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x8585D4", Offset = "0x8585D4", VA = "0x8585D4")]
	public void HitButton()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x858840", Offset = "0x858840", VA = "0x858840")]
	public bool CanHitBaby()
	{
		return default(bool);
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x8589A0", Offset = "0x8589A0", VA = "0x8589A0")]
	public void HandleBabyTookDamage()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x858F20", Offset = "0x858F20", VA = "0x858F20")]
	[IteratorStateMachine(typeof(<VictorySequence>d__28))]
	private IEnumerator VictorySequence()
	{
		return null;
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x858EAC", Offset = "0x858EAC", VA = "0x858EAC")]
	[IteratorStateMachine(typeof(<GameOverTimer>d__30))]
	private IEnumerator GameOverTimer()
	{
		return null;
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x858FE4", Offset = "0x858FE4", VA = "0x858FE4")]
	public BloodyBabyEnding()
	{
	}
}
[Token(Token = "0x2000010")]
public class BrokenEnding : BaseEnding
{
	[Token(Token = "0x2000011")]
	[CompilerGenerated]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Game <game>5__2;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600004A")]
			[Address(RVA = "0x859C1C", Offset = "0x859C1C", VA = "0x859C1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600004C")]
			[Address(RVA = "0x859C64", Offset = "0x859C64", VA = "0x859C64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000047")]
		[Address(RVA = "0x859A00", Offset = "0x859A00", VA = "0x859A00")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000048")]
		[Address(RVA = "0x859A9C", Offset = "0x859A9C", VA = "0x859A9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000049")]
		[Address(RVA = "0x859AA0", Offset = "0x859AA0", VA = "0x859AA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600004B")]
		[Address(RVA = "0x859C24", Offset = "0x859C24", VA = "0x859C24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x8599A0", Offset = "0x8599A0", VA = "0x8599A0")]
	[IteratorStateMachine(typeof(<Start>d__0))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x859A28", Offset = "0x859A28", VA = "0x859A28", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x859A94", Offset = "0x859A94", VA = "0x859A94")]
	public BrokenEnding()
	{
	}
}
[Token(Token = "0x2000012")]
public class CityboomEnding : BaseEnding
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] bombIcons;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject bombPrefab;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject airplanePrefab;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Canvas screenCanvas;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject startScreen;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject loseScreen;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject winScreen;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private RectTransform planeStartPosition;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject buildingsRoot;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip[] bombExplosionClips;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SubtitleSystem subtitles;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RectTransform airplaneTransform;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ScreenController screenController;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int reloadCount;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int bombsLeft;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int explosionIndex;

	[Token(Token = "0x1700000D")]
	public bool IsPlaying
	{
		[Token(Token = "0x600004D")]
		[Address(RVA = "0x859C6C", Offset = "0x859C6C", VA = "0x859C6C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600004E")]
		[Address(RVA = "0x859C74", Offset = "0x859C74", VA = "0x859C74")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public bool AllBombsAccurate
	{
		[Token(Token = "0x600004F")]
		[Address(RVA = "0x859C80", Offset = "0x859C80", VA = "0x859C80")]
		[CompilerGenerated]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x6000050")]
		[Address(RVA = "0x859C88", Offset = "0x859C88", VA = "0x859C88")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x859C94", Offset = "0x859C94", VA = "0x859C94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x859DC8", Offset = "0x859DC8", VA = "0x859DC8")]
	public void ChangeStartText()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x85A838", Offset = "0x85A838", VA = "0x85A838")]
	public void ChangeWinText()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x85B3D0", Offset = "0x85B3D0", VA = "0x85B3D0")]
	public void ChangeLoseText()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x85B820", Offset = "0x85B820", VA = "0x85B820", Slot = "5")]
	public override bool AllowUse(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x85B91C", Offset = "0x85B91C", VA = "0x85B91C", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x85B9AC", Offset = "0x85B9AC", VA = "0x85B9AC")]
	public void OnScreenClick()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x85BDEC", Offset = "0x85BDEC", VA = "0x85BDEC")]
	public void Reload()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x85BD80", Offset = "0x85BD80", VA = "0x85BD80")]
	private void UpdateBombIcons()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x85BE20", Offset = "0x85BE20", VA = "0x85BE20")]
	public bool AreAllBuildingsDestroyed()
	{
		return default(bool);
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x85C128", Offset = "0x85C128", VA = "0x85C128")]
	public void Win()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x85C2E4", Offset = "0x85C2E4", VA = "0x85C2E4")]
	public void Lose()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x85C3C4", Offset = "0x85C3C4", VA = "0x85C3C4")]
	public CityboomEnding()
	{
	}
}
[Token(Token = "0x2000013")]
public class CoffeeEnding : BaseEnding
{
	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject creditsScreenPrefab;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject creditsScreenObject;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ScreenController screenController;

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x85C42C", Offset = "0x85C42C", VA = "0x85C42C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x85C61C", Offset = "0x85C61C", VA = "0x85C61C", Slot = "5")]
	public override bool AllowUse(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x85C780", Offset = "0x85C780", VA = "0x85C780", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x85C8CC", Offset = "0x85C8CC", VA = "0x85C8CC")]
	public CoffeeEnding()
	{
	}
}
[Token(Token = "0x2000014")]
public class CthuluEnding : BaseEnding
{
	[Token(Token = "0x2000015")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4000058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Game game;

		[Token(Token = "0x4000059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CthuluEnding <>4__this;

		[Token(Token = "0x6000068")]
		[Address(RVA = "0x85CA78", Offset = "0x85CA78", VA = "0x85CA78")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6000069")]
		[Address(RVA = "0x85CA80", Offset = "0x85CA80", VA = "0x85CA80")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x2000016")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400005A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400005B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400005C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CthuluEnding <>4__this;

		[Token(Token = "0x400005D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass1_0 <>8__1;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600006D")]
			[Address(RVA = "0x85CD48", Offset = "0x85CD48", VA = "0x85CD48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600006F")]
			[Address(RVA = "0x85CD90", Offset = "0x85CD90", VA = "0x85CD90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600006A")]
		[Address(RVA = "0x85C948", Offset = "0x85C948", VA = "0x85C948")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600006B")]
		[Address(RVA = "0x85CB1C", Offset = "0x85CB1C", VA = "0x85CB1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600006C")]
		[Address(RVA = "0x85CB20", Offset = "0x85CB20", VA = "0x85CB20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600006E")]
		[Address(RVA = "0x85CD50", Offset = "0x85CD50", VA = "0x85CD50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000017")]
	[CompilerGenerated]
	private sealed class <ShakeRoom>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400005E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400005F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000011")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000073")]
			[Address(RVA = "0x85D038", Offset = "0x85D038", VA = "0x85D038", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000012")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000075")]
			[Address(RVA = "0x85D080", Offset = "0x85D080", VA = "0x85D080", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000070")]
		[Address(RVA = "0x85C9D0", Offset = "0x85C9D0", VA = "0x85C9D0")]
		[DebuggerHidden]
		public <ShakeRoom>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000071")]
		[Address(RVA = "0x85CD98", Offset = "0x85CD98", VA = "0x85CD98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000072")]
		[Address(RVA = "0x85CD9C", Offset = "0x85CD9C", VA = "0x85CD9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000074")]
		[Address(RVA = "0x85D040", Offset = "0x85D040", VA = "0x85D040", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject fxRoot;

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x85C8D4", Offset = "0x85C8D4", VA = "0x85C8D4")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x85C970", Offset = "0x85C970", VA = "0x85C970")]
	[IteratorStateMachine(typeof(<ShakeRoom>d__2))]
	private IEnumerator ShakeRoom()
	{
		return null;
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x85C9F8", Offset = "0x85C9F8", VA = "0x85C9F8", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x85CA70", Offset = "0x85CA70", VA = "0x85CA70")]
	public CthuluEnding()
	{
	}
}
[Token(Token = "0x2000018")]
public class DeathStarEnding : BaseEnding
{
	[Token(Token = "0x2000019")]
	[CompilerGenerated]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeathStarEnding <>4__this;

		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Game <game>5__2;

		[Token(Token = "0x17000013")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600007D")]
			[Address(RVA = "0x85D470", Offset = "0x85D470", VA = "0x85D470", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000014")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600007F")]
			[Address(RVA = "0x85D4B8", Offset = "0x85D4B8", VA = "0x85D4B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600007A")]
		[Address(RVA = "0x85D0FC", Offset = "0x85D0FC", VA = "0x85D0FC")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600007B")]
		[Address(RVA = "0x85D284", Offset = "0x85D284", VA = "0x85D284", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600007C")]
		[Address(RVA = "0x85D288", Offset = "0x85D288", VA = "0x85D288", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600007E")]
		[Address(RVA = "0x85D478", Offset = "0x85D478", VA = "0x85D478", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Texture3D blowoutCorrection;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Texture3D postBlowoutCorrection;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject fxRoot;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject debrisPrefab;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x85D088", Offset = "0x85D088", VA = "0x85D088")]
	[IteratorStateMachine(typeof(<Start>d__4))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x85D124", Offset = "0x85D124", VA = "0x85D124", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x85D190", Offset = "0x85D190", VA = "0x85D190")]
	public DeathStarEnding()
	{
	}
}
[Token(Token = "0x200001A")]
public class EarthquakeEnding : BaseEnding
{
	[Token(Token = "0x200001B")]
	[CompilerGenerated]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EarthquakeEnding <>4__this;

		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Game <game>5__2;

		[Token(Token = "0x400006F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x17000015")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000086")]
			[Address(RVA = "0x85D9D4", Offset = "0x85D9D4", VA = "0x85D9D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000088")]
			[Address(RVA = "0x85DA1C", Offset = "0x85DA1C", VA = "0x85DA1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000083")]
		[Address(RVA = "0x85D534", Offset = "0x85D534", VA = "0x85D534")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000084")]
		[Address(RVA = "0x85D5DC", Offset = "0x85D5DC", VA = "0x85D5DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000085")]
		[Address(RVA = "0x85D5E0", Offset = "0x85D5E0", VA = "0x85D5E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000087")]
		[Address(RVA = "0x85D9DC", Offset = "0x85D9DC", VA = "0x85D9DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject fxRoot;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rubblePrefab;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Texture3D endingColorCorrectionLUT;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x85D4C0", Offset = "0x85D4C0", VA = "0x85D4C0")]
	[IteratorStateMachine(typeof(<Start>d__3))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x85D55C", Offset = "0x85D55C", VA = "0x85D55C", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x85D5D4", Offset = "0x85D5D4", VA = "0x85D5D4")]
	public EarthquakeEnding()
	{
	}
}
[Token(Token = "0x200001C")]
public class FutureEnding : BaseEnding
{
	[Token(Token = "0x200001D")]
	[CompilerGenerated]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FutureEnding <>4__this;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Game <game>5__2;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600008F")]
			[Address(RVA = "0x85DE34", Offset = "0x85DE34", VA = "0x85DE34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000091")]
			[Address(RVA = "0x85DE7C", Offset = "0x85DE7C", VA = "0x85DE7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600008C")]
		[Address(RVA = "0x85DA98", Offset = "0x85DA98", VA = "0x85DA98")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600008D")]
		[Address(RVA = "0x85DB38", Offset = "0x85DB38", VA = "0x85DB38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600008E")]
		[Address(RVA = "0x85DB3C", Offset = "0x85DB3C", VA = "0x85DB3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000090")]
		[Address(RVA = "0x85DE3C", Offset = "0x85DE3C", VA = "0x85DE3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fxPrefab;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject fx;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Texture3D endingColorCorrectionLUT;

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x85DA24", Offset = "0x85DA24", VA = "0x85DA24")]
	[IteratorStateMachine(typeof(<Start>d__3))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x85DAC0", Offset = "0x85DAC0", VA = "0x85DAC0", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x85DB30", Offset = "0x85DB30", VA = "0x85DB30")]
	public FutureEnding()
	{
	}
}
[Token(Token = "0x200001E")]
public class HappyDemonEnding : BaseEnding
{
	[Token(Token = "0x200001F")]
	[CompilerGenerated]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400007C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HappyDemonEnding <>4__this;

		[Token(Token = "0x400007D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Game <game>5__2;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000098")]
			[Address(RVA = "0x85E33C", Offset = "0x85E33C", VA = "0x85E33C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600009A")]
			[Address(RVA = "0x85E384", Offset = "0x85E384", VA = "0x85E384", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000095")]
		[Address(RVA = "0x85DEF8", Offset = "0x85DEF8", VA = "0x85DEF8")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000096")]
		[Address(RVA = "0x85E04C", Offset = "0x85E04C", VA = "0x85E04C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000097")]
		[Address(RVA = "0x85E050", Offset = "0x85E050", VA = "0x85E050", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000099")]
		[Address(RVA = "0x85E344", Offset = "0x85E344", VA = "0x85E344", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject fxRoot;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject backupMachineLights;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SceneObjectToggler sceneObjectToggler;

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x85DE84", Offset = "0x85DE84", VA = "0x85DE84")]
	[IteratorStateMachine(typeof(<Start>d__3))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x85DF20", Offset = "0x85DF20", VA = "0x85DF20", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x85E044", Offset = "0x85E044", VA = "0x85E044")]
	public HappyDemonEnding()
	{
	}
}
[Token(Token = "0x2000020")]
public class IlluminatiEnding : BaseEnding
{
	[Token(Token = "0x2000021")]
	[CompilerGenerated]
	private sealed class <FindRenderers>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400008A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IlluminatiEnding <>4__this;

		[Token(Token = "0x1700001B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000A5")]
			[Address(RVA = "0x85F250", Offset = "0x85F250", VA = "0x85F250", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A7")]
			[Address(RVA = "0x85F298", Offset = "0x85F298", VA = "0x85F298", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000A2")]
		[Address(RVA = "0x85E674", Offset = "0x85E674", VA = "0x85E674")]
		[DebuggerHidden]
		public <FindRenderers>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x85F008", Offset = "0x85F008", VA = "0x85F008", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0x85F00C", Offset = "0x85F00C", VA = "0x85F00C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x85F258", Offset = "0x85F258", VA = "0x85F258", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject skyStripes;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Renderer[] renderables;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Light endingLightRoot;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer resetSwitchRenderer;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject staticObjectsRoot;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Renderer> cachedRenderers;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Text> cachedText;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Renderer> enabledRenderers;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource[] audioSources;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RandomBlink[] blinkingLights;

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x85E38C", Offset = "0x85E38C", VA = "0x85E38C")]
	public void Start()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x85E600", Offset = "0x85E600", VA = "0x85E600")]
	[IteratorStateMachine(typeof(<FindRenderers>d__11))]
	private IEnumerator FindRenderers()
	{
		return null;
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x85E69C", Offset = "0x85E69C", VA = "0x85E69C", Slot = "5")]
	public override bool AllowUse(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x85E720", Offset = "0x85E720", VA = "0x85E720", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x85EA48", Offset = "0x85EA48", VA = "0x85EA48")]
	public void OnButtonPressed()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x85ED74", Offset = "0x85ED74", VA = "0x85ED74")]
	private void TurnOffAndCacheRenderers(Renderer[] renderers)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x85EF00", Offset = "0x85EF00", VA = "0x85EF00")]
	public IlluminatiEnding()
	{
	}
}
[Token(Token = "0x2000022")]
public class LitterbugEnding : BaseEnding
{
	[Token(Token = "0x2000023")]
	[CompilerGenerated]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400008E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400008F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LitterbugEnding <>4__this;

		[Token(Token = "0x4000091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Game <game>5__2;

		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SubtitleSystem <subtitles>5__3;

		[Token(Token = "0x1700001D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000AE")]
			[Address(RVA = "0x85F74C", Offset = "0x85F74C", VA = "0x85F74C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000B0")]
			[Address(RVA = "0x85F794", Offset = "0x85F794", VA = "0x85F794", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x85F314", Offset = "0x85F314", VA = "0x85F314")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60000AC")]
		[Address(RVA = "0x85F418", Offset = "0x85F418", VA = "0x85F418", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000AD")]
		[Address(RVA = "0x85F41C", Offset = "0x85F41C", VA = "0x85F41C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x85F754", Offset = "0x85F754", VA = "0x85F754", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject dialogPrefab;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject fx;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool doorOpen;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x85F2A0", Offset = "0x85F2A0", VA = "0x85F2A0")]
	[IteratorStateMachine(typeof(<Start>d__3))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x85F33C", Offset = "0x85F33C", VA = "0x85F33C", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x85F410", Offset = "0x85F410", VA = "0x85F410")]
	public LitterbugEnding()
	{
	}
}
[Token(Token = "0x2000024")]
public class NukeEnding : BaseEnding
{
	[Token(Token = "0x2000025")]
	[CompilerGenerated]
	private sealed class <DoNuke>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400009A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NukeEnding <>4__this;

		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Game <game>5__2;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000BA")]
			[Address(RVA = "0x85FC84", Offset = "0x85FC84", VA = "0x85FC84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000BC")]
			[Address(RVA = "0x85FCCC", Offset = "0x85FCCC", VA = "0x85FCCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000B7")]
		[Address(RVA = "0x85F91C", Offset = "0x85F91C", VA = "0x85F91C")]
		[DebuggerHidden]
		public <DoNuke>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60000B8")]
		[Address(RVA = "0x85FA98", Offset = "0x85FA98", VA = "0x85FA98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000B9")]
		[Address(RVA = "0x85FA9C", Offset = "0x85FA9C", VA = "0x85FA9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000BB")]
		[Address(RVA = "0x85FC8C", Offset = "0x85FC8C", VA = "0x85FC8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject airRaidSirenPrefab;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip detonationSound;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject fxPrefab;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject fx;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject airRaidSiren;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isNuking;

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x85F79C", Offset = "0x85F79C", VA = "0x85F79C")]
	public void Start()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x85F880", Offset = "0x85F880", VA = "0x85F880")]
	public void OnNuke()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x85F8A8", Offset = "0x85F8A8", VA = "0x85F8A8")]
	[IteratorStateMachine(typeof(<DoNuke>d__8))]
	private IEnumerator DoNuke()
	{
		return null;
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x85F944", Offset = "0x85F944", VA = "0x85F944", Slot = "5")]
	public override bool AllowUse(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x85FA14", Offset = "0x85FA14", VA = "0x85FA14", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x85FA90", Offset = "0x85FA90", VA = "0x85FA90")]
	public NukeEnding()
	{
	}
}
[Token(Token = "0x2000026")]
public class OceanEnding : BaseEnding
{
	[Token(Token = "0x2000027")]
	[CompilerGenerated]
	private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OceanEnding <>4__this;

		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Game <game>5__2;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C3")]
			[Address(RVA = "0x86007C", Offset = "0x86007C", VA = "0x86007C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C5")]
			[Address(RVA = "0x8600C4", Offset = "0x8600C4", VA = "0x8600C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C0")]
		[Address(RVA = "0x85FD48", Offset = "0x85FD48", VA = "0x85FD48")]
		[DebuggerHidden]
		public <Start>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x85FE44", Offset = "0x85FE44", VA = "0x85FE44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000C2")]
		[Address(RVA = "0x85FE48", Offset = "0x85FE48", VA = "0x85FE48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C4")]
		[Address(RVA = "0x860084", Offset = "0x860084", VA = "0x860084", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject fxRoot;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform waterPlane;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Texture3D saturationLUT;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material waterNoDepthOrTrans;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material waterNoRefraction;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float minWaterLevel;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float maxWaterLevel;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x85FCD4", Offset = "0x85FCD4", VA = "0x85FCD4")]
	[IteratorStateMachine(typeof(<Start>d__7))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x85FD70", Offset = "0x85FD70", VA = "0x85FD70", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x85FE30", Offset = "0x85FE30", VA = "0x85FE30")]
	public OceanEnding()
	{
	}
}
[Token(Token = "0x2000028")]
public class OfficeSpace : BaseEnding
{
	[Token(Token = "0x2000029")]
	[CompilerGenerated]
	private sealed class <StartEnding>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OfficeSpace <>4__this;

		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Game <game>5__2;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000CF")]
			[Address(RVA = "0x860788", Offset = "0x860788", VA = "0x860788", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D1")]
			[Address(RVA = "0x8607D0", Offset = "0x8607D0", VA = "0x8607D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000CC")]
		[Address(RVA = "0x86040C", Offset = "0x86040C", VA = "0x86040C")]
		[DebuggerHidden]
		public <StartEnding>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60000CD")]
		[Address(RVA = "0x86054C", Offset = "0x86054C", VA = "0x86054C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000CE")]
		[Address(RVA = "0x860550", Offset = "0x860550", VA = "0x860550", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0x860790", Offset = "0x860790", VA = "0x860790", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject screenRoot;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float EndingDuration;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string[] screenMessages;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ScreenController screenController;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text uiText;

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x8600CC", Offset = "0x8600CC", VA = "0x8600CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x860270", Offset = "0x860270", VA = "0x860270", Slot = "5")]
	public override bool AllowUse(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x8601FC", Offset = "0x8601FC", VA = "0x8601FC")]
	[IteratorStateMachine(typeof(<StartEnding>d__7))]
	private IEnumerator StartEnding()
	{
		return null;
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x860434", Offset = "0x860434", VA = "0x860434", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x8604C4", Offset = "0x8604C4", VA = "0x8604C4")]
	internal void UpdateScreen()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x86053C", Offset = "0x86053C", VA = "0x86053C")]
	public OfficeSpace()
	{
	}
}
[Token(Token = "0x200002A")]
public class PandaEnding : BaseEnding
{
	[Token(Token = "0x200002B")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Game game;

		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PandaEnding <>4__this;

		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x8608E8", Offset = "0x8608E8", VA = "0x8608E8")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x8608F0", Offset = "0x8608F0", VA = "0x8608F0")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x200002C")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PandaEnding <>4__this;

		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass1_0 <>8__1;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000DA")]
			[Address(RVA = "0x860C04", Offset = "0x860C04", VA = "0x860C04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000DC")]
			[Address(RVA = "0x860C4C", Offset = "0x860C4C", VA = "0x860C4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D7")]
		[Address(RVA = "0x86084C", Offset = "0x86084C", VA = "0x86084C")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x8609F0", Offset = "0x8609F0", VA = "0x8609F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x8609F4", Offset = "0x8609F4", VA = "0x8609F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x860C0C", Offset = "0x860C0C", VA = "0x860C0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject fxRoot;

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x8607D8", Offset = "0x8607D8", VA = "0x8607D8")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x860874", Offset = "0x860874", VA = "0x860874", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x8608E0", Offset = "0x8608E0", VA = "0x8608E0")]
	public PandaEnding()
	{
	}
}
[Token(Token = "0x200002D")]
public class PapersPleaseEnding : BaseEnding
{
	[Token(Token = "0x200002F")]
	[CompilerGenerated]
	private sealed class <DoEndingSequence>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PapersPleaseEnding <>4__this;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000EB")]
			[Address(RVA = "0x86143C", Offset = "0x86143C", VA = "0x86143C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000ED")]
			[Address(RVA = "0x861484", Offset = "0x861484", VA = "0x861484", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x861270", Offset = "0x861270", VA = "0x861270")]
		[DebuggerHidden]
		public <DoEndingSequence>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x86136C", Offset = "0x86136C", VA = "0x86136C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x861370", Offset = "0x861370", VA = "0x861370", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x861444", Offset = "0x861444", VA = "0x861444", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B8")]
	private const float maxCamPitch = 64f;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject fxRoot;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 originalTrophyTiltParams;

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x860C54", Offset = "0x860C54", VA = "0x860C54")]
	public void Start()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x860F18", Offset = "0x860F18", VA = "0x860F18")]
	private void OnGameModeChanged(Game.Mode newMode, Game.Mode oldMode)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x860F1C", Offset = "0x860F1C", VA = "0x860F1C", Slot = "5")]
	public override bool AllowUse(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x861014", Offset = "0x861014", VA = "0x861014", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x8610D8", Offset = "0x8610D8", VA = "0x8610D8")]
	public void OnApprove()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x86115C", Offset = "0x86115C", VA = "0x86115C")]
	public void OnDeny()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x8611FC", Offset = "0x8611FC", VA = "0x8611FC")]
	[IteratorStateMachine(typeof(<DoEndingSequence>d__9))]
	private IEnumerator DoEndingSequence()
	{
		return null;
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x861298", Offset = "0x861298", VA = "0x861298")]
	public PapersPleaseEnding()
	{
	}
}
[Token(Token = "0x2000030")]
public class PastEnding : BaseEnding
{
	[Token(Token = "0x2000031")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Game game;

		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PastEnding <>4__this;

		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x8615A8", Offset = "0x8615A8", VA = "0x8615A8")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x8615B0", Offset = "0x8615B0", VA = "0x8615B0")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x2000032")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PastEnding <>4__this;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass1_0 <>8__1;

		[Token(Token = "0x17000029")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000F6")]
			[Address(RVA = "0x861940", Offset = "0x861940", VA = "0x861940", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000F8")]
			[Address(RVA = "0x861988", Offset = "0x861988", VA = "0x861988", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x861500", Offset = "0x861500", VA = "0x861500")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x861660", Offset = "0x861660", VA = "0x861660", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x861664", Offset = "0x861664", VA = "0x861664", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x861948", Offset = "0x861948", VA = "0x861948", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject effectsObject;

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x86148C", Offset = "0x86148C", VA = "0x86148C")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x861528", Offset = "0x861528", VA = "0x861528", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x8615A0", Offset = "0x8615A0", VA = "0x8615A0")]
	public PastEnding()
	{
	}
}
[Token(Token = "0x2000033")]
public class PeaceEnding : BaseEnding
{
	[Token(Token = "0x2000034")]
	[CompilerGenerated]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PeaceEnding <>4__this;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Game <game>5__2;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SubtitleSystem <subtitles>5__3;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000FF")]
			[Address(RVA = "0x8620D0", Offset = "0x8620D0", VA = "0x8620D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000101")]
			[Address(RVA = "0x862118", Offset = "0x862118", VA = "0x862118", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000FC")]
		[Address(RVA = "0x861A04", Offset = "0x861A04", VA = "0x861A04")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60000FD")]
		[Address(RVA = "0x861B60", Offset = "0x861B60", VA = "0x861B60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x861B64", Offset = "0x861B64", VA = "0x861B64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0x8620D8", Offset = "0x8620D8", VA = "0x8620D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fxPrefab;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject fx;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool doorOpen;

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x861990", Offset = "0x861990", VA = "0x861990")]
	[IteratorStateMachine(typeof(<Start>d__3))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x861A2C", Offset = "0x861A2C", VA = "0x861A2C", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x861B58", Offset = "0x861B58", VA = "0x861B58")]
	public PeaceEnding()
	{
	}
}
[Token(Token = "0x2000035")]
public class PentagramEnding : BaseEnding
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject fxRoot;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Texture3D colorCorrectionLUT;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x862120", Offset = "0x862120", VA = "0x862120")]
	private void Start()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x8621F0", Offset = "0x8621F0", VA = "0x8621F0", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x86225C", Offset = "0x86225C", VA = "0x86225C")]
	public PentagramEnding()
	{
	}
}
[Token(Token = "0x2000036")]
public class PlaceholderEnding : BaseEnding
{
	[Token(Token = "0x2000037")]
	[CompilerGenerated]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Game <game>5__2;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600010B")]
			[Address(RVA = "0x862460", Offset = "0x862460", VA = "0x862460", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600010D")]
			[Address(RVA = "0x8624A8", Offset = "0x8624A8", VA = "0x8624A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000108")]
		[Address(RVA = "0x8622C4", Offset = "0x8622C4", VA = "0x8622C4")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000109")]
		[Address(RVA = "0x862360", Offset = "0x862360", VA = "0x862360", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600010A")]
		[Address(RVA = "0x862364", Offset = "0x862364", VA = "0x862364", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600010C")]
		[Address(RVA = "0x862468", Offset = "0x862468", VA = "0x862468", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x862264", Offset = "0x862264", VA = "0x862264")]
	[IteratorStateMachine(typeof(<Start>d__0))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x8622EC", Offset = "0x8622EC", VA = "0x8622EC", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x862358", Offset = "0x862358", VA = "0x862358")]
	public PlaceholderEnding()
	{
	}
}
[Token(Token = "0x2000038")]
public class PoltergeistEnding : BaseEnding
{
	[Token(Token = "0x2000039")]
	[CompilerGenerated]
	private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PoltergeistEnding <>4__this;

		[Token(Token = "0x40000DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Game <game>5__2;

		[Token(Token = "0x40000E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ClockHand[] <clockHands>5__3;

		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject[] <widgets>5__4;

		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <ghostUpTime>5__5;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000114")]
			[Address(RVA = "0x862FB4", Offset = "0x862FB4", VA = "0x862FB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000116")]
			[Address(RVA = "0x862FFC", Offset = "0x862FFC", VA = "0x862FFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000111")]
		[Address(RVA = "0x862524", Offset = "0x862524", VA = "0x862524")]
		[DebuggerHidden]
		public <Start>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0x8625C8", Offset = "0x8625C8", VA = "0x8625C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000113")]
		[Address(RVA = "0x8625CC", Offset = "0x8625CC", VA = "0x8625CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000115")]
		[Address(RVA = "0x862FBC", Offset = "0x862FBC", VA = "0x862FBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fxPrefab;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ghostPrefab;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject fx;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject ghost;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Clock clock;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool waitLoop;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float ghostSpawnTimestamp;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource screamSFX;

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x8624B0", Offset = "0x8624B0", VA = "0x8624B0")]
	[IteratorStateMachine(typeof(<Start>d__8))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x86254C", Offset = "0x86254C", VA = "0x86254C", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x8625B8", Offset = "0x8625B8", VA = "0x8625B8")]
	public PoltergeistEnding()
	{
	}
}
[Token(Token = "0x200003A")]
public class RocketEnding : BaseEnding
{
	[Token(Token = "0x200003B")]
	[CompilerGenerated]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RocketEnding <>4__this;

		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Game <game>5__2;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600011D")]
			[Address(RVA = "0x8635D4", Offset = "0x8635D4", VA = "0x8635D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600011F")]
			[Address(RVA = "0x86361C", Offset = "0x86361C", VA = "0x86361C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600011A")]
		[Address(RVA = "0x863078", Offset = "0x863078", VA = "0x863078")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600011B")]
		[Address(RVA = "0x863114", Offset = "0x863114", VA = "0x863114", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600011C")]
		[Address(RVA = "0x863118", Offset = "0x863118", VA = "0x863118", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0x8635DC", Offset = "0x8635DC", VA = "0x8635DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource monkeyAudio;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource launchAudio;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource timpaniAudio;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject rubblePrefab;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject monolith;

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x863004", Offset = "0x863004", VA = "0x863004")]
	[IteratorStateMachine(typeof(<Start>d__5))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x8630A0", Offset = "0x8630A0", VA = "0x8630A0", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x86310C", Offset = "0x86310C", VA = "0x86310C")]
	public RocketEnding()
	{
	}
}
[Token(Token = "0x200003C")]
public class SandwormEnding : BaseEnding
{
	[Token(Token = "0x200003D")]
	[CompilerGenerated]
	private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SandwormEnding <>4__this;

		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Game <game>5__2;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000128")]
			[Address(RVA = "0x863C60", Offset = "0x863C60", VA = "0x863C60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600012A")]
			[Address(RVA = "0x863CA8", Offset = "0x863CA8", VA = "0x863CA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000125")]
		[Address(RVA = "0x863698", Offset = "0x863698", VA = "0x863698")]
		[DebuggerHidden]
		public <Start>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000126")]
		[Address(RVA = "0x8638F8", Offset = "0x8638F8", VA = "0x8638F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000127")]
		[Address(RVA = "0x8638FC", Offset = "0x8638FC", VA = "0x8638FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000129")]
		[Address(RVA = "0x863C68", Offset = "0x863C68", VA = "0x863C68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject fxRoot;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Texture3D colorCorrectionLUT;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform waterPlane;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material lowEndWaterMaterial;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SceneObjectToggler sceneObjectToggler;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Light _light;

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x863624", Offset = "0x863624", VA = "0x863624")]
	[IteratorStateMachine(typeof(<Start>d__6))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x8636C0", Offset = "0x8636C0", VA = "0x8636C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x863750", Offset = "0x863750", VA = "0x863750", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x863820", Offset = "0x863820", VA = "0x863820")]
	public SandwormEnding()
	{
	}
}
[Token(Token = "0x200003E")]
public class SpaceInvaderEnding : BaseEnding
{
	[Token(Token = "0x200003F")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Animator animator;

		[Token(Token = "0x600012F")]
		[Address(RVA = "0x863E5C", Offset = "0x863E5C", VA = "0x863E5C")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6000130")]
		[Address(RVA = "0x863E64", Offset = "0x863E64", VA = "0x863E64")]
		internal bool <Start>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000040")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceInvaderEnding <>4__this;

		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass1_0 <>8__1;

		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Game <game>5__2;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000134")]
			[Address(RVA = "0x864264", Offset = "0x864264", VA = "0x864264", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000136")]
			[Address(RVA = "0x8642AC", Offset = "0x8642AC", VA = "0x8642AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0x863D24", Offset = "0x863D24", VA = "0x863D24")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000132")]
		[Address(RVA = "0x863ECC", Offset = "0x863ECC", VA = "0x863ECC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000133")]
		[Address(RVA = "0x863ED0", Offset = "0x863ED0", VA = "0x863ED0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000135")]
		[Address(RVA = "0x86426C", Offset = "0x86426C", VA = "0x86426C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000041")]
	[CompilerGenerated]
	private sealed class <PlayFireSound>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceInvaderEnding <>4__this;

		[Token(Token = "0x17000037")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600013A")]
			[Address(RVA = "0x864370", Offset = "0x864370", VA = "0x864370", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600013C")]
			[Address(RVA = "0x8643B8", Offset = "0x8643B8", VA = "0x8643B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000137")]
		[Address(RVA = "0x863DC0", Offset = "0x863DC0", VA = "0x863DC0")]
		[DebuggerHidden]
		public <PlayFireSound>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000138")]
		[Address(RVA = "0x8642B4", Offset = "0x8642B4", VA = "0x8642B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000139")]
		[Address(RVA = "0x8642B8", Offset = "0x8642B8", VA = "0x8642B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600013B")]
		[Address(RVA = "0x864378", Offset = "0x864378", VA = "0x864378", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource fireSound;

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x863CB0", Offset = "0x863CB0", VA = "0x863CB0")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x863D4C", Offset = "0x863D4C", VA = "0x863D4C")]
	[IteratorStateMachine(typeof(<PlayFireSound>d__2))]
	private IEnumerator PlayFireSound()
	{
		return null;
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x863DE8", Offset = "0x863DE8", VA = "0x863DE8", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x863E54", Offset = "0x863E54", VA = "0x863E54")]
	public SpaceInvaderEnding()
	{
	}
}
[Serializable]
[Token(Token = "0x2000042")]
public class StanleyVoData
{
	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioClip VOClip;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayInSeconds;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string subtitle;

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x8643C0", Offset = "0x8643C0", VA = "0x8643C0")]
	public StanleyVoData()
	{
	}
}
[Token(Token = "0x2000043")]
[RequireComponent(typeof(AudioSource))]
public class StanleyParableEnding : BaseEnding
{
	[Token(Token = "0x2000044")]
	[CompilerGenerated]
	private sealed class <StartEnding>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StanleyParableEnding <>4__this;

		[Token(Token = "0x17000039")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600014A")]
			[Address(RVA = "0x86506C", Offset = "0x86506C", VA = "0x86506C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600014C")]
			[Address(RVA = "0x8650B4", Offset = "0x8650B4", VA = "0x8650B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000147")]
		[Address(RVA = "0x8645DC", Offset = "0x8645DC", VA = "0x8645DC")]
		[DebuggerHidden]
		public <StartEnding>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000148")]
		[Address(RVA = "0x864EB0", Offset = "0x864EB0", VA = "0x864EB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000149")]
		[Address(RVA = "0x864EB4", Offset = "0x864EB4", VA = "0x864EB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600014B")]
		[Address(RVA = "0x865074", Offset = "0x865074", VA = "0x865074", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000045")]
	[CompilerGenerated]
	private sealed class <PlayDelayed>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400010D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400010E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StanleyVoData voData;

		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StanleyParableEnding <>4__this;

		[Token(Token = "0x1700003B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000150")]
			[Address(RVA = "0x8651E4", Offset = "0x8651E4", VA = "0x8651E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000152")]
			[Address(RVA = "0x86522C", Offset = "0x86522C", VA = "0x86522C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0x864AAC", Offset = "0x864AAC", VA = "0x864AAC")]
		[DebuggerHidden]
		public <PlayDelayed>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0x8650BC", Offset = "0x8650BC", VA = "0x8650BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0x8650C0", Offset = "0x8650C0", VA = "0x8650C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000151")]
		[Address(RVA = "0x8651EC", Offset = "0x8651EC", VA = "0x8651EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private StanleyVoData[] idleClips;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private StanleyVoData[] waveCompletedClips;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int idleTextIdx;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int waveCompletedIdx;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource scriptAudioSource;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float idleTimer;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private StanleyPanelController panelcontroller;

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x8643C8", Offset = "0x8643C8", VA = "0x8643C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x864568", Offset = "0x864568", VA = "0x864568")]
	[IteratorStateMachine(typeof(<StartEnding>d__8))]
	private IEnumerator StartEnding()
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x864604", Offset = "0x864604", VA = "0x864604")]
	private void OnWaveComplete()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x864A1C", Offset = "0x864A1C", VA = "0x864A1C")]
	[IteratorStateMachine(typeof(<PlayDelayed>d__10))]
	private IEnumerator PlayDelayed(StanleyVoData voData)
	{
		return null;
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x864AD4", Offset = "0x864AD4", VA = "0x864AD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x86481C", Offset = "0x86481C", VA = "0x86481C")]
	private void ShowCorrectSubtitle(bool idleClip)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x864C6C", Offset = "0x864C6C", VA = "0x864C6C", Slot = "5")]
	public override bool AllowUse(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x864D30", Offset = "0x864D30", VA = "0x864D30", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x864EA8", Offset = "0x864EA8", VA = "0x864EA8")]
	public StanleyParableEnding()
	{
	}
}
[Token(Token = "0x2000046")]
public class ToxicCloudEnding : BaseEnding
{
	[Token(Token = "0x2000047")]
	[CompilerGenerated]
	private sealed class <ToxicCloud>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToxicCloudEnding <>4__this;

		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Game <game>5__2;

		[Token(Token = "0x1700003D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600015C")]
			[Address(RVA = "0x8659D0", Offset = "0x8659D0", VA = "0x8659D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600015E")]
			[Address(RVA = "0x865A18", Offset = "0x865A18", VA = "0x865A18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0x8652C8", Offset = "0x8652C8", VA = "0x8652C8")]
		[DebuggerHidden]
		public <ToxicCloud>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600015A")]
		[Address(RVA = "0x865788", Offset = "0x865788", VA = "0x865788", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0x86578C", Offset = "0x86578C", VA = "0x86578C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0x8659D8", Offset = "0x8659D8", VA = "0x8659D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float PoisonLerpDuration;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip gasLeakLoop;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color DiffuseOverrideColor;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float DiffuseOverrideTargetAmount;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject randomCoughPrefab;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly Stack<GameObject> sfx;

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x865234", Offset = "0x865234", VA = "0x865234")]
	private void Start()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x865254", Offset = "0x865254", VA = "0x865254")]
	[IteratorStateMachine(typeof(<ToxicCloud>d__7))]
	private IEnumerator ToxicCloud()
	{
		return null;
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x8652F0", Offset = "0x8652F0", VA = "0x8652F0")]
	private void CreateGasLeakLoop()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x865578", Offset = "0x865578", VA = "0x865578")]
	private void AddCoughingSound()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x865618", Offset = "0x865618", VA = "0x865618", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x8656F8", Offset = "0x8656F8", VA = "0x8656F8")]
	public ToxicCloudEnding()
	{
	}
}
[Token(Token = "0x2000049")]
public class WargamesEnding : BaseEnding
{
	[Token(Token = "0x200004A")]
	private enum WargameScreens
	{
		[Token(Token = "0x4000136")]
		Connecting,
		[Token(Token = "0x4000137")]
		Intro,
		[Token(Token = "0x4000138")]
		Game,
		[Token(Token = "0x4000139")]
		Replay,
		[Token(Token = "0x400013A")]
		Win
	}

	[Token(Token = "0x200004B")]
	private enum TicTacToeStates
	{
		[Token(Token = "0x400013C")]
		None,
		[Token(Token = "0x400013D")]
		X,
		[Token(Token = "0x400013E")]
		O
	}

	[Token(Token = "0x200004C")]
	private struct CacheTuple
	{
		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int NextMove;

		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int EvalValue;
	}

	[Token(Token = "0x200004D")]
	[CompilerGenerated]
	private sealed class <Start>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WargamesEnding <>4__this;

		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TopDrawer <topDrawer>5__2;

		[Token(Token = "0x17000040")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000183")]
			[Address(RVA = "0x86812C", Offset = "0x86812C", VA = "0x86812C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000185")]
			[Address(RVA = "0x868174", Offset = "0x868174", VA = "0x868174", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000180")]
		[Address(RVA = "0x865B44", Offset = "0x865B44", VA = "0x865B44")]
		[DebuggerHidden]
		public <Start>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0x867C44", Offset = "0x867C44", VA = "0x867C44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0x867C48", Offset = "0x867C48", VA = "0x867C48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0x868134", Offset = "0x868134", VA = "0x868134", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004E")]
	[CompilerGenerated]
	private sealed class <BeginCrawlText>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WargamesEnding <>4__this;

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float crawlTime;

		[Token(Token = "0x17000042")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000189")]
			[Address(RVA = "0x86826C", Offset = "0x86826C", VA = "0x86826C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000043")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600018B")]
			[Address(RVA = "0x8682B4", Offset = "0x8682B4", VA = "0x8682B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000186")]
		[Address(RVA = "0x866348", Offset = "0x866348", VA = "0x866348")]
		[DebuggerHidden]
		public <BeginCrawlText>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000187")]
		[Address(RVA = "0x86817C", Offset = "0x86817C", VA = "0x86817C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000188")]
		[Address(RVA = "0x868180", Offset = "0x868180", VA = "0x868180", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0x868274", Offset = "0x868274", VA = "0x868274", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004F")]
	[CompilerGenerated]
	private sealed class <CullConnectingText>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WargamesEnding <>4__this;

		[Token(Token = "0x17000044")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600018F")]
			[Address(RVA = "0x868430", Offset = "0x868430", VA = "0x868430", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000045")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000191")]
			[Address(RVA = "0x868478", Offset = "0x868478", VA = "0x868478", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600018C")]
		[Address(RVA = "0x8663E4", Offset = "0x8663E4", VA = "0x8663E4")]
		[DebuggerHidden]
		public <CullConnectingText>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0x8682BC", Offset = "0x8682BC", VA = "0x8682BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600018E")]
		[Address(RVA = "0x8682C0", Offset = "0x8682C0", VA = "0x8682C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000190")]
		[Address(RVA = "0x868438", Offset = "0x868438", VA = "0x868438", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000050")]
	[CompilerGenerated]
	private sealed class <AutoNuke>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WargamesEnding <>4__this;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Game <game>5__2;

		[Token(Token = "0x17000046")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000195")]
			[Address(RVA = "0x86872C", Offset = "0x86872C", VA = "0x86872C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000197")]
			[Address(RVA = "0x868774", Offset = "0x868774", VA = "0x868774", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000192")]
		[Address(RVA = "0x866D10", Offset = "0x866D10", VA = "0x866D10")]
		[DebuggerHidden]
		public <AutoNuke>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6000193")]
		[Address(RVA = "0x868480", Offset = "0x868480", VA = "0x868480", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000194")]
		[Address(RVA = "0x868484", Offset = "0x868484", VA = "0x868484", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000196")]
		[Address(RVA = "0x868734", Offset = "0x868734", VA = "0x868734", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000051")]
	[CompilerGenerated]
	private sealed class <AutoPlay>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WargamesEnding <>4__this;

		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <turnTime>5__2;

		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <j>5__4;

		[Token(Token = "0x17000048")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600019B")]
			[Address(RVA = "0x869134", Offset = "0x869134", VA = "0x869134", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000049")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600019D")]
			[Address(RVA = "0x86917C", Offset = "0x86917C", VA = "0x86917C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000198")]
		[Address(RVA = "0x86877C", Offset = "0x86877C", VA = "0x86877C")]
		[DebuggerHidden]
		public <AutoPlay>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000199")]
		[Address(RVA = "0x8687A4", Offset = "0x8687A4", VA = "0x8687A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600019A")]
		[Address(RVA = "0x8687A8", Offset = "0x8687A8", VA = "0x8687A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600019C")]
		[Address(RVA = "0x86913C", Offset = "0x86913C", VA = "0x86913C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000052")]
	[CompilerGenerated]
	private sealed class <LaunchSequenceFreakout>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WargamesEnding <>4__this;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <launchAnimStarted>5__2;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <turnTime>5__3;

		[Token(Token = "0x1700004A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A1")]
			[Address(RVA = "0x869374", Offset = "0x869374", VA = "0x869374", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A3")]
			[Address(RVA = "0x8693BC", Offset = "0x8693BC", VA = "0x8693BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600019E")]
		[Address(RVA = "0x869184", Offset = "0x869184", VA = "0x869184")]
		[DebuggerHidden]
		public <LaunchSequenceFreakout>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x600019F")]
		[Address(RVA = "0x8691AC", Offset = "0x8691AC", VA = "0x8691AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x8691B0", Offset = "0x8691B0", VA = "0x8691B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x86937C", Offset = "0x86937C", VA = "0x86937C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000053")]
	[CompilerGenerated]
	private sealed class <AirRaid>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WargamesEnding <>4__this;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A7")]
			[Address(RVA = "0x869528", Offset = "0x869528", VA = "0x869528", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A9")]
			[Address(RVA = "0x869570", Offset = "0x869570", VA = "0x869570", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x8693C4", Offset = "0x8693C4", VA = "0x8693C4")]
		[DebuggerHidden]
		public <AirRaid>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x8693EC", Offset = "0x8693EC", VA = "0x8693EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x8693F0", Offset = "0x8693F0", VA = "0x8693F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x869530", Offset = "0x869530", VA = "0x869530", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000054")]
	[CompilerGenerated]
	private sealed class <TakeTurns>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WargamesEnding <>4__this;

		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int cellIndex;

		[Token(Token = "0x4000163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <finished>5__2;

		[Token(Token = "0x4000164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <score>5__3;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001AD")]
			[Address(RVA = "0x869E94", Offset = "0x869E94", VA = "0x869E94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001AF")]
			[Address(RVA = "0x869EDC", Offset = "0x869EDC", VA = "0x869EDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x869578", Offset = "0x869578", VA = "0x869578")]
		[DebuggerHidden]
		public <TakeTurns>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x8695A0", Offset = "0x8695A0", VA = "0x8695A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x8695A4", Offset = "0x8695A4", VA = "0x8695A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x869E9C", Offset = "0x869E9C", VA = "0x869E9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject warGamesScreen;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] screens;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text connectingText;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextCrawler textCrawler;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip typingclip;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject backgroundScreen;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string[] introStrings;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource audioSource;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ScreenController screenController;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int nextMove;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<string, CacheTuple> moveCache;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Nuke")]
	public GameObject airRaidSirenPrefab;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip detonationSound;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject fxPrefab;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject fx;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject airRaidSiren;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("Tic Tac Toe")]
	[SerializeField]
	private WargamesCell[] cells;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private AudioClip showTicTacToeClip;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private AudioClip xPlayClip;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private AudioClip oPlayClip;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool GameWon;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool GameLost;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private SpriteRenderer mainScreenSpriteRenderer;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Animator screenAnimator;

	[Token(Token = "0x1700003F")]
	public static bool WaitingOnPlayer
	{
		[Token(Token = "0x6000161")]
		[Address(RVA = "0x865A3C", Offset = "0x865A3C", VA = "0x865A3C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000162")]
		[Address(RVA = "0x865A84", Offset = "0x865A84", VA = "0x865A84")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x865AD0", Offset = "0x865AD0", VA = "0x865AD0")]
	[IteratorStateMachine(typeof(<Start>d__29))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x865B6C", Offset = "0x865B6C", VA = "0x865B6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x865DEC", Offset = "0x865DEC", VA = "0x865DEC")]
	public void ChangeTextDependingOnLanguage()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x865B70", Offset = "0x865B70", VA = "0x865B70")]
	public void ChangeOtherText()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x8662A8", Offset = "0x8662A8", VA = "0x8662A8")]
	[IteratorStateMachine(typeof(<BeginCrawlText>d__33))]
	private IEnumerator BeginCrawlText(string text, float crawlTime)
	{
		return null;
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x866370", Offset = "0x866370", VA = "0x866370")]
	[IteratorStateMachine(typeof(<CullConnectingText>d__34))]
	private IEnumerator CullConnectingText()
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x86640C", Offset = "0x86640C", VA = "0x86640C")]
	private void BeginWargames()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x8661F0", Offset = "0x8661F0", VA = "0x8661F0")]
	private void ShowScreen(WargameScreens screen)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x8669C4", Offset = "0x8669C4", VA = "0x8669C4", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x866A94", Offset = "0x866A94", VA = "0x866A94")]
	public void SelectPlayers(int numOfPlayers)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x866C9C", Offset = "0x866C9C", VA = "0x866C9C")]
	[IteratorStateMachine(typeof(<AutoNuke>d__39))]
	private IEnumerator AutoNuke()
	{
		return null;
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x866BC8", Offset = "0x866BC8", VA = "0x866BC8")]
	[IteratorStateMachine(typeof(<AutoPlay>d__40))]
	private IEnumerator AutoPlay()
	{
		return null;
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x866D38", Offset = "0x866D38", VA = "0x866D38")]
	private void ToggleMainScreen(bool state)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x866E64", Offset = "0x866E64", VA = "0x866E64")]
	[IteratorStateMachine(typeof(<LaunchSequenceFreakout>d__44))]
	private IEnumerator LaunchSequenceFreakout()
	{
		return null;
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x866ED8", Offset = "0x866ED8", VA = "0x866ED8")]
	[IteratorStateMachine(typeof(<AirRaid>d__45))]
	private IEnumerator AirRaid()
	{
		return null;
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x866F4C", Offset = "0x866F4C", VA = "0x866F4C")]
	public void PlayerSelectsCell(int cellIndex)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x866FC4", Offset = "0x866FC4", VA = "0x866FC4")]
	[IteratorStateMachine(typeof(<TakeTurns>d__47))]
	private IEnumerator TakeTurns(int cellIndex)
	{
		return null;
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x867048", Offset = "0x867048", VA = "0x867048")]
	private int[] GetGameState()
	{
		return null;
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x867168", Offset = "0x867168", VA = "0x867168")]
	private string GameStateToString(int[] game)
	{
		return null;
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x866C3C", Offset = "0x866C3C", VA = "0x866C3C")]
	private void ClearGame()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x867220", Offset = "0x867220", VA = "0x867220")]
	private void PlayX(int cellIndex)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x867280", Offset = "0x867280", VA = "0x867280")]
	private void PlayO(int cellIndex)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x8672E0", Offset = "0x8672E0", VA = "0x8672E0")]
	private int EvalulateGame(int[] game, int playerTurn)
	{
		return default(int);
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x86768C", Offset = "0x86768C", VA = "0x86768C")]
	private int ScoreGame(int[] gameState, out bool finished)
	{
		return default(int);
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x8677EC", Offset = "0x8677EC", VA = "0x8677EC")]
	public WargamesEnding()
	{
	}
}
[Token(Token = "0x2000056")]
public class YinYangEnding : BaseEnding
{
	[Token(Token = "0x2000057")]
	[CompilerGenerated]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YinYangEnding <>4__this;

		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Game <game>5__2;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001BA")]
			[Address(RVA = "0x86A624", Offset = "0x86A624", VA = "0x86A624", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001BC")]
			[Address(RVA = "0x86A66C", Offset = "0x86A66C", VA = "0x86A66C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x869FE8", Offset = "0x869FE8", VA = "0x869FE8")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x86A2B0", Offset = "0x86A2B0", VA = "0x86A2B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x86A2B4", Offset = "0x86A2B4", VA = "0x86A2B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001BB")]
		[Address(RVA = "0x86A62C", Offset = "0x86A62C", VA = "0x86A62C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Texture3D invertLUT;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 restorePos;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion restoreRot;

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x869F74", Offset = "0x869F74", VA = "0x869F74")]
	[IteratorStateMachine(typeof(<Start>d__3))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x86A010", Offset = "0x86A010", VA = "0x86A010")]
	private void InvertGravity()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x86A19C", Offset = "0x86A19C", VA = "0x86A19C", Slot = "4")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x86A2A8", Offset = "0x86A2A8", VA = "0x86A2A8")]
	public YinYangEnding()
	{
	}
}
[Serializable]
[Token(Token = "0x2000058")]
public class MegaWireLodLevel
{
	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float distance;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int sides;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float segsperunit;

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x86A674", Offset = "0x86A674", VA = "0x86A674")]
	public MegaWireLodLevel()
	{
	}
}
[Token(Token = "0x2000059")]
[AddComponentMenu("Procedural/Mega Wire")]
[ExecuteInEditMode]
public class MegaWire : MonoBehaviour
{
	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isRevealed;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool Rebuild;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fudge;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MegaWireStrandedMesher strandedMesher;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spring;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float damp;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeStep;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Mass;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 gravity;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float airdrag;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float massRand;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool doCollisions;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool useraycast;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LayerMask collisionmask;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float collisionoff;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float collisiondist;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float floor;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int points;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int iters;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int frameWait;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int frameNum;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool stiffnessSprings;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float stiffrate;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float stiffdamp;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool lengthConstraints;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Matrix4x4 wtm;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public MegaWireSolver verletsolver;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool showphysics;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	public bool showconnections;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	public bool showmeshparams;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<MegaWireConnectionDef> connections;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<MegaWireSpan> spans;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 windDir;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float windFrc;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float windEffect;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public MegaWireWind wind;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Material material;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool uselod;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float disableDist;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool disableOnNotVisible;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float lodreducesides;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float lodreducesegs;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject startObj;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float startAlpha;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public Vector3 startRot;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Vector3 startOffset;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject endObj;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float endAlpha;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public Vector3 endRot;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Vector3 endOffset;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public List<MegaWireLodLevel> lods;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool hidespans;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public bool disableOnDistance;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public float distfromcamera;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float rbodyforce;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public bool Enabled;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
	public bool ShowWire;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float awakeTime;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public bool displayGizmo;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Color gizmoColor;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public List<Transform> poles;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float stretch;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public float warmPhysicsTime;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public bool builduvs;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool DisableAll;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public float startTime;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public bool showWindParams;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
	public bool showPhysicsAdv;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AA")]
	public bool showAttach;

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x86A690", Offset = "0x86A690", VA = "0x86A690")]
	public void Copy(MegaWire from, MegaWireConnectionHelper helper)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x86AAEC", Offset = "0x86AAEC", VA = "0x86AAEC")]
	public void Create()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x86AC90", Offset = "0x86AC90", VA = "0x86AC90")]
	public static MegaWire Create(MegaWire wire, List<GameObject> objs, Material mat, string name, MegaWire copyfrom, float wiresize, float str)
	{
		return null;
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x86B9A8", Offset = "0x86B9A8", VA = "0x86B9A8")]
	public void ChangeStretch(float stretch)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x86BB3C", Offset = "0x86BB3C", VA = "0x86BB3C")]
	public int GetVertexCount()
	{
		return default(int);
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x86BBD8", Offset = "0x86BBD8", VA = "0x86BBD8")]
	public void SetHidden(bool hide)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x86BC8C", Offset = "0x86BC8C", VA = "0x86BC8C")]
	public void SetSelection(List<GameObject> objs, bool add)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x86BC90", Offset = "0x86BC90", VA = "0x86BC90")]
	public void UpdateOffsets()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x86B748", Offset = "0x86B748", VA = "0x86B748")]
	public void Init()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x86CCA0", Offset = "0x86CCA0", VA = "0x86CCA0")]
	private void WireUpdate(float t)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x86D508", Offset = "0x86D508", VA = "0x86D508")]
	public void RunPhysics(float t)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x86D958", Offset = "0x86D958", VA = "0x86D958")]
	public Vector3 SetWeight(float alpha, int strand, float weight, bool snap)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x86DCF4", Offset = "0x86DCF4", VA = "0x86DCF4")]
	public Vector3 GetPos(float alpha, int strand, bool snap)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x86DFA0", Offset = "0x86DFA0", VA = "0x86DFA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x86E078", Offset = "0x86E078", VA = "0x86E078")]
	public void SetWireVisible(bool show)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x86D7D4", Offset = "0x86D7D4", VA = "0x86D7D4")]
	[ContextMenu("Rebuild Wire")]
	public void RebuildWire()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x86E124", Offset = "0x86E124", VA = "0x86E124")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x86E564", Offset = "0x86E564", VA = "0x86E564")]
	public MegaWire()
	{
	}
}
[Token(Token = "0x200005A")]
[ExecuteInEditMode]
[AddComponentMenu("Mega Wire/Attach")]
public class MegaWireAttach : MonoBehaviour
{
	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MegaWire wire;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int span;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int connection;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float alpha;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 offset;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool align;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 rotate;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion locrot;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Matrix4x4 wtm;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform parent;

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x86E990", Offset = "0x86E990", VA = "0x86E990")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x86EF7C", Offset = "0x86EF7C", VA = "0x86EF7C")]
	public MegaWireAttach()
	{
	}
}
[Serializable]
[Token(Token = "0x200005B")]
public class MegaWireConnectionDef
{
	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 inOffset;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 outOffset;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float radius;

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x86B6CC", Offset = "0x86B6CC", VA = "0x86B6CC")]
	public MegaWireConnectionDef()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x86A9E4", Offset = "0x86A9E4", VA = "0x86A9E4")]
	public MegaWireConnectionDef(MegaWireConnectionDef src)
	{
	}
}
[Serializable]
[Token(Token = "0x200005C")]
public class MegaWireConnection
{
	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 inOffset;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 outOffset;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float radius;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 windFrc;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform start;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform end;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float WireLength;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Matrix4x4 wtm;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<MegaWireMass> masses;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<MegaWireSpring> springs;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<MegaWirePointConstraint> constraints;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<MegaWireLengthConstraint> lenconstraints;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Vector3[] masspos;

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x86F028", Offset = "0x86F028", VA = "0x86F028")]
	public void SetEndConstraintActive(int index, bool active, float time)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x86F160", Offset = "0x86F160", VA = "0x86F160")]
	public void Update(MegaWire wire, float timeStep)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x86C154", Offset = "0x86C154", VA = "0x86C154")]
	public void Init(MegaWire wire)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x86F478", Offset = "0x86F478", VA = "0x86F478")]
	public void MoveMasses(MegaWire wire)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x86ED7C", Offset = "0x86ED7C", VA = "0x86ED7C")]
	public Vector3 Interp(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x86F6FC", Offset = "0x86F6FC", VA = "0x86F6FC")]
	public Vector3 Velocity(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x86F8F8", Offset = "0x86F8F8", VA = "0x86F8F8")]
	public Vector3 LinInterp(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x86FA20", Offset = "0x86FA20", VA = "0x86FA20")]
	public Matrix4x4 GetDeformMat(float alpha)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x86FB70", Offset = "0x86FB70", VA = "0x86FB70")]
	public Matrix4x4 GetDeformMatLin(float alpha)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x86BF6C", Offset = "0x86BF6C", VA = "0x86BF6C")]
	public MegaWireConnection()
	{
	}
}
[Token(Token = "0x200005D")]
[AddComponentMenu("Mega Wire/Connection Helper")]
public class MegaWireConnectionHelper : MonoBehaviour
{
	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MegaWireConnectionDef> connections;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool showgizmo;

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x86FD10", Offset = "0x86FD10", VA = "0x86FD10")]
	public MegaWireConnectionHelper()
	{
	}
}
[Token(Token = "0x200005E")]
[ExecuteInEditMode]
[AddComponentMenu("Mega Wire/Hanger")]
public class MegaWireHanger : MonoBehaviour
{
	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MegaWire wire;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float alpha;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int strand;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float offset;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float weight;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool align;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 rotate;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion locrot;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Matrix4x4 wtm;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform parent;

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x86FD98", Offset = "0x86FD98", VA = "0x86FD98")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x8701B4", Offset = "0x8701B4", VA = "0x8701B4")]
	public MegaWireHanger()
	{
	}
}
[Serializable]
[Token(Token = "0x200005F")]
public class MegaWireMesher
{
	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool show;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3[] tan1;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector3[] tan2;

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x870254", Offset = "0x870254", VA = "0x870254", Slot = "4")]
	public virtual void BuildMesh(MegaWire rope, MegaWireSpan span)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x870258", Offset = "0x870258", VA = "0x870258")]
	public static void BuildTangents(Mesh mesh, Vector3[] verts, Vector2[] uvs, Vector3[] norms, int[] tris)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x8707BC", Offset = "0x8707BC", VA = "0x8707BC")]
	public MegaWireMesher()
	{
	}
}
[Serializable]
[Token(Token = "0x2000060")]
public class MegaWireStrandedMesher : MegaWireMesher
{
	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Matrix4x4 wtm;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int sides;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int segments;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float uvtwist;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float uvtilex;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float uvtiley;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int strands;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float offset;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float Twist;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool cap;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float strandRadius;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float SegsPerUnit;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TwistPerUnit;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool calcBounds;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	public bool calcTangents;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	public bool genuv;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
	public bool linInterp;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 ropeup;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3[] cross;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3[] cnorms;

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x86AA98", Offset = "0x86AA98", VA = "0x86AA98")]
	public void Copy(MegaWireStrandedMesher src)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x8707C4", Offset = "0x8707C4", VA = "0x8707C4", Slot = "4")]
	public override void BuildMesh(MegaWire rope, MegaWireSpan span)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x871558", Offset = "0x871558", VA = "0x871558")]
	private void BuildCrossSection(float rad)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x86E8B8", Offset = "0x86E8B8", VA = "0x86E8B8")]
	public MegaWireStrandedMesher()
	{
	}
}
[Token(Token = "0x2000061")]
[ExecuteInEditMode]
public class MegaWireOrbit : MonoBehaviour
{
	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer render;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SkinnedMeshRenderer srender;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshFilter filter;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distance;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float xSpeed;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ySpeed;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float zSpeed;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float yMinLimit;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float yMaxLimit;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float xMinLimit;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float xMaxLimit;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float x;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float y;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 center;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool Dynamic;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 offset;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 EditTest;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 tpos;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float t;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float trantime;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float vx;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float vy;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float vz;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float nx;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float ny;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float nz;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float delay;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float delayz;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float mindist;

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x8716C0", Offset = "0x8716C0", VA = "0x8716C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x871CA4", Offset = "0x871CA4", VA = "0x871CA4")]
	private float easeInOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x871D0C", Offset = "0x871D0C", VA = "0x871D0C")]
	private float easeInQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x871D20", Offset = "0x871D20", VA = "0x871D20")]
	private float easeInSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x871894", Offset = "0x871894", VA = "0x871894")]
	public void NewTarget(GameObject targ)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x871D58", Offset = "0x871D58", VA = "0x871D58")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x8722CC", Offset = "0x8722CC", VA = "0x8722CC")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x872308", Offset = "0x872308", VA = "0x872308")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x87230C", Offset = "0x87230C", VA = "0x87230C")]
	public MegaWireOrbit()
	{
	}
}
[Token(Token = "0x2000062")]
public class MegaWirePerlin
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MegaWirePerlin instance;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int[] p;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int[] permutation;

	[Token(Token = "0x17000052")]
	public static MegaWirePerlin Instance
	{
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x8724A4", Offset = "0x8724A4", VA = "0x8724A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x87234C", Offset = "0x87234C", VA = "0x87234C")]
	public MegaWirePerlin()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x87252C", Offset = "0x87252C", VA = "0x87252C")]
	public int Perm(int i)
	{
		return default(int);
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x8725AC", Offset = "0x8725AC", VA = "0x8725AC")]
	public float Noise(float x)
	{
		return default(float);
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x872704", Offset = "0x872704", VA = "0x872704")]
	public float Noise(float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x872924", Offset = "0x872924", VA = "0x872924")]
	public float Noise(float x, float y, float z)
	{
		return default(float);
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x8726B8", Offset = "0x8726B8", VA = "0x8726B8")]
	private float fade(float t)
	{
		return default(float);
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x8726F4", Offset = "0x8726F4", VA = "0x8726F4")]
	private float lerp(float t, float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x8726E4", Offset = "0x8726E4", VA = "0x8726E4")]
	private static float grad(int hash, float x)
	{
		return default(float);
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x872904", Offset = "0x872904", VA = "0x872904")]
	private float grad(int hash, float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x872E1C", Offset = "0x872E1C", VA = "0x872E1C")]
	private float grad(int hash, float x, float y, float z)
	{
		return default(float);
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x872E64", Offset = "0x872E64", VA = "0x872E64")]
	public float fBm1(float x, float H, float lacunarity, float octaves)
	{
		return default(float);
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x872F50", Offset = "0x872F50", VA = "0x872F50")]
	public float fBm1(Vector3 vertex, float H, float lacunarity, float octaves)
	{
		return default(float);
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x872F54", Offset = "0x872F54", VA = "0x872F54")]
	public float fBm1(float x, float y, float z, float H, float lacunarity, float octaves)
	{
		return default(float);
	}
}
[Serializable]
[Token(Token = "0x2000063")]
public class MegaWireConstraint
{
	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool active;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float reactivate;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rtime;

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x873138", Offset = "0x873138", VA = "0x873138", Slot = "4")]
	public virtual void Apply(MegaWireConnection soft)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x87313C", Offset = "0x87313C", VA = "0x87313C")]
	public MegaWireConstraint()
	{
	}
}
[Serializable]
[Token(Token = "0x2000064")]
public class MegaWireLengthConstraint : MegaWireConstraint
{
	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int p1;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int p2;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float length;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 moveVector;

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x86F37C", Offset = "0x86F37C", VA = "0x86F37C")]
	public MegaWireLengthConstraint(int _p1, int _p2, float _len)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x873144", Offset = "0x873144", VA = "0x873144", Slot = "4")]
	public override void Apply(MegaWireConnection soft)
	{
	}
}
[Serializable]
[Token(Token = "0x2000065")]
public class MegaWirePointConstraint : MegaWireConstraint
{
	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int p1;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform obj;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 ps;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 tp;

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x86F40C", Offset = "0x86F40C", VA = "0x86F40C")]
	public MegaWirePointConstraint(int _p1, Transform trans, Vector3 off)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x87342C", Offset = "0x87342C", VA = "0x87342C")]
	private Vector3 easeInOutSine(Vector3 start, Vector3 end, float value)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x8734A8", Offset = "0x8734A8", VA = "0x8734A8")]
	public void ReActivate(MegaWireConnection soft, float t)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x8735D4", Offset = "0x8735D4", VA = "0x8735D4", Slot = "4")]
	public override void Apply(MegaWireConnection soft)
	{
	}
}
[Serializable]
[Token(Token = "0x2000066")]
public class MegaWireSolver
{
	[Token(Token = "0x6000209")]
	[Address(RVA = "0x873668", Offset = "0x873668", VA = "0x873668", Slot = "4")]
	public virtual void doIntegration1(MegaWireConnection rope, MegaWire wire, float dt)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x87366C", Offset = "0x87366C", VA = "0x87366C", Slot = "5")]
	public virtual void Solve()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x873670", Offset = "0x873670", VA = "0x873670")]
	public MegaWireSolver()
	{
	}
}
[Serializable]
[Token(Token = "0x2000067")]
public class MegaWireSolverVertlet : MegaWireSolver
{
	[Token(Token = "0x600020C")]
	[Address(RVA = "0x873678", Offset = "0x873678", VA = "0x873678")]
	private void doCalculateForces(MegaWireConnection rope, MegaWire wire)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x873B18", Offset = "0x873B18", VA = "0x873B18")]
	private void DoConstraints(MegaWireConnection rope, MegaWire wire)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x873C98", Offset = "0x873C98", VA = "0x873C98", Slot = "4")]
	public override void doIntegration1(MegaWireConnection rope, MegaWire wire, float dt)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x8740F0", Offset = "0x8740F0", VA = "0x8740F0")]
	private void DoCollisions(MegaWireConnection rope, MegaWire wire)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x86E8F0", Offset = "0x86E8F0", VA = "0x86E8F0")]
	public MegaWireSolverVertlet()
	{
	}
}
[Serializable]
[Token(Token = "0x2000068")]
public class MegaWireMass
{
	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 pos;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 last;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 force;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 vel;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 posc;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 velc;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 forcec;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float mass;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float oneovermass;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool collide;

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x86F18C", Offset = "0x86F18C", VA = "0x86F18C")]
	public MegaWireMass(float m, Vector3 p)
	{
	}
}
[Serializable]
[Token(Token = "0x2000069")]
public class MegaWireSpring
{
	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int p1;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int p2;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float restlen;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float initlen;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ks;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float kd;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float len;

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x874610", Offset = "0x874610", VA = "0x874610")]
	public MegaWireSpring(int _p1, int _p2, float _ks, float _kd, MegaWireConnection con)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x86F238", Offset = "0x86F238", VA = "0x86F238")]
	public MegaWireSpring(int _p1, int _p2, float _ks, float _kd, MegaWireConnection con, float stretch)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x874744", Offset = "0x874744", VA = "0x874744")]
	public void doCalculateSpringForce(MegaWireConnection hose)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x8738B0", Offset = "0x8738B0", VA = "0x8738B0")]
	public void doCalculateSpringForce1(MegaWireConnection mod)
	{
	}
}
[Token(Token = "0x200006A")]
public enum MegaWireGizmoType
{
	[Token(Token = "0x4000232")]
	Waypoint,
	[Token(Token = "0x4000233")]
	Pole,
	[Token(Token = "0x4000234")]
	Both
}
[Token(Token = "0x200006B")]
public enum MegaWireUnits
{
	[Token(Token = "0x4000236")]
	Meters,
	[Token(Token = "0x4000237")]
	Centimeters,
	[Token(Token = "0x4000238")]
	Feet,
	[Token(Token = "0x4000239")]
	Inches,
	[Token(Token = "0x400023A")]
	Yards
}
[Token(Token = "0x200006C")]
[ExecuteInEditMode]
[AddComponentMenu("Mega Wire/Plant Poles List")]
public class MegaWirePlantPolesList : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200006D")]
	public class MegaWireSection
	{
		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 p;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 p1;

		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float length;

		[Token(Token = "0x4000267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float seglength;

		[Token(Token = "0x600021B")]
		[Address(RVA = "0x8752A0", Offset = "0x8752A0", VA = "0x8752A0")]
		public MegaWireSection()
		{
		}
	}

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vector3> waypoints;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool closed;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int curve;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float start;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float length;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float spacing;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool update;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject pole;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 rotate;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float offset;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool conform;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float upright;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool addwires;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<GameObject> poles;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MegaWire copyfrom;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material material;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 positionVariation;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 rotateVariation;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 scaleVariation;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float spacingVariation;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool reverseWire;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int seed;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float wireSizeMult;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float stretch;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool showgizmo;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool showgizmoparams;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public MegaWireGizmoType gizmoType;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float arrowwidth;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float arrowlength;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float vertStart;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float vertLength;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float arrowoff;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float dashdist;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Color arrowCol;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Color lineCol;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Color otherCol;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Color dashCol;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public MegaWireUnits units;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float unitsScale;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<MegaWireSection> knots;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float pathlength;

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x874A18", Offset = "0x874A18", VA = "0x874A18")]
	public Vector3 Interpolate(float alpha)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x874B90", Offset = "0x874B90", VA = "0x874B90")]
	public Vector3 InterpCurve3D(float alpha)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x874E4C", Offset = "0x874E4C", VA = "0x874E4C")]
	private float CalcLength()
	{
		return default(float);
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x8752A8", Offset = "0x8752A8", VA = "0x8752A8")]
	public void Rebuild()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x876060", Offset = "0x876060", VA = "0x876060")]
	public MegaWirePlantPolesList()
	{
	}
}
[Token(Token = "0x200006E")]
[RequireComponent(typeof(MeshRenderer))]
[ExecuteInEditMode]
[RequireComponent(typeof(MeshFilter))]
public class MegaWireSpan : MonoBehaviour
{
	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool visible;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool on;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform start;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform end;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<MegaWireConnection> connections;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Mesh mesh;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float WireLength;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool AllowUpdates;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool buildmesh;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float time;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Matrix4x4 startTm;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Matrix4x4 endTm;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int vcount;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector3[] verts;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Vector2[] uvs;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int[] tris;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Vector3[] norms;

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x8762A8", Offset = "0x8762A8", VA = "0x8762A8")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x8762B4", Offset = "0x8762B4", VA = "0x8762B4")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x86B528", Offset = "0x86B528", VA = "0x86B528")]
	public void Init(MegaWire wire)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x86D460", Offset = "0x86D460", VA = "0x86D460")]
	public void UpdateSpan(MegaWire wire, float ts)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x86D8A8", Offset = "0x86D8A8", VA = "0x86D8A8")]
	public void MoveMasses(MegaWire wire)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x86D930", Offset = "0x86D930", VA = "0x86D930")]
	public void BuildMesh(MegaWire wire)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x8762BC", Offset = "0x8762BC", VA = "0x8762BC")]
	public MegaWireSpan()
	{
	}
}
[Token(Token = "0x200006F")]
[AddComponentMenu("Mega Wire/Watch")]
public class MegaWireWatch : MonoBehaviour
{
	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool realtime;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject watch;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Matrix4x4 mat;

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x876354", Offset = "0x876354", VA = "0x876354")]
	private void Start()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x876404", Offset = "0x876404", VA = "0x876404")]
	private void Update()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x8765A0", Offset = "0x8765A0", VA = "0x8765A0")]
	public MegaWireWatch()
	{
	}
}
[Token(Token = "0x2000070")]
public enum MegaWindType
{
	[Token(Token = "0x400027D")]
	Planar,
	[Token(Token = "0x400027E")]
	Spherical
}
[Token(Token = "0x2000071")]
[ExecuteInEditMode]
[AddComponentMenu("Mega Wire/Wind")]
public class MegaWireWind : MonoBehaviour
{
	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float decay;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float turb;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float strength;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public MegaWindType type;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float freq;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scale;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 force;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MegaWirePerlin iperlin;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float forceScaleFactor;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 gizmoSize;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int divs;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool displayGizmo;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float gizscale;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 gizmopos;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color gizmocol;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool dirnoise;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float dirfreq;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float dirphase;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 dirscale;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool strengthnoise;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float strengthfreq;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float strengthphase;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float strengthscale;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Vector3 dir;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float t;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 rotseed;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float strengthval;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 dirval;

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x8765A8", Offset = "0x8765A8", VA = "0x8765A8")]
	private float RTurbulence(Vector3 p, float freq)
	{
		return default(float);
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x8765CC", Offset = "0x8765CC", VA = "0x8765CC", Slot = "4")]
	public virtual Vector3 Force(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x876960", Offset = "0x876960", VA = "0x876960")]
	private void Update()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x876AA8", Offset = "0x876AA8", VA = "0x876AA8")]
	public MegaWireWind()
	{
	}
}
[Token(Token = "0x2000072")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000073")]
	public delegate void OnClick();

	[Token(Token = "0x2000074")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000075")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000076")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x400029B")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x400029C")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x400029D")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x887AA8", Offset = "0x887AA8", VA = "0x887AA8")]
	public void Awake()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x888014", Offset = "0x888014", VA = "0x888014")]
	public void Show()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x888390", Offset = "0x888390", VA = "0x888390")]
	public void Hide()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x88850C", Offset = "0x88850C", VA = "0x88850C")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x888724", Offset = "0x888724", VA = "0x888724")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x888380", Offset = "0x888380", VA = "0x888380")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x888A18", Offset = "0x888A18", VA = "0x888A18")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x888D94", Offset = "0x888D94", VA = "0x888D94")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x889144", Offset = "0x889144", VA = "0x889144")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x88923C", Offset = "0x88923C", VA = "0x88923C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x88940C", Offset = "0x88940C", VA = "0x88940C")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x8894A4", Offset = "0x8894A4", VA = "0x8894A4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x889680", Offset = "0x889680", VA = "0x889680")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x88987C", Offset = "0x88987C", VA = "0x88987C")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x889B74", Offset = "0x889B74", VA = "0x889B74")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x889C64", Offset = "0x889C64", VA = "0x889C64")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x889CF8", Offset = "0x889CF8", VA = "0x889CF8")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200007C")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x88A2E0", Offset = "0x88A2E0", VA = "0x88A2E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x88A384", Offset = "0x88A384", VA = "0x88A384")]
	private void Update()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x88A420", Offset = "0x88A420", VA = "0x88A420")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x88A458", Offset = "0x88A458", VA = "0x88A458")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200007D")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x200007E")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40002CD")]
		On,
		[Token(Token = "0x40002CE")]
		Off,
		[Token(Token = "0x40002CF")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000053")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x88A460", Offset = "0x88A460", VA = "0x88A460")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600025A")]
		[Address(RVA = "0x887FD4", Offset = "0x887FD4", VA = "0x887FD4")]
		set
		{
		}
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x88A468", Offset = "0x88A468", VA = "0x88A468")]
	private void Awake()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x88A4C0", Offset = "0x88A4C0", VA = "0x88A4C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x88A5F8", Offset = "0x88A5F8", VA = "0x88A5F8", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x88A614", Offset = "0x88A614", VA = "0x88A614", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x88A664", Offset = "0x88A664", VA = "0x88A664")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x88A804", Offset = "0x88A804", VA = "0x88A804")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x88A914", Offset = "0x88A914", VA = "0x88A914")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x88A998", Offset = "0x88A998", VA = "0x88A998")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x88AA58", Offset = "0x88AA58", VA = "0x88AA58")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x88AB00", Offset = "0x88AB00", VA = "0x88AB00")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x88ABEC", Offset = "0x88ABEC", VA = "0x88ABEC")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200007F")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40002D0")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x40002D1")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x40002D2")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("This should be a reference to the OVRCameraRig that is usually a child of the PlayerController.")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Collision layers to be used for the purposes of fading out the screen when the HMD is inside world geometry and adjusting the capsule height.")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Offset is added to camera's real world height, effectively treating it as though the player was taller/standing higher.")]
	public float HeightOffset;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Minimum height that the character capsule can shrink to.  To disable, set to capsule's height.")]
	public float MinimumHeight;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Maximum height that the character capsule can grow to.  To disable, set to capsule's height.")]
	public float MaximumHeight;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x88ABFC", Offset = "0x88ABFC", VA = "0x88ABFC")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x88AC04", Offset = "0x88AC04", VA = "0x88AC04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x88AC94", Offset = "0x88AC94", VA = "0x88AC94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x88ADB8", Offset = "0x88ADB8", VA = "0x88ADB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x88AEDC", Offset = "0x88AEDC", VA = "0x88AEDC")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x88B1FC", Offset = "0x88B1FC", VA = "0x88B1FC")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x88B45C", Offset = "0x88B45C", VA = "0x88B45C")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000080")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x88BBB4", Offset = "0x88BBB4", VA = "0x88BBB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x88BC60", Offset = "0x88BC60", VA = "0x88BC60")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000081")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000082")]
	public enum States
	{
		[Token(Token = "0x4000300")]
		Ready,
		[Token(Token = "0x4000301")]
		Aim,
		[Token(Token = "0x4000302")]
		CancelAim,
		[Token(Token = "0x4000303")]
		PreTeleport,
		[Token(Token = "0x4000304")]
		CancelTeleport,
		[Token(Token = "0x4000305")]
		Teleporting,
		[Token(Token = "0x4000306")]
		PostTeleport
	}

	[Token(Token = "0x2000083")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000308")]
		None,
		[Token(Token = "0x4000309")]
		Aim,
		[Token(Token = "0x400030A")]
		PreTeleport,
		[Token(Token = "0x400030B")]
		Teleport
	}

	[Token(Token = "0x2000084")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x400030D")]
		Point,
		[Token(Token = "0x400030E")]
		Sphere,
		[Token(Token = "0x400030F")]
		Capsule
	}

	[Token(Token = "0x2000085")]
	public class AimData
	{
		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x17000057")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60002A5")]
			[Address(RVA = "0x88D9A0", Offset = "0x88D9A0", VA = "0x88D9A0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60002A6")]
			[Address(RVA = "0x88D9A8", Offset = "0x88D9A8", VA = "0x88D9A8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x88D918", Offset = "0x88D918", VA = "0x88D918")]
		public AimData()
		{
		}

		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x88D9B0", Offset = "0x88D9B0", VA = "0x88D9B0")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000086")]
	[CompilerGenerated]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000058")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002AB")]
			[Address(RVA = "0x88DB18", Offset = "0x88DB18", VA = "0x88DB18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002AD")]
			[Address(RVA = "0x88DB60", Offset = "0x88DB60", VA = "0x88DB60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x88C66C", Offset = "0x88C66C", VA = "0x88C66C")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60002A9")]
		[Address(RVA = "0x88DA08", Offset = "0x88DA08", VA = "0x88DA08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x88DA0C", Offset = "0x88DA0C", VA = "0x88DA0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x88DB20", Offset = "0x88DB20", VA = "0x88DB20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000087")]
	[CompilerGenerated]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002B1")]
			[Address(RVA = "0x88DCC4", Offset = "0x88DCC4", VA = "0x88DCC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B3")]
			[Address(RVA = "0x88DD0C", Offset = "0x88DD0C", VA = "0x88DD0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x88CAF4", Offset = "0x88CAF4", VA = "0x88CAF4")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x88DB68", Offset = "0x88DB68", VA = "0x88DB68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x88DB6C", Offset = "0x88DB6C", VA = "0x88DB6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x88DCCC", Offset = "0x88DCCC", VA = "0x88DCCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000088")]
	[CompilerGenerated]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002B7")]
			[Address(RVA = "0x88DDC4", Offset = "0x88DDC4", VA = "0x88DDC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B9")]
			[Address(RVA = "0x88DE0C", Offset = "0x88DE0C", VA = "0x88DE0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x88CCC8", Offset = "0x88CCC8", VA = "0x88CCC8")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x88DD14", Offset = "0x88DD14", VA = "0x88DD14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x88DD18", Offset = "0x88DD18", VA = "0x88DD18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x88DDCC", Offset = "0x88DDCC", VA = "0x88DDCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000089")]
	[CompilerGenerated]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700005E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002BD")]
			[Address(RVA = "0x88DEFC", Offset = "0x88DEFC", VA = "0x88DEFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002BF")]
			[Address(RVA = "0x88DF44", Offset = "0x88DF44", VA = "0x88DF44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x88CE9C", Offset = "0x88CE9C", VA = "0x88CE9C")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x88DE14", Offset = "0x88DE14", VA = "0x88DE14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x88DE18", Offset = "0x88DE18", VA = "0x88DE18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x88DF04", Offset = "0x88DF04", VA = "0x88DF04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200008A")]
	[CompilerGenerated]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C3")]
			[Address(RVA = "0x88DFFC", Offset = "0x88DFFC", VA = "0x88DFFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C5")]
			[Address(RVA = "0x88E044", Offset = "0x88E044", VA = "0x88E044", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x88D070", Offset = "0x88D070", VA = "0x88D070")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x88DF4C", Offset = "0x88DF4C", VA = "0x88DF4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x88DF50", Offset = "0x88DF50", VA = "0x88DF50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x88E004", Offset = "0x88E004", VA = "0x88E004", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200008B")]
	[CompilerGenerated]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C9")]
			[Address(RVA = "0x88E130", Offset = "0x88E130", VA = "0x88E130", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002CB")]
			[Address(RVA = "0x88E178", Offset = "0x88E178", VA = "0x88E178", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x88D244", Offset = "0x88D244", VA = "0x88D244")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x88E04C", Offset = "0x88E04C", VA = "0x88E04C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x88E050", Offset = "0x88E050", VA = "0x88E050", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x88E138", Offset = "0x88E138", VA = "0x88E138", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200008C")]
	[CompilerGenerated]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002CF")]
			[Address(RVA = "0x88E280", Offset = "0x88E280", VA = "0x88E280", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D1")]
			[Address(RVA = "0x88E2C8", Offset = "0x88E2C8", VA = "0x88E2C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x88D418", Offset = "0x88D418", VA = "0x88D418")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x88E180", Offset = "0x88E180", VA = "0x88E180", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x88E184", Offset = "0x88E184", VA = "0x88E184", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x88E288", Offset = "0x88E288", VA = "0x88E288", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Allow linear movement prior to the teleport system being activated.")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[Tooltip("Allow linear movement while the teleport system is in the process of aiming for a teleport target.")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[Tooltip("Allow linear movement while the teleport system is in the process of configuring the landing orientation.")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[Tooltip("Allow linear movement after the teleport has occurred but before the system has returned to the ready state.")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Allow rotation prior to the teleport system being activated.")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[Tooltip("Allow rotation while the teleport system is in the process of aiming for a teleport target.")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[Tooltip("Allow rotation while the teleport system is in the process of configuring the landing orientation.")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[Tooltip("Allow rotation after the teleport has occurred but before the system has returned to the ready state.")]
	public bool EnableRotationDuringPostTeleport;

	[NonSerialized]
	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("This prefab will be instantiated as needed and updated to match the current aim target.")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("TeleportDestinationPrefab will be instantiated into this layer.")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("When aiming at possible destinations, the aim collision type determines which shape to use for collision tests.")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("Use the character collision radius/height/skinwidth for sphere/capsule collision tests.")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Radius of the sphere or capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
	public float AimCollisionRadius;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Tooltip("Height of the capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000054")]
	public States CurrentState
	{
		[Token(Token = "0x6000272")]
		[Address(RVA = "0x88BCB0", Offset = "0x88BCB0", VA = "0x88BCB0")]
		[CompilerGenerated]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000273")]
		[Address(RVA = "0x88BCB8", Offset = "0x88BCB8", VA = "0x88BCB8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000277")]
		[Address(RVA = "0x88BE88", Offset = "0x88BE88", VA = "0x88BE88")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000056")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000278")]
		[Address(RVA = "0x88BEAC", Offset = "0x88BEAC", VA = "0x88BEAC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000279")]
		[Address(RVA = "0x88BEB4", Offset = "0x88BEB4", VA = "0x88BEB4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0x88BCC0", Offset = "0x88BCC0", VA = "0x88BCC0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000275")]
		[Address(RVA = "0x88BD70", Offset = "0x88BD70", VA = "0x88BD70")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000283")]
		[Address(RVA = "0x88C534", Offset = "0x88C534", VA = "0x88C534")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000284")]
		[Address(RVA = "0x88C5D0", Offset = "0x88C5D0", VA = "0x88C5D0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000286")]
		[Address(RVA = "0x88C694", Offset = "0x88C694", VA = "0x88C694")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000287")]
		[Address(RVA = "0x88C730", Offset = "0x88C730", VA = "0x88C730")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000288")]
		[Address(RVA = "0x88C7CC", Offset = "0x88C7CC", VA = "0x88C7CC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000289")]
		[Address(RVA = "0x88C87C", Offset = "0x88C87C", VA = "0x88C87C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x600028B")]
		[Address(RVA = "0x88C948", Offset = "0x88C948", VA = "0x88C948")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600028C")]
		[Address(RVA = "0x88C9E4", Offset = "0x88C9E4", VA = "0x88C9E4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0x88CB1C", Offset = "0x88CB1C", VA = "0x88CB1C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600028F")]
		[Address(RVA = "0x88CBB8", Offset = "0x88CBB8", VA = "0x88CBB8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000291")]
		[Address(RVA = "0x88CCF0", Offset = "0x88CCF0", VA = "0x88CCF0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000292")]
		[Address(RVA = "0x88CD8C", Offset = "0x88CD8C", VA = "0x88CD8C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0x88CEC4", Offset = "0x88CEC4", VA = "0x88CEC4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000295")]
		[Address(RVA = "0x88CF60", Offset = "0x88CF60", VA = "0x88CF60")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000297")]
		[Address(RVA = "0x88D098", Offset = "0x88D098", VA = "0x88D098")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000298")]
		[Address(RVA = "0x88D134", Offset = "0x88D134", VA = "0x88D134")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600029A")]
		[Address(RVA = "0x88D26C", Offset = "0x88D26C", VA = "0x88D26C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600029B")]
		[Address(RVA = "0x88D308", Offset = "0x88D308", VA = "0x88D308")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600029D")]
		[Address(RVA = "0x88D440", Offset = "0x88D440", VA = "0x88D440")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600029E")]
		[Address(RVA = "0x88D4F0", Offset = "0x88D4F0", VA = "0x88D4F0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x88BC68", Offset = "0x88BC68", VA = "0x88BC68")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x88BC8C", Offset = "0x88BC8C", VA = "0x88BC8C")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x88BE20", Offset = "0x88BE20", VA = "0x88BE20")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x88BEBC", Offset = "0x88BEBC", VA = "0x88BEBC")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x88C184", Offset = "0x88C184", VA = "0x88C184")]
	[Conditional("DEBUG_TELEPORT_STATES")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x88C22C", Offset = "0x88C22C", VA = "0x88C22C")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x88C318", Offset = "0x88C318", VA = "0x88C318")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x88C354", Offset = "0x88C354", VA = "0x88C354")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x88C404", Offset = "0x88C404", VA = "0x88C404")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x88C434", Offset = "0x88C434", VA = "0x88C434")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x88C494", Offset = "0x88C494", VA = "0x88C494", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x88C52C", Offset = "0x88C52C", VA = "0x88C52C", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x88C4B8", Offset = "0x88C4B8", VA = "0x88C4B8")]
	[IteratorStateMachine(typeof(<ReadyStateCoroutine>d__52))]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x88C92C", Offset = "0x88C92C", VA = "0x88C92C")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x88CA80", Offset = "0x88CA80", VA = "0x88CA80")]
	[IteratorStateMachine(typeof(<AimStateCoroutine>d__64))]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x88CC54", Offset = "0x88CC54", VA = "0x88CC54")]
	[IteratorStateMachine(typeof(<CancelAimStateCoroutine>d__68))]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x88CE28", Offset = "0x88CE28", VA = "0x88CE28")]
	[IteratorStateMachine(typeof(<PreTeleportStateCoroutine>d__72))]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x88CFFC", Offset = "0x88CFFC", VA = "0x88CFFC")]
	[IteratorStateMachine(typeof(<CancelTeleportStateCoroutine>d__76))]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x88D1D0", Offset = "0x88D1D0", VA = "0x88D1D0")]
	[IteratorStateMachine(typeof(<TeleportingStateCoroutine>d__80))]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x88D3A4", Offset = "0x88D3A4", VA = "0x88D3A4")]
	[IteratorStateMachine(typeof(<PostTeleportStateCoroutine>d__84))]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x88D5A0", Offset = "0x88D5A0", VA = "0x88D5A0")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x88D6B4", Offset = "0x88D6B4", VA = "0x88D6B4")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x88D6E4", Offset = "0x88D6E4", VA = "0x88D6E4")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x88D820", Offset = "0x88D820", VA = "0x88D820")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x88D908", Offset = "0x88D908", VA = "0x88D908")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200008D")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x88AD1C", Offset = "0x88AD1C", VA = "0x88AD1C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x88AE40", Offset = "0x88AE40", VA = "0x88AE40")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x88E2D0", Offset = "0x88E2D0", VA = "0x88E2D0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x88E36C", Offset = "0x88E36C", VA = "0x88E36C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x88E408", Offset = "0x88E408", VA = "0x88E408")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x88E4E8", Offset = "0x88E4E8", VA = "0x88E4E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x88E4EC", Offset = "0x88E4EC", VA = "0x88E4EC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x88E560", Offset = "0x88E560", VA = "0x88E560")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x88E684", Offset = "0x88E684", VA = "0x88E684")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x88E8FC", Offset = "0x88E8FC", VA = "0x88E8FC")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x88EB1C", Offset = "0x88EB1C", VA = "0x88EB1C")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200008E")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x88EB3C", Offset = "0x88EB3C", VA = "0x88EB3C", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x88EBCC", Offset = "0x88EBCC", VA = "0x88EBCC", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60002DF")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x88EC9C", Offset = "0x88EC9C", VA = "0x88EC9C")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200008F")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum range for aiming.")]
	public float Range;

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x88ECAC", Offset = "0x88ECAC", VA = "0x88ECAC", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x88EE3C", Offset = "0x88EE3C", VA = "0x88EE3C")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000090")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum range for aiming.")]
	public float Range;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The MinimumElevation is relative to the AimPosition.")]
	public float MinimumElevation;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The Gravity is used in conjunction with AimVelocity and the aim direction to simulate a projectile.")]
	public float Gravity;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("The AimVelocity is the initial speed of the faked projectile.")]
	[Range(0.001f, 50f)]
	public float AimVelocity;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0.001f, 1f)]
	[Tooltip("The AimStep is the how much to subdivide the iteration.")]
	public float AimStep;

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x88EE4C", Offset = "0x88EE4C", VA = "0x88EE4C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x88F020", Offset = "0x88F020", VA = "0x88F020")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000091")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This prefab will be instantiated when the aim visual is awakened, and will be set active when the user is aiming, and deactivated when they are done aiming.")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x88F034", Offset = "0x88F034", VA = "0x88F034")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x88F160", Offset = "0x88F160", VA = "0x88F160")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x88F18C", Offset = "0x88F18C", VA = "0x88F18C")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x88F1B8", Offset = "0x88F1B8", VA = "0x88F1B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x88F25C", Offset = "0x88F25C", VA = "0x88F25C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x88F2B0", Offset = "0x88F2B0", VA = "0x88F2B0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x88F300", Offset = "0x88F300", VA = "0x88F300")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000092")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("If the target handler provides a target position, this transform will be moved to that position and it's game object enabled. A target position being provided does not mean the position is valid, only that the aim handler found something to test as a destination.")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This transform will be rotated to match the rotation of the aiming target. Simple teleport destinations should assign this to the object containing this component. More complex teleport destinations might assign this to a sub-object that is used to indicate the landing orientation independently from the rest of the destination indicator, such as when world space effects are required. This will typically be a child of the PositionIndicator.")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("After the player teleports, the character controller will have it's rotation set to this value. It is different from the OrientationIndicator transform.rotation in order to support both head-relative and forward-facing teleport modes (See TeleportOrientationHandlerThumbstick.cs).")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000066")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x88F3FC", Offset = "0x88F3FC", VA = "0x88F3FC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x88F404", Offset = "0x88F404", VA = "0x88F404")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x88F58C", Offset = "0x88F58C", VA = "0x88F58C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x88F63C", Offset = "0x88F63C", VA = "0x88F63C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x88F410", Offset = "0x88F410", VA = "0x88F410")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x88F494", Offset = "0x88F494", VA = "0x88F494")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x88F558", Offset = "0x88F558", VA = "0x88F558")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x88F588", Offset = "0x88F588", VA = "0x88F588")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x88C330", Offset = "0x88C330", VA = "0x88C330")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x88F6EC", Offset = "0x88F6EC", VA = "0x88F6EC")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x88F708", Offset = "0x88F708", VA = "0x88F708", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000093")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000094")]
	[CompilerGenerated]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000067")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000303")]
			[Address(RVA = "0x88FCD0", Offset = "0x88FCD0", VA = "0x88FCD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000068")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000305")]
			[Address(RVA = "0x88FD18", Offset = "0x88FD18", VA = "0x88FD18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0x88FB3C", Offset = "0x88FB3C", VA = "0x88FB3C")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0x88FC40", Offset = "0x88FC40", VA = "0x88FC40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0x88FC44", Offset = "0x88FC44", VA = "0x88FC44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x88FCD8", Offset = "0x88FCD8", VA = "0x88FCD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000095")]
	[CompilerGenerated]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000069")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000309")]
			[Address(RVA = "0x88FDBC", Offset = "0x88FDBC", VA = "0x88FDBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600030B")]
			[Address(RVA = "0x88FE04", Offset = "0x88FE04", VA = "0x88FE04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000306")]
		[Address(RVA = "0x88FBD8", Offset = "0x88FBD8", VA = "0x88FBD8")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000307")]
		[Address(RVA = "0x88FD20", Offset = "0x88FD20", VA = "0x88FD20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000308")]
		[Address(RVA = "0x88FD24", Offset = "0x88FD24", VA = "0x88FD24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600030A")]
		[Address(RVA = "0x88FDC4", Offset = "0x88FDC4", VA = "0x88FDC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x88F8FC", Offset = "0x88F8FC", VA = "0x88F8FC")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x88F9D0", Offset = "0x88F9D0", VA = "0x88F9D0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x88FA1C", Offset = "0x88FA1C", VA = "0x88FA1C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x88FAC8", Offset = "0x88FAC8", VA = "0x88FAC8")]
	[IteratorStateMachine(typeof(<TeleportReadyCoroutine>d__5))]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x88FB64", Offset = "0x88FB64", VA = "0x88FB64")]
	[IteratorStateMachine(typeof(<TeleportAimCoroutine>d__6))]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002FC")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60002FD")]
	public abstract void GetAimData(out Ray aimRay);
}
[Token(Token = "0x2000096")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("The button used to begin aiming for a teleport.")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("The button used to trigger the teleport after aiming. It can be the same button as the AimButton, however you cannot abort a teleport if it is.")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("When true, the system will not use the PreTeleport intention which will allow a teleport to occur on a button downpress. When false, the button downpress will trigger the PreTeleport intention and the Teleport intention when the button is released.")]
	public bool FastTeleport;

	[Token(Token = "0x1700006B")]
	public Transform Pointer
	{
		[Token(Token = "0x600030C")]
		[Address(RVA = "0x88FE0C", Offset = "0x88FE0C", VA = "0x88FE0C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600030D")]
		[Address(RVA = "0x88FE14", Offset = "0x88FE14", VA = "0x88FE14")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x88FE1C", Offset = "0x88FE1C", VA = "0x88FE1C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x88FF48", Offset = "0x88FF48", VA = "0x88FF48", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x88FFFC", Offset = "0x88FFFC", VA = "0x88FFFC")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000097")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000098")]
	public enum InputModes
	{
		[Token(Token = "0x4000360")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000361")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000362")]
		ThumbstickTeleport,
		[Token(Token = "0x4000363")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000099")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000365")]
		A,
		[Token(Token = "0x4000366")]
		B,
		[Token(Token = "0x4000367")]
		LeftTrigger,
		[Token(Token = "0x4000368")]
		LeftThumbstick,
		[Token(Token = "0x4000369")]
		RightTrigger,
		[Token(Token = "0x400036A")]
		RightThumbstick,
		[Token(Token = "0x400036B")]
		X,
		[Token(Token = "0x400036C")]
		Y
	}

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("CapacitiveButtonForAimAndTeleport=Activate aiming via cap touch detection, press the same button to teleport.\nSeparateButtonsForAimAndTeleport=Use one button to begin aiming, and another to trigger the teleport.\nThumbstickTeleport=Push a thumbstick to begin aiming, release to teleport.")]
	public InputModes InputMode;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Select the controller to be used for aiming. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("Select the button to use for triggering aim and teleport when InputMode==CapacitiveButtonForAimAndTeleport")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Tooltip("The thumbstick magnitude required to trigger aiming and teleports when InputMode==InputModes.ThumbstickTeleport")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x890000", Offset = "0x890000", VA = "0x890000")]
	private void Start()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x890004", Offset = "0x890004", VA = "0x890004", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x890438", Offset = "0x890438", VA = "0x890438", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x8904F4", Offset = "0x8904F4", VA = "0x8904F4")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200009A")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x200009B")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000371")]
		HeadRelative,
		[Token(Token = "0x4000372")]
		ForwardFacing
	}

	[Token(Token = "0x200009C")]
	[CompilerGenerated]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700006C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000321")]
			[Address(RVA = "0x8909A4", Offset = "0x8909A4", VA = "0x8909A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000323")]
			[Address(RVA = "0x8909EC", Offset = "0x8909EC", VA = "0x8909EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0x8907B4", Offset = "0x8907B4", VA = "0x8907B4")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0x8908F4", Offset = "0x8908F4", VA = "0x8908F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0x8908F8", Offset = "0x8908F8", VA = "0x8908F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0x8909AC", Offset = "0x8909AC", VA = "0x8909AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x8905E4", Offset = "0x8905E4", VA = "0x8905E4")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x8906CC", Offset = "0x8906CC", VA = "0x8906CC")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x8906D4", Offset = "0x8906D4", VA = "0x8906D4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x89070C", Offset = "0x89070C", VA = "0x89070C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x890740", Offset = "0x890740", VA = "0x890740")]
	[IteratorStateMachine(typeof(<UpdateOrientationCoroutine>d__7))]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600031A")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x600031B")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x8907DC", Offset = "0x8907DC", VA = "0x8907DC")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x200009D")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000324")]
	[Address(RVA = "0x8909F4", Offset = "0x8909F4", VA = "0x8909F4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x8909F8", Offset = "0x8909F8", VA = "0x8909F8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x890AA0", Offset = "0x890AA0", VA = "0x890AA0")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200009E")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Should the destination orientation be updated during the aim state in addition to the PreTeleport state?")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("How far from the destination must the HMD be pointing before using it for orientation")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("How far from the destination must the HMD be pointing before rejecting the teleport")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x890AA4", Offset = "0x890AA4", VA = "0x890AA4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x890AF4", Offset = "0x890AF4", VA = "0x890AF4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x890FB8", Offset = "0x890FB8", VA = "0x890FB8")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200009F")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Which thumbstick is to be used for adjusting the teleport orientation. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("The orientation will only change if the thumbstick magnitude is above this value. This will usually be larger than the TeleportInputHandlerTouch.ThumbstickTeleportThreshold.")]
	public float RotateStickThreshold;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x890FBC", Offset = "0x890FBC", VA = "0x890FBC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x890FF0", Offset = "0x890FF0", VA = "0x890FF0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x8914EC", Offset = "0x8914EC", VA = "0x8914EC")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000A0")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x8914FC", Offset = "0x8914FC", VA = "0x8914FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x891500", Offset = "0x891500", VA = "0x891500")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x891508", Offset = "0x891508", VA = "0x891508")]
	private void Update()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x8915F4", Offset = "0x8915F4", VA = "0x8915F4")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x891610", Offset = "0x891610", VA = "0x891610")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000A1")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700006E")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000332")]
		[Address(RVA = "0x891628", Offset = "0x891628", VA = "0x891628")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000333")]
		[Address(RVA = "0x891630", Offset = "0x891630", VA = "0x891630")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x88EB64", Offset = "0x88EB64", VA = "0x88EB64", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x88EC74", Offset = "0x88EC74", VA = "0x88EC74", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x891638", Offset = "0x891638", VA = "0x891638")]
	[Conditional("DEBUG_TELEPORT_EVENT_HANDLERS")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x88F2A4", Offset = "0x88F2A4", VA = "0x88F2A4", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x88F2F8", Offset = "0x88F2F8", VA = "0x88F2F8", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x88ECA4", Offset = "0x88ECA4", VA = "0x88ECA4")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000A2")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20000A3")]
	[CompilerGenerated]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700006F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000345")]
			[Address(RVA = "0x891D28", Offset = "0x891D28", VA = "0x891D28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000347")]
			[Address(RVA = "0x891D70", Offset = "0x891D70", VA = "0x891D70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0x8918E0", Offset = "0x8918E0", VA = "0x8918E0")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0x891A5C", Offset = "0x891A5C", VA = "0x891A5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0x891A60", Offset = "0x891A60", VA = "0x891A60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0x891D30", Offset = "0x891D30", VA = "0x891D30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("This bitmask controls which game object layers will be included in the targeting collision tests.")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x400038C")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x891708", Offset = "0x891708", VA = "0x891708")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x891820", Offset = "0x891820", VA = "0x891820", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x891848", Offset = "0x891848", VA = "0x891848", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x89186C", Offset = "0x89186C", VA = "0x89186C")]
	[IteratorStateMachine(typeof(<TargetAimCoroutine>d__7))]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x891908", Offset = "0x891908", VA = "0x891908", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x600033F")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x891920", Offset = "0x891920", VA = "0x891920", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}
}
[Token(Token = "0x20000A4")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x891D78", Offset = "0x891D78", VA = "0x891D78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x891DE0", Offset = "0x891DE0", VA = "0x891DE0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x891F48", Offset = "0x891F48", VA = "0x891F48", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x892034", Offset = "0x892034", VA = "0x892034")]
	[Conditional("SHOW_PATH_RESULT")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x892038", Offset = "0x892038", VA = "0x892038")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000A5")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("When checking line of sight to the destination, add this value to the vertical offset for targeting collision checks.")]
	public float LOSOffset;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Teleport logic will only work with TeleportPoint components that exist in the layers specified by this mask.")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x892044", Offset = "0x892044", VA = "0x892044", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x89223C", Offset = "0x89223C", VA = "0x89223C")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000A6")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600034F")]
	[Address(RVA = "0x892248", Offset = "0x892248", VA = "0x892248", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x8923B0", Offset = "0x8923B0", VA = "0x8923B0")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000A7")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000351")]
	[Address(RVA = "0x8923B4", Offset = "0x8923B4", VA = "0x8923B4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x892438", Offset = "0x892438", VA = "0x892438", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000353")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x8924B8", Offset = "0x8924B8", VA = "0x8924B8")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000A8")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20000A9")]
	[CompilerGenerated]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000071")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600035B")]
			[Address(RVA = "0x89281C", Offset = "0x89281C", VA = "0x89281C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600035D")]
			[Address(RVA = "0x892864", Offset = "0x892864", VA = "0x892864", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x892554", Offset = "0x892554", VA = "0x892554")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x892718", Offset = "0x892718", VA = "0x892718", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0x89271C", Offset = "0x89271C", VA = "0x89271C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0x892824", Offset = "0x892824", VA = "0x892824", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("How long the transition takes. Usually this is greater than Teleport Delay.")]
	[Range(0.01f, 2f)]
	public float TransitionDuration;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("At what percentage of the elapsed transition time does the teleport occur?")]
	[Range(0f, 1f)]
	public float TeleportDelay;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Fade to black over the duration of the transition")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x8924C0", Offset = "0x8924C0", VA = "0x8924C0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x8924E0", Offset = "0x8924E0", VA = "0x8924E0")]
	[IteratorStateMachine(typeof(<BlinkCoroutine>d__4))]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x89257C", Offset = "0x89257C", VA = "0x89257C")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000AA")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x600035E")]
	[Address(RVA = "0x89286C", Offset = "0x89286C", VA = "0x89286C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x892884", Offset = "0x892884", VA = "0x892884")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000AB")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20000AC")]
	[CompilerGenerated]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000073")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000366")]
			[Address(RVA = "0x892AA8", Offset = "0x892AA8", VA = "0x892AA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000368")]
			[Address(RVA = "0x892AF0", Offset = "0x892AF0", VA = "0x892AF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x892920", Offset = "0x892920", VA = "0x892920")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0x892990", Offset = "0x892990", VA = "0x892990", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0x892994", Offset = "0x892994", VA = "0x892994", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000367")]
		[Address(RVA = "0x892AB0", Offset = "0x892AB0", VA = "0x892AB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("How much time the warp transition takes to complete.")]
	[Range(0.01f, 1f)]
	public float TransitionDuration;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x89288C", Offset = "0x89288C", VA = "0x89288C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x8928AC", Offset = "0x8928AC", VA = "0x8928AC")]
	[IteratorStateMachine(typeof(<DoWarp>d__3))]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x892948", Offset = "0x892948", VA = "0x892948")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000AD")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x40003A4")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x40003A5")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x892AF8", Offset = "0x892AF8", VA = "0x892AF8")]
	private void Start()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x893118", Offset = "0x893118", VA = "0x893118")]
	private void Update()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x89336C", Offset = "0x89336C", VA = "0x89336C")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x8934D0", Offset = "0x8934D0", VA = "0x8934D0")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x893638", Offset = "0x893638", VA = "0x893638")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x8937BC", Offset = "0x8937BC", VA = "0x8937BC")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x20000AE")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x40003AE")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x8937CC", Offset = "0x8937CC", VA = "0x8937CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x893824", Offset = "0x893824", VA = "0x893824")]
	private void Start()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x893828", Offset = "0x893828", VA = "0x893828")]
	private void Update()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x892EC0", Offset = "0x892EC0", VA = "0x892EC0")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x89382C", Offset = "0x89382C", VA = "0x89382C")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x893A48", Offset = "0x893A48", VA = "0x893A48")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x20000AF")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x893A50", Offset = "0x893A50", VA = "0x893A50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x893F58", Offset = "0x893F58", VA = "0x893F58")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x894004", Offset = "0x894004", VA = "0x894004")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x894294", Offset = "0x894294", VA = "0x894294")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x894368", Offset = "0x894368", VA = "0x894368")]
	private void Update()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x894438", Offset = "0x894438", VA = "0x894438")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x8944A0", Offset = "0x8944A0", VA = "0x8944A0")]
	public DebugUISample()
	{
	}
}
[Token(Token = "0x20000B0")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x6000380")]
	[Address(RVA = "0x894648", Offset = "0x894648", VA = "0x894648")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x20000B1")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x894650", Offset = "0x894650", VA = "0x894650")]
	private void Start()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x8946E0", Offset = "0x8946E0", VA = "0x8946E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x8947B0", Offset = "0x8947B0", VA = "0x8947B0")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x89480C", Offset = "0x89480C", VA = "0x89480C")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x20000B2")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x6000385")]
	[Address(RVA = "0x894814", Offset = "0x894814", VA = "0x894814")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x20000B3")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20000B4")]
	[CompilerGenerated]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000075")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600038D")]
			[Address(RVA = "0x894C24", Offset = "0x894C24", VA = "0x894C24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600038F")]
			[Address(RVA = "0x894C6C", Offset = "0x894C6C", VA = "0x894C6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x894AC0", Offset = "0x894AC0", VA = "0x894AC0")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x894AF0", Offset = "0x894AF0", VA = "0x894AF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x894AF4", Offset = "0x894AF4", VA = "0x894AF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0x894C2C", Offset = "0x894C2C", VA = "0x894C2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x89481C", Offset = "0x89481C", VA = "0x89481C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x894928", Offset = "0x894928", VA = "0x894928")]
	private void Update()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x8948B4", Offset = "0x8948B4", VA = "0x8948B4")]
	[IteratorStateMachine(typeof(<GetCenterEye>d__6))]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x894AE8", Offset = "0x894AE8", VA = "0x894AE8")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000B5")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(4f, 32f)]
	public int SubdivisionsU;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(4f, 32f)]
	public int SubdivisionsV;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x894C74", Offset = "0x894C74", VA = "0x894C74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x89661C", Offset = "0x89661C", VA = "0x89661C")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000B6")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000077")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000392")]
		[Address(RVA = "0x896624", Offset = "0x896624", VA = "0x896624")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x896674", Offset = "0x896674", VA = "0x896674")]
	public void Start()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x896A6C", Offset = "0x896A6C", VA = "0x896A6C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x896B3C", Offset = "0x896B3C", VA = "0x896B3C")]
	[Conditional("DEBUG_LOCOMOTION_PANEL")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000396")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000398")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000399")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x600039A")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x600039B")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x600039C")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x600039D")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x896B94", Offset = "0x896B94", VA = "0x896B94")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x896BD4", Offset = "0x896BD4", VA = "0x896BD4")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x896C40", Offset = "0x896C40", VA = "0x896C40")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x896D64", Offset = "0x896D64", VA = "0x896D64")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x896E34", Offset = "0x896E34", VA = "0x896E34")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x896968", Offset = "0x896968", VA = "0x896968")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x896EF8", Offset = "0x896EF8", VA = "0x896EF8")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x896F44", Offset = "0x896F44", VA = "0x896F44")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x897038", Offset = "0x897038", VA = "0x897038")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000B7")]
[RequireComponent(typeof(Canvas))]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20000B8")]
	public enum DrawMode
	{
		[Token(Token = "0x40003DD")]
		Opaque,
		[Token(Token = "0x40003DE")]
		OpaqueWithClip,
		[Token(Token = "0x40003DF")]
		TransparentDefaultAlpha,
		[Token(Token = "0x40003E0")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private Shader _transparentShader;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private Shader _opaqueShader;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000078")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x89867C", Offset = "0x89867C", VA = "0x89867C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x898700", Offset = "0x898700", VA = "0x898700")]
		set
		{
		}
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x897040", Offset = "0x897040", VA = "0x897040")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x897D04", Offset = "0x897D04", VA = "0x897D04")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x897D78", Offset = "0x897D78", VA = "0x897D78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x897E48", Offset = "0x897E48", VA = "0x897E48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x897F18", Offset = "0x897F18", VA = "0x897F18", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x89811C", Offset = "0x89811C", VA = "0x89811C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x8987BC", Offset = "0x8987BC", VA = "0x8987BC")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000B9")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x898878", Offset = "0x898878", VA = "0x898878")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x898BD0", Offset = "0x898BD0", VA = "0x898BD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x898D64", Offset = "0x898D64", VA = "0x898D64")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x898D6C", Offset = "0x898D6C", VA = "0x898D6C")]
	public void Release()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x898D54", Offset = "0x898D54", VA = "0x898D54")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x898D74", Offset = "0x898D74", VA = "0x898D74")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x20000BA")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x20000BB")]
	[CompilerGenerated]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C1")]
			[Address(RVA = "0x8994BC", Offset = "0x8994BC", VA = "0x8994BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C3")]
			[Address(RVA = "0x899504", Offset = "0x899504", VA = "0x899504", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x899360", Offset = "0x899360", VA = "0x899360")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x8993B8", Offset = "0x8993B8", VA = "0x8993B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x8993BC", Offset = "0x8993BC", VA = "0x8993BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x8994C4", Offset = "0x8994C4", VA = "0x8994C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000BC")]
	[CompilerGenerated]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C7")]
			[Address(RVA = "0x899688", Offset = "0x899688", VA = "0x899688", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C9")]
			[Address(RVA = "0x8996D0", Offset = "0x8996D0", VA = "0x8996D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x899388", Offset = "0x899388", VA = "0x899388")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x89950C", Offset = "0x89950C", VA = "0x89950C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x899510", Offset = "0x899510", VA = "0x899510", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x899690", Offset = "0x899690", VA = "0x899690", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x898D7C", Offset = "0x898D7C", VA = "0x898D7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x89905C", Offset = "0x89905C", VA = "0x89905C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x8990AC", Offset = "0x8990AC", VA = "0x8990AC")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x899224", Offset = "0x899224", VA = "0x899224")]
	public void Release()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x8992C8", Offset = "0x8992C8", VA = "0x8992C8")]
	[IteratorStateMachine(typeof(<FadeCameraClearColor>d__8))]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x899164", Offset = "0x899164", VA = "0x899164")]
	[IteratorStateMachine(typeof(<FadeSphere>d__9))]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x8993B0", Offset = "0x8993B0", VA = "0x8993B0")]
	public BrushController()
	{
	}
}
[Token(Token = "0x20000BD")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x8996D8", Offset = "0x8996D8", VA = "0x8996D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x89972C", Offset = "0x89972C", VA = "0x89972C")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x20000BE")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x899734", Offset = "0x899734", VA = "0x899734")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x899908", Offset = "0x899908", VA = "0x899908")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x899998", Offset = "0x899998", VA = "0x899998")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x8999F4", Offset = "0x8999F4", VA = "0x8999F4")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x20000BF")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x20000C0")]
	[CompilerGenerated]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x1700007D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003DC")]
			[Address(RVA = "0x89ABCC", Offset = "0x89ABCC", VA = "0x89ABCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003DE")]
			[Address(RVA = "0x89AC14", Offset = "0x89AC14", VA = "0x89AC14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x89A934", Offset = "0x89A934", VA = "0x89A934")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x89A9FC", Offset = "0x89A9FC", VA = "0x89A9FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x89AA00", Offset = "0x89AA00", VA = "0x89AA00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x89ABD4", Offset = "0x89ABD4", VA = "0x89ABD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x8999FC", Offset = "0x8999FC", VA = "0x8999FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x899CE4", Offset = "0x899CE4", VA = "0x899CE4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x899FD0", Offset = "0x899FD0", VA = "0x899FD0")]
	private void FindHands()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x89A2F8", Offset = "0x89A2F8", VA = "0x89A2F8")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x89A5D0", Offset = "0x89A5D0", VA = "0x89A5D0")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x89A6B8", Offset = "0x89A6B8", VA = "0x89A6B8")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x89A850", Offset = "0x89A850", VA = "0x89A850")]
	public void Release()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x89A7A0", Offset = "0x89A7A0", VA = "0x89A7A0")]
	[IteratorStateMachine(typeof(<FadeLighting>d__17))]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x89A95C", Offset = "0x89A95C", VA = "0x89A95C")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x20000C1")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x20000C2")]
	public enum ManipulationType
	{
		[Token(Token = "0x4000415")]
		Default,
		[Token(Token = "0x4000416")]
		ForcedHand,
		[Token(Token = "0x4000417")]
		DollyHand,
		[Token(Token = "0x4000418")]
		DollyAttached,
		[Token(Token = "0x4000419")]
		HorizontalScaled,
		[Token(Token = "0x400041A")]
		VerticalScaled,
		[Token(Token = "0x400041B")]
		Menu
	}

	[Token(Token = "0x20000C3")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x20000C4")]
	public delegate void ReleasedObject();

	[Token(Token = "0x20000C5")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TextArea]
	public string ObjectName;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[TextArea]
	public string ObjectInstructions;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x89AC1C", Offset = "0x89AC1C", VA = "0x89AC1C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x89AC7C", Offset = "0x89AC7C", VA = "0x89AC7C")]
	public void Release()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x89AC98", Offset = "0x89AC98", VA = "0x89AC98")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x89ACB4", Offset = "0x89ACB4", VA = "0x89ACB4")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x20000C6")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The segments around the tip of a finger")]
	public int radialDivisions;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The fade range (finger width is 2x this)")]
	public float borderSize;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Along the fingers, each knuckle scales down by this amount.  Default is zero for uniform width along entire finger.")]
	public float fingerTaper;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Shorten the last bone of each finger; need this to account for bone structure (end bone is at finger tip instead of center). Default is 1.")]
	public float fingerTipLength;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Move the base of the 4 main fingers towards the tips, to avoid a visible mesh crack between finger webbing. Default is 0.")]
	public float webOffset;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x89AF48", Offset = "0x89AF48", VA = "0x89AF48")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x89B1A8", Offset = "0x89B1A8", VA = "0x89B1A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x89B370", Offset = "0x89B370", VA = "0x89B370")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x89B9C4", Offset = "0x89B9C4", VA = "0x89B9C4")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x89BF5C", Offset = "0x89BF5C", VA = "0x89BF5C")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x89E264", Offset = "0x89E264", VA = "0x89E264")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x89E5D8", Offset = "0x89E5D8", VA = "0x89E5D8")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x20000C7")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x89E5FC", Offset = "0x89E5FC", VA = "0x89E5FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x89E964", Offset = "0x89E964", VA = "0x89E964")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x89E698", Offset = "0x89E698", VA = "0x89E698")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x89EDCC", Offset = "0x89EDCC", VA = "0x89EDCC")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x89F33C", Offset = "0x89F33C", VA = "0x89F33C")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x20000C8")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x20000C9")]
	[CompilerGenerated]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x1700007F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600040A")]
			[Address(RVA = "0x8A1BC8", Offset = "0x8A1BC8", VA = "0x8A1BC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600040C")]
			[Address(RVA = "0x8A1C10", Offset = "0x8A1C10", VA = "0x8A1C10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x8A1508", Offset = "0x8A1508", VA = "0x8A1508")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x8A18F0", Offset = "0x8A18F0", VA = "0x8A18F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x8A18F4", Offset = "0x8A18F4", VA = "0x8A18F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x8A1BD0", Offset = "0x8A1BD0", VA = "0x8A1BD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x89F34C", Offset = "0x89F34C", VA = "0x89F34C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x89F548", Offset = "0x89F548", VA = "0x89F548")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x8A0474", Offset = "0x8A0474", VA = "0x8A0474")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x8A120C", Offset = "0x8A120C", VA = "0x8A120C")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x89F4D4", Offset = "0x89F4D4", VA = "0x89F4D4")]
	[IteratorStateMachine(typeof(<StartDemo>d__23))]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x89F798", Offset = "0x89F798", VA = "0x89F798")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x8A076C", Offset = "0x8A076C", VA = "0x8A076C")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x8A1530", Offset = "0x8A1530", VA = "0x8A1530")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x8A15E4", Offset = "0x8A15E4", VA = "0x8A15E4")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x8A1614", Offset = "0x8A1614", VA = "0x8A1614")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x8A13EC", Offset = "0x8A13EC", VA = "0x8A13EC")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x8A1704", Offset = "0x8A1704", VA = "0x8A1704")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x20000CA")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x8A1C18", Offset = "0x8A1C18", VA = "0x8A1C18")]
	private void Start()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x8A1D84", Offset = "0x8A1D84", VA = "0x8A1D84")]
	private void Update()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x8A1E38", Offset = "0x8A1E38", VA = "0x8A1E38")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x20000CB")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x20000CC")]
	public enum BrushState
	{
		[Token(Token = "0x4000458")]
		Idle,
		[Token(Token = "0x4000459")]
		Inking
	}

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x8A1E40", Offset = "0x8A1E40", VA = "0x8A1E40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x8A1E48", Offset = "0x8A1E48", VA = "0x8A1E48")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x8A20F8", Offset = "0x8A20F8", VA = "0x8A20F8")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x8A232C", Offset = "0x8A232C", VA = "0x8A232C")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x8A256C", Offset = "0x8A256C", VA = "0x8A256C")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x8A2010", Offset = "0x8A2010", VA = "0x8A2010")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x8A263C", Offset = "0x8A263C", VA = "0x8A263C")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x20000CD")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x8A26D8", Offset = "0x8A26D8", VA = "0x8A26D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x8A2844", Offset = "0x8A2844", VA = "0x8A2844")]
	private void Update()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x8A2A2C", Offset = "0x8A2A2C", VA = "0x8A2A2C")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x20000CE")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x8A2A34", Offset = "0x8A2A34", VA = "0x8A2A34")]
	private void Start()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x8A2C1C", Offset = "0x8A2C1C", VA = "0x8A2C1C")]
	private void Update()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x8A2DBC", Offset = "0x8A2DBC", VA = "0x8A2DBC")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x20000CF")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x20000D0")]
	[CompilerGenerated]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000081")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600042F")]
			[Address(RVA = "0x8A3A4C", Offset = "0x8A3A4C", VA = "0x8A3A4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000431")]
			[Address(RVA = "0x8A3A94", Offset = "0x8A3A94", VA = "0x8A3A94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x8A3774", Offset = "0x8A3774", VA = "0x8A3774")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x8A38D8", Offset = "0x8A38D8", VA = "0x8A38D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x8A38DC", Offset = "0x8A38DC", VA = "0x8A38DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x8A3A54", Offset = "0x8A3A54", VA = "0x8A3A54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D1")]
	[CompilerGenerated]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000083")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000435")]
			[Address(RVA = "0x8A3C24", Offset = "0x8A3C24", VA = "0x8A3C24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000437")]
			[Address(RVA = "0x8A3C6C", Offset = "0x8A3C6C", VA = "0x8A3C6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x8A379C", Offset = "0x8A379C", VA = "0x8A379C")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x8A3A9C", Offset = "0x8A3A9C", VA = "0x8A3A9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0x8A3AA0", Offset = "0x8A3AA0", VA = "0x8A3AA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x8A3C2C", Offset = "0x8A3C2C", VA = "0x8A3C2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x8A2DC4", Offset = "0x8A2DC4", VA = "0x8A2DC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x8A30F8", Offset = "0x8A30F8", VA = "0x8A30F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x8A3498", Offset = "0x8A3498", VA = "0x8A3498")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x8A360C", Offset = "0x8A360C", VA = "0x8A360C")]
	public void Release()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x8A3588", Offset = "0x8A3588", VA = "0x8A3588")]
	[IteratorStateMachine(typeof(<FadeToCurrentStyle>d__19))]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x8A36F0", Offset = "0x8A36F0", VA = "0x8A36F0")]
	[IteratorStateMachine(typeof(<FadeToDefaultPassthrough>d__20))]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x8A37C4", Offset = "0x8A37C4", VA = "0x8A37C4")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x8A37E4", Offset = "0x8A37E4", VA = "0x8A37E4")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x8A3804", Offset = "0x8A3804", VA = "0x8A3804")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x8A3824", Offset = "0x8A3824", VA = "0x8A3824")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x8A3090", Offset = "0x8A3090", VA = "0x8A3090")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x8A3858", Offset = "0x8A3858", VA = "0x8A3858")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x8A3864", Offset = "0x8A3864", VA = "0x8A3864")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x8A3110", Offset = "0x8A3110", VA = "0x8A3110")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x8A3870", Offset = "0x8A3870", VA = "0x8A3870")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x20000D2")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x8A3C74", Offset = "0x8A3C74", VA = "0x8A3C74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x8A3D28", Offset = "0x8A3D28", VA = "0x8A3D28")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x20000D3")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x8A3D30", Offset = "0x8A3D30", VA = "0x8A3D30")]
	private void Awake()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x8A3D9C", Offset = "0x8A3D9C", VA = "0x8A3D9C")]
	private void Update()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x8A4090", Offset = "0x8A4090", VA = "0x8A4090")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x20000D4")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x8A4098", Offset = "0x8A4098", VA = "0x8A4098")]
	private void Update()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x8A44EC", Offset = "0x8A44EC", VA = "0x8A44EC")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x20000D5")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x8A44F4", Offset = "0x8A44F4", VA = "0x8A44F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x8A475C", Offset = "0x8A475C", VA = "0x8A475C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x8A47A8", Offset = "0x8A47A8", VA = "0x8A47A8")]
	public void Release()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x8A47E8", Offset = "0x8A47E8", VA = "0x8A47E8")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x20000D6")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong anchorHandle_;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Canvas canvas_;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform pivot_;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject anchorMenu_;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isSelected_;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isHovered_;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI anchorName_;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject saveIcon_;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image labelImage_;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color labelBaseColor_;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Color labelHighlightColor_;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color labelSelectedColor_;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AnchorUIManager uiManager_;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private MeshRenderer[] renderers_;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int menuIndex_;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Button selectedButton_;

	[Token(Token = "0x17000085")]
	public ulong anchorHandle
	{
		[Token(Token = "0x6000443")]
		[Address(RVA = "0x8A47F0", Offset = "0x8A47F0", VA = "0x8A47F0")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x8A47F8", Offset = "0x8A47F8", VA = "0x8A47F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x8A48E0", Offset = "0x8A48E0", VA = "0x8A48E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x8A4B40", Offset = "0x8A4B40", VA = "0x8A4B40")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x8A4BA4", Offset = "0x8A4BA4", VA = "0x8A4BA4")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x8A4C04", Offset = "0x8A4C04", VA = "0x8A4C04")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x8A4C64", Offset = "0x8A4C64", VA = "0x8A4C64")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x8A4D80", Offset = "0x8A4D80", VA = "0x8A4D80")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x8A4E88", Offset = "0x8A4E88", VA = "0x8A4E88")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x8A4FB0", Offset = "0x8A4FB0", VA = "0x8A4FB0")]
	public void SetAnchorHandle(ulong handle)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x8A5040", Offset = "0x8A5040", VA = "0x8A5040")]
	public void ShowSaveIcon()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x8A4918", Offset = "0x8A4918", VA = "0x8A4918")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x8A4A4C", Offset = "0x8A4A4C", VA = "0x8A4A4C")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x8A5060", Offset = "0x8A5060", VA = "0x8A5060")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x8A5160", Offset = "0x8A5160", VA = "0x8A5160")]
	public Anchor()
	{
	}
}
[Token(Token = "0x20000D7")]
public class AnchorHelpers
{
	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera camera;

	[Token(Token = "0x17000086")]
	private static Camera MainCamera
	{
		[Token(Token = "0x6000452")]
		[Address(RVA = "0x8A5168", Offset = "0x8A5168", VA = "0x8A5168")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x8A5218", Offset = "0x8A5218", VA = "0x8A5218")]
	public static OVRPose getTransformUnityWorldFromDevice()
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000454")]
	public static T ByteArrayToStruct<T>(byte[] bytes) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x8A5264", Offset = "0x8A5264", VA = "0x8A5264")]
	public static string UuidToString(byte[] encodedMessage)
	{
		return null;
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x8A54E4", Offset = "0x8A54E4", VA = "0x8A54E4")]
	public static byte[] StringToUuid(string str)
	{
		return null;
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x8A5648", Offset = "0x8A5648", VA = "0x8A5648")]
	private static int GetHexVal(char hex)
	{
		return default(int);
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x8A5700", Offset = "0x8A5700", VA = "0x8A5700")]
	public AnchorHelpers()
	{
	}
}
[Token(Token = "0x20000D8")]
public abstract class AnchorSession : MonoBehaviour
{
	[Token(Token = "0x20000D9")]
	public enum StorageLocation
	{
		[Token(Token = "0x40004A1")]
		LOCAL
	}

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSession Instance;

	[Token(Token = "0x400049B")]
	public const ulong kInvalidHandle = ulong.MaxValue;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<ulong, Anchor> handleToAnchor;

	[Token(Token = "0x400049D")]
	protected const int maxEvents = 5;

	[Token(Token = "0x400049E")]
	protected const float eventPollingRate = 0.1f;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected GameObject anchorPrefab_;

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x8A5708", Offset = "0x8A5708", VA = "0x8A5708", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x8A5458", Offset = "0x8A5458", VA = "0x8A5458")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x8A5804", Offset = "0x8A5804", VA = "0x8A5804")]
	protected static bool isFlagSet(uint bitset, uint flag)
	{
		return default(bool);
	}

	[Token(Token = "0x600045C")]
	public abstract ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor);

	[Token(Token = "0x600045D")]
	public abstract void DestroyAnchor(ulong anchorHandle);

	[Token(Token = "0x600045E")]
	public abstract void SaveAnchor(ulong anchorHandle, StorageLocation location);

	[Token(Token = "0x600045F")]
	public abstract void EraseAnchor(ulong anchorHandle);

	[Token(Token = "0x6000460")]
	public abstract void QueryAllLocalAnchors();

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x8A5810", Offset = "0x8A5810", VA = "0x8A5810")]
	protected AnchorSession()
	{
	}
}
[Token(Token = "0x20000DA")]
public class AnchorSpawner : MonoBehaviour
{
	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSpawner Instance;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject anchorPrefab_;

	[Token(Token = "0x17000087")]
	public GameObject AnchorPrefab
	{
		[Token(Token = "0x6000462")]
		[Address(RVA = "0x8A5898", Offset = "0x8A5898", VA = "0x8A5898")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x8A58A0", Offset = "0x8A58A0", VA = "0x8A58A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x8A5994", Offset = "0x8A5994", VA = "0x8A5994")]
	public void PlaceAnchorAtTransform(Transform transform)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x8A5BBC", Offset = "0x8A5BBC", VA = "0x8A5BBC")]
	public AnchorSpawner()
	{
	}
}
[Token(Token = "0x20000DB")]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x20000DC")]
	public enum AnchorMode
	{
		[Token(Token = "0x40004B6")]
		Create,
		[Token(Token = "0x40004B7")]
		Select
	}

	[Token(Token = "0x20000DD")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject createModeButton_;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject selectModeButton_;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform trackedDevice_;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform raycastOrigin_;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool drawRaycast_;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LineRenderer lineRenderer_;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Anchor hoveredAnchor_;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor selectedAnchor_;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnchorMode mode_;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int menuIndex_;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Button selectedButton_;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject placementPreview_;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform anchorPlacementTransform_;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PrimaryPressDelegate primaryPressDelegate_;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isFocused_;

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x8A5BC4", Offset = "0x8A5BC4", VA = "0x8A5BC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x8A5C90", Offset = "0x8A5C90", VA = "0x8A5C90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x8A5DE0", Offset = "0x8A5DE0", VA = "0x8A5DE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x8A6250", Offset = "0x8A6250", VA = "0x8A6250")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x8A62BC", Offset = "0x8A62BC", VA = "0x8A62BC")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x8A5D78", Offset = "0x8A5D78", VA = "0x8A5D78")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x8A6334", Offset = "0x8A6334", VA = "0x8A6334")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x8A63BC", Offset = "0x8A63BC", VA = "0x8A63BC")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x8A63DC", Offset = "0x8A63DC", VA = "0x8A63DC")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x8A6314", Offset = "0x8A6314", VA = "0x8A6314")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x8A615C", Offset = "0x8A615C", VA = "0x8A615C")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x8A65B8", Offset = "0x8A65B8", VA = "0x8A65B8")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x8A6464", Offset = "0x8A6464", VA = "0x8A6464")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x8A652C", Offset = "0x8A652C", VA = "0x8A652C")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x8A66B8", Offset = "0x8A66B8", VA = "0x8A66B8")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x8A654C", Offset = "0x8A654C", VA = "0x8A654C")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x8A6584", Offset = "0x8A6584", VA = "0x8A6584")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x8A5EE0", Offset = "0x8A5EE0", VA = "0x8A5EE0")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x8A6710", Offset = "0x8A6710", VA = "0x8A6710")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x8A6738", Offset = "0x8A6738", VA = "0x8A6738")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x8A67C8", Offset = "0x8A67C8", VA = "0x8A67C8")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x8A6910", Offset = "0x8A6910", VA = "0x8A6910")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x20000DE")]
public class SpatialAnchorSession : AnchorSession
{
	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<ulong, ulong> locateAnchorRequest;

	[Token(Token = "0x40004B9")]
	private const string numUuids = "numUuids";

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x8A6960", Offset = "0x8A6960", VA = "0x8A6960")]
	private void Start()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x8A6B5C", Offset = "0x8A6B5C", VA = "0x8A6B5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x8A6D58", Offset = "0x8A6D58", VA = "0x8A6D58")]
	private void SpatialEntitySetComponentEnabled(ulong requestId, bool result, OVRPlugin.SpatialEntityComponentType componentType, ulong space)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x8A6F50", Offset = "0x8A6F50", VA = "0x8A6F50")]
	private void SpatialAnchorSaved(ulong requestId, ulong space, bool result, OVRPlugin.SpatialEntityUuid uuid)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x8A744C", Offset = "0x8A744C", VA = "0x8A744C")]
	private void SpatialEntityStorageErase(ulong requestId, bool result, OVRPlugin.SpatialEntityUuid uuid, OVRPlugin.SpatialEntityStorageLocation location)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x8A778C", Offset = "0x8A778C", VA = "0x8A778C")]
	private void SpatialEntityQueryResults(ulong requestId, int numResults, OVRPlugin.SpatialEntityQueryResult[] results)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x8A7E80", Offset = "0x8A7E80", VA = "0x8A7E80")]
	private void SpatialEntityQueryComplete(ulong requestId, bool result, int numFound)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x8A7380", Offset = "0x8A7380", VA = "0x8A7380")]
	private string GetUuidString(OVRPlugin.SpatialEntityUuid uuid)
	{
		return null;
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x8A7A80", Offset = "0x8A7A80", VA = "0x8A7A80")]
	private void tryEnableComponent(ulong anchorHandle, OVRPlugin.SpatialEntityComponentType type)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x8A6E44", Offset = "0x8A6E44", VA = "0x8A6E44")]
	private void CreateAnchorGameobject(ulong anchorHandle)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x8A80E8", Offset = "0x8A80E8", VA = "0x8A80E8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x8A83A8", Offset = "0x8A83A8", VA = "0x8A83A8", Slot = "5")]
	public override ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor)
	{
		return default(ulong);
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x8A8538", Offset = "0x8A8538", VA = "0x8A8538", Slot = "6")]
	public override void DestroyAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x8A86D8", Offset = "0x8A86D8", VA = "0x8A86D8", Slot = "8")]
	public override void EraseAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x8A8888", Offset = "0x8A8888", VA = "0x8A8888")]
	public void QueryAnchorByUuid()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x8A8B48", Offset = "0x8A8B48", VA = "0x8A8B48", Slot = "9")]
	public override void QueryAllLocalAnchors()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x8A8C4C", Offset = "0x8A8C4C", VA = "0x8A8C4C", Slot = "7")]
	public override void SaveAnchor(ulong anchorHandle, StorageLocation location)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x8A8D90", Offset = "0x8A8D90", VA = "0x8A8D90")]
	public SpatialAnchorSession()
	{
	}
}
[Token(Token = "0x20000DF")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x8A8E14", Offset = "0x8A8E14", VA = "0x8A8E14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x8A9028", Offset = "0x8A9028", VA = "0x8A9028")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x8A912C", Offset = "0x8A912C", VA = "0x8A912C")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000E1")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20000E2")]
	public enum PlabackState
	{
		[Token(Token = "0x40004D7")]
		Idle = 1,
		[Token(Token = "0x40004D8")]
		Preparing,
		[Token(Token = "0x40004D9")]
		Buffering,
		[Token(Token = "0x40004DA")]
		Ready,
		[Token(Token = "0x40004DB")]
		Ended
	}

	[Token(Token = "0x20000E3")]
	public enum StereoMode
	{
		[Token(Token = "0x40004DD")]
		Unknown = -1,
		[Token(Token = "0x40004DE")]
		Mono,
		[Token(Token = "0x40004DF")]
		TopBottom,
		[Token(Token = "0x40004E0")]
		LeftRight,
		[Token(Token = "0x40004E1")]
		Mesh
	}

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000088")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000497")]
		[Address(RVA = "0x8A9150", Offset = "0x8A9150", VA = "0x8A9150")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000089")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000498")]
		[Address(RVA = "0x8A940C", Offset = "0x8A940C", VA = "0x8A940C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700008A")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000499")]
		[Address(RVA = "0x8A9678", Offset = "0x8A9678", VA = "0x8A9678")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008B")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600049A")]
		[Address(RVA = "0x8A96DC", Offset = "0x8A96DC", VA = "0x8A96DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008C")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x600049B")]
		[Address(RVA = "0x8A97D0", Offset = "0x8A97D0", VA = "0x8A97D0")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x1700008D")]
	public static long Duration
	{
		[Token(Token = "0x600049C")]
		[Address(RVA = "0x8A98C8", Offset = "0x8A98C8", VA = "0x8A98C8")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700008E")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x600049D")]
		[Address(RVA = "0x8A99C0", Offset = "0x8A99C0", VA = "0x8A99C0")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x1700008F")]
	public static int VideoWidth
	{
		[Token(Token = "0x600049E")]
		[Address(RVA = "0x8A9AB8", Offset = "0x8A9AB8", VA = "0x8A9AB8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000090")]
	public static int VideoHeight
	{
		[Token(Token = "0x600049F")]
		[Address(RVA = "0x8A9BB0", Offset = "0x8A9BB0", VA = "0x8A9BB0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000091")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x8A9CA8", Offset = "0x8A9CA8", VA = "0x8A9CA8")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x8A9DA0", Offset = "0x8A9DA0", VA = "0x8A9DA0")]
		set
		{
		}
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x8A9EF8", Offset = "0x8A9EF8", VA = "0x8A9EF8")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x8AA100", Offset = "0x8AA100", VA = "0x8AA100")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x8AA1F8", Offset = "0x8AA1F8", VA = "0x8AA1F8")]
	public static void Play()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x8AA2F0", Offset = "0x8AA2F0", VA = "0x8AA2F0")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x8AA3E8", Offset = "0x8AA3E8", VA = "0x8AA3E8")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x8AA548", Offset = "0x8AA548", VA = "0x8AA548")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x8AA6A4", Offset = "0x8AA6A4", VA = "0x8AA6A4")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000E4")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x8AA8E8", Offset = "0x8AA8E8", VA = "0x8AA8E8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x8AA984", Offset = "0x8AA984", VA = "0x8AA984")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x8AAA20", Offset = "0x8AAA20", VA = "0x8AAA20", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x8AAA3C", Offset = "0x8AAA3C", VA = "0x8AAA3C")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000E5")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20000E6")]
	public enum ButtonType
	{
		[Token(Token = "0x40004E5")]
		Play,
		[Token(Token = "0x40004E6")]
		Pause,
		[Token(Token = "0x40004E7")]
		FastForward,
		[Token(Token = "0x40004E8")]
		Rewind,
		[Token(Token = "0x40004E9")]
		SkipForward,
		[Token(Token = "0x40004EA")]
		SkipBack,
		[Token(Token = "0x40004EB")]
		Stop
	}

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000092")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x8AAA44", Offset = "0x8AAA44", VA = "0x8AAA44")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60004AF")]
		[Address(RVA = "0x8AAA4C", Offset = "0x8AAA4C", VA = "0x8AAA4C")]
		set
		{
		}
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x8AAA70", Offset = "0x8AAA70", VA = "0x8AAA70", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x8AB8C4", Offset = "0x8AB8C4", VA = "0x8AB8C4")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000E7")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20000E8")]
	public enum VideoShape
	{
		[Token(Token = "0x4000500")]
		_360,
		[Token(Token = "0x4000501")]
		_180,
		[Token(Token = "0x4000502")]
		Quad
	}

	[Token(Token = "0x20000E9")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000504")]
		Mono,
		[Token(Token = "0x4000505")]
		TopBottom,
		[Token(Token = "0x4000506")]
		LeftRight,
		[Token(Token = "0x4000507")]
		BottomTop
	}

	[Token(Token = "0x20000EA")]
	[CompilerGenerated]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000096")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004C8")]
			[Address(RVA = "0x8ACDDC", Offset = "0x8ACDDC", VA = "0x8ACDDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004CA")]
			[Address(RVA = "0x8ACE24", Offset = "0x8ACE24", VA = "0x8ACE24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x8ABFA8", Offset = "0x8ABFA8", VA = "0x8ABFA8")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x8ACC30", Offset = "0x8ACC30", VA = "0x8ACC30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x8ACC34", Offset = "0x8ACC34", VA = "0x8ACC34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x8ACDE4", Offset = "0x8ACDE4", VA = "0x8ACDE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000093")]
	public bool IsPlaying
	{
		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x8AB91C", Offset = "0x8AB91C", VA = "0x8AB91C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x8AB924", Offset = "0x8AB924", VA = "0x8AB924")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public long Duration
	{
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x8AB930", Offset = "0x8AB930", VA = "0x8AB930")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x8AB938", Offset = "0x8AB938", VA = "0x8AB938")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x8AB940", Offset = "0x8AB940", VA = "0x8AB940")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x8AB948", Offset = "0x8AB948", VA = "0x8AB948")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x8AB950", Offset = "0x8AB950", VA = "0x8AB950")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x8ABBD4", Offset = "0x8ABBD4", VA = "0x8ABBD4")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x8ABC34", Offset = "0x8ABC34", VA = "0x8ABC34")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x8ABF34", Offset = "0x8ABF34", VA = "0x8ABF34")]
	[IteratorStateMachine(typeof(<Start>d__33))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x8ABFD0", Offset = "0x8ABFD0", VA = "0x8ABFD0")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x8AC298", Offset = "0x8AC298", VA = "0x8AC298")]
	public void Play()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x8AC31C", Offset = "0x8AC31C", VA = "0x8AC31C")]
	public void Pause()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x8AC39C", Offset = "0x8AC39C", VA = "0x8AC39C")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x8AC488", Offset = "0x8AC488", VA = "0x8AC488")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x8ACA24", Offset = "0x8ACA24", VA = "0x8ACA24")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x8ACAC0", Offset = "0x8ACAC0", VA = "0x8ACAC0")]
	public void Stop()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x8ACB40", Offset = "0x8ACB40", VA = "0x8ACB40")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x8ACC20", Offset = "0x8ACC20", VA = "0x8ACC20")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000EC")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20000ED")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000524")]
		Playing,
		[Token(Token = "0x4000525")]
		Paused,
		[Token(Token = "0x4000526")]
		Rewinding,
		[Token(Token = "0x4000527")]
		FastForwarding
	}

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x8ACF00", Offset = "0x8ACF00", VA = "0x8ACF00")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x8AD22C", Offset = "0x8AD22C", VA = "0x8AD22C")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x8AD3FC", Offset = "0x8AD3FC", VA = "0x8AD3FC")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x8AD520", Offset = "0x8AD520", VA = "0x8AD520")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x8AD61C", Offset = "0x8AD61C", VA = "0x8AD61C")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x8AD4F4", Offset = "0x8AD4F4", VA = "0x8AD4F4")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x8AD67C", Offset = "0x8AD67C", VA = "0x8AD67C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x8AD12C", Offset = "0x8AD12C", VA = "0x8AD12C")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x8AD9AC", Offset = "0x8AD9AC", VA = "0x8AD9AC")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000EE")]
[RequireComponent(typeof(OVROverlay))]
[ExecuteInEditMode]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x20000EF")]
	private enum CubeFace
	{
		[Token(Token = "0x400053C")]
		Right,
		[Token(Token = "0x400053D")]
		Left,
		[Token(Token = "0x400053E")]
		Top,
		[Token(Token = "0x400053F")]
		Bottom,
		[Token(Token = "0x4000540")]
		Front,
		[Token(Token = "0x4000541")]
		Back,
		[Token(Token = "0x4000542")]
		COUNT
	}

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x8AD9BC", Offset = "0x8AD9BC", VA = "0x8AD9BC")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x8ADB6C", Offset = "0x8ADB6C", VA = "0x8ADB6C")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x8ADCB0", Offset = "0x8ADCB0", VA = "0x8ADCB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x8AE0B8", Offset = "0x8AE0B8", VA = "0x8AE0B8")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x8AE3AC", Offset = "0x8AE3AC", VA = "0x8AE3AC")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x8B014C", Offset = "0x8B014C", VA = "0x8B014C")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x8B0184", Offset = "0x8B0184", VA = "0x8B0184")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x8AE6E4", Offset = "0x8AE6E4", VA = "0x8AE6E4")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x8B01D8", Offset = "0x8B01D8", VA = "0x8B01D8")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x8B0318", Offset = "0x8B0318", VA = "0x8B0318")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x8AEE68", Offset = "0x8AEE68", VA = "0x8AEE68")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x8AF3CC", Offset = "0x8AF3CC", VA = "0x8AF3CC")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x8AFAEC", Offset = "0x8AFAEC", VA = "0x8AFAEC")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x8B0424", Offset = "0x8B0424", VA = "0x8B0424")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x20000F0")]
public static class VectorUtil
{
	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x8AC9AC", Offset = "0x8AC9AC", VA = "0x8AC9AC")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000F1")]
public class NukeOvrHand : MonoBehaviour
{
	[Token(Token = "0x20000F2")]
	public enum AnimId
	{
		[Token(Token = "0x4000561")]
		BindPoseDoNotUse,
		[Token(Token = "0x4000562")]
		Relax,
		[Token(Token = "0x4000563")]
		HoverGrab,
		[Token(Token = "0x4000564")]
		Push1Finger,
		[Token(Token = "0x4000565")]
		Push3Finger,
		[Token(Token = "0x4000566")]
		HoldSmall,
		[Token(Token = "0x4000567")]
		HoldMedium,
		[Token(Token = "0x4000568")]
		HoldLarge,
		[Token(Token = "0x4000569")]
		BinderOpen,
		[Token(Token = "0x400056A")]
		HoldFingers,
		[Token(Token = "0x400056B")]
		PreTouch,
		[Token(Token = "0x400056C")]
		ToolHandle,
		[Token(Token = "0x400056D")]
		EarthTrophy,
		[Token(Token = "0x400056E")]
		RocketTrophy,
		[Token(Token = "0x400056F")]
		PlaneTrophy,
		[Token(Token = "0x4000570")]
		Stamp,
		[Token(Token = "0x4000571")]
		Diamond,
		[Token(Token = "0x4000572")]
		Marker,
		[Token(Token = "0x4000573")]
		ResetSwitch,
		[Token(Token = "0x4000574")]
		ThrowSwitch,
		[Token(Token = "0x4000575")]
		CoffeeMug,
		[Token(Token = "0x4000576")]
		Phone,
		[Token(Token = "0x4000577")]
		Fist,
		[Token(Token = "0x4000578")]
		ThumbsUp,
		[Token(Token = "0x4000579")]
		PewPew,
		[Token(Token = "0x400057A")]
		OpenGripThumbDown,
		[Token(Token = "0x400057B")]
		NoGripNotPointing,
		[Token(Token = "0x400057C")]
		NoGripPointing,
		[Token(Token = "0x400057D")]
		GripPointing,
		[Token(Token = "0x400057E")]
		GripPointTrigger,
		[Token(Token = "0x400057F")]
		OpenHandThumbUp,
		[Token(Token = "0x4000580")]
		PointingThumbUp,
		[Token(Token = "0x4000581")]
		NumValues
	}

	[Serializable]
	[Token(Token = "0x20000F3")]
	private class AnimFrame
	{
		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AnimId id;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly float normalizedTime;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int AnimNameHash;

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x8B2910", Offset = "0x8B2910", VA = "0x8B2910")]
		public AnimFrame(AnimId id)
		{
		}
	}

	[Token(Token = "0x20000F4")]
	private struct StateId
	{
		[Token(Token = "0x4000585")]
		internal const int Undetermined = 0;

		[Token(Token = "0x4000586")]
		internal const int Idle = 1;

		[Token(Token = "0x4000587")]
		internal const int Grab = 2;

		[Token(Token = "0x4000588")]
		internal const int Paused = 3;

		[Token(Token = "0x4000589")]
		internal const int Fist = 4;

		[Token(Token = "0x400058A")]
		internal const int Count = 5;
	}

	[Token(Token = "0x20000F6")]
	[CompilerGenerated]
	private sealed class <PauseUpdateLoop>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NukeOvrHand <>4__this;

		[Token(Token = "0x1700009C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000510")]
			[Address(RVA = "0x8B2B4C", Offset = "0x8B2B4C", VA = "0x8B2B4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000512")]
			[Address(RVA = "0x8B2B94", Offset = "0x8B2B94", VA = "0x8B2B94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x8B2A9C", Offset = "0x8B2A9C", VA = "0x8B2A9C")]
		[DebuggerHidden]
		public <PauseUpdateLoop>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x8B2AC4", Offset = "0x8B2AC4", VA = "0x8B2AC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x8B2AC8", Offset = "0x8B2AC8", VA = "0x8B2AC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x8B2B54", Offset = "0x8B2B54", VA = "0x8B2B54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GrabHelper grabHelper;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform anchor;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isLeft;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float gripCommitThreshold;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float triggerCommitThreshold;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TrackedController xrController;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rigidbody;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform finglongerBone;

	[Token(Token = "0x400054B")]
	private const float FinglongerRadius = 0.6f;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int finglongerLayerMask;

	[Token(Token = "0x400054D")]
	private const float FinglongerLength = 100f;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RaycastHit[] finglongerHits;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int numFinglongerHits;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CountdownTimer finglongerTimer;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CountdownTimer hoverproxyTimer;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int physicsProxyLayerMask;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WidgetProxy hoverproxy;

	[Token(Token = "0x4000554")]
	private const float RaycastTickTime = 0.1f;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isForcedPointing;

	[Token(Token = "0x4000556")]
	private const float GripDebounceSeconds = 0.5f;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float gripDebounceTime;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Animator animator;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AnimFrame[] animFrames;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SimpleFsm fsm;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AnimFrame activeAnim;

	[Token(Token = "0x400055C")]
	private const float MaxVelocityChange = 10f;

	[Token(Token = "0x400055D")]
	private const float MaxAngularVelocityChange = 20f;

	[Token(Token = "0x400055E")]
	private const float VelocityMagic = 6000f;

	[Token(Token = "0x400055F")]
	private const float AngularVelocityMagic = 50f;

	[Token(Token = "0x17000098")]
	private AnimId ActiveAnimId
	{
		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x8B094C", Offset = "0x8B094C", VA = "0x8B094C")]
		get
		{
			return default(AnimId);
		}
		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x8B0968", Offset = "0x8B0968", VA = "0x8B0968")]
		set
		{
		}
	}

	[Token(Token = "0x17000099")]
	private bool IsTriggerPressed
	{
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x8B18A4", Offset = "0x8B18A4", VA = "0x8B18A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009A")]
	public bool IsGripPressed
	{
		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x8B18D4", Offset = "0x8B18D4", VA = "0x8B18D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009B")]
	private bool IsGrabbingSomething
	{
		[Token(Token = "0x6000505")]
		[Address(RVA = "0x8B21FC", Offset = "0x8B21FC", VA = "0x8B21FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x8B0A34", Offset = "0x8B0A34", VA = "0x8B0A34")]
	[Conditional("STATELOG")]
	private void Statelog(object o)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x8B0B14", Offset = "0x8B0B14", VA = "0x8B0B14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x8B134C", Offset = "0x8B134C", VA = "0x8B134C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x8B1540", Offset = "0x8B1540", VA = "0x8B1540")]
	[Conditional("UNITY_EDITOR")]
	private void EnableHandDebugMode()
	{
	}

	[Token(Token = "0x60004EC")]
	[Conditional("UNITY_EDITOR")]
	private void DebugHandDisable<T>(GameObject go) where T : MonoBehaviour
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x8B178C", Offset = "0x8B178C", VA = "0x8B178C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x8B17D0", Offset = "0x8B17D0", VA = "0x8B17D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x8B17D4", Offset = "0x8B17D4", VA = "0x8B17D4")]
	private void OnPauseOrResume(bool newState)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x8B1830", Offset = "0x8B1830", VA = "0x8B1830")]
	[IteratorStateMachine(typeof(<PauseUpdateLoop>d__39))]
	private IEnumerator PauseUpdateLoop()
	{
		return null;
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x8B1904", Offset = "0x8B1904", VA = "0x8B1904")]
	private void MoveFree()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x8B1980", Offset = "0x8B1980", VA = "0x8B1980")]
	private bool GrabFinglongerObject()
	{
		return default(bool);
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x8B1988", Offset = "0x8B1988", VA = "0x8B1988")]
	private void EnterPaused()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x8B1A40", Offset = "0x8B1A40", VA = "0x8B1A40")]
	private int UpdatePaused()
	{
		return default(int);
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x8B1B38", Offset = "0x8B1B38", VA = "0x8B1B38")]
	private void ExitPaused()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x8B1B58", Offset = "0x8B1B58", VA = "0x8B1B58")]
	private void EnterIdle()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x8B1BB0", Offset = "0x8B1BB0", VA = "0x8B1BB0")]
	private int UpdateIdle()
	{
		return default(int);
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x8B244C", Offset = "0x8B244C", VA = "0x8B244C")]
	private void ExitIdle()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x8B2458", Offset = "0x8B2458", VA = "0x8B2458")]
	private void EnterFist()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x8B245C", Offset = "0x8B245C", VA = "0x8B245C")]
	private int UpdateFist()
	{
		return default(int);
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x8B2598", Offset = "0x8B2598", VA = "0x8B2598")]
	private void ExitFist()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x8B259C", Offset = "0x8B259C", VA = "0x8B259C")]
	private void EnterGrab()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x8B2728", Offset = "0x8B2728", VA = "0x8B2728")]
	private int UpdateGrab()
	{
		return default(int);
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x8B2784", Offset = "0x8B2784", VA = "0x8B2784")]
	private void ExitGrab()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x8B2788", Offset = "0x8B2788", VA = "0x8B2788")]
	private void EnterUndetermined()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x8B278C", Offset = "0x8B278C", VA = "0x8B278C")]
	private int UpdateUndetermined()
	{
		return default(int);
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x8B28E0", Offset = "0x8B28E0", VA = "0x8B28E0")]
	private void ExitUndetermined()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x8B28E4", Offset = "0x8B28E4", VA = "0x8B28E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x8B2218", Offset = "0x8B2218", VA = "0x8B2218")]
	private bool ShouldGrabbableChangeHandPose(XRGrabInteractable grabbable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x8B2900", Offset = "0x8B2900", VA = "0x8B2900")]
	public NukeOvrHand()
	{
	}
}
[Token(Token = "0x20000F7")]
public class TrackedController : MonoBehaviour
{
	[Token(Token = "0x20000F8")]
	public enum PointerStates
	{
		[Token(Token = "0x40005B6")]
		Pointing,
		[Token(Token = "0x40005B7")]
		Resting,
		[Token(Token = "0x40005B8")]
		Pulling
	}

	[Token(Token = "0x4000590")]
	public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

	[Token(Token = "0x4000591")]
	public const float THUMB_DEBOUNCE_TIME = 0.15f;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TrackedController[] m_cachedControllers;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InputActionAsset controllerInput;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OVRInput.Controller m_controllerType;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool isLeft;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public GameObject grabPointTransform;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public GameObject markerGrabPointTransform;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public GameObject staplerGrabPointTransform;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public GameObject papersPleaseGrabPointTransform;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public GameObject binderGrabPointTransform;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public GameObject stampGrabPointTransform;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public GameObject eraserGrabPointTransform;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public GameObject keyGrabPointTransform;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public GameObject blacklightGrabPointTransform;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	public GameObject hammerGrabPointTransform;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public GameObject phoneGrabPointTransform;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public GameObject screwdriverGrabPointTransform;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	public GameObject coffeeGrabPointTransform;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool m_point;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool m_trigger;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool m_thumbsUp;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float m_lastPoint;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float m_lastTrigger;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float m_lastNonPoint;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float m_lastNonTrigger;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float m_lastThumb;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float m_lastNonThumb;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private InputActionMap controllerMap;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private InputAction primaryButton;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private InputAction secondaryButton;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private InputAction joystickButton;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private InputAction trigger;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private InputAction triggerPress;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private InputAction gripTriggerPress;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private InputAction thumbTouch;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private InputAction triggerTouch;

	[Token(Token = "0x1700009E")]
	public OVRInput.Controller ControllerType
	{
		[Token(Token = "0x6000514")]
		[Address(RVA = "0x8B2C20", Offset = "0x8B2C20", VA = "0x8B2C20")]
		get
		{
			return default(OVRInput.Controller);
		}
	}

	[Token(Token = "0x1700009F")]
	public bool IsLeft
	{
		[Token(Token = "0x6000515")]
		[Address(RVA = "0x8B2C28", Offset = "0x8B2C28", VA = "0x8B2C28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A0")]
	public bool IsPoint
	{
		[Token(Token = "0x6000516")]
		[Address(RVA = "0x8B2C30", Offset = "0x8B2C30", VA = "0x8B2C30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A1")]
	public bool IsTrigger
	{
		[Token(Token = "0x6000517")]
		[Address(RVA = "0x8B2C38", Offset = "0x8B2C38", VA = "0x8B2C38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A2")]
	public PointerStates PointerState
	{
		[Token(Token = "0x6000518")]
		[Address(RVA = "0x8B2C40", Offset = "0x8B2C40", VA = "0x8B2C40")]
		get
		{
			return default(PointerStates);
		}
	}

	[Token(Token = "0x170000A3")]
	public bool IsThumbsUp
	{
		[Token(Token = "0x6000519")]
		[Address(RVA = "0x8B2C64", Offset = "0x8B2C64", VA = "0x8B2C64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A4")]
	public bool Button1
	{
		[Token(Token = "0x600051A")]
		[Address(RVA = "0x8B2C6C", Offset = "0x8B2C6C", VA = "0x8B2C6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A5")]
	public bool Button2
	{
		[Token(Token = "0x600051B")]
		[Address(RVA = "0x8B2C88", Offset = "0x8B2C88", VA = "0x8B2C88")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A6")]
	public bool ButtonJoystick
	{
		[Token(Token = "0x600051C")]
		[Address(RVA = "0x8B2CA4", Offset = "0x8B2CA4", VA = "0x8B2CA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A7")]
	public float Trigger
	{
		[Token(Token = "0x600051D")]
		[Address(RVA = "0x8B2CC0", Offset = "0x8B2CC0", VA = "0x8B2CC0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A8")]
	public float GripTrigger
	{
		[Token(Token = "0x600051E")]
		[Address(RVA = "0x8B2D90", Offset = "0x8B2D90", VA = "0x8B2D90")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x8B2B9C", Offset = "0x8B2B9C", VA = "0x8B2B9C")]
	public static TrackedController GetController(bool getLeft)
	{
		return null;
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x8B2E60", Offset = "0x8B2E60", VA = "0x8B2E60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x8B3194", Offset = "0x8B3194", VA = "0x8B3194")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x8B2F6C", Offset = "0x8B2F6C", VA = "0x8B2F6C")]
	private void AssignActions()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x8B32FC", Offset = "0x8B32FC", VA = "0x8B32FC")]
	public TrackedController()
	{
	}
}
[Token(Token = "0x20000F9")]
public static class OVR_Utils
{
}
[Token(Token = "0x20000FA")]
public class ScreenFadeControl : MonoBehaviour
{
	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material fadeMaterial;

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x8B338C", Offset = "0x8B338C", VA = "0x8B338C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x8B3438", Offset = "0x8B3438", VA = "0x8B3438")]
	public ScreenFadeControl()
	{
	}
}
[Token(Token = "0x20000FB")]
public class ScreenFader : MonoBehaviour
{
	[Token(Token = "0x40005BA")]
	private const float DefaultFadeTime = 2f;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color fadeColor;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material fadeMaterial;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ScreenFadeControl> fadeControls;

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x8B3440", Offset = "0x8B3440", VA = "0x8B3440")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x8B3560", Offset = "0x8B3560", VA = "0x8B3560")]
	private void SetFadersEnabled(bool value)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x8B36F0", Offset = "0x8B36F0", VA = "0x8B36F0")]
	public void FadeIn(float fadeTime = 2f, [Optional] Action onFadeBegin, [Optional] Action onFadeComplete)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x8B389C", Offset = "0x8B389C", VA = "0x8B389C")]
	public void FadeOut(float fadeTime = 2f, [Optional] Action onFadeBegin, [Optional] Action onFadeComplete)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x8B3A48", Offset = "0x8B3A48", VA = "0x8B3A48")]
	public ScreenFader()
	{
	}
}
[Token(Token = "0x20000FE")]
public class AnimationEvents : MonoBehaviour
{
	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x8B3B70", Offset = "0x8B3B70", VA = "0x8B3B70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x8B3C78", Offset = "0x8B3C78", VA = "0x8B3C78")]
	public void AE_PlaySound(UnityEngine.Object clipObj)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x8B3DC0", Offset = "0x8B3DC0", VA = "0x8B3DC0")]
	public AnimationEvents()
	{
	}
}
[Token(Token = "0x20000FF")]
public class ArmController : NukeObject
{
	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x8B3DC8", Offset = "0x8B3DC8", VA = "0x8B3DC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x8B3E20", Offset = "0x8B3E20", VA = "0x8B3E20")]
	public void TriggerStep(string trigger)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x8B3E3C", Offset = "0x8B3E3C", VA = "0x8B3E3C")]
	public void SetState(string stateName)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x8B3E58", Offset = "0x8B3E58", VA = "0x8B3E58", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x8B3E60", Offset = "0x8B3E60", VA = "0x8B3E60", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x8B3E64", Offset = "0x8B3E64", VA = "0x8B3E64", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x8B3EC0", Offset = "0x8B3EC0", VA = "0x8B3EC0")]
	public void Hide(bool shouldBeHidden)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x8B3F74", Offset = "0x8B3F74", VA = "0x8B3F74")]
	public ArmController()
	{
	}
}
[Token(Token = "0x2000100")]
public class BackupMachine : NukeObject
{
	[Token(Token = "0x2000101")]
	[CompilerGenerated]
	private sealed class <BrokenMachineTick>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BackupMachine <>4__this;

		[Token(Token = "0x170000A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000546")]
			[Address(RVA = "0x8B4428", Offset = "0x8B4428", VA = "0x8B4428", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000548")]
			[Address(RVA = "0x8B4470", Offset = "0x8B4470", VA = "0x8B4470", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x8B4138", Offset = "0x8B4138", VA = "0x8B4138")]
		[DebuggerHidden]
		public <BrokenMachineTick>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x8B4178", Offset = "0x8B4178", VA = "0x8B4178", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x8B417C", Offset = "0x8B417C", VA = "0x8B417C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x8B4430", Offset = "0x8B4430", VA = "0x8B4430", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RandomBlink[] blinkingLights;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MeshRenderer[] RBGYClueLights;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SpinObject[] spinningReels;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isRunning;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float deactivationDuration;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float deactivationTimer;

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x8B3F7C", Offset = "0x8B3F7C", VA = "0x8B3F7C", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x8B3F80", Offset = "0x8B3F80", VA = "0x8B3F80", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x8B4080", Offset = "0x8B4080", VA = "0x8B4080")]
	public bool CanBeUsedByHeld(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x8B4088", Offset = "0x8B4088", VA = "0x8B4088", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x8B4090", Offset = "0x8B4090", VA = "0x8B4090")]
	public void BreakMachine()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x8B40C4", Offset = "0x8B40C4", VA = "0x8B40C4")]
	[IteratorStateMachine(typeof(<BrokenMachineTick>d__11))]
	private IEnumerator BrokenMachineTick()
	{
		return null;
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x8B4160", Offset = "0x8B4160", VA = "0x8B4160")]
	public BackupMachine()
	{
	}
}
[Token(Token = "0x2000102")]
public class BigRedButton : RedButton
{
	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject[] crackStates;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject buttonRoot;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float multiHitTimer;

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x8B4478", Offset = "0x8B4478", VA = "0x8B4478", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x8B45F4", Offset = "0x8B45F4", VA = "0x8B45F4")]
	public void Update()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x8B4620", Offset = "0x8B4620", VA = "0x8B4620", Slot = "5")]
	public override void Use(UseContext info)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x8B4728", Offset = "0x8B4728", VA = "0x8B4728", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x8B44F8", Offset = "0x8B44F8", VA = "0x8B44F8")]
	public void SetCrackLevel(int level)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x8B47EC", Offset = "0x8B47EC", VA = "0x8B47EC", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x8B4874", Offset = "0x8B4874", VA = "0x8B4874")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x8B48FC", Offset = "0x8B48FC", VA = "0x8B48FC")]
	public BigRedButton()
	{
	}
}
[Token(Token = "0x2000103")]
public class BinaryKeypad : KeypadWidget
{
	[Token(Token = "0x6000551")]
	[Address(RVA = "0x8B4904", Offset = "0x8B4904", VA = "0x8B4904")]
	public BinaryKeypad()
	{
	}
}
[Token(Token = "0x2000104")]
public class Binder : Holdable
{
	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform originalParent;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x8B490C", Offset = "0x8B490C", VA = "0x8B490C", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x8B494C", Offset = "0x8B494C", VA = "0x8B494C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x8B4950", Offset = "0x8B4950", VA = "0x8B4950", Slot = "9")]
	public override bool CanBeUsedOnTarget(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x8B496C", Offset = "0x8B496C", VA = "0x8B496C", Slot = "10")]
	public override void UseOnTarget(UseContext context)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x8B4974", Offset = "0x8B4974", VA = "0x8B4974", Slot = "14")]
	protected override void OnRestart()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x8B4AB0", Offset = "0x8B4AB0", VA = "0x8B4AB0", Slot = "12")]
	protected override void OnPickUp()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x8B4ABC", Offset = "0x8B4ABC", VA = "0x8B4ABC", Slot = "11")]
	protected override void OnPutDown(SlotForHoldable slot)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x8B4AC4", Offset = "0x8B4AC4", VA = "0x8B4AC4")]
	public Binder()
	{
	}
}
[Token(Token = "0x2000105")]
public class BinderStatic : SlotForHoldable
{
	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isRightHandHolding;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool grabbed;

	[Token(Token = "0x170000AB")]
	public bool startedWriting
	{
		[Token(Token = "0x600055A")]
		[Address(RVA = "0x8B4ACC", Offset = "0x8B4ACC", VA = "0x8B4ACC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600055B")]
		[Address(RVA = "0x8B4AD4", Offset = "0x8B4AD4", VA = "0x8B4AD4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x8B4AE0", Offset = "0x8B4AE0", VA = "0x8B4AE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x8B4C24", Offset = "0x8B4C24", VA = "0x8B4C24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x8B4D68", Offset = "0x8B4D68", VA = "0x8B4D68")]
	private void HandleGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x8B4E78", Offset = "0x8B4E78", VA = "0x8B4E78")]
	private void HandleUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x8B4F80", Offset = "0x8B4F80", VA = "0x8B4F80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x8B4F84", Offset = "0x8B4F84", VA = "0x8B4F84")]
	public BinderStatic()
	{
	}
}
[Token(Token = "0x2000106")]
public class BlackLight : Holdable
{
	[Token(Token = "0x2000107")]
	[CompilerGenerated]
	private sealed class <HandSwapTimer>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BlackLight <>4__this;

		[Token(Token = "0x170000AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000573")]
			[Address(RVA = "0x8B564C", Offset = "0x8B564C", VA = "0x8B564C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000575")]
			[Address(RVA = "0x8B5694", Offset = "0x8B5694", VA = "0x8B5694", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x8B5530", Offset = "0x8B5530", VA = "0x8B5530")]
		[DebuggerHidden]
		public <HandSwapTimer>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x8B5560", Offset = "0x8B5560", VA = "0x8B5560", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x8B5564", Offset = "0x8B5564", VA = "0x8B5564", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x8B5654", Offset = "0x8B5654", VA = "0x8B5654", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private GameObject maskObject;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject holdPosition;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Coroutine handSwapCoroutine;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool isHandSwap;

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x8B4F8C", Offset = "0x8B4F8C", VA = "0x8B4F8C", Slot = "9")]
	public override bool CanBeUsedOnTarget(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x8B4FA8", Offset = "0x8B4FA8", VA = "0x8B4FA8", Slot = "10")]
	public override void UseOnTarget(UseContext context)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x8B4FB0", Offset = "0x8B4FB0", VA = "0x8B4FB0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x8B4FB4", Offset = "0x8B4FB4", VA = "0x8B4FB4", Slot = "12")]
	protected override void OnPickUp()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x8B5000", Offset = "0x8B5000", VA = "0x8B5000", Slot = "11")]
	protected override void OnPutDown(SlotForHoldable slot)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x8B5004", Offset = "0x8B5004", VA = "0x8B5004", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x8B500C", Offset = "0x8B500C", VA = "0x8B500C")]
	public void OnDrawerClosed()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x8B5014", Offset = "0x8B5014", VA = "0x8B5014")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x8B51D4", Offset = "0x8B51D4", VA = "0x8B51D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x8B5318", Offset = "0x8B5318", VA = "0x8B5318")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x8B545C", Offset = "0x8B545C", VA = "0x8B545C")]
	private void HandleGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x8B5468", Offset = "0x8B5468", VA = "0x8B5468")]
	private void HandleUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x8B54AC", Offset = "0x8B54AC", VA = "0x8B54AC")]
	[IteratorStateMachine(typeof(<HandSwapTimer>d__16))]
	private IEnumerator HandSwapTimer(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x8B5558", Offset = "0x8B5558", VA = "0x8B5558")]
	public BlackLight()
	{
	}
}
[Token(Token = "0x2000108")]
public class BlackLightDrawer : Widget
{
	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 comparisonVector;

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x8B569C", Offset = "0x8B569C", VA = "0x8B569C", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x8B5720", Offset = "0x8B5720", VA = "0x8B5720", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x8B577C", Offset = "0x8B577C", VA = "0x8B577C", Slot = "15")]
	protected override void OnRevealBegin()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x8B57E0", Offset = "0x8B57E0", VA = "0x8B57E0", Slot = "16")]
	protected override void OnRevealEnd()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x8B5CD0", Offset = "0x8B5CD0", VA = "0x8B5CD0", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x8B5CD8", Offset = "0x8B5CD8", VA = "0x8B5CD8")]
	public BlackLightDrawer()
	{
	}
}
[Token(Token = "0x2000109")]
public class BlacklightMaskBounds : MonoBehaviour
{
	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startPosition;

	[Token(Token = "0x40005E0")]
	private const float distanceFromCam = 1.334f;

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x8B5CF8", Offset = "0x8B5CF8", VA = "0x8B5CF8")]
	private void Start()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x8B5D28", Offset = "0x8B5D28", VA = "0x8B5D28")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x8B5DE0", Offset = "0x8B5DE0", VA = "0x8B5DE0")]
	public BlacklightMaskBounds()
	{
	}
}
[Token(Token = "0x200010A")]
public class BloodyBaby : Widget
{
	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioClip[] hitClips;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioClip shieldClip;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject bloodSplatEffect;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private MeshRenderer shieldRenderer;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private BloodyBabyEnding babyEnding;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material babyMaterial;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Material shieldMaterial;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _hitFlashOpacity;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float _shieldOpacity;

	[Token(Token = "0x170000AE")]
	public float HitFlashOpacity
	{
		[Token(Token = "0x600057F")]
		[Address(RVA = "0x8B5DE8", Offset = "0x8B5DE8", VA = "0x8B5DE8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000580")]
		[Address(RVA = "0x8B5DF0", Offset = "0x8B5DF0", VA = "0x8B5DF0")]
		set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	private float ShieldOpacity
	{
		[Token(Token = "0x6000581")]
		[Address(RVA = "0x8B5E58", Offset = "0x8B5E58", VA = "0x8B5E58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000582")]
		[Address(RVA = "0x8B5E60", Offset = "0x8B5E60", VA = "0x8B5E60")]
		set
		{
		}
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x8B5EC8", Offset = "0x8B5EC8", VA = "0x8B5EC8", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x8B6054", Offset = "0x8B6054", VA = "0x8B6054")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x8B60BC", Offset = "0x8B60BC", VA = "0x8B60BC", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x8B6140", Offset = "0x8B6140", VA = "0x8B6140", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x8B6148", Offset = "0x8B6148", VA = "0x8B6148")]
	public AudioClip GetHitClip()
	{
		return null;
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x8B61AC", Offset = "0x8B61AC", VA = "0x8B61AC")]
	public void OnHit()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x8B65A0", Offset = "0x8B65A0", VA = "0x8B65A0")]
	public BloodyBaby()
	{
	}
}
[Token(Token = "0x200010B")]
public class BloodyBlob : Widget
{
	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioClip[] hitClips;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioClip deathClip;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject AliveBlob;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject DeadBlob;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject bloodSplatEffect;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int hitCount;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Material blobMaterial;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Material flashMaterial;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private MeshRenderer blobMeshRenderer;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float _hitFlashOpacity;

	[Token(Token = "0x170000B0")]
	private float HitFlashOpacity
	{
		[Token(Token = "0x6000595")]
		[Address(RVA = "0x8B68D8", Offset = "0x8B68D8", VA = "0x8B68D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000596")]
		[Address(RVA = "0x8B68E0", Offset = "0x8B68E0", VA = "0x8B68E0")]
		set
		{
		}
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x8B6948", Offset = "0x8B6948", VA = "0x8B6948", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x8B6B64", Offset = "0x8B6B64", VA = "0x8B6B64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x8B6BC0", Offset = "0x8B6BC0", VA = "0x8B6BC0", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x8B6C44", Offset = "0x8B6C44", VA = "0x8B6C44", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x8B6C4C", Offset = "0x8B6C4C", VA = "0x8B6C4C")]
	public bool CanTakeDamage()
	{
		return default(bool);
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x8B6C74", Offset = "0x8B6C74", VA = "0x8B6C74")]
	public AudioClip GetHitClip()
	{
		return null;
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x8B6CA8", Offset = "0x8B6CA8", VA = "0x8B6CA8")]
	public void OnHit()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x8B703C", Offset = "0x8B703C", VA = "0x8B703C")]
	public BloodyBlob()
	{
	}
}
[Token(Token = "0x200010C")]
public class BoundaryScaler : MonoBehaviour
{
	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _roomScale;

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x8B7270", Offset = "0x8B7270", VA = "0x8B7270")]
	private void SetupRoomBoundary()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x8B73E4", Offset = "0x8B73E4", VA = "0x8B73E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x8B73E8", Offset = "0x8B73E8", VA = "0x8B73E8")]
	public BoundaryScaler()
	{
	}
}
[Token(Token = "0x200010D")]
public class CityboomBomb : MonoBehaviour
{
	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject explosionPrefab;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform rectTransform;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool exploded;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip explosionClip;

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x8B73F8", Offset = "0x8B73F8", VA = "0x8B73F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x8B7480", Offset = "0x8B7480", VA = "0x8B7480")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x8B74DC", Offset = "0x8B74DC", VA = "0x8B74DC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x8B7798", Offset = "0x8B7798", VA = "0x8B7798")]
	public CityboomBomb()
	{
	}
}
[Token(Token = "0x200010E")]
public class CityboomPlane : MonoBehaviour
{
	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject explosionPrefab;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CityboomEnding ending;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform rectTransform;

	[Token(Token = "0x40005FC")]
	private const int xMin = -10;

	[Token(Token = "0x40005FD")]
	private const int xMax = 170;

	[Token(Token = "0x40005FE")]
	private const float verticalDelta = 5f;

	[Token(Token = "0x40005FF")]
	private const float speed = 35f;

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x8B77A0", Offset = "0x8B77A0", VA = "0x8B77A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x8B7878", Offset = "0x8B7878", VA = "0x8B7878")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x8B7994", Offset = "0x8B7994", VA = "0x8B7994")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x8B7B24", Offset = "0x8B7B24", VA = "0x8B7B24")]
	public CityboomPlane()
	{
	}
}
[Token(Token = "0x200010F")]
public class CityboomScreen : Widget
{
	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CityboomEnding ending;

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x8B7B2C", Offset = "0x8B7B2C", VA = "0x8B7B2C", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x8B7BA4", Offset = "0x8B7BA4", VA = "0x8B7BA4", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x8B7BC0", Offset = "0x8B7BC0", VA = "0x8B7BC0", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x8B7BDC", Offset = "0x8B7BDC", VA = "0x8B7BDC", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x8B7BE4", Offset = "0x8B7BE4", VA = "0x8B7BE4")]
	public CityboomScreen()
	{
	}
}
[Token(Token = "0x2000110")]
public class ClientVersionDataContainer : ScriptableObject
{
	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string clientVersion;

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x8B7BEC", Offset = "0x8B7BEC", VA = "0x8B7BEC")]
	public ClientVersionDataContainer()
	{
	}
}
[Token(Token = "0x2000111")]
public enum ClockMode
{
	[Token(Token = "0x4000603")]
	Run,
	[Token(Token = "0x4000604")]
	Manual,
	[Token(Token = "0x4000605")]
	TimeTravel
}
[Token(Token = "0x2000112")]
public class Clock : Widget
{
	[Token(Token = "0x2000113")]
	[CompilerGenerated]
	private sealed class <HideGlassShardsTimer>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Clock <>4__this;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005D8")]
			[Address(RVA = "0x8B9050", Offset = "0x8B9050", VA = "0x8B9050", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005DA")]
			[Address(RVA = "0x8B9098", Offset = "0x8B9098", VA = "0x8B9098", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x8B8E38", Offset = "0x8B8E38", VA = "0x8B8E38")]
		[DebuggerHidden]
		public <HideGlassShardsTimer>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x8B8F9C", Offset = "0x8B8F9C", VA = "0x8B8F9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x8B8FA0", Offset = "0x8B8FA0", VA = "0x8B8FA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x8B9058", Offset = "0x8B9058", VA = "0x8B9058", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ClockHand hourHand;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ClockHand minuteHand;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ClockHand secondHand;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject glassParent;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClip poltergeistLockSound;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioClip clockSmashClip;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float normalVolume;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private TimeSpan now;

	[Token(Token = "0x400060E")]
	private const float degPerSec = -6f;

	[Token(Token = "0x400060F")]
	private const float degPerMin = -6f;

	[Token(Token = "0x4000610")]
	private const float degPerHour = -30f;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float seconds;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float minutes;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float hours;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private ClockMode clockMode;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool isFirstTick;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool isClockBroken;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
	private bool isGlassActivePrePause;

	[Token(Token = "0x170000B1")]
	private float Seconds
	{
		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x8B7BF4", Offset = "0x8B7BF4", VA = "0x8B7BF4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x8B7BFC", Offset = "0x8B7BFC", VA = "0x8B7BFC")]
		set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	private float Minutes
	{
		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x8B7CD0", Offset = "0x8B7CD0", VA = "0x8B7CD0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x8B7CD8", Offset = "0x8B7CD8", VA = "0x8B7CD8")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	private float Hours
	{
		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x8B7D68", Offset = "0x8B7D68", VA = "0x8B7D68")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x8B7D70", Offset = "0x8B7D70", VA = "0x8B7D70")]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public ClockMode ClockMode
	{
		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x8B7E00", Offset = "0x8B7E00", VA = "0x8B7E00")]
		private get
		{
			return default(ClockMode);
		}
		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x8B7E08", Offset = "0x8B7E08", VA = "0x8B7E08")]
		set
		{
		}
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x8B7F34", Offset = "0x8B7F34", VA = "0x8B7F34")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x8B819C", Offset = "0x8B819C", VA = "0x8B819C", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x8B8584", Offset = "0x8B8584", VA = "0x8B8584")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x8B868C", Offset = "0x8B868C", VA = "0x8B868C", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x8B8710", Offset = "0x8B8710", VA = "0x8B8710", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x8B8718", Offset = "0x8B8718", VA = "0x8B8718")]
	private void FlingHands(int range)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x8B89BC", Offset = "0x8B89BC", VA = "0x8B89BC")]
	public void OnManualPositionLocked(ClockHand clockHand)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x8B8A90", Offset = "0x8B8A90", VA = "0x8B8A90")]
	private void PlayTickTockSound()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x8B8324", Offset = "0x8B8324", VA = "0x8B8324")]
	private void SetCurrentTime()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x8B7E40", Offset = "0x8B7E40", VA = "0x8B7E40")]
	private void SetHandsInteractive(bool isInteractive)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x8B7FA4", Offset = "0x8B7FA4", VA = "0x8B7FA4")]
	private void UpdateRun()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x8B80D4", Offset = "0x8B80D4", VA = "0x8B80D4")]
	private void UpdateTimeTravel()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x8B8CC8", Offset = "0x8B8CC8", VA = "0x8B8CC8")]
	public AudioClip GetHitClip()
	{
		return null;
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x8B8CD0", Offset = "0x8B8CD0", VA = "0x8B8CD0")]
	public bool IsClockBroken()
	{
		return default(bool);
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x8B8B54", Offset = "0x8B8B54", VA = "0x8B8B54")]
	private void CrackGlass()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x8B83AC", Offset = "0x8B83AC", VA = "0x8B83AC")]
	private void ResetGlass()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x8B8D4C", Offset = "0x8B8D4C", VA = "0x8B8D4C")]
	private void HideGlassShards(bool shouldHide)
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x8B8CD8", Offset = "0x8B8CD8", VA = "0x8B8CD8")]
	[IteratorStateMachine(typeof(<HideGlassShardsTimer>d__47))]
	private IEnumerator HideGlassShardsTimer()
	{
		return null;
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x8B8E60", Offset = "0x8B8E60", VA = "0x8B8E60")]
	private void HandlePauseState(bool paused)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x8B8F4C", Offset = "0x8B8F4C", VA = "0x8B8F4C")]
	public Clock()
	{
	}
}
[Token(Token = "0x2000114")]
public class ClockHand : Widget
{
	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform touchProxy;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	internal Clock clock;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isGrabbed;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool isLocked;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float Angle;

	[Token(Token = "0x4000620")]
	private const int hourSegmentDegrees = 30;

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x8B90A0", Offset = "0x8B90A0", VA = "0x8B90A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x8B90CC", Offset = "0x8B90CC", VA = "0x8B90CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x8B90F8", Offset = "0x8B90F8", VA = "0x8B90F8")]
	protected void LateUpdate()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x8B9350", Offset = "0x8B9350", VA = "0x8B9350", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x8B9358", Offset = "0x8B9358", VA = "0x8B9358", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x8B9360", Offset = "0x8B9360", VA = "0x8B9360", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x8B9370", Offset = "0x8B9370", VA = "0x8B9370", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x8B9298", Offset = "0x8B9298", VA = "0x8B9298")]
	private void CheckToLock()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x8B938C", Offset = "0x8B938C", VA = "0x8B938C")]
	public void UpdateAngle(float angle)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x8B7C9C", Offset = "0x8B7C9C", VA = "0x8B7C9C")]
	public void ResetProxy()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x8B9400", Offset = "0x8B9400", VA = "0x8B9400")]
	public ClockHand()
	{
	}
}
[Token(Token = "0x2000115")]
public class ClockHandProxy : MonoBehaviour
{
	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ClockHand clockHand;

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x8B9408", Offset = "0x8B9408", VA = "0x8B9408")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x8B94C8", Offset = "0x8B94C8", VA = "0x8B94C8")]
	public ClockHandProxy()
	{
	}
}
[Token(Token = "0x2000116")]
[RequireComponent(typeof(AudioSource))]
public class ClockPanel : Widget
{
	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioClip hourStrikeMidnightClip;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioClip minuteStrikeMidnightClip;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioClip secondStrikeMidnightClip;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	[Header("Clock Hands")]
	private Transform hourHand;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Transform minuteHand;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Transform secondHand;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Renderer hourLight;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Renderer minuteLight;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Renderer secondLight;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Material litLightMaterial;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Material dimLightMaterial;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Punchcard punchCard;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<Collider> screwColliders;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Clock clocktoSyncWith;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private AudioSource struckMidnightSound;

	[Token(Token = "0x170000B7")]
	public string PunchcardCode
	{
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x8B94D0", Offset = "0x8B94D0", VA = "0x8B94D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x8B94EC", Offset = "0x8B94EC", VA = "0x8B94EC", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x8B959C", Offset = "0x8B959C", VA = "0x8B959C", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x8B9620", Offset = "0x8B9620", VA = "0x8B9620", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x8B9628", Offset = "0x8B9628", VA = "0x8B9628")]
	private void Update()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x8B9A78", Offset = "0x8B9A78", VA = "0x8B9A78", Slot = "15")]
	protected override void OnRevealBegin()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x8B96B4", Offset = "0x8B96B4", VA = "0x8B96B4")]
	private void ClockSync(bool forceMaterialUpdate = false)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x8B9A98", Offset = "0x8B9A98", VA = "0x8B9A98")]
	private bool AngleStruckMidnight(float angle)
	{
		return default(bool);
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x8B9AC8", Offset = "0x8B9AC8", VA = "0x8B9AC8", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x8B9B20", Offset = "0x8B9B20", VA = "0x8B9B20")]
	public ClockPanel()
	{
	}
}
[Token(Token = "0x2000117")]
public class CoffeeButton : Widget
{
	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioClip hapticClip;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private WidgetProxy proxy;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool creditsStarting;

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x8B9B28", Offset = "0x8B9B28", VA = "0x8B9B28", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x8B9B30", Offset = "0x8B9B30", VA = "0x8B9B30", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x8B9B38", Offset = "0x8B9B38", VA = "0x8B9B38", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x8B9B44", Offset = "0x8B9B44", VA = "0x8B9B44", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x8B9BC0", Offset = "0x8B9BC0", VA = "0x8B9BC0")]
	public void ToggleProxy(bool unlocked)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x8B9C18", Offset = "0x8B9C18", VA = "0x8B9C18", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x8B9E00", Offset = "0x8B9E00", VA = "0x8B9E00")]
	public CoffeeButton()
	{
	}
}
[Token(Token = "0x2000118")]
public class CoffeeCup : Tool
{
	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Transform coffee;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private GameObject steamEffect;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioClip sipSound;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float startingCoffeeHeight;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int drinksLeft;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject holdingHand;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool isGrabbed;

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x8B9E08", Offset = "0x8B9E08", VA = "0x8B9E08", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x8B9E38", Offset = "0x8B9E38", VA = "0x8B9E38", Slot = "13")]
	protected override void OnReveal()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x8B9EFC", Offset = "0x8B9EFC", VA = "0x8B9EFC", Slot = "9")]
	public override bool CanBeUsedOnTarget(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x8B9F80", Offset = "0x8B9F80", VA = "0x8B9F80", Slot = "10")]
	public override void UseOnTarget(UseContext context)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x8BA208", Offset = "0x8BA208", VA = "0x8BA208")]
	private void EndInteraction()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x8BA3A8", Offset = "0x8BA3A8", VA = "0x8BA3A8", Slot = "19")]
	protected override void UseOnPoint(Vector3 pos, Vector3 offsetDir, [Optional] string trigger, [Optional] Action animCallback, bool returnAfterComplete = false)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x8BA614", Offset = "0x8BA614", VA = "0x8BA614")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x8BA764", Offset = "0x8BA764", VA = "0x8BA764")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x8BA85C", Offset = "0x8BA85C", VA = "0x8BA85C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x8BA860", Offset = "0x8BA860", VA = "0x8BA860")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x8BA9A4", Offset = "0x8BA9A4", VA = "0x8BA9A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x8BAAE8", Offset = "0x8BAAE8", VA = "0x8BAAE8")]
	private void HandleGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x8BABC8", Offset = "0x8BABC8", VA = "0x8BABC8")]
	private void HandleUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x8BACA4", Offset = "0x8BACA4", VA = "0x8BACA4")]
	public CoffeeCup()
	{
	}
}
[Token(Token = "0x2000119")]
public class CoffeePlatform : Widget
{
	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject sevenBySevenGO;

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x8BAD4C", Offset = "0x8BAD4C", VA = "0x8BAD4C", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x8BADD4", Offset = "0x8BADD4", VA = "0x8BADD4", Slot = "15")]
	protected override void OnRevealBegin()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x8BAE50", Offset = "0x8BAE50", VA = "0x8BAE50", Slot = "13")]
	protected override void OnRestartBegin()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x8BAEB0", Offset = "0x8BAEB0", VA = "0x8BAEB0", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x8BAED0", Offset = "0x8BAED0", VA = "0x8BAED0", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x8BAF54", Offset = "0x8BAF54", VA = "0x8BAF54", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x8BA0B4", Offset = "0x8BA0B4", VA = "0x8BA0B4")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x8BAF5C", Offset = "0x8BAF5C", VA = "0x8BAF5C")]
	public CoffeePlatform()
	{
	}
}
[Token(Token = "0x200011A")]
public class CollisionSound : MonoBehaviour
{
	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip pickUpClip;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip putDownClip;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip collisionClip;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audioSource;

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x8BB024", Offset = "0x8BB024", VA = "0x8BB024")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x8BB07C", Offset = "0x8BB07C", VA = "0x8BB07C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x8BB150", Offset = "0x8BB150", VA = "0x8BB150")]
	public void PlayPickUp()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x8BB210", Offset = "0x8BB210", VA = "0x8BB210")]
	public void PlayPutDown()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x8BB2D0", Offset = "0x8BB2D0", VA = "0x8BB2D0")]
	public CollisionSound()
	{
	}
}
[Token(Token = "0x200011B")]
public class ContinueText : MonoBehaviour
{
	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextCrawler[] textCrawlers;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] meshes;

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x8BB2D8", Offset = "0x8BB2D8", VA = "0x8BB2D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x8BB5A8", Offset = "0x8BB5A8", VA = "0x8BB5A8")]
	public void BeginText()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x8BB8B0", Offset = "0x8BB8B0", VA = "0x8BB8B0")]
	public void BeginEnglishText()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x8BBA28", Offset = "0x8BBA28", VA = "0x8BBA28")]
	public void ForceComplete()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x8BBA88", Offset = "0x8BBA88", VA = "0x8BBA88")]
	public ContinueText()
	{
	}
}
[Token(Token = "0x200011E")]
public class CountDown : Widget
{
	[Token(Token = "0x200011F")]
	public enum CountdownState
	{
		[Token(Token = "0x4000646")]
		Idle,
		[Token(Token = "0x4000647")]
		CountingDown,
		[Token(Token = "0x4000648")]
		Complete
	}

	[Token(Token = "0x2000120")]
	[CompilerGenerated]
	private sealed class <DoCountDownAnimation>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CountDown <>4__this;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600062D")]
			[Address(RVA = "0x8BBDA4", Offset = "0x8BBDA4", VA = "0x8BBDA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600062F")]
			[Address(RVA = "0x8BBDEC", Offset = "0x8BBDEC", VA = "0x8BBDEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x8BBC1C", Offset = "0x8BBC1C", VA = "0x8BBC1C")]
		[DebuggerHidden]
		public <DoCountDownAnimation>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0x8BBC58", Offset = "0x8BBC58", VA = "0x8BBC58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x8BBC5C", Offset = "0x8BBC5C", VA = "0x8BBC5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0x8BBDAC", Offset = "0x8BBDAC", VA = "0x8BBDAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public CountdownState CurrentState
	{
		[Token(Token = "0x6000621")]
		[Address(RVA = "0x8BBAD0", Offset = "0x8BBAD0", VA = "0x8BBAD0")]
		[CompilerGenerated]
		get
		{
			return default(CountdownState);
		}
		[Token(Token = "0x6000622")]
		[Address(RVA = "0x8BBAD8", Offset = "0x8BBAD8", VA = "0x8BBAD8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x8BBAE0", Offset = "0x8BBAE0", VA = "0x8BBAE0", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x8BBAE8", Offset = "0x8BBAE8", VA = "0x8BBAE8", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x8BBAF0", Offset = "0x8BBAF0", VA = "0x8BBAF0", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x8BBBA0", Offset = "0x8BBBA0", VA = "0x8BBBA0", Slot = "17")]
	public override void Reveal()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x8BBBA8", Offset = "0x8BBBA8", VA = "0x8BBBA8")]
	[IteratorStateMachine(typeof(<DoCountDownAnimation>d__9))]
	public IEnumerator DoCountDownAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x8BBC44", Offset = "0x8BBC44", VA = "0x8BBC44")]
	public CountDown()
	{
	}
}
[Token(Token = "0x2000121")]
public class CountDownAnimEvents : MonoBehaviour
{
	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] showCardSounds;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip hideCardsSound;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource audioSource;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int idxCounter;

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x8BBDF4", Offset = "0x8BBDF4", VA = "0x8BBDF4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x8BBE4C", Offset = "0x8BBE4C", VA = "0x8BBE4C")]
	public void AnimEvent_HideCards()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x8BBE80", Offset = "0x8BBE80", VA = "0x8BBE80")]
	public void AnimEvent_ShowCard()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x8BBEF8", Offset = "0x8BBEF8", VA = "0x8BBEF8")]
	public CountDownAnimEvents()
	{
	}
}
[Token(Token = "0x2000122")]
public class Counter : Widget
{
	[Serializable]
	[Token(Token = "0x2000123")]
	public class CounterSpeedInfo
	{
		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float NumbersPerSecond;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float AnimatorSpeed;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SpeedSettingDuration;

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x8BCC64", Offset = "0x8BCC64", VA = "0x8BCC64")]
		public CounterSpeedInfo()
		{
		}
	}

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int count;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Collider greyButtonCollider;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private WidgetProxy greyButtonProxy;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Collider redButtonCollider;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Transform[] wheelXforms;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private AudioClip greyAudioClip;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private AudioClip redAudioClip;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private CounterSpeedInfo[] speedDefinitions;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool spinnerIsActive;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int speedSettingIdx;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int numOfButtonPresses;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float fastestInTheWildStartTime;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float spinnerTimer;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float speedStateTimer;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float baseAnimationTime;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool buttonTriggered;

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x8BBF00", Offset = "0x8BBF00", VA = "0x8BBF00", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x8BBF98", Offset = "0x8BBF98", VA = "0x8BBF98")]
	public void ButtonTriggered()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x8BBFA4", Offset = "0x8BBFA4", VA = "0x8BBFA4")]
	private void AdvanceSpeedState()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x8BBFF4", Offset = "0x8BBFF4", VA = "0x8BBFF4", Slot = "15")]
	protected override void OnRevealBegin()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x8BBFB0", Offset = "0x8BBFB0", VA = "0x8BBFB0")]
	private void SetSpeedState(int newStateIdx)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x8BC164", Offset = "0x8BC164", VA = "0x8BC164", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x8BC16C", Offset = "0x8BC16C", VA = "0x8BC16C", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x8BC174", Offset = "0x8BC174", VA = "0x8BC174", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x8BC654", Offset = "0x8BC654", VA = "0x8BC654")]
	private void SubmitCounter()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x8BC7A4", Offset = "0x8BC7A4", VA = "0x8BC7A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x8BCAC4", Offset = "0x8BCAC4", VA = "0x8BCAC4", Slot = "13")]
	protected override void OnRestartBegin()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x8BC558", Offset = "0x8BC558", VA = "0x8BC558")]
	private void IncrementWheel(int index, float animationTime, float goalAngle)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x8BC0BC", Offset = "0x8BC0BC", VA = "0x8BC0BC")]
	private void ResetWheel(int index)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x8BCB98", Offset = "0x8BCB98", VA = "0x8BCB98")]
	public void CheatTwoSevenSix()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x8BCBF0", Offset = "0x8BCBF0", VA = "0x8BCBF0")]
	public void CheatSixSixSix()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x8BCC48", Offset = "0x8BCC48", VA = "0x8BCC48")]
	public Counter()
	{
	}
}
[Token(Token = "0x2000124")]
public class Crosshair3D : MonoBehaviour, IPointer
{
	[Token(Token = "0x4000663")]
	public const string enabledCrosshairKey = "ShowCrosshair";

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float offsetFromObjects;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float lastDist;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SubtitleSystem subs;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MeshFilter quadMesh;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector2[] idleUvs;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector2[] heldUvs;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int layerMask;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<GameObject> enteredObjects;

	[Token(Token = "0x170000BB")]
	public Transform TargetTransform
	{
		[Token(Token = "0x6000645")]
		[Address(RVA = "0x8BCC7C", Offset = "0x8BCC7C", VA = "0x8BCC7C", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000646")]
		[Address(RVA = "0x8BCC84", Offset = "0x8BCC84", VA = "0x8BCC84")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	public Transform EyeTransform
	{
		[Token(Token = "0x6000647")]
		[Address(RVA = "0x8BCC8C", Offset = "0x8BCC8C", VA = "0x8BCC8C", Slot = "5")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000648")]
		[Address(RVA = "0x8BCC94", Offset = "0x8BCC94", VA = "0x8BCC94")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	public Collider TargetCollider
	{
		[Token(Token = "0x6000649")]
		[Address(RVA = "0x8BCC9C", Offset = "0x8BCC9C", VA = "0x8BCC9C", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BE")]
	public Vector3 ContactPosition
	{
		[Token(Token = "0x600064A")]
		[Address(RVA = "0x8BCCCC", Offset = "0x8BCCCC", VA = "0x8BCCCC", Slot = "7")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000BF")]
	public Holdable AttachedHoldable
	{
		[Token(Token = "0x600064B")]
		[Address(RVA = "0x8BCCFC", Offset = "0x8BCCFC", VA = "0x8BCCFC", Slot = "8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600064C")]
		[Address(RVA = "0x8BCD04", Offset = "0x8BCD04", VA = "0x8BCD04", Slot = "9")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	public RaycastHit RaycastHit
	{
		[Token(Token = "0x600064D")]
		[Address(RVA = "0x8BCD0C", Offset = "0x8BCD0C", VA = "0x8BCD0C")]
		[CompilerGenerated]
		get
		{
			return default(RaycastHit);
		}
		[Token(Token = "0x600064E")]
		[Address(RVA = "0x8BCD20", Offset = "0x8BCD20", VA = "0x8BCD20")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public Vector3 HoldableTargetPosition
	{
		[Token(Token = "0x600064F")]
		[Address(RVA = "0x8BCD3C", Offset = "0x8BCD3C", VA = "0x8BCD3C")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000650")]
		[Address(RVA = "0x8BCD48", Offset = "0x8BCD48", VA = "0x8BCD48")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public bool IsGrabbed
	{
		[Token(Token = "0x6000651")]
		[Address(RVA = "0x8BCD54", Offset = "0x8BCD54", VA = "0x8BCD54")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000652")]
		[Address(RVA = "0x8BCD5C", Offset = "0x8BCD5C", VA = "0x8BCD5C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x8BCD68", Offset = "0x8BCD68", VA = "0x8BCD68")]
	[Conditional("UNITY_EDITOR")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x8BCDF0", Offset = "0x8BCDF0", VA = "0x8BCDF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x8BD120", Offset = "0x8BD120", VA = "0x8BD120")]
	private void InitializeUvs()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x8BD2B0", Offset = "0x8BD2B0", VA = "0x8BD2B0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x8BE1C4", Offset = "0x8BE1C4", VA = "0x8BE1C4")]
	public void OnGameUnpaused(bool isPaused)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x8BDAC4", Offset = "0x8BDAC4", VA = "0x8BDAC4")]
	public Ray UpdateCameraRay()
	{
		return default(Ray);
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x8BE310", Offset = "0x8BE310", VA = "0x8BE310")]
	public void SetCrosshairGrabbed(bool isGrabbed)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x8BDDDC", Offset = "0x8BDDDC", VA = "0x8BDDDC")]
	private void UpdateAttachedHoldablePosition(Holdable holdable, Transform eyeTransform, Vector3 lookAtPoint)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x8BE364", Offset = "0x8BE364", VA = "0x8BE364")]
	public Crosshair3D()
	{
	}
}
[Token(Token = "0x2000126")]
public class D4Drawer : Widget
{
	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioClip openClip;

	[Token(Token = "0x170000C3")]
	public bool IsOpened
	{
		[Token(Token = "0x600065F")]
		[Address(RVA = "0x8BE478", Offset = "0x8BE478", VA = "0x8BE478")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000660")]
		[Address(RVA = "0x8BE480", Offset = "0x8BE480", VA = "0x8BE480")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x8BE48C", Offset = "0x8BE48C", VA = "0x8BE48C", Slot = "16")]
	protected override void OnRevealEnd()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x8BE508", Offset = "0x8BE508", VA = "0x8BE508", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x8BE510", Offset = "0x8BE510", VA = "0x8BE510", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x8BE594", Offset = "0x8BE594", VA = "0x8BE594", Slot = "13")]
	protected override void OnRestartBegin()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x8BE59C", Offset = "0x8BE59C", VA = "0x8BE59C", Slot = "9")]
	protected override string GetRestartState()
	{
		return null;
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x8BE608", Offset = "0x8BE608", VA = "0x8BE608")]
	public void Open()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x8BE724", Offset = "0x8BE724", VA = "0x8BE724")]
	public D4Drawer()
	{
	}
}
[Token(Token = "0x2000127")]
public class DebugMenuOpener : Widget
{
	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int count;

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x8BE72C", Offset = "0x8BE72C", VA = "0x8BE72C", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x8BE734", Offset = "0x8BE734", VA = "0x8BE734", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x8BE7D4", Offset = "0x8BE7D4", VA = "0x8BE7D4", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x8BE7DC", Offset = "0x8BE7DC", VA = "0x8BE7DC")]
	public DebugMenuOpener()
	{
	}
}
[Token(Token = "0x2000128")]
public class DialogPlayer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000129")]
	public class DialogStepData
	{
		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip audioSequence;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string animationTrigger;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float postClipDelay;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string subtitle;

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x8BEA44", Offset = "0x8BEA44", VA = "0x8BEA44")]
		public DialogStepData()
		{
		}
	}

	[Token(Token = "0x200012A")]
	[CompilerGenerated]
	private sealed class <PDTAsequencePlayer>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DialogPlayer <>4__this;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <sequenceLength>5__2;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x170000C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000674")]
			[Address(RVA = "0x8BED70", Offset = "0x8BED70", VA = "0x8BED70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000676")]
			[Address(RVA = "0x8BEDB8", Offset = "0x8BEDB8", VA = "0x8BEDB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x8BEA0C", Offset = "0x8BEA0C", VA = "0x8BEA0C")]
		[DebuggerHidden]
		public <PDTAsequencePlayer>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x8BEA4C", Offset = "0x8BEA4C", VA = "0x8BEA4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x8BEA50", Offset = "0x8BEA50", VA = "0x8BEA50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x8BED78", Offset = "0x8BED78", VA = "0x8BED78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float initialDelay;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DialogStepData[] stepData;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ArmController armController;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float totalLength;

	[Token(Token = "0x170000C4")]
	public float TotalLength
	{
		[Token(Token = "0x600066C")]
		[Address(RVA = "0x8BE7E4", Offset = "0x8BE7E4", VA = "0x8BE7E4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x8BE8AC", Offset = "0x8BE8AC", VA = "0x8BE8AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x8BE998", Offset = "0x8BE998", VA = "0x8BE998")]
	[IteratorStateMachine(typeof(<PDTAsequencePlayer>d__7))]
	private IEnumerator PDTAsequencePlayer()
	{
		return null;
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x8BEA34", Offset = "0x8BEA34", VA = "0x8BEA34")]
	public DialogPlayer()
	{
	}
}
[Token(Token = "0x200012B")]
public class Diamond : Holdable
{
	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public SlotForHoldable wingsSlot;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform originalParent;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool lockedIn;

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x8BEDC0", Offset = "0x8BEDC0", VA = "0x8BEDC0", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x8BEDC4", Offset = "0x8BEDC4", VA = "0x8BEDC4", Slot = "13")]
	protected override void OnReveal()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x8BEE54", Offset = "0x8BEE54", VA = "0x8BEE54", Slot = "14")]
	protected override void OnRestart()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x8BEF20", Offset = "0x8BEF20", VA = "0x8BEF20", Slot = "9")]
	public override bool CanBeUsedOnTarget(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x8BEF3C", Offset = "0x8BEF3C", VA = "0x8BEF3C", Slot = "10")]
	public override void UseOnTarget(UseContext context)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x8BF008", Offset = "0x8BF008", VA = "0x8BF008", Slot = "12")]
	protected override void OnPickUp()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x8BF0B8", Offset = "0x8BF0B8", VA = "0x8BF0B8", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x8BF0C8", Offset = "0x8BF0C8", VA = "0x8BF0C8")]
	public Diamond()
	{
	}
}
[Token(Token = "0x200012C")]
public class DisableOnPause : MonoBehaviour
{
	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool cachedState;

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x8BF0D0", Offset = "0x8BF0D0", VA = "0x8BF0D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x8BF1D8", Offset = "0x8BF1D8", VA = "0x8BF1D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x8BF2E0", Offset = "0x8BF2E0", VA = "0x8BF2E0")]
	private void HandlePauseState(bool newState)
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x8BF344", Offset = "0x8BF344", VA = "0x8BF344")]
	public DisableOnPause()
	{
	}
}
[Token(Token = "0x200012D")]
public class DontDoItPaper : Widget
{
	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject tapeObject;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private MeshRenderer[] blackLightClues;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int clickCount;

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x8BF34C", Offset = "0x8BF34C", VA = "0x8BF34C", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x8BF354", Offset = "0x8BF354", VA = "0x8BF354", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x8BF364", Offset = "0x8BF364", VA = "0x8BF364", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x8BF410", Offset = "0x8BF410", VA = "0x8BF410", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x8BF4BC", Offset = "0x8BF4BC", VA = "0x8BF4BC", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x8BF43C", Offset = "0x8BF43C", VA = "0x8BF43C")]
	private void ResetValues()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x8BF4C0", Offset = "0x8BF4C0", VA = "0x8BF4C0")]
	public DontDoItPaper()
	{
	}
}
[Token(Token = "0x200012E")]
public class Door : MonoBehaviour
{
	[Token(Token = "0x200012F")]
	[CompilerGenerated]
	private sealed class <WaitASec>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Door <>4__this;

		[Token(Token = "0x170000C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000697")]
			[Address(RVA = "0x8BFA20", Offset = "0x8BFA20", VA = "0x8BFA20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000699")]
			[Address(RVA = "0x8BFA68", Offset = "0x8BFA68", VA = "0x8BFA68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x8BF884", Offset = "0x8BF884", VA = "0x8BF884")]
		[DebuggerHidden]
		public <WaitASec>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x8BF8DC", Offset = "0x8BF8DC", VA = "0x8BF8DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x8BF8E0", Offset = "0x8BF8E0", VA = "0x8BF8E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x8BFA28", Offset = "0x8BFA28", VA = "0x8BFA28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000130")]
	[CompilerGenerated]
	private sealed class <WaitForDoorToClose>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Door <>4__this;

		[Token(Token = "0x170000CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600069D")]
			[Address(RVA = "0x8BFB2C", Offset = "0x8BFB2C", VA = "0x8BFB2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600069F")]
			[Address(RVA = "0x8BFB74", Offset = "0x8BFB74", VA = "0x8BFB74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x8BF8AC", Offset = "0x8BF8AC", VA = "0x8BF8AC")]
		[DebuggerHidden]
		public <WaitForDoorToClose>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x8BFA70", Offset = "0x8BFA70", VA = "0x8BFA70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x8BFA74", Offset = "0x8BFA74", VA = "0x8BFA74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0x8BFB34", Offset = "0x8BFB34", VA = "0x8BFB34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip OpenSound;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip CloseSound;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator animatorObject;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ArmController armController;

	[Token(Token = "0x170000C7")]
	public Vector3 DoorPos
	{
		[Token(Token = "0x600068A")]
		[Address(RVA = "0x8BF4C8", Offset = "0x8BF4C8", VA = "0x8BF4C8")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600068B")]
		[Address(RVA = "0x8BF4D4", Offset = "0x8BF4D4", VA = "0x8BF4D4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x8BF4E0", Offset = "0x8BF4E0", VA = "0x8BF4E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x8BF658", Offset = "0x8BF658", VA = "0x8BF658")]
	private void Start()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x8BF65C", Offset = "0x8BF65C", VA = "0x8BF65C")]
	public void Close()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x8BF764", Offset = "0x8BF764", VA = "0x8BF764")]
	public void Open()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x8BF7F0", Offset = "0x8BF7F0", VA = "0x8BF7F0")]
	public void OpenWithDelay()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x8BF810", Offset = "0x8BF810", VA = "0x8BF810")]
	[IteratorStateMachine(typeof(<WaitASec>d__13))]
	private IEnumerator WaitASec()
	{
		return null;
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x8BF6F0", Offset = "0x8BF6F0", VA = "0x8BF6F0")]
	[IteratorStateMachine(typeof(<WaitForDoorToClose>d__14))]
	private IEnumerator WaitForDoorToClose()
	{
		return null;
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x8BF8D4", Offset = "0x8BF8D4", VA = "0x8BF8D4")]
	public Door()
	{
	}
}
[Token(Token = "0x2000131")]
public class DtmfPlayer : MonoBehaviour
{
	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip clip697;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip clip770;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip clip852;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip clip941;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip clip1209;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip clip1336;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip clip1477;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip clip1633;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource a;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource b;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float stopTime;

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x8BFB7C", Offset = "0x8BFB7C", VA = "0x8BFB7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x8BFCB8", Offset = "0x8BFCB8", VA = "0x8BFCB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x8BFD1C", Offset = "0x8BFD1C", VA = "0x8BFD1C")]
	public void PlayDigit(char digit)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x8BFDB0", Offset = "0x8BFDB0", VA = "0x8BFDB0")]
	private AudioClip GetClipA(char digit)
	{
		return null;
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x8BFE64", Offset = "0x8BFE64", VA = "0x8BFE64")]
	private AudioClip GetClipB(char digit)
	{
		return null;
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x8BFCEC", Offset = "0x8BFCEC", VA = "0x8BFCEC")]
	public void Stop()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x8BFBB4", Offset = "0x8BFBB4", VA = "0x8BFBB4")]
	private AudioSource CreateAudio()
	{
		return null;
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x8BFF28", Offset = "0x8BFF28", VA = "0x8BFF28")]
	public DtmfPlayer()
	{
	}
}
[Token(Token = "0x2000132")]
[RequireComponent(typeof(AudioSource))]
public class AudioSourceRandomizer : MonoBehaviour
{
	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(-3f, 3f)]
	[SerializeField]
	private float minPitch;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[Range(-3f, 3f)]
	private float maxPitch;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	[SerializeField]
	private float minVolume;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[Range(0f, 1f)]
	private float maxVolume;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(-1f, 1f)]
	[SerializeField]
	private float minPan;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[Range(-1f, 1f)]
	private float maxPan;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 6f)]
	[SerializeField]
	private float positionRadius;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool randomizeOnPlay;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip[] audioClips;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource audioSource;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool playOnAwake;

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x8BFF38", Offset = "0x8BFF38", VA = "0x8BFF38")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x8C010C", Offset = "0x8C010C", VA = "0x8C010C")]
	public void PlaySound()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x8BFFD0", Offset = "0x8BFFD0", VA = "0x8BFFD0")]
	private void RandomizeAudioSource()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x8C013C", Offset = "0x8C013C", VA = "0x8C013C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x8C0168", Offset = "0x8C0168", VA = "0x8C0168")]
	public AudioSourceRandomizer()
	{
	}
}
[Token(Token = "0x2000133")]
public class Bloodstreaks : MonoBehaviour
{
	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material bloodstreakMaterial;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float bleedTime;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float bleedDelay;

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x8C0180", Offset = "0x8C0180", VA = "0x8C0180")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x8C01D8", Offset = "0x8C01D8", VA = "0x8C01D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x8C0274", Offset = "0x8C0274", VA = "0x8C0274")]
	public Bloodstreaks()
	{
	}
}
[Token(Token = "0x2000134")]
public class BrokenScreen : MonoBehaviour
{
	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ScreenController screenToBreak;

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x8C0288", Offset = "0x8C0288", VA = "0x8C0288")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x8C037C", Offset = "0x8C037C", VA = "0x8C037C")]
	public BrokenScreen()
	{
	}
}
[Token(Token = "0x2000135")]
[ExecuteInEditMode]
public class ClipVolumeMask : MonoBehaviour
{
	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material material;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 oldmin;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 oldmax;

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x8C0384", Offset = "0x8C0384", VA = "0x8C0384")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x8C05FC", Offset = "0x8C05FC", VA = "0x8C05FC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x8C065C", Offset = "0x8C065C", VA = "0x8C065C")]
	public ClipVolumeMask()
	{
	}
}
[Token(Token = "0x2000136")]
public class ColorCorrection : MonoBehaviour
{
	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal static ColorCorrection _instance;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture3D NeutralLUT;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	[SerializeField]
	private Texture3D _lutA;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[HideInInspector]
	private Texture3D _lutB;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private float _lutInterpolation;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material material;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isEnabled;

	[Token(Token = "0x170000CC")]
	public Texture3D CurrentLUT
	{
		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x8C0664", Offset = "0x8C0664", VA = "0x8C0664")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x8C066C", Offset = "0x8C066C", VA = "0x8C066C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public Texture3D LutA
	{
		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x8C0674", Offset = "0x8C0674", VA = "0x8C0674")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x8C067C", Offset = "0x8C067C", VA = "0x8C067C")]
		set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public Texture3D LutB
	{
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x8C06E4", Offset = "0x8C06E4", VA = "0x8C06E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x8C06EC", Offset = "0x8C06EC", VA = "0x8C06EC")]
		set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public float LutInterpolation
	{
		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x8C0754", Offset = "0x8C0754", VA = "0x8C0754")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x8C075C", Offset = "0x8C075C", VA = "0x8C075C")]
		set
		{
		}
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x8C07B8", Offset = "0x8C07B8", VA = "0x8C07B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x8C0BA0", Offset = "0x8C0BA0", VA = "0x8C0BA0")]
	public void ForceShaderUpdate()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x8C0AB0", Offset = "0x8C0AB0", VA = "0x8C0AB0")]
	private void CreateMaterial()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x8C0CB8", Offset = "0x8C0CB8", VA = "0x8C0CB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x8C0D48", Offset = "0x8C0D48", VA = "0x8C0D48")]
	public static void ResetLUT(float time = 0f, float delay = 0f, Ease easing = Ease.Linear, [Optional] Action callback)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x8C0DCC", Offset = "0x8C0DCC", VA = "0x8C0DCC")]
	public static void SetLUT(Texture3D newLut, float time, float delay = 0f, Ease easing = Ease.Linear, [Optional] Action callback)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x8C1178", Offset = "0x8C1178", VA = "0x8C1178")]
	private float AssignNextAvailableSlot(Texture3D newLut)
	{
		return default(float);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x8C1348", Offset = "0x8C1348", VA = "0x8C1348")]
	public ColorCorrection()
	{
	}
}
[Token(Token = "0x2000139")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class ColorCorrectionEffect : MonoBehaviour
{
	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x8C14A0", Offset = "0x8C14A0", VA = "0x8C14A0")]
	public ColorCorrectionEffect()
	{
	}
}
[Token(Token = "0x200013A")]
public class ConstrainChairRotation : MonoBehaviour
{
	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 originalRotation;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float originalYawOffset;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The max distance from the camera that the chair will match the player's rotation.")]
	[SerializeField]
	private float maxUpdateDistance;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float maxDegreesPerFrame;

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x8C14A8", Offset = "0x8C14A8", VA = "0x8C14A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x8C150C", Offset = "0x8C150C", VA = "0x8C150C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x8C1578", Offset = "0x8C1578", VA = "0x8C1578")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x8C1864", Offset = "0x8C1864", VA = "0x8C1864")]
	public ConstrainChairRotation()
	{
	}
}
[Token(Token = "0x200013B")]
public class ConstrainLightToCamera : MonoBehaviour
{
	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera camera;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 DefaultOrientation;

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x8C1878", Offset = "0x8C1878", VA = "0x8C1878")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x8C18E0", Offset = "0x8C18E0", VA = "0x8C18E0")]
	public ConstrainLightToCamera()
	{
	}
}
[Token(Token = "0x200013C")]
public class CreditsScreen : NukeObject
{
	[Token(Token = "0x200013D")]
	[CompilerGenerated]
	private sealed class <DoCredits>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreditsScreen <>4__this;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <transitionTime>5__3;

		[Token(Token = "0x170000D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006E0")]
			[Address(RVA = "0x8C26F8", Offset = "0x8C26F8", VA = "0x8C26F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E2")]
			[Address(RVA = "0x8C2740", Offset = "0x8C2740", VA = "0x8C2740", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x8C1FC8", Offset = "0x8C1FC8", VA = "0x8C1FC8")]
		[DebuggerHidden]
		public <DoCredits>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x8C2160", Offset = "0x8C2160", VA = "0x8C2160", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x8C2164", Offset = "0x8C2164", VA = "0x8C2164", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x8C2700", Offset = "0x8C2700", VA = "0x8C2700", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text NameField;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text NameFieldShadow;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text TitleField;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text TitleFieldShadow;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text EndField;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text EndFieldShadow;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SpriteRenderer backgroundSprite;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform CrawlRoot;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float CrawlRate;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform CreditsFooterObject;

	[Token(Token = "0x40006D2")]
	private const float titleTransitionTime = 0.5f;

	[Token(Token = "0x40006D3")]
	private const float titleStayTime = 2.5f;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<Credits> credits;

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x8C18E8", Offset = "0x8C18E8", VA = "0x8C18E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x8C1B68", Offset = "0x8C1B68", VA = "0x8C1B68")]
	private void ChangeThankYouForPlayingText()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x8C1F54", Offset = "0x8C1F54", VA = "0x8C1F54")]
	[IteratorStateMachine(typeof(<DoCredits>d__15))]
	private IEnumerator DoCredits()
	{
		return null;
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x8C1FF0", Offset = "0x8C1FF0", VA = "0x8C1FF0")]
	private void SetName(string name)
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x8C2040", Offset = "0x8C2040", VA = "0x8C2040")]
	private void SetTitle(string title)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x8C2090", Offset = "0x8C2090", VA = "0x8C2090")]
	private void SetTitleFontSize(int size)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x8C19B0", Offset = "0x8C19B0", VA = "0x8C19B0")]
	private void FadeTextTo(float alpha, float fadeTime = 0.5f)
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x8C20D0", Offset = "0x8C20D0", VA = "0x8C20D0", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x8C2144", Offset = "0x8C2144", VA = "0x8C2144", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x8C214C", Offset = "0x8C214C", VA = "0x8C214C", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x8C2150", Offset = "0x8C2150", VA = "0x8C2150")]
	public CreditsScreen()
	{
	}
}
[Serializable]
[Token(Token = "0x200013E")]
public class Credits
{
	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Title;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer Icon;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float StayTimeOverride;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float TransitionTimeOverride;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int TitleFontSize;

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x8C25E0", Offset = "0x8C25E0", VA = "0x8C25E0")]
	public void FadeIconTo(float alpha, float fadeTime)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x8C2748", Offset = "0x8C2748", VA = "0x8C2748")]
	public void OnFadeComplete()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x8C2790", Offset = "0x8C2790", VA = "0x8C2790")]
	public Credits()
	{
	}
}
[Token(Token = "0x200013F")]
[RequireComponent(typeof(AudioSource))]
public class DelayAudioStart : MonoBehaviour
{
	[Token(Token = "0x2000140")]
	[CompilerGenerated]
	private sealed class <OnStartAudio>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DelayAudioStart <>4__this;

		[Token(Token = "0x170000D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006EC")]
			[Address(RVA = "0x8C2A34", Offset = "0x8C2A34", VA = "0x8C2A34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006EE")]
			[Address(RVA = "0x8C2A7C", Offset = "0x8C2A7C", VA = "0x8C2A7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x8C28B0", Offset = "0x8C28B0", VA = "0x8C28B0")]
		[DebuggerHidden]
		public <OnStartAudio>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x8C28E0", Offset = "0x8C28E0", VA = "0x8C28E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x8C28E4", Offset = "0x8C28E4", VA = "0x8C28E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x8C2A3C", Offset = "0x8C2A3C", VA = "0x8C2A3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float Delay;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float Randomness;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audioSource;

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x8C27A0", Offset = "0x8C27A0", VA = "0x8C27A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x8C283C", Offset = "0x8C283C", VA = "0x8C283C")]
	[IteratorStateMachine(typeof(<OnStartAudio>d__4))]
	private IEnumerator OnStartAudio()
	{
		return null;
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x8C28D8", Offset = "0x8C28D8", VA = "0x8C28D8")]
	public DelayAudioStart()
	{
	}
}
[Token(Token = "0x2000141")]
public class DestroyObjectDelayed : MonoBehaviour
{
	[Token(Token = "0x2000142")]
	[CompilerGenerated]
	private sealed class <DoIt>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DestroyObjectDelayed <>4__this;

		[Token(Token = "0x170000D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006F5")]
			[Address(RVA = "0x8C2C44", Offset = "0x8C2C44", VA = "0x8C2C44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006F7")]
			[Address(RVA = "0x8C2C8C", Offset = "0x8C2C8C", VA = "0x8C2C8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x8C2B18", Offset = "0x8C2B18", VA = "0x8C2B18")]
		[DebuggerHidden]
		public <DoIt>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x8C2B48", Offset = "0x8C2B48", VA = "0x8C2B48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x8C2B4C", Offset = "0x8C2B4C", VA = "0x8C2B4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x8C2C4C", Offset = "0x8C2C4C", VA = "0x8C2C4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float delay;

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x8C2A84", Offset = "0x8C2A84", VA = "0x8C2A84")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x8C2AA4", Offset = "0x8C2AA4", VA = "0x8C2AA4")]
	[IteratorStateMachine(typeof(<DoIt>d__2))]
	private IEnumerator DoIt()
	{
		return null;
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x8C2B40", Offset = "0x8C2B40", VA = "0x8C2B40")]
	public DestroyObjectDelayed()
	{
	}
}
[Token(Token = "0x2000143")]
public class DestroyOnLoad : MonoBehaviour
{
	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x8C2C94", Offset = "0x8C2C94", VA = "0x8C2C94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x8C2D00", Offset = "0x8C2D00", VA = "0x8C2D00")]
	public DestroyOnLoad()
	{
	}
}
[Token(Token = "0x2000144")]
public class DisableOnAwake : MonoBehaviour
{
	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x8C2D08", Offset = "0x8C2D08", VA = "0x8C2D08")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x8C2D2C", Offset = "0x8C2D2C", VA = "0x8C2D2C")]
	public DisableOnAwake()
	{
	}
}
[Token(Token = "0x2000145")]
[ExecuteInEditMode]
public class EffectsPlatform : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000146")]
	[Flags]
	public enum PlatformHardware
	{
		[Token(Token = "0x40006ED")]
		LowEndVR = 1,
		[Token(Token = "0x40006EE")]
		LowEnd = 2,
		[Token(Token = "0x40006EF")]
		HighEndVR = 4,
		[Token(Token = "0x40006F0")]
		HighEnd = 8,
		[Token(Token = "0x40006F1")]
		Everything = 0xFFFF
	}

	[Serializable]
	[Token(Token = "0x2000147")]
	public enum PlatformComparison
	{
		[Token(Token = "0x40006F3")]
		Not,
		[Token(Token = "0x40006F4")]
		Equals,
		[Token(Token = "0x40006F5")]
		BetterThan,
		[Token(Token = "0x40006F6")]
		BetterThanOrEqualTo,
		[Token(Token = "0x40006F7")]
		WorseThan,
		[Token(Token = "0x40006F8")]
		WorseThanOrEqualTo
	}

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlatformHardware _hardwareType;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public PlatformHardware EmulatedHardwareType;

	[Token(Token = "0x170000D6")]
	public static PlatformHardware HardwareType
	{
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x8C2D34", Offset = "0x8C2D34", VA = "0x8C2D34")]
		get
		{
			return default(PlatformHardware);
		}
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x8C2D8C", Offset = "0x8C2D8C", VA = "0x8C2D8C")]
		set
		{
		}
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x8C2DE8", Offset = "0x8C2DE8", VA = "0x8C2DE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x8C0A24", Offset = "0x8C0A24", VA = "0x8C0A24")]
	public static bool IsVR()
	{
		return default(bool);
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x8C2E5C", Offset = "0x8C2E5C", VA = "0x8C2E5C")]
	public static bool HasHeadTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x8C2EBC", Offset = "0x8C2EBC", VA = "0x8C2EBC")]
	public static bool PlatformMatch(PlatformHardware targetedPlatform, PlatformComparison comparisonType = PlatformComparison.Equals)
	{
		return default(bool);
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x8C2F20", Offset = "0x8C2F20", VA = "0x8C2F20")]
	public static bool PlatformMatch(int targetedPlatformMask, PlatformComparison comparisonType = PlatformComparison.Equals)
	{
		return default(bool);
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x8C30F0", Offset = "0x8C30F0", VA = "0x8C30F0")]
	public EffectsPlatform()
	{
	}
}
[Token(Token = "0x2000148")]
public class EndingMenu : MonoBehaviour
{
	[Token(Token = "0x2000149")]
	[CompilerGenerated]
	private sealed class <EndingBloodyBaby>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndingMenu <>4__this;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Hammer <hammer>5__2;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HammerDrawer <hammerDrawerWidget>5__3;

		[Token(Token = "0x170000D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000718")]
			[Address(RVA = "0x8C3E84", Offset = "0x8C3E84", VA = "0x8C3E84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600071A")]
			[Address(RVA = "0x8C3ECC", Offset = "0x8C3ECC", VA = "0x8C3ECC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x8C3630", Offset = "0x8C3630", VA = "0x8C3630")]
		[DebuggerHidden]
		public <EndingBloodyBaby>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0x8C3CA8", Offset = "0x8C3CA8", VA = "0x8C3CA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x8C3CAC", Offset = "0x8C3CAC", VA = "0x8C3CAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x8C3E8C", Offset = "0x8C3E8C", VA = "0x8C3E8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform menuRoot;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 openScale;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isOpen;

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x8C3144", Offset = "0x8C3144", VA = "0x8C3144")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x8C3230", Offset = "0x8C3230", VA = "0x8C3230")]
	private void Update()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x8BE7C4", Offset = "0x8BE7C4", VA = "0x8BE7C4")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x8C32AC", Offset = "0x8C32AC", VA = "0x8C32AC")]
	public void Close()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x8C3438", Offset = "0x8C3438", VA = "0x8C3438")]
	private void Hide()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x8C339C", Offset = "0x8C339C", VA = "0x8C339C")]
	public void Open()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x8C3464", Offset = "0x8C3464", VA = "0x8C3464")]
	public void DoEnding(int endingIndex)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x8C34EC", Offset = "0x8C34EC", VA = "0x8C34EC")]
	public void DoEndingCoffee(int endingIndex)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x8C359C", Offset = "0x8C359C", VA = "0x8C359C")]
	public void DoEndingBloodyBaby(int endingIndex)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x8C35BC", Offset = "0x8C35BC", VA = "0x8C35BC")]
	[IteratorStateMachine(typeof(<EndingBloodyBaby>d__12))]
	private IEnumerator EndingBloodyBaby(int endingIndex)
	{
		return null;
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x8C3658", Offset = "0x8C3658", VA = "0x8C3658")]
	public void DoEndingPapersPlease()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x8C39D4", Offset = "0x8C39D4", VA = "0x8C39D4")]
	public void ClearSave()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x8C3A28", Offset = "0x8C3A28", VA = "0x8C3A28")]
	public void ToggleCrosshair()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x8C3B08", Offset = "0x8C3B08", VA = "0x8C3B08")]
	public void ToggleFPSCounter()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x8C3BB4", Offset = "0x8C3BB4", VA = "0x8C3BB4")]
	public void ToggleLookMode()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x8C3CA0", Offset = "0x8C3CA0", VA = "0x8C3CA0")]
	public EndingMenu()
	{
	}
}
[Token(Token = "0x200014A")]
public class FutureFX : MonoBehaviour
{
	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material materialRef;

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x8C3ED4", Offset = "0x8C3ED4", VA = "0x8C3ED4")]
	private void Start()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x8C3FD0", Offset = "0x8C3FD0", VA = "0x8C3FD0")]
	public FutureFX()
	{
	}
}
[Token(Token = "0x200014B")]
public class Hamster : MonoBehaviour
{
	[Token(Token = "0x200014C")]
	public enum Behavior
	{
		[Token(Token = "0x4000707")]
		Run,
		[Token(Token = "0x4000708")]
		Idle
	}

	[Token(Token = "0x200014D")]
	[CompilerGenerated]
	private sealed class <Squeak>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hamster <>4__this;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int amount;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__2;

		[Token(Token = "0x170000D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000727")]
			[Address(RVA = "0x8C44B0", Offset = "0x8C44B0", VA = "0x8C44B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000729")]
			[Address(RVA = "0x8C44F8", Offset = "0x8C44F8", VA = "0x8C44F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x8C4228", Offset = "0x8C4228", VA = "0x8C4228")]
		[DebuggerHidden]
		public <Squeak>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x8C4310", Offset = "0x8C4310", VA = "0x8C4310", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x8C4314", Offset = "0x8C4314", VA = "0x8C4314", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x8C44B8", Offset = "0x8C44B8", VA = "0x8C44B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014E")]
	[CompilerGenerated]
	private sealed class <HideMe>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hamster <>4__this;

		[Token(Token = "0x170000DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600072D")]
			[Address(RVA = "0x8C45C4", Offset = "0x8C45C4", VA = "0x8C45C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600072F")]
			[Address(RVA = "0x8C460C", Offset = "0x8C460C", VA = "0x8C460C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x8C42E0", Offset = "0x8C42E0", VA = "0x8C42E0")]
		[DebuggerHidden]
		public <HideMe>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x8C4500", Offset = "0x8C4500", VA = "0x8C4500", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x8C4504", Offset = "0x8C4504", VA = "0x8C4504", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x8C45CC", Offset = "0x8C45CC", VA = "0x8C45CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Behavior spawnBehavior;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource audioSource;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip[] squeaks;

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x8C3FD8", Offset = "0x8C3FD8", VA = "0x8C3FD8")]
	private void Start()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x8C4070", Offset = "0x8C4070", VA = "0x8C4070")]
	public void Restart()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x8C4094", Offset = "0x8C4094", VA = "0x8C4094")]
	public void Escape()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x8C4130", Offset = "0x8C4130", VA = "0x8C4130")]
	[IteratorStateMachine(typeof(<Squeak>d__8))]
	private IEnumerator Squeak(int amount)
	{
		return null;
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x8C4250", Offset = "0x8C4250", VA = "0x8C4250")]
	public void Run()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x8C41B4", Offset = "0x8C41B4", VA = "0x8C41B4")]
	[IteratorStateMachine(typeof(<HideMe>d__10))]
	private IEnumerator HideMe()
	{
		return null;
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x8C4308", Offset = "0x8C4308", VA = "0x8C4308")]
	public Hamster()
	{
	}
}
[Token(Token = "0x200014F")]
[RequireComponent(typeof(Light))]
public class LightFlicker : MonoBehaviour
{
	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _glowSphereRoot;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _flickerFrequency;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _frequencyVariation;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _minIntensityMultiplier;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _maxIntensityMultiplier;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _intensityVariation;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Light _light;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _initialIntensity;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _startScale;

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x8C4614", Offset = "0x8C4614", VA = "0x8C4614")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x8C4778", Offset = "0x8C4778", VA = "0x8C4778")]
	private void DoFlicker()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x8C477C", Offset = "0x8C477C", VA = "0x8C477C")]
	public LightFlicker()
	{
	}
}
[Token(Token = "0x2000150")]
[ExecuteInEditMode]
public class LightingTheme : MonoBehaviour
{
	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private List<LightingThemeData> _dynamicLightData;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer[] _lumigons;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private float _lightIntensityMultiplier;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color AmbientColor;

	[Token(Token = "0x170000DD")]
	public float LightIntensity
	{
		[Token(Token = "0x6000736")]
		[Address(RVA = "0x8C4B20", Offset = "0x8C4B20", VA = "0x8C4B20")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000735")]
		[Address(RVA = "0x8C47C8", Offset = "0x8C47C8", VA = "0x8C47C8")]
		set
		{
		}
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x8C4B28", Offset = "0x8C4B28", VA = "0x8C4B28")]
	public void SerializeLightData(Light incomingLight, float intensity, LightingThemeDynamicLight themeLight)
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x8C4CDC", Offset = "0x8C4CDC", VA = "0x8C4CDC")]
	private LightingThemeData GetDataForLight(UnityEngine.Object thisLight)
	{
		return null;
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x8C4E8C", Offset = "0x8C4E8C", VA = "0x8C4E8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x8C4E94", Offset = "0x8C4E94", VA = "0x8C4E94")]
	public void ForceUpdate()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x8C5014", Offset = "0x8C5014", VA = "0x8C5014")]
	public void PreviewAmbient()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x8C5038", Offset = "0x8C5038", VA = "0x8C5038")]
	public LightingTheme()
	{
	}
}
[Serializable]
[Token(Token = "0x2000151")]
public class LightingThemeData
{
	[Token(Token = "0x170000DE")]
	public LightingThemeDynamicLight ThemeLight
	{
		[Token(Token = "0x600073D")]
		[Address(RVA = "0x8C50C8", Offset = "0x8C50C8", VA = "0x8C50C8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600073E")]
		[Address(RVA = "0x8C50D0", Offset = "0x8C50D0", VA = "0x8C50D0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public Light Light
	{
		[Token(Token = "0x600073F")]
		[Address(RVA = "0x8C50D8", Offset = "0x8C50D8", VA = "0x8C50D8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000740")]
		[Address(RVA = "0x8C50E0", Offset = "0x8C50E0", VA = "0x8C50E0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public Renderer Lumigon
	{
		[Token(Token = "0x6000741")]
		[Address(RVA = "0x8C50E8", Offset = "0x8C50E8", VA = "0x8C50E8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000742")]
		[Address(RVA = "0x8C50F0", Offset = "0x8C50F0", VA = "0x8C50F0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x8C4E84", Offset = "0x8C4E84", VA = "0x8C4E84")]
	public LightingThemeData()
	{
	}
}
[Token(Token = "0x2000152")]
[RequireComponent(typeof(Light))]
[ExecuteInEditMode]
public class LightingThemeDynamicLight : MonoBehaviour
{
	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LightRenderMode _lightRenderMode;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	[SerializeField]
	private float _serializedIntensity;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private float _serializedShadowStrength;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	[SerializeField]
	private float _intensityMultiplier;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light _light;

	[Token(Token = "0x170000E1")]
	public float IntensityMultiplier
	{
		[Token(Token = "0x6000744")]
		[Address(RVA = "0x8C50F8", Offset = "0x8C50F8", VA = "0x8C50F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000745")]
		[Address(RVA = "0x8C5100", Offset = "0x8C5100", VA = "0x8C5100")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public float SerializedIntensity
	{
		[Token(Token = "0x6000746")]
		[Address(RVA = "0x8C5108", Offset = "0x8C5108", VA = "0x8C5108")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000747")]
		[Address(RVA = "0x8C5110", Offset = "0x8C5110", VA = "0x8C5110")]
		set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public float SerializedShadowStrength
	{
		[Token(Token = "0x6000748")]
		[Address(RVA = "0x8C5118", Offset = "0x8C5118", VA = "0x8C5118")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000749")]
		[Address(RVA = "0x8C5120", Offset = "0x8C5120", VA = "0x8C5120")]
		set
		{
		}
	}

	[Token(Token = "0x170000E4")]
	public float ScaledIntensity
	{
		[Token(Token = "0x600074A")]
		[Address(RVA = "0x8C4B04", Offset = "0x8C4B04", VA = "0x8C4B04")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000E5")]
	public float ScaledShadowStrength
	{
		[Token(Token = "0x600074B")]
		[Address(RVA = "0x8C4B14", Offset = "0x8C4B14", VA = "0x8C4B14")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x8C5128", Offset = "0x8C5128", VA = "0x8C5128")]
	private void Awake()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x8C4F28", Offset = "0x8C4F28", VA = "0x8C4F28")]
	public void SerializeLightData()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x8C51A4", Offset = "0x8C51A4", VA = "0x8C51A4")]
	public LightingThemeDynamicLight()
	{
	}
}
[Token(Token = "0x2000153")]
public class LightmapInterpolationManager : MonoBehaviour
{
	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LightingTheme _themeA;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LightingTheme _themeB;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _themeCrossfade;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _globalLightIntensity;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LightingTheme ScreenLightingTheme;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LightingTheme DarkRoomLightingTheme;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LightingTheme DarkRoomLightingTheme2;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LightingTheme CthulhuLightingTheme;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LightingTheme PastLightingTheme;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LightingTheme PentagramLightingTheme;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int chosenLightRoom;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float ScreenLightIntensity;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float _colorOverrideAmount;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float _diffuseOverrideAmount;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float _blacklightOverride;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private Color _colorOverride;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private Color _diffuseOverride;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool _dirty;

	[Token(Token = "0x170000E6")]
	public LightingTheme ThemeA
	{
		[Token(Token = "0x600074F")]
		[Address(RVA = "0x8C51AC", Offset = "0x8C51AC", VA = "0x8C51AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000750")]
		[Address(RVA = "0x8C51B4", Offset = "0x8C51B4", VA = "0x8C51B4")]
		set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public LightingTheme ThemeB
	{
		[Token(Token = "0x6000751")]
		[Address(RVA = "0x8C5524", Offset = "0x8C5524", VA = "0x8C5524")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000752")]
		[Address(RVA = "0x8C552C", Offset = "0x8C552C", VA = "0x8C552C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public float ThemeCrossfade
	{
		[Token(Token = "0x6000753")]
		[Address(RVA = "0x8C5548", Offset = "0x8C5548", VA = "0x8C5548")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000754")]
		[Address(RVA = "0x8C5550", Offset = "0x8C5550", VA = "0x8C5550")]
		set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public float GlobalLightIntensity
	{
		[Token(Token = "0x6000755")]
		[Address(RVA = "0x8C5558", Offset = "0x8C5558", VA = "0x8C5558")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000756")]
		[Address(RVA = "0x8C5560", Offset = "0x8C5560", VA = "0x8C5560")]
		set
		{
		}
	}

	[Token(Token = "0x170000EA")]
	public float ColorOverrideAmount
	{
		[Token(Token = "0x6000757")]
		[Address(RVA = "0x8C5568", Offset = "0x8C5568", VA = "0x8C5568")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000758")]
		[Address(RVA = "0x8C5570", Offset = "0x8C5570", VA = "0x8C5570")]
		set
		{
		}
	}

	[Token(Token = "0x170000EB")]
	public float DiffuseOverrideAmount
	{
		[Token(Token = "0x6000759")]
		[Address(RVA = "0x8C55CC", Offset = "0x8C55CC", VA = "0x8C55CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600075A")]
		[Address(RVA = "0x8C55D4", Offset = "0x8C55D4", VA = "0x8C55D4")]
		set
		{
		}
	}

	[Token(Token = "0x170000EC")]
	public float BlacklightOverride
	{
		[Token(Token = "0x600075B")]
		[Address(RVA = "0x8C5630", Offset = "0x8C5630", VA = "0x8C5630")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600075C")]
		[Address(RVA = "0x8C5638", Offset = "0x8C5638", VA = "0x8C5638")]
		set
		{
		}
	}

	[Token(Token = "0x170000ED")]
	public Color ColorOverride
	{
		[Token(Token = "0x600075D")]
		[Address(RVA = "0x8C5694", Offset = "0x8C5694", VA = "0x8C5694")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600075E")]
		[Address(RVA = "0x8C56A0", Offset = "0x8C56A0", VA = "0x8C56A0")]
		set
		{
		}
	}

	[Token(Token = "0x170000EE")]
	public Color DiffuseOverride
	{
		[Token(Token = "0x600075F")]
		[Address(RVA = "0x8C5720", Offset = "0x8C5720", VA = "0x8C5720")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000760")]
		[Address(RVA = "0x8C572C", Offset = "0x8C572C", VA = "0x8C572C")]
		set
		{
		}
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x8C51D0", Offset = "0x8C51D0", VA = "0x8C51D0")]
	public void UpdateDynamicLights()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x8C57AC", Offset = "0x8C57AC", VA = "0x8C57AC")]
	public void ClearUnusedLightThemes()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x8C5938", Offset = "0x8C5938", VA = "0x8C5938")]
	[UsedImplicitly]
	private void Start()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x8C593C", Offset = "0x8C593C", VA = "0x8C593C")]
	[UsedImplicitly]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x8C5B10", Offset = "0x8C5B10", VA = "0x8C5B10")]
	public void ForceUpdateLights()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x8C5958", Offset = "0x8C5958", VA = "0x8C5958")]
	public void ForceUpdateShaders()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x8C5BA8", Offset = "0x8C5BA8", VA = "0x8C5BA8")]
	public LightmapInterpolationManager()
	{
	}
}
[Token(Token = "0x2000154")]
public class NecroGhost : MonoBehaviour
{
	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject eyes;

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x8C6BD4", Offset = "0x8C6BD4", VA = "0x8C6BD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x8C6BF4", Offset = "0x8C6BF4", VA = "0x8C6BF4")]
	public void ShowEyes()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x8C6C14", Offset = "0x8C6C14", VA = "0x8C6C14")]
	public NecroGhost()
	{
	}
}
[Token(Token = "0x2000155")]
[DisallowMultipleComponent]
public class PlatformTargetedObject : MonoBehaviour
{
	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int TargetedPlatformMask;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public EffectsPlatform.PlatformComparison ComparisonType;

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x8C6C1C", Offset = "0x8C6C1C", VA = "0x8C6C1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x8C6CD0", Offset = "0x8C6CD0", VA = "0x8C6CD0")]
	public PlatformTargetedObject()
	{
	}
}
[Token(Token = "0x2000156")]
public class RandomBlink : MonoBehaviour
{
	[Token(Token = "0x2000157")]
	[CompilerGenerated]
	private sealed class <OnTick>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RandomBlink <>4__this;

		[Token(Token = "0x170000F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600077A")]
			[Address(RVA = "0x8C7198", Offset = "0x8C7198", VA = "0x8C7198", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600077C")]
			[Address(RVA = "0x8C71E0", Offset = "0x8C71E0", VA = "0x8C71E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x8C6F0C", Offset = "0x8C6F0C", VA = "0x8C6F0C")]
		[DebuggerHidden]
		public <OnTick>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x8C6F78", Offset = "0x8C6F78", VA = "0x8C6F78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x8C6F7C", Offset = "0x8C6F7C", VA = "0x8C6F7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x8C71A0", Offset = "0x8C71A0", VA = "0x8C71A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float DelayStart;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float RandomMin;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float RandomMax;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light _light;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float blinkSpeedScale;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isHappyDemonEnding;

	[Token(Token = "0x170000EF")]
	public float BlinkSpeedScale
	{
		[Token(Token = "0x600076D")]
		[Address(RVA = "0x8C6CE4", Offset = "0x8C6CE4", VA = "0x8C6CE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600076E")]
		[Address(RVA = "0x8C6CEC", Offset = "0x8C6CEC", VA = "0x8C6CEC")]
		set
		{
		}
	}

	[Token(Token = "0x170000F0")]
	public Renderer MeshRenderer
	{
		[Token(Token = "0x600076F")]
		[Address(RVA = "0x8C6D50", Offset = "0x8C6D50", VA = "0x8C6D50")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000770")]
		[Address(RVA = "0x8C6D58", Offset = "0x8C6D58", VA = "0x8C6D58")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x8C6D60", Offset = "0x8C6D60", VA = "0x8C6D60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x8C6DF0", Offset = "0x8C6DF0", VA = "0x8C6DF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x8C6F04", Offset = "0x8C6F04", VA = "0x8C6F04")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x8C6E90", Offset = "0x8C6E90", VA = "0x8C6E90")]
	[IteratorStateMachine(typeof(<OnTick>d__16))]
	private IEnumerator OnTick()
	{
		return null;
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x8C6F34", Offset = "0x8C6F34", VA = "0x8C6F34")]
	public void SetHappyDemonLights(bool isHDEnding)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x8C6F68", Offset = "0x8C6F68", VA = "0x8C6F68")]
	public RandomBlink()
	{
	}
}
[Token(Token = "0x2000158")]
[RequireComponent(typeof(AudioSource))]
public class RandomLoopingAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000159")]
	[CompilerGenerated]
	private sealed class <OnStartAudio>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RandomLoopingAudioSource <>4__this;

		[Token(Token = "0x170000F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000785")]
			[Address(RVA = "0x8C7488", Offset = "0x8C7488", VA = "0x8C7488", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000787")]
			[Address(RVA = "0x8C74D0", Offset = "0x8C74D0", VA = "0x8C74D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x8C7328", Offset = "0x8C7328", VA = "0x8C7328")]
		[DebuggerHidden]
		public <OnStartAudio>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x8C7388", Offset = "0x8C7388", VA = "0x8C7388", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x8C738C", Offset = "0x8C738C", VA = "0x8C738C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x8C7490", Offset = "0x8C7490", VA = "0x8C7490", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float minRandomness;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float maxRandomness;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audioSource;

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x8C71E8", Offset = "0x8C71E8", VA = "0x8C71E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x8C7294", Offset = "0x8C7294", VA = "0x8C7294")]
	public void Play()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x8C72B4", Offset = "0x8C72B4", VA = "0x8C72B4")]
	[IteratorStateMachine(typeof(<OnStartAudio>d__5))]
	public IEnumerator OnStartAudio()
	{
		return null;
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x8C7350", Offset = "0x8C7350", VA = "0x8C7350")]
	public void Stop(bool immediately = false)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x8C7380", Offset = "0x8C7380", VA = "0x8C7380")]
	public RandomLoopingAudioSource()
	{
	}
}
[Token(Token = "0x200015A")]
[RequireComponent(typeof(AudioSource))]
public class RandomSoundFXEmitter : MonoBehaviour
{
	[Token(Token = "0x200015B")]
	[CompilerGenerated]
	private sealed class <PlaySoundEffect>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RandomSoundFXEmitter <>4__this;

		[Token(Token = "0x170000F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600078F")]
			[Address(RVA = "0x8C78B0", Offset = "0x8C78B0", VA = "0x8C78B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000791")]
			[Address(RVA = "0x8C78F8", Offset = "0x8C78F8", VA = "0x8C78F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x8C7660", Offset = "0x8C7660", VA = "0x8C7660")]
		[DebuggerHidden]
		public <PlaySoundEffect>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x8C76EC", Offset = "0x8C76EC", VA = "0x8C76EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x8C76F0", Offset = "0x8C76F0", VA = "0x8C76F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x8C78B8", Offset = "0x8C78B8", VA = "0x8C78B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float frequencyMin;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float frequencyMax;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float pitchMin;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float pitchMax;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float volumeMin;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumeMax;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float radius;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool playOnAwake;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip[] audioClips;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource audioSource;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 startPosition;

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x8C74D8", Offset = "0x8C74D8", VA = "0x8C74D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x8C75EC", Offset = "0x8C75EC", VA = "0x8C75EC")]
	[IteratorStateMachine(typeof(<PlaySoundEffect>d__12))]
	private IEnumerator PlaySoundEffect()
	{
		return null;
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x8C7688", Offset = "0x8C7688", VA = "0x8C7688")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x8C76D4", Offset = "0x8C76D4", VA = "0x8C76D4")]
	public RandomSoundFXEmitter()
	{
	}
}
[Token(Token = "0x200015C")]
public class RigidbodyInteractions : MonoBehaviour
{
	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Rigidbody[] _rigidbodies;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] _originalPositions;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion[] _originalRotations;

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x8C7900", Offset = "0x8C7900", VA = "0x8C7900")]
	private void Start()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x8C7A90", Offset = "0x8C7A90", VA = "0x8C7A90")]
	public void AddGlobalForce(Vector3 origin, float strength = 200f)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x8C7BEC", Offset = "0x8C7BEC", VA = "0x8C7BEC")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x8C7CF0", Offset = "0x8C7CF0", VA = "0x8C7CF0")]
	public void ReturnToStartPositions()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x8C7EEC", Offset = "0x8C7EEC", VA = "0x8C7EEC")]
	public void UseGravityOnAll()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x8C7F78", Offset = "0x8C7F78", VA = "0x8C7F78")]
	public RigidbodyInteractions()
	{
	}
}
[Token(Token = "0x200015D")]
public class SceneLighting : MonoBehaviour
{
	[Token(Token = "0x200015E")]
	private struct LightSettings
	{
		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool FogEnabled;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color FogColor;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public FogMode FogMode;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FogDensity;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FogStart;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float FogEnd;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture3D prevLutTexture;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool blacklightOn;
	}

	[Token(Token = "0x2000161")]
	[CompilerGenerated]
	private sealed class <StrobeLighting>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float strobeSpeed;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float accelerationRate;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startSpeed;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <nextFlicker>5__2;

		[Token(Token = "0x170000F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E7")]
			[Address(RVA = "0x8CCD24", Offset = "0x8CCD24", VA = "0x8CCD24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E9")]
			[Address(RVA = "0x8CCD6C", Offset = "0x8CCD6C", VA = "0x8CCD6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x8C8BAC", Offset = "0x8C8BAC", VA = "0x8C8BAC")]
		[DebuggerHidden]
		public <StrobeLighting>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x8CCB7C", Offset = "0x8CCB7C", VA = "0x8CCB7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x8CCB80", Offset = "0x8CCB80", VA = "0x8CCB80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x8CCD2C", Offset = "0x8CCD2C", VA = "0x8CCD2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LightingTheme OverheadLighting;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LightingTheme DarkRoom;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LightingTheme RedAlert;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LightingTheme CampFire;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LightingTheme ScreenLighting;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Ease PauseFadeInEase;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Shader blacklightShader;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Shader blacklightShaderNoStencil;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SceneLighting _instance;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LightmapInterpolationManager lightmapInterpolation;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject[] blacklightDecals;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool blacklightOn;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LightSettings prevLightSettings;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Tween redAlertTween;

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x8C7F80", Offset = "0x8C7F80", VA = "0x8C7F80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x8C8314", Offset = "0x8C8314", VA = "0x8C8314")]
	private void ToggleBlacklightDecals(bool show)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x8C837C", Offset = "0x8C837C", VA = "0x8C837C")]
	public static void CancelCallbacks()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x8C8400", Offset = "0x8C8400", VA = "0x8C8400")]
	public static void ResetLighting()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x8C8708", Offset = "0x8C8708", VA = "0x8C8708")]
	public static void ToggleBlacklight(bool blacklightOn)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x8C8A2C", Offset = "0x8C8A2C", VA = "0x8C8A2C")]
	internal static void StartCampfire()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x8C8AA0", Offset = "0x8C8AA0", VA = "0x8C8AA0")]
	public static void StartStrobe(float strobeSpeed = 0.1f, float accelerationRate = 0f, float startSpeed = 0.1f)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x8C8B28", Offset = "0x8C8B28", VA = "0x8C8B28")]
	[IteratorStateMachine(typeof(<StrobeLighting>d__21))]
	private static IEnumerator StrobeLighting(float strobeSpeed, float accelerationRate, float startSpeed)
	{
		return null;
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x8C8BD4", Offset = "0x8C8BD4", VA = "0x8C8BD4")]
	public static void StopStrobe()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x8C8CB8", Offset = "0x8C8CB8", VA = "0x8C8CB8")]
	public static void StartRedAlert(float strobeTime = 1f)
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x8C89C0", Offset = "0x8C89C0", VA = "0x8C89C0")]
	public static void StopRedAlert()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x8C8EA4", Offset = "0x8C8EA4", VA = "0x8C8EA4")]
	public static void StartDarkRoom(float time = 0.5f, float delay = 0f)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x8C90BC", Offset = "0x8C90BC", VA = "0x8C90BC")]
	public static void StartDarkRoom2(float time = 0.5f, float delay = 0f)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x8C92D4", Offset = "0x8C92D4", VA = "0x8C92D4")]
	public static void StartCthulhuRoom(float time = 0.5f, float delay = 0f)
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x8C94EC", Offset = "0x8C94EC", VA = "0x8C94EC")]
	public static void StartPastRoom(float time = 0.5f, float delay = 0f)
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x8C9704", Offset = "0x8C9704", VA = "0x8C9704")]
	public static void StartPentagramRoom(float time = 0.5f, float delay = 0f)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x8C991C", Offset = "0x8C991C", VA = "0x8C991C")]
	public static void ChangeScreenIntensity(float newIntensity, float time = 0.5f, float delay = 0f)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x8C9B2C", Offset = "0x8C9B2C", VA = "0x8C9B2C")]
	public static void StartOverheadLighting(float time = 0.5f, float delay = 0f)
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x8C9D54", Offset = "0x8C9D54", VA = "0x8C9D54")]
	public static void FlickerLights(float time)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x8CA02C", Offset = "0x8CA02C", VA = "0x8CA02C")]
	public static void FlashWhite()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x8C8548", Offset = "0x8C8548", VA = "0x8C8548")]
	private float SetThemeToAvailableSlot(LightingTheme theme)
	{
		return default(float);
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x8CA260", Offset = "0x8CA260", VA = "0x8CA260")]
	public void ToggleEditorDecals()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x8CA4A8", Offset = "0x8CA4A8", VA = "0x8CA4A8")]
	internal static void TweenDiffuseOverride(float time, Color color, float overrideAmount, float delay = 0f, [Optional] Action callback)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x8CA7AC", Offset = "0x8CA7AC", VA = "0x8CA7AC")]
	internal static void FadeOut(float time, Color color, float delay = 0f, [Optional] Action callback, bool ignoreTimescale = false)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x8CAAF4", Offset = "0x8CAAF4", VA = "0x8CAAF4")]
	internal static void FadeIn(float time, float delay = 0f, [Optional] Action callback, bool ignoreTimescale = false)
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x8CADB4", Offset = "0x8CADB4", VA = "0x8CADB4")]
	internal static void TweenFog(float time, Color color, float density, float delay = 0f)
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x8CAFF4", Offset = "0x8CAFF4", VA = "0x8CAFF4")]
	internal static void FadeOutPause(float duration, Action onComplete)
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x8CB7EC", Offset = "0x8CB7EC", VA = "0x8CB7EC")]
	internal static void FadeInPause(float duration, Action onComplete)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x8CBECC", Offset = "0x8CBECC", VA = "0x8CBECC")]
	public SceneLighting()
	{
	}
}
[Token(Token = "0x2000167")]
public class SceneObjectToggler : MonoBehaviour
{
	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Renderer> consoleRenderers;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Renderer> cachedRenderers;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Renderer> happyDemonObjects;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Text> cachedText;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<GameObject> blinkingLights;

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x8CCEA4", Offset = "0x8CCEA4", VA = "0x8CCEA4")]
	public void Start()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x8CD1BC", Offset = "0x8CD1BC", VA = "0x8CD1BC")]
	public void RestoreScene()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x8CD534", Offset = "0x8CD534", VA = "0x8CD534")]
	public void HideScene()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x8CD844", Offset = "0x8CD844", VA = "0x8CD844")]
	public void HideHappyDemonRenderers()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x8CDB0C", Offset = "0x8CDB0C", VA = "0x8CDB0C")]
	public void RestoreHappyDemonRenderers()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x8CD5A8", Offset = "0x8CD5A8", VA = "0x8CD5A8")]
	private void TurnOffAndCacheRenderers(Renderer[] renderers)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x8CDDD4", Offset = "0x8CDDD4", VA = "0x8CDDD4")]
	public SceneObjectToggler()
	{
	}
}
[Token(Token = "0x2000168")]
public class SpinObject : MonoBehaviour
{
	[Token(Token = "0x2000169")]
	public enum Axis
	{
		[Token(Token = "0x40007B9")]
		Undefined,
		[Token(Token = "0x40007BA")]
		X,
		[Token(Token = "0x40007BB")]
		Y,
		[Token(Token = "0x40007BC")]
		Z
	}

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Axis SpinAxis;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Space RotationSpace;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeToMaxSpeed;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float currentSpeed;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float defaultSpeed;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fromSpeed;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float accelerationTimer;

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x8CDF54", Offset = "0x8CDF54", VA = "0x8CDF54")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x8CDF70", Offset = "0x8CDF70", VA = "0x8CDF70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x8CDF88", Offset = "0x8CDF88", VA = "0x8CDF88")]
	public void SetNewSpeed(float newSpeed, float timeToNewSpeed)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x8CDFA0", Offset = "0x8CDFA0", VA = "0x8CDFA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x8CE17C", Offset = "0x8CE17C", VA = "0x8CE17C")]
	public SpinObject()
	{
	}
}
[Serializable]
[Token(Token = "0x200016A")]
public class EndingInfo
{
	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isUnlocked;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip music;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh posterMesh;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 posterMeshRotation;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BaseEnding prefab;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	internal Ending ending;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	internal EndingPoster poster;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	internal Renderer light;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material tempShowcaseMaterial;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float MusicVolume;

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x8CE190", Offset = "0x8CE190", VA = "0x8CE190")]
	public void BeginShowcase(PosterShowcase posterShowcase)
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x8CE63C", Offset = "0x8CE63C", VA = "0x8CE63C")]
	public void EndShowcase(PosterShowcase posterShowcase)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x8CE840", Offset = "0x8CE840", VA = "0x8CE840")]
	public void InitFlair()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x8CE9CC", Offset = "0x8CE9CC", VA = "0x8CE9CC")]
	public EndingInfo()
	{
	}
}
[Token(Token = "0x200016B")]
public class EndingLight : MonoBehaviour
{
	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Ending ending;

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x8CE9DC", Offset = "0x8CE9DC", VA = "0x8CE9DC")]
	public EndingLight()
	{
	}
}
[Token(Token = "0x200016C")]
public class EndingPoster : MonoBehaviour
{
	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Ending ending;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material ghostMaterial;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material outlineMaterial;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isTrophy;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer ghost;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer outline;

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x8CE9E4", Offset = "0x8CE9E4", VA = "0x8CE9E4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x8CEAF4", Offset = "0x8CEAF4", VA = "0x8CEAF4")]
	private MeshRenderer MakeCopy(Material mat, Vector3 offset, string suffix)
	{
		return null;
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x8CE93C", Offset = "0x8CE93C", VA = "0x8CE93C")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x8CEE04", Offset = "0x8CEE04", VA = "0x8CEE04")]
	public void ShowOutline(bool show)
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x8CEEA8", Offset = "0x8CEEA8", VA = "0x8CEEA8")]
	public void HideGhost()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x8CE498", Offset = "0x8CE498", VA = "0x8CE498")]
	public void ShowGhost()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x8CE788", Offset = "0x8CE788", VA = "0x8CE788")]
	public void ShowOnWall()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x8CEF48", Offset = "0x8CEF48", VA = "0x8CEF48")]
	public EndingPoster()
	{
	}
}
[Token(Token = "0x200016D")]
public class Endings : MonoBehaviour
{
	[Token(Token = "0x40007CE")]
	private const string playerPrefsKey = "ENDINGS_STATE";

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EndingInfo peace;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EndingInfo broken;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EndingInfo nuke;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EndingInfo pentagram;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EndingInfo illuminati;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EndingInfo past;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EndingInfo future;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EndingInfo yinYang;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EndingInfo blackHole;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public EndingInfo bender;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public EndingInfo spaceInvader;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public EndingInfo asteroid;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public EndingInfo cthulhu;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public EndingInfo panda;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public EndingInfo cityBoom;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public EndingInfo bloodyBaby;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public EndingInfo deathStar;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public EndingInfo happyDemon;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public EndingInfo sandworm;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public EndingInfo stanleyParable;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public EndingInfo papersPlease;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public EndingInfo earthquake;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public EndingInfo rocket;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public EndingInfo ocean;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public EndingInfo poltergeist;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public EndingInfo toxicCloud;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public EndingInfo officeSpace;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public EndingInfo litterBug;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public EndingInfo wargames;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public EndingInfo coffee;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private EndingInfo[] all;

	[Token(Token = "0x170000F9")]
	public bool WasLoadSuccessful
	{
		[Token(Token = "0x600080D")]
		[Address(RVA = "0x8CEF50", Offset = "0x8CEF50", VA = "0x8CEF50")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600080E")]
		[Address(RVA = "0x8CEF58", Offset = "0x8CEF58", VA = "0x8CEF58")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x8CEF64", Offset = "0x8CEF64", VA = "0x8CEF64")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x8CFA38", Offset = "0x8CFA38", VA = "0x8CFA38")]
	public EndingInfo Get(Ending e)
	{
		return null;
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x8CFB28", Offset = "0x8CFB28", VA = "0x8CFB28")]
	public void InitFlair()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x8CFEC8", Offset = "0x8CFEC8", VA = "0x8CFEC8")]
	public void Save()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x8CFA68", Offset = "0x8CFA68", VA = "0x8CFA68")]
	private void Load()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x8CFFD8", Offset = "0x8CFFD8", VA = "0x8CFFD8")]
	public void ClearSave()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x8D0074", Offset = "0x8D0074", VA = "0x8D0074")]
	public int GetEndingsCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x8D0130", Offset = "0x8D0130", VA = "0x8D0130")]
	public int GetCompletedEndingsCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x8D0198", Offset = "0x8D0198", VA = "0x8D0198")]
	public bool ShouldDoCoffeeEnding()
	{
		return default(bool);
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x8CFF70", Offset = "0x8CFF70", VA = "0x8CFF70")]
	public int GetSaveState()
	{
		return default(int);
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x8D0214", Offset = "0x8D0214", VA = "0x8D0214")]
	public Endings()
	{
	}
}
[Token(Token = "0x200016F")]
public class EntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x600081D")]
	[Address(RVA = "0x8D02A0", Offset = "0x8D02A0", VA = "0x8D02A0")]
	public EntitlementCheck()
	{
	}
}
[Token(Token = "0x2000170")]
public class FibonacciPanel : Widget
{
	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Text displayText;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject switchLight;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isDisplayShowing;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private LockerDoors lockerDoors;

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x8D02A8", Offset = "0x8D02A8", VA = "0x8D02A8", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x8D02D4", Offset = "0x8D02D4", VA = "0x8D02D4", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x8D036C", Offset = "0x8D036C", VA = "0x8D036C", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x8D0374", Offset = "0x8D0374", VA = "0x8D0374", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x8D0384", Offset = "0x8D0384", VA = "0x8D0384", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x8D040C", Offset = "0x8D040C", VA = "0x8D040C")]
	public void PushInput(string input)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x8D06EC", Offset = "0x8D06EC", VA = "0x8D06EC")]
	public bool IsDisplayShowing()
	{
		return default(bool);
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x8D06F4", Offset = "0x8D06F4", VA = "0x8D06F4", Slot = "15")]
	protected override void OnRevealBegin()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x8D06FC", Offset = "0x8D06FC", VA = "0x8D06FC")]
	public FibonacciPanel()
	{
	}
}
[Token(Token = "0x2000171")]
public class FibonacciPanelScrewdriverTarget : TargetForHoldable
{
	[Token(Token = "0x6000827")]
	[Address(RVA = "0x8D0704", Offset = "0x8D0704", VA = "0x8D0704", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x8D070C", Offset = "0x8D070C", VA = "0x8D070C", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x8D0710", Offset = "0x8D0710", VA = "0x8D0710", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x8D0718", Offset = "0x8D0718", VA = "0x8D0718", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x8D079C", Offset = "0x8D079C", VA = "0x8D079C")]
	public FibonacciPanelScrewdriverTarget()
	{
	}
}
[Token(Token = "0x2000172")]
public class FiveByFiveKeypad : MatrixKeypad<FiveByFiveKeypadButton>
{
	[Token(Token = "0x2000173")]
	[CompilerGenerated]
	private sealed class <LightUpButtonsAnimations>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FiveByFiveKeypad <>4__this;

		[Token(Token = "0x170000FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000835")]
			[Address(RVA = "0x8D1238", Offset = "0x8D1238", VA = "0x8D1238", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000837")]
			[Address(RVA = "0x8D1280", Offset = "0x8D1280", VA = "0x8D1280", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x8D0DB4", Offset = "0x8D0DB4", VA = "0x8D0DB4")]
		[DebuggerHidden]
		public <LightUpButtonsAnimations>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x8D0EE4", Offset = "0x8D0EE4", VA = "0x8D0EE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x8D0EE8", Offset = "0x8D0EE8", VA = "0x8D0EE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x8D1240", Offset = "0x8D1240", VA = "0x8D1240", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioClip[] buttonToggleClips;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int buttonClipIndex;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private sbyte[] litSymbolPattern;

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x8D07A4", Offset = "0x8D07A4", VA = "0x8D07A4", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x8D0A20", Offset = "0x8D0A20", VA = "0x8D0A20", Slot = "17")]
	public override void Reveal()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x8D0AC0", Offset = "0x8D0AC0", VA = "0x8D0AC0", Slot = "18")]
	internal override void OnButtonUsed(MatrixKeypadButton button)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x8D0A4C", Offset = "0x8D0A4C", VA = "0x8D0A4C")]
	[IteratorStateMachine(typeof(<LightUpButtonsAnimations>d__6))]
	private IEnumerator LightUpButtonsAnimations()
	{
		return null;
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x8D0DDC", Offset = "0x8D0DDC", VA = "0x8D0DDC")]
	private void SetRow(int row, bool newVal)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x8D0E9C", Offset = "0x8D0E9C", VA = "0x8D0E9C")]
	public FiveByFiveKeypad()
	{
	}
}
[Token(Token = "0x2000174")]
public class FiveByFiveKeypadButton : MatrixKeypadButton
{
	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material ActivatedMaterial;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material OffMaterial;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Renderer buttonMeshRenderer;

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x8D1288", Offset = "0x8D1288", VA = "0x8D1288", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x8D1314", Offset = "0x8D1314", VA = "0x8D1314", Slot = "20")]
	internal override void OnValueChanged(sbyte value)
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x8D135C", Offset = "0x8D135C", VA = "0x8D135C")]
	public FiveByFiveKeypadButton()
	{
	}
}
[Token(Token = "0x2000175")]
public class Floor : SlotForHoldable
{
	[Token(Token = "0x600083B")]
	[Address(RVA = "0x8D1364", Offset = "0x8D1364", VA = "0x8D1364")]
	public Floor()
	{
	}
}
[Token(Token = "0x2000176")]
public class FloppyDisk : Holdable
{
	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool animating;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Vector3 startPos;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject floppy;

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x8D136C", Offset = "0x8D136C", VA = "0x8D136C", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x8D1370", Offset = "0x8D1370", VA = "0x8D1370")]
	private void ScaleHack()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x8D13B4", Offset = "0x8D13B4", VA = "0x8D13B4", Slot = "14")]
	protected override void OnRestart()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x8D14B4", Offset = "0x8D14B4", VA = "0x8D14B4", Slot = "10")]
	public override void UseOnTarget(UseContext context)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x8D18A4", Offset = "0x8D18A4", VA = "0x8D18A4", Slot = "12")]
	protected override void OnPickUp()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x8D19AC", Offset = "0x8D19AC", VA = "0x8D19AC", Slot = "9")]
	public override bool CanBeUsedOnTarget(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x8D1A64", Offset = "0x8D1A64", VA = "0x8D1A64", Slot = "17")]
	public override void HandleTouchCollision(Collision collision)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x8D1F48", Offset = "0x8D1F48", VA = "0x8D1F48")]
	public void OnRevealCoupler()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x8D1680", Offset = "0x8D1680", VA = "0x8D1680")]
	public void ForceReleaseDisk()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x8D1FA4", Offset = "0x8D1FA4", VA = "0x8D1FA4")]
	public FloppyDisk()
	{
	}
}
[Token(Token = "0x2000177")]
public class FloppyDiskReader : Widget
{
	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform floppyDiskPosition;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform floppyDiskStartPosition;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject FloppyDisk;

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x8D1FAC", Offset = "0x8D1FAC", VA = "0x8D1FAC", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x8D1FB4", Offset = "0x8D1FB4", VA = "0x8D1FB4", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x8D1678", Offset = "0x8D1678", VA = "0x8D1678")]
	public void InsertDisk()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x8D2038", Offset = "0x8D2038", VA = "0x8D2038")]
	public FloppyDiskReader()
	{
	}
}
[Token(Token = "0x2000178")]
public class FourDigitKeypad : KeypadWidget
{
	[Token(Token = "0x600084A")]
	[Address(RVA = "0x8D2040", Offset = "0x8D2040", VA = "0x8D2040")]
	public FourDigitKeypad()
	{
	}
}
[Token(Token = "0x2000179")]
public class CameraOffset : MonoBehaviour
{
	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private XROrigin origin;

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x8D2048", Offset = "0x8D2048", VA = "0x8D2048")]
	private void Start()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x8D214C", Offset = "0x8D214C", VA = "0x8D214C")]
	public void SetOffset(float height)
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x8D21B0", Offset = "0x8D21B0", VA = "0x8D21B0")]
	public CameraOffset()
	{
	}
}
[Token(Token = "0x200017A")]
public class ControllerHaptics : MonoBehaviour
{
	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private XRBaseController controllerLeft;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private XRBaseController controllerRight;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ControllerHaptics Instance;

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x8D21B8", Offset = "0x8D21B8", VA = "0x8D21B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x8D2280", Offset = "0x8D2280", VA = "0x8D2280")]
	public void DoHapticImpulse(bool doLeft, bool doRight, float amplitute, float duration)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x8D2304", Offset = "0x8D2304", VA = "0x8D2304")]
	public ControllerHaptics()
	{
	}
}
[Token(Token = "0x200017B")]
public class ControlsMenu : MonoBehaviour
{
	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject ctrlTitlePrompt;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject backPrompt;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text controlsTitleText;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text backText;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject canvas;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource confrim;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioMixerGroup mixerGroup;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip soundClip;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject selection;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private PauseMenu pauseMenu;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private CanvasScaler canv;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SubtitleSystem subtitles;

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x8D230C", Offset = "0x8D230C", VA = "0x8D230C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x8D284C", Offset = "0x8D284C", VA = "0x8D284C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x8D23AC", Offset = "0x8D23AC", VA = "0x8D23AC")]
	public void GetCorrectSubtitleText(SubtitleSystem subtitles)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x8D28C4", Offset = "0x8D28C4", VA = "0x8D28C4")]
	public void PlayConfrimationSound()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x8D28E0", Offset = "0x8D28E0", VA = "0x8D28E0")]
	public void OnBackClick()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x8D2960", Offset = "0x8D2960", VA = "0x8D2960")]
	public void NoHover()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x8D2998", Offset = "0x8D2998", VA = "0x8D2998")]
	public ControlsMenu()
	{
	}
}
[Token(Token = "0x200017C")]
public class GrabbableWaterCoolerHandle : GrabbableWidget
{
	[Token(Token = "0x200017D")]
	[CompilerGenerated]
	private sealed class <OnDryPuddle>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrabbableWaterCoolerHandle <>4__this;

		[Token(Token = "0x170000FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000862")]
			[Address(RVA = "0x8D3BEC", Offset = "0x8D3BEC", VA = "0x8D3BEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000864")]
			[Address(RVA = "0x8D3C34", Offset = "0x8D3C34", VA = "0x8D3C34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x8D3AEC", Offset = "0x8D3AEC", VA = "0x8D3AEC")]
		[DebuggerHidden]
		public <OnDryPuddle>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x8D3B1C", Offset = "0x8D3B1C", VA = "0x8D3B1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x8D3B20", Offset = "0x8D3B20", VA = "0x8D3B20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x8D3BF4", Offset = "0x8D3BF4", VA = "0x8D3BF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaterCoolerHandle throwSwitch;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject leftHand;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject rightHand;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject handle;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MeshRenderer staticHandle;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MeshRenderer waterStream;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MeshRenderer waterPuddle;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine puddleCoroutine;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool beingGrabbed;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject activeHand;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Quaternion activeHandOrientation;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Quaternion defaultLeftHandOrientation;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion defaultRightHandOrientation;

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x8D29A0", Offset = "0x8D29A0", VA = "0x8D29A0", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x8D2ABC", Offset = "0x8D2ABC", VA = "0x8D2ABC", Slot = "7")]
	protected override void OnWidgetRestart()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x8D2AF4", Offset = "0x8D2AF4", VA = "0x8D2AF4", Slot = "5")]
	protected override void WhileGrabbed()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x8D2E54", Offset = "0x8D2E54", VA = "0x8D2E54", Slot = "8")]
	protected override void OnGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x8D34C4", Offset = "0x8D34C4", VA = "0x8D34C4", Slot = "9")]
	protected override void OnUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x8D36B0", Offset = "0x8D36B0", VA = "0x8D36B0")]
	[IteratorStateMachine(typeof(<OnDryPuddle>d__18))]
	public IEnumerator OnDryPuddle()
	{
		return null;
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x8D3B14", Offset = "0x8D3B14", VA = "0x8D3B14")]
	public GrabbableWaterCoolerHandle()
	{
	}
}
[Token(Token = "0x200017E")]
public class HandHiderOnGrab : MonoBehaviour
{
	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool grabbed;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool hideHandsOnPickUp;

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x8D3C3C", Offset = "0x8D3C3C", VA = "0x8D3C3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x8D3D80", Offset = "0x8D3D80", VA = "0x8D3D80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x8D3EC4", Offset = "0x8D3EC4", VA = "0x8D3EC4")]
	private void HandleGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x8D3FE0", Offset = "0x8D3FE0", VA = "0x8D3FE0")]
	private void HandleUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x8D40F8", Offset = "0x8D40F8", VA = "0x8D40F8")]
	public HandHiderOnGrab()
	{
	}
}
[Token(Token = "0x200017F")]
public class ActionBasedInputHandler
{
	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private InputActionReference primaryButton;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InputActionReference secondaryButton;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InputActionReference triggerButton;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InputActionReference gripButton;

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x8D4108", Offset = "0x8D4108", VA = "0x8D4108")]
	private void Awake()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x8D410C", Offset = "0x8D410C", VA = "0x8D410C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x8D4110", Offset = "0x8D4110", VA = "0x8D4110")]
	private void Start()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x8D4114", Offset = "0x8D4114", VA = "0x8D4114")]
	private void Update()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x8D4118", Offset = "0x8D4118", VA = "0x8D4118")]
	public ActionBasedInputHandler()
	{
	}
}
[Token(Token = "0x2000180")]
public class GrabHelper : MonoBehaviour
{
	[Token(Token = "0x2000181")]
	[CompilerGenerated]
	private sealed class <ResetIgnoreInteractable>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrabHelper <>4__this;

		[Token(Token = "0x17000101")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000882")]
			[Address(RVA = "0x8D55EC", Offset = "0x8D55EC", VA = "0x8D55EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000884")]
			[Address(RVA = "0x8D5634", Offset = "0x8D5634", VA = "0x8D5634", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x8D54EC", Offset = "0x8D54EC", VA = "0x8D54EC")]
		[DebuggerHidden]
		public <ResetIgnoreInteractable>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x8D5530", Offset = "0x8D5530", VA = "0x8D5530", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x8D5534", Offset = "0x8D5534", VA = "0x8D5534", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x8D55F4", Offset = "0x8D55F4", VA = "0x8D55F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private XRBaseInteractor sphereInteractor;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private XRBaseInteractor coneInteractor;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InputActionProperty selectAction;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private XRBaseController controller;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GrabHelper otherGrabHelper;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform reticle;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float reticleTravelTime;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 reticleScale;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Tweener reticleMoveTweener;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Tweener reticleScaleTweener;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform mainCamTransform;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform curHoveredTransform;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private IXRInteractable curHoveredInteractable;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private IXRInteractable ignoreInteractable;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Vector2 distanceDotMult;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Vector2 distanceDotPower;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 coneStartPos;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 coneStartScale;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool distGrabOn;

	[Token(Token = "0x170000FE")]
	public bool IsGrabbingSomething
	{
		[Token(Token = "0x600086F")]
		[Address(RVA = "0x8D4120", Offset = "0x8D4120", VA = "0x8D4120")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000FF")]
	public IXRInteractable CurrentHoveredTarget
	{
		[Token(Token = "0x6000870")]
		[Address(RVA = "0x8D413C", Offset = "0x8D413C", VA = "0x8D413C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000100")]
	public IXRSelectInteractable CurrentGrabbedTarget
	{
		[Token(Token = "0x6000871")]
		[Address(RVA = "0x8D4144", Offset = "0x8D4144", VA = "0x8D4144")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x8D4160", Offset = "0x8D4160", VA = "0x8D4160")]
	public void ForceRelease()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x8D4194", Offset = "0x8D4194", VA = "0x8D4194")]
	private void Start()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x8D44D4", Offset = "0x8D44D4", VA = "0x8D44D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x8D45D8", Offset = "0x8D45D8", VA = "0x8D45D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x8D46DC", Offset = "0x8D46DC", VA = "0x8D46DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x8D5280", Offset = "0x8D5280", VA = "0x8D5280")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x8D4ED0", Offset = "0x8D4ED0", VA = "0x8D4ED0")]
	private void SwitchReticleTransform(Transform t)
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x8D5304", Offset = "0x8D5304", VA = "0x8D5304")]
	private void CheckSelectEnter(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x8D53F0", Offset = "0x8D53F0", VA = "0x8D53F0")]
	private void CheckSelectExit(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x8D5478", Offset = "0x8D5478", VA = "0x8D5478")]
	[IteratorStateMachine(typeof(<ResetIgnoreInteractable>d__34))]
	private IEnumerator ResetIgnoreInteractable()
	{
		return null;
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x8D4418", Offset = "0x8D4418", VA = "0x8D4418")]
	public void ExtendConeInteractor(bool doExtend)
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x8D5514", Offset = "0x8D5514", VA = "0x8D5514")]
	public bool IsConeInteractorExtended()
	{
		return default(bool);
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x8D551C", Offset = "0x8D551C", VA = "0x8D551C")]
	public GrabHelper()
	{
	}
}
[Token(Token = "0x2000182")]
[RequireComponent(typeof(XRGrabInteractable))]
public class HandOffsetSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private XRGrabInteractable interactable;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform leftOffset;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform rightOffset;

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x8D563C", Offset = "0x8D563C", VA = "0x8D563C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x8D5694", Offset = "0x8D5694", VA = "0x8D5694")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x8D573C", Offset = "0x8D573C", VA = "0x8D573C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x8D57E4", Offset = "0x8D57E4", VA = "0x8D57E4")]
	private void SetHandOffset(SelectEnterEventArgs args)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x8D592C", Offset = "0x8D592C", VA = "0x8D592C")]
	public HandOffsetSwitcher()
	{
	}
}
[Token(Token = "0x2000183")]
public class PlayerPawnController : MonoBehaviour
{
	[Token(Token = "0x2000184")]
	public enum AnimId
	{
		[Token(Token = "0x4000847")]
		BindPoseDoNotUse,
		[Token(Token = "0x4000848")]
		Relax,
		[Token(Token = "0x4000849")]
		HoverGrab,
		[Token(Token = "0x400084A")]
		Push1Finger,
		[Token(Token = "0x400084B")]
		Push3Finger,
		[Token(Token = "0x400084C")]
		HoldSmall,
		[Token(Token = "0x400084D")]
		HoldMedium,
		[Token(Token = "0x400084E")]
		HoldLarge,
		[Token(Token = "0x400084F")]
		BinderOpen,
		[Token(Token = "0x4000850")]
		HoldFingers,
		[Token(Token = "0x4000851")]
		PreTouch,
		[Token(Token = "0x4000852")]
		ToolHandle,
		[Token(Token = "0x4000853")]
		EarthTrophy,
		[Token(Token = "0x4000854")]
		RocketTrophy,
		[Token(Token = "0x4000855")]
		PlaneTrophy,
		[Token(Token = "0x4000856")]
		Stamp,
		[Token(Token = "0x4000857")]
		Diamond,
		[Token(Token = "0x4000858")]
		Marker,
		[Token(Token = "0x4000859")]
		ResetSwitch,
		[Token(Token = "0x400085A")]
		ThrowSwitch,
		[Token(Token = "0x400085B")]
		CoffeeMug,
		[Token(Token = "0x400085C")]
		Phone,
		[Token(Token = "0x400085D")]
		Fist,
		[Token(Token = "0x400085E")]
		ThumbsUp,
		[Token(Token = "0x400085F")]
		PewPew,
		[Token(Token = "0x4000860")]
		OpenGripThumbDown,
		[Token(Token = "0x4000861")]
		NoGripNotPointing,
		[Token(Token = "0x4000862")]
		NoGripPointing,
		[Token(Token = "0x4000863")]
		GripPointing,
		[Token(Token = "0x4000864")]
		GripPointTrigger,
		[Token(Token = "0x4000865")]
		OpenHandThumbUp,
		[Token(Token = "0x4000866")]
		PointingThumbUp,
		[Token(Token = "0x4000867")]
		NumValues
	}

	[Serializable]
	[Token(Token = "0x2000185")]
	private class AnimFrame
	{
		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AnimId id;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly float normalizedTime;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int AnimNameHash;

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x8D5BFC", Offset = "0x8D5BFC", VA = "0x8D5BFC")]
		public AnimFrame(AnimId id)
		{
		}
	}

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimFrame[] animFrames;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AnimFrame activeAnim;

	[Token(Token = "0x17000103")]
	private AnimId ActiveAnimId
	{
		[Token(Token = "0x600088A")]
		[Address(RVA = "0x8D5934", Offset = "0x8D5934", VA = "0x8D5934")]
		get
		{
			return default(AnimId);
		}
		[Token(Token = "0x600088B")]
		[Address(RVA = "0x8D5950", Offset = "0x8D5950", VA = "0x8D5950")]
		set
		{
		}
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x8D5A1C", Offset = "0x8D5A1C", VA = "0x8D5A1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x8D5BE8", Offset = "0x8D5BE8", VA = "0x8D5BE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x8D5BF0", Offset = "0x8D5BF0", VA = "0x8D5BF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x8D5BF4", Offset = "0x8D5BF4", VA = "0x8D5BF4")]
	public PlayerPawnController()
	{
	}
}
[Token(Token = "0x2000187")]
public class HeadFade : MonoBehaviour
{
	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int count;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isBlack;

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x8D5D88", Offset = "0x8D5D88", VA = "0x8D5D88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x8D5D8C", Offset = "0x8D5D8C", VA = "0x8D5D8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x8D5D90", Offset = "0x8D5D90", VA = "0x8D5D90")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x8D6058", Offset = "0x8D6058", VA = "0x8D6058")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x8D62E0", Offset = "0x8D62E0", VA = "0x8D62E0")]
	public HeadFade()
	{
	}
}
[Token(Token = "0x2000188")]
public class MetaAchievement
{
	[Token(Token = "0x400086F")]
	public const string ACH_BUTTON_MANIAC = "BUTTON_MANIAC";

	[Token(Token = "0x4000870")]
	public const string ACH_ERGOPHOBIA = "ERGOPHOBIA";

	[Token(Token = "0x4000871")]
	public const string ACH_GROUNDHOG_DAY = "GROUNDHOG_DAY";

	[Token(Token = "0x4000872")]
	public const string ACH_ONCE_AGAIN = "ONCE_AGAIN";

	[Token(Token = "0x4000873")]
	public const string ACH_LITTERBUG = "LITTERBUG";

	[Token(Token = "0x4000874")]
	public const string ACH_PERFECTIONIST = "PERFECTIONIST";

	[Token(Token = "0x4000875")]
	public const string ACH_DECORATE_THE_ROOM = "DECORATE_THE_ROOM";

	[Token(Token = "0x4000876")]
	public const string ACH_WE_ARE_WATCHING = "WE_ARE_WATCHING";

	[Token(Token = "0x4000877")]
	public const string ACH_RED_BARON = "RED_BARON";

	[Token(Token = "0x4000878")]
	public const string ACH_SEE_NO_EVIL = "SEE_NO_EVIL";

	[Token(Token = "0x4000879")]
	public const string ACH_LOSING_MOVE = "LOSING_MOVE";

	[Token(Token = "0x400087A")]
	public const string ACH_555_2368 = "555_2368";

	[Token(Token = "0x400087B")]
	public const string ACH_JUST_LOGO = "JUST_LOGO";

	[Token(Token = "0x400087C")]
	public const string ACH_PC_LOAD_LETTER = "PC_LOAD_LETTER";

	[Token(Token = "0x400087D")]
	public const string ACH_3x5x6 = "3x5x6";

	[Token(Token = "0x400087E")]
	public const string ACH_WARDIALING = "WARDIALING";

	[Token(Token = "0x400087F")]
	public const string ACH_CALL_JENNY = "CALL_JENNY";

	[Token(Token = "0x4000880")]
	public const string ACH_SAUSAGE_KING = "SAUSAGE_KING";

	[Token(Token = "0x4000881")]
	public const string ACH_DISOBEDIENCE = "DISOBEDIENCE";

	[Token(Token = "0x4000882")]
	public const string ACH_FASTEST_IN_THE_WEST = "FASTEST_IN_THE_WEST";

	[Token(Token = "0x4000883")]
	public const string ACH_DONT_BE_DISTRACTED = "DONT_BE_DISTRACTED";

	[Token(Token = "0x4000884")]
	public const string ACH_HAMSTER = "HAMSTER";

	[Token(Token = "0x4000885")]
	public const string ACH_UNINSTALL_ME = "UNINSTALL_ME";

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x8D62E8", Offset = "0x8D62E8", VA = "0x8D62E8")]
	public MetaAchievement()
	{
	}
}
[Token(Token = "0x2000189")]
public class OculusPlatformHelper : MonoBehaviour
{
	[Token(Token = "0x600089B")]
	[Address(RVA = "0x8D62F0", Offset = "0x8D62F0", VA = "0x8D62F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x8D63E4", Offset = "0x8D63E4", VA = "0x8D63E4")]
	private void OnCoreInitialized(Message msg)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x8D6458", Offset = "0x8D6458", VA = "0x8D6458")]
	public OculusPlatformHelper()
	{
	}
}
[Token(Token = "0x200018A")]
public class PlayerSettingsMenu : MonoBehaviour
{
	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject setTitlePrompt;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject backPrompt;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject playerHeightPrompt;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject sliderPrompt;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject standingPrompt;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject sittingPrompt;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject distGrabPrompt;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject resetDefaultPrompt;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text settingsTitleText;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text backText;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text playerHeightText;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text standingText;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text sittingText;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text distGrabText;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Text resetDefaultText;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject canvas;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioSource confrim;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioMixerGroup mixerGroup;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private AudioClip soundClip;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject selection;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private PauseMenu pauseMenu;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private CanvasScaler canv;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private SubtitleSystem subtitles;

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x8D6460", Offset = "0x8D6460", VA = "0x8D6460")]
	private void Start()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x8D7120", Offset = "0x8D7120", VA = "0x8D7120")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x8D65D8", Offset = "0x8D65D8", VA = "0x8D65D8")]
	public void GetCorrectSubtitleText(SubtitleSystem subtitles)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x8D7198", Offset = "0x8D7198", VA = "0x8D7198")]
	public void PlayConfrimationSound()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x8D71B4", Offset = "0x8D71B4", VA = "0x8D71B4")]
	public void OnBackClick()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x8D7234", Offset = "0x8D7234", VA = "0x8D7234")]
	public void OnSliderChange()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x8D73A4", Offset = "0x8D73A4", VA = "0x8D73A4")]
	public void OnStandingClick()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x8D7414", Offset = "0x8D7414", VA = "0x8D7414")]
	public void OnSittingClick()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x8D729C", Offset = "0x8D729C", VA = "0x8D729C")]
	private void SetCameraHeight(float height)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x8D7494", Offset = "0x8D7494", VA = "0x8D7494")]
	public void OnDistGrabClick()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x8D7628", Offset = "0x8D7628", VA = "0x8D7628")]
	public void OnResetDefaultClick()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x8D7698", Offset = "0x8D7698", VA = "0x8D7698")]
	public void NoHover()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x8D76D0", Offset = "0x8D76D0", VA = "0x8D76D0")]
	public PlayerSettingsMenu()
	{
	}
}
[Token(Token = "0x200018B")]
public static class UserPlayerSettings
{
	[Token(Token = "0x400089E")]
	public const string PlayerHeightKey = "PLAYER_HEIGHT";

	[Token(Token = "0x40008A0")]
	public const string DistanceGrabKey = "DISTANCE_GRAB";

	[Token(Token = "0x17000104")]
	public static float PlayerHeight
	{
		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x8D76D8", Offset = "0x8D76D8", VA = "0x8D76D8")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x8D7720", Offset = "0x8D7720", VA = "0x8D7720")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000105")]
	public static bool DistanceGrab
	{
		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x8D7774", Offset = "0x8D7774", VA = "0x8D7774")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x8D77BC", Offset = "0x8D77BC", VA = "0x8D77BC")]
		[CompilerGenerated]
		set
		{
		}
	}
}
[Token(Token = "0x200018C")]
public class Poster : Holdable
{
	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform originalParent;

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x8D7808", Offset = "0x8D7808", VA = "0x8D7808", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x8D7848", Offset = "0x8D7848", VA = "0x8D7848")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x8D784C", Offset = "0x8D784C", VA = "0x8D784C", Slot = "9")]
	public override bool CanBeUsedOnTarget(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x8D7868", Offset = "0x8D7868", VA = "0x8D7868", Slot = "10")]
	public override void UseOnTarget(UseContext context)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x8D7870", Offset = "0x8D7870", VA = "0x8D7870", Slot = "14")]
	protected override void OnRestart()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x8D7874", Offset = "0x8D7874", VA = "0x8D7874", Slot = "12")]
	protected override void OnPickUp()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x8D7880", Offset = "0x8D7880", VA = "0x8D7880", Slot = "11")]
	protected override void OnPutDown(SlotForHoldable slot)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x8D7888", Offset = "0x8D7888", VA = "0x8D7888")]
	public Poster()
	{
	}
}
[Token(Token = "0x200018D")]
public class TeleportationManager : MonoBehaviour
{
	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InputActionAsset actionAsset;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private XRRayInteractor rayInteractorL;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private XRRayInteractor rayInteractorR;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TeleportationProvider provider;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InputAction _thumbstickL;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private InputAction _thumbstickR;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InputAction _activateL;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InputAction _activateR;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TeleportValidator floorTeleportBounds;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject teleport_limits;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject reticleL;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject reticleR;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Camera mainCamera;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject pawn;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private XROrigin xrOrigin;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool validTeleportRequest;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool _hasInitialized;

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x8D7890", Offset = "0x8D7890", VA = "0x8D7890")]
	private void HideVisuals()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x8D78F0", Offset = "0x8D78F0", VA = "0x8D78F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x8D7BE8", Offset = "0x8D7BE8", VA = "0x8D7BE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x8D7D80", Offset = "0x8D7D80", VA = "0x8D7D80")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x8D7D84", Offset = "0x8D7D84", VA = "0x8D7D84")]
	private void Move(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x8D7E04", Offset = "0x8D7E04", VA = "0x8D7E04")]
	private void Teleport(ref XRRayInteractor rayInteractor)
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x8D7F38", Offset = "0x8D7F38", VA = "0x8D7F38")]
	private void PerformTeleport(TeleportRequest currentRequest)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x8D81A8", Offset = "0x8D81A8", VA = "0x8D81A8")]
	private void MoveOrigin(Vector3 destination)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x8D829C", Offset = "0x8D829C", VA = "0x8D829C")]
	private void OnTeleportActivate(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x8D833C", Offset = "0x8D833C", VA = "0x8D833C")]
	public TeleportationManager()
	{
	}
}
[Token(Token = "0x200018E")]
public class WaterCoolerHandle : Widget
{
	[Token(Token = "0x200018F")]
	public enum State
	{
		[Token(Token = "0x40008C3")]
		Starting,
		[Token(Token = "0x40008C4")]
		Bottom
	}

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public State state;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float errorTimer;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string scrubAnimState;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string scrubCancelState;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float startingScrubValue;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 grabStartingPosition;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 prevEuler;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject grabbingController;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float scrubBeganTime;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool isScrubbing;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
	private bool scrubMoved;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
	private bool isRestarting;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float scrubFrac_;

	[Token(Token = "0x40008C0")]
	private const float PanelWidth = 0.3f;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Sequence scrubCancelTween;

	[Token(Token = "0x17000106")]
	public float ScrubFrac
	{
		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x8D8344", Offset = "0x8D8344", VA = "0x8D8344")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x8D834C", Offset = "0x8D834C", VA = "0x8D834C")]
		set
		{
		}
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x8D8394", Offset = "0x8D8394", VA = "0x8D8394")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x8D872C", Offset = "0x8D872C", VA = "0x8D872C", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x8D8734", Offset = "0x8D8734", VA = "0x8D8734", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x8D873C", Offset = "0x8D873C", VA = "0x8D873C", Slot = "9")]
	protected override string GetRestartState()
	{
		return null;
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x8D877C", Offset = "0x8D877C", VA = "0x8D877C", Slot = "10")]
	protected override string GetRestartTrigger()
	{
		return null;
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x8D8824", Offset = "0x8D8824", VA = "0x8D8824", Slot = "13")]
	protected override void OnRestartBegin()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x8D8828", Offset = "0x8D8828", VA = "0x8D8828", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x8D8830", Offset = "0x8D8830", VA = "0x8D8830", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x8D3374", Offset = "0x8D3374", VA = "0x8D3374")]
	public void ScrubGrab(GameObject grabbingObject)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x8D8518", Offset = "0x8D8518", VA = "0x8D8518")]
	private bool ScrubIsComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x8D887C", Offset = "0x8D887C", VA = "0x8D887C")]
	private void ScrubToggle(string scrubState, string cancelState)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x8D8530", Offset = "0x8D8530", VA = "0x8D8530")]
	private void ScrubAccept()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x8D3724", Offset = "0x8D3724", VA = "0x8D3724")]
	public void ScrubStop()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x8D89D8", Offset = "0x8D89D8", VA = "0x8D89D8")]
	private void SetScrubFracAndAnimate(float value)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x8D88D0", Offset = "0x8D88D0", VA = "0x8D88D0")]
	private void ScrubStart()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x8D8A3C", Offset = "0x8D8A3C", VA = "0x8D8A3C")]
	private void Throw(State newState, AudioClip clip, string trigger, Action fn)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x8D89B4", Offset = "0x8D89B4", VA = "0x8D89B4")]
	public void ResetResetSwitch()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x8D8B88", Offset = "0x8D8B88", VA = "0x8D8B88")]
	public WaterCoolerHandle()
	{
	}
}
[Token(Token = "0x2000191")]
public class Buoyancy : MonoBehaviour
{
	[Token(Token = "0x2000192")]
	[CompilerGenerated]
	private sealed class <StartFloatingWater>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Buoyancy <>4__this;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0x8D9160", Offset = "0x8D9160", VA = "0x8D9160", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0x8D91A8", Offset = "0x8D91A8", VA = "0x8D91A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x8D8D54", Offset = "0x8D8D54", VA = "0x8D8D54")]
		[DebuggerHidden]
		public <StartFloatingWater>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x8D8E40", Offset = "0x8D8E40", VA = "0x8D8E40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x8D8E44", Offset = "0x8D8E44", VA = "0x8D8E44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x8D9168", Offset = "0x8D9168", VA = "0x8D9168", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x8D8C88", Offset = "0x8D8C88", VA = "0x8D8C88")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x8D8CE0", Offset = "0x8D8CE0", VA = "0x8D8CE0")]
	[IteratorStateMachine(typeof(<StartFloatingWater>d__2))]
	public IEnumerator StartFloatingWater()
	{
		return null;
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x8D8D7C", Offset = "0x8D8D7C", VA = "0x8D8D7C")]
	public void FloatInSpace()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x8D8E38", Offset = "0x8D8E38", VA = "0x8D8E38")]
	public Buoyancy()
	{
	}
}
[Token(Token = "0x2000193")]
public class HeadSlot : SlotForHoldable
{
	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x8D91B0", Offset = "0x8D91B0", VA = "0x8D91B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x8D91B4", Offset = "0x8D91B4", VA = "0x8D91B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x8D91B8", Offset = "0x8D91B8", VA = "0x8D91B8")]
	public HeadSlot()
	{
	}
}
[Token(Token = "0x2000194")]
public class WaterLevel : MonoBehaviour
{
	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WaterLevel Instance;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OceanEnding ending;

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x8D91C0", Offset = "0x8D91C0", VA = "0x8D91C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x8D9294", Offset = "0x8D9294", VA = "0x8D9294")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x8D9344", Offset = "0x8D9344", VA = "0x8D9344")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x8D9398", Offset = "0x8D9398", VA = "0x8D9398")]
	public WaterLevel()
	{
	}
}
[Token(Token = "0x2000195")]
public class Game : MonoBehaviour
{
	[Token(Token = "0x2000196")]
	public enum Mode
	{
		[Token(Token = "0x400093D")]
		Intro,
		[Token(Token = "0x400093E")]
		Playing,
		[Token(Token = "0x400093F")]
		Restarting,
		[Token(Token = "0x4000940")]
		Ending,
		[Token(Token = "0x4000941")]
		EndingFinished,
		[Token(Token = "0x4000942")]
		EndingReward,
		[Token(Token = "0x4000943")]
		EndingFailed
	}

	[Token(Token = "0x2000197")]
	public enum ScreenInputMode
	{
		[Token(Token = "0x4000945")]
		None,
		[Token(Token = "0x4000946")]
		RomanNumeral,
		[Token(Token = "0x4000947")]
		Colors,
		[Token(Token = "0x4000948")]
		TenDigit,
		[Token(Token = "0x4000949")]
		Binary,
		[Token(Token = "0x400094A")]
		Green4Buttons,
		[Token(Token = "0x400094B")]
		Panel1234,
		[Token(Token = "0x400094C")]
		PianoKeypad,
		[Token(Token = "0x400094D")]
		TimeMachine,
		[Token(Token = "0x400094E")]
		PhoneKey
	}

	[Token(Token = "0x2000198")]
	public class State
	{
		[Token(Token = "0x2000199")]
		public delegate void OnGameChangedModeHandler(Mode newMode, Mode oldMode);

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly List<string> inputList;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isNukePrimed;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool areWargamesReady;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxInputLength;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int redButtonCount;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ScreenInputMode screenMode;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mode mode;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool IsParableReady;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool IsCoffeeEndingReady;

		[Token(Token = "0x17000110")]
		public Mode Mode
		{
			[Token(Token = "0x6000958")]
			[Address(RVA = "0x8E1700", Offset = "0x8E1700", VA = "0x8E1700")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6000959")]
			[Address(RVA = "0x8E1708", Offset = "0x8E1708", VA = "0x8E1708")]
			set
			{
			}
		}

		[Token(Token = "0x14000010")]
		public static event OnGameChangedModeHandler OnGameChangedMode
		{
			[Token(Token = "0x6000956")]
			[Address(RVA = "0x8E1590", Offset = "0x8E1590", VA = "0x8E1590")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000957")]
			[Address(RVA = "0x8E1648", Offset = "0x8E1648", VA = "0x8E1648")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x8E1788", Offset = "0x8E1788", VA = "0x8E1788")]
		public State()
		{
		}
	}

	[Token(Token = "0x200019B")]
	[CompilerGenerated]
	private sealed class <StartGame>d__133 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Game <>4__this;

		[Token(Token = "0x17000111")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000968")]
			[Address(RVA = "0x8E1DA0", Offset = "0x8E1DA0", VA = "0x8E1DA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600096A")]
			[Address(RVA = "0x8E1DE8", Offset = "0x8E1DE8", VA = "0x8E1DE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x8E1A5C", Offset = "0x8E1A5C", VA = "0x8E1A5C")]
		[DebuggerHidden]
		public <StartGame>d__133(int <>1__state)
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x8E1A84", Offset = "0x8E1A84", VA = "0x8E1A84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x8E1A88", Offset = "0x8E1A88", VA = "0x8E1A88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x8E1DA8", Offset = "0x8E1DA8", VA = "0x8E1DA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019C")]
	[CompilerGenerated]
	private sealed class <EndingReward>d__136 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Game <>4__this;

		[Token(Token = "0x17000113")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600096E")]
			[Address(RVA = "0x8E1FA4", Offset = "0x8E1FA4", VA = "0x8E1FA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000970")]
			[Address(RVA = "0x8E1FEC", Offset = "0x8E1FEC", VA = "0x8E1FEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x8E1DF0", Offset = "0x8E1DF0", VA = "0x8E1DF0")]
		[DebuggerHidden]
		public <EndingReward>d__136(int <>1__state)
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x8E1E18", Offset = "0x8E1E18", VA = "0x8E1E18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x8E1E1C", Offset = "0x8E1E1C", VA = "0x8E1E1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x8E1FAC", Offset = "0x8E1FAC", VA = "0x8E1FAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019E")]
	[CompilerGenerated]
	private sealed class <Intro>d__140 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Game <>4__this;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <triggerCoffeeDialog>5__2;

		[Token(Token = "0x17000115")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000976")]
			[Address(RVA = "0x8E28E0", Offset = "0x8E28E0", VA = "0x8E28E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000978")]
			[Address(RVA = "0x8E2928", Offset = "0x8E2928", VA = "0x8E2928", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x8E2060", Offset = "0x8E2060", VA = "0x8E2060")]
		[DebuggerHidden]
		public <Intro>d__140(int <>1__state)
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x8E2088", Offset = "0x8E2088", VA = "0x8E2088", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x8E208C", Offset = "0x8E208C", VA = "0x8E208C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x8E28E8", Offset = "0x8E28E8", VA = "0x8E28E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019F")]
	[CompilerGenerated]
	private sealed class <SetEndingAfterButtonAnimationsComplete>d__144 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Game <>4__this;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Ending e;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject[] <buttons>5__2;

		[Token(Token = "0x17000117")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600097C")]
			[Address(RVA = "0x8E2D20", Offset = "0x8E2D20", VA = "0x8E2D20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600097E")]
			[Address(RVA = "0x8E2D68", Offset = "0x8E2D68", VA = "0x8E2D68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x8E2930", Offset = "0x8E2930", VA = "0x8E2930")]
		[DebuggerHidden]
		public <SetEndingAfterButtonAnimationsComplete>d__144(int <>1__state)
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x8E2958", Offset = "0x8E2958", VA = "0x8E2958", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x8E295C", Offset = "0x8E295C", VA = "0x8E295C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x8E2D28", Offset = "0x8E2D28", VA = "0x8E2D28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A0")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass150_0
	{
		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Game <>4__this;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool fadeFinished;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool fadingIn;

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x8E2D70", Offset = "0x8E2D70", VA = "0x8E2D70")]
		public <>c__DisplayClass150_0()
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x8E2D78", Offset = "0x8E2D78", VA = "0x8E2D78")]
		internal void <Restart>b__0()
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x8E2EC8", Offset = "0x8E2EC8", VA = "0x8E2EC8")]
		internal void <Restart>b__1()
		{
		}
	}

	[Token(Token = "0x20001A1")]
	[CompilerGenerated]
	private sealed class <Restart>d__150 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Game <>4__this;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass150_0 <>8__1;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <parableWasReady>5__2;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <countTimer>5__3;

		[Token(Token = "0x17000119")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000985")]
			[Address(RVA = "0x8E36D0", Offset = "0x8E36D0", VA = "0x8E36D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000987")]
			[Address(RVA = "0x8E3718", Offset = "0x8E3718", VA = "0x8E3718", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x8E2ED0", Offset = "0x8E2ED0", VA = "0x8E2ED0")]
		[DebuggerHidden]
		public <Restart>d__150(int <>1__state)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x8E2EF8", Offset = "0x8E2EF8", VA = "0x8E2EF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x8E2EFC", Offset = "0x8E2EFC", VA = "0x8E2EFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x8E36D8", Offset = "0x8E36D8", VA = "0x8E36D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A2")]
	[CompilerGenerated]
	private sealed class <ScreenInputError>d__183 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip errorSound;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Game <>4__this;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string message;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__2;

		[Token(Token = "0x1700011B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600098B")]
			[Address(RVA = "0x8E39B0", Offset = "0x8E39B0", VA = "0x8E39B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600098D")]
			[Address(RVA = "0x8E39F8", Offset = "0x8E39F8", VA = "0x8E39F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x8E3720", Offset = "0x8E3720", VA = "0x8E3720")]
		[DebuggerHidden]
		public <ScreenInputError>d__183(int <>1__state)
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x8E3748", Offset = "0x8E3748", VA = "0x8E3748", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x8E374C", Offset = "0x8E374C", VA = "0x8E374C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x8E39B8", Offset = "0x8E39B8", VA = "0x8E39B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A3")]
	[CompilerGenerated]
	private sealed class <ResumeAfterPauseDismissed>d__192 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Game <>4__this;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <pauseEndTime>5__2;

		[Token(Token = "0x1700011D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000991")]
			[Address(RVA = "0x8E3BF0", Offset = "0x8E3BF0", VA = "0x8E3BF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0x8E3C38", Offset = "0x8E3C38", VA = "0x8E3C38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x8E3A00", Offset = "0x8E3A00", VA = "0x8E3A00")]
		[DebuggerHidden]
		public <ResumeAfterPauseDismissed>d__192(int <>1__state)
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x8E3A28", Offset = "0x8E3A28", VA = "0x8E3A28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x8E3A2C", Offset = "0x8E3A2C", VA = "0x8E3A2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x8E3BF8", Offset = "0x8E3BF8", VA = "0x8E3BF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A4")]
	[CompilerGenerated]
	private sealed class <ShowPauseMenu>d__194 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Game <>4__this;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <pauseEndTime>5__2;

		[Token(Token = "0x1700011F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000997")]
			[Address(RVA = "0x8E3E00", Offset = "0x8E3E00", VA = "0x8E3E00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000999")]
			[Address(RVA = "0x8E3E48", Offset = "0x8E3E48", VA = "0x8E3E48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x8E3C40", Offset = "0x8E3C40", VA = "0x8E3C40")]
		[DebuggerHidden]
		public <ShowPauseMenu>d__194(int <>1__state)
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x8E3C68", Offset = "0x8E3C68", VA = "0x8E3C68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x8E3C6C", Offset = "0x8E3C6C", VA = "0x8E3C6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x8E3E08", Offset = "0x8E3E08", VA = "0x8E3E08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A6")]
	[CompilerGenerated]
	private sealed class <RigidbodyShake>d__204 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Game <>4__this;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float strength;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x17000121")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009A0")]
			[Address(RVA = "0x8E4030", Offset = "0x8E4030", VA = "0x8E4030", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009A2")]
			[Address(RVA = "0x8E4078", Offset = "0x8E4078", VA = "0x8E4078", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x8E3ED8", Offset = "0x8E3ED8", VA = "0x8E3ED8")]
		[DebuggerHidden]
		public <RigidbodyShake>d__204(int <>1__state)
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x8E3F00", Offset = "0x8E3F00", VA = "0x8E3F00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x8E3F04", Offset = "0x8E3F04", VA = "0x8E3F04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x8E4038", Offset = "0x8E4038", VA = "0x8E4038", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008CD")]
	private const string restartCountPrefsKey = "RESTARTS";

	[Token(Token = "0x40008CE")]
	private const string subtitlesEnabledPrefsKey = "SUBTITLES";

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableHmdFocusPause;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool enableHandDebugMode;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool forceSandwormEnding;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public NukeOvrHand.AnimId debugHandAnim;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject debugHandObject;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Game instance;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material endingLightOffMaterial;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material endingLightOnMaterial;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject IntroDialogPrefab;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject CoffeeDialogPrefab;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool skipIntroInEditor;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ScreenController screenWidget;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RigidbodyInteractions rigidBodies;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SubtitleSystem subtitles;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GrabbableScrewdriver screwDriver;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GrabbableHammer hammer;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool lightHeld;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject pauseMenuPrefab;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject touchPauseMenuPrefab;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	internal BlackLight blacklightWidget;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	internal CountDown countdownWidget;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	internal Diamond diamondWidget;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	internal Door door;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	internal Hammer hammerWidget;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	internal Key keyWidget;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	internal Screwdriver screwdriverWidget;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	internal State state;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	internal TimeMachineKeypad timeMachineKeypadWidget;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	internal IPointer pointer;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	internal EndingInfo activeEndingInfo;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	internal BaseEnding activeEnding;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	internal IlluminatiButton illuminatiButtonWidget;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	internal RGBYPanel rgbyButtonsWidget;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	internal FibonacciPanel fibonacciPanelWidget;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	internal TopDrawer topDrawerWidget;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	internal Receiver topDrawerReceiverWidget;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	internal CoffeeCup coffeeCupWidget;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	internal HamsterDoor hamsterDoorWidget;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	internal WingsPanel wingsPanelWidget;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	internal BackupMachine backupMachine;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	internal ClockPanel clockPanel;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private HammerDrawer hammerDrawerWidget;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private BinaryKeypad benderKeypadWidget;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private BlackLightDrawer blackLightDrawerWidget;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Clock clockWidget;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Counter counterWidget;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private D4Drawer d4DrawerWidget;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Endings endings;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private FourDigitKeypad fourDigitKeypadWidget;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private GreenButtonsPanel greenButtonsWidget;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private NukeSwitch nukeEnableWidget;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private PianoKeypad pianoKeypadWidget;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private RomanNumeralsPanel romanNumeralsWidget;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private GameObject[] roomFX;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private ScrewdriverDrawer screwdriverDrawerWidget;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private SevenBySevenKeypad sevenBySevenKeypad;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private TenDigitKeypad tenDigitKeypadWidget;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private ThreeByFiveKeypad threeByFiveKeypad;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private ThrowSwitch throwSwitchWidget;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private Passport passportWidget;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private FiveByFiveKeypad fiveByFiveKeypad;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private CoffeeButton coffeeButton;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private CoffeePlatform coffeePlatform;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private HiddenArrows hiddenArrowsWidget;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private ResetSwitch resetSwitch;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Gasmask gasMaskWidget;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private List<NukeObject> widgetsStillRestarting;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private bool hasUsedAnything;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public TeleportationManager teleporter;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public List<XRBaseInteractor> grabbers;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public List<WhiteboardMarker> markers;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private GameObject pauseMenu;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Dictionary<Animator, Coroutine> animatorCoroutines;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Coroutine buttonsCheck;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Coroutine screenInputBlinking;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[SerializeField]
	private ScreenFader screenFader;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[SerializeField]
	private AudioClip rewardPlacementClip;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[SerializeField]
	private AudioClip screenInputIncorrect;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[SerializeField]
	private AudioClip screenInputBadTime;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[SerializeField]
	private GameObject touchIndicatorPrefab;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x281")]
	private bool wasDisplayingInputBeforePause;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private int perfectionistButtonPresses;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private int totalButtonPresses;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private float litterbugStartTime;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private bool litterbugStarted;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public Action<bool> OnPauseOrResume;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public Action<bool> SubtitlesEnabled;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public Action<string, float> SubtitlesChanged;

	[NonSerialized]
	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public bool forceCoffeeEnding;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	internal readonly HashSet<Widget> widgetsBeingRevealed;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[SerializeField]
	private InputActionAsset actionAsset;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private InputAction _activateL;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private InputAction _activateR;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private InputAction _pauseL;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action WillRestart;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private List<Canvas> enabledCanvases;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public bool posterThrownOrAligned;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	[SerializeField]
	private GameObject key;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	[SerializeField]
	private GameObject floppy;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private Ending debugending;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private CountdownTimer processPointerCooldown;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	private int cameraShakeClipIndex;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	private bool isPauseTransitioning;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private List<Renderer> cachedEndingRenderers;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private float shakeStart;

	[Token(Token = "0x17000109")]
	public PosterShowcase PosterShowcase
	{
		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x8D93A0", Offset = "0x8D93A0", VA = "0x8D93A0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x8D93A8", Offset = "0x8D93A8", VA = "0x8D93A8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700010A")]
	public bool IsPaused
	{
		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x8D93B8", Offset = "0x8D93B8", VA = "0x8D93B8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x8D93C0", Offset = "0x8D93C0", VA = "0x8D93C0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700010B")]
	public UseContext CurrUseContext
	{
		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x8D93CC", Offset = "0x8D93CC", VA = "0x8D93CC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x8D93D4", Offset = "0x8D93D4", VA = "0x8D93D4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700010C")]
	public static bool CanRestart
	{
		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x8D93E4", Offset = "0x8D93E4", VA = "0x8D93E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700010D")]
	public bool ShowSubtitles
	{
		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x8D9590", Offset = "0x8D9590", VA = "0x8D9590")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x8D95E4", Offset = "0x8D95E4", VA = "0x8D95E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700010E")]
	public static bool IsApplicationQuitting
	{
		[Token(Token = "0x600094A")]
		[Address(RVA = "0x8DFD14", Offset = "0x8DFD14", VA = "0x8DFD14")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600094B")]
		[Address(RVA = "0x8DFD5C", Offset = "0x8DFD5C", VA = "0x8DFD5C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600094C")]
		[Address(RVA = "0x8DFDA8", Offset = "0x8DFDA8", VA = "0x8DFDA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x8D9630", Offset = "0x8D9630", VA = "0x8D9630")]
	public void Awake()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x8DA038", Offset = "0x8DA038", VA = "0x8DA038")]
	private void CheckEntitlements()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x8DA168", Offset = "0x8DA168", VA = "0x8DA168")]
	private void HandleVRFocusAcquired()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x8DA2B8", Offset = "0x8DA2B8", VA = "0x8DA2B8")]
	private void HandleVRFocusLost()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x8DA688", Offset = "0x8DA688", VA = "0x8DA688")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x8DA78C", Offset = "0x8DA78C", VA = "0x8DA78C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x8DA9A4", Offset = "0x8DA9A4", VA = "0x8DA9A4")]
	private void DebugJunk()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x8DAC44", Offset = "0x8DAC44", VA = "0x8DAC44")]
	public void Update()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x8D1D34", Offset = "0x8D1D34", VA = "0x8D1D34")]
	public UseResult ProcessPointer(IPointer p)
	{
		return default(UseResult);
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x8DAC94", Offset = "0x8DAC94", VA = "0x8DAC94")]
	private void GenerateHapticsClip()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x8DAD28", Offset = "0x8DAD28", VA = "0x8DAD28")]
	public void Start()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x8DB130", Offset = "0x8DB130", VA = "0x8DB130")]
	private void SetInitialPlayerPosition()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x8DAFA0", Offset = "0x8DAFA0", VA = "0x8DAFA0")]
	[IteratorStateMachine(typeof(<StartGame>d__133))]
	private IEnumerator StartGame()
	{
		return null;
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x8DB304", Offset = "0x8DB304", VA = "0x8DB304")]
	public static bool IsInEnding(Ending e)
	{
		return default(bool);
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x8DB3D0", Offset = "0x8DB3D0", VA = "0x8DB3D0")]
	public void ClearSave()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x8DB724", Offset = "0x8DB724", VA = "0x8DB724")]
	[IteratorStateMachine(typeof(<EndingReward>d__136))]
	private IEnumerator EndingReward()
	{
		return null;
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x8DB798", Offset = "0x8DB798", VA = "0x8DB798")]
	public void setPosterThrownOrAligned(bool isPosterTOA)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x8DB7A4", Offset = "0x8DB7A4", VA = "0x8DB7A4")]
	public void CompletePosterShowcase()
	{
	}

	[Token(Token = "0x6000907")]
	private static void FindWidget<T>(out T o) where T : UnityEngine.Object
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x8DB910", Offset = "0x8DB910", VA = "0x8DB910")]
	[IteratorStateMachine(typeof(<Intro>d__140))]
	private IEnumerator Intro()
	{
		return null;
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x8DB984", Offset = "0x8DB984", VA = "0x8DB984")]
	private DialogPlayer PlayDialog(Ending ending)
	{
		return null;
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x8DBAD0", Offset = "0x8DBAD0", VA = "0x8DBAD0")]
	private void SetModePlaying()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x8D059C", Offset = "0x8D059C", VA = "0x8D059C")]
	public void SetModeEnding(Ending e)
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x8DBBF4", Offset = "0x8DBBF4", VA = "0x8DBBF4")]
	[IteratorStateMachine(typeof(<SetEndingAfterButtonAnimationsComplete>d__144))]
	private IEnumerator SetEndingAfterButtonAnimationsComplete(Ending e)
	{
		return null;
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x8DBC78", Offset = "0x8DBC78", VA = "0x8DBC78")]
	private bool ButtonsAreAnimating(IEnumerable<GameObject> buttons)
	{
		return default(bool);
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x8DC22C", Offset = "0x8DC22C", VA = "0x8DC22C")]
	public void OnEndingFinished()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x8DB698", Offset = "0x8DB698", VA = "0x8DB698")]
	private void SetModeRestart()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x8DAC08", Offset = "0x8DAC08", VA = "0x8DAC08")]
	private void SetModeEndingReward()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x8DC324", Offset = "0x8DC324", VA = "0x8DC324")]
	public void OnWidgetRestartFinished(NukeObject obj)
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x8DC2B0", Offset = "0x8DC2B0", VA = "0x8DC2B0")]
	[IteratorStateMachine(typeof(<Restart>d__150))]
	private IEnumerator Restart()
	{
		return null;
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x8DC37C", Offset = "0x8DC37C", VA = "0x8DC37C")]
	private static void DestroyEndingFx()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x8DC440", Offset = "0x8DC440", VA = "0x8DC440")]
	public void SetRoomFxActive(bool isActive)
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x8DC4A8", Offset = "0x8DC4A8", VA = "0x8DC4A8")]
	public void RestartScene()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x8DC6A8", Offset = "0x8DC6A8", VA = "0x8DC6A8")]
	public void RestartSceneExceptHammer()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x8DC998", Offset = "0x8DC998", VA = "0x8DC998")]
	public void RestartSceneExceptIlluminatiButton()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x8DB540", Offset = "0x8DB540", VA = "0x8DB540")]
	public void UnlockAchievement(string achievementName)
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x8DB014", Offset = "0x8DB014", VA = "0x8DB014")]
	public void CheckAchievementsUnlocked()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x8DCBE8", Offset = "0x8DCBE8", VA = "0x8DCBE8")]
	private void AchievementCallback(Message msg)
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x8DCC2C", Offset = "0x8DCC2C", VA = "0x8DCC2C")]
	public void OnButtonPress()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x8DCCB8", Offset = "0x8DCCB8", VA = "0x8DCCB8")]
	public void OnPerfectionistButtonPress()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x8DCD0C", Offset = "0x8DCD0C", VA = "0x8DCD0C")]
	public void OnPaperBallPickedUp()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x8DBB98", Offset = "0x8DBB98", VA = "0x8DBB98")]
	private void StartPeaceTimer()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x8DAC48", Offset = "0x8DAC48", VA = "0x8DAC48")]
	public void CancelPeaceTimer()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x8DCD38", Offset = "0x8DCD38", VA = "0x8DCD38")]
	public void StartErgophobiaTimer()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x8DCD8C", Offset = "0x8DCD8C", VA = "0x8DCD8C")]
	private void CancelErgophobiaTimer()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x8DCDD8", Offset = "0x8DCDD8", VA = "0x8DCDD8")]
	private void OnPeaceTimerElapsed()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x8DCDE0", Offset = "0x8DCDE0", VA = "0x8DCDE0")]
	private void OnErgophobiaTimerElapsed()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x8DCE28", Offset = "0x8DCE28", VA = "0x8DCE28")]
	public void OnThrowSwitchLeft()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x8DCE94", Offset = "0x8DCE94", VA = "0x8DCE94")]
	public void DisableKeyCollider()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x8DCEF4", Offset = "0x8DCEF4", VA = "0x8DCEF4")]
	public void OnThrowSwitchRight()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x8DCF34", Offset = "0x8DCF34", VA = "0x8DCF34")]
	public void OnNukeEnable()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x8DCF70", Offset = "0x8DCF70", VA = "0x8DCF70")]
	public void OnCityBombTrigger(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x8DD054", Offset = "0x8DD054", VA = "0x8DD054")]
	public void OnRedButton()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x8DD448", Offset = "0x8DD448", VA = "0x8DD448")]
	public void OnRestartSwitch()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x8DD968", Offset = "0x8DD968", VA = "0x8DD968")]
	public bool On7x7Diamond()
	{
		return default(bool);
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x8DD9A8", Offset = "0x8DD9A8", VA = "0x8DD9A8")]
	public void OnAllHiddenButtonsPressed()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x8DD9CC", Offset = "0x8DD9CC", VA = "0x8DD9CC")]
	public void OnScreenInput(ScreenInputMode mode, string input)
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x8DE628", Offset = "0x8DE628", VA = "0x8DE628")]
	public void OnClockCodeEntered()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x8DE630", Offset = "0x8DE630", VA = "0x8DE630")]
	public bool OnCounterSubmit(int count)
	{
		return default(bool);
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x8DE67C", Offset = "0x8DE67C", VA = "0x8DE67C")]
	private void UpdateEndingRelatedWidgets()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x8DE758", Offset = "0x8DE758", VA = "0x8DE758")]
	private void ChangeScreenInputMode(ScreenInputMode newMode)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x8DDB00", Offset = "0x8DDB00", VA = "0x8DDB00")]
	private void PushScreenInput(ScreenInputMode mode, string input)
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x8DEC64", Offset = "0x8DEC64", VA = "0x8DEC64")]
	[IteratorStateMachine(typeof(<ScreenInputError>d__183))]
	private IEnumerator ScreenInputError(string message, AudioClip errorSound)
	{
		return null;
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x8DE8DC", Offset = "0x8DE8DC", VA = "0x8DE8DC")]
	private void UpdateScreenInputDisplay()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x8DED08", Offset = "0x8DED08", VA = "0x8DED08")]
	public void ClearScreenInputDisplay()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x8DEDAC", Offset = "0x8DEDAC", VA = "0x8DEDAC")]
	private void FailedEntitlement()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x8DEE6C", Offset = "0x8DEE6C", VA = "0x8DEE6C")]
	public void TogglePauseMenu()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x8DF024", Offset = "0x8DF024", VA = "0x8DF024")]
	public void TogglePauseMenu(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x8DA554", Offset = "0x8DA554", VA = "0x8DA554")]
	private void PauseGame()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x8DEF08", Offset = "0x8DEF08", VA = "0x8DEF08")]
	private void ResumeGame()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x8DF7A4", Offset = "0x8DF7A4", VA = "0x8DF7A4")]
	[IteratorStateMachine(typeof(<ResumeAfterPauseDismissed>d__192))]
	private IEnumerator ResumeAfterPauseDismissed()
	{
		return null;
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x8DF0C0", Offset = "0x8DF0C0", VA = "0x8DF0C0")]
	private void ToggleGrab(int grabberIndex, bool enable)
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x8DF818", Offset = "0x8DF818", VA = "0x8DF818")]
	[IteratorStateMachine(typeof(<ShowPauseMenu>d__194))]
	private IEnumerator ShowPauseMenu()
	{
		return null;
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x8DF88C", Offset = "0x8DF88C", VA = "0x8DF88C")]
	private void OnLongPausePress()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x8DB604", Offset = "0x8DB604", VA = "0x8DB604")]
	private void SetGamePaused(bool newState)
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x8DF1C4", Offset = "0x8DF1C4", VA = "0x8DF1C4")]
	private void TogglePauseRenderables(bool enable)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x8DF890", Offset = "0x8DF890", VA = "0x8DF890")]
	public void AddAnimatorCoroutine(Animator animator, Coroutine coroutine)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x8DF95C", Offset = "0x8DF95C", VA = "0x8DF95C")]
	public void StopAnimatorCoroutine(Animator animator)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x8DF9E0", Offset = "0x8DF9E0", VA = "0x8DF9E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x8DF9E4", Offset = "0x8DF9E4", VA = "0x8DF9E4")]
	public void ShakeCamera(float duration, float strength = 0.1f)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x8DFC4C", Offset = "0x8DFC4C", VA = "0x8DFC4C")]
	[IteratorStateMachine(typeof(<RigidbodyShake>d__204))]
	private IEnumerator RigidbodyShake(float duration, float strength)
	{
		return null;
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x8DFCD4", Offset = "0x8DFCD4", VA = "0x8DFCD4")]
	public void RigidbodyUseGravity()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x8D0CA0", Offset = "0x8D0CA0", VA = "0x8D0CA0")]
	public void ShakeHaptics(GameObject hand, float amplitute = 0.25f, float duration = 0.05f)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x8DFCEC", Offset = "0x8DFCEC", VA = "0x8DFCEC")]
	public void SetSubtitleText(string text, float time)
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x8DFD08", Offset = "0x8DFD08", VA = "0x8DFD08")]
	public void DirtyUsedObject()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x8DFE54", Offset = "0x8DFE54", VA = "0x8DFE54")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x8DFE98", Offset = "0x8DFE98", VA = "0x8DFE98")]
	public void HandleApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x8DFFC0", Offset = "0x8DFFC0", VA = "0x8DFFC0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x8DFFC8", Offset = "0x8DFFC8", VA = "0x8DFFC8")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x8DFFD4", Offset = "0x8DFFD4", VA = "0x8DFFD4")]
	public Game()
	{
	}
}
[Token(Token = "0x20001A7")]
public enum Ending
{
	[Token(Token = "0x400098E")]
	None,
	[Token(Token = "0x400098F")]
	Peace,
	[Token(Token = "0x4000990")]
	Broken,
	[Token(Token = "0x4000991")]
	Nuke,
	[Token(Token = "0x4000992")]
	Pentagram,
	[Token(Token = "0x4000993")]
	Illuminati,
	[Token(Token = "0x4000994")]
	Past,
	[Token(Token = "0x4000995")]
	Future,
	[Token(Token = "0x4000996")]
	YinYang,
	[Token(Token = "0x4000997")]
	BlackHole,
	[Token(Token = "0x4000998")]
	Bender,
	[Token(Token = "0x4000999")]
	SpaceInvader,
	[Token(Token = "0x400099A")]
	Asteroid,
	[Token(Token = "0x400099B")]
	Cthulhu,
	[Token(Token = "0x400099C")]
	Panda,
	[Token(Token = "0x400099D")]
	CityBoom,
	[Token(Token = "0x400099E")]
	BloodyBaby,
	[Token(Token = "0x400099F")]
	DeathStar,
	[Token(Token = "0x40009A0")]
	HappyDemon,
	[Token(Token = "0x40009A1")]
	Sandworm,
	[Token(Token = "0x40009A2")]
	StanleyParable,
	[Token(Token = "0x40009A3")]
	PapersPlease,
	[Token(Token = "0x40009A4")]
	Earthquake,
	[Token(Token = "0x40009A5")]
	Rocket,
	[Token(Token = "0x40009A6")]
	Ocean,
	[Token(Token = "0x40009A7")]
	Poltergeist,
	[Token(Token = "0x40009A8")]
	ToxicCloud,
	[Token(Token = "0x40009A9")]
	OfficeSpace,
	[Token(Token = "0x40009AA")]
	LitterBug,
	[Token(Token = "0x40009AB")]
	Wargames,
	[Token(Token = "0x40009AC")]
	Coffee
}
[Token(Token = "0x20001A8")]
public class Gasmask : Holdable
{
	[Token(Token = "0x20001A9")]
	[CompilerGenerated]
	private sealed class <SnapWhenNoLongerGrabbed>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gasmask <>4__this;

		[Token(Token = "0x17000124")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009B4")]
			[Address(RVA = "0x8E57D8", Offset = "0x8E57D8", VA = "0x8E57D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009B6")]
			[Address(RVA = "0x8E5820", Offset = "0x8E5820", VA = "0x8E5820", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x8E47A4", Offset = "0x8E47A4", VA = "0x8E47A4")]
		[DebuggerHidden]
		public <SnapWhenNoLongerGrabbed>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x8E54B8", Offset = "0x8E54B8", VA = "0x8E54B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x8E54BC", Offset = "0x8E54BC", VA = "0x8E54BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x8E57E0", Offset = "0x8E57E0", VA = "0x8E57E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AA")]
	[CompilerGenerated]
	private sealed class <SnapWhenLerpCompletes>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gasmask <>4__this;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <lerpTweenSpeed>5__3;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <origLerpFromvalue>5__4;

		[Token(Token = "0x17000126")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009BA")]
			[Address(RVA = "0x8E5C04", Offset = "0x8E5C04", VA = "0x8E5C04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009BC")]
			[Address(RVA = "0x8E5C4C", Offset = "0x8E5C4C", VA = "0x8E5C4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x8E4840", Offset = "0x8E4840", VA = "0x8E4840")]
		[DebuggerHidden]
		public <SnapWhenLerpCompletes>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x8E5828", Offset = "0x8E5828", VA = "0x8E5828", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x8E582C", Offset = "0x8E582C", VA = "0x8E582C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x8E5C0C", Offset = "0x8E5C0C", VA = "0x8E5C0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private GameObject visor;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private AudioClip gasmaskWornMusic;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Renderer maskRenderer;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private XRGrabInteractable interactable;

	[Token(Token = "0x40009B1")]
	private const float SNAP_TOLERANCE = 0.01f;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float origTweenPercentage;

	[Token(Token = "0x17000123")]
	public bool IsMaskWorn
	{
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x8E4080", Offset = "0x8E4080", VA = "0x8E4080")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x8E4088", Offset = "0x8E4088", VA = "0x8E4088")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x8E4094", Offset = "0x8E4094", VA = "0x8E4094", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x8E40C0", Offset = "0x8E40C0", VA = "0x8E40C0", Slot = "9")]
	public override bool CanBeUsedOnTarget(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x8E4144", Offset = "0x8E4144", VA = "0x8E4144", Slot = "10")]
	public override void UseOnTarget(UseContext context)
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x8E4670", Offset = "0x8E4670", VA = "0x8E4670", Slot = "12")]
	protected override void OnPickUp()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x8E4730", Offset = "0x8E4730", VA = "0x8E4730")]
	[IteratorStateMachine(typeof(<SnapWhenNoLongerGrabbed>d__14))]
	private IEnumerator SnapWhenNoLongerGrabbed()
	{
		return null;
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x8E47CC", Offset = "0x8E47CC", VA = "0x8E47CC")]
	[IteratorStateMachine(typeof(<SnapWhenLerpCompletes>d__15))]
	private IEnumerator SnapWhenLerpCompletes()
	{
		return null;
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x8E4868", Offset = "0x8E4868", VA = "0x8E4868", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x8E50AC", Offset = "0x8E50AC", VA = "0x8E50AC", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x8E5114", Offset = "0x8E5114", VA = "0x8E5114")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x8E53F8", Offset = "0x8E53F8", VA = "0x8E53F8")]
	public Gasmask()
	{
	}
}
[Token(Token = "0x20001AC")]
public class GhostPoster : MonoBehaviour
{
	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hasCreditedAchievement;

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x8E5CD4", Offset = "0x8E5CD4", VA = "0x8E5CD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x8E5EF0", Offset = "0x8E5EF0", VA = "0x8E5EF0")]
	public GhostPoster()
	{
	}
}
[Token(Token = "0x20001AD")]
public class GreenButtonsPanel : KeypadWidget
{
	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioClip keyHoleRevealClip;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioClip useKeyHoleClip;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform keyholeXform;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private MeshRenderer keyInserted;

	[Token(Token = "0x17000128")]
	public Transform KeyholeXform
	{
		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x8E5EF8", Offset = "0x8E5EF8", VA = "0x8E5EF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000129")]
	public bool IsKeyholeRevealed
	{
		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x8E5F00", Offset = "0x8E5F00", VA = "0x8E5F00")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x8E5F08", Offset = "0x8E5F08", VA = "0x8E5F08")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x8E5F14", Offset = "0x8E5F14", VA = "0x8E5F14", Slot = "6")]
	public override bool CanUse(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x8E5F1C", Offset = "0x8E5F1C", VA = "0x8E5F1C", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x8E5FAC", Offset = "0x8E5FAC", VA = "0x8E5FAC", Slot = "13")]
	protected override void OnRestartBegin()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x8E5FD4", Offset = "0x8E5FD4", VA = "0x8E5FD4")]
	public void RevealKeyhole()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x8E60E8", Offset = "0x8E60E8", VA = "0x8E60E8")]
	public void UseKey(Key key)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x8E6250", Offset = "0x8E6250", VA = "0x8E6250", Slot = "16")]
	protected override void OnRevealEnd()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x8E6340", Offset = "0x8E6340", VA = "0x8E6340")]
	public GreenButtonsPanel()
	{
	}
}
[Token(Token = "0x20001AF")]
public class GuardianAdjuster : MonoBehaviour
{
	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x8E6420", Offset = "0x8E6420", VA = "0x8E6420")]
	private void AdjustCameraPosition()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x8E660C", Offset = "0x8E660C", VA = "0x8E660C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x8E6610", Offset = "0x8E6610", VA = "0x8E6610")]
	public GuardianAdjuster()
	{
	}
}
[Token(Token = "0x20001B0")]
public class Hammer : Tool
{
	[Token(Token = "0x20001B7")]
	[CompilerGenerated]
	private sealed class <StartBloodyBaby>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Game <game>5__2;

		[Token(Token = "0x1700012A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x8E8370", Offset = "0x8E8370", VA = "0x8E8370", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0x8E83B8", Offset = "0x8E83B8", VA = "0x8E83B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x8E7B58", Offset = "0x8E7B58", VA = "0x8E7B58")]
		[DebuggerHidden]
		public <StartBloodyBaby>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x8E81DC", Offset = "0x8E81DC", VA = "0x8E81DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x8E81E0", Offset = "0x8E81E0", VA = "0x8E81E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x8E8378", Offset = "0x8E8378", VA = "0x8E8378", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject hitEffect;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClip hitSound;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	internal AudioClip customHitSound;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private NukeOvrHand lefttHand;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private NukeOvrHand rightHand;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private HammerDrawer drawer;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Collider hammerHeadCollider;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private Collider hammerClawCollider;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private Renderer regularRenderer;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private Renderer flippedRenderer;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private CountdownTimer hammerCollisionHitTimer;

	[Token(Token = "0x40009D2")]
	private const float SmashMagnitude = 0.7f;

	[Token(Token = "0x40009D3")]
	private const float HammerCollisionHitCooldownSec = 0.2f;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public bool isPrying;

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x8E6618", Offset = "0x8E6618", VA = "0x8E6618", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x8E6680", Offset = "0x8E6680", VA = "0x8E6680")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x8E6748", Offset = "0x8E6748", VA = "0x8E6748", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x8E6774", Offset = "0x8E6774", VA = "0x8E6774", Slot = "14")]
	protected override void OnRestart()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x8E67EC", Offset = "0x8E67EC", VA = "0x8E67EC")]
	public void OnDrawerClosed()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x8E6818", Offset = "0x8E6818", VA = "0x8E6818", Slot = "9")]
	public override bool CanBeUsedOnTarget(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x8E6C38", Offset = "0x8E6C38", VA = "0x8E6C38", Slot = "10")]
	public override void UseOnTarget(UseContext context)
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x8E7AF8", Offset = "0x8E7AF8", VA = "0x8E7AF8")]
	[IteratorStateMachine(typeof(<StartBloodyBaby>d__21))]
	private IEnumerator StartBloodyBaby()
	{
		return null;
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x8E7B80", Offset = "0x8E7B80", VA = "0x8E7B80")]
	public void AnimEvent_HitSound()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x8E7D40", Offset = "0x8E7D40", VA = "0x8E7D40")]
	public void HandleTouchCollision(Collider collider)
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x8E7EAC", Offset = "0x8E7EAC", VA = "0x8E7EAC")]
	public void ToggleFlippedRenderer(bool flip)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x8E7EB0", Offset = "0x8E7EB0", VA = "0x8E7EB0")]
	public Hammer()
	{
	}
}
[Token(Token = "0x20001B8")]
public class HammerDrawer : Widget
{
	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x8E83C0", Offset = "0x8E83C0", VA = "0x8E83C0", Slot = "15")]
	protected override void OnRevealBegin()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x8E8424", Offset = "0x8E8424", VA = "0x8E8424", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x8E849C", Offset = "0x8E849C", VA = "0x8E849C", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x8E8520", Offset = "0x8E8520", VA = "0x8E8520", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x8E8528", Offset = "0x8E8528", VA = "0x8E8528")]
	public HammerDrawer()
	{
	}
}
[Token(Token = "0x20001B9")]
public class HamsterDoor : Widget
{
	[Token(Token = "0x20001BA")]
	[CompilerGenerated]
	private sealed class <DoEscape>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HamsterDoor <>4__this;

		[Token(Token = "0x1700012C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A00")]
			[Address(RVA = "0x8E8A4C", Offset = "0x8E8A4C", VA = "0x8E8A4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0x8E8A94", Offset = "0x8E8A94", VA = "0x8E8A94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x8E8814", Offset = "0x8E8814", VA = "0x8E8814")]
		[DebuggerHidden]
		public <DoEscape>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x8E88D0", Offset = "0x8E88D0", VA = "0x8E88D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x8E88D4", Offset = "0x8E88D4", VA = "0x8E88D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x8E8A54", Offset = "0x8E8A54", VA = "0x8E8A54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Hamster[] hamsters;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SpinObject hamsterWheel;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioSource panelHitAudio;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioSource reelToReelAudio;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private AudioSource machineFailureSound;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<Collider> screwColliders;

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x8E8530", Offset = "0x8E8530", VA = "0x8E8530", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x8E85F8", Offset = "0x8E85F8", VA = "0x8E85F8", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x8E867C", Offset = "0x8E867C", VA = "0x8E867C", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x8E8684", Offset = "0x8E8684", VA = "0x8E8684", Slot = "15")]
	protected override void OnRevealBegin()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x8E87A0", Offset = "0x8E87A0", VA = "0x8E87A0")]
	[IteratorStateMachine(typeof(<DoEscape>d__10))]
	private IEnumerator DoEscape()
	{
		return null;
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x8E883C", Offset = "0x8E883C", VA = "0x8E883C", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x8E88C8", Offset = "0x8E88C8", VA = "0x8E88C8")]
	public HamsterDoor()
	{
	}
}
[Token(Token = "0x20001BB")]
public class Hand : MonoBehaviour
{
	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x8E8A9C", Offset = "0x8E8A9C", VA = "0x8E8A9C")]
	private void SetVisibility(bool visible)
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x8E8B4C", Offset = "0x8E8B4C", VA = "0x8E8B4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x8E8B9C", Offset = "0x8E8B9C", VA = "0x8E8B9C")]
	public Hand()
	{
	}
}
[Token(Token = "0x20001BC")]
public class HiddenArrow : Widget
{
	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MeshRenderer[] renderers;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private BoxCollider boxCollider;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private WidgetProxy widgetProxy;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isVisible;

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x8E8BA4", Offset = "0x8E8BA4", VA = "0x8E8BA4", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x8E8CE4", Offset = "0x8E8CE4", VA = "0x8E8CE4", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x8E8CEC", Offset = "0x8E8CEC", VA = "0x8E8CEC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x8E8E08", Offset = "0x8E8E08", VA = "0x8E8E08", Slot = "15")]
	protected override void OnRevealBegin()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x8E8E28", Offset = "0x8E8E28", VA = "0x8E8E28", Slot = "16")]
	protected override void OnRevealEnd()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x8E8E54", Offset = "0x8E8E54", VA = "0x8E8E54", Slot = "13")]
	protected override void OnRestartBegin()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x8E8EB0", Offset = "0x8E8EB0", VA = "0x8E8EB0", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x8E8EBC", Offset = "0x8E8EBC", VA = "0x8E8EBC", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x8E8EC4", Offset = "0x8E8EC4", VA = "0x8E8EC4", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x8E8ED4", Offset = "0x8E8ED4", VA = "0x8E8ED4", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x8E8C7C", Offset = "0x8E8C7C", VA = "0x8E8C7C")]
	private void Show(bool show)
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x8E9040", Offset = "0x8E9040", VA = "0x8E9040")]
	public HiddenArrow()
	{
	}
}
[Token(Token = "0x20001BD")]
public class HiddenArrows : Widget
{
	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject shadowArrow;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private HiddenArrow[] arrowButtons;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int arrowIndex;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 arrowLocalScale;

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x8E9068", Offset = "0x8E9068", VA = "0x8E9068", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x8E9118", Offset = "0x8E9118", VA = "0x8E9118", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x8E9120", Offset = "0x8E9120", VA = "0x8E9120", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x8E9128", Offset = "0x8E9128", VA = "0x8E9128", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x8E91F0", Offset = "0x8E91F0", VA = "0x8E91F0", Slot = "15")]
	protected override void OnRevealBegin()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x8E8F80", Offset = "0x8E8F80", VA = "0x8E8F80")]
	public void NextArrowButton()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x8E9230", Offset = "0x8E9230", VA = "0x8E9230")]
	public HiddenArrows()
	{
	}
}
[Token(Token = "0x20001BE")]
public abstract class Holdable : NukeObject
{
	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip pickupSound;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip putdownSound;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string pickupTrigger;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string putdownTrigger;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string putdownState;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool startsRevealed;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal ToolWidgetParams toolParams;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected IPointer attachedPointer;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject grabbingObject;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool pickedUp;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	internal AudioSource audioSource;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	internal Animator animator;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 startLocalScale;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected NukeObjectComponentToggler toggler;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private SlotForHoldable[] slots;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected Rigidbody rb;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private AudioClip vibrationClip;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public bool isTouchGrabbed;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public GameObject lastTouchedBy;

	[Token(Token = "0x1700012E")]
	public WidgetMode mode
	{
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x8E9238", Offset = "0x8E9238", VA = "0x8E9238")]
		[CompilerGenerated]
		get
		{
			return default(WidgetMode);
		}
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x8E9240", Offset = "0x8E9240", VA = "0x8E9240")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x1700012F")]
	protected Vector3 StartLocalPos
	{
		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x8E9248", Offset = "0x8E9248", VA = "0x8E9248")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x8E9254", Offset = "0x8E9254", VA = "0x8E9254")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000130")]
	protected Quaternion StartLocalRot
	{
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x8E9260", Offset = "0x8E9260", VA = "0x8E9260")]
		[CompilerGenerated]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x8E926C", Offset = "0x8E926C", VA = "0x8E926C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000131")]
	protected Transform StartParent
	{
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x8E9278", Offset = "0x8E9278", VA = "0x8E9278")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x8E9280", Offset = "0x8E9280", VA = "0x8E9280")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000132")]
	public bool IsIdle
	{
		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x8E9288", Offset = "0x8E9288", VA = "0x8E9288")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000133")]
	public bool IsRevealed
	{
		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x8E92B8", Offset = "0x8E92B8", VA = "0x8E92B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000134")]
	public bool IsUnrevealed
	{
		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x8E92C8", Offset = "0x8E92C8", VA = "0x8E92C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x8E92D8", Offset = "0x8E92D8", VA = "0x8E92D8", Slot = "7")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x8E40BC", Offset = "0x8E40BC", VA = "0x8E40BC", Slot = "8")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x8E9610", Offset = "0x8E9610", VA = "0x8E9610")]
	public void Lock()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x8E6B0C", Offset = "0x8E6B0C", VA = "0x8E6B0C")]
	public bool IsMySlot(NukeObject o)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x8E961C", Offset = "0x8E961C", VA = "0x8E961C")]
	public SlotForHoldable[] GetSlots()
	{
		return null;
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x8E9624", Offset = "0x8E9624", VA = "0x8E9624", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2C")]
	public abstract bool CanBeUsedOnTarget(UseContext useContext);

	[Token(Token = "0x6000A2D")]
	public abstract void UseOnTarget(UseContext context);

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x8E962C", Offset = "0x8E962C", VA = "0x8E962C", Slot = "11")]
	protected virtual void OnPutDown(SlotForHoldable slot)
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x8E472C", Offset = "0x8E472C", VA = "0x8E472C", Slot = "12")]
	protected virtual void OnPickUp()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x8E9630", Offset = "0x8E9630", VA = "0x8E9630", Slot = "13")]
	protected virtual void OnReveal()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x8E67E8", Offset = "0x8E67E8", VA = "0x8E67E8", Slot = "14")]
	protected virtual void OnRestart()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x8E9634", Offset = "0x8E9634", VA = "0x8E9634", Slot = "15")]
	public virtual bool CanGrabbableReset()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x8E9604", Offset = "0x8E9604", VA = "0x8E9604")]
	protected WidgetMode GetStartMode()
	{
		return default(WidgetMode);
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x8E4D58", Offset = "0x8E4D58", VA = "0x8E4D58", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x8E9648", Offset = "0x8E9648", VA = "0x8E9648", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x8E9994", Offset = "0x8E9994", VA = "0x8E9994", Slot = "16")]
	public virtual void Reveal()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x8E9B6C", Offset = "0x8E9B6C", VA = "0x8E9B6C")]
	public void PickUp()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x8E96D4", Offset = "0x8E96D4", VA = "0x8E96D4")]
	public void PickUp(IPointer pointer)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x8E9BA8", Offset = "0x8E9BA8", VA = "0x8E9BA8")]
	public void ResetPosition()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x8EA224", Offset = "0x8EA224", VA = "0x8EA224")]
	public void PutDown(float tweenTime = -1f)
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x8E453C", Offset = "0x8E453C", VA = "0x8E453C")]
	protected void PutDown(UseContext context)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x8EA794", Offset = "0x8EA794", VA = "0x8EA794")]
	private void PutDown(SlotForHoldable slot, float tweenTime = -1f)
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x8EA248", Offset = "0x8EA248", VA = "0x8EA248")]
	protected void PutDown(Transform targetParent, Vector3 targetLocalPos, Quaternion targetLocalRot, float tweenTime = -1f)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x8E9BC8", Offset = "0x8E9BC8", VA = "0x8E9BC8")]
	private void CompletePutDown(Transform targetParent, Vector3 targetLocalPos, Quaternion targetLocalRot, float tweenTime, bool canTween = true)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x8EA868", Offset = "0x8EA868", VA = "0x8EA868", Slot = "17")]
	public virtual void HandleTouchCollision(Collision collision)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x8E5400", Offset = "0x8E5400", VA = "0x8E5400")]
	protected Holdable()
	{
	}
}
[Token(Token = "0x20001C0")]
public class HoldableGhostController : MonoBehaviour
{
	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Collider targetCollider;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject ghostObject;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider cachedCollider;

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x8EA9C0", Offset = "0x8EA9C0", VA = "0x8EA9C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x8EA9E0", Offset = "0x8EA9E0", VA = "0x8EA9E0")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x8EAC90", Offset = "0x8EAC90", VA = "0x8EAC90")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x8EAB8C", Offset = "0x8EAB8C", VA = "0x8EAB8C")]
	private TouchPointer CreateTouchPointer()
	{
		return null;
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x8EAD28", Offset = "0x8EAD28", VA = "0x8EAD28")]
	public HoldableGhostController()
	{
	}
}
[Token(Token = "0x20001C1")]
public class IlluminatiButton : Widget
{
	[Token(Token = "0x20001C2")]
	[CompilerGenerated]
	private sealed class <StartEnding>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IlluminatiButton <>4__this;

		[Token(Token = "0x17000135")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A59")]
			[Address(RVA = "0x8EB1C8", Offset = "0x8EB1C8", VA = "0x8EB1C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A5B")]
			[Address(RVA = "0x8EB210", Offset = "0x8EB210", VA = "0x8EB210", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x8EAF2C", Offset = "0x8EAF2C", VA = "0x8EAF2C")]
		[DebuggerHidden]
		public <StartEnding>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x8EAFEC", Offset = "0x8EAFEC", VA = "0x8EAFEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x8EAFF0", Offset = "0x8EAFF0", VA = "0x8EAFF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x8EB1D0", Offset = "0x8EB1D0", VA = "0x8EB1D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioSource criticalErrorAudio;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Material pushedMaterial;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material originalMaterial;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine endingCoro;

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x8EAD30", Offset = "0x8EAD30", VA = "0x8EAD30", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x8EADD4", Offset = "0x8EADD4", VA = "0x8EADD4", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x8EADF0", Offset = "0x8EADF0", VA = "0x8EADF0", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x8EADF8", Offset = "0x8EADF8", VA = "0x8EADF8", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x8EAEB8", Offset = "0x8EAEB8", VA = "0x8EAEB8")]
	[IteratorStateMachine(typeof(<StartEnding>d__8))]
	private IEnumerator StartEnding()
	{
		return null;
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x8E35E8", Offset = "0x8E35E8", VA = "0x8E35E8")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x8EAF54", Offset = "0x8EAF54", VA = "0x8EAF54", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x8EAFE4", Offset = "0x8EAFE4", VA = "0x8EAFE4")]
	public IlluminatiButton()
	{
	}
}
[Token(Token = "0x20001C3")]
public class InputManager : MonoBehaviour
{
	[Token(Token = "0x20001C4")]
	[CompilerGenerated]
	private sealed class <UpdateInput>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputManager <>4__this;

		[Token(Token = "0x17000145")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A76")]
			[Address(RVA = "0x8EBB00", Offset = "0x8EBB00", VA = "0x8EBB00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A78")]
			[Address(RVA = "0x8EBB48", Offset = "0x8EBB48", VA = "0x8EBB48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x8EB4F0", Offset = "0x8EB4F0", VA = "0x8EB4F0")]
		[DebuggerHidden]
		public <UpdateInput>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x8EB72C", Offset = "0x8EB72C", VA = "0x8EB72C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x8EB730", Offset = "0x8EB730", VA = "0x8EB730", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x8EBB08", Offset = "0x8EBB08", VA = "0x8EBB08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool prevButtonState;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool curButtonState;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool prevPauseState;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool curPauseState;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool prevCancelState;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool curCancelState;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool prevQuickZoomState;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	private bool curQuickZoomState;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool prevQuickReset;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool curQuickReset;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float leftStickXAxis;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float leftStickYAxis;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float pauseTimeStamp;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool longPauseHandled;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float acceptDownTimeStamp;

	[Token(Token = "0x4000A28")]
	private const float maxTapTime = 0.25f;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action OnLongPausePress;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Game gameScript;

	[Token(Token = "0x17000137")]
	public bool IsTap
	{
		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x8EB5F0", Offset = "0x8EB5F0", VA = "0x8EB5F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000138")]
	public bool IsNewAcceptButtonDown
	{
		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x8EB654", Offset = "0x8EB654", VA = "0x8EB654")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000139")]
	public bool IsAcceptButtonDown
	{
		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x8EB674", Offset = "0x8EB674", VA = "0x8EB674")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013A")]
	public bool IsNewAcceptButtonUp
	{
		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x8EB634", Offset = "0x8EB634", VA = "0x8EB634")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013B")]
	public bool IsAcceptButtonUp
	{
		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x8EB67C", Offset = "0x8EB67C", VA = "0x8EB67C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013C")]
	public bool IsNewPauseButtonDown
	{
		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x8EB5D0", Offset = "0x8EB5D0", VA = "0x8EB5D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013D")]
	public bool IsNewPauseButtonUp
	{
		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x8EB5B0", Offset = "0x8EB5B0", VA = "0x8EB5B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013E")]
	public bool IsPauseButtonDown
	{
		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x8EB68C", Offset = "0x8EB68C", VA = "0x8EB68C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013F")]
	public bool IsNewCancelButtonDown
	{
		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x8EB694", Offset = "0x8EB694", VA = "0x8EB694")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000140")]
	public bool IsNewQuickZoomButtonDown
	{
		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x8EB6B4", Offset = "0x8EB6B4", VA = "0x8EB6B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000141")]
	public bool IsNewQuickZoomButtonUp
	{
		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x8EB6D4", Offset = "0x8EB6D4", VA = "0x8EB6D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000142")]
	public bool IsNewQuickResetButtonDown
	{
		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x8EB6F4", Offset = "0x8EB6F4", VA = "0x8EB6F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000143")]
	public float LeftStickXAxis
	{
		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x8EB714", Offset = "0x8EB714", VA = "0x8EB714")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000144")]
	public float LeftStickYAxis
	{
		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x8EB71C", Offset = "0x8EB71C", VA = "0x8EB71C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x8EB218", Offset = "0x8EB218", VA = "0x8EB218")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x8EB2AC", Offset = "0x8EB2AC", VA = "0x8EB2AC")]
	public static bool IsTouchConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x8EB33C", Offset = "0x8EB33C", VA = "0x8EB33C")]
	public static bool IsRemoteOrGamepadConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x8EB3D0", Offset = "0x8EB3D0", VA = "0x8EB3D0")]
	public static bool IsRemoteActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x8EB460", Offset = "0x8EB460", VA = "0x8EB460")]
	public static bool IsGamepadActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x8E8B7C", Offset = "0x8E8B7C", VA = "0x8E8B7C")]
	public static bool IsRemoteOrGamepadActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x8EB238", Offset = "0x8EB238", VA = "0x8EB238")]
	[IteratorStateMachine(typeof(<UpdateInput>d__24))]
	private IEnumerator UpdateInput()
	{
		return null;
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x8EB518", Offset = "0x8EB518", VA = "0x8EB518")]
	private void UpdateLongPress()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x8EB724", Offset = "0x8EB724", VA = "0x8EB724")]
	public InputManager()
	{
	}
}
[Token(Token = "0x20001C5")]
public interface IPointer
{
	[Token(Token = "0x17000147")]
	Transform TargetTransform
	{
		[Token(Token = "0x6000A79")]
		get;
	}

	[Token(Token = "0x17000148")]
	Transform EyeTransform
	{
		[Token(Token = "0x6000A7A")]
		get;
	}

	[Token(Token = "0x17000149")]
	Collider TargetCollider
	{
		[Token(Token = "0x6000A7B")]
		get;
	}

	[Token(Token = "0x1700014A")]
	Vector3 ContactPosition
	{
		[Token(Token = "0x6000A7C")]
		get;
	}

	[Token(Token = "0x1700014B")]
	Holdable AttachedHoldable
	{
		[Token(Token = "0x6000A7D")]
		get;
		[Token(Token = "0x6000A7E")]
		set;
	}
}
[Token(Token = "0x20001C6")]
public class Key : Holdable
{
	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GreenButtonsPanel greenButtonsPanel;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject holdPosition;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool isGrabbed;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public MeshRenderer keyMeshRenderer;

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x8EBB50", Offset = "0x8EBB50", VA = "0x8EBB50", Slot = "9")]
	public override bool CanBeUsedOnTarget(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x8EBC14", Offset = "0x8EBC14", VA = "0x8EBC14", Slot = "10")]
	public override void UseOnTarget(UseContext context)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x8EC030", Offset = "0x8EC030", VA = "0x8EC030", Slot = "14")]
	protected override void OnRestart()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x8EC120", Offset = "0x8EC120", VA = "0x8EC120")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x8EC268", Offset = "0x8EC268", VA = "0x8EC268")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x8EC3B0", Offset = "0x8EC3B0", VA = "0x8EC3B0")]
	private void HandleGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x8EC490", Offset = "0x8EC490", VA = "0x8EC490")]
	private void HandleUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x8EC56C", Offset = "0x8EC56C", VA = "0x8EC56C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x8EC570", Offset = "0x8EC570", VA = "0x8EC570")]
	public Key()
	{
	}
}
[Token(Token = "0x20001C7")]
public class KeypadWidget : Widget
{
	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ScreenInputButton[] buttons;

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x8EC578", Offset = "0x8EC578", VA = "0x8EC578", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x8EC634", Offset = "0x8EC634", VA = "0x8EC634", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x8EC63C", Offset = "0x8EC63C", VA = "0x8EC63C", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x8E62D8", Offset = "0x8E62D8", VA = "0x8E62D8", Slot = "16")]
	protected override void OnRevealEnd()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x8E6348", Offset = "0x8E6348", VA = "0x8E6348")]
	public KeypadWidget()
	{
	}
}
[Token(Token = "0x20001C8")]
public class LightDim : MonoBehaviour
{
	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float brightness;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LightmapInterpolationManager lim;

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x8EC644", Offset = "0x8EC644", VA = "0x8EC644")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x8EC6BC", Offset = "0x8EC6BC", VA = "0x8EC6BC")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x8EC6CC", Offset = "0x8EC6CC", VA = "0x8EC6CC")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x8EC6F8", Offset = "0x8EC6F8", VA = "0x8EC6F8")]
	public LightDim()
	{
	}
}
[Token(Token = "0x20001C9")]
public class LockerDoors : Widget
{
	[Token(Token = "0x20001CA")]
	[CompilerGenerated]
	private sealed class <lockDrop>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LockerDoors <>4__this;

		[Token(Token = "0x1700014C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A9E")]
			[Address(RVA = "0x8ECAB0", Offset = "0x8ECAB0", VA = "0x8ECAB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0x8ECAF8", Offset = "0x8ECAF8", VA = "0x8ECAF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x8EC86C", Offset = "0x8EC86C", VA = "0x8EC86C")]
		[DebuggerHidden]
		public <lockDrop>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x8EC9F4", Offset = "0x8EC9F4", VA = "0x8EC9F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x8EC9F8", Offset = "0x8EC9F8", VA = "0x8EC9F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x8ECAB8", Offset = "0x8ECAB8", VA = "0x8ECAB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool areOpen;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioSource lockerDoorAudio;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioSource padlockAudio;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Gasmask gasmask;

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x8EC700", Offset = "0x8EC700", VA = "0x8EC700", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x8EC708", Offset = "0x8EC708", VA = "0x8EC708", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x8EC70C", Offset = "0x8EC70C", VA = "0x8EC70C", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x8EC714", Offset = "0x8EC714", VA = "0x8EC714", Slot = "11")]
	protected override string GetRevealState()
	{
		return null;
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x8EC754", Offset = "0x8EC754", VA = "0x8EC754", Slot = "9")]
	protected override string GetRestartState()
	{
		return null;
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x8EC794", Offset = "0x8EC794", VA = "0x8EC794")]
	public void OpenDoors()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x8EC7F8", Offset = "0x8EC7F8", VA = "0x8EC7F8")]
	[IteratorStateMachine(typeof(<lockDrop>d__10))]
	private IEnumerator lockDrop()
	{
		return null;
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x8EC894", Offset = "0x8EC894", VA = "0x8EC894", Slot = "16")]
	protected override void OnRevealEnd()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x8EC94C", Offset = "0x8EC94C", VA = "0x8EC94C", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x8EC9EC", Offset = "0x8EC9EC", VA = "0x8EC9EC")]
	public LockerDoors()
	{
	}
}
[Token(Token = "0x20001CB")]
public class LogoButton : MonoBehaviour
{
	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject offLogo;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject onLogo;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x8ECB00", Offset = "0x8ECB00", VA = "0x8ECB00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x8ECB20", Offset = "0x8ECB20", VA = "0x8ECB20")]
	public void OnPress()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x8ECBF0", Offset = "0x8ECBF0", VA = "0x8ECBF0")]
	public LogoButton()
	{
	}
}
[Token(Token = "0x20001CC")]
public abstract class MatrixKeypad<TButton> : Widget where TButton : MatrixKeypadButton
{
	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntVector2 keypadSize;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected MatrixKeypadButtonArray<TButton> buttons;

	[Token(Token = "0x6000AA4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000AA5")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA7")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x6000AA8")]
	protected override void OnRevealBegin()
	{
	}

	[Token(Token = "0x6000AA9")]
	internal abstract void OnButtonUsed(MatrixKeypadButton button);

	[Token(Token = "0x6000AAA")]
	protected int UsedButtonsCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000AAB")]
	protected MatrixKeypad()
	{
	}
}
[Token(Token = "0x20001CD")]
public class MatrixKeypadButton : Widget
{
	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public IntVector2 coordinates;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	internal Action<MatrixKeypadButton> onUseCallback;

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x8ECBF8", Offset = "0x8ECBF8", VA = "0x8ECBF8", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x8ECC10", Offset = "0x8ECC10", VA = "0x8ECC10", Slot = "17")]
	public override void Reveal()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x8ECC18", Offset = "0x8ECC18", VA = "0x8ECC18", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x8ECCA4", Offset = "0x8ECCA4", VA = "0x8ECCA4", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x8ECCAC", Offset = "0x8ECCAC", VA = "0x8ECCAC", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x8ECCB4", Offset = "0x8ECCB4", VA = "0x8ECCB4", Slot = "18")]
	internal virtual bool CanValueChange()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x8ECCBC", Offset = "0x8ECCBC", VA = "0x8ECCBC", Slot = "19")]
	internal virtual void OnForcedValueChange(sbyte value)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x8ECCCC", Offset = "0x8ECCCC", VA = "0x8ECCCC", Slot = "20")]
	internal virtual void OnValueChanged(sbyte value)
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x8ECCD4", Offset = "0x8ECCD4", VA = "0x8ECCD4")]
	public MatrixKeypadButton()
	{
	}
}
[Token(Token = "0x20001CE")]
public class MatrixKeypadButtonArray<TButton> where TButton : MatrixKeypadButton
{
	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public readonly ArrayRegion region;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public readonly sbyte[] values;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public readonly MatrixKeypad<TButton> keypad;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public readonly TButton[] buttons;

	[Token(Token = "0x6000AB5")]
	public MatrixKeypadButtonArray(MatrixKeypad<TButton> keypad, IntVector2 size)
	{
	}

	[Token(Token = "0x6000AB6")]
	private void ChangeButtonValue(int index, sbyte value)
	{
	}

	[Token(Token = "0x6000AB7")]
	private void OnButtonUsed(MatrixKeypadButton button)
	{
	}

	[Token(Token = "0x6000AB8")]
	public sbyte[] ParsePattern(string[] s)
	{
		return null;
	}

	[Token(Token = "0x6000AB9")]
	public void Reveal()
	{
	}

	[Token(Token = "0x6000ABA")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000ABB")]
	public void Toggle(MatrixKeypadButton button)
	{
	}

	[Token(Token = "0x6000ABC")]
	public void Toggle(IntVector2 p)
	{
	}

	[Token(Token = "0x6000ABD")]
	public void SetValue(MatrixKeypadButton button, bool newValue)
	{
	}

	[Token(Token = "0x6000ABE")]
	public void ForceAllButtonValues(sbyte newValue)
	{
	}
}
[Token(Token = "0x20001CF")]
public class MorseCodeBook : Holdable
{
	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform originalParent;

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x8ECCDC", Offset = "0x8ECCDC", VA = "0x8ECCDC", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x8ECD10", Offset = "0x8ECD10", VA = "0x8ECD10")]
	public void Update()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x8ECD14", Offset = "0x8ECD14", VA = "0x8ECD14", Slot = "9")]
	public override bool CanBeUsedOnTarget(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x8ECDB4", Offset = "0x8ECDB4", VA = "0x8ECDB4", Slot = "10")]
	public override void UseOnTarget(UseContext context)
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x8ECE9C", Offset = "0x8ECE9C", VA = "0x8ECE9C", Slot = "14")]
	protected override void OnRestart()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x8ECFCC", Offset = "0x8ECFCC", VA = "0x8ECFCC", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x8ED118", Offset = "0x8ED118", VA = "0x8ED118", Slot = "12")]
	protected override void OnPickUp()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x8ED124", Offset = "0x8ED124", VA = "0x8ED124", Slot = "11")]
	protected override void OnPutDown(SlotForHoldable slot)
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x8ED14C", Offset = "0x8ED14C", VA = "0x8ED14C")]
	public MorseCodeBook()
	{
	}
}
[Token(Token = "0x20001D0")]
public class MouseControlPC : MonoBehaviour
{
	[Token(Token = "0x4000A48")]
	private const float CONTROLLER_ZOOM_SCALE = 1.3f;

	[Token(Token = "0x4000A49")]
	private const float MIN_ZOOM = 60f;

	[Token(Token = "0x4000A4A")]
	private const float MAX_ZOOM = 20f;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minPitch;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxPitch;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensYaw;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float sensPitch;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hadControllerInput;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool hasControllerInput;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float cameraFov;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isQuickZooming;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Tweener lookAtTween;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Tweener quickZoomTween;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine updateCoro;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MouseControlPC s_instance;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _isEnabled;

	[Token(Token = "0x1700014E")]
	public static MouseControlPC Instance
	{
		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x8ED154", Offset = "0x8ED154", VA = "0x8ED154")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x8ED19C", Offset = "0x8ED19C", VA = "0x8ED19C")]
	public MouseControlPC()
	{
	}
}
[Token(Token = "0x20001D1")]
public class Music : MonoBehaviour
{
	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Music instance;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip idleMusic;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip mainThemeMusic;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip pianoKeypadMusic;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip bloodyBabyEndMusic;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip blacklightMusic;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip nukeEndMusic;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip wargamesEndMusic;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip stanleyParableMusic;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip gasMaskToxicMusic;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip gasMaskToxicMusic2;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip pauseMusic;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float prevVolume;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Range(0f, 1f)]
	public float normalVolume;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Range(0f, 1f)]
	public float endingVolume;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[Range(0f, 1f)]
	public float pauseVolume;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AudioSource active;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioSource inactive;

	[Token(Token = "0x4000A6A")]
	private const float normalCrossfadeTime = 0.5f;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioMixerGroup mixerGroup;

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x8ED1B8", Offset = "0x8ED1B8", VA = "0x8ED1B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x8ED3B4", Offset = "0x8ED3B4", VA = "0x8ED3B4")]
	public static void PlayBlacklight()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x8E44A4", Offset = "0x8E44A4", VA = "0x8E44A4")]
	public static void PlayGasMask()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x8E5014", Offset = "0x8E5014", VA = "0x8E5014")]
	public static void PlayGasMask2()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x8ED66C", Offset = "0x8ED66C", VA = "0x8ED66C")]
	public static void PlayBloodyBabyEnd()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x8ED704", Offset = "0x8ED704", VA = "0x8ED704")]
	public static void PlayNukeEnd()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x8ED79C", Offset = "0x8ED79C", VA = "0x8ED79C")]
	public static void PlayWargamesEnd()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x8E2C38", Offset = "0x8E2C38", VA = "0x8E2C38")]
	public static void PlayEnding(EndingInfo endingInfo)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x8E1C28", Offset = "0x8E1C28", VA = "0x8E1C28")]
	public static void PlayIdle(bool quiet = false, [Optional] AudioClip music)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x8ED834", Offset = "0x8ED834", VA = "0x8ED834")]
	public static void PlayPauseMusic()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x8ED99C", Offset = "0x8ED99C", VA = "0x8ED99C")]
	public static void RestorePauseMusic()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x8EDA48", Offset = "0x8EDA48", VA = "0x8EDA48")]
	public static void PlayMainTheme()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x8EDAAC", Offset = "0x8EDAAC", VA = "0x8EDAAC")]
	public static void PlayPianoKeypad()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x8E5410", Offset = "0x8E5410", VA = "0x8E5410")]
	public static void PlayTrack(AudioClip track)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x8ED280", Offset = "0x8ED280", VA = "0x8ED280")]
	private AudioSource CreateSource()
	{
		return null;
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x8EDB44", Offset = "0x8EDB44", VA = "0x8EDB44")]
	private void Next()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x8ED418", Offset = "0x8ED418", VA = "0x8ED418")]
	private void PlayCrossfade(AudioClip newClip, float fadeInTime, float fadeOutTime, bool matchPlaybackPosition, [Optional] float? volume)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x8ED8C0", Offset = "0x8ED8C0", VA = "0x8ED8C0")]
	private void PlayImmediate(AudioClip clip, [Optional] float? volume)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x8EDBC4", Offset = "0x8EDBC4", VA = "0x8EDBC4")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x8EDBF4", Offset = "0x8EDBF4", VA = "0x8EDBF4")]
	public Music()
	{
	}
}
[Token(Token = "0x20001D3")]
public abstract class NukeObject : MonoBehaviour
{
	[Token(Token = "0x6000AE1")]
	public abstract bool OnRestartScene();

	[Token(Token = "0x6000AE2")]
	public abstract void Use(UseContext context);

	[Token(Token = "0x6000AE3")]
	public abstract bool CanUse(UseContext context);

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x8EA86C", Offset = "0x8EA86C", VA = "0x8EA86C")]
	protected NukeObject()
	{
	}
}
[Token(Token = "0x20001D4")]
public class NukeObjectComponentToggler : MonoBehaviour
{
	[Token(Token = "0x20001D5")]
	[CompilerGenerated]
	private sealed class <Start>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NukeObjectComponentToggler <>4__this;

		[Token(Token = "0x1700014F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AEF")]
			[Address(RVA = "0x8EE2E0", Offset = "0x8EE2E0", VA = "0x8EE2E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000150")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0x8EE328", Offset = "0x8EE328", VA = "0x8EE328", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x8EDCCC", Offset = "0x8EDCCC", VA = "0x8EDCCC")]
		[DebuggerHidden]
		public <Start>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x8EE134", Offset = "0x8EE134", VA = "0x8EE134", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x8EE138", Offset = "0x8EE138", VA = "0x8EE138", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x8EE2E8", Offset = "0x8EE2E8", VA = "0x8EE2E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NukeObject nukeObject;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] activateOnReveal;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] deactivateOnReveal;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] activateOnHide;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] deactivateOnHide;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Component[] enableOnReveal;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Component[] disableOnReveal;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Component[] enableOnHide;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Component[] disableOnHide;

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x8EDC58", Offset = "0x8EDC58", VA = "0x8EDC58")]
	[IteratorStateMachine(typeof(<Start>d__9))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x8EDCF4", Offset = "0x8EDCF4", VA = "0x8EDCF4")]
	private void Apply(GameObject[] activate, GameObject[] deactivate, Component[] enable, Component[] disable)
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x8E963C", Offset = "0x8E963C", VA = "0x8E963C")]
	public void OnRestartEnd()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x8E9B60", Offset = "0x8E9B60", VA = "0x8E9B60")]
	public void OnRevealBegin()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x8E9A4C", Offset = "0x8E9A4C", VA = "0x8E9A4C")]
	public void OnRevealPrepare()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x8EDDD8", Offset = "0x8EDDD8", VA = "0x8EDDD8")]
	private void SetIsEnabled(Component[] list, bool isEnabled)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x8EE12C", Offset = "0x8EE12C", VA = "0x8EE12C")]
	public NukeObjectComponentToggler()
	{
	}
}
[Token(Token = "0x20001D6")]
public class NukeSwitch : Widget
{
	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Renderer nukeswitchLight;

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x8EE330", Offset = "0x8EE330", VA = "0x8EE330", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x8EE340", Offset = "0x8EE340", VA = "0x8EE340", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x8EE348", Offset = "0x8EE348", VA = "0x8EE348", Slot = "17")]
	public override void Reveal()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x8EE374", Offset = "0x8EE374", VA = "0x8EE374", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x8EE398", Offset = "0x8EE398", VA = "0x8EE398", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x8EE464", Offset = "0x8EE464", VA = "0x8EE464", Slot = "9")]
	protected override string GetRestartState()
	{
		return null;
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x8EE4D8", Offset = "0x8EE4D8", VA = "0x8EE4D8")]
	public NukeSwitch()
	{
	}
}
[Token(Token = "0x20001D7")]
public class Paperball : Holdable
{
	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private SphereCollider _collider;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x8EE4E0", Offset = "0x8EE4E0", VA = "0x8EE4E0", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x8EE578", Offset = "0x8EE578", VA = "0x8EE578", Slot = "9")]
	public override bool CanBeUsedOnTarget(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x8EE590", Offset = "0x8EE590", VA = "0x8EE590", Slot = "12")]
	protected override void OnPickUp()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x8EE5E4", Offset = "0x8EE5E4", VA = "0x8EE5E4", Slot = "10")]
	public override void UseOnTarget(UseContext context)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x8EE6D8", Offset = "0x8EE6D8", VA = "0x8EE6D8")]
	public void EnableDisablePaperCollider(bool enable)
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x8EE6F8", Offset = "0x8EE6F8", VA = "0x8EE6F8", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x8EE7CC", Offset = "0x8EE7CC", VA = "0x8EE7CC")]
	private void DelayedPutdown()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x8EE838", Offset = "0x8EE838", VA = "0x8EE838")]
	private void CheckTrash(Collider other)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x8EEB1C", Offset = "0x8EEB1C", VA = "0x8EEB1C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x8EEB20", Offset = "0x8EEB20", VA = "0x8EEB20")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x8EEB24", Offset = "0x8EEB24", VA = "0x8EEB24")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x8EEB28", Offset = "0x8EEB28", VA = "0x8EEB28", Slot = "15")]
	public override bool CanGrabbableReset()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x8EEB44", Offset = "0x8EEB44", VA = "0x8EEB44")]
	public Paperball()
	{
	}
}
[Token(Token = "0x20001D8")]
public class Passport : Widget
{
	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Collider approveCollider;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private MeshRenderer approveStamp;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private MeshRenderer denyStamp;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform passportRoot;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3? originalScale;

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x8EEB4C", Offset = "0x8EEB4C", VA = "0x8EEB4C", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x8EEC14", Offset = "0x8EEC14", VA = "0x8EEC14", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x8EECBC", Offset = "0x8EECBC", VA = "0x8EECBC", Slot = "17")]
	public override void Reveal()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x8EECD4", Offset = "0x8EECD4", VA = "0x8EECD4")]
	public void Show()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x8E3644", Offset = "0x8E3644", VA = "0x8E3644")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x8EEB68", Offset = "0x8EEB68", VA = "0x8EEB68")]
	private Vector3 GetOriginalScale()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x8EEDBC", Offset = "0x8EEDBC", VA = "0x8EEDBC", Slot = "13")]
	protected override void OnRestartBegin()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x8EEDF4", Offset = "0x8EEDF4", VA = "0x8EEDF4", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x8EEE78", Offset = "0x8EEE78", VA = "0x8EEE78", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x8EEE80", Offset = "0x8EEE80", VA = "0x8EEE80")]
	public bool OnStamp(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x8EEF24", Offset = "0x8EEF24", VA = "0x8EEF24")]
	public Passport()
	{
	}
}
[Token(Token = "0x20001D9")]
public class PauseButton : MonoBehaviour
{
	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x8EEF2C", Offset = "0x8EEF2C", VA = "0x8EEF2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x8EEF98", Offset = "0x8EEF98", VA = "0x8EEF98")]
	public PauseButton()
	{
	}
}
[Token(Token = "0x20001DA")]
public class PauseMenu : MonoBehaviour
{
	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Color PauseMenuColor;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image fillBar;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject resumePrompt;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject deletePrompt;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject languagePrompt;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject playerSettingsPrompt;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject controlsPrompt;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject exitPrompt;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float fillTime;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text[] versionTexts;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject LanguageMenuPrefab;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject PlayerSettingsMenuPrefab;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject ControlsMenuPrefab;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject mainCanvas;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private RectTransform fillBarTransform;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	public Text exitText;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text resumeText;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text deleteText;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text subtitleText;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text playerSettingsText;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text controlsText;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	public Text exitTextEastern;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text resumeTextEastern;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text deleteTextEastern;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text subtitleTextEastern;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text playerSettingsTextEastern;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text controlsTextEastern;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	public RectTransform resumeRectEastern;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public RectTransform subRectEastern;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public RectTransform playSetRectEastern;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public RectTransform controlsRectEastern;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public RectTransform deleteRectEastern;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public RectTransform exitRectEastern;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	public Button resumeButton;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Button subButton;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Button playSetButton;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Button controlsButton;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Button deleteButton;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Button exitButton;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private GameObject screen;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float currDeleteTime;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Tween tweener;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Color clearColor;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private CameraClearFlags clearFlags;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private bool hadVRFocus;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private List<Canvas> canvases;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private SubtitleSystem subtitles;

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x8EEFA0", Offset = "0x8EEFA0", VA = "0x8EEFA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x8EF938", Offset = "0x8EF938", VA = "0x8EF938")]
	public void SetTextValue(SubtitleSystem subs)
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x8EFBA8", Offset = "0x8EFBA8", VA = "0x8EFBA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x8EFBAC", Offset = "0x8EFBAC", VA = "0x8EFBAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x8EFD00", Offset = "0x8EFD00", VA = "0x8EFD00")]
	public void OnResumePress()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x8EFD54", Offset = "0x8EFD54", VA = "0x8EFD54")]
	public void OnDeleteDown()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x8EFFFC", Offset = "0x8EFFFC", VA = "0x8EFFFC")]
	public void OnDeleteUp()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x8F0030", Offset = "0x8F0030", VA = "0x8F0030")]
	public void OnExitGamePress()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x8F0038", Offset = "0x8F0038", VA = "0x8F0038")]
	public void OnLanguagePressed()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x8F00D4", Offset = "0x8F00D4", VA = "0x8F00D4")]
	public void OnPlayerSettingsPressed()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x8F0170", Offset = "0x8F0170", VA = "0x8F0170")]
	public void OnControlsPressed()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x8F020C", Offset = "0x8F020C", VA = "0x8F020C")]
	public void OnLanguageHover()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x8F0210", Offset = "0x8F0210", VA = "0x8F0210")]
	public void OnPlayerSettingsHover()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x8F0214", Offset = "0x8F0214", VA = "0x8F0214")]
	public void OnControlsHover()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x8F0218", Offset = "0x8F0218", VA = "0x8F0218")]
	private void OnLongBackPress()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x8F021C", Offset = "0x8F021C", VA = "0x8F021C")]
	public void OnResumeHover()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x8F0220", Offset = "0x8F0220", VA = "0x8F0220")]
	public void OnDeleteHover()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x8F0224", Offset = "0x8F0224", VA = "0x8F0224")]
	public void OnSubtitlesHover()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x8F0228", Offset = "0x8F0228", VA = "0x8F0228")]
	public void OnExitHover()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x8F022C", Offset = "0x8F022C", VA = "0x8F022C")]
	public void ShowCanvas()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x8EF470", Offset = "0x8EF470", VA = "0x8EF470")]
	public void ChangeFont(SubtitleSystem subtitles)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x8F02FC", Offset = "0x8F02FC", VA = "0x8F02FC")]
	private void SetEasternFont(Font newFont, int fontSize, Vector3 newLocalScale)
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x8F0CF4", Offset = "0x8F0CF4", VA = "0x8F0CF4")]
	private float GetCurrDeleteTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x8F0CFC", Offset = "0x8F0CFC", VA = "0x8F0CFC")]
	private void SetCurrDeleteTime(float newValue)
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x8F08D4", Offset = "0x8F08D4", VA = "0x8F08D4")]
	private void ChangeWidthOfDeleteSaveBar()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x8F0D04", Offset = "0x8F0D04", VA = "0x8F0D04")]
	public PauseMenu()
	{
	}
}
[Token(Token = "0x20001DC")]
public class PianoKeypad : KeypadWidget
{
	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x8F0E54", Offset = "0x8F0E54", VA = "0x8F0E54")]
	public PianoKeypad()
	{
	}
}
[Token(Token = "0x20001DD")]
public class PosterRewardParams : MonoBehaviour
{
	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 relPitchYawRoll;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 posOffset;

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x8F0E5C", Offset = "0x8F0E5C", VA = "0x8F0E5C")]
	public PosterRewardParams()
	{
	}
}
[Token(Token = "0x20001DE")]
public class PosterShowcase : MonoBehaviour
{
	[Token(Token = "0x20001DF")]
	public enum PosterShowcaseMode
	{
		[Token(Token = "0x4000AC1")]
		Floating,
		[Token(Token = "0x4000AC2")]
		Grabbed,
		[Token(Token = "0x4000AC3")]
		FaceAttached,
		[Token(Token = "0x4000AC4")]
		Normal,
		[Token(Token = "0x4000AC5")]
		PutAway,
		[Token(Token = "0x4000AC6")]
		Inactive
	}

	[Token(Token = "0x20001E0")]
	[CompilerGenerated]
	private sealed class <PutAwayCoro>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PosterShowcase <>4__this;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 pos;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion rot;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action callback;

		[Token(Token = "0x17000152")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B46")]
			[Address(RVA = "0x8F1974", Offset = "0x8F1974", VA = "0x8F1974", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B48")]
			[Address(RVA = "0x8F19BC", Offset = "0x8F19BC", VA = "0x8F19BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x8F14D4", Offset = "0x8F14D4", VA = "0x8F14D4")]
		[DebuggerHidden]
		public <PutAwayCoro>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x8F1670", Offset = "0x8F1670", VA = "0x8F1670", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x8F1674", Offset = "0x8F1674", VA = "0x8F1674", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x8F197C", Offset = "0x8F197C", VA = "0x8F197C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distFromFace;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter posterMeshFilter;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer posterMeshRenderer;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshFilter backMeshFilter;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Sequence floatTween;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform child;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 childDefaultLocalPos;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion childDefaultLocalRotation;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MeshCollider collider;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 startPosition;

	[Token(Token = "0x17000151")]
	public PosterShowcaseMode CurrentMode
	{
		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x8F0E64", Offset = "0x8F0E64", VA = "0x8F0E64")]
		[CompilerGenerated]
		get
		{
			return default(PosterShowcaseMode);
		}
		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x8F0E6C", Offset = "0x8F0E6C", VA = "0x8F0E6C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x8F0E74", Offset = "0x8F0E74", VA = "0x8F0E74")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x8F0F5C", Offset = "0x8F0F5C", VA = "0x8F0F5C")]
	public void Begin(Mesh posterMesh, Vector3 posterScale, Material posterMaterial)
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x8F108C", Offset = "0x8F108C", VA = "0x8F108C")]
	public void BeginFloating()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x8F12A0", Offset = "0x8F12A0", VA = "0x8F12A0")]
	public void End()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x8F132C", Offset = "0x8F132C", VA = "0x8F132C")]
	public void OnGazeUsed()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x8F1380", Offset = "0x8F1380", VA = "0x8F1380")]
	public void OnGrabbed()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x8F1268", Offset = "0x8F1268", VA = "0x8F1268")]
	private void KillFloatTween()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x8F13C0", Offset = "0x8F13C0", VA = "0x8F13C0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x8F13C4", Offset = "0x8F13C4", VA = "0x8F13C4")]
	public void PutAway(Vector3 pos, Quaternion rot, Action callback)
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x8F13F8", Offset = "0x8F13F8", VA = "0x8F13F8")]
	[IteratorStateMachine(typeof(<PutAwayCoro>d__23))]
	private IEnumerator PutAwayCoro(Vector3 pos, Quaternion rot, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x8F14FC", Offset = "0x8F14FC", VA = "0x8F14FC")]
	public void OnGamePaused(bool isPaused)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x8F15C4", Offset = "0x8F15C4", VA = "0x8F15C4")]
	public void TogglePauseRenderables(bool enable)
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x8F1660", Offset = "0x8F1660", VA = "0x8F1660")]
	public PosterShowcase()
	{
	}
}
[Token(Token = "0x20001E1")]
public class Printer : Widget
{
	[Token(Token = "0x20001E2")]
	public enum DamagedState
	{
		[Token(Token = "0x4000ADF")]
		Normal,
		[Token(Token = "0x4000AE0")]
		Damaged,
		[Token(Token = "0x4000AE1")]
		Broken
	}

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject startingMesh;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject damagedMesh;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject brokenMesh;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject buttonProxy;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private int hitsToDamage;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private int hitsToDestroy;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Transform[] hammerImpactPoints;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 startPosition;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Quaternion startRotation;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 buttonStartPosition;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Quaternion buttonStartRotation;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private readonly Dictionary<Transform, ParticleSystem[]> printerHitFx;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private readonly List<Renderer> debrisParticleRenderers;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int hitCounter;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Rigidbody rigidbody;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private OfficeSpace officeSpaceEnding;

	[Token(Token = "0x17000154")]
	public DamagedState DamageState
	{
		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x8F19C4", Offset = "0x8F19C4", VA = "0x8F19C4")]
		[CompilerGenerated]
		get
		{
			return default(DamagedState);
		}
		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x8F19CC", Offset = "0x8F19CC", VA = "0x8F19CC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x8E7AB8", Offset = "0x8E7AB8", VA = "0x8E7AB8")]
	public Transform GetImpactPoint()
	{
		return null;
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x8F19D4", Offset = "0x8F19D4", VA = "0x8F19D4", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x8E7FA0", Offset = "0x8E7FA0", VA = "0x8E7FA0")]
	public void Use(UseContext context, Transform impactPoint)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x8F1E74", Offset = "0x8F1E74", VA = "0x8F1E74", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x8F1CA4", Offset = "0x8F1CA4", VA = "0x8F1CA4")]
	private void AdvanceState()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x8F1E78", Offset = "0x8F1E78", VA = "0x8F1E78", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x8F1EFC", Offset = "0x8F1EFC", VA = "0x8F1EFC", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x8F1FDC", Offset = "0x8F1FDC", VA = "0x8F1FDC", Slot = "13")]
	protected override void OnRestartBegin()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x8F2078", Offset = "0x8F2078", VA = "0x8F2078", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x8F2248", Offset = "0x8F2248", VA = "0x8F2248", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x8F24D8", Offset = "0x8F24D8", VA = "0x8F24D8")]
	private void OnGamePaused(bool newState)
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x8F2634", Offset = "0x8F2634", VA = "0x8F2634")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x8F2348", Offset = "0x8F2348", VA = "0x8F2348")]
	public void setPrinterKinematic(bool kinematic)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x8F273C", Offset = "0x8F273C", VA = "0x8F273C")]
	public Printer()
	{
	}
}
[Token(Token = "0x20001E3")]
public class PrinterButton : Widget
{
	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Printer printer;

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x8F281C", Offset = "0x8F281C", VA = "0x8F281C", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x8F2840", Offset = "0x8F2840", VA = "0x8F2840", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x8F2908", Offset = "0x8F2908", VA = "0x8F2908", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x8F2988", Offset = "0x8F2988", VA = "0x8F2988", Slot = "13")]
	protected override void OnRestartBegin()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x8F2A10", Offset = "0x8F2A10", VA = "0x8F2A10")]
	public PrinterButton()
	{
	}
}
[Token(Token = "0x20001E4")]
[RequireComponent(typeof(AudioSource))]
public class Punchcard : Holdable
{
	[Token(Token = "0x4000AE3")]
	private const int PUNCHCARD_CODE_LENGTH = 6;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Transform targetPosition;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Material litMaterial;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Material dimMaterial;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject[] punchcardRows;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 startingPosition;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Transform myXform;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioSource printerSound;

	[Token(Token = "0x17000155")]
	public string PunchcardCode
	{
		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x8F2A18", Offset = "0x8F2A18", VA = "0x8F2A18")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x8F2A20", Offset = "0x8F2A20", VA = "0x8F2A20")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x8F2A30", Offset = "0x8F2A30", VA = "0x8F2A30", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x8F2AC4", Offset = "0x8F2AC4", VA = "0x8F2AC4", Slot = "9")]
	public override bool CanBeUsedOnTarget(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x8F2BAC", Offset = "0x8F2BAC", VA = "0x8F2BAC", Slot = "16")]
	public override void Reveal()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x8F2FFC", Offset = "0x8F2FFC", VA = "0x8F2FFC")]
	private void SetPunchcardCode()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x8F32DC", Offset = "0x8F32DC", VA = "0x8F32DC", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x8F369C", Offset = "0x8F369C", VA = "0x8F369C", Slot = "10")]
	public override void UseOnTarget(UseContext context)
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x8F3494", Offset = "0x8F3494", VA = "0x8F3494")]
	public void OnCleanUp()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x8F37C8", Offset = "0x8F37C8", VA = "0x8F37C8")]
	public Punchcard()
	{
	}
}
[Token(Token = "0x20001E5")]
public class Radio : SlotForHoldable
{
	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private XRGrabInteractable interactable;

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x8F3910", Offset = "0x8F3910", VA = "0x8F3910")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x8F3A70", Offset = "0x8F3A70", VA = "0x8F3A70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x8F3BD0", Offset = "0x8F3BD0", VA = "0x8F3BD0")]
	private void HandleGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x8F3CD4", Offset = "0x8F3CD4", VA = "0x8F3CD4")]
	private void HandleUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x8F3DD4", Offset = "0x8F3DD4", VA = "0x8F3DD4")]
	public Radio()
	{
	}
}
[Token(Token = "0x20001E6")]
public class Receiver : Holdable
{
	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject holdPoint;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioSource receiverAudio;

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x8F3DDC", Offset = "0x8F3DDC", VA = "0x8F3DDC", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x8F3DFC", Offset = "0x8F3DFC", VA = "0x8F3DFC", Slot = "9")]
	public override bool CanBeUsedOnTarget(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x8F3E9C", Offset = "0x8F3E9C", VA = "0x8F3E9C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x8F3EA0", Offset = "0x8F3EA0", VA = "0x8F3EA0", Slot = "10")]
	public override void UseOnTarget(UseContext context)
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x8F3F84", Offset = "0x8F3F84", VA = "0x8F3F84", Slot = "12")]
	protected override void OnPickUp()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x8F3FF0", Offset = "0x8F3FF0", VA = "0x8F3FF0", Slot = "11")]
	protected override void OnPutDown(SlotForHoldable slot)
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x8F4164", Offset = "0x8F4164", VA = "0x8F4164")]
	public void PutOnSlot()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x8F41C0", Offset = "0x8F41C0", VA = "0x8F41C0", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x8F4298", Offset = "0x8F4298", VA = "0x8F4298")]
	public void OnDrawerClosed()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x8F41D8", Offset = "0x8F41D8", VA = "0x8F41D8")]
	public void SetRigidbodyKinematicAndGrab(bool isKin)
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x8F429C", Offset = "0x8F429C", VA = "0x8F429C")]
	public void SetRigidbodyKinematic(bool isKin)
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x8F42BC", Offset = "0x8F42BC", VA = "0x8F42BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x8F42C0", Offset = "0x8F42C0", VA = "0x8F42C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x8F42C4", Offset = "0x8F42C4", VA = "0x8F42C4")]
	public Receiver()
	{
	}
}
[Token(Token = "0x20001E7")]
public class RedButton : Widget
{
	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x8F42CC", Offset = "0x8F42CC", VA = "0x8F42CC", Slot = "5")]
	public override void Use(UseContext info)
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x8F42D4", Offset = "0x8F42D4", VA = "0x8F42D4", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x8F42DC", Offset = "0x8F42DC", VA = "0x8F42DC", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x8F42E4", Offset = "0x8F42E4", VA = "0x8F42E4")]
	public RedButton()
	{
	}
}
[Token(Token = "0x20001E8")]
public class ResetSwitch : Widget
{
	[Token(Token = "0x20001E9")]
	public enum State
	{
		[Token(Token = "0x4000AFF")]
		Starting,
		[Token(Token = "0x4000B00")]
		Bottom
	}

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public State state;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float errorTimer;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string scrubAnimState;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string scrubCancelState;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float startingScrubValue;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 grabStartingPosition;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 prevEuler;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject grabbingController;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float scrubBeganTime;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool isScrubbing;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
	private bool scrubMoved;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
	private bool isRestarting;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float scrubFrac_;

	[Token(Token = "0x4000AFC")]
	private const float PanelWidth = 0.3f;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Sequence scrubCancelTween;

	[Token(Token = "0x17000156")]
	public float ScrubFrac
	{
		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x8F42EC", Offset = "0x8F42EC", VA = "0x8F42EC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x8F42F4", Offset = "0x8F42F4", VA = "0x8F42F4")]
		set
		{
		}
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x8F433C", Offset = "0x8F433C", VA = "0x8F433C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x8F46E8", Offset = "0x8F46E8", VA = "0x8F46E8", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x8F46F0", Offset = "0x8F46F0", VA = "0x8F46F0", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x8F46F8", Offset = "0x8F46F8", VA = "0x8F46F8", Slot = "9")]
	protected override string GetRestartState()
	{
		return null;
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x8F4738", Offset = "0x8F4738", VA = "0x8F4738", Slot = "10")]
	protected override string GetRestartTrigger()
	{
		return null;
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x8F47E0", Offset = "0x8F47E0", VA = "0x8F47E0", Slot = "13")]
	protected override void OnRestartBegin()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x8F4BAC", Offset = "0x8F4BAC", VA = "0x8F4BAC", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x8F4BB4", Offset = "0x8F4BB4", VA = "0x8F4BB4", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x8F4CB0", Offset = "0x8F4CB0", VA = "0x8F4CB0")]
	public void ScrubGrab(GameObject grabbingObject)
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x8F44C0", Offset = "0x8F44C0", VA = "0x8F44C0")]
	private bool ScrubIsComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x8F4C5C", Offset = "0x8F4C5C", VA = "0x8F4C5C")]
	private void ScrubToggle(string scrubState, string cancelState)
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x8F44D8", Offset = "0x8F44D8", VA = "0x8F44D8")]
	private void ScrubAccept()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x8F47E4", Offset = "0x8F47E4", VA = "0x8F47E4")]
	public void ScrubStop()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x8F4EE4", Offset = "0x8F4EE4", VA = "0x8F4EE4")]
	private void SetScrubFracAndAnimate(float value)
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x8F4E00", Offset = "0x8F4E00", VA = "0x8F4E00")]
	private void ScrubStart()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x8F4F48", Offset = "0x8F4F48", VA = "0x8F4F48")]
	private void Throw(State newState, AudioClip clip, string trigger, Action fn)
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x8E35C4", Offset = "0x8E35C4", VA = "0x8E35C4")]
	public void ResetResetSwitch()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x8F508C", Offset = "0x8F508C", VA = "0x8F508C")]
	public ResetSwitch()
	{
	}
}
[Token(Token = "0x20001EB")]
public class RGBYPanel : KeypadWidget
{
	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<Collider> screwColliders;

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x8F5194", Offset = "0x8F5194", VA = "0x8F5194")]
	public RGBYPanel()
	{
	}
}
[Token(Token = "0x20001EC")]
public class RGBYPanelScrewdriverTarget : TargetForHoldable
{
	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x8F519C", Offset = "0x8F519C", VA = "0x8F519C", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x8F51A4", Offset = "0x8F51A4", VA = "0x8F51A4", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x8F51A8", Offset = "0x8F51A8", VA = "0x8F51A8", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x8F51B0", Offset = "0x8F51B0", VA = "0x8F51B0", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x8F5234", Offset = "0x8F5234", VA = "0x8F5234")]
	public RGBYPanelScrewdriverTarget()
	{
	}
}
[Token(Token = "0x20001ED")]
public class RomanNumeralsPanel : KeypadWidget
{
	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x8F5244", Offset = "0x8F5244", VA = "0x8F5244")]
	public RomanNumeralsPanel()
	{
	}
}
[Token(Token = "0x20001EE")]
public class ScreenController : Widget
{
	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<bool> DisplayingInputChange;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<string> InputDisplayChange;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource staticAudio;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip shutdownSound;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	internal GameObject brokenMonitor;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioClip smashClip;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int cachedEndingState;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int cachedPaperStatus;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int cachedStanleyWave;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int cachedStateHash;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float cachedTime;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string _inputDisplayText;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _isDisplayingInput;

	[Token(Token = "0x17000157")]
	public string InputDisplayText
	{
		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x8F524C", Offset = "0x8F524C", VA = "0x8F524C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000158")]
	public bool IsDisplayingInput
	{
		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x8F5254", Offset = "0x8F5254", VA = "0x8F5254")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x8F525C", Offset = "0x8F525C", VA = "0x8F525C")]
		set
		{
		}
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x8F52E0", Offset = "0x8F52E0", VA = "0x8F52E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x8F5400", Offset = "0x8F5400", VA = "0x8F5400")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x8F54C8", Offset = "0x8F54C8", VA = "0x8F54C8")]
	public void CacheParameterStates()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x8F5618", Offset = "0x8F5618", VA = "0x8F5618", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x8F569C", Offset = "0x8F569C", VA = "0x8F569C", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x8F56A4", Offset = "0x8F56A4", VA = "0x8F56A4")]
	public void ManualRestart()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x8F5750", Offset = "0x8F5750", VA = "0x8F5750")]
	public void AnimEvent_Shutdown()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x8F5784", Offset = "0x8F5784", VA = "0x8F5784")]
	public void AnimEvent_StartStatic()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x8F5804", Offset = "0x8F5804", VA = "0x8F5804")]
	public void AnimEvent_StopStatic()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x8F5884", Offset = "0x8F5884", VA = "0x8F5884")]
	private void OnGameChangedMode(Game.Mode newMode, Game.Mode oldMode)
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x8F5898", Offset = "0x8F5898", VA = "0x8F5898")]
	public void SetInputDisplay(string text)
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x8F56F4", Offset = "0x8F56F4", VA = "0x8F56F4")]
	public void SetScreenEndingState(Ending endingState)
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x8F5924", Offset = "0x8F5924", VA = "0x8F5924")]
	public void SetScreenEndingState(int newState)
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x8F5980", Offset = "0x8F5980", VA = "0x8F5980")]
	public void SetScreenPapersState(int newState)
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x8F59DC", Offset = "0x8F59DC", VA = "0x8F59DC")]
	public void SetStanleyScreenWave(int newWave)
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x8F5A38", Offset = "0x8F5A38", VA = "0x8F5A38")]
	public void Smash()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x8F5AA8", Offset = "0x8F5AA8", VA = "0x8F5AA8")]
	public ScreenController()
	{
	}
}
[Token(Token = "0x20001EF")]
public class ScreenInputButton : Widget
{
	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string input;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Game.ScreenInputMode inputMode;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float timer;

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x8F5AB0", Offset = "0x8F5AB0", VA = "0x8F5AB0", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x8F5B44", Offset = "0x8F5B44", VA = "0x8F5B44", Slot = "17")]
	public override void Reveal()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x8F5B4C", Offset = "0x8F5B4C", VA = "0x8F5B4C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x8F5B78", Offset = "0x8F5B78", VA = "0x8F5B78", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x8F5CE4", Offset = "0x8F5CE4", VA = "0x8F5CE4", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x8F5DCC", Offset = "0x8F5DCC", VA = "0x8F5DCC", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x8F5DD4", Offset = "0x8F5DD4", VA = "0x8F5DD4")]
	public ScreenInputButton()
	{
	}
}
[Token(Token = "0x20001F0")]
public class ScreenInputText : MonoBehaviour
{
	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text screenText;

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x8F5DDC", Offset = "0x8F5DDC", VA = "0x8F5DDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x8F5E44", Offset = "0x8F5E44", VA = "0x8F5E44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x8F6030", Offset = "0x8F6030", VA = "0x8F6030")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x8F621C", Offset = "0x8F621C", VA = "0x8F621C")]
	private void OnDisplayingInputChange(bool newState)
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x8F623C", Offset = "0x8F623C", VA = "0x8F623C")]
	private void OnInputDisplayChange(string text)
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x8F6260", Offset = "0x8F6260", VA = "0x8F6260")]
	public ScreenInputText()
	{
	}
}
[Token(Token = "0x20001F1")]
public class Screw : Widget
{
	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ScrewCounter screwCounter;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Renderer screwRenderer;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MaterialPropertyBlock matPropBlock;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int highlightAmountMaterialPropertyId;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool isUnscrewed;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Screwdriver screwdriver;

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x8F6268", Offset = "0x8F6268", VA = "0x8F6268", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x8F63A0", Offset = "0x8F63A0", VA = "0x8F63A0", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x8F63A8", Offset = "0x8F63A8", VA = "0x8F63A8", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x8F642C", Offset = "0x8F642C", VA = "0x8F642C")]
	public bool Unscrew()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x8F645C", Offset = "0x8F645C", VA = "0x8F645C", Slot = "16")]
	protected override void OnRevealEnd()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x8F64E8", Offset = "0x8F64E8", VA = "0x8F64E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x8F65EC", Offset = "0x8F65EC", VA = "0x8F65EC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x8F66DC", Offset = "0x8F66DC", VA = "0x8F66DC")]
	public Screw()
	{
	}
}
[Token(Token = "0x20001F2")]
public class ScrewCounter : MonoBehaviour
{
	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Widget widget;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Screw[] screws;

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x8F66E4", Offset = "0x8F66E4", VA = "0x8F66E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x8F6480", Offset = "0x8F6480", VA = "0x8F6480")]
	public void Unscrew()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x8F6774", Offset = "0x8F6774", VA = "0x8F6774")]
	public ScrewCounter()
	{
	}
}
[Token(Token = "0x20001F3")]
public class Screwdriver : Tool
{
	[Token(Token = "0x20001F4")]
	[CompilerGenerated]
	private sealed class <UnscrewSet>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Collider> screwColliders;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Screwdriver <>4__this;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float pauseBetweenPlaying;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <i>5__2;

		[Token(Token = "0x17000159")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0x8F7C44", Offset = "0x8F7C44", VA = "0x8F7C44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BE8")]
			[Address(RVA = "0x8F7C8C", Offset = "0x8F7C8C", VA = "0x8F7C8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x8F76E8", Offset = "0x8F76E8", VA = "0x8F76E8")]
		[DebuggerHidden]
		public <UnscrewSet>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x8F7A8C", Offset = "0x8F7A8C", VA = "0x8F7A8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x8F7A90", Offset = "0x8F7A90", VA = "0x8F7A90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x8F7C4C", Offset = "0x8F7C4C", VA = "0x8F7C4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F6")]
	[CompilerGenerated]
	private sealed class <PlayActivateSound>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Screwdriver <>4__this;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float pauseBetweenPlaying;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int numberOfTimes;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__2;

		[Token(Token = "0x1700015B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0x8F7F14", Offset = "0x8F7F14", VA = "0x8F7F14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0x8F7F5C", Offset = "0x8F7F5C", VA = "0x8F7F5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x8F7720", Offset = "0x8F7720", VA = "0x8F7720")]
		[DebuggerHidden]
		public <PlayActivateSound>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x8F7DA0", Offset = "0x8F7DA0", VA = "0x8F7DA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x8F7DA4", Offset = "0x8F7DA4", VA = "0x8F7DA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x8F7F1C", Offset = "0x8F7F1C", VA = "0x8F7F1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Collider tipCollider;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClip ActivateSound;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool isPrying;

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x8F677C", Offset = "0x8F677C", VA = "0x8F677C", Slot = "18")]
	public override void OnFailedCombine()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x8F6850", Offset = "0x8F6850", VA = "0x8F6850", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x8F6858", Offset = "0x8F6858", VA = "0x8F6858", Slot = "14")]
	protected override void OnRestart()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x8F68D8", Offset = "0x8F68D8", VA = "0x8F68D8", Slot = "9")]
	public override bool CanBeUsedOnTarget(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x8F6A24", Offset = "0x8F6A24", VA = "0x8F6A24", Slot = "10")]
	public override void UseOnTarget(UseContext context)
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x8F7550", Offset = "0x8F7550", VA = "0x8F7550")]
	public bool HandleTurn(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x8F7640", Offset = "0x8F7640", VA = "0x8F7640")]
	[IteratorStateMachine(typeof(<UnscrewSet>d__9))]
	private IEnumerator UnscrewSet(List<Collider> screwColliders, float pauseBetweenPlaying, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x8F7710", Offset = "0x8F7710", VA = "0x8F7710")]
	public void OnDrawerClosed()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x8F6E98", Offset = "0x8F6E98", VA = "0x8F6E98")]
	private void OpenRgbyPanel()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x8F6F98", Offset = "0x8F6F98", VA = "0x8F6F98")]
	private void OpenFibonacciPanel(Transform screenTransform)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x8F7124", Offset = "0x8F7124", VA = "0x8F7124")]
	private void OpenHamsterHatch(HamsterDoor hamsterDoor)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x8F7330", Offset = "0x8F7330", VA = "0x8F7330")]
	private void OpenInstructionsPanel(Transform targetTransform, ClockPanel clockPanel)
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x8F67B8", Offset = "0x8F67B8", VA = "0x8F67B8")]
	[IteratorStateMachine(typeof(<PlayActivateSound>d__15))]
	private IEnumerator PlayActivateSound(int numberOfTimes, float pauseBetweenPlaying, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x8F7748", Offset = "0x8F7748", VA = "0x8F7748", Slot = "17")]
	public override void HandleTouchCollision(Collision collision)
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x8F79E0", Offset = "0x8F79E0", VA = "0x8F79E0")]
	public Screwdriver()
	{
	}
}
[Token(Token = "0x20001F7")]
public class ScrewdriverDrawer : Widget
{
	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x8F7F64", Offset = "0x8F7F64", VA = "0x8F7F64", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x8F7FC0", Offset = "0x8F7FC0", VA = "0x8F7FC0", Slot = "15")]
	protected override void OnRevealBegin()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x8F8024", Offset = "0x8F8024", VA = "0x8F8024", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x8F80A8", Offset = "0x8F80A8", VA = "0x8F80A8", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x8F80B0", Offset = "0x8F80B0", VA = "0x8F80B0")]
	public ScrewdriverDrawer()
	{
	}
}
[Token(Token = "0x20001F8")]
public class SevenBySevenKeypad : MatrixKeypad<SevenBySevenKeypadButton>
{
	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private sbyte[] pentagramPattern;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private sbyte[] diamondPattern;

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x8F80B8", Offset = "0x8F80B8", VA = "0x8F80B8", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x8F8614", Offset = "0x8F8614", VA = "0x8F8614", Slot = "18")]
	internal override void OnButtonUsed(MatrixKeypadButton button)
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x8F8808", Offset = "0x8F8808", VA = "0x8F8808", Slot = "9")]
	protected override string GetRestartState()
	{
		return null;
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x8F8848", Offset = "0x8F8848", VA = "0x8F8848", Slot = "11")]
	protected override string GetRevealState()
	{
		return null;
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x8F8888", Offset = "0x8F8888", VA = "0x8F8888", Slot = "12")]
	protected override string GetRevealTrigger()
	{
		return null;
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x8F88C8", Offset = "0x8F88C8", VA = "0x8F88C8")]
	public SevenBySevenKeypad()
	{
	}
}
[Token(Token = "0x20001F9")]
public class SevenBySevenKeypadButton : MatrixKeypadButton
{
	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material ActivatedMaterial;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public WidgetProxy proxy;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Material OffMaterial;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Renderer buttonMeshRenderer;

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x8F8910", Offset = "0x8F8910", VA = "0x8F8910", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x8F899C", Offset = "0x8F899C", VA = "0x8F899C", Slot = "16")]
	protected override void OnRevealEnd()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x8F89D8", Offset = "0x8F89D8", VA = "0x8F89D8", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x8F89FC", Offset = "0x8F89FC", VA = "0x8F89FC", Slot = "20")]
	internal override void OnValueChanged(sbyte value)
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x8F8A44", Offset = "0x8F8A44", VA = "0x8F8A44", Slot = "19")]
	internal override void OnForcedValueChange(sbyte value)
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x8F8B00", Offset = "0x8F8B00", VA = "0x8F8B00", Slot = "18")]
	internal override bool CanValueChange()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x8F8B7C", Offset = "0x8F8B7C", VA = "0x8F8B7C")]
	public SevenBySevenKeypadButton()
	{
	}
}
[Token(Token = "0x20001FA")]
public class ShakeCameraOnEnable : MonoBehaviour
{
	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float duration;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float strength;

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x8F8B84", Offset = "0x8F8B84", VA = "0x8F8B84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x8F8BE0", Offset = "0x8F8BE0", VA = "0x8F8BE0")]
	public ShakeCameraOnEnable()
	{
	}
}
[Token(Token = "0x20001FB")]
public class SlotForHoldable : TargetForHoldable
{
	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string holdableTypeName;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Type holdableType;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Use its own transform if none set")]
	public Transform slotPosition;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool toggleOnPickUp;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool returnToStartPos;

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x8F8BF8", Offset = "0x8F8BF8", VA = "0x8F8BF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x8F8D18", Offset = "0x8F8D18", VA = "0x8F8D18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x8F8D28", Offset = "0x8F8D28", VA = "0x8F8D28")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x8F8D4C", Offset = "0x8F8D4C", VA = "0x8F8D4C")]
	private void Show()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x8F8D70", Offset = "0x8F8D70", VA = "0x8F8D70", Slot = "8")]
	public virtual Type GetOverrideType()
	{
		return null;
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x8F8D78", Offset = "0x8F8D78", VA = "0x8F8D78", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x8F8D94", Offset = "0x8F8D94", VA = "0x8F8D94", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x8F8D98", Offset = "0x8F8D98", VA = "0x8F8D98", Slot = "9")]
	public virtual Transform GetSlotPosition(Holdable holdable)
	{
		return null;
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x8F8DA0", Offset = "0x8F8DA0", VA = "0x8F8DA0", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x8F8DA8", Offset = "0x8F8DA8", VA = "0x8F8DA8", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x8F8E70", Offset = "0x8F8E70", VA = "0x8F8E70")]
	public void OnLinkedHoldablePutDown()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x8F8E80", Offset = "0x8F8E80", VA = "0x8F8E80")]
	public void OnLinkedHoldablePickedUp()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x8F8E90", Offset = "0x8F8E90", VA = "0x8F8E90")]
	public SlotForHoldable()
	{
	}
}
[Token(Token = "0x20001FC")]
public class SpearGrabbable : MonoBehaviour
{
	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject spearHoldPoint;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject holdPosition;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isGrabbed;

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x8F8E98", Offset = "0x8F8E98", VA = "0x8F8E98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x8F8FF0", Offset = "0x8F8FF0", VA = "0x8F8FF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x8F8FF4", Offset = "0x8F8FF4", VA = "0x8F8FF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x8F8FF8", Offset = "0x8F8FF8", VA = "0x8F8FF8")]
	public SpearGrabbable()
	{
	}
}
[Token(Token = "0x20001FD")]
public class Stamp : Tool
{
	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private AudioClip stampAudioClip;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Collider bottomCollider;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private Passport passport;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool canStamp;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject handGrabbing;

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x8F9000", Offset = "0x8F9000", VA = "0x8F9000", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x8F9084", Offset = "0x8F9084", VA = "0x8F9084")]
	public void Update()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x8F9088", Offset = "0x8F9088", VA = "0x8F9088", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x8F90F4", Offset = "0x8F90F4", VA = "0x8F90F4", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x8F9250", Offset = "0x8F9250", VA = "0x8F9250")]
	public void OnPickUpCheckPassport()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x8F9418", Offset = "0x8F9418", VA = "0x8F9418", Slot = "11")]
	protected override void OnPutDown(SlotForHoldable slot)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x8F948C", Offset = "0x8F948C", VA = "0x8F948C", Slot = "10")]
	public override void UseOnTarget(UseContext context)
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x8F9850", Offset = "0x8F9850", VA = "0x8F9850")]
	private void OnStamp(Collider hitCollider)
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x8F993C", Offset = "0x8F993C", VA = "0x8F993C", Slot = "9")]
	public override bool CanBeUsedOnTarget(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x8F99D0", Offset = "0x8F99D0", VA = "0x8F99D0")]
	public void HandleTouchCollision(Collider collider)
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x8F9AFC", Offset = "0x8F9AFC", VA = "0x8F9AFC")]
	public Stamp()
	{
	}
}
[Token(Token = "0x20001FF")]
public class StampHoldable : MonoBehaviour
{
	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject RightHand;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isRightHandHolding;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Whiteboard whiteboard;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 startingPosition;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion startingRotation;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool grabbed;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Stamp stamp;

	[Token(Token = "0x1700015D")]
	public bool startedWriting
	{
		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x8F9B80", Offset = "0x8F9B80", VA = "0x8F9B80")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x8F9B88", Offset = "0x8F9B88", VA = "0x8F9B88")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x8F9B94", Offset = "0x8F9B94", VA = "0x8F9B94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x8F9B98", Offset = "0x8F9B98", VA = "0x8F9B98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x8F9BE8", Offset = "0x8F9BE8", VA = "0x8F9BE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x8F9D2C", Offset = "0x8F9D2C", VA = "0x8F9D2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x8F9E70", Offset = "0x8F9E70", VA = "0x8F9E70")]
	private void HandleGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x8F9FB8", Offset = "0x8F9FB8", VA = "0x8F9FB8")]
	private void HandleUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x8F9FC0", Offset = "0x8F9FC0", VA = "0x8F9FC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x8F9FC4", Offset = "0x8F9FC4", VA = "0x8F9FC4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x8FA044", Offset = "0x8FA044", VA = "0x8FA044")]
	public void ResetPosition()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x8FA090", Offset = "0x8FA090", VA = "0x8FA090")]
	public StampHoldable()
	{
	}
}
[Token(Token = "0x2000200")]
public class StanleyButton : RedButton
{
	[Token(Token = "0x2000201")]
	public delegate void ButtonUseCallback();

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ButtonUseCallback OnButtonUse;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool isFound;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform buttonRoot;

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x8FA098", Offset = "0x8FA098", VA = "0x8FA098", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x8FA138", Offset = "0x8FA138", VA = "0x8FA138", Slot = "5")]
	public override void Use(UseContext info)
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x8FA1C4", Offset = "0x8FA1C4", VA = "0x8FA1C4", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x8FA218", Offset = "0x8FA218", VA = "0x8FA218", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x8FA220", Offset = "0x8FA220", VA = "0x8FA220", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x8FA228", Offset = "0x8FA228", VA = "0x8FA228", Slot = "17")]
	public override void Reveal()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x8FA338", Offset = "0x8FA338", VA = "0x8FA338")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x8FA414", Offset = "0x8FA414", VA = "0x8FA414")]
	public StanleyButton()
	{
	}
}
[Token(Token = "0x2000202")]
public class StanleyPanelController : MonoBehaviour
{
	[Token(Token = "0x2000203")]
	[CompilerGenerated]
	private sealed class <HideButtonWave>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEnumerable<StanleyButton> buttons;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StanleyPanelController <>4__this;

		[Token(Token = "0x1700015E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0x8FBA30", Offset = "0x8FBA30", VA = "0x8FBA30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C50")]
			[Address(RVA = "0x8FBA78", Offset = "0x8FBA78", VA = "0x8FBA78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x8FB418", Offset = "0x8FB418", VA = "0x8FB418")]
		[DebuggerHidden]
		public <HideButtonWave>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x8FB64C", Offset = "0x8FB64C", VA = "0x8FB64C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x8FB650", Offset = "0x8FB650", VA = "0x8FB650", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x8FBA38", Offset = "0x8FBA38", VA = "0x8FBA38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000204")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSource audioSource;

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x8FBA80", Offset = "0x8FBA80", VA = "0x8FBA80")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x8FBA88", Offset = "0x8FBA88", VA = "0x8FBA88")]
		internal void <DoVictorySequence>b__2()
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x8FBAA4", Offset = "0x8FBAA4", VA = "0x8FBAA4")]
		internal void <DoVictorySequence>b__3()
		{
		}
	}

	[Token(Token = "0x2000206")]
	[CompilerGenerated]
	private sealed class <DoVictorySequence>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StanleyPanelController <>4__this;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass21_0 <>8__1;

		[Token(Token = "0x17000160")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C5B")]
			[Address(RVA = "0x8FC8E0", Offset = "0x8FC8E0", VA = "0x8FC8E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0x8FC928", Offset = "0x8FC928", VA = "0x8FC928", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x8FB564", Offset = "0x8FB564", VA = "0x8FB564")]
		[DebuggerHidden]
		public <DoVictorySequence>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x8FBB98", Offset = "0x8FBB98", VA = "0x8FBB98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x8FBB9C", Offset = "0x8FBB9C", VA = "0x8FBB9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x8FC8E8", Offset = "0x8FC8E8", VA = "0x8FC8E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000207")]
	[CompilerGenerated]
	private sealed class <RevealWave>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StanleyPanelController <>4__this;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <runningDelay>5__2;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<StanleyButton>.Enumerator <>7__wrap2;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private StanleyButton <button>5__4;

		[Token(Token = "0x17000162")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0x8FCC9C", Offset = "0x8FCC9C", VA = "0x8FCC9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C64")]
			[Address(RVA = "0x8FCCE4", Offset = "0x8FCCE4", VA = "0x8FCCE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x8FB58C", Offset = "0x8FB58C", VA = "0x8FB58C")]
		[DebuggerHidden]
		public <RevealWave>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x8FC930", Offset = "0x8FC930", VA = "0x8FC930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x8FC94C", Offset = "0x8FC94C", VA = "0x8FC94C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x8FCC4C", Offset = "0x8FCC4C", VA = "0x8FCC4C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x8FCCA4", Offset = "0x8FCCA4", VA = "0x8FCCA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B53")]
	private const int BUTTON_ROW_SIZE = 9;

	[Token(Token = "0x4000B54")]
	private const int BUTTON_COL_SIZE = 3;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject stanleyButtonPrefab;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float revealDelay;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] waveObjects;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ScreenController stanleyScreen;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject winScreen;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject winMessage;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<List<StanleyButton>> buttonWaves;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int currentWave;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int buttonsLeftForWave;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject bigRedButton;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action OnWaveComplete;

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x8FA530", Offset = "0x8FA530", VA = "0x8FA530")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x8FABC0", Offset = "0x8FABC0", VA = "0x8FABC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x8FB130", Offset = "0x8FB130", VA = "0x8FB130")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x8FB238", Offset = "0x8FB238", VA = "0x8FB238")]
	private void HandlePauseOrResume(bool pause)
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x8FB25C", Offset = "0x8FB25C", VA = "0x8FB25C")]
	public void OnButtonPress()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x8FB274", Offset = "0x8FB274", VA = "0x8FB274")]
	private void AdvanceWave()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x8FB378", Offset = "0x8FB378", VA = "0x8FB378")]
	[IteratorStateMachine(typeof(<HideButtonWave>d__19))]
	private IEnumerator HideButtonWave(IEnumerable<StanleyButton> buttons, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x8FB440", Offset = "0x8FB440", VA = "0x8FB440")]
	private void CleanupBigRedButton()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x8FB304", Offset = "0x8FB304", VA = "0x8FB304")]
	[IteratorStateMachine(typeof(<DoVictorySequence>d__21))]
	private IEnumerator DoVictorySequence()
	{
		return null;
	}

	[Token(Token = "0x6000C47")]
	private T GetElementFromStanleyGridPosition<T>(IEnumerable<T> collection, int x, int y, int rowSize, int colSize)
	{
		return (T)null;
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x8FAB4C", Offset = "0x8FAB4C", VA = "0x8FAB4C")]
	[IteratorStateMachine(typeof(<RevealWave>d__23))]
	private IEnumerator RevealWave()
	{
		return null;
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x8FB5B4", Offset = "0x8FB5B4", VA = "0x8FB5B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x8FB5B8", Offset = "0x8FB5B8", VA = "0x8FB5B8")]
	public StanleyPanelController()
	{
	}
}
[Token(Token = "0x2000208")]
public class SubtitleMenu : MonoBehaviour
{
	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject subPrompt;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject backPrompt;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text enableText;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text BackText;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject canvas;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource confrim;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioMixerGroup mixerGroup;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip soundClip;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject selection;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private PauseMenu pauseMenu;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private CanvasScaler canv;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SubtitleSystem subtitles;

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x8FCCEC", Offset = "0x8FCCEC", VA = "0x8FCCEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x8FD82C", Offset = "0x8FD82C", VA = "0x8FD82C")]
	public void EnableDisableSubtitles()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x8FCE3C", Offset = "0x8FCE3C", VA = "0x8FCE3C")]
	public void GetCorrectSubtitleText(SubtitleSystem subtitles)
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x8FDCDC", Offset = "0x8FDCDC", VA = "0x8FDCDC")]
	public void PlayConfrimationSound()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x8FD2C4", Offset = "0x8FD2C4", VA = "0x8FD2C4")]
	public void MoveBackGroundSelector(string language)
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x8FDDA0", Offset = "0x8FDDA0", VA = "0x8FDDA0")]
	public void onSubtitleClick()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x8FDDA4", Offset = "0x8FDDA4", VA = "0x8FDDA4")]
	public void onBackClick()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x8FDE24", Offset = "0x8FDE24", VA = "0x8FDE24")]
	public void onEnglishHover()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x8FDE64", Offset = "0x8FDE64", VA = "0x8FDE64")]
	public void onEnglishClick()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x8FE1E8", Offset = "0x8FE1E8", VA = "0x8FE1E8")]
	public void onBrazilHover()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x8FE228", Offset = "0x8FE228", VA = "0x8FE228")]
	public void onBrazilClick()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x8FE284", Offset = "0x8FE284", VA = "0x8FE284")]
	public void onChineseSimpleHover()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x8FE2C4", Offset = "0x8FE2C4", VA = "0x8FE2C4")]
	public void onChineseSimpleClick()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x8FE320", Offset = "0x8FE320", VA = "0x8FE320")]
	public void onChineseTradtionalHover()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x8FE360", Offset = "0x8FE360", VA = "0x8FE360")]
	public void onChineseTraditionalClick()
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x8FE3BC", Offset = "0x8FE3BC", VA = "0x8FE3BC")]
	public void onDutchHover()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x8FE3FC", Offset = "0x8FE3FC", VA = "0x8FE3FC")]
	public void onDutchClick()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x8FE458", Offset = "0x8FE458", VA = "0x8FE458")]
	public void onFrenchHover()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x8FE498", Offset = "0x8FE498", VA = "0x8FE498")]
	public void onFrenchClick()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x8FE4F4", Offset = "0x8FE4F4", VA = "0x8FE4F4")]
	public void onGermanHover()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x8FE534", Offset = "0x8FE534", VA = "0x8FE534")]
	public void onGermanClick()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x8FE590", Offset = "0x8FE590", VA = "0x8FE590")]
	public void onItalianHover()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x8FE5D0", Offset = "0x8FE5D0", VA = "0x8FE5D0")]
	public void onItalianClick()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x8FE62C", Offset = "0x8FE62C", VA = "0x8FE62C")]
	public void onJapaneseHover()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x8FE66C", Offset = "0x8FE66C", VA = "0x8FE66C")]
	public void onJapaneseClick()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x8FE6C8", Offset = "0x8FE6C8", VA = "0x8FE6C8")]
	public void onKoreanHover()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x8FE708", Offset = "0x8FE708", VA = "0x8FE708")]
	public void onKoreanClick()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x8FE764", Offset = "0x8FE764", VA = "0x8FE764")]
	public void onPolishHover()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x8FE7A4", Offset = "0x8FE7A4", VA = "0x8FE7A4")]
	public void onPolishClick()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x8FE800", Offset = "0x8FE800", VA = "0x8FE800")]
	public void onPortugeseHover()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x8FE840", Offset = "0x8FE840", VA = "0x8FE840")]
	public void onPortugeseClick()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x8FE89C", Offset = "0x8FE89C", VA = "0x8FE89C")]
	public void onRussianHover()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x8FE8DC", Offset = "0x8FE8DC", VA = "0x8FE8DC")]
	public void onRussianClick()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x8FE938", Offset = "0x8FE938", VA = "0x8FE938")]
	public void onSpanishHover()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x8FE978", Offset = "0x8FE978", VA = "0x8FE978")]
	public void onSpanishClick()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x8FE9D4", Offset = "0x8FE9D4", VA = "0x8FE9D4")]
	public void onTurkishHover()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x8FEA14", Offset = "0x8FEA14", VA = "0x8FEA14")]
	public void onTurkishClick()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x8FEA70", Offset = "0x8FEA70", VA = "0x8FEA70")]
	public void OnSubHover()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x8FEA74", Offset = "0x8FEA74", VA = "0x8FEA74")]
	public void OnBackHover()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x8FEA78", Offset = "0x8FEA78", VA = "0x8FEA78")]
	public void NoHover()
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x8FEAB0", Offset = "0x8FEAB0", VA = "0x8FEAB0")]
	public SubtitleMenu()
	{
	}
}
[Token(Token = "0x2000209")]
public class SubtitleSystem : MonoBehaviour
{
	[Token(Token = "0x200020A")]
	[CompilerGenerated]
	private sealed class <PrintEveryDictionaryFile>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SubtitleSystem <>4__this;

		[Token(Token = "0x17000164")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x90202C", Offset = "0x90202C", VA = "0x90202C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0x902074", Offset = "0x902074", VA = "0x902074", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x9015E0", Offset = "0x9015E0", VA = "0x9015E0")]
		[DebuggerHidden]
		public <PrintEveryDictionaryFile>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x901610", Offset = "0x901610", VA = "0x901610", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x901614", Offset = "0x901614", VA = "0x901614", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x902034", Offset = "0x902034", VA = "0x902034", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject subtitleObject;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cameraObject;

	[Token(Token = "0x4000B81")]
	private const string playerSubLanguagePrefsKey = "SUB_LANGUAGE";

	[Token(Token = "0x4000B82")]
	private const string playerSubOnOffPrefsKey = "SUB_STATE";

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string currentLanguage;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool showingSubs;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string lastKeyCalled;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform friendTalk;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform stanleyTalk;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RectTransform FrontCanvas;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RectTransform BackCanvas;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform BackCanvas2;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<string, string> VoiceLineDatabase;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<string, string> BackUpEnglishDictionary;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool EnableSubtitles;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool DebugFunctionEnabled;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text dropShadow;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text dropShadow2;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text frontText;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextAsset BackupFile;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextAsset EnglishFile;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextAsset FrenchFile;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextAsset ItalianFile;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextAsset GermanFile;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TextAsset SpanishFile;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TextAsset BrazilianPortugueseFile;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TextAsset RussianFile;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextAsset PolishFile;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TextAsset ChineseSimpleFile;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TextAsset ChineseFullFile;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public TextAsset JapaneseFile;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TextAsset KoreanFile;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public TextAsset PortugueseFile;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public TextAsset DutchFile;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public TextAsset TurkishFile;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Font RussianFont;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Font PolishFont;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Font TurkishFont;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Font ChineseTFont;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Font ChineseSFont;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Font KoreanFont;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Font JapaneseFont;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Font WesternFont;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Material FontMaterial;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Material JapaneseFontMaterial;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Font currentFont;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool hasChangedToEasternFont;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private int currentIndex;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float[] movementPositions;

	[Token(Token = "0x4000BB0")]
	private const float LERP_SECONDS = 0.8f;

	[Token(Token = "0x4000BB1")]
	private const float LERP_SECONDS_ROTATION = 0.8f;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Vector3 CurrentTextPosition;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private Vector3 OldTextPosition;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Vector3 TargetTextPosition;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float LastLerpTime;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Quaternion CurrentTextRotation;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Quaternion OldTextRotation;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Quaternion TargetTextRotation;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float LastLerpRotationTime;

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x8FEAB8", Offset = "0x8FEAB8", VA = "0x8FEAB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x8FEE58", Offset = "0x8FEE58", VA = "0x8FEE58")]
	public string GetSystemLanguageString()
	{
		return null;
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x8FF268", Offset = "0x8FF268", VA = "0x8FF268")]
	public void EnableSubtitlesIfNewGame()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x8FE0E0", Offset = "0x8FE0E0", VA = "0x8FE0E0")]
	public void EnableSubtitlesIfChangingToNewLanguage()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x8FF308", Offset = "0x8FF308", VA = "0x8FF308")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x8FF320", Offset = "0x8FF320", VA = "0x8FF320")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x8FF324", Offset = "0x8FF324", VA = "0x8FF324")]
	public bool V3Equal(Vector3 a, Vector3 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x8FEF50", Offset = "0x8FEF50", VA = "0x8FEF50")]
	private void FillSubtitleDictionary(string language)
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x8FDFC4", Offset = "0x8FDFC4", VA = "0x8FDFC4")]
	public void ChangeSubtitleDictionary(string language)
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x8FF3D0", Offset = "0x8FF3D0", VA = "0x8FF3D0")]
	private string GetLanguageToUseForSubtitles(string language)
	{
		return null;
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x9011C4", Offset = "0x9011C4", VA = "0x9011C4")]
	public void LoadNewSubtitle(string key, float TimeShownOnScreen)
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x8FC830", Offset = "0x8FC830", VA = "0x8FC830")]
	public string GetNewTextForMenus(string key)
	{
		return null;
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x900BA0", Offset = "0x900BA0", VA = "0x900BA0")]
	public void Save()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x8FEC88", Offset = "0x8FEC88", VA = "0x8FEC88")]
	public bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x900F38", Offset = "0x900F38", VA = "0x900F38")]
	public void ResetCurrentTextShown(SubtitleSystem subs)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x900CA8", Offset = "0x900CA8", VA = "0x900CA8")]
	private void ChangeTextFromSubtitle()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x90133C", Offset = "0x90133C", VA = "0x90133C")]
	public void ClearTextFromSubtitles()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x8FDC00", Offset = "0x8FDC00", VA = "0x8FDC00")]
	public void FlipSubtitlesOption()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x9013D0", Offset = "0x9013D0", VA = "0x9013D0")]
	public void SetEnableSubtitles(bool enable)
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x8FDCF8", Offset = "0x8FDCF8", VA = "0x8FDCF8")]
	public bool GetEnableSubtitles()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x901498", Offset = "0x901498", VA = "0x901498")]
	public string GetCurrentLanguage()
	{
		return null;
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x8FEC1C", Offset = "0x8FEC1C", VA = "0x8FEC1C")]
	public void ChangePositionToFriend()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x9014A0", Offset = "0x9014A0", VA = "0x9014A0")]
	public void ChangePositionBackToFriend()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x901500", Offset = "0x901500", VA = "0x901500")]
	public void ChangePositionToStanley()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x90156C", Offset = "0x90156C", VA = "0x90156C")]
	[IteratorStateMachine(typeof(<PrintEveryDictionaryFile>d__83))]
	private IEnumerator PrintEveryDictionaryFile()
	{
		return null;
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x901608", Offset = "0x901608", VA = "0x901608")]
	public SubtitleSystem()
	{
	}
}
[Token(Token = "0x200020B")]
public class SubtitleText : MonoBehaviour
{
	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text subtitlesText;

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x90207C", Offset = "0x90207C", VA = "0x90207C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x90232C", Offset = "0x90232C", VA = "0x90232C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x9025A0", Offset = "0x9025A0", VA = "0x9025A0")]
	private void OnSubtitlesEnabled(bool newState)
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x9025CC", Offset = "0x9025CC", VA = "0x9025CC")]
	private void OnSubtitlesChanged(string text, float time)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x9026A4", Offset = "0x9026A4", VA = "0x9026A4")]
	private void OnPause(bool newState)
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x902724", Offset = "0x902724", VA = "0x902724")]
	private void HideText()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x902794", Offset = "0x902794", VA = "0x902794")]
	public SubtitleText()
	{
	}
}
[Token(Token = "0x200020C")]
public class TakeScreenshot : MonoBehaviour
{
	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InputActionReference actionReference;

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x90279C", Offset = "0x90279C", VA = "0x90279C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x90283C", Offset = "0x90283C", VA = "0x90283C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x9028DC", Offset = "0x9028DC", VA = "0x9028DC")]
	private void PlayerInputAction(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x902924", Offset = "0x902924", VA = "0x902924")]
	public TakeScreenshot()
	{
	}
}
[Token(Token = "0x200020D")]
public abstract class TargetForHoldable : NukeObject
{
	[Token(Token = "0x6000CB9")]
	public abstract bool CanBeUsedByHeld(UseContext context);

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x8F523C", Offset = "0x8F523C", VA = "0x8F523C")]
	protected TargetForHoldable()
	{
	}
}
[Token(Token = "0x200020E")]
public class TeleportValidator : MonoBehaviour
{
	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TeleportValidator _instance;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int activeTeleporters;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject validTeleportTarget;

	[Token(Token = "0x17000166")]
	public static TeleportValidator Instance
	{
		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x90292C", Offset = "0x90292C", VA = "0x90292C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x902974", Offset = "0x902974", VA = "0x902974")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x902A74", Offset = "0x902A74", VA = "0x902A74")]
	public void TeleportStart()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x902AA4", Offset = "0x902AA4", VA = "0x902AA4")]
	public void TeleportEnd()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x902AE4", Offset = "0x902AE4", VA = "0x902AE4")]
	public bool IsValidTeleportTarget(GameObject target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x902B50", Offset = "0x902B50", VA = "0x902B50")]
	public TeleportValidator()
	{
	}
}
[Token(Token = "0x200020F")]
public class TenDigitKeypad : KeypadWidget
{
	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool areWheelsShowing;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioClip revealWheelsClip;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private WordWheelWidget[] wheelWidgets;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private WidgetProxy wordWheelButtonProxy;

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x902B58", Offset = "0x902B58", VA = "0x902B58", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x902B90", Offset = "0x902B90", VA = "0x902B90", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x902B98", Offset = "0x902B98", VA = "0x902B98", Slot = "9")]
	protected override string GetRestartState()
	{
		return null;
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x902C04", Offset = "0x902C04", VA = "0x902C04", Slot = "16")]
	protected override void OnRevealEnd()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x902C80", Offset = "0x902C80", VA = "0x902C80", Slot = "13")]
	protected override void OnRestartBegin()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x902D08", Offset = "0x902D08", VA = "0x902D08", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x902D84", Offset = "0x902D84", VA = "0x902D84", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x902E50", Offset = "0x902E50", VA = "0x902E50")]
	public void RevealSpinners()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x903390", Offset = "0x903390", VA = "0x903390")]
	public TenDigitKeypad()
	{
	}
}
[Token(Token = "0x2000211")]
public class TextCrawler : MonoBehaviour
{
	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float startDelay;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float endDelay;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Tooltip("The amount of time the animation should take to complete")]
	private float letterDisplayDuration;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string text;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public Text[] textObjects;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[Tooltip("A modifier that will randomly adjust how long individual letters appear")]
	private float variancePercentage;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource loopingTextSound;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float letterTimer;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int letterIdx;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action OnCrawlComplete;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float delayTimer;

	[Token(Token = "0x17000167")]
	public bool IsComplete
	{
		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x903568", Offset = "0x903568", VA = "0x903568")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x9035A4", Offset = "0x9035A4", VA = "0x9035A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x903648", Offset = "0x903648", VA = "0x903648")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x9036F8", Offset = "0x9036F8", VA = "0x9036F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x903F20", Offset = "0x903F20", VA = "0x903F20")]
	public void ForceComplete()
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x903FF8", Offset = "0x903FF8", VA = "0x903FF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x904250", Offset = "0x904250", VA = "0x904250")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x9042E8", Offset = "0x9042E8", VA = "0x9042E8")]
	public void CrawlText(string newText, float newDisplayTime)
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x904318", Offset = "0x904318", VA = "0x904318")]
	public TextCrawler()
	{
	}
}
[Token(Token = "0x2000212")]
public class ThreeByFiveKeypad : MatrixKeypad<ThreeByFiveKeypadButton>
{
	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private sbyte[] pattern;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<MatrixKeypadButton> edgeButtons;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int buttonPressesCount;

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x904378", Offset = "0x904378", VA = "0x904378", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x904674", Offset = "0x904674", VA = "0x904674", Slot = "15")]
	protected override void OnRevealBegin()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x904818", Offset = "0x904818", VA = "0x904818", Slot = "16")]
	protected override void OnRevealEnd()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x9048E8", Offset = "0x9048E8", VA = "0x9048E8", Slot = "18")]
	internal override void OnButtonUsed(MatrixKeypadButton button)
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x904B6C", Offset = "0x904B6C", VA = "0x904B6C", Slot = "13")]
	protected override void OnRestartBegin()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x904CF8", Offset = "0x904CF8", VA = "0x904CF8", Slot = "9")]
	protected override string GetRestartState()
	{
		return null;
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x904D38", Offset = "0x904D38", VA = "0x904D38", Slot = "11")]
	protected override string GetRevealState()
	{
		return null;
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x904D78", Offset = "0x904D78", VA = "0x904D78", Slot = "12")]
	protected override string GetRevealTrigger()
	{
		return null;
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x904DB8", Offset = "0x904DB8", VA = "0x904DB8")]
	public ThreeByFiveKeypad()
	{
	}
}
[Token(Token = "0x2000213")]
public class ThreeByFiveKeypadButton : MatrixKeypadButton
{
	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material ActivatedMaterial;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public WidgetProxy proxy;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Material OffMaterial;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Renderer buttonMeshRenderer;

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x904FD0", Offset = "0x904FD0", VA = "0x904FD0", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x90505C", Offset = "0x90505C", VA = "0x90505C", Slot = "16")]
	protected override void OnRevealEnd()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x905098", Offset = "0x905098", VA = "0x905098", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x9050BC", Offset = "0x9050BC", VA = "0x9050BC", Slot = "20")]
	internal override void OnValueChanged(sbyte value)
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x905104", Offset = "0x905104", VA = "0x905104")]
	public ThreeByFiveKeypadButton()
	{
	}
}
[Token(Token = "0x2000214")]
public class ThrowSwitch : Widget
{
	[Token(Token = "0x2000215")]
	public enum State
	{
		[Token(Token = "0x4000BE9")]
		Center,
		[Token(Token = "0x4000BEA")]
		Left,
		[Token(Token = "0x4000BEB")]
		Right
	}

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public State state;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string scrubAnimState;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string scrubCancelState;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float startingScrubValue;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 grabStartingPosition;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 prevEuler;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject grabbingController;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public XRGrabInteractable xrGI;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float scrubBeganTime;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool isScrubbing;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool scrubMoved;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float scrubFrac_;

	[Token(Token = "0x4000BE6")]
	private const float PanelWidth = 0.3f;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Sequence scrubCancelTween;

	[Token(Token = "0x17000168")]
	private float ScrubFrac
	{
		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x90510C", Offset = "0x90510C", VA = "0x90510C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x905114", Offset = "0x905114", VA = "0x905114")]
		set
		{
		}
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x90515C", Offset = "0x90515C", VA = "0x90515C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x9055B0", Offset = "0x9055B0", VA = "0x9055B0", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x9055B8", Offset = "0x9055B8", VA = "0x9055B8", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x9055C0", Offset = "0x9055C0", VA = "0x9055C0", Slot = "9")]
	protected override string GetRestartState()
	{
		return null;
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x905600", Offset = "0x905600", VA = "0x905600", Slot = "10")]
	protected override string GetRestartTrigger()
	{
		return null;
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x9056A8", Offset = "0x9056A8", VA = "0x9056A8", Slot = "13")]
	protected override void OnRestartBegin()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x905A74", Offset = "0x905A74", VA = "0x905A74", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x905A7C", Offset = "0x905A7C", VA = "0x905A7C", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x905B38", Offset = "0x905B38", VA = "0x905B38")]
	public void ScrubGrab(GameObject grabbingObject)
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x9052B4", Offset = "0x9052B4", VA = "0x9052B4")]
	private bool ScrubIsComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x905AE4", Offset = "0x905AE4", VA = "0x905AE4")]
	private void ScrubToggle(string scrubState, string cancelState)
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x9052E0", Offset = "0x9052E0", VA = "0x9052E0")]
	private void ScrubAccept()
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x9056AC", Offset = "0x9056AC", VA = "0x9056AC")]
	public void ScrubStop()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x905CF4", Offset = "0x905CF4", VA = "0x905CF4")]
	private void SetScrubFracAndAnimate(float value)
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x905C10", Offset = "0x905C10", VA = "0x905C10")]
	private void ScrubStart()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x905D58", Offset = "0x905D58", VA = "0x905D58")]
	private void Throw(State newState, AudioClip clip, string trigger, Action fn)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x905EA4", Offset = "0x905EA4", VA = "0x905EA4")]
	public ThrowSwitch()
	{
	}
}
[Token(Token = "0x2000217")]
public class TimeMachineKeypad : KeypadWidget
{
	[Token(Token = "0x2000218")]
	[CompilerGenerated]
	private sealed class <DoBackwardsTimeAnimation>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeMachineKeypad <>4__this;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <finalStr>5__2;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <currStr>5__3;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <switchTime>5__4;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <i>5__5;

		[Token(Token = "0x17000169")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D08")]
			[Address(RVA = "0x907490", Offset = "0x907490", VA = "0x907490", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0x9074D8", Offset = "0x9074D8", VA = "0x9074D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x90717C", Offset = "0x90717C", VA = "0x90717C")]
		[DebuggerHidden]
		public <DoBackwardsTimeAnimation>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x9071A4", Offset = "0x9071A4", VA = "0x9071A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x9071A8", Offset = "0x9071A8", VA = "0x9071A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x907498", Offset = "0x907498", VA = "0x907498", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000219")]
	[CompilerGenerated]
	private sealed class <DoForwardsTimeAnimation>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeMachineKeypad <>4__this;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <toggleTime>5__2;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <blinks>5__3;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__4;

		[Token(Token = "0x1700016B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0x9077C8", Offset = "0x9077C8", VA = "0x9077C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x907810", Offset = "0x907810", VA = "0x907810", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x9074E0", Offset = "0x9074E0", VA = "0x9074E0")]
		[DebuggerHidden]
		public <DoForwardsTimeAnimation>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x907508", Offset = "0x907508", VA = "0x907508", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x90750C", Offset = "0x90750C", VA = "0x90750C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x9077D0", Offset = "0x9077D0", VA = "0x9077D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Text timeText;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Action textAnimationCallback;

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x905FA4", Offset = "0x905FA4", VA = "0x905FA4", Slot = "15")]
	protected override void OnRevealBegin()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x906034", Offset = "0x906034", VA = "0x906034")]
	public void BackwardsTimeAnimation(Action finishCallback)
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x906060", Offset = "0x906060", VA = "0x906060")]
	[IteratorStateMachine(typeof(<DoBackwardsTimeAnimation>d__4))]
	public IEnumerator DoBackwardsTimeAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x9060D4", Offset = "0x9060D4", VA = "0x9060D4")]
	public void ForwardsTimeAnimation(Action finishCallback)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x906100", Offset = "0x906100", VA = "0x906100")]
	[IteratorStateMachine(typeof(<DoForwardsTimeAnimation>d__6))]
	public IEnumerator DoForwardsTimeAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x906174", Offset = "0x906174", VA = "0x906174")]
	public TimeMachineKeypad()
	{
	}
}
[Token(Token = "0x200021A")]
[RequireComponent(typeof(ScreenFader))]
public class TitleScene : MonoBehaviour
{
	[Token(Token = "0x200021B")]
	private enum TitleScreenState
	{
		[Token(Token = "0x4000C14")]
		FadingIn,
		[Token(Token = "0x4000C15")]
		LoadingGame,
		[Token(Token = "0x4000C16")]
		WaitingForUserInput,
		[Token(Token = "0x4000C17")]
		FadingOut,
		[Token(Token = "0x4000C18")]
		TouchControls,
		[Token(Token = "0x4000C19")]
		Complete
	}

	[Token(Token = "0x200021C")]
	[CompilerGenerated]
	private sealed class <LoadGame>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TitleScene <>4__this;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <facingMenu>5__2;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <dotCount>5__3;

		[Token(Token = "0x1700016D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x908B58", Offset = "0x908B58", VA = "0x908B58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x908BA0", Offset = "0x908BA0", VA = "0x908BA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x90802C", Offset = "0x90802C", VA = "0x90802C")]
		[DebuggerHidden]
		public <LoadGame>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x908580", Offset = "0x908580", VA = "0x908580", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x908584", Offset = "0x908584", VA = "0x908584", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x908B60", Offset = "0x908B60", VA = "0x908B60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextCrawler staySeatedText;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text[] versionNumberTexts;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ContinueText riftContinueText;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ContinueText gearVrContinueText;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ContinueText mouseContinueText;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ContinueText tapContinueText;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text loadingText;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text[] loadingTexts;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject renderedTitleText;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject loadingUI;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject touchUI;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject controllerUI;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject canvasObject;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SubtitleSystem subtitles;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject numberImage;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private InputActionReference actionReference;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Crosshair3D crosshair;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ScreenFader screenFader;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private TitleScreenState currentState;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private AsyncOperation sceneLoader;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ContinueText continueText;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private CountdownTimer loadingMinimumTimer;

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x907818", Offset = "0x907818", VA = "0x907818")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x9078B8", Offset = "0x9078B8", VA = "0x9078B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x907958", Offset = "0x907958", VA = "0x907958")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x907C08", Offset = "0x907C08", VA = "0x907C08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x907CF4", Offset = "0x907CF4", VA = "0x907CF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x907DE0", Offset = "0x907DE0", VA = "0x907DE0")]
	private void OnVRFocusAcquired()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x907E00", Offset = "0x907E00", VA = "0x907E00")]
	private void OnVRFocusLost()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x907E20", Offset = "0x907E20", VA = "0x907E20")]
	private void ShowSeatedText()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x907EF4", Offset = "0x907EF4", VA = "0x907EF4")]
	private void ShowLoadingText()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x907EA8", Offset = "0x907EA8", VA = "0x907EA8")]
	private void OnInitialFadeInComplete()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x907FB8", Offset = "0x907FB8", VA = "0x907FB8")]
	[IteratorStateMachine(typeof(<LoadGame>d__33))]
	private IEnumerator LoadGame()
	{
		return null;
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x908054", Offset = "0x908054", VA = "0x908054")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x908058", Offset = "0x908058", VA = "0x908058")]
	private void PlayerInputAction(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x908134", Offset = "0x908134", VA = "0x908134")]
	private void FadeToNextScene()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x9081F4", Offset = "0x9081F4", VA = "0x9081F4")]
	private bool VRFaceMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x908404", Offset = "0x908404", VA = "0x908404")]
	public TitleScene()
	{
	}
}
[Token(Token = "0x200021D")]
public abstract class Tool : Holdable
{
	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Action customAnimCallback;

	[Token(Token = "0x1700016F")]
	public Collider Target
	{
		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x908BAC", Offset = "0x908BAC", VA = "0x908BAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x908BA8", Offset = "0x908BA8", VA = "0x908BA8", Slot = "18")]
	public virtual void OnFailedCombine()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x908C50", Offset = "0x908C50", VA = "0x908C50")]
	protected void FireToolHitCallback()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x908C84", Offset = "0x908C84", VA = "0x908C84")]
	public void UseOnFocusPoint([Optional] Action animCallback, bool returnAfterComplete = false, [Optional] string trigger)
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x909004", Offset = "0x909004", VA = "0x909004", Slot = "19")]
	protected virtual void UseOnPoint(Vector3 pos, Vector3 offsetDir, [Optional] string trigger, [Optional] Action animCallback, bool returnAfterComplete = false)
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x9093A0", Offset = "0x9093A0", VA = "0x9093A0")]
	protected Tool()
	{
	}
}
[Token(Token = "0x200021F")]
public class ToolWidgetParams : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000220")]
	public class Combine
	{
		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("How the object acts when combined or interacting with other objects.")]
		public string animTrigger;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 relPitchYawRoll;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float offsetDist;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float offsetUpWeight;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float offsetEyeWeight;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float offsetSurfaceNormalWeight;

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x9093EC", Offset = "0x9093EC", VA = "0x9093EC")]
		public Combine()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000221")]
	public class Held
	{
		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("How the object behaves while the player is holding it.")]
		public Vector3 relPitchYawRoll;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float verticalLookScale;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distFromEye;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float distUp;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float distRight;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float tweenPercentagePerFrame;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float putDownTweenTime;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public EasingType tweenEase;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform[] tweenPoints;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NukeOvrHand.AnimId touchAnim;

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x909458", Offset = "0x909458", VA = "0x909458")]
		public Held()
		{
		}
	}

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Held held;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Combine combine;

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x9093E4", Offset = "0x9093E4", VA = "0x9093E4")]
	public ToolWidgetParams()
	{
	}
}
[Token(Token = "0x2000222")]
public class TopDrawer : Widget
{
	[Serializable]
	[Token(Token = "0x2000223")]
	public class PhoneNumberInfo
	{
		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string number;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip responeClip;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip callEndedClip;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int numberOfRings;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int numberOfResponseRepeats;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isWargameEnding;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool isLoopingResponse;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool isEndingLooping;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string subtitle;

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x90A7EC", Offset = "0x90A7EC", VA = "0x90A7EC")]
		public PhoneNumberInfo()
		{
		}
	}

	[Token(Token = "0x2000224")]
	private enum PhoneState
	{
		[Token(Token = "0x4000C59")]
		Idle,
		[Token(Token = "0x4000C5A")]
		DialTone,
		[Token(Token = "0x4000C5B")]
		DialingNumber,
		[Token(Token = "0x4000C5C")]
		Ringing,
		[Token(Token = "0x4000C5D")]
		Connected
	}

	[Token(Token = "0x2000225")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass50_0
	{
		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PhoneNumberInfo phoneNumberInfo;

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x90A7FC", Offset = "0x90A7FC", VA = "0x90A7FC")]
		public <>c__DisplayClass50_0()
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x90A804", Offset = "0x90A804", VA = "0x90A804")]
		internal bool <OnPhoneNumberEntered>b__0(string x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000226")]
	[CompilerGenerated]
	private sealed class <OnPhoneNumberEntered>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhoneNumberInfo phoneNumberInfo;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TopDrawer <>4__this;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass50_0 <>8__1;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioClip <phoneResponseClip>5__2;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <numberOfRings>5__3;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <numberOfResponses>5__4;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool <shouldLoop>5__5;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <i>5__6;

		[Token(Token = "0x17000172")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0x90B1AC", Offset = "0x90B1AC", VA = "0x90B1AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x90B1F4", Offset = "0x90B1F4", VA = "0x90B1F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x909F90", Offset = "0x909F90", VA = "0x909F90")]
		[DebuggerHidden]
		public <OnPhoneNumberEntered>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x90A828", Offset = "0x90A828", VA = "0x90A828", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x90A82C", Offset = "0x90A82C", VA = "0x90A82C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x90B1B4", Offset = "0x90B1B4", VA = "0x90B1B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000227")]
	[CompilerGenerated]
	private sealed class <OnNegotiateHandshake>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TopDrawer <>4__this;

		[Token(Token = "0x17000174")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0x90B2F8", Offset = "0x90B2F8", VA = "0x90B2F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D60")]
			[Address(RVA = "0x90B340", Offset = "0x90B340", VA = "0x90B340", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x90A5C4", Offset = "0x90A5C4", VA = "0x90A5C4")]
		[DebuggerHidden]
		public <OnNegotiateHandshake>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x90B1FC", Offset = "0x90B1FC", VA = "0x90B1FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x90B200", Offset = "0x90B200", VA = "0x90B200", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x90B300", Offset = "0x90B300", VA = "0x90B300", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip dialToneSound;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip hangUpSound;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip ringingSound;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip modemHandshakeSound;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject[] phoneKeys;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public PhoneNumberInfo[] phoneNumbers;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SlotForHoldable couplerSlot;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public SlotForHoldable receiverHomeSlot;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform hammerPryPos;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject hiddenDrawer;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Renderer drawerRenderer;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	private bool oneLastNumber;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Receiver receiver;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private DtmfPlayer dtmf;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float dialtoneTimeout;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private bool isCouplerRevealed;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
	private bool isConnectingToModem;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private StringBuilder dialedNumber;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Dictionary<string, PhoneNumberInfo> phoneBook;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private PhoneState phoneState;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private FloppyDisk floppy;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public bool isPried;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private GameObject ryzenForceLogoPrefab;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameObject ryzenForceObject;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string DialedNumbersKey;

	[Token(Token = "0x17000170")]
	public bool IsReceiverOnCoupler
	{
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x909480", Offset = "0x909480", VA = "0x909480")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x909488", Offset = "0x909488", VA = "0x909488")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000171")]
	public bool IsReceiverHome
	{
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x909494", Offset = "0x909494", VA = "0x909494")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x90949C", Offset = "0x90949C", VA = "0x90949C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x9094A8", Offset = "0x9094A8", VA = "0x9094A8", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x909618", Offset = "0x909618", VA = "0x909618")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x90961C", Offset = "0x90961C", VA = "0x90961C", Slot = "13")]
	protected override void OnRestartBegin()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x90964C", Offset = "0x90964C", VA = "0x90964C", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x909738", Offset = "0x909738", VA = "0x909738", Slot = "15")]
	protected override void OnRevealBegin()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x909834", Offset = "0x909834", VA = "0x909834", Slot = "16")]
	protected override void OnRevealEnd()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x90996C", Offset = "0x90996C", VA = "0x90996C", Slot = "12")]
	protected override string GetRevealTrigger()
	{
		return null;
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x9099D8", Offset = "0x9099D8", VA = "0x9099D8", Slot = "11")]
	protected override string GetRevealState()
	{
		return null;
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x909A44", Offset = "0x909A44", VA = "0x909A44", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x909A50", Offset = "0x909A50", VA = "0x909A50", Slot = "10")]
	protected override string GetRestartTrigger()
	{
		return null;
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x909ABC", Offset = "0x909ABC", VA = "0x909ABC", Slot = "9")]
	protected override string GetRestartState()
	{
		return null;
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x909B28", Offset = "0x909B28", VA = "0x909B28")]
	public void RevealCoupler()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x909BBC", Offset = "0x909BBC", VA = "0x909BBC", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x909BC4", Offset = "0x909BC4", VA = "0x909BC4", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x909C48", Offset = "0x909C48", VA = "0x909C48")]
	public void OnPhoneKey(TopDrawerPhoneKey key)
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x909F00", Offset = "0x909F00", VA = "0x909F00")]
	[IteratorStateMachine(typeof(<OnPhoneNumberEntered>d__50))]
	private IEnumerator OnPhoneNumberEntered(PhoneNumberInfo phoneNumberInfo)
	{
		return null;
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x909FB8", Offset = "0x909FB8", VA = "0x909FB8")]
	public void ResetDialTone()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x90A08C", Offset = "0x90A08C", VA = "0x90A08C")]
	public void OnReceiverPickUp()
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x90A0D0", Offset = "0x90A0D0", VA = "0x90A0D0")]
	public void OnReceiverPutDown(SlotForHoldable slot)
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x90A364", Offset = "0x90A364", VA = "0x90A364")]
	public void ForceOnReceiverPutDownHomeSlot()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x90A550", Offset = "0x90A550", VA = "0x90A550")]
	[IteratorStateMachine(typeof(<OnNegotiateHandshake>d__55))]
	public IEnumerator OnNegotiateHandshake()
	{
		return null;
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x90A5EC", Offset = "0x90A5EC", VA = "0x90A5EC")]
	private void StartWargamesEnding()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x90A68C", Offset = "0x90A68C", VA = "0x90A68C")]
	public bool IsDialTone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x90A6B8", Offset = "0x90A6B8", VA = "0x90A6B8")]
	public TopDrawer()
	{
	}
}
[Token(Token = "0x2000228")]
public class TopDrawerHammerTarget : TargetForHoldable
{
	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x90B348", Offset = "0x90B348", VA = "0x90B348", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x90B364", Offset = "0x90B364", VA = "0x90B364", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x90B370", Offset = "0x90B370", VA = "0x90B370", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x90B378", Offset = "0x90B378", VA = "0x90B378", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x90B408", Offset = "0x90B408", VA = "0x90B408")]
	public TopDrawerHammerTarget()
	{
	}
}
[Token(Token = "0x2000229")]
public class TopDrawerPhoneCradleButton : NukeObject
{
	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TopDrawer drawer;

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x90B410", Offset = "0x90B410", VA = "0x90B410", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x90B418", Offset = "0x90B418", VA = "0x90B418", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x90B430", Offset = "0x90B430", VA = "0x90B430", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x90B474", Offset = "0x90B474", VA = "0x90B474")]
	public TopDrawerPhoneCradleButton()
	{
	}
}
[Token(Token = "0x200022A")]
public class TopDrawerPhoneKey : Widget
{
	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Game.ScreenInputMode inputMode;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	internal TopDrawer drawer;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	internal char digit;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Sequence currentTween;

	[Token(Token = "0x4000C71")]
	private const float BUTTON_DEPRESS_AMOUNT = 0.5f;

	[Token(Token = "0x4000C72")]
	private const float BUTTON_DEPRESS_DURATION = 0.15f;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 restPosition;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float multiHitTimer;

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x90B47C", Offset = "0x90B47C", VA = "0x90B47C", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x90B58C", Offset = "0x90B58C", VA = "0x90B58C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x90B5B8", Offset = "0x90B5B8", VA = "0x90B5B8", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x90B604", Offset = "0x90B604", VA = "0x90B604", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x90B7C4", Offset = "0x90B7C4", VA = "0x90B7C4", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x90B7CC", Offset = "0x90B7CC", VA = "0x90B7CC", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x90B850", Offset = "0x90B850", VA = "0x90B850")]
	public TopDrawerPhoneKey()
	{
	}
}
[Token(Token = "0x200022B")]
public class TouchControls : MonoBehaviour
{
	[Token(Token = "0x200022C")]
	[CompilerGenerated]
	private sealed class <UpdateInput>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TouchControls <>4__this;

		[Token(Token = "0x1700017B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D80")]
			[Address(RVA = "0x90C25C", Offset = "0x90C25C", VA = "0x90C25C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D82")]
			[Address(RVA = "0x90C2A4", Offset = "0x90C2A4", VA = "0x90C2A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x90BB1C", Offset = "0x90BB1C", VA = "0x90BB1C")]
		[DebuggerHidden]
		public <UpdateInput>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x90BBF8", Offset = "0x90BBF8", VA = "0x90BBF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x90BBFC", Offset = "0x90BBFC", VA = "0x90BBFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x90C264", Offset = "0x90C264", VA = "0x90C264", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minPitch;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxPitch;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensYaw;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float sensPitch;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useGyroLook;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float pitch;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float yaw;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool m_hasMoved;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float pressStartTime;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_touchDistanceSqr;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_tapCoordinates;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Crosshair3D m_crosshair;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine inputCoroutine;

	[Token(Token = "0x4000C82")]
	private const string invertControlsKey = "InvertControls";

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TouchControls s_instance;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool invertControls;

	[Token(Token = "0x17000176")]
	public static TouchControls Instance
	{
		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x90B858", Offset = "0x90B858", VA = "0x90B858")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000177")]
	public bool IsLookAllowed
	{
		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x90B8A0", Offset = "0x90B8A0", VA = "0x90B8A0")]
		[CompilerGenerated]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x90B8A8", Offset = "0x90B8A8", VA = "0x90B8A8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000178")]
	public bool IsPress
	{
		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x90B8B4", Offset = "0x90B8B4", VA = "0x90B8B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000179")]
	public Vector3 ScreenTapPosition
	{
		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x90B8E0", Offset = "0x90B8E0", VA = "0x90B8E0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700017A")]
	public bool IsInvertControls
	{
		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x90B8EC", Offset = "0x90B8EC", VA = "0x90B8EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x90B8F4", Offset = "0x90B8F4", VA = "0x90B8F4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x90B958", Offset = "0x90B958", VA = "0x90B958")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x90BAA8", Offset = "0x90BAA8", VA = "0x90BAA8")]
	[IteratorStateMachine(typeof(<UpdateInput>d__30))]
	private IEnumerator UpdateInput()
	{
		return null;
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x90BB44", Offset = "0x90BB44", VA = "0x90BB44")]
	public void ToggleInvertControls()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x90BB54", Offset = "0x90BB54", VA = "0x90BB54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x90BBD4", Offset = "0x90BBD4", VA = "0x90BBD4")]
	public TouchControls()
	{
	}
}
[Token(Token = "0x200022D")]
public class DebugHmdAdjuster : MonoBehaviour
{
	[Token(Token = "0x200022E")]
	[CompilerGenerated]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugHmdAdjuster <>4__this;

		[Token(Token = "0x1700017D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D88")]
			[Address(RVA = "0x90C638", Offset = "0x90C638", VA = "0x90C638", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0x90C680", Offset = "0x90C680", VA = "0x90C680", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x90C320", Offset = "0x90C320", VA = "0x90C320")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x90C350", Offset = "0x90C350", VA = "0x90C350", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x90C354", Offset = "0x90C354", VA = "0x90C354", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x90C640", Offset = "0x90C640", VA = "0x90C640", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x90C2AC", Offset = "0x90C2AC", VA = "0x90C2AC")]
	[IteratorStateMachine(typeof(<Start>d__0))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x90C348", Offset = "0x90C348", VA = "0x90C348")]
	public DebugHmdAdjuster()
	{
	}
}
[Token(Token = "0x200022F")]
public class GrabbableDropSlot : MonoBehaviour
{
	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string holdableTypeName;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Type holdableType;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxDistance;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider targetCollider;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool triggersAction;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool disableOnDrop;

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x90C688", Offset = "0x90C688", VA = "0x90C688")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x90C728", Offset = "0x90C728", VA = "0x90C728")]
	public GrabbableDropSlot()
	{
	}
}
[Token(Token = "0x2000230")]
public class GrabbableHammer : GrabbableHoldable
{
	[Token(Token = "0x2000231")]
	[CompilerGenerated]
	private sealed class <ResetTimer>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TopDrawer topDrawer;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrabbableHammer <>4__this;

		[Token(Token = "0x1700017F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0x90EB14", Offset = "0x90EB14", VA = "0x90EB14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0x90EB5C", Offset = "0x90EB5C", VA = "0x90EB5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x90E8FC", Offset = "0x90E8FC", VA = "0x90E8FC")]
		[DebuggerHidden]
		public <ResetTimer>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x90EA10", Offset = "0x90EA10", VA = "0x90EA10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x90EA14", Offset = "0x90EA14", VA = "0x90EA14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x90EB1C", Offset = "0x90EB1C", VA = "0x90EB1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Hammer hammer;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool isPryingGrab;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private SelectEnterEventArgs interactableArgs;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 lastPos;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Quaternion lockedRotation;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject holdPosition;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool pickedUp;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[SerializeField]
	public float pryThreshhold;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	public float hitThreshold;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Coroutine pryWaitCoroutine;

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x90C73C", Offset = "0x90C73C", VA = "0x90C73C", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x90C7DC", Offset = "0x90C7DC", VA = "0x90C7DC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x90C7E0", Offset = "0x90C7E0", VA = "0x90C7E0", Slot = "7")]
	protected override void OnGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x90C90C", Offset = "0x90C90C", VA = "0x90C90C", Slot = "8")]
	protected override void OnUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x90C9E8", Offset = "0x90C9E8", VA = "0x90C9E8", Slot = "9")]
	protected override void HandleGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x90CA5C", Offset = "0x90CA5C", VA = "0x90CA5C")]
	private static void FreezePrinter()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x90D594", Offset = "0x90D594", VA = "0x90D594", Slot = "10")]
	protected override void HandleUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x90E260", Offset = "0x90E260", VA = "0x90E260")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x90E498", Offset = "0x90E498", VA = "0x90E498")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x90E6A4", Offset = "0x90E6A4", VA = "0x90E6A4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x90E6C4", Offset = "0x90E6C4", VA = "0x90E6C4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x90E85C", Offset = "0x90E85C", VA = "0x90E85C")]
	[IteratorStateMachine(typeof(<ResetTimer>d__21))]
	private IEnumerator ResetTimer(float waitTime, Collider other, TopDrawer topDrawer)
	{
		return null;
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x90E924", Offset = "0x90E924", VA = "0x90E924")]
	public void OnCleanUp()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x90E9A0", Offset = "0x90E9A0", VA = "0x90E9A0")]
	public GrabbableHammer()
	{
	}
}
[Token(Token = "0x2000232")]
public class GrabbableHoldable : MonoBehaviour
{
	[Token(Token = "0x2000233")]
	[CompilerGenerated]
	private sealed class <ResetTimer>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrabbableHoldable <>4__this;

		[Token(Token = "0x17000182")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0x910020", Offset = "0x910020", VA = "0x910020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0x910068", Offset = "0x910068", VA = "0x910068", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x90FB78", Offset = "0x90FB78", VA = "0x90FB78")]
		[DebuggerHidden]
		public <ResetTimer>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x90FE10", Offset = "0x90FE10", VA = "0x90FE10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x90FE14", Offset = "0x90FE14", VA = "0x90FE14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x910028", Offset = "0x910028", VA = "0x910028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000234")]
	[CompilerGenerated]
	private sealed class <HandSwapTimer>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrabbableHoldable <>4__this;

		[Token(Token = "0x17000184")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0x910138", Offset = "0x910138", VA = "0x910138", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0x910180", Offset = "0x910180", VA = "0x910180", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x90FBA0", Offset = "0x90FBA0", VA = "0x90FBA0")]
		[DebuggerHidden]
		public <HandSwapTimer>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x910070", Offset = "0x910070", VA = "0x910070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x910074", Offset = "0x910074", VA = "0x910074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x910140", Offset = "0x910140", VA = "0x910140", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000235")]
	[CompilerGenerated]
	private sealed class <VelocityTrackingMovementType>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrabbableHoldable <>4__this;

		[Token(Token = "0x17000186")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x91026C", Offset = "0x91026C", VA = "0x91026C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0x9102B4", Offset = "0x9102B4", VA = "0x9102B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x90FDA4", Offset = "0x90FDA4", VA = "0x90FDA4")]
		[DebuggerHidden]
		public <VelocityTrackingMovementType>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x910188", Offset = "0x910188", VA = "0x910188", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x91018C", Offset = "0x91018C", VA = "0x91018C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x910274", Offset = "0x910274", VA = "0x910274", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Collider grabbableCollider;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip collisionClip;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useAnimator;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected GameObject grabbingObject;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected GameObject holdPoint;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected XRGrabInteractable interactable;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Holdable holdable;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Rigidbody holdableRigidbody;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 startPos;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Quaternion startRot;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 startScale;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool restartRelease;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool startIsKinematic;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool hasBeenGrabbedSinceRestart;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	public bool HideHandsOnPickUp;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SkinnedMeshRenderer handMesh;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine resetCoroutine;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine handSwapCoroutine;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool isGrabbed;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool isHandSwap;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string whichHandHeldLast;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool isCustomRespawnPos;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject custRespawnObject;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Holdable holdableRef;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool isPoster;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	public bool setRespawnPosAtStart;

	[Token(Token = "0x17000181")]
	public bool IsStartKinematic
	{
		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x90EB64", Offset = "0x90EB64", VA = "0x90EB64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x90EB6C", Offset = "0x90EB6C", VA = "0x90EB6C", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x90ECB4", Offset = "0x90ECB4", VA = "0x90ECB4", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x90EDB4", Offset = "0x90EDB4", VA = "0x90EDB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x90EF44", Offset = "0x90EF44", VA = "0x90EF44")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x90F048", Offset = "0x90F048", VA = "0x90F048", Slot = "6")]
	protected virtual void OnWidgetRestart()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x90C908", Offset = "0x90C908", VA = "0x90C908", Slot = "7")]
	protected virtual void OnGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x90C9E4", Offset = "0x90C9E4", VA = "0x90C9E4", Slot = "8")]
	protected virtual void OnUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x90CB40", Offset = "0x90CB40", VA = "0x90CB40", Slot = "9")]
	protected virtual void HandleGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x90D5F0", Offset = "0x90D5F0", VA = "0x90D5F0", Slot = "10")]
	protected virtual void HandleUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x90F220", Offset = "0x90F220", VA = "0x90F220")]
	public TouchPointer CreatePickUpPointer()
	{
		return null;
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x90F4E0", Offset = "0x90F4E0", VA = "0x90F4E0")]
	public TouchPointer CreatePutDownPointer(Collider targetCollider)
	{
		return null;
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x90F684", Offset = "0x90F684", VA = "0x90F684")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x90F8D8", Offset = "0x90F8D8", VA = "0x90F8D8")]
	private void OnTriggerEnter(Collider otherCollider)
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x90F0D0", Offset = "0x90F0D0", VA = "0x90F0D0")]
	private void SetHeldHand(GameObject g)
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x90F854", Offset = "0x90F854", VA = "0x90F854")]
	[IteratorStateMachine(typeof(<ResetTimer>d__42))]
	private IEnumerator ResetTimer(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x90F5F0", Offset = "0x90F5F0", VA = "0x90F5F0")]
	[IteratorStateMachine(typeof(<HandSwapTimer>d__43))]
	private IEnumerator HandSwapTimer(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x90FBC8", Offset = "0x90FBC8", VA = "0x90FBC8")]
	public void ResetToStartPos()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x90FC68", Offset = "0x90FC68", VA = "0x90FC68")]
	public void ResetToSlot()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x90F04C", Offset = "0x90F04C", VA = "0x90F04C")]
	public void FloppyPickedUp()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x90F438", Offset = "0x90F438", VA = "0x90F438")]
	public void FloppyPutDown()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x90FD30", Offset = "0x90FD30", VA = "0x90FD30")]
	[IteratorStateMachine(typeof(<VelocityTrackingMovementType>d__48))]
	public IEnumerator VelocityTrackingMovementType()
	{
		return null;
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x90EA08", Offset = "0x90EA08", VA = "0x90EA08")]
	public GrabbableHoldable()
	{
	}
}
[Token(Token = "0x2000236")]
public class GrabbablePoster : GrabbableHoldable
{
	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private PosterShowcase posterShowcase;

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x9102BC", Offset = "0x9102BC", VA = "0x9102BC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x9102C0", Offset = "0x9102C0", VA = "0x9102C0", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x910358", Offset = "0x910358", VA = "0x910358", Slot = "7")]
	protected override void OnGrab(SelectEnterEventArgs currentGrabbingObject)
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x910374", Offset = "0x910374", VA = "0x910374", Slot = "8")]
	protected override void OnUngrab(SelectExitEventArgs previousGrabbingObject)
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x910574", Offset = "0x910574", VA = "0x910574")]
	public GrabbablePoster()
	{
	}
}
[Token(Token = "0x2000237")]
public class GrabbableResetSwitch : GrabbableWidget
{
	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ResetSwitch throwSwitch;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject leftHand;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject rightHand;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool beingGrabbed;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject activeHand;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion activeHandOrientation;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion defaultLeftHandOrientation;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Quaternion defaultRightHandOrientation;

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x91057C", Offset = "0x91057C", VA = "0x91057C", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x9106E4", Offset = "0x9106E4", VA = "0x9106E4", Slot = "7")]
	protected override void OnWidgetRestart()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x91071C", Offset = "0x91071C", VA = "0x91071C", Slot = "5")]
	protected override void WhileGrabbed()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x910A34", Offset = "0x910A34", VA = "0x910A34", Slot = "8")]
	protected override void OnGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x910F10", Offset = "0x910F10", VA = "0x910F10", Slot = "9")]
	protected override void OnUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x911090", Offset = "0x911090", VA = "0x911090")]
	public GrabbableResetSwitch()
	{
	}
}
[Token(Token = "0x2000238")]
public class GrabbableScrewdriver : GrabbableHoldable
{
	[Token(Token = "0x2000239")]
	[CompilerGenerated]
	private sealed class <UnscrewHaptics>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrabbableScrewdriver <>4__this;

		[Token(Token = "0x17000188")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0x911BE8", Offset = "0x911BE8", VA = "0x911BE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x911C30", Offset = "0x911C30", VA = "0x911C30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x911570", Offset = "0x911570", VA = "0x911570")]
		[DebuggerHidden]
		public <UnscrewHaptics>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x91197C", Offset = "0x91197C", VA = "0x91197C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x911980", Offset = "0x911980", VA = "0x911980", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x911BF0", Offset = "0x911BF0", VA = "0x911BF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023A")]
	[CompilerGenerated]
	private sealed class <ResetTimer>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Widget widget;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrabbableScrewdriver <>4__this;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Collider other;

		[Token(Token = "0x1700018A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0x911DA0", Offset = "0x911DA0", VA = "0x911DA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0x911DE8", Offset = "0x911DE8", VA = "0x911DE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x911650", Offset = "0x911650", VA = "0x911650")]
		[DebuggerHidden]
		public <ResetTimer>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x911C38", Offset = "0x911C38", VA = "0x911C38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x911C3C", Offset = "0x911C3C", VA = "0x911C3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x911DA8", Offset = "0x911DA8", VA = "0x911DA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private float pryingThreshhold;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float screwingThreshhold;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Screwdriver screwdriver;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 lastRotation;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool isPryingGrab;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject holdPosition;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Coroutine screwWaitCoroutine;

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x9110B0", Offset = "0x9110B0", VA = "0x9110B0", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x911158", Offset = "0x911158", VA = "0x911158")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x9111CC", Offset = "0x9111CC", VA = "0x9111CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x9111D0", Offset = "0x9111D0", VA = "0x9111D0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x9114B8", Offset = "0x9114B8", VA = "0x9114B8")]
	private void Unscrew(Collider other)
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x9114FC", Offset = "0x9114FC", VA = "0x9114FC")]
	[IteratorStateMachine(typeof(<UnscrewHaptics>d__13))]
	private IEnumerator UnscrewHaptics()
	{
		return null;
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x911598", Offset = "0x911598", VA = "0x911598")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x911404", Offset = "0x911404", VA = "0x911404")]
	[IteratorStateMachine(typeof(<ResetTimer>d__15))]
	private IEnumerator ResetTimer(float waitTime, Collider other, Widget widget)
	{
		return null;
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x911678", Offset = "0x911678", VA = "0x911678", Slot = "9")]
	protected override void HandleGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x91177C", Offset = "0x91177C", VA = "0x91177C", Slot = "10")]
	protected override void HandleUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x911874", Offset = "0x911874", VA = "0x911874")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x91188C", Offset = "0x91188C", VA = "0x91188C")]
	public void OnCleanUp()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x911908", Offset = "0x911908", VA = "0x911908")]
	public GrabbableScrewdriver()
	{
	}
}
[Token(Token = "0x200023B")]
public class GrabbableThrowSwitch : GrabbableWidget
{
	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ThrowSwitch throwSwitch;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject leftHand;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject rightHand;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject activeHand;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion activeHandOrientation;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Quaternion defaultLeftHandOrientation;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Quaternion defaultRightHandOrientation;

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x911DF0", Offset = "0x911DF0", VA = "0x911DF0", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x911F08", Offset = "0x911F08", VA = "0x911F08", Slot = "7")]
	protected override void OnWidgetRestart()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x911F40", Offset = "0x911F40", VA = "0x911F40", Slot = "5")]
	protected override void WhileGrabbed()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x912258", Offset = "0x912258", VA = "0x912258", Slot = "8")]
	protected override void OnGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x912694", Offset = "0x912694", VA = "0x912694", Slot = "9")]
	protected override void OnUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x9127C4", Offset = "0x9127C4", VA = "0x9127C4")]
	public GrabbableThrowSwitch()
	{
	}
}
[Token(Token = "0x200023C")]
public class GrabbableTrophy : MonoBehaviour
{
	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public bool rigidbodyRestart;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private XRGrabInteractable interactable;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 startingLocalPos;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion startingLocalRot;

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x9127D4", Offset = "0x9127D4", VA = "0x9127D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x9128AC", Offset = "0x9128AC", VA = "0x9128AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x912AB4", Offset = "0x912AB4", VA = "0x912AB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x912CBC", Offset = "0x912CBC", VA = "0x912CBC")]
	private void OnGrabbed(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x912DC0", Offset = "0x912DC0", VA = "0x912DC0")]
	private void OnUngrabbed(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x912F28", Offset = "0x912F28", VA = "0x912F28")]
	private void OnWillRestart()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x912FA0", Offset = "0x912FA0", VA = "0x912FA0")]
	public GrabbableTrophy()
	{
	}
}
[Token(Token = "0x200023D")]
public class GrabbableWidget : MonoBehaviour
{
	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float distanceThreshhold;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected Vector3 startingPosition;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Quaternion startingRotation;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private XRGrabInteractable interactable;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Widget widget;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isGrabbed;

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x912FA8", Offset = "0x912FA8", VA = "0x912FA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x910694", Offset = "0x910694", VA = "0x910694", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x913070", Offset = "0x913070", VA = "0x913070")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x9131EC", Offset = "0x9131EC", VA = "0x9131EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x913368", Offset = "0x913368", VA = "0x913368")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x9133F4", Offset = "0x9133F4", VA = "0x9133F4", Slot = "5")]
	protected virtual void WhileGrabbed()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x9133F8", Offset = "0x9133F8", VA = "0x9133F8", Slot = "6")]
	protected virtual void ThreshholdBrokenUpdate()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x9133FC", Offset = "0x9133FC", VA = "0x9133FC", Slot = "7")]
	protected virtual void OnWidgetRestart()
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x913400", Offset = "0x913400", VA = "0x913400", Slot = "8")]
	protected virtual void OnGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x913404", Offset = "0x913404", VA = "0x913404", Slot = "9")]
	protected virtual void OnUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x913408", Offset = "0x913408", VA = "0x913408")]
	private void HandleGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x9135A0", Offset = "0x9135A0", VA = "0x9135A0")]
	private void HandleUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x9135E8", Offset = "0x9135E8", VA = "0x9135E8")]
	protected TouchPointer CreateTouchPointer()
	{
		return null;
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x913718", Offset = "0x913718", VA = "0x913718")]
	protected void ResetTransform()
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x9110A0", Offset = "0x9110A0", VA = "0x9110A0")]
	public GrabbableWidget()
	{
	}
}
[Token(Token = "0x200023E")]
public class HandHider : MonoBehaviour
{
	[Token(Token = "0x200023F")]
	[CompilerGenerated]
	private sealed class <Start>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandHider <>4__this;

		[Token(Token = "0x1700018E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0x913D00", Offset = "0x913D00", VA = "0x913D00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E16")]
			[Address(RVA = "0x913D48", Offset = "0x913D48", VA = "0x913D48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x913A7C", Offset = "0x913A7C", VA = "0x913A7C")]
		[DebuggerHidden]
		public <Start>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x913AB4", Offset = "0x913AB4", VA = "0x913AB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x913AB8", Offset = "0x913AB8", VA = "0x913AB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x913D08", Offset = "0x913D08", VA = "0x913D08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject leftHand;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject rightHand;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _isLeftActive;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool _isRightActive;

	[Token(Token = "0x1700018C")]
	private bool IsLeftActive
	{
		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x913928", Offset = "0x913928", VA = "0x913928")]
		set
		{
		}
	}

	[Token(Token = "0x1700018D")]
	private bool IsRightActive
	{
		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x9139E4", Offset = "0x9139E4", VA = "0x9139E4")]
		set
		{
		}
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x913764", Offset = "0x913764", VA = "0x913764")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x913A08", Offset = "0x913A08", VA = "0x913A08")]
	[IteratorStateMachine(typeof(<Start>d__9))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x91394C", Offset = "0x91394C", VA = "0x91394C")]
	private static void SetActive(GameObject root, bool shouldBeActive)
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x913AA4", Offset = "0x913AA4", VA = "0x913AA4")]
	public HandHider()
	{
	}
}
[Token(Token = "0x2000240")]
public class PryVolumeHighlighter : MonoBehaviour
{
	[Token(Token = "0x2000241")]
	private enum ToolType
	{
		[Token(Token = "0x4000D00")]
		Screwdriver,
		[Token(Token = "0x4000D01")]
		Hammer
	}

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer highlightRenderer;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Widget widget;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ToolType toolType;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Tool tool;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock matPropBlock;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int highlightAmountMaterialPropertyId;

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x913D50", Offset = "0x913D50", VA = "0x913D50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x913DE4", Offset = "0x913DE4", VA = "0x913DE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x913ED8", Offset = "0x913ED8", VA = "0x913ED8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x913FCC", Offset = "0x913FCC", VA = "0x913FCC")]
	private void OnRestart()
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x914040", Offset = "0x914040", VA = "0x914040")]
	private void OnModeChanged(WidgetMode newMode)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x913FD4", Offset = "0x913FD4", VA = "0x913FD4")]
	private void ToggleHighlight(bool newState)
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x914050", Offset = "0x914050", VA = "0x914050")]
	private bool CanReactToCollider(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x9141F0", Offset = "0x9141F0", VA = "0x9141F0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x914218", Offset = "0x914218", VA = "0x914218")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x914240", Offset = "0x914240", VA = "0x914240")]
	public PryVolumeHighlighter()
	{
	}
}
[Token(Token = "0x2000242")]
public class TouchPointer : IPointer
{
	[Token(Token = "0x17000190")]
	public Transform TargetTransform
	{
		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x914248", Offset = "0x914248", VA = "0x914248", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x914250", Offset = "0x914250", VA = "0x914250")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000191")]
	public Transform EyeTransform
	{
		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x914258", Offset = "0x914258", VA = "0x914258", Slot = "5")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x914260", Offset = "0x914260", VA = "0x914260")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000192")]
	public Collider TargetCollider
	{
		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x914268", Offset = "0x914268", VA = "0x914268", Slot = "6")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x914270", Offset = "0x914270", VA = "0x914270")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000193")]
	public Vector3 ContactPosition
	{
		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x914278", Offset = "0x914278", VA = "0x914278", Slot = "7")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x914284", Offset = "0x914284", VA = "0x914284")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000194")]
	public Holdable AttachedHoldable
	{
		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x914290", Offset = "0x914290", VA = "0x914290", Slot = "8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x914298", Offset = "0x914298", VA = "0x914298", Slot = "9")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x90F674", Offset = "0x90F674", VA = "0x90F674")]
	public TouchPointer()
	{
	}
}
[Token(Token = "0x2000243")]
public class DropTouchHoldablePointer : TouchPointer
{
	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x90F67C", Offset = "0x90F67C", VA = "0x90F67C")]
	public DropTouchHoldablePointer()
	{
	}
}
[Token(Token = "0x2000244")]
public class UIRaycasterToggler : MonoBehaviour
{
	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GraphicRaycaster nonTouchRaycaster;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GraphicRaycaster touchRaycaster;

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x9142A0", Offset = "0x9142A0", VA = "0x9142A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x9142E8", Offset = "0x9142E8", VA = "0x9142E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x9142EC", Offset = "0x9142EC", VA = "0x9142EC")]
	public UIRaycasterToggler()
	{
	}
}
[Token(Token = "0x2000245")]
public class UsablePoster : NukeObject
{
	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PosterShowcase posterShowcase;

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x9142F4", Offset = "0x9142F4", VA = "0x9142F4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x914384", Offset = "0x914384", VA = "0x914384", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x91438C", Offset = "0x91438C", VA = "0x91438C", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x9143A8", Offset = "0x9143A8", VA = "0x9143A8", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x9143B0", Offset = "0x9143B0", VA = "0x9143B0")]
	public UsablePoster()
	{
	}
}
[Token(Token = "0x2000246")]
public class TouchIndicator : MonoBehaviour
{
	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x9143B8", Offset = "0x9143B8", VA = "0x9143B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x9144C0", Offset = "0x9144C0", VA = "0x9144C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x9145C8", Offset = "0x9145C8", VA = "0x9145C8")]
	private void OnPause(bool newState)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x914634", Offset = "0x914634", VA = "0x914634")]
	public TouchIndicator()
	{
	}
}
[Token(Token = "0x2000247")]
public class TouchPromptSubs : MonoBehaviour
{
	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SubtitleSystem subtitles;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text gripText;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text distantObjectText;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text teleportText;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text triggerText;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text continueText;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text continueText2;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject AButton;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool isInMainGame;

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x91463C", Offset = "0x91463C", VA = "0x91463C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x91559C", Offset = "0x91559C", VA = "0x91559C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x9146C8", Offset = "0x9146C8", VA = "0x9146C8")]
	private void GetCorrectSubtitleText(SubtitleSystem subtitles)
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x915614", Offset = "0x915614", VA = "0x915614")]
	public TouchPromptSubs()
	{
	}
}
[Token(Token = "0x2000248")]
public class TouchVRController : MonoBehaviour
{
	[Token(Token = "0x2000249")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TouchVRController <>4__this;

		[Token(Token = "0x17000195")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E42")]
			[Address(RVA = "0x915828", Offset = "0x915828", VA = "0x915828", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x915870", Offset = "0x915870", VA = "0x915870", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x915690", Offset = "0x915690", VA = "0x915690")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x9156C0", Offset = "0x9156C0", VA = "0x9156C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x9156C4", Offset = "0x9156C4", VA = "0x9156C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x915830", Offset = "0x915830", VA = "0x915830", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject handObject;

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x91561C", Offset = "0x91561C", VA = "0x91561C")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x9156B8", Offset = "0x9156B8", VA = "0x9156B8")]
	public TouchVRController()
	{
	}
}
[Token(Token = "0x200024A")]
public class TrashCan : SlotForHoldable
{
	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int thrownAwayIndex;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 startingPosition;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion startingRotation;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform[] thrownAwayLocations;

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x915878", Offset = "0x915878", VA = "0x915878", Slot = "8")]
	public override Type GetOverrideType()
	{
		return null;
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x9158E4", Offset = "0x9158E4", VA = "0x9158E4")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x915934", Offset = "0x915934", VA = "0x915934", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x91598C", Offset = "0x91598C", VA = "0x91598C", Slot = "9")]
	public override Transform GetSlotPosition(Holdable holdable)
	{
		return null;
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x915A24", Offset = "0x915A24", VA = "0x915A24")]
	public TrashCan()
	{
	}
}
[Token(Token = "0x200024B")]
public class TweenTarget : TargetForHoldable
{
	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetTransform;

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x915A2C", Offset = "0x915A2C", VA = "0x915A2C", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x915A34", Offset = "0x915A34", VA = "0x915A34", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x915A3C", Offset = "0x915A3C", VA = "0x915A3C", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x915A44", Offset = "0x915A44", VA = "0x915A44", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x915A48", Offset = "0x915A48", VA = "0x915A48")]
	public TweenTarget()
	{
	}
}
[Token(Token = "0x200024C")]
public enum UseResult
{
	[Token(Token = "0x4000D1D")]
	None,
	[Token(Token = "0x4000D1E")]
	Used
}
[Token(Token = "0x200024D")]
public class UseContext
{
	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly IPointer pointer;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly NukeObject target;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly Holdable held;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly Game.Mode gameMode;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public readonly EndingInfo activeEndingInfo;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public readonly Collider hitCollider;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UseResult result;

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x915A50", Offset = "0x915A50", VA = "0x915A50")]
	public UseContext(IPointer pointer)
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x915D54", Offset = "0x915D54", VA = "0x915D54")]
	public bool IsEndingActive(Ending ending)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x915D8C", Offset = "0x915D8C", VA = "0x915D8C")]
	public void Apply()
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x9162AC", Offset = "0x9162AC", VA = "0x9162AC")]
	private void UseTarget()
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x916458", Offset = "0x916458", VA = "0x916458")]
	private bool CanCombine()
	{
		return default(bool);
	}
}
[Token(Token = "0x200024E")]
public enum AnalyticsEvents
{
	[Token(Token = "0x4000D27")]
	EndingReward
}
[Token(Token = "0x200024F")]
public class Analytics
{
	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x916610", Offset = "0x916610", VA = "0x916610")]
	private static void RecordEvent(string evt, Dictionary<string, object> parameters)
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x916618", Offset = "0x916618", VA = "0x916618")]
	public static void LogEvent(AnalyticsEvents evt, params string[] eventData)
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x9167E8", Offset = "0x9167E8", VA = "0x9167E8")]
	public Analytics()
	{
	}
}
[Token(Token = "0x2000250")]
public struct ArrayRegion
{
	[Token(Token = "0x2000251")]
	public enum PerimeterContext
	{
		[Token(Token = "0x4000D2E")]
		EdgeTop,
		[Token(Token = "0x4000D2F")]
		EdgeLeft,
		[Token(Token = "0x4000D30")]
		EdgeRight,
		[Token(Token = "0x4000D31")]
		EdgeBottom,
		[Token(Token = "0x4000D32")]
		CornerTopLeft,
		[Token(Token = "0x4000D33")]
		CornerTopRight,
		[Token(Token = "0x4000D34")]
		CornerBottomLeft,
		[Token(Token = "0x4000D35")]
		CornerBottomRight,
		[Token(Token = "0x4000D36")]
		Single
	}

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly ArrayRegion Empty;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int PerimeterContextCount;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public readonly IntVector2 min;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public readonly IntVector2 max;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly IntVector2 size;

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x9167F0", Offset = "0x9167F0", VA = "0x9167F0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x9168B4", Offset = "0x9168B4", VA = "0x9168B4")]
	public static int CalcIndex(int x, int y, int width)
	{
		return default(int);
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x9168BC", Offset = "0x9168BC", VA = "0x9168BC")]
	public static int CalcIndex(IntVector2 v, int width)
	{
		return default(int);
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x9168C8", Offset = "0x9168C8", VA = "0x9168C8")]
	public static bool IsCorner(PerimeterContext c)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x9168EC", Offset = "0x9168EC", VA = "0x9168EC")]
	public static void MuxIterateAll(ArrayRegion src, IntVector2 srcParentSize, ArrayRegion dst, IntVector2 dstParentSize, Action<int, IntVector2, int, IntVector2> fn)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x916B04", Offset = "0x916B04", VA = "0x916B04")]
	[Conditional("DEBUG")]
	public static void Test()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x917114", Offset = "0x917114", VA = "0x917114")]
	public static ArrayRegion WithCenterAndSize(IntVector2 p, IntVector2 s)
	{
		return default(ArrayRegion);
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x916FCC", Offset = "0x916FCC", VA = "0x916FCC")]
	public static ArrayRegion WithPosAndSize(IntVector2 pos, IntVector2 size)
	{
		return default(ArrayRegion);
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x917230", Offset = "0x917230", VA = "0x917230")]
	public static ArrayRegion WithPosAndSize(IntVector2 pos, int size)
	{
		return default(ArrayRegion);
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x9172D0", Offset = "0x9172D0", VA = "0x9172D0")]
	public static ArrayRegion WithSize(IntVector2 size)
	{
		return default(ArrayRegion);
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x917074", Offset = "0x917074", VA = "0x917074")]
	public static ArrayRegion WithSize(int size)
	{
		return default(ArrayRegion);
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x9171E8", Offset = "0x9171E8", VA = "0x9171E8")]
	public ArrayRegion(IntVector2 min, IntVector2 max)
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x917368", Offset = "0x917368", VA = "0x917368")]
	public ArrayRegion(int r)
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x917420", Offset = "0x917420", VA = "0x917420")]
	public ArrayRegion(IntVector2 size)
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x9174B8", Offset = "0x9174B8", VA = "0x9174B8")]
	public bool Any(IntVector2 parentSize, Func<int, int, int, bool> fn)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x917108", Offset = "0x917108", VA = "0x917108")]
	[Pure]
	public int CalcArea()
	{
		return default(int);
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x9175C8", Offset = "0x9175C8", VA = "0x9175C8")]
	public IntVector2 CalcCenter()
	{
		return default(IntVector2);
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x91763C", Offset = "0x91763C", VA = "0x91763C")]
	[Pure]
	public int CalcIndex(IntVector2 v)
	{
		return default(int);
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x91764C", Offset = "0x91764C", VA = "0x91764C")]
	public ArrayRegion ClippedBy(ArrayRegion clipper)
	{
		return default(ArrayRegion);
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x9176F4", Offset = "0x9176F4", VA = "0x9176F4")]
	[Pure]
	public bool Contains(IntVector2 p)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x917734", Offset = "0x917734", VA = "0x917734")]
	public bool Contains(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x917770", Offset = "0x917770", VA = "0x917770")]
	public bool Contains(ArrayRegion other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x9177BC", Offset = "0x9177BC", VA = "0x9177BC")]
	public ArrayRegion ExpandedBy(int i)
	{
		return default(ArrayRegion);
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x91789C", Offset = "0x91789C", VA = "0x91789C")]
	public ArrayRegion ExpandedTo(IntVector2 p)
	{
		return default(ArrayRegion);
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x9179C0", Offset = "0x9179C0", VA = "0x9179C0")]
	public ArrayRegion ExpandedTo(ArrayRegion other)
	{
		return default(ArrayRegion);
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x917AE4", Offset = "0x917AE4", VA = "0x917AE4")]
	public bool IsOnPerimeter(IntVector2 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x917B2C", Offset = "0x917B2C", VA = "0x917B2C")]
	public void IterateAll(IntVector2 parentSize, Action<int, int, int> fn)
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x917C20", Offset = "0x917C20", VA = "0x917C20")]
	public void IterateAxisRay(IntVector2 pos, IntVector2 dir, int count, Action<int, int, int> fn)
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x917DC8", Offset = "0x917DC8", VA = "0x917DC8")]
	public void IterateBorder(IntVector2 arraySize, Action<int, int, int, PerimeterContext> fn)
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x91818C", Offset = "0x91818C", VA = "0x91818C")]
	public void IterateBorderCorners(IntVector2 arraySize, Action<int, int, int, PerimeterContext> fn)
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x917E1C", Offset = "0x917E1C", VA = "0x917E1C")]
	public void IteratePerimeter(IntVector2 parentSize, Action<int, int, int, PerimeterContext> fn)
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x9182DC", Offset = "0x9182DC", VA = "0x9182DC")]
	public ArrayRegion OffsetBy(IntVector2 p)
	{
		return default(ArrayRegion);
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x918374", Offset = "0x918374", VA = "0x918374")]
	public IntVector2 RandomPerimeterPos()
	{
		return default(IntVector2);
	}
}
[Token(Token = "0x2000257")]
public struct ColorHsv
{
	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float h;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float s;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float v;

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x918AE8", Offset = "0x918AE8", VA = "0x918AE8")]
	public static ColorHsv Lerp(ColorHsv a, ColorHsv b, float t)
	{
		return default(ColorHsv);
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x918B10", Offset = "0x918B10", VA = "0x918B10")]
	public ColorHsv(float h, float s, float v)
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x918B1C", Offset = "0x918B1C", VA = "0x918B1C")]
	public ColorHsv(Color color)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x918CDC", Offset = "0x918CDC", VA = "0x918CDC")]
	public Color ToColor(float alpha = 1f)
	{
		return default(Color);
	}
}
[Token(Token = "0x2000258")]
public class CountdownTimer
{
	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float mark;

	[Token(Token = "0x17000197")]
	public bool IsExpired
	{
		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x9190C8", Offset = "0x9190C8", VA = "0x9190C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x91909C", Offset = "0x91909C", VA = "0x91909C")]
	public void Begin(float seconds)
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x9190EC", Offset = "0x9190EC", VA = "0x9190EC")]
	public CountdownTimer()
	{
	}
}
[Token(Token = "0x2000259")]
public static class Easing
{
	[Token(Token = "0x200025A")]
	private static class Sine
	{
		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x919330", Offset = "0x919330", VA = "0x919330")]
		public static float EaseIn(float s)
		{
			return default(float);
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x919368", Offset = "0x919368", VA = "0x919368")]
		public static float EaseOut(float s)
		{
			return default(float);
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x919534", Offset = "0x919534", VA = "0x919534")]
		public static float EaseInOut(float s)
		{
			return default(float);
		}
	}

	[Token(Token = "0x200025B")]
	private static class Power
	{
		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x919360", Offset = "0x919360", VA = "0x919360")]
		public static float EaseIn(float s, int power)
		{
			return default(float);
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x919378", Offset = "0x919378", VA = "0x919378")]
		public static float EaseOut(float s, int power)
		{
			return default(float);
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x91956C", Offset = "0x91956C", VA = "0x91956C")]
		public static float EaseInOut(float s, int power)
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x9190FC", Offset = "0x9190FC", VA = "0x9190FC")]
	public static float Ease(float linearStep, float acceleration, EasingType type)
	{
		return default(float);
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x919250", Offset = "0x919250", VA = "0x919250")]
	public static float EaseIn(float linearStep, EasingType type)
	{
		return default(float);
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x919154", Offset = "0x919154", VA = "0x919154")]
	public static float EaseOut(float linearStep, EasingType type)
	{
		return default(float);
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x9193B0", Offset = "0x9193B0", VA = "0x9193B0")]
	public static float EaseInOut(float linearStep, EasingType easeInType, EasingType easeOutType)
	{
		return default(float);
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x9193C0", Offset = "0x9193C0", VA = "0x9193C0")]
	public static float EaseInOut(float linearStep, EasingType type)
	{
		return default(float);
	}
}
[Token(Token = "0x200025C")]
public enum EasingType
{
	[Token(Token = "0x4000D47")]
	Step,
	[Token(Token = "0x4000D48")]
	Linear,
	[Token(Token = "0x4000D49")]
	Sine,
	[Token(Token = "0x4000D4A")]
	Quadratic,
	[Token(Token = "0x4000D4B")]
	Cubic,
	[Token(Token = "0x4000D4C")]
	Quartic,
	[Token(Token = "0x4000D4D")]
	Quintic
}
[Token(Token = "0x200025D")]
public static class MathHelper
{
	[Token(Token = "0x4000D4E")]
	public const float Pi = (float)Math.PI;

	[Token(Token = "0x4000D4F")]
	public const float HalfPi = (float)Math.PI / 2f;

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x91931C", Offset = "0x91931C", VA = "0x91931C")]
	public static float Lerp(double from, double to, double step)
	{
		return default(float);
	}
}
[Serializable]
[Token(Token = "0x200025E")]
public struct IntVector2
{
	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int x;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int y;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly IntVector2 PosY;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly IntVector2 NegY;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly IntVector2 PosX;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly IntVector2 NegX;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly IntVector2 One;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly IntVector2 Zero;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly IntVector2 Two;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly IntVector2 Invalid;

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x9195DC", Offset = "0x9195DC", VA = "0x9195DC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x919664", Offset = "0x919664", VA = "0x919664", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x919670", Offset = "0x919670", VA = "0x919670", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x919710", Offset = "0x919710", VA = "0x919710")]
	public static IntVector2 operator +(IntVector2 a, IntVector2 b)
	{
		return default(IntVector2);
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x919730", Offset = "0x919730", VA = "0x919730")]
	public static IntVector2 operator /(IntVector2 a, int b)
	{
		return default(IntVector2);
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x919744", Offset = "0x919744", VA = "0x919744")]
	public static bool operator ==(IntVector2 left, IntVector2 right)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x919764", Offset = "0x919764", VA = "0x919764")]
	public static bool operator !=(IntVector2 left, IntVector2 right)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x919784", Offset = "0x919784", VA = "0x919784")]
	public static IntVector2 operator *(IntVector2 a, float b)
	{
		return default(IntVector2);
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x9197CC", Offset = "0x9197CC", VA = "0x9197CC")]
	public static IntVector2 operator *(IntVector2 a, int b)
	{
		return default(IntVector2);
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x9197E0", Offset = "0x9197E0", VA = "0x9197E0")]
	public static IntVector2 operator -(IntVector2 a, IntVector2 b)
	{
		return default(IntVector2);
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x9197F8", Offset = "0x9197F8", VA = "0x9197F8")]
	public static IntVector2 operator -(IntVector2 p)
	{
		return default(IntVector2);
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x919728", Offset = "0x919728", VA = "0x919728")]
	public IntVector2(int x, int y)
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x919808", Offset = "0x919808", VA = "0x919808")]
	public IntVector2(IntVector2 o)
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x919814", Offset = "0x919814", VA = "0x919814")]
	public IntVector2 Abs()
	{
		return default(IntVector2);
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x919880", Offset = "0x919880", VA = "0x919880")]
	public int GetDistanceSquared(IntVector2 a)
	{
		return default(int);
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x9198F8", Offset = "0x9198F8", VA = "0x9198F8")]
	public IntVector2 Normalized()
	{
		return default(IntVector2);
	}
}
[Token(Token = "0x200025F")]
public static class MathEsc
{
	[Token(Token = "0x2000260")]
	public class BadRangeException : Exception
	{
		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x91A360", Offset = "0x91A360", VA = "0x91A360")]
		public BadRangeException()
		{
		}
	}

	[Token(Token = "0x4000D5A")]
	public const double FloatPiLimit = 2000000000.0;

	[Token(Token = "0x4000D5B")]
	public const double FloatIntLimit = 9000000000000000.0;

	[Token(Token = "0x4000D5C")]
	public const float RoundingPower = 1000000f;

	[Token(Token = "0x4000D5D")]
	public const float Epsilon = 1E-06f;

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x9199C4", Offset = "0x9199C4", VA = "0x9199C4")]
	public static double Clamp(double value, double min, double max)
	{
		return default(double);
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x9199E0", Offset = "0x9199E0", VA = "0x9199E0")]
	public static long Clamp(long value, long min, long max)
	{
		return default(long);
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x9199FC", Offset = "0x9199FC", VA = "0x9199FC")]
	public static float RemapLerp(float value, float a, float b, float newA, float newB)
	{
		return default(float);
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x919C78", Offset = "0x919C78", VA = "0x919C78")]
	public static float Repeat(float value, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x919D9C", Offset = "0x919D9C", VA = "0x919D9C")]
	public static float Round(float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x919E84", Offset = "0x919E84", VA = "0x919E84")]
	public static int RoundToInt(float value)
	{
		return default(int);
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x919B60", Offset = "0x919B60", VA = "0x919B60")]
	public static float Wrap(float value, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x919F78", Offset = "0x919F78", VA = "0x919F78")]
	public static int Wrap(int value, int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x919FB8", Offset = "0x919FB8", VA = "0x919FB8")]
	public static float WrapAngle180(float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x91A0CC", Offset = "0x91A0CC", VA = "0x91A0CC")]
	public static float WrapAngle360(float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x91A1D4", Offset = "0x91A1D4", VA = "0x91A1D4")]
	public static Vector3 WrapAngles180(Vector3 eulerAngles)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x91A220", Offset = "0x91A220", VA = "0x91A220")]
	public static bool Approximately(float a, float b, float epsilon = 1E-06f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x91A230", Offset = "0x91A230", VA = "0x91A230")]
	public static float Normalize(ref Vector3 movedir)
	{
		return default(float);
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x91A334", Offset = "0x91A334", VA = "0x91A334")]
	public static float ProjectPointOnRay(Vector3 point, Vector3 origin, Vector3 dir)
	{
		return default(float);
	}
}
[Token(Token = "0x2000261")]
public class PlayerMissingUI : MonoBehaviour
{
	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x91A3B8", Offset = "0x91A3B8", VA = "0x91A3B8")]
	public PlayerMissingUI()
	{
	}
}
[Token(Token = "0x2000262")]
public class SimpleFsm
{
	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly Func<int>[] updatefn;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Action[] enterfn;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Action[] exitfn;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int curState;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private readonly int numStates;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isInTransition;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int onPausedState;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int onUnpausedState;

	[Token(Token = "0x17000198")]
	public bool IsValid
	{
		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x91A3C0", Offset = "0x91A3C0", VA = "0x91A3C0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x91A3C8", Offset = "0x91A3C8", VA = "0x91A3C8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x91A3D4", Offset = "0x91A3D4", VA = "0x91A3D4")]
	public SimpleFsm(int numStates)
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x91A4A4", Offset = "0x91A4A4", VA = "0x91A4A4")]
	public SimpleFsm(Type type)
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x91A524", Offset = "0x91A524", VA = "0x91A524")]
	public void ConfigureState(int state, Func<int> update, Action enter, Action exit)
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x91A69C", Offset = "0x91A69C", VA = "0x91A69C")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x91A744", Offset = "0x91A744", VA = "0x91A744")]
	public void Unpause()
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x91A74C", Offset = "0x91A74C", VA = "0x91A74C")]
	private static void InvokeAction(Action fn)
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x91A768", Offset = "0x91A768", VA = "0x91A768")]
	public void Begin(int state)
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x91A7EC", Offset = "0x91A7EC", VA = "0x91A7EC")]
	private bool IsValidState(int state)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x91A808", Offset = "0x91A808", VA = "0x91A808")]
	public void Update()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x91A6A4", Offset = "0x91A6A4", VA = "0x91A6A4")]
	private void TransitionTo(int next)
	{
	}
}
[Token(Token = "0x2000263")]
public static class Util
{
	[Token(Token = "0x2000265")]
	[CompilerGenerated]
	private sealed class <SetAnimatorTriggerWithCallbacks_Coro>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string stateName;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action onEnterState;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float exitDelay;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action onExitState;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string triggerName;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <stateHash>5__2;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <watchdogTimer>5__3;

		[Token(Token = "0x17000199")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x91BE94", Offset = "0x91BE94", VA = "0x91BE94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x91BEDC", Offset = "0x91BEDC", VA = "0x91BEDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x91B22C", Offset = "0x91B22C", VA = "0x91B22C")]
		[DebuggerHidden]
		public <SetAnimatorTriggerWithCallbacks_Coro>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x91B750", Offset = "0x91B750", VA = "0x91B750", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x91B754", Offset = "0x91B754", VA = "0x91B754", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x91BE9C", Offset = "0x91BE9C", VA = "0x91BE9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly WaitForEndOfFrame WaitForEndOfFrame;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly WaitForFixedUpdate WaitForFixedUpdate;

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x91A874", Offset = "0x91A874", VA = "0x91A874")]
	public static Vector3 AngleDir(float pitch, float yaw)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EC6")]
	public static bool AreArraysEqual<T>(T[] a, T[] b) where T : IComparable
	{
		return default(bool);
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x91A908", Offset = "0x91A908", VA = "0x91A908")]
	[Conditional("UNITY_ASSERTIONS")]
	public static void AssertAnimatorHasStates(Animator animator, params string[] states)
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x91AB04", Offset = "0x91AB04", VA = "0x91AB04")]
	[Conditional("UNITY_ASSERTIONS")]
	public static void AssertAnimatorHasTriggers(Animator animator, params string[] triggers)
	{
	}

	[Token(Token = "0x6000EC9")]
	public static bool AwakePersistentSingleton<T>(ref T singletonVar, T wakingObject) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000ECA")]
	public static bool AwakeSingleton<T>(ref T singletonVar, T wakingObject) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x91ADBC", Offset = "0x91ADBC", VA = "0x91ADBC")]
	public static string ColorToHex(Color32 color)
	{
		return null;
	}

	[Token(Token = "0x6000ECC")]
	public static T[] DuplicateArray<T>(T[] a)
	{
		return null;
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x91AE54", Offset = "0x91AE54", VA = "0x91AE54")]
	[Conditional("UNITY_ASSERTIONS")]
	public static void EditorThrow(Exception e)
	{
	}

	[Token(Token = "0x6000ECE")]
	[Conditional("UNITY_ASSERTIONS")]
	public static void EditorThrowIf<T>(Func<bool> a) where T : Exception, new()
	{
	}

	[Token(Token = "0x6000ECF")]
	public static T GetEnabledComponentInParent<T>(Transform t) where T : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x91AE80", Offset = "0x91AE80", VA = "0x91AE80")]
	[Conditional("UNITY_EDITOR")]
	public static void EditorLog(object message)
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x91AF88", Offset = "0x91AF88", VA = "0x91AF88")]
	public static Color HexToColor(string hex)
	{
		return default(Color);
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x91B034", Offset = "0x91B034", VA = "0x91B034")]
	public static Color HsvaToRgba(float h, float s, float v, float a)
	{
		return default(Color);
	}

	[Token(Token = "0x6000ED3")]
	public static T RandomElement<T>(T[] a)
	{
		return (T)null;
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x91B090", Offset = "0x91B090", VA = "0x91B090")]
	public static Coroutine SetAnimatorTriggerWithCallbacks(MonoBehaviour host, Animator animator, string triggerName, string stateName, Action onEnterState, Action onExitState, float exitDelay = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x91B148", Offset = "0x91B148", VA = "0x91B148")]
	[IteratorStateMachine(typeof(<SetAnimatorTriggerWithCallbacks_Coro>d__18))]
	public static IEnumerator SetAnimatorTriggerWithCallbacks_Coro(Animator animator, string triggerName, string stateName, Action onEnterState, Action onExitState, float exitDelay = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x91B254", Offset = "0x91B254", VA = "0x91B254")]
	public static void SetLayerRecursive(GameObject o, int layer)
	{
	}

	[Token(Token = "0x6000ED7")]
	public static void Shuffle<T>(this T[] array)
	{
	}

	[Token(Token = "0x6000ED8")]
	public static void Shuffle<T>(this List<T> list)
	{
	}

	[Token(Token = "0x6000ED9")]
	public static void Swap<T>(ref T a, ref T b)
	{
	}

	[Token(Token = "0x6000EDA")]
	public static void Truncate<T>(this List<T> list, int maxCount)
	{
	}

	[Token(Token = "0x6000EDB")]
	public static bool IsValidIndex<T>(this IList<T> source, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDC")]
	public static bool IsValidIndex<T>(this T[] source, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x91B580", Offset = "0x91B580", VA = "0x91B580")]
	public static float MaxAbsoluteValue(float num1, float num2)
	{
		return default(float);
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x91B594", Offset = "0x91B594", VA = "0x91B594")]
	public static float RemapNumber(float num, float low1, float high1, float low2, float high2)
	{
		return default(float);
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x91B5B0", Offset = "0x91B5B0", VA = "0x91B5B0")]
	public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2)
	{
		return default(float);
	}

	[Token(Token = "0x6000EE0")]
	public static T GetOrAddComponent<T>(GameObject o) where T : Component
	{
		return null;
	}
}
[Token(Token = "0x2000266")]
public class Voober : MonoBehaviour
{
	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer[] targetRenderers;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color baseColor;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color lerpToColor;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float time;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Tween tween;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float step;

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x91BEE4", Offset = "0x91BEE4", VA = "0x91BEE4")]
	private float GetStep()
	{
		return default(float);
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x91BEEC", Offset = "0x91BEEC", VA = "0x91BEEC")]
	private void SetStep(float newVal)
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x91BEF4", Offset = "0x91BEF4", VA = "0x91BEF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x91C0D0", Offset = "0x91C0D0", VA = "0x91C0D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x91C0E8", Offset = "0x91C0E8", VA = "0x91C0E8")]
	public Voober()
	{
	}
}
[Token(Token = "0x2000267")]
public class WargamesCell : MonoBehaviour
{
	[Token(Token = "0x2000268")]
	public enum CellStates
	{
		[Token(Token = "0x4000D7E")]
		None = 0,
		[Token(Token = "0x4000D7F")]
		X = 1,
		[Token(Token = "0x4000D80")]
		O = -1
	}

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image oImage;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image xImage;

	[Token(Token = "0x1700019B")]
	public CellStates CurrentState
	{
		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x91C1F4", Offset = "0x91C1F4", VA = "0x91C1F4")]
		[CompilerGenerated]
		get
		{
			return default(CellStates);
		}
		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x91C1FC", Offset = "0x91C1FC", VA = "0x91C1FC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x91C204", Offset = "0x91C204", VA = "0x91C204")]
	public void OnHoverEnter()
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x91C27C", Offset = "0x91C27C", VA = "0x91C27C")]
	public void OnHoverExit()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x91C2AC", Offset = "0x91C2AC", VA = "0x91C2AC")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x91C2EC", Offset = "0x91C2EC", VA = "0x91C2EC")]
	public void PlayX()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x91C338", Offset = "0x91C338", VA = "0x91C338")]
	public void PlayO()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x91C37C", Offset = "0x91C37C", VA = "0x91C37C")]
	public WargamesCell()
	{
	}
}
[Token(Token = "0x2000269")]
public class Whiteboard : MonoBehaviour
{
	[Token(Token = "0x200026A")]
	public class WhiteboardInteractableData
	{
		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 prevHapticTipPosition;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 prevStampPosition;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int prevStampFrame;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float prevHapticTime;

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x91D9F4", Offset = "0x91D9F4", VA = "0x91D9F4")]
		public WhiteboardInteractableData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200026B")]
	public class WhiteboardMarkerData : WhiteboardInteractableData
	{
		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public WhiteboardMarker marker;

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x91D714", Offset = "0x91D714", VA = "0x91D714")]
		public WhiteboardMarkerData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200026C")]
	public class WhiteboardEraserData : WhiteboardInteractableData
	{
		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public WhiteboardEraser eraser;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public float prevStampAngle;

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x91D8E0", Offset = "0x91D8E0", VA = "0x91D8E0")]
		public WhiteboardEraserData()
		{
		}
	}

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform surfaceTransform;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform surfaceImageTransform;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform topLeft;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minDistanceFromBoard;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WhiteboardCamera whiteboardCamera;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int numFillStamps;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Plane whiteboardPlane;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public List<WhiteboardMarkerData> activeMarkers;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public List<WhiteboardEraserData> activeErasers;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float whiteboardWidth;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float whiteboardHeight;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 currentStampWorldPos;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float fillStep;

	[Token(Token = "0x1700019C")]
	public Vector3 whiteboardNormal
	{
		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x91C384", Offset = "0x91C384", VA = "0x91C384")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x91C390", Offset = "0x91C390", VA = "0x91C390")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x91C4A0", Offset = "0x91C4A0", VA = "0x91C4A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x91CADC", Offset = "0x91CADC", VA = "0x91CADC")]
	private bool ShouldStamp(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x91CB04", Offset = "0x91CB04", VA = "0x91CB04")]
	private Vector3 NormalizedSurfacePosition(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x91D1A4", Offset = "0x91D1A4", VA = "0x91D1A4")]
	private void DoHapticPulse(WhiteboardInteractableData data)
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x91CCCC", Offset = "0x91CCCC", VA = "0x91CCCC")]
	private void FillInStamps(WhiteboardMarkerData data, Vector2 normalizedStampPos)
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x91CFB0", Offset = "0x91CFB0", VA = "0x91CFB0")]
	private void FillInStamps(WhiteboardEraserData data, Vector2 normalizedStampPos, float eraserAngle)
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x91D240", Offset = "0x91D240", VA = "0x91D240")]
	private WhiteboardMarker GetMarkerFromCollider(Collider other)
	{
		return null;
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x91D318", Offset = "0x91D318", VA = "0x91D318")]
	private WhiteboardEraser GetEraserFromCollider(Collider other)
	{
		return null;
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x91D3F0", Offset = "0x91D3F0", VA = "0x91D3F0")]
	private int GetActiveMarkerIndex(WhiteboardMarker marker)
	{
		return default(int);
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x91D4E0", Offset = "0x91D4E0", VA = "0x91D4E0")]
	private int GetActiveEraserIndex(WhiteboardEraser eraser)
	{
		return default(int);
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x91D5D0", Offset = "0x91D5D0", VA = "0x91D5D0")]
	private void AddActiveMarker(WhiteboardMarker marker)
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x91D71C", Offset = "0x91D71C", VA = "0x91D71C")]
	private void RemoveActiveMarker(WhiteboardMarker marker)
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x91D79C", Offset = "0x91D79C", VA = "0x91D79C")]
	private void AddActiveEraser(WhiteboardEraser eraser)
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x91D8E8", Offset = "0x91D8E8", VA = "0x91D8E8")]
	private void RemoveActiveEraser(WhiteboardEraser eraser)
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x91D0F4", Offset = "0x91D0F4", VA = "0x91D0F4")]
	public Vector3 ProjectPointOnWhiteboardPlane(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x91D968", Offset = "0x91D968", VA = "0x91D968")]
	public float GetDistanceFromWhiteboardPlane(Vector3 point)
	{
		return default(float);
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x91D974", Offset = "0x91D974", VA = "0x91D974")]
	public bool GetSideOfWhiteboardPlane(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x91D980", Offset = "0x91D980", VA = "0x91D980")]
	public Whiteboard()
	{
	}
}
[Token(Token = "0x200026F")]
public class WhiteboardCamera : MonoBehaviour
{
	[Token(Token = "0x2000270")]
	[CompilerGenerated]
	private sealed class <HideStamps>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WhiteboardCamera <>4__this;

		[Token(Token = "0x1700019D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F20")]
			[Address(RVA = "0x91E494", Offset = "0x91E494", VA = "0x91E494", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F22")]
			[Address(RVA = "0x91E4DC", Offset = "0x91E4DC", VA = "0x91E4DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x91E2A8", Offset = "0x91E2A8", VA = "0x91E2A8")]
		[DebuggerHidden]
		public <HideStamps>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x91E344", Offset = "0x91E344", VA = "0x91E344", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x91E348", Offset = "0x91E348", VA = "0x91E348", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x91E49C", Offset = "0x91E49C", VA = "0x91E49C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera cameraComponent;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite markerSprite;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite eraserSprite;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material markerStampMaterial;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material eraserStampMaterial;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas whiteboardCanvas;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 markerSize;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector2 eraserSize;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D whiteboardInitialState;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int activeFrames;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float left;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float right;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float top;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float bottom;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 imagePos;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 eraserAngles;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Image[] markerStamps;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Image[] eraserStamps;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int numMarkerStamps;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int currentMarkerStampIndex;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int numEraserStamps;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int currentEraserStampIndex;

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x91CDB8", Offset = "0x91CDB8", VA = "0x91CDB8")]
	public void Invalidate()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x91DADC", Offset = "0x91DADC", VA = "0x91DADC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x91DBBC", Offset = "0x91DBBC", VA = "0x91DBBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x91DC58", Offset = "0x91DC58", VA = "0x91DC58")]
	private void CreateStamps()
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x91E0D0", Offset = "0x91E0D0", VA = "0x91E0D0")]
	private Image CreateStampImage(string name, Sprite sprite, Color imageColor, Vector2 size, Transform parentTransform, Material stampMaterial)
	{
		return null;
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x91E26C", Offset = "0x91E26C", VA = "0x91E26C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x91E05C", Offset = "0x91E05C", VA = "0x91E05C")]
	[IteratorStateMachine(typeof(<HideStamps>d__28))]
	private IEnumerator HideStamps()
	{
		return null;
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x91CB4C", Offset = "0x91CB4C", VA = "0x91CB4C")]
	public void AddMarkerStamp(Vector2 stampPos, Color color)
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x91CE00", Offset = "0x91CE00", VA = "0x91CE00")]
	public void AddEraserStamp(Vector2 stampPos, float angle)
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x91E2D0", Offset = "0x91E2D0", VA = "0x91E2D0")]
	public WhiteboardCamera()
	{
	}
}
[Token(Token = "0x2000271")]
public class WhiteboardEraser : MonoBehaviour
{
	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform modelTransform;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform padTransform;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform triggerTransform;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Whiteboard whiteboard;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool grabbed;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject hand;

	[Token(Token = "0x1700019F")]
	public bool startedErasing
	{
		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x91E4E4", Offset = "0x91E4E4", VA = "0x91E4E4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x91E4EC", Offset = "0x91E4EC", VA = "0x91E4EC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x91E4F8", Offset = "0x91E4F8", VA = "0x91E4F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x91E4FC", Offset = "0x91E4FC", VA = "0x91E4FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x91E574", Offset = "0x91E574", VA = "0x91E574")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x91E6B8", Offset = "0x91E6B8", VA = "0x91E6B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x91E7FC", Offset = "0x91E7FC", VA = "0x91E7FC")]
	private void HandleGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x91E8D8", Offset = "0x91E8D8", VA = "0x91E8D8")]
	private void HandleUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x91E9B0", Offset = "0x91E9B0", VA = "0x91E9B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x91CDE4", Offset = "0x91CDE4", VA = "0x91CDE4")]
	public Vector3 GetEraserDir()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x91EA38", Offset = "0x91EA38", VA = "0x91EA38")]
	public WhiteboardEraser()
	{
	}
}
[Token(Token = "0x2000272")]
public class WhiteboardMarker : MonoBehaviour
{
	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform modelTransform;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform tipTransform;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform triggerTransform;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color markerColor;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer tipRenderer;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MeshRenderer capRenderer;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isRightHandHolding;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Whiteboard whiteboard;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool grabbed;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Rigidbody rb;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject hand;

	[Token(Token = "0x170001A0")]
	public bool startedWriting
	{
		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x91EA40", Offset = "0x91EA40", VA = "0x91EA40")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x91EA48", Offset = "0x91EA48", VA = "0x91EA48")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x91EA54", Offset = "0x91EA54", VA = "0x91EA54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x91EAE4", Offset = "0x91EAE4", VA = "0x91EAE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x91EB8C", Offset = "0x91EB8C", VA = "0x91EB8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x91ECD0", Offset = "0x91ECD0", VA = "0x91ECD0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x91EE14", Offset = "0x91EE14", VA = "0x91EE14")]
	private void HandleGrab(SelectEnterEventArgs e)
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x91EEF0", Offset = "0x91EEF0", VA = "0x91EEF0")]
	private void HandleUngrab(SelectExitEventArgs e)
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x91EFC8", Offset = "0x91EFC8", VA = "0x91EFC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x91F110", Offset = "0x91F110", VA = "0x91F110")]
	public WhiteboardMarker()
	{
	}
}
[Token(Token = "0x2000273")]
public abstract class Widget : TargetForHoldable
{
	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] activateClips;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip revealClip;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool startsRevealed;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string useAnimTrigger;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string useAnimState;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float AnimTime;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject lastTouchedBy;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public bool handleUseAnimations;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected internal Animator animator;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WidgetMode myMode;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected AudioSource audioSource;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected NukeObjectComponentToggler toggler;

	[Token(Token = "0x170001A1")]
	protected internal WidgetMode mode
	{
		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x91F3B0", Offset = "0x91F3B0", VA = "0x91F3B0")]
		get
		{
			return default(WidgetMode);
		}
		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x91F3B8", Offset = "0x91F3B8", VA = "0x91F3B8")]
		protected set
		{
		}
	}

	[Token(Token = "0x170001A2")]
	public bool IsRevealed
	{
		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x91F508", Offset = "0x91F508", VA = "0x91F508")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000011")]
	public event Action<WidgetMode> ModeChanged
	{
		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x91F118", Offset = "0x91F118", VA = "0x91F118")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x91F1C8", Offset = "0x91F1C8", VA = "0x91F1C8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action WidgetRestart
	{
		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x91F278", Offset = "0x91F278", VA = "0x91F278")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x91F314", Offset = "0x91F314", VA = "0x91F314")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x91F538", Offset = "0x91F538", VA = "0x91F538")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x91F6EC", Offset = "0x91F6EC", VA = "0x91F6EC", Slot = "8")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x91F6F0", Offset = "0x91F6F0", VA = "0x91F6F0", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x91F8AC", Offset = "0x91F8AC", VA = "0x91F8AC", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x91F91C", Offset = "0x91F91C", VA = "0x91F91C")]
	protected void DefaultUseEffects()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x91FA2C", Offset = "0x91FA2C", VA = "0x91FA2C")]
	protected void TriggerAnimation(string animTrigger, string animState, [Optional] Action startCallback, [Optional] Action endCallback)
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x91FCD0", Offset = "0x91FCD0", VA = "0x91FCD0", Slot = "9")]
	protected virtual string GetRestartState()
	{
		return null;
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x91FD10", Offset = "0x91FD10", VA = "0x91FD10", Slot = "10")]
	protected virtual string GetRestartTrigger()
	{
		return null;
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x91FD50", Offset = "0x91FD50", VA = "0x91FD50", Slot = "11")]
	protected virtual string GetRevealState()
	{
		return null;
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x91FD90", Offset = "0x91FD90", VA = "0x91FD90", Slot = "12")]
	protected virtual string GetRevealTrigger()
	{
		return null;
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x91F6E0", Offset = "0x91F6E0", VA = "0x91F6E0")]
	protected WidgetMode GetStartMode()
	{
		return default(WidgetMode);
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x91FDD0", Offset = "0x91FDD0", VA = "0x91FDD0", Slot = "13")]
	protected virtual void OnRestartBegin()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x91FDD4", Offset = "0x91FDD4", VA = "0x91FDD4", Slot = "14")]
	protected virtual void OnRestartEnd()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x91FDD8", Offset = "0x91FDD8", VA = "0x91FDD8", Slot = "15")]
	protected virtual void OnRevealBegin()
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x91FDDC", Offset = "0x91FDDC", VA = "0x91FDDC", Slot = "16")]
	protected virtual void OnRevealEnd()
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x91FB74", Offset = "0x91FB74", VA = "0x91FB74")]
	public void PlayActivateSound()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x91FDE0", Offset = "0x91FDE0", VA = "0x91FDE0", Slot = "17")]
	public virtual void Reveal()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x9200C4", Offset = "0x9200C4", VA = "0x9200C4")]
	private void StandardRevealEnd()
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x91FFE4", Offset = "0x91FFE4", VA = "0x91FFE4")]
	private void StandardRevealBegin()
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x9200EC", Offset = "0x9200EC", VA = "0x9200EC")]
	protected void SimpleRestart()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x9201A8", Offset = "0x9201A8", VA = "0x9201A8")]
	protected void SimpleReveal()
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x920278", Offset = "0x920278", VA = "0x920278")]
	public void OnManipulateBegin()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x92036C", Offset = "0x92036C", VA = "0x92036C")]
	public void OnManipulateEnd()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x920460", Offset = "0x920460", VA = "0x920460")]
	protected Widget()
	{
	}
}
[Token(Token = "0x2000274")]
public enum WidgetMode
{
	[Token(Token = "0x4000DD3")]
	Unrevealed,
	[Token(Token = "0x4000DD4")]
	Revealing,
	[Token(Token = "0x4000DD5")]
	Revealed,
	[Token(Token = "0x4000DD6")]
	Locked,
	[Token(Token = "0x4000DD7")]
	HeldIdle,
	[Token(Token = "0x4000DD8")]
	HeldUseOnPoint,
	[Token(Token = "0x4000DD9")]
	HeldCombining
}
[Token(Token = "0x2000275")]
public class WidgetProxy : MonoBehaviour
{
	[Token(Token = "0x2000276")]
	public enum MovementAxis
	{
		[Token(Token = "0x4000DF1")]
		XAxis,
		[Token(Token = "0x4000DF2")]
		YAxis,
		[Token(Token = "0x4000DF3")]
		ZAxis
	}

	[Token(Token = "0x2000277")]
	[CompilerGenerated]
	private sealed class <UpdateAnimationWithCollision>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WidgetProxy <>4__this;

		[Token(Token = "0x170001A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0x921948", Offset = "0x921948", VA = "0x921948", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F70")]
			[Address(RVA = "0x921990", Offset = "0x921990", VA = "0x921990", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x9213C8", Offset = "0x9213C8", VA = "0x9213C8")]
		[DebuggerHidden]
		public <UpdateAnimationWithCollision>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x921618", Offset = "0x921618", VA = "0x921618", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x92161C", Offset = "0x92161C", VA = "0x92161C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x921950", Offset = "0x921950", VA = "0x921950", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Widget targetWidget;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider targetCollider;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float maxDistance;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool useDefaultAnimation;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string activateAnimation;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Vector2 animationClamp;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private MovementAxis axis;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private bool inverse;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	[SerializeField]
	private bool lockOnTrigger;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	[SerializeField]
	private bool manuallyPrepare;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 startPosition;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Quaternion startRotation;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Rigidbody rb;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Collider cachedCollider;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ConfigurableJoint configurableJoint;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool inCollision;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool triggered;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool canBeTriggered;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int revealedAnimationState;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool debugging;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float movement;

	[Token(Token = "0x170001A3")]
	public bool IsTriggered
	{
		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x9206F4", Offset = "0x9206F4", VA = "0x9206F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000013")]
	public event Action OnCollisionTriggered
	{
		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x9205BC", Offset = "0x9205BC", VA = "0x9205BC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x920658", Offset = "0x920658", VA = "0x920658")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x9206FC", Offset = "0x9206FC", VA = "0x9206FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x9208D4", Offset = "0x9208D4", VA = "0x9208D4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x920A20", Offset = "0x920A20", VA = "0x920A20")]
	private void OnCollisionEnter(Collision collisionInfo)
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x920DF4", Offset = "0x920DF4", VA = "0x920DF4")]
	private void OnCollisionExit(Collision collisionInfo)
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x920F9C", Offset = "0x920F9C", VA = "0x920F9C")]
	private void OnWidgetModeChanged(WidgetMode newMode)
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x921194", Offset = "0x921194", VA = "0x921194")]
	public void PrepareProxy()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x920D80", Offset = "0x920D80", VA = "0x920D80")]
	[IteratorStateMachine(typeof(<UpdateAnimationWithCollision>d__32))]
	private IEnumerator UpdateAnimationWithCollision()
	{
		return null;
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x9213F0", Offset = "0x9213F0", VA = "0x9213F0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x9214A0", Offset = "0x9214A0", VA = "0x9214A0")]
	private float CalculateAnimationTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x921508", Offset = "0x921508", VA = "0x921508")]
	private float CalculateAxisDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x921598", Offset = "0x921598", VA = "0x921598")]
	public Widget GetTargetWidget()
	{
		return null;
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x9215A0", Offset = "0x9215A0", VA = "0x9215A0")]
	public void SetTargetWidget(Widget newWidget)
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x9215A8", Offset = "0x9215A8", VA = "0x9215A8")]
	public void SetActivateAnimation(string animation)
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x920C7C", Offset = "0x920C7C", VA = "0x920C7C")]
	public TouchPointer CreateTouchPointer()
	{
		return null;
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x920EE8", Offset = "0x920EE8", VA = "0x920EE8")]
	private void AddRelativeForceOnAxis()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x9215B0", Offset = "0x9215B0", VA = "0x9215B0")]
	public WidgetProxy()
	{
	}
}
[Token(Token = "0x2000278")]
public class WidgetScrewdriverTarget : TargetForHoldable
{
	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Widget targetWidget;

	[Token(Token = "0x170001A6")]
	public Widget TargetWidget
	{
		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x921998", Offset = "0x921998", VA = "0x921998")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x9219A0", Offset = "0x9219A0", VA = "0x9219A0", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x9219A8", Offset = "0x9219A8", VA = "0x9219A8", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x921A88", Offset = "0x921A88", VA = "0x921A88", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x921A90", Offset = "0x921A90", VA = "0x921A90", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x921A94", Offset = "0x921A94", VA = "0x921A94")]
	public WidgetScrewdriverTarget()
	{
	}
}
[Token(Token = "0x2000279")]
public class WidgetScrewdriverTurnTarget : MonoBehaviour
{
	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x921A9C", Offset = "0x921A9C", VA = "0x921A9C")]
	public WidgetScrewdriverTurnTarget()
	{
	}
}
[Token(Token = "0x200027A")]
public class WingsPanel : Widget
{
	[Token(Token = "0x200027B")]
	private enum States
	{
		[Token(Token = "0x4000DFE")]
		NotRevealed,
		[Token(Token = "0x4000DFF")]
		Wings,
		[Token(Token = "0x4000E00")]
		FullRevealed,
		[Token(Token = "0x4000E01")]
		DiamondLocked
	}

	[Token(Token = "0x200027C")]
	public enum WingsPanelActionSources
	{
		[Token(Token = "0x4000E03")]
		Color,
		[Token(Token = "0x4000E04")]
		Keypad
	}

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioClip activateClip2;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Collider buttonCollider;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private WidgetProxy buttonProxy;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool[] sourcesUsed;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private States currState;

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x921AA4", Offset = "0x921AA4", VA = "0x921AA4", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x921B3C", Offset = "0x921B3C", VA = "0x921B3C", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x921B50", Offset = "0x921B50", VA = "0x921B50", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x921B58", Offset = "0x921B58", VA = "0x921B58", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x921DB0", Offset = "0x921DB0", VA = "0x921DB0", Slot = "13")]
	protected override void OnRestartBegin()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x921E90", Offset = "0x921E90", VA = "0x921E90", Slot = "9")]
	protected override string GetRestartState()
	{
		return null;
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x921F18", Offset = "0x921F18", VA = "0x921F18")]
	public void DoNextActivate(WingsPanelActionSources source)
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x9220BC", Offset = "0x9220BC", VA = "0x9220BC")]
	public void InsertDiamond()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x922198", Offset = "0x922198", VA = "0x922198")]
	public void UnInsertDiamond()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x9221C8", Offset = "0x9221C8", VA = "0x9221C8")]
	public void DetermineWhatDiamondStateShouldBe()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x922314", Offset = "0x922314", VA = "0x922314")]
	public WingsPanel()
	{
	}
}
[Token(Token = "0x200027E")]
public class WordWheelProxy : MonoBehaviour
{
	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform targetTransform;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private WordWheelWidget targetWheel;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider col;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 controlAxis;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float controlFactor;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 prevInteractorPosition;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject interactor;

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x922538", Offset = "0x922538", VA = "0x922538")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x9226F8", Offset = "0x9226F8", VA = "0x9226F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x92349C", Offset = "0x92349C", VA = "0x92349C")]
	private void OnWidgetModeChange(WidgetMode newMode)
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x923538", Offset = "0x923538", VA = "0x923538")]
	private void OnCollisionEnter(Collision otherCollision)
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x9236D4", Offset = "0x9236D4", VA = "0x9236D4")]
	private void OnCollisionExit(Collision otherCollision)
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x923830", Offset = "0x923830", VA = "0x923830")]
	public WordWheelProxy()
	{
	}
}
[Token(Token = "0x200027F")]
public class WordWheelWidget : Widget
{
	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public int index;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public bool canSpin;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool isKeyRevealed;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	[SerializeField]
	private bool isKeyHolder;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Key key;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private MeshRenderer wheelLabels;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioClip revealKeyClip;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Rigidbody proxyRigidbody;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject lWheelAnim;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject mWheelAnim;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject rWheelAnim;

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x923838", Offset = "0x923838", VA = "0x923838", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x9238B4", Offset = "0x9238B4", VA = "0x9238B4", Slot = "6")]
	public override bool CanUse(UseContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x9238BC", Offset = "0x9238BC", VA = "0x9238BC", Slot = "7")]
	public override bool CanBeUsedByHeld(UseContext useContext)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x92394C", Offset = "0x92394C", VA = "0x92394C", Slot = "5")]
	public override void Use(UseContext context)
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x923B54", Offset = "0x923B54", VA = "0x923B54", Slot = "11")]
	protected override string GetRevealState()
	{
		return null;
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x923B94", Offset = "0x923B94", VA = "0x923B94", Slot = "13")]
	protected override void OnRestartBegin()
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x923C28", Offset = "0x923C28", VA = "0x923C28", Slot = "14")]
	protected override void OnRestartEnd()
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x923CB4", Offset = "0x923CB4", VA = "0x923CB4", Slot = "15")]
	protected override void OnRevealBegin()
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x923D48", Offset = "0x923D48", VA = "0x923D48", Slot = "16")]
	protected override void OnRevealEnd()
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x923DD0", Offset = "0x923DD0", VA = "0x923DD0", Slot = "9")]
	protected override string GetRestartState()
	{
		return null;
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x923E3C", Offset = "0x923E3C", VA = "0x923E3C")]
	public void RevealKey()
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x9240EC", Offset = "0x9240EC", VA = "0x9240EC", Slot = "4")]
	public override bool OnRestartScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x9240FC", Offset = "0x9240FC", VA = "0x9240FC")]
	public void OnKeypadClosed()
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x92418C", Offset = "0x92418C", VA = "0x92418C")]
	public WordWheelWidget()
	{
	}
}
[Token(Token = "0x2000281")]
[RequireComponent(typeof(Camera))]
public class EnableCameraDepthInForward : MonoBehaviour
{
	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x924268", Offset = "0x924268", VA = "0x924268")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x92426C", Offset = "0x92426C", VA = "0x92426C")]
	private void Set()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x9242F0", Offset = "0x9242F0", VA = "0x9242F0")]
	public EnableCameraDepthInForward()
	{
	}
}
[Token(Token = "0x2000282")]
[RequireComponent(typeof(MeshFilter))]
public class SoftNormalsToVertexColor : MonoBehaviour
{
	[Token(Token = "0x2000283")]
	public enum Method
	{
		[Token(Token = "0x4000E20")]
		Simple,
		[Token(Token = "0x4000E21")]
		AngularDeviation
	}

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Method method;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool generateOnAwake;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool generateNow;

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x9242F8", Offset = "0x9242F8", VA = "0x9242F8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x9244BC", Offset = "0x9244BC", VA = "0x9244BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x92430C", Offset = "0x92430C", VA = "0x92430C")]
	private void TryGenerate()
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x9244CC", Offset = "0x9244CC", VA = "0x9244CC")]
	private void Generate(Mesh m)
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x924F04", Offset = "0x924F04", VA = "0x924F04")]
	public SoftNormalsToVertexColor()
	{
	}
}
namespace Wasabimole.InspectorNavigator
{
	[Token(Token = "0x2000284")]
	public class InspectorBreadcrumbs : MonoBehaviour
	{
		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public int DataVersion;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectReference CurrentSelection;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ObjectReference> Back;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ObjectReference> Forward;

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x924F14", Offset = "0x924F14", VA = "0x924F14")]
		public InspectorBreadcrumbs()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000285")]
	public enum ObjectType
	{
		[Token(Token = "0x4000E27")]
		None,
		[Token(Token = "0x4000E28")]
		Asset,
		[Token(Token = "0x4000E29")]
		Instance,
		[Token(Token = "0x4000E2A")]
		Folder,
		[Token(Token = "0x4000E2B")]
		Scene,
		[Token(Token = "0x4000E2C")]
		ProjectSettings,
		[Token(Token = "0x4000E2D")]
		TextAssets,
		[Token(Token = "0x4000E2E")]
		InspectorBreadcrumbs,
		[Token(Token = "0x4000E2F")]
		AssetStoreAssetInspector
	}
	[Serializable]
	[Token(Token = "0x2000286")]
	public class ObjectReference
	{
		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public UnityEngine.Object OReference;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public ObjectType OType;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public Vector3 CPosition;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Quaternion CRotation;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public float CSize;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public bool COrtho;

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x924FCC", Offset = "0x924FCC", VA = "0x924FCC")]
		public ObjectReference()
		{
		}
	}
}
namespace JetBrains.Annotations
{
	[Token(Token = "0x2000287")]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Event | AttributeTargets.Interface | AttributeTargets.Parameter | AttributeTargets.Delegate | AttributeTargets.GenericParameter)]
	internal sealed class CanBeNullAttribute : Attribute
	{
		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x924FD4", Offset = "0x924FD4", VA = "0x924FD4")]
		public CanBeNullAttribute()
		{
		}
	}
	[Token(Token = "0x2000288")]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Event | AttributeTargets.Interface | AttributeTargets.Parameter | AttributeTargets.Delegate | AttributeTargets.GenericParameter)]
	internal sealed class NotNullAttribute : Attribute
	{
		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x924FDC", Offset = "0x924FDC", VA = "0x924FDC")]
		public NotNullAttribute()
		{
		}
	}
	[Token(Token = "0x2000289")]
	[AttributeUsage(AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Parameter | AttributeTargets.Delegate)]
	internal sealed class ItemNotNullAttribute : Attribute
	{
		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x924FE4", Offset = "0x924FE4", VA = "0x924FE4")]
		public ItemNotNullAttribute()
		{
		}
	}
	[Token(Token = "0x200028A")]
	[AttributeUsage(AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Parameter | AttributeTargets.Delegate)]
	internal sealed class ItemCanBeNullAttribute : Attribute
	{
		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x924FEC", Offset = "0x924FEC", VA = "0x924FEC")]
		public ItemCanBeNullAttribute()
		{
		}
	}
	[Token(Token = "0x200028B")]
	[AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Interface)]
	internal sealed class ImplicitNotNullAttribute : Attribute
	{
		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x924FF4", Offset = "0x924FF4", VA = "0x924FF4")]
		public ImplicitNotNullAttribute()
		{
		}
	}
	[Token(Token = "0x200028C")]
	[AttributeUsage(AttributeTargets.Constructor | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Delegate)]
	internal sealed class StringFormatMethodAttribute : Attribute
	{
		[Token(Token = "0x170001A7")]
		[NotNull]
		public string FormatParameterName
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x92502C", Offset = "0x92502C", VA = "0x92502C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0x925034", Offset = "0x925034", VA = "0x925034")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x924FFC", Offset = "0x924FFC", VA = "0x924FFC")]
		public StringFormatMethodAttribute([NotNull] string formatParameterName)
		{
		}
	}
	[Token(Token = "0x200028D")]
	[AttributeUsage(AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Parameter)]
	internal sealed class ValueProviderAttribute : Attribute
	{
		[Token(Token = "0x170001A8")]
		[NotNull]
		public string Name
		{
			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0x92506C", Offset = "0x92506C", VA = "0x92506C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0x925074", Offset = "0x925074", VA = "0x925074")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x92503C", Offset = "0x92503C", VA = "0x92503C")]
		public ValueProviderAttribute([NotNull] string name)
		{
		}
	}
	[Token(Token = "0x200028E")]
	[AttributeUsage(AttributeTargets.Parameter)]
	internal sealed class InvokerParameterNameAttribute : Attribute
	{
		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x92507C", Offset = "0x92507C", VA = "0x92507C")]
		public InvokerParameterNameAttribute()
		{
		}
	}
	[Token(Token = "0x200028F")]
	[AttributeUsage(AttributeTargets.Method)]
	internal sealed class NotifyPropertyChangedInvocatorAttribute : Attribute
	{
		[Token(Token = "0x170001A9")]
		[CanBeNull]
		public string ParameterName
		{
			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0x9250BC", Offset = "0x9250BC", VA = "0x9250BC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FB7")]
			[Address(RVA = "0x9250C4", Offset = "0x9250C4", VA = "0x9250C4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x925084", Offset = "0x925084", VA = "0x925084")]
		public NotifyPropertyChangedInvocatorAttribute()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x92508C", Offset = "0x92508C", VA = "0x92508C")]
		public NotifyPropertyChangedInvocatorAttribute([NotNull] string parameterName)
		{
		}
	}
	[Token(Token = "0x2000290")]
	[AttributeUsage(AttributeTargets.Method, AllowMultiple = true)]
	internal sealed class ContractAnnotationAttribute : Attribute
	{
		[Token(Token = "0x170001AA")]
		[NotNull]
		public string Contract
		{
			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0x925144", Offset = "0x925144", VA = "0x925144")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0x92514C", Offset = "0x92514C", VA = "0x92514C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public bool ForceFullStates
		{
			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x925154", Offset = "0x925154", VA = "0x925154")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0x92515C", Offset = "0x92515C", VA = "0x92515C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x9250CC", Offset = "0x9250CC", VA = "0x9250CC")]
		public ContractAnnotationAttribute([NotNull] string contract)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x925104", Offset = "0x925104", VA = "0x925104")]
		public ContractAnnotationAttribute([NotNull] string contract, bool forceFullStates)
		{
		}
	}
	[Token(Token = "0x2000291")]
	[AttributeUsage(AttributeTargets.All)]
	internal sealed class LocalizationRequiredAttribute : Attribute
	{
		[Token(Token = "0x170001AC")]
		public bool Required
		{
			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0x9251B4", Offset = "0x9251B4", VA = "0x9251B4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0x9251BC", Offset = "0x9251BC", VA = "0x9251BC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x925168", Offset = "0x925168", VA = "0x925168")]
		public LocalizationRequiredAttribute()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x925188", Offset = "0x925188", VA = "0x925188")]
		public LocalizationRequiredAttribute(bool required)
		{
		}
	}
	[Token(Token = "0x2000292")]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Interface)]
	internal sealed class CannotApplyEqualityOperatorAttribute : Attribute
	{
		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x9251C8", Offset = "0x9251C8", VA = "0x9251C8")]
		public CannotApplyEqualityOperatorAttribute()
		{
		}
	}
	[Token(Token = "0x2000293")]
	[BaseTypeRequired(typeof(Attribute))]
	[AttributeUsage(AttributeTargets.Class, AllowMultiple = true)]
	internal sealed class BaseTypeRequiredAttribute : Attribute
	{
		[Token(Token = "0x170001AD")]
		[NotNull]
		public Type BaseType
		{
			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0x925200", Offset = "0x925200", VA = "0x925200")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0x925208", Offset = "0x925208", VA = "0x925208")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x9251D0", Offset = "0x9251D0", VA = "0x9251D0")]
		public BaseTypeRequiredAttribute([NotNull] Type baseType)
		{
		}
	}
	[Token(Token = "0x2000294")]
	[AttributeUsage(AttributeTargets.All)]
	internal sealed class UsedImplicitlyAttribute : Attribute
	{
		[Token(Token = "0x170001AE")]
		public ImplicitUseKindFlags UseKindFlags
		{
			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0x9252B8", Offset = "0x9252B8", VA = "0x9252B8")]
			[CompilerGenerated]
			get
			{
				return default(ImplicitUseKindFlags);
			}
			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0x9252C0", Offset = "0x9252C0", VA = "0x9252C0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		public ImplicitUseTargetFlags TargetFlags
		{
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0x9252C8", Offset = "0x9252C8", VA = "0x9252C8")]
			[CompilerGenerated]
			get
			{
				return default(ImplicitUseTargetFlags);
			}
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x9252D0", Offset = "0x9252D0", VA = "0x9252D0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x925210", Offset = "0x925210", VA = "0x925210")]
		public UsedImplicitlyAttribute()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x925260", Offset = "0x925260", VA = "0x925260")]
		public UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags)
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x92528C", Offset = "0x92528C", VA = "0x92528C")]
		public UsedImplicitlyAttribute(ImplicitUseTargetFlags targetFlags)
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x925234", Offset = "0x925234", VA = "0x925234")]
		public UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags)
		{
		}
	}
	[Token(Token = "0x2000295")]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.GenericParameter)]
	internal sealed class MeansImplicitUseAttribute : Attribute
	{
		[Token(Token = "0x170001B0")]
		public ImplicitUseKindFlags UseKindFlags
		{
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0x925380", Offset = "0x925380", VA = "0x925380")]
			[CompilerGenerated]
			get
			{
				return default(ImplicitUseKindFlags);
			}
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x925388", Offset = "0x925388", VA = "0x925388")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public ImplicitUseTargetFlags TargetFlags
		{
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0x925390", Offset = "0x925390", VA = "0x925390")]
			[CompilerGenerated]
			get
			{
				return default(ImplicitUseTargetFlags);
			}
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0x925398", Offset = "0x925398", VA = "0x925398")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x9252D8", Offset = "0x9252D8", VA = "0x9252D8")]
		public MeansImplicitUseAttribute()
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x925328", Offset = "0x925328", VA = "0x925328")]
		public MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x925354", Offset = "0x925354", VA = "0x925354")]
		public MeansImplicitUseAttribute(ImplicitUseTargetFlags targetFlags)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x9252FC", Offset = "0x9252FC", VA = "0x9252FC")]
		public MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags)
		{
		}
	}
	[Token(Token = "0x2000296")]
	[Flags]
	internal enum ImplicitUseKindFlags
	{
		[Token(Token = "0x4000E42")]
		Default = 7,
		[Token(Token = "0x4000E43")]
		Access = 1,
		[Token(Token = "0x4000E44")]
		Assign = 2,
		[Token(Token = "0x4000E45")]
		InstantiatedWithFixedConstructorSignature = 4,
		[Token(Token = "0x4000E46")]
		InstantiatedNoFixedConstructorSignature = 8
	}
	[Token(Token = "0x2000297")]
	[Flags]
	internal enum ImplicitUseTargetFlags
	{
		[Token(Token = "0x4000E48")]
		Default = 1,
		[Token(Token = "0x4000E49")]
		Itself = 1,
		[Token(Token = "0x4000E4A")]
		Members = 2,
		[Token(Token = "0x4000E4B")]
		WithMembers = 3
	}
	[Token(Token = "0x2000298")]
	[MeansImplicitUse(ImplicitUseTargetFlags.WithMembers)]
	internal sealed class PublicAPIAttribute : Attribute
	{
		[Token(Token = "0x170001B2")]
		[CanBeNull]
		public string Comment
		{
			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x9253D8", Offset = "0x9253D8", VA = "0x9253D8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x9253E0", Offset = "0x9253E0", VA = "0x9253E0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x9253A0", Offset = "0x9253A0", VA = "0x9253A0")]
		public PublicAPIAttribute()
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x9253A8", Offset = "0x9253A8", VA = "0x9253A8")]
		public PublicAPIAttribute([NotNull] string comment)
		{
		}
	}
	[Token(Token = "0x2000299")]
	[AttributeUsage(AttributeTargets.Parameter)]
	internal sealed class InstantHandleAttribute : Attribute
	{
		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x9253E8", Offset = "0x9253E8", VA = "0x9253E8")]
		public InstantHandleAttribute()
		{
		}
	}
	[Token(Token = "0x200029A")]
	[AttributeUsage(AttributeTargets.Method)]
	internal sealed class PureAttribute : Attribute
	{
		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x9253F0", Offset = "0x9253F0", VA = "0x9253F0")]
		public PureAttribute()
		{
		}
	}
	[Token(Token = "0x200029B")]
	[AttributeUsage(AttributeTargets.Method)]
	internal sealed class MustUseReturnValueAttribute : Attribute
	{
		[Token(Token = "0x170001B3")]
		[CanBeNull]
		public string Justification
		{
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x925430", Offset = "0x925430", VA = "0x925430")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x925438", Offset = "0x925438", VA = "0x925438")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x9253F8", Offset = "0x9253F8", VA = "0x9253F8")]
		public MustUseReturnValueAttribute()
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x925400", Offset = "0x925400", VA = "0x925400")]
		public MustUseReturnValueAttribute([NotNull] string justification)
		{
		}
	}
	[Token(Token = "0x200029C")]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Interface | AttributeTargets.Parameter | AttributeTargets.GenericParameter)]
	internal sealed class ProvidesContextAttribute : Attribute
	{
		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x925440", Offset = "0x925440", VA = "0x925440")]
		public ProvidesContextAttribute()
		{
		}
	}
	[Token(Token = "0x200029D")]
	[AttributeUsage(AttributeTargets.Parameter)]
	internal sealed class PathReferenceAttribute : Attribute
	{
		[Token(Token = "0x170001B4")]
		[CanBeNull]
		public string BasePath
		{
			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x925480", Offset = "0x925480", VA = "0x925480")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x925488", Offset = "0x925488", VA = "0x925488")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x925448", Offset = "0x925448", VA = "0x925448")]
		public PathReferenceAttribute()
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x925450", Offset = "0x925450", VA = "0x925450")]
		public PathReferenceAttribute([NotNull][PathReference] string basePath)
		{
		}
	}
	[Token(Token = "0x200029E")]
	[AttributeUsage(AttributeTargets.Method)]
	internal sealed class SourceTemplateAttribute : Attribute
	{
		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x925490", Offset = "0x925490", VA = "0x925490")]
		public SourceTemplateAttribute()
		{
		}
	}
	[Token(Token = "0x200029F")]
	[AttributeUsage(AttributeTargets.Method | AttributeTargets.Parameter, AllowMultiple = true)]
	internal sealed class MacroAttribute : Attribute
	{
		[Token(Token = "0x170001B5")]
		public string Expression
		{
			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0x925498", Offset = "0x925498", VA = "0x925498")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0x9254A0", Offset = "0x9254A0", VA = "0x9254A0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public int Editable
		{
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0x9254A8", Offset = "0x9254A8", VA = "0x9254A8")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0x9254B0", Offset = "0x9254B0", VA = "0x9254B0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public string Target
		{
			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0x9254B8", Offset = "0x9254B8", VA = "0x9254B8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0x9254C0", Offset = "0x9254C0", VA = "0x9254C0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x9254C8", Offset = "0x9254C8", VA = "0x9254C8")]
		public MacroAttribute()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	[AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)]
	internal sealed class AspMvcAreaMasterLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x170001B8")]
		[NotNull]
		public string Format
		{
			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0x925500", Offset = "0x925500", VA = "0x925500")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0x925508", Offset = "0x925508", VA = "0x925508")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x9254D0", Offset = "0x9254D0", VA = "0x9254D0")]
		public AspMvcAreaMasterLocationFormatAttribute([NotNull] string format)
		{
		}
	}
	[Token(Token = "0x20002A1")]
	[AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)]
	internal sealed class AspMvcAreaPartialViewLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x170001B9")]
		[NotNull]
		public string Format
		{
			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0x925540", Offset = "0x925540", VA = "0x925540")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0x925548", Offset = "0x925548", VA = "0x925548")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x925510", Offset = "0x925510", VA = "0x925510")]
		public AspMvcAreaPartialViewLocationFormatAttribute([NotNull] string format)
		{
		}
	}
	[Token(Token = "0x20002A2")]
	[AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)]
	internal sealed class AspMvcAreaViewLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x170001BA")]
		[NotNull]
		public string Format
		{
			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0x925580", Offset = "0x925580", VA = "0x925580")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0x925588", Offset = "0x925588", VA = "0x925588")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x925550", Offset = "0x925550", VA = "0x925550")]
		public AspMvcAreaViewLocationFormatAttribute([NotNull] string format)
		{
		}
	}
	[Token(Token = "0x20002A3")]
	[AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)]
	internal sealed class AspMvcMasterLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x170001BB")]
		public string Format
		{
			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0x9255C0", Offset = "0x9255C0", VA = "0x9255C0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x9255C8", Offset = "0x9255C8", VA = "0x9255C8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x925590", Offset = "0x925590", VA = "0x925590")]
		public AspMvcMasterLocationFormatAttribute(string format)
		{
		}
	}
	[Token(Token = "0x20002A4")]
	[AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)]
	internal sealed class AspMvcPartialViewLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x170001BC")]
		[NotNull]
		public string Format
		{
			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x925600", Offset = "0x925600", VA = "0x925600")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0x925608", Offset = "0x925608", VA = "0x925608")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x9255D0", Offset = "0x9255D0", VA = "0x9255D0")]
		public AspMvcPartialViewLocationFormatAttribute([NotNull] string format)
		{
		}
	}
	[Token(Token = "0x20002A5")]
	[AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)]
	internal sealed class AspMvcViewLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x170001BD")]
		[NotNull]
		public string Format
		{
			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x925640", Offset = "0x925640", VA = "0x925640")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0x925648", Offset = "0x925648", VA = "0x925648")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x925610", Offset = "0x925610", VA = "0x925610")]
		public AspMvcViewLocationFormatAttribute([NotNull] string format)
		{
		}
	}
	[Token(Token = "0x20002A6")]
	[AttributeUsage(AttributeTargets.Method | AttributeTargets.Parameter)]
	internal sealed class AspMvcActionAttribute : Attribute
	{
		[Token(Token = "0x170001BE")]
		[CanBeNull]
		public string AnonymousProperty
		{
			[Token(Token = "0x6001001")]
			[Address(RVA = "0x925688", Offset = "0x925688", VA = "0x925688")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001002")]
			[Address(RVA = "0x925690", Offset = "0x925690", VA = "0x925690")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x925650", Offset = "0x925650", VA = "0x925650")]
		public AspMvcActionAttribute()
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x925658", Offset = "0x925658", VA = "0x925658")]
		public AspMvcActionAttribute([NotNull] string anonymousProperty)
		{
		}
	}
	[Token(Token = "0x20002A7")]
	[AttributeUsage(AttributeTargets.Parameter)]
	internal sealed class AspMvcAreaAttribute : Attribute
	{
		[Token(Token = "0x170001BF")]
		[CanBeNull]
		public string AnonymousProperty
		{
			[Token(Token = "0x6001005")]
			[Address(RVA = "0x9256D0", Offset = "0x9256D0", VA = "0x9256D0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001006")]
			[Address(RVA = "0x9256D8", Offset = "0x9256D8", VA = "0x9256D8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x925698", Offset = "0x925698", VA = "0x925698")]
		public AspMvcAreaAttribute()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x9256A0", Offset = "0x9256A0", VA = "0x9256A0")]
		public AspMvcAreaAttribute([NotNull] string anonymousProperty)
		{
		}
	}
	[Token(Token = "0x20002A8")]
	[AttributeUsage(AttributeTargets.Method | AttributeTargets.Parameter)]
	internal sealed class AspMvcControllerAttribute : Attribute
	{
		[Token(Token = "0x170001C0")]
		[CanBeNull]
		public string AnonymousProperty
		{
			[Token(Token = "0x6001009")]
			[Address(RVA = "0x925718", Offset = "0x925718", VA = "0x925718")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600100A")]
			[Address(RVA = "0x925720", Offset = "0x925720", VA = "0x925720")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x9256E0", Offset = "0x9256E0", VA = "0x9256E0")]
		public AspMvcControllerAttribute()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x9256E8", Offset = "0x9256E8", VA = "0x9256E8")]
		public AspMvcControllerAttribute([NotNull] string anonymousProperty)
		{
		}
	}
	[Token(Token = "0x20002A9")]
	[AttributeUsage(AttributeTargets.Parameter)]
	internal sealed class AspMvcMasterAttribute : Attribute
	{
		[Token(Token = "0x600100B")]
		[Address(RVA = "0x925728", Offset = "0x925728", VA = "0x925728")]
		public AspMvcMasterAttribute()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	[AttributeUsage(AttributeTargets.Parameter)]
	internal sealed class AspMvcModelTypeAttribute : Attribute
	{
		[Token(Token = "0x600100C")]
		[Address(RVA = "0x925730", Offset = "0x925730", VA = "0x925730")]
		public AspMvcModelTypeAttribute()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	[AttributeUsage(AttributeTargets.Method | AttributeTargets.Parameter)]
	internal sealed class AspMvcPartialViewAttribute : Attribute
	{
		[Token(Token = "0x600100D")]
		[Address(RVA = "0x925738", Offset = "0x925738", VA = "0x925738")]
		public AspMvcPartialViewAttribute()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Method)]
	internal sealed class AspMvcSuppressViewErrorAttribute : Attribute
	{
		[Token(Token = "0x600100E")]
		[Address(RVA = "0x925740", Offset = "0x925740", VA = "0x925740")]
		public AspMvcSuppressViewErrorAttribute()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	[AttributeUsage(AttributeTargets.Parameter)]
	internal sealed class AspMvcDisplayTemplateAttribute : Attribute
	{
		[Token(Token = "0x600100F")]
		[Address(RVA = "0x925748", Offset = "0x925748", VA = "0x925748")]
		public AspMvcDisplayTemplateAttribute()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	[AttributeUsage(AttributeTargets.Parameter)]
	internal sealed class AspMvcEditorTemplateAttribute : Attribute
	{
		[Token(Token = "0x6001010")]
		[Address(RVA = "0x925750", Offset = "0x925750", VA = "0x925750")]
		public AspMvcEditorTemplateAttribute()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	[AttributeUsage(AttributeTargets.Parameter)]
	internal sealed class AspMvcTemplateAttribute : Attribute
	{
		[Token(Token = "0x6001011")]
		[Address(RVA = "0x925758", Offset = "0x925758", VA = "0x925758")]
		public AspMvcTemplateAttribute()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	[AttributeUsage(AttributeTargets.Method | AttributeTargets.Parameter)]
	internal sealed class AspMvcViewAttribute : Attribute
	{
		[Token(Token = "0x6001012")]
		[Address(RVA = "0x925760", Offset = "0x925760", VA = "0x925760")]
		public AspMvcViewAttribute()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	[AttributeUsage(AttributeTargets.Parameter)]
	internal sealed class AspMvcViewComponentAttribute : Attribute
	{
		[Token(Token = "0x6001013")]
		[Address(RVA = "0x925768", Offset = "0x925768", VA = "0x925768")]
		public AspMvcViewComponentAttribute()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	[AttributeUsage(AttributeTargets.Method | AttributeTargets.Parameter)]
	internal sealed class AspMvcViewComponentViewAttribute : Attribute
	{
		[Token(Token = "0x6001014")]
		[Address(RVA = "0x925770", Offset = "0x925770", VA = "0x925770")]
		public AspMvcViewComponentViewAttribute()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	[AttributeUsage(AttributeTargets.Property | AttributeTargets.Parameter)]
	internal sealed class AspMvcActionSelectorAttribute : Attribute
	{
		[Token(Token = "0x6001015")]
		[Address(RVA = "0x925778", Offset = "0x925778", VA = "0x925778")]
		public AspMvcActionSelectorAttribute()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	[AttributeUsage(AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Parameter)]
	internal sealed class HtmlElementAttributesAttribute : Attribute
	{
		[Token(Token = "0x170001C1")]
		[CanBeNull]
		public string Name
		{
			[Token(Token = "0x6001018")]
			[Address(RVA = "0x9257B8", Offset = "0x9257B8", VA = "0x9257B8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001019")]
			[Address(RVA = "0x9257C0", Offset = "0x9257C0", VA = "0x9257C0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x925780", Offset = "0x925780", VA = "0x925780")]
		public HtmlElementAttributesAttribute()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x925788", Offset = "0x925788", VA = "0x925788")]
		public HtmlElementAttributesAttribute([NotNull] string name)
		{
		}
	}
	[Token(Token = "0x20002B5")]
	[AttributeUsage(AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Parameter)]
	internal sealed class HtmlAttributeValueAttribute : Attribute
	{
		[Token(Token = "0x170001C2")]
		[NotNull]
		public string Name
		{
			[Token(Token = "0x600101B")]
			[Address(RVA = "0x9257F8", Offset = "0x9257F8", VA = "0x9257F8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600101C")]
			[Address(RVA = "0x925800", Offset = "0x925800", VA = "0x925800")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x9257C8", Offset = "0x9257C8", VA = "0x9257C8")]
		public HtmlAttributeValueAttribute([NotNull] string name)
		{
		}
	}
	[Token(Token = "0x20002B6")]
	[AttributeUsage(AttributeTargets.Method | AttributeTargets.Parameter)]
	internal sealed class RazorSectionAttribute : Attribute
	{
		[Token(Token = "0x600101D")]
		[Address(RVA = "0x925808", Offset = "0x925808", VA = "0x925808")]
		public RazorSectionAttribute()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	[AttributeUsage(AttributeTargets.Constructor | AttributeTargets.Method | AttributeTargets.Property)]
	internal sealed class CollectionAccessAttribute : Attribute
	{
		[Token(Token = "0x170001C3")]
		public CollectionAccessType CollectionAccessType
		{
			[Token(Token = "0x600101F")]
			[Address(RVA = "0x925838", Offset = "0x925838", VA = "0x925838")]
			[CompilerGenerated]
			get
			{
				return default(CollectionAccessType);
			}
			[Token(Token = "0x6001020")]
			[Address(RVA = "0x925840", Offset = "0x925840", VA = "0x925840")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x925810", Offset = "0x925810", VA = "0x925810")]
		public CollectionAccessAttribute(CollectionAccessType collectionAccessType)
		{
		}
	}
	[Token(Token = "0x20002B8")]
	[Flags]
	internal enum CollectionAccessType
	{
		[Token(Token = "0x4000E5F")]
		None = 0,
		[Token(Token = "0x4000E60")]
		Read = 1,
		[Token(Token = "0x4000E61")]
		ModifyExistingContent = 2,
		[Token(Token = "0x4000E62")]
		UpdatedContent = 6
	}
	[Token(Token = "0x20002B9")]
	[AttributeUsage(AttributeTargets.Method)]
	internal sealed class AssertionMethodAttribute : Attribute
	{
		[Token(Token = "0x6001021")]
		[Address(RVA = "0x925848", Offset = "0x925848", VA = "0x925848")]
		public AssertionMethodAttribute()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	[AttributeUsage(AttributeTargets.Parameter)]
	internal sealed class AssertionConditionAttribute : Attribute
	{
		[Token(Token = "0x170001C4")]
		public AssertionConditionType ConditionType
		{
			[Token(Token = "0x6001023")]
			[Address(RVA = "0x925878", Offset = "0x925878", VA = "0x925878")]
			[CompilerGenerated]
			get
			{
				return default(AssertionConditionType);
			}
			[Token(Token = "0x6001024")]
			[Address(RVA = "0x925880", Offset = "0x925880", VA = "0x925880")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x925850", Offset = "0x925850", VA = "0x925850")]
		public AssertionConditionAttribute(AssertionConditionType conditionType)
		{
		}
	}
	[Token(Token = "0x20002BB")]
	internal enum AssertionConditionType
	{
		[Token(Token = "0x4000E65")]
		IS_TRUE,
		[Token(Token = "0x4000E66")]
		IS_FALSE,
		[Token(Token = "0x4000E67")]
		IS_NULL,
		[Token(Token = "0x4000E68")]
		IS_NOT_NULL
	}
	[Token(Token = "0x20002BC")]
	[Obsolete("Use [ContractAnnotation('=> halt')] instead")]
	[AttributeUsage(AttributeTargets.Method)]
	internal sealed class TerminatesProgramAttribute : Attribute
	{
		[Token(Token = "0x6001025")]
		[Address(RVA = "0x925888", Offset = "0x925888", VA = "0x925888")]
		public TerminatesProgramAttribute()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	[AttributeUsage(AttributeTargets.Method)]
	internal sealed class LinqTunnelAttribute : Attribute
	{
		[Token(Token = "0x6001026")]
		[Address(RVA = "0x925890", Offset = "0x925890", VA = "0x925890")]
		public LinqTunnelAttribute()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	[AttributeUsage(AttributeTargets.Parameter)]
	internal sealed class NoEnumerationAttribute : Attribute
	{
		[Token(Token = "0x6001027")]
		[Address(RVA = "0x925898", Offset = "0x925898", VA = "0x925898")]
		public NoEnumerationAttribute()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	[AttributeUsage(AttributeTargets.Parameter)]
	internal sealed class RegexPatternAttribute : Attribute
	{
		[Token(Token = "0x6001028")]
		[Address(RVA = "0x9258A0", Offset = "0x9258A0", VA = "0x9258A0")]
		public RegexPatternAttribute()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	[AttributeUsage(AttributeTargets.Class)]
	internal sealed class XamlItemsControlAttribute : Attribute
	{
		[Token(Token = "0x6001029")]
		[Address(RVA = "0x9258A8", Offset = "0x9258A8", VA = "0x9258A8")]
		public XamlItemsControlAttribute()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	[AttributeUsage(AttributeTargets.Property)]
	internal sealed class XamlItemBindingOfItemsControlAttribute : Attribute
	{
		[Token(Token = "0x600102A")]
		[Address(RVA = "0x9258B0", Offset = "0x9258B0", VA = "0x9258B0")]
		public XamlItemBindingOfItemsControlAttribute()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	[AttributeUsage(AttributeTargets.Class, AllowMultiple = true)]
	internal sealed class AspChildControlTypeAttribute : Attribute
	{
		[Token(Token = "0x170001C5")]
		[NotNull]
		public string TagName
		{
			[Token(Token = "0x600102C")]
			[Address(RVA = "0x9258FC", Offset = "0x9258FC", VA = "0x9258FC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600102D")]
			[Address(RVA = "0x925904", Offset = "0x925904", VA = "0x925904")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		[NotNull]
		public Type ControlType
		{
			[Token(Token = "0x600102E")]
			[Address(RVA = "0x92590C", Offset = "0x92590C", VA = "0x92590C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600102F")]
			[Address(RVA = "0x925914", Offset = "0x925914", VA = "0x925914")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x9258B8", Offset = "0x9258B8", VA = "0x9258B8")]
		public AspChildControlTypeAttribute([NotNull] string tagName, [NotNull] Type controlType)
		{
		}
	}
	[Token(Token = "0x20002C3")]
	[AttributeUsage(AttributeTargets.Method | AttributeTargets.Property)]
	internal sealed class AspDataFieldAttribute : Attribute
	{
		[Token(Token = "0x6001030")]
		[Address(RVA = "0x92591C", Offset = "0x92591C", VA = "0x92591C")]
		public AspDataFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	[AttributeUsage(AttributeTargets.Method | AttributeTargets.Property)]
	internal sealed class AspDataFieldsAttribute : Attribute
	{
		[Token(Token = "0x6001031")]
		[Address(RVA = "0x925924", Offset = "0x925924", VA = "0x925924")]
		public AspDataFieldsAttribute()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	[AttributeUsage(AttributeTargets.Property)]
	internal sealed class AspMethodPropertyAttribute : Attribute
	{
		[Token(Token = "0x6001032")]
		[Address(RVA = "0x92592C", Offset = "0x92592C", VA = "0x92592C")]
		public AspMethodPropertyAttribute()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	[AttributeUsage(AttributeTargets.Class, AllowMultiple = true)]
	internal sealed class AspRequiredAttributeAttribute : Attribute
	{
		[Token(Token = "0x170001C7")]
		[NotNull]
		public string Attribute
		{
			[Token(Token = "0x6001034")]
			[Address(RVA = "0x925964", Offset = "0x925964", VA = "0x925964")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001035")]
			[Address(RVA = "0x92596C", Offset = "0x92596C", VA = "0x92596C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x925934", Offset = "0x925934", VA = "0x925934")]
		public AspRequiredAttributeAttribute([NotNull] string attribute)
		{
		}
	}
	[Token(Token = "0x20002C7")]
	[AttributeUsage(AttributeTargets.Property)]
	internal sealed class AspTypePropertyAttribute : Attribute
	{
		[Token(Token = "0x170001C8")]
		public bool CreateConstructorReferences
		{
			[Token(Token = "0x6001037")]
			[Address(RVA = "0x9259A0", Offset = "0x9259A0", VA = "0x9259A0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001038")]
			[Address(RVA = "0x9259A8", Offset = "0x9259A8", VA = "0x9259A8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x925974", Offset = "0x925974", VA = "0x925974")]
		public AspTypePropertyAttribute(bool createConstructorReferences)
		{
		}
	}
	[Token(Token = "0x20002C8")]
	[AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)]
	internal sealed class RazorImportNamespaceAttribute : Attribute
	{
		[Token(Token = "0x170001C9")]
		[NotNull]
		public string Name
		{
			[Token(Token = "0x600103A")]
			[Address(RVA = "0x9259E4", Offset = "0x9259E4", VA = "0x9259E4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600103B")]
			[Address(RVA = "0x9259EC", Offset = "0x9259EC", VA = "0x9259EC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x9259B4", Offset = "0x9259B4", VA = "0x9259B4")]
		public RazorImportNamespaceAttribute([NotNull] string name)
		{
		}
	}
	[Token(Token = "0x20002C9")]
	[AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)]
	internal sealed class RazorInjectionAttribute : Attribute
	{
		[Token(Token = "0x170001CA")]
		[NotNull]
		public string Type
		{
			[Token(Token = "0x600103D")]
			[Address(RVA = "0x925A38", Offset = "0x925A38", VA = "0x925A38")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600103E")]
			[Address(RVA = "0x925A40", Offset = "0x925A40", VA = "0x925A40")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		[NotNull]
		public string FieldName
		{
			[Token(Token = "0x600103F")]
			[Address(RVA = "0x925A48", Offset = "0x925A48", VA = "0x925A48")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001040")]
			[Address(RVA = "0x925A50", Offset = "0x925A50", VA = "0x925A50")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x9259F4", Offset = "0x9259F4", VA = "0x9259F4")]
		public RazorInjectionAttribute([NotNull] string type, [NotNull] string fieldName)
		{
		}
	}
	[Token(Token = "0x20002CA")]
	[AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)]
	internal sealed class RazorDirectiveAttribute : Attribute
	{
		[Token(Token = "0x170001CC")]
		[NotNull]
		public string Directive
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0x925A88", Offset = "0x925A88", VA = "0x925A88")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001043")]
			[Address(RVA = "0x925A90", Offset = "0x925A90", VA = "0x925A90")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x925A58", Offset = "0x925A58", VA = "0x925A58")]
		public RazorDirectiveAttribute([NotNull] string directive)
		{
		}
	}
	[Token(Token = "0x20002CB")]
	[AttributeUsage(AttributeTargets.Method)]
	internal sealed class RazorHelperCommonAttribute : Attribute
	{
		[Token(Token = "0x6001044")]
		[Address(RVA = "0x925A98", Offset = "0x925A98", VA = "0x925A98")]
		public RazorHelperCommonAttribute()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	[AttributeUsage(AttributeTargets.Property)]
	internal sealed class RazorLayoutAttribute : Attribute
	{
		[Token(Token = "0x6001045")]
		[Address(RVA = "0x925AA0", Offset = "0x925AA0", VA = "0x925AA0")]
		public RazorLayoutAttribute()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	[AttributeUsage(AttributeTargets.Method)]
	internal sealed class RazorWriteLiteralMethodAttribute : Attribute
	{
		[Token(Token = "0x6001046")]
		[Address(RVA = "0x925AA8", Offset = "0x925AA8", VA = "0x925AA8")]
		public RazorWriteLiteralMethodAttribute()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	[AttributeUsage(AttributeTargets.Method)]
	internal sealed class RazorWriteMethodAttribute : Attribute
	{
		[Token(Token = "0x6001047")]
		[Address(RVA = "0x925AB0", Offset = "0x925AB0", VA = "0x925AB0")]
		public RazorWriteMethodAttribute()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	[AttributeUsage(AttributeTargets.Parameter)]
	internal sealed class RazorWriteMethodParameterAttribute : Attribute
	{
		[Token(Token = "0x6001048")]
		[Address(RVA = "0x925AB8", Offset = "0x925AB8", VA = "0x925AB8")]
		public RazorWriteMethodParameterAttribute()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	[AttributeUsage(AttributeTargets.All)]
	internal sealed class NoReorder : Attribute
	{
		[Token(Token = "0x6001049")]
		[Address(RVA = "0x925AC0", Offset = "0x925AC0", VA = "0x925AC0")]
		public NoReorder()
		{
		}
	}
}
namespace UnityStandardAssets.Utility
{
	[Token(Token = "0x20002D1")]
	[RequireComponent(typeof(Text))]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x4000E71")]
		private const float fpsMeasurePeriod = 0.5f;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_FpsAccumulator;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_FpsNextPeriod;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_CurrentFps;

		[Token(Token = "0x4000E75")]
		private const string display = "{0} FPS";

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_GuiText;

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x925AC8", Offset = "0x925AC8", VA = "0x925AC8")]
		private void Start()
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x925B34", Offset = "0x925B34", VA = "0x925B34")]
		private void Update()
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x925C60", Offset = "0x925C60", VA = "0x925C60")]
		public FPSCounter()
		{
		}
	}
}
namespace UnityEngine.XR.Interaction.Toolkit
{
	[Token(Token = "0x20002D2")]
	public class SnapTurnProviderPausible : SnapTurnProviderBase
	{
		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_CurrentTurnAmountPausible;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_TimeStartedPausible;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject rotate_bounds;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The Input System Action that will be used to read Snap Turn data from the left hand controller. Must be a Value Vector2 Control.")]
		[SerializeField]
		private InputActionProperty m_LeftHandSnapTurnAction;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("The Input System Action that will be used to read Snap Turn data from the right hand controller. Must be a Value Vector2 Control.")]
		[SerializeField]
		private InputActionProperty m_RightHandSnapTurnAction;

		[Token(Token = "0x170001CD")]
		public InputActionProperty leftHandSnapTurnAction
		{
			[Token(Token = "0x6001051")]
			[Address(RVA = "0x92623C", Offset = "0x92623C", VA = "0x92623C")]
			get
			{
				return default(InputActionProperty);
			}
			[Token(Token = "0x6001052")]
			[Address(RVA = "0x926250", Offset = "0x926250", VA = "0x926250")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public InputActionProperty rightHandSnapTurnAction
		{
			[Token(Token = "0x6001053")]
			[Address(RVA = "0x926324", Offset = "0x926324", VA = "0x926324")]
			get
			{
				return default(InputActionProperty);
			}
			[Token(Token = "0x6001054")]
			[Address(RVA = "0x926338", Offset = "0x926338", VA = "0x926338")]
			set
			{
			}
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x925C68", Offset = "0x925C68", VA = "0x925C68")]
		protected new void Update()
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x925DC8", Offset = "0x925DC8", VA = "0x925DC8")]
		protected new void StartTurn(float amount)
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x925E08", Offset = "0x925E08", VA = "0x925E08")]
		private void recenterInBounds()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x925F8C", Offset = "0x925F8C", VA = "0x925F8C")]
		private Vector3 findClosestPointInBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x926368", Offset = "0x926368", VA = "0x926368")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x9263B8", Offset = "0x9263B8", VA = "0x9263B8")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x926408", Offset = "0x926408", VA = "0x926408", Slot = "5")]
		protected override Vector2 ReadInput()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x926280", Offset = "0x926280", VA = "0x926280")]
		private void SetInputActionProperty(ref InputActionProperty property, InputActionProperty value)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x9264FC", Offset = "0x9264FC", VA = "0x9264FC")]
		public SnapTurnProviderPausible()
		{
		}
	}
}
namespace UnityEngine.UI
{
	[Token(Token = "0x20002D3")]
	[AddComponentMenu("UI/Effects/Letter Spacing", 15)]
	public class LetterSpacing : BaseMeshEffect
	{
		[Token(Token = "0x4000E7C")]
		private const string SupportedTagRegexPattersn = "<b>|</b>|<i>|</i>|<size=.*?>|</size>|<color=.*?>|</color>|<material=.*?>|</material>";

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool useRichText;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_spacing;

		[Token(Token = "0x170001CF")]
		public float spacing
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0x92650C", Offset = "0x92650C", VA = "0x92650C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600105C")]
			[Address(RVA = "0x926514", Offset = "0x926514", VA = "0x926514")]
			set
			{
			}
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x926504", Offset = "0x926504", VA = "0x926504")]
		protected LetterSpacing()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x9265D8", Offset = "0x9265D8", VA = "0x9265D8", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x9266A4", Offset = "0x9266A4", VA = "0x9266A4")]
		public void ModifyVertices(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x926F90", Offset = "0x926F90", VA = "0x926F90")]
		private IEnumerator GetRegexMatchedTagCollection(string line, out int lineLengthWithoutTags)
		{
			return null;
		}
	}
}
namespace VRTK
{
	[Token(Token = "0x20002D4")]
	public class Utilities : MonoBehaviour
	{
		[Token(Token = "0x6001060")]
		[Address(RVA = "0x9272FC", Offset = "0x9272FC", VA = "0x9272FC")]
		public static Bounds GetBounds(Transform transform, [Optional] Transform excludeRotation, [Optional] Transform excludeTransform)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x927830", Offset = "0x927830", VA = "0x927830")]
		public static bool IsLowest(float value, float[] others)
		{
			return default(bool);
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x927890", Offset = "0x927890", VA = "0x927890")]
		public static void CreateColliders(GameObject go)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x9279C8", Offset = "0x9279C8", VA = "0x9279C8")]
		public static float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x927A38", Offset = "0x927A38", VA = "0x927A38")]
		public Utilities()
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20002D5")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x927A40", Offset = "0x927A40", VA = "0x927A40")]
		private void Update()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x927D0C", Offset = "0x927D0C", VA = "0x927D0C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x927D5C", Offset = "0x927D5C", VA = "0x927D5C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x927D94", Offset = "0x927D94", VA = "0x927D94")]
		public TouchController()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class Grabbable : MonoBehaviour
	{
		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowOffhandGrab;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider[] m_grabPoints;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_grabPose;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_grabbedKinematic;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider m_grabbedCollider;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Hand m_grabbedHand;

		[Token(Token = "0x170001D0")]
		public bool AllowOffhandGrab
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0x927D9C", Offset = "0x927D9C", VA = "0x927D9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D1")]
		public HandPose HandPose
		{
			[Token(Token = "0x600106A")]
			[Address(RVA = "0x927DA4", Offset = "0x927DA4", VA = "0x927DA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		public bool IsGrabbed
		{
			[Token(Token = "0x600106B")]
			[Address(RVA = "0x927DAC", Offset = "0x927DAC", VA = "0x927DAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D3")]
		public Hand GrabbedHand
		{
			[Token(Token = "0x600106C")]
			[Address(RVA = "0x927E0C", Offset = "0x927E0C", VA = "0x927E0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		public Transform GrabbedTransform
		{
			[Token(Token = "0x600106D")]
			[Address(RVA = "0x927E14", Offset = "0x927E14", VA = "0x927E14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		public Rigidbody GrabbedRigidbody
		{
			[Token(Token = "0x600106E")]
			[Address(RVA = "0x927E30", Offset = "0x927E30", VA = "0x927E30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		public Collider[] GrabPoints
		{
			[Token(Token = "0x600106F")]
			[Address(RVA = "0x927E4C", Offset = "0x927E4C", VA = "0x927E4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x927E54", Offset = "0x927E54", VA = "0x927E54", Slot = "4")]
		public virtual void GrabBegin(Hand hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x927EEC", Offset = "0x927EEC", VA = "0x927EEC", Slot = "5")]
		public virtual void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x927FD8", Offset = "0x927FD8", VA = "0x927FD8", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x928148", Offset = "0x928148", VA = "0x928148")]
		private void Start()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x9281AC", Offset = "0x9281AC", VA = "0x9281AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x9282E0", Offset = "0x9282E0", VA = "0x9282E0")]
		private void SendMsg(string msgName, object msg)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x92831C", Offset = "0x92831C", VA = "0x92831C")]
		public Grabbable()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	[RequireComponent(typeof(ParticleSystem))]
	[RequireComponent(typeof(Rigidbody))]
	[RequireComponent(typeof(VelocityTracker))]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x4000E88")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000E89")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000E8A")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000E8B")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000E8C")]
		public const int HMD_REFRESH_RATE = 90;

		[Token(Token = "0x4000E8D")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000E8E")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000E8F")]
		public const float THRESH_GRAB_BEGIN = 0.55f;

		[Token(Token = "0x4000E90")]
		public const float THRESH_GRAB_END = 0.35f;

		[Token(Token = "0x4000E91")]
		public const float THRESH_THROW_SPEED = 1f;

		[Token(Token = "0x4000E92")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000E93")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000E94")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_useFixedJointForGrabbedObject;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_parentHeldObject;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_touchAnchor;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private OVRInput.Controller m_handedness;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool isLeft;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_gripTransform;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_particleEmissionRateVelocityScale;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Collider[] m_grabVolumes;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystem m_particles;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TrackedController m_trackedController;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private VelocityTracker m_velocityTracker;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool m_grabVolumeEnabled;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 m_lastPos;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion m_lastRot;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion m_anchorOffsetRotation;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_anchorOffsetPosition;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_flex;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float m_point;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_thumbsUp;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private HandPose m_grabbedHandPose;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Grabbable m_grabbedObj;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Dictionary<Grabbable, int> m_grabCandidates;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_handVisible;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x170001D7")]
		public bool HandVisible
		{
			[Token(Token = "0x6001078")]
			[Address(RVA = "0x9283EC", Offset = "0x9283EC", VA = "0x9283EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001077")]
			[Address(RVA = "0x92832C", Offset = "0x92832C", VA = "0x92832C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		private HandPose GrabPose
		{
			[Token(Token = "0x6001079")]
			[Address(RVA = "0x9283F4", Offset = "0x9283F4", VA = "0x9283F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		public OVRInput.Controller Handedness
		{
			[Token(Token = "0x600107A")]
			[Address(RVA = "0x92840C", Offset = "0x92840C", VA = "0x92840C")]
			get
			{
				return default(OVRInput.Controller);
			}
		}

		[Token(Token = "0x170001DA")]
		public bool IsLeft
		{
			[Token(Token = "0x600107B")]
			[Address(RVA = "0x928414", Offset = "0x928414", VA = "0x928414")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x928230", Offset = "0x928230", VA = "0x928230")]
		public void ForceRelease(Grabbable grabbable)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x9286E8", Offset = "0x9286E8", VA = "0x9286E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x928738", Offset = "0x928738", VA = "0x928738")]
		private void Start()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x928BF0", Offset = "0x928BF0", VA = "0x928BF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x928FF4", Offset = "0x928FF4", VA = "0x928FF4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x9295F0", Offset = "0x9295F0", VA = "0x9295F0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x9296D4", Offset = "0x9296D4", VA = "0x9296D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x92974C", Offset = "0x92974C", VA = "0x92974C")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x929874", Offset = "0x929874", VA = "0x929874")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x928E20", Offset = "0x928E20", VA = "0x928E20")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x928EB4", Offset = "0x928EB4", VA = "0x928EB4")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x928AB0", Offset = "0x928AB0", VA = "0x928AB0")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x928E74", Offset = "0x928E74", VA = "0x928E74")]
		private void CheckForGrabOrRelease(float prevFlex)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x9299D0", Offset = "0x9299D0", VA = "0x9299D0")]
		private void GrabBegin()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x9291EC", Offset = "0x9291EC", VA = "0x9291EC")]
		private void MoveGrabbedObject(bool forceTeleport = false)
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x92841C", Offset = "0x92841C", VA = "0x92841C")]
		private void GrabEnd()
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x929FC4", Offset = "0x929FC4", VA = "0x929FC4")]
		private void GrabbableRelease(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x929E38", Offset = "0x929E38", VA = "0x929E38")]
		private void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x929EF8", Offset = "0x929EF8", VA = "0x929EF8")]
		private void OffhandGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x92A0FC", Offset = "0x92A0FC", VA = "0x92A0FC")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000EB8")]
		Default,
		[Token(Token = "0x4000EB9")]
		Generic,
		[Token(Token = "0x4000EBA")]
		PingPongBall
	}
	[Token(Token = "0x20002DA")]
	public enum HandPoseAttachType
	{
		[Token(Token = "0x4000EBC")]
		None,
		[Token(Token = "0x4000EBD")]
		Snap,
		[Token(Token = "0x4000EBE")]
		SnapPosition
	}
	[Token(Token = "0x20002DB")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HandPoseAttachType m_attachType;

		[Token(Token = "0x170001DB")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001093")]
			[Address(RVA = "0x92A248", Offset = "0x92A248", VA = "0x92A248")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DC")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001094")]
			[Address(RVA = "0x92A250", Offset = "0x92A250", VA = "0x92A250")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DD")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001095")]
			[Address(RVA = "0x92A258", Offset = "0x92A258", VA = "0x92A258")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x170001DE")]
		public HandPoseAttachType AttachType
		{
			[Token(Token = "0x6001096")]
			[Address(RVA = "0x92A260", Offset = "0x92A260", VA = "0x92A260")]
			get
			{
				return default(HandPoseAttachType);
			}
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x92A268", Offset = "0x92A268", VA = "0x92A268")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class VelocityTracker : MonoBehaviour
	{
		[Token(Token = "0x20002DD")]
		private struct Sample
		{
			[Token(Token = "0x4000ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float Time;

			[Token(Token = "0x4000ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float SquaredLinearSpeed;

			[Token(Token = "0x4000ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 LinearVelocity;

			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 AngularVelocity;
		}

		[Token(Token = "0x4000EC3")]
		public const float WINDOW_TIME = 1f / 90f;

		[Token(Token = "0x4000EC4")]
		public const float WINDOW_EPSILON = 0.0001f;

		[Token(Token = "0x4000EC5")]
		public const float LINEAR_SPEED_WINDOW = 4f / 45f;

		[Token(Token = "0x4000EC6")]
		public const float LINEAR_VELOCITY_WINDOW = 2f / 45f;

		[Token(Token = "0x4000EC7")]
		public const float ANGULAR_VELOCITY_WINDOW = 1f / 45f;

		[Token(Token = "0x4000EC8")]
		public const int MAX_SAMPLES = 45;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_showGizmos;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_index;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_count;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Sample[] m_samples;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_position;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion m_rotation;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_frameLinearVelocity;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_frameAngularVelocity;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_trackedLinearVelocity;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_trackedAngularVelocity;

		[Token(Token = "0x170001DF")]
		public Vector3 FrameAngularVelocity
		{
			[Token(Token = "0x6001098")]
			[Address(RVA = "0x92A270", Offset = "0x92A270", VA = "0x92A270")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001E0")]
		public Vector3 FrameLinearVelocity
		{
			[Token(Token = "0x6001099")]
			[Address(RVA = "0x92A27C", Offset = "0x92A27C", VA = "0x92A27C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001E1")]
		public Vector3 TrackedAngularVelocity
		{
			[Token(Token = "0x600109A")]
			[Address(RVA = "0x92A288", Offset = "0x92A288", VA = "0x92A288")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001E2")]
		public Vector3 TrackedLinearVelocity
		{
			[Token(Token = "0x600109B")]
			[Address(RVA = "0x92A294", Offset = "0x92A294", VA = "0x92A294")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x92A2A0", Offset = "0x92A2A0", VA = "0x92A2A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x92A2F0", Offset = "0x92A2F0", VA = "0x92A2F0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x92AAC0", Offset = "0x92AAC0", VA = "0x92AAC0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x92A510", Offset = "0x92A510", VA = "0x92A510")]
		private Vector3 DeltaRotation(Quaternion final, Quaternion initial)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x92A648", Offset = "0x92A648", VA = "0x92A648")]
		private void AddSample(Vector3 deltaPosition, Vector3 deltaRotation)
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x92AB20", Offset = "0x92AB20", VA = "0x92AB20")]
		private int Count()
		{
			return default(int);
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x92AB48", Offset = "0x92AB48", VA = "0x92AB48")]
		private int IndexPrev(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x92AB58", Offset = "0x92AB58", VA = "0x92AB58")]
		private bool IsSampleValid(int index, float windowSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x92A99C", Offset = "0x92A99C", VA = "0x92A99C")]
		private Vector3 ComputeAverageAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x92A770", Offset = "0x92A770", VA = "0x92A770")]
		private Vector3 ComputeAverageLinearVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x92A894", Offset = "0x92A894", VA = "0x92A894")]
		private float ComputeMaxLinearSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x92ABDC", Offset = "0x92ABDC", VA = "0x92ABDC")]
		public VelocityTracker()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class TapeMeasure : MonoBehaviour
	{
		[Token(Token = "0x20002DF")]
		private enum TapeState
		{
			[Token(Token = "0x4000EE9")]
			Retracted,
			[Token(Token = "0x4000EEA")]
			Retracting,
			[Token(Token = "0x4000EEB")]
			Locked
		}

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OVRInput.Controller controller;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject tapeAnchor;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tape;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject tapeBack;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public OVRCameraRig rig;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRHapticsClip m_proceduralClip;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRHaptics.OVRHapticsChannel m_hapticsChannel;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip m_clipA;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip m_clipB;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private OVRHapticsClip m_hapticsClipA;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private OVRHapticsClip m_hapticsClipB;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_prevButton1;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_prevButton2;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private TapeState state;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float prevHapticsMag;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 lockedPos;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private System.Random rand;

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x92AD50", Offset = "0x92AD50", VA = "0x92AD50")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x92ADB8", Offset = "0x92ADB8", VA = "0x92ADB8")]
		private void Start()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x92AF30", Offset = "0x92AF30", VA = "0x92AF30")]
		private void Update()
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x92B7E0", Offset = "0x92B7E0", VA = "0x92B7E0")]
		public TapeMeasure()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class ColorGrabbable : Grabbable
	{
		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x92B8A0", Offset = "0x92B8A0", VA = "0x92B8A0", Slot = "4")]
		public override void GrabBegin(Hand hand, Collider grabbableCollider)
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x92BA18", Offset = "0x92BA18", VA = "0x92BA18", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x92BA38", Offset = "0x92BA38", VA = "0x92BA38", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x92B924", Offset = "0x92B924", VA = "0x92B924")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x92BB10", Offset = "0x92BB10", VA = "0x92BB10")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class TouchVisualizer : MonoBehaviour
	{
		[Token(Token = "0x20002E2")]
		private enum DisplayMode
		{
			[Token(Token = "0x4000EF4")]
			Hand,
			[Token(Token = "0x4000EF5")]
			Controller,
			[Token(Token = "0x4000EF6")]
			HandAndController,
			[Token(Token = "0x4000EF7")]
			Count
		}

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DisplayMode m_displayMode;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Hand m_hand;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TouchController m_controller;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_wasButtonDown;

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x92BB7C", Offset = "0x92BB7C", VA = "0x92BB7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x92BBE0", Offset = "0x92BBE0", VA = "0x92BBE0")]
		private void Update()
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x92BB84", Offset = "0x92BB84", VA = "0x92BB84")]
		private void ModeChange(DisplayMode nextDisplayMode)
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x92BD28", Offset = "0x92BD28", VA = "0x92BD28")]
		public TouchVisualizer()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20002E3")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x170001E3")]
		public bool Highlight
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0x92BD38", Offset = "0x92BD38", VA = "0x92BD38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x92BD40", Offset = "0x92BD40", VA = "0x92BD40")]
			set
			{
			}
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x92BD4C", Offset = "0x92BD4C", VA = "0x92BD4C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x92BEEC", Offset = "0x92BEEC", VA = "0x92BEEC", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x92BF08", Offset = "0x92BF08", VA = "0x92BF08", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x92BF24", Offset = "0x92BF24", VA = "0x92BF24")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x92BDF8", Offset = "0x92BDF8", VA = "0x92BDF8")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x92C1D8", Offset = "0x92C1D8", VA = "0x92C1D8")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170001E4")]
		public bool InRange
		{
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x92C250", Offset = "0x92C250", VA = "0x92C250")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x92C258", Offset = "0x92C258", VA = "0x92C258")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public bool Targeted
		{
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x92C3C8", Offset = "0x92C3C8", VA = "0x92C3C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x92C3D0", Offset = "0x92C3D0", VA = "0x92C3D0")]
			set
			{
			}
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x92C3DC", Offset = "0x92C3DC", VA = "0x92C3DC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x92C264", Offset = "0x92C264", VA = "0x92C264")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x92C540", Offset = "0x92C540", VA = "0x92C540")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	[RequireComponent(typeof(Rigidbody))]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170001E6")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60010C6")]
			[Address(RVA = "0x92C548", Offset = "0x92C548", VA = "0x92C548")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x92C550", Offset = "0x92C550", VA = "0x92C550")]
			set
			{
			}
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x92C56C", Offset = "0x92C56C", VA = "0x92C56C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x92C778", Offset = "0x92C778", VA = "0x92C778", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x92D064", Offset = "0x92D064", VA = "0x92D064", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x92D5CC", Offset = "0x92D5CC", VA = "0x92D5CC", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x92D9DC", Offset = "0x92D9DC", VA = "0x92D9DC")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x92C9A0", Offset = "0x92C9A0", VA = "0x92C9A0")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x92DAC8", Offset = "0x92DAC8", VA = "0x92DAC8")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x92DEC8", Offset = "0x92DEC8", VA = "0x92DEC8", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x92DEE0", Offset = "0x92DEE0", VA = "0x92DEE0", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x92DEE8", Offset = "0x92DEE8", VA = "0x92DEE8")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20002E7")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000F16")]
			Disabled,
			[Token(Token = "0x4000F17")]
			Enabled,
			[Token(Token = "0x4000F18")]
			Targeted
		}

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x877C74", Offset = "0x877C74", VA = "0x877C74")]
		private void Start()
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x877CDC", Offset = "0x877CDC", VA = "0x877CDC")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x877D68", Offset = "0x877D68", VA = "0x877D68")]
		private void Update()
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x877DA0", Offset = "0x877DA0", VA = "0x877DA0")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x877DA8", Offset = "0x877DA8", VA = "0x877DA8")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x877E54", Offset = "0x877E54", VA = "0x877E54")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x877F00", Offset = "0x877F00", VA = "0x877F00")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x877F08", Offset = "0x877F08", VA = "0x877F08")]
		private void Start()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x877FF4", Offset = "0x877FF4", VA = "0x877FF4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x878000", Offset = "0x878000", VA = "0x878000")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x87800C", Offset = "0x87800C", VA = "0x87800C")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x878014", Offset = "0x878014", VA = "0x878014")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x878064", Offset = "0x878064", VA = "0x878064")]
		private void Update()
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x87843C", Offset = "0x87843C", VA = "0x87843C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x878528", Offset = "0x878528", VA = "0x878528")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x878068", Offset = "0x878068", VA = "0x878068")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x878614", Offset = "0x878614", VA = "0x878614")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20002EC")]
		public enum ContactTest
		{
			[Token(Token = "0x4000F2F")]
			PerpenTest,
			[Token(Token = "0x4000F30")]
			BackwardsPress
		}

		[Token(Token = "0x4000F20")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000F21")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170001E7")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60010E3")]
			[Address(RVA = "0x8786EC", Offset = "0x8786EC", VA = "0x8786EC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E8")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60010E4")]
			[Address(RVA = "0x8786F4", Offset = "0x8786F4", VA = "0x8786F4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001E9")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x60010E5")]
			[Address(RVA = "0x878700", Offset = "0x878700", VA = "0x878700")]
			[CompilerGenerated]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x60010E6")]
			[Address(RVA = "0x878708", Offset = "0x878708", VA = "0x878708")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x878710", Offset = "0x878710", VA = "0x878710", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x878860", Offset = "0x878860", VA = "0x878860")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x878A68", Offset = "0x878A68", VA = "0x878A68", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x87902C", Offset = "0x87902C", VA = "0x87902C")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x879194", Offset = "0x879194", VA = "0x879194")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x878F50", Offset = "0x878F50", VA = "0x878F50")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x8792A0", Offset = "0x8792A0", VA = "0x8792A0")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x8793AC", Offset = "0x8793AC", VA = "0x8793AC")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x879434", Offset = "0x879434", VA = "0x879434")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x170001EA")]
		public Collider Collider
		{
			[Token(Token = "0x60010F0")]
			[Address(RVA = "0x879558", Offset = "0x879558", VA = "0x879558", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60010F1")]
			[Address(RVA = "0x879560", Offset = "0x879560", VA = "0x879560")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60010F2")]
			[Address(RVA = "0x879568", Offset = "0x879568", VA = "0x879568", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60010F3")]
			[Address(RVA = "0x879570", Offset = "0x879570", VA = "0x879570")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0x879578", Offset = "0x879578", VA = "0x879578", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x8795C8", Offset = "0x8795C8", VA = "0x8795C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x87965C", Offset = "0x87965C", VA = "0x87965C")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public interface ColliderZone
	{
		[Token(Token = "0x170001ED")]
		Collider Collider
		{
			[Token(Token = "0x60010F7")]
			get;
		}

		[Token(Token = "0x170001EE")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60010F8")]
			get;
		}

		[Token(Token = "0x170001EF")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60010F9")]
			get;
		}
	}
	[Token(Token = "0x20002EF")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x8789BC", Offset = "0x8789BC", VA = "0x8789BC")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public enum InteractionType
	{
		[Token(Token = "0x4000F39")]
		Enter,
		[Token(Token = "0x4000F3A")]
		Stay,
		[Token(Token = "0x4000F3B")]
		Exit
	}
	[Token(Token = "0x20002F1")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20002F2")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000F4D")]
			Mesh,
			[Token(Token = "0x4000F4E")]
			Skeleton,
			[Token(Token = "0x4000F4F")]
			Both
		}

		[Token(Token = "0x20002F3")]
		[CompilerGenerated]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170001FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600111C")]
				[Address(RVA = "0x87AABC", Offset = "0x87AABC", VA = "0x87AABC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600111E")]
				[Address(RVA = "0x87AB04", Offset = "0x87AB04", VA = "0x87AB04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001119")]
			[Address(RVA = "0x87A0B4", Offset = "0x87A0B4", VA = "0x87A0B4")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x600111A")]
			[Address(RVA = "0x87A89C", Offset = "0x87A89C", VA = "0x87A89C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600111B")]
			[Address(RVA = "0x87A8A0", Offset = "0x87A8A0", VA = "0x87A8A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600111D")]
			[Address(RVA = "0x87AAC4", Offset = "0x87AAC4", VA = "0x87AAC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F3C")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x170001F0")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60010FB")]
			[Address(RVA = "0x879664", Offset = "0x879664", VA = "0x879664")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010FC")]
			[Address(RVA = "0x879690", Offset = "0x879690", VA = "0x879690")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60010FD")]
			[Address(RVA = "0x8796F4", Offset = "0x8796F4", VA = "0x8796F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010FE")]
			[Address(RVA = "0x879720", Offset = "0x879720", VA = "0x879720")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60010FF")]
			[Address(RVA = "0x879784", Offset = "0x879784", VA = "0x879784")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001100")]
			[Address(RVA = "0x8797B0", Offset = "0x8797B0", VA = "0x8797B0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001101")]
			[Address(RVA = "0x879814", Offset = "0x879814", VA = "0x879814")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001102")]
			[Address(RVA = "0x879840", Offset = "0x879840", VA = "0x879840")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001103")]
			[Address(RVA = "0x8798A4", Offset = "0x8798A4", VA = "0x8798A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001104")]
			[Address(RVA = "0x8798D0", Offset = "0x8798D0", VA = "0x8798D0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001105")]
			[Address(RVA = "0x879934", Offset = "0x879934", VA = "0x879934")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001106")]
			[Address(RVA = "0x87995C", Offset = "0x87995C", VA = "0x87995C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001107")]
			[Address(RVA = "0x8799BC", Offset = "0x8799BC", VA = "0x8799BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001108")]
			[Address(RVA = "0x8799E4", Offset = "0x8799E4", VA = "0x8799E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001109")]
			[Address(RVA = "0x879A44", Offset = "0x879A44", VA = "0x879A44")]
			get
			{
				return null;
			}
			[Token(Token = "0x600110A")]
			[Address(RVA = "0x879A6C", Offset = "0x879A6C", VA = "0x879A6C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x600110B")]
			[Address(RVA = "0x879ACC", Offset = "0x879ACC", VA = "0x879ACC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600110C")]
			[Address(RVA = "0x879AF4", Offset = "0x879AF4", VA = "0x879AF4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x600110D")]
			[Address(RVA = "0x879B54", Offset = "0x879B54", VA = "0x879B54")]
			get
			{
				return null;
			}
			[Token(Token = "0x600110E")]
			[Address(RVA = "0x879B7C", Offset = "0x879B7C", VA = "0x879B7C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public static HandsManager Instance
		{
			[Token(Token = "0x600110F")]
			[Address(RVA = "0x879BDC", Offset = "0x879BDC", VA = "0x879BDC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001110")]
			[Address(RVA = "0x879C24", Offset = "0x879C24", VA = "0x879C24")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x879C7C", Offset = "0x879C7C", VA = "0x879C7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x87A038", Offset = "0x87A038", VA = "0x87A038")]
		private void Update()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x879FC4", Offset = "0x879FC4", VA = "0x879FC4")]
		[IteratorStateMachine(typeof(<FindSkeletonVisualGameObjects>d__52))]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x87A0DC", Offset = "0x87A0DC", VA = "0x87A0DC")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x87A1A0", Offset = "0x87A1A0", VA = "0x87A1A0")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x87A370", Offset = "0x87A370", VA = "0x87A370")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x87A5D4", Offset = "0x87A5D4", VA = "0x87A5D4")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x87A734", Offset = "0x87A734", VA = "0x87A734")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002F5")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x87B154", Offset = "0x87B154", VA = "0x87B154")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170001FD")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x600111F")]
			[Address(RVA = "0x87AB0C", Offset = "0x87AB0C", VA = "0x87AB0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6001120")]
			[Address(RVA = "0x87AB14", Offset = "0x87AB14", VA = "0x87AB14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6001121")]
			[Address(RVA = "0x87AB1C", Offset = "0x87AB1C", VA = "0x87AB1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001122")]
			[Address(RVA = "0x87AB24", Offset = "0x87AB24", VA = "0x87AB24", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001123")]
			[Address(RVA = "0x87AB2C", Offset = "0x87AB2C", VA = "0x87AB2C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001124")]
			[Address(RVA = "0x87ABDC", Offset = "0x87ABDC", VA = "0x87ABDC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001126")]
			[Address(RVA = "0x87ACA8", Offset = "0x87ACA8", VA = "0x87ACA8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001127")]
			[Address(RVA = "0x87AD58", Offset = "0x87AD58", VA = "0x87AD58")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001129")]
			[Address(RVA = "0x87AE24", Offset = "0x87AE24", VA = "0x87AE24")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600112A")]
			[Address(RVA = "0x87AED4", Offset = "0x87AED4", VA = "0x87AED4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x87AC8C", Offset = "0x87AC8C", VA = "0x87AC8C", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x87AE08", Offset = "0x87AE08", VA = "0x87AE08", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x87AF84", Offset = "0x87AF84", VA = "0x87AF84", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600112C")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x87880C", Offset = "0x87880C", VA = "0x87880C", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x87B050", Offset = "0x87B050", VA = "0x87B050", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x879550", Offset = "0x879550", VA = "0x879550")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000F5B")]
		None,
		[Token(Token = "0x4000F5C")]
		Proximity,
		[Token(Token = "0x4000F5D")]
		Contact,
		[Token(Token = "0x4000F5E")]
		Action
	}
	[Token(Token = "0x20002F7")]
	public enum InteractableState
	{
		[Token(Token = "0x4000F60")]
		Default,
		[Token(Token = "0x4000F61")]
		ProximityState,
		[Token(Token = "0x4000F62")]
		ContactState,
		[Token(Token = "0x4000F63")]
		ActionState
	}
	[Token(Token = "0x20002F8")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x8790DC", Offset = "0x8790DC", VA = "0x8790DC")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000201")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001132")]
			[Address(RVA = "0x87B19C", Offset = "0x87B19C", VA = "0x87B19C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x87AFA0", Offset = "0x87AFA0", VA = "0x87AFA0")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x87B0A4", Offset = "0x87B0A4", VA = "0x87B0A4")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x87B1F4", Offset = "0x87B1F4", VA = "0x87B1F4")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20002FB")]
		[CompilerGenerated]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000202")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600113F")]
				[Address(RVA = "0x87B9B4", Offset = "0x87B9B4", VA = "0x87B9B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000203")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001141")]
				[Address(RVA = "0x87B9FC", Offset = "0x87B9FC", VA = "0x87B9FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600113B")]
			[Address(RVA = "0x87B39C", Offset = "0x87B39C", VA = "0x87B39C")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600113C")]
			[Address(RVA = "0x87B4D8", Offset = "0x87B4D8", VA = "0x87B4D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600113D")]
			[Address(RVA = "0x87B4F4", Offset = "0x87B4F4", VA = "0x87B4F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600113E")]
			[Address(RVA = "0x87B964", Offset = "0x87B964", VA = "0x87B964")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001140")]
			[Address(RVA = "0x87B9BC", Offset = "0x87B9BC", VA = "0x87B9BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x87B294", Offset = "0x87B294", VA = "0x87B294")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x87B300", Offset = "0x87B300", VA = "0x87B300")]
		[IteratorStateMachine(typeof(<AttachToolsToHands>d__3))]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x87B3C4", Offset = "0x87B3C4", VA = "0x87B3C4")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x87B4D0", Offset = "0x87B4D0", VA = "0x87B4D0")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000204")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001142")]
			[Address(RVA = "0x87BA04", Offset = "0x87BA04", VA = "0x87BA04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x87BB60", Offset = "0x87BB60", VA = "0x87BB60")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x87BBFC", Offset = "0x87BBFC", VA = "0x87BBFC")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x87BC98", Offset = "0x87BC98", VA = "0x87BC98")]
		private void Update()
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x87BF34", Offset = "0x87BF34", VA = "0x87BF34")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x87BF70", Offset = "0x87BF70", VA = "0x87BF70")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x87C248", Offset = "0x87C248", VA = "0x87C248")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x87C450", Offset = "0x87C450", VA = "0x87C450")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20002FE")]
		[CompilerGenerated]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000209")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600115B")]
				[Address(RVA = "0x87D620", Offset = "0x87D620", VA = "0x87D620", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600115D")]
				[Address(RVA = "0x87D668", Offset = "0x87D668", VA = "0x87D668", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001158")]
			[Address(RVA = "0x87C6EC", Offset = "0x87C6EC", VA = "0x87C6EC")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001159")]
			[Address(RVA = "0x87D190", Offset = "0x87D190", VA = "0x87D190", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600115A")]
			[Address(RVA = "0x87D194", Offset = "0x87D194", VA = "0x87D194", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600115C")]
			[Address(RVA = "0x87D628", Offset = "0x87D628", VA = "0x87D628", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F7C")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000205")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600114A")]
			[Address(RVA = "0x87C558", Offset = "0x87C558", VA = "0x87C558", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000206")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600114B")]
			[Address(RVA = "0x87C560", Offset = "0x87C560", VA = "0x87C560", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000207")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600114C")]
			[Address(RVA = "0x87C568", Offset = "0x87C568", VA = "0x87C568", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000208")]
		public override bool EnableState
		{
			[Token(Token = "0x600114D")]
			[Address(RVA = "0x87C570", Offset = "0x87C570", VA = "0x87C570", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600114E")]
			[Address(RVA = "0x87C598", Offset = "0x87C598", VA = "0x87C598", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x87C5C8", Offset = "0x87C5C8", VA = "0x87C5C8", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x87C678", Offset = "0x87C678", VA = "0x87C678")]
		[IteratorStateMachine(typeof(<AttachTriggerLogic>d__21))]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x87C714", Offset = "0x87C714", VA = "0x87C714")]
		private void Update()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x87C994", Offset = "0x87C994", VA = "0x87C994")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x87CB50", Offset = "0x87CB50", VA = "0x87CB50")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x87CC38", Offset = "0x87CC38", VA = "0x87CC38", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x87CFCC", Offset = "0x87CFCC", VA = "0x87CFCC", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x87CFD0", Offset = "0x87CFD0", VA = "0x87CFD0", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x87CFD4", Offset = "0x87CFD4", VA = "0x87CFD4")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x1700020B")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600115E")]
			[Address(RVA = "0x87D670", Offset = "0x87D670", VA = "0x87D670", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600115F")]
			[Address(RVA = "0x87D678", Offset = "0x87D678", VA = "0x87D678")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public bool EnableState
		{
			[Token(Token = "0x6001160")]
			[Address(RVA = "0x87D680", Offset = "0x87D680", VA = "0x87D680", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001161")]
			[Address(RVA = "0x87D69C", Offset = "0x87D69C", VA = "0x87D69C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001162")]
			[Address(RVA = "0x87D6BC", Offset = "0x87D6BC", VA = "0x87D6BC", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001163")]
			[Address(RVA = "0x87D6C4", Offset = "0x87D6C4", VA = "0x87D6C4", Slot = "9")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public float SphereRadius
		{
			[Token(Token = "0x6001164")]
			[Address(RVA = "0x87D6D0", Offset = "0x87D6D0", VA = "0x87D6D0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001165")]
			[Address(RVA = "0x87D6D8", Offset = "0x87D6D8", VA = "0x87D6D8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x87D6E0", Offset = "0x87D6E0", VA = "0x87D6E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x87D71C", Offset = "0x87D71C", VA = "0x87D71C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x87D720", Offset = "0x87D720", VA = "0x87D720")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000300")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000F8F")]
		None = 0,
		[Token(Token = "0x4000F90")]
		Ray = 1,
		[Token(Token = "0x4000F91")]
		Poke = 4,
		[Token(Token = "0x4000F92")]
		All = -1
	}
	[Token(Token = "0x2000301")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000F94")]
		Inactive,
		[Token(Token = "0x4000F95")]
		PrimaryInputDown,
		[Token(Token = "0x4000F96")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000F97")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000302")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x87CF78", Offset = "0x87CF78", VA = "0x87CF78")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000303")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x1700020F")]
		public Transform ToolTransform
		{
			[Token(Token = "0x600116A")]
			[Address(RVA = "0x87942C", Offset = "0x87942C", VA = "0x87942C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x600116B")]
			[Address(RVA = "0x87D728", Offset = "0x87D728", VA = "0x87D728")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600116C")]
			[Address(RVA = "0x87D730", Offset = "0x87D730", VA = "0x87D730")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x600116D")]
			get;
		}

		[Token(Token = "0x17000212")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x600116E")]
			get;
		}

		[Token(Token = "0x17000213")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x600116F")]
			get;
		}

		[Token(Token = "0x17000214")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001170")]
			[Address(RVA = "0x87D73C", Offset = "0x87D73C", VA = "0x87D73C")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001171")]
			[Address(RVA = "0x87D748", Offset = "0x87D748", VA = "0x87D748")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001172")]
			[Address(RVA = "0x87D754", Offset = "0x87D754", VA = "0x87D754")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001173")]
			[Address(RVA = "0x87D760", Offset = "0x87D760", VA = "0x87D760")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001178")]
			get;
			[Token(Token = "0x6001179")]
			set;
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x87D76C", Offset = "0x87D76C", VA = "0x87D76C")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001175")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6001176")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001177")]
		public abstract void DeFocus();

		[Token(Token = "0x600117A")]
		public abstract void Initialize();

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x87C3B8", Offset = "0x87C3B8", VA = "0x87C3B8")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x87C400", Offset = "0x87C400", VA = "0x87C400")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x87D774", Offset = "0x87D774", VA = "0x87D774", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x87DA3C", Offset = "0x87DA3C", VA = "0x87DA3C", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x87CFE8", Offset = "0x87CFE8", VA = "0x87CFE8")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000217")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001180")]
			get;
		}

		[Token(Token = "0x17000218")]
		bool EnableState
		{
			[Token(Token = "0x6001182")]
			get;
			[Token(Token = "0x6001183")]
			set;
		}

		[Token(Token = "0x17000219")]
		bool ToolActivateState
		{
			[Token(Token = "0x6001184")]
			get;
			[Token(Token = "0x6001185")]
			set;
		}

		[Token(Token = "0x6001181")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000305")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000306")]
		private enum PinchState
		{
			[Token(Token = "0x4000FA8")]
			None,
			[Token(Token = "0x4000FA9")]
			PinchDown,
			[Token(Token = "0x4000FAA")]
			PinchStay,
			[Token(Token = "0x4000FAB")]
			PinchUp
		}

		[Token(Token = "0x4000FA4")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700021A")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6001186")]
			[Address(RVA = "0x87E2D8", Offset = "0x87E2D8", VA = "0x87E2D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021B")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001187")]
			[Address(RVA = "0x87E354", Offset = "0x87E354", VA = "0x87E354")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021C")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001188")]
			[Address(RVA = "0x87E3D0", Offset = "0x87E3D0", VA = "0x87E3D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x87E44C", Offset = "0x87E44C", VA = "0x87E44C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x87E474", Offset = "0x87E474", VA = "0x87E474")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000FAC")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000FAD")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000FAE")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000FAF")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000FB0")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[Range(0f, 45f)]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700021D")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600118B")]
			[Address(RVA = "0x87E5EC", Offset = "0x87E5EC", VA = "0x87E5EC", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700021E")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600118C")]
			[Address(RVA = "0x87E5F4", Offset = "0x87E5F4", VA = "0x87E5F4", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700021F")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600118D")]
			[Address(RVA = "0x87E650", Offset = "0x87E650", VA = "0x87E650", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000220")]
		public override bool EnableState
		{
			[Token(Token = "0x600118E")]
			[Address(RVA = "0x87E658", Offset = "0x87E658", VA = "0x87E658", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600118F")]
			[Address(RVA = "0x87E698", Offset = "0x87E698", VA = "0x87E698", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x87E708", Offset = "0x87E708", VA = "0x87E708", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x87E75C", Offset = "0x87E75C", VA = "0x87E75C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x87E7E8", Offset = "0x87E7E8", VA = "0x87E7E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x87EA8C", Offset = "0x87EA8C", VA = "0x87EA8C")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x87EB08", Offset = "0x87EB08", VA = "0x87EB08", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x87EEFC", Offset = "0x87EEFC", VA = "0x87EEFC")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x87F098", Offset = "0x87F098", VA = "0x87F098")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x87F1B0", Offset = "0x87F1B0", VA = "0x87F1B0")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x87F4D4", Offset = "0x87F4D4", VA = "0x87F4D4")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x87F850", Offset = "0x87F850", VA = "0x87F850", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x87F928", Offset = "0x87F928", VA = "0x87F928", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x87F958", Offset = "0x87F958", VA = "0x87F958")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000FBC")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000FBD")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x17000221")]
		public bool EnableState
		{
			[Token(Token = "0x600119C")]
			[Address(RVA = "0x87E67C", Offset = "0x87E67C", VA = "0x87E67C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600119D")]
			[Address(RVA = "0x87E6B4", Offset = "0x87E6B4", VA = "0x87E6B4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600119E")]
			[Address(RVA = "0x87FA6C", Offset = "0x87FA6C", VA = "0x87FA6C", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600119F")]
			[Address(RVA = "0x87EA50", Offset = "0x87EA50", VA = "0x87EA50", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60011A1")]
			[Address(RVA = "0x87FC94", Offset = "0x87FC94", VA = "0x87FC94", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60011A2")]
			[Address(RVA = "0x87FC9C", Offset = "0x87FC9C", VA = "0x87FC9C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x87FA74", Offset = "0x87FA74", VA = "0x87FA74")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x87F888", Offset = "0x87F888", VA = "0x87F888", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x87FCA4", Offset = "0x87FCA4", VA = "0x87FCA4")]
		private void Update()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x87FF50", Offset = "0x87FF50", VA = "0x87FF50")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x87FFF8", Offset = "0x87FFF8", VA = "0x87FFF8")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000224")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x88005C", Offset = "0x88005C", VA = "0x88005C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x880064", Offset = "0x880064", VA = "0x880064")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x8800D0", Offset = "0x8800D0", VA = "0x8800D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011AA")]
			[Address(RVA = "0x8800D8", Offset = "0x8800D8", VA = "0x8800D8")]
			set
			{
			}
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x880134", Offset = "0x880134", VA = "0x880134")]
		private void Start()
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x8803D4", Offset = "0x8803D4", VA = "0x8803D4")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x8803E4", Offset = "0x8803E4", VA = "0x8803E4")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x8803F4", Offset = "0x8803F4", VA = "0x8803F4")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x8803FC", Offset = "0x8803FC", VA = "0x8803FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x880400", Offset = "0x880400", VA = "0x880400")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x88048C", Offset = "0x88048C", VA = "0x88048C")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x88051C", Offset = "0x88051C", VA = "0x88051C")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x8805AC", Offset = "0x8805AC", VA = "0x8805AC")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x880658", Offset = "0x880658", VA = "0x880658")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x880734", Offset = "0x880734", VA = "0x880734")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x880778", Offset = "0x880778", VA = "0x880778")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x8807D8", Offset = "0x8807D8", VA = "0x8807D8")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x880838", Offset = "0x880838", VA = "0x880838")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x880840", Offset = "0x880840", VA = "0x880840")]
		private void Start()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x880844", Offset = "0x880844", VA = "0x880844")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x880808", Offset = "0x880808", VA = "0x880808")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x880878", Offset = "0x880878", VA = "0x880878")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x200030D")]
		[CompilerGenerated]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000226")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011C5")]
				[Address(RVA = "0x880EF8", Offset = "0x880EF8", VA = "0x880EF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000227")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011C7")]
				[Address(RVA = "0x880F40", Offset = "0x880F40", VA = "0x880F40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011C2")]
			[Address(RVA = "0x880C70", Offset = "0x880C70", VA = "0x880C70")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60011C3")]
			[Address(RVA = "0x880D38", Offset = "0x880D38", VA = "0x880D38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011C4")]
			[Address(RVA = "0x880D3C", Offset = "0x880D3C", VA = "0x880D3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011C6")]
			[Address(RVA = "0x880F00", Offset = "0x880F00", VA = "0x880F00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FCD")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000FCE")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x880880", Offset = "0x880880", VA = "0x880880")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x880920", Offset = "0x880920", VA = "0x880920")]
		private void Update()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x880C30", Offset = "0x880C30", VA = "0x880C30")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x880BBC", Offset = "0x880BBC", VA = "0x880BBC")]
		[IteratorStateMachine(typeof(<LerpToHMD>d__13))]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x880C98", Offset = "0x880C98", VA = "0x880C98")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200030F")]
		public enum SelectionState
		{
			[Token(Token = "0x4000FE4")]
			Off,
			[Token(Token = "0x4000FE5")]
			Selected,
			[Token(Token = "0x4000FE6")]
			Highlighted
		}

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000228")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0x880F48", Offset = "0x880F48", VA = "0x880F48")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60011C9")]
			[Address(RVA = "0x880F50", Offset = "0x880F50", VA = "0x880F50")]
			set
			{
			}
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x8810A4", Offset = "0x8810A4", VA = "0x8810A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x881268", Offset = "0x881268", VA = "0x881268")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x880FC4", Offset = "0x880FC4", VA = "0x880FC4")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x881330", Offset = "0x881330", VA = "0x881330")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000311")]
		public enum SegmentType
		{
			[Token(Token = "0x4000FF5")]
			Straight,
			[Token(Token = "0x4000FF6")]
			LeftTurn,
			[Token(Token = "0x4000FF7")]
			RightTurn,
			[Token(Token = "0x4000FF8")]
			Switch
		}

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000FED")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000FEE")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000229")]
		public float StartDistance
		{
			[Token(Token = "0x60011CF")]
			[Address(RVA = "0x8813A0", Offset = "0x8813A0", VA = "0x8813A0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x8813A8", Offset = "0x8813A8", VA = "0x8813A8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public float GridSize
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x8813B0", Offset = "0x8813B0", VA = "0x8813B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x8813B8", Offset = "0x8813B8", VA = "0x8813B8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public int SubDivCount
		{
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x8813C0", Offset = "0x8813C0", VA = "0x8813C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011D4")]
			[Address(RVA = "0x8813C8", Offset = "0x8813C8", VA = "0x8813C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public SegmentType Type
		{
			[Token(Token = "0x60011D5")]
			[Address(RVA = "0x8813D0", Offset = "0x8813D0", VA = "0x8813D0")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x1700022D")]
		public Pose EndPose
		{
			[Token(Token = "0x60011D6")]
			[Address(RVA = "0x8813D8", Offset = "0x8813D8", VA = "0x8813D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022E")]
		public float Radius
		{
			[Token(Token = "0x60011D7")]
			[Address(RVA = "0x8817AC", Offset = "0x8817AC", VA = "0x8817AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700022F")]
		public float SegmentLength
		{
			[Token(Token = "0x60011D9")]
			[Address(RVA = "0x881434", Offset = "0x881434", VA = "0x881434")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x8817BC", Offset = "0x8817BC", VA = "0x8817BC")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x8817D4", Offset = "0x8817D4", VA = "0x8817D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x881474", Offset = "0x881474", VA = "0x881474")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x8817D8", Offset = "0x8817D8", VA = "0x8817D8")]
		private void Update()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x8817DC", Offset = "0x8817DC", VA = "0x8817DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x881838", Offset = "0x881838", VA = "0x881838")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x88216C", Offset = "0x88216C", VA = "0x88216C")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x8823F0", Offset = "0x8823F0", VA = "0x8823F0")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000313")]
		[CompilerGenerated]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400100A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400100B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400100C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x400100D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x400100E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000230")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011EF")]
				[Address(RVA = "0x882F14", Offset = "0x882F14", VA = "0x882F14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000231")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011F1")]
				[Address(RVA = "0x882F5C", Offset = "0x882F5C", VA = "0x882F5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011EC")]
			[Address(RVA = "0x882D48", Offset = "0x882D48", VA = "0x882D48")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60011ED")]
			[Address(RVA = "0x882D98", Offset = "0x882D98", VA = "0x882D98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011EE")]
			[Address(RVA = "0x882D9C", Offset = "0x882D9C", VA = "0x882D9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x882F1C", Offset = "0x882F1C", VA = "0x882F1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FF9")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000FFA")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x882550", Offset = "0x882550", VA = "0x882550")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x882608", Offset = "0x882608", VA = "0x882608")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x882698", Offset = "0x882698", VA = "0x882698")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x8827E0", Offset = "0x8827E0", VA = "0x8827E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x88296C", Offset = "0x88296C", VA = "0x88296C")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x882A7C", Offset = "0x882A7C", VA = "0x882A7C")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x882C80", Offset = "0x882C80", VA = "0x882C80")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x882B8C", Offset = "0x882B8C", VA = "0x882B8C")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x882BA0", Offset = "0x882BA0", VA = "0x882BA0")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x882CD4", Offset = "0x882CD4", VA = "0x882CD4")]
		[IteratorStateMachine(typeof(<ResetPosition>d__26))]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x882D70", Offset = "0x882D70", VA = "0x882D70")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000232")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x882F64", Offset = "0x882F64", VA = "0x882F64")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x882F74", Offset = "0x882F74", VA = "0x882F74", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x882F7C", Offset = "0x882F7C", VA = "0x882F7C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x8832AC", Offset = "0x8832AC", VA = "0x8832AC")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4001012")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001013")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000233")]
		public float Distance
		{
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0x8833A8", Offset = "0x8833A8", VA = "0x8833A8")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011F7")]
			[Address(RVA = "0x8833B0", Offset = "0x8833B0", VA = "0x8833B0")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public float Scale
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0x8833B8", Offset = "0x8833B8", VA = "0x8833B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011F9")]
			[Address(RVA = "0x8833C0", Offset = "0x8833C0", VA = "0x8833C0")]
			set
			{
			}
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x882F78", Offset = "0x882F78", VA = "0x882F78", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x8833C8", Offset = "0x8833C8", VA = "0x8833C8")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x882FB8", Offset = "0x882FB8", VA = "0x882FB8")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x8831C8", Offset = "0x8831C8", VA = "0x8831C8")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x60011FE")]
		public abstract void UpdatePosition();

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x88330C", Offset = "0x88330C", VA = "0x88330C")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000317")]
		[CompilerGenerated]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4001029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x400102A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x400102B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x400102C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x400102D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x400102E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x400102F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4001030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4001031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000235")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600120D")]
				[Address(RVA = "0x883C98", Offset = "0x883C98", VA = "0x883C98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000236")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600120F")]
				[Address(RVA = "0x883CE0", Offset = "0x883CE0", VA = "0x883CE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600120A")]
			[Address(RVA = "0x88390C", Offset = "0x88390C", VA = "0x88390C")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600120B")]
			[Address(RVA = "0x883A80", Offset = "0x883A80", VA = "0x883A80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600120C")]
			[Address(RVA = "0x883A84", Offset = "0x883A84", VA = "0x883A84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600120E")]
			[Address(RVA = "0x883CA0", Offset = "0x883CA0", VA = "0x883CA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x883538", Offset = "0x883538", VA = "0x883538")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x883594", Offset = "0x883594", VA = "0x883594")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x88366C", Offset = "0x88366C", VA = "0x88366C")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x8837C0", Offset = "0x8837C0", VA = "0x8837C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x8836C8", Offset = "0x8836C8", VA = "0x8836C8")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x883888", Offset = "0x883888", VA = "0x883888")]
		[IteratorStateMachine(typeof(<AnimateCrossing>d__15))]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x883934", Offset = "0x883934", VA = "0x883934")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x8839CC", Offset = "0x8839CC", VA = "0x8839CC")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x883A28", Offset = "0x883A28", VA = "0x883A28")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000319")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001050")]
			Start,
			[Token(Token = "0x4001051")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001052")]
			Stop
		}

		[Token(Token = "0x200031A")]
		[CompilerGenerated]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4001056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4001057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4001058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4001059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x400105A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x400105B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000237")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001222")]
				[Address(RVA = "0x884578", Offset = "0x884578", VA = "0x884578", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000238")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001224")]
				[Address(RVA = "0x8845C0", Offset = "0x8845C0", VA = "0x8845C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600121F")]
			[Address(RVA = "0x883F88", Offset = "0x883F88", VA = "0x883F88")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001220")]
			[Address(RVA = "0x884350", Offset = "0x884350", VA = "0x884350", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001221")]
			[Address(RVA = "0x884354", Offset = "0x884354", VA = "0x884354", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001223")]
			[Address(RVA = "0x884580", Offset = "0x884580", VA = "0x884580", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001032")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001033")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4001034")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4001035")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Range(0.2f, 2.7f)]
		protected float _initialSpeed;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x883CE8", Offset = "0x883CE8", VA = "0x883CE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x883E44", Offset = "0x883E44", VA = "0x883E44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x883E50", Offset = "0x883E50", VA = "0x883E50", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x880430", Offset = "0x880430", VA = "0x880430")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x883DBC", Offset = "0x883DBC", VA = "0x883DBC")]
		[IteratorStateMachine(typeof(<StartStopTrain>d__34))]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x883FB0", Offset = "0x883FB0", VA = "0x883FB0")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x883F28", Offset = "0x883F28", VA = "0x883F28")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x8804BC", Offset = "0x8804BC", VA = "0x8804BC")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x88054C", Offset = "0x88054C", VA = "0x88054C")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x8841C4", Offset = "0x8841C4", VA = "0x8841C4")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x8842B8", Offset = "0x8842B8", VA = "0x8842B8")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x8805DC", Offset = "0x8805DC", VA = "0x8805DC")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x880688", Offset = "0x880688", VA = "0x880688")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x880768", Offset = "0x880768", VA = "0x880768")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x8842F4", Offset = "0x8842F4", VA = "0x8842F4")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000239")]
		public float TrackLength
		{
			[Token(Token = "0x6001225")]
			[Address(RVA = "0x8845C8", Offset = "0x8845C8", VA = "0x8845C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001226")]
			[Address(RVA = "0x8845D0", Offset = "0x8845D0", VA = "0x8845D0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x8845D8", Offset = "0x8845D8", VA = "0x8845D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x883430", Offset = "0x883430", VA = "0x883430")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x8845DC", Offset = "0x8845DC", VA = "0x8845DC")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x8847D4", Offset = "0x8847D4", VA = "0x8847D4")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x8848B4", Offset = "0x8848B4", VA = "0x8848B4")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public class Pose
	{
		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x8824B8", Offset = "0x8824B8", VA = "0x8824B8")]
		public Pose()
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x8848D0", Offset = "0x8848D0", VA = "0x8848D0")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200031E")]
		[CompilerGenerated]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x1700023B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600123A")]
				[Address(RVA = "0x884EC4", Offset = "0x884EC4", VA = "0x884EC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600123C")]
				[Address(RVA = "0x884F0C", Offset = "0x884F0C", VA = "0x884F0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001237")]
			[Address(RVA = "0x884BAC", Offset = "0x884BAC", VA = "0x884BAC")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001238")]
			[Address(RVA = "0x884D20", Offset = "0x884D20", VA = "0x884D20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001239")]
			[Address(RVA = "0x884D24", Offset = "0x884D24", VA = "0x884D24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600123B")]
			[Address(RVA = "0x884ECC", Offset = "0x884ECC", VA = "0x884ECC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200031F")]
		[CompilerGenerated]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x400107A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x400107B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x1700023D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001240")]
				[Address(RVA = "0x884FE8", Offset = "0x884FE8", VA = "0x884FE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001242")]
				[Address(RVA = "0x885030", Offset = "0x885030", VA = "0x885030", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600123D")]
			[Address(RVA = "0x884C88", Offset = "0x884C88", VA = "0x884C88")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600123E")]
			[Address(RVA = "0x884F14", Offset = "0x884F14", VA = "0x884F14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600123F")]
			[Address(RVA = "0x884F18", Offset = "0x884F18", VA = "0x884F18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001241")]
			[Address(RVA = "0x884FF0", Offset = "0x884FF0", VA = "0x884FF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001065")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700023A")]
		public bool IsMoving
		{
			[Token(Token = "0x600122E")]
			[Address(RVA = "0x884934", Offset = "0x884934", VA = "0x884934")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600122F")]
			[Address(RVA = "0x88493C", Offset = "0x88493C", VA = "0x88493C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x884948", Offset = "0x884948", VA = "0x884948")]
		private void Start()
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x884978", Offset = "0x884978", VA = "0x884978")]
		private void Update()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x884AB8", Offset = "0x884AB8", VA = "0x884AB8")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x884B28", Offset = "0x884B28", VA = "0x884B28")]
		[IteratorStateMachine(typeof(<LerpToSpeed>d__17))]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x884BD4", Offset = "0x884BD4", VA = "0x884BD4")]
		[IteratorStateMachine(typeof(<PlaySoundDelayed>d__18))]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x884CB0", Offset = "0x884CB0", VA = "0x884CB0")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x884D18", Offset = "0x884D18", VA = "0x884D18")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x885038", Offset = "0x885038", VA = "0x885038")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x8850AC", Offset = "0x8850AC", VA = "0x8850AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x885174", Offset = "0x885174", VA = "0x885174")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x885284", Offset = "0x885284", VA = "0x885284")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x885300", Offset = "0x885300", VA = "0x885300")]
		private void Update()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x8853C8", Offset = "0x8853C8", VA = "0x8853C8")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001082")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001083")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001084")]
		EUDT_None,
		[Token(Token = "0x4001085")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000322")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000323")]
		[CompilerGenerated]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400109E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400109F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700023F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600125C")]
				[Address(RVA = "0x886A58", Offset = "0x886A58", VA = "0x886A58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000240")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600125E")]
				[Address(RVA = "0x886AA0", Offset = "0x886AA0", VA = "0x886AA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001259")]
			[Address(RVA = "0x8860E8", Offset = "0x8860E8", VA = "0x8860E8")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x600125A")]
			[Address(RVA = "0x88685C", Offset = "0x88685C", VA = "0x88685C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600125B")]
			[Address(RVA = "0x886860", Offset = "0x886860", VA = "0x886860", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600125D")]
			[Address(RVA = "0x886A60", Offset = "0x886A60", VA = "0x886A60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4001087")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4001088")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4001089")]
		private const string noneID = "NoneID";

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("App vs Compositor Comparison Settings")]
		public GameObject mainCamera;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Level Loading Sim Settings")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x8853D8", Offset = "0x8853D8", VA = "0x8853D8")]
		private void Start()
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x885C18", Offset = "0x885C18", VA = "0x885C18")]
		private void Update()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x885D40", Offset = "0x885D40", VA = "0x885D40")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x885E70", Offset = "0x885E70", VA = "0x885E70")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x885FA0", Offset = "0x885FA0", VA = "0x885FA0")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x885D20", Offset = "0x885D20", VA = "0x885D20")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x886074", Offset = "0x886074", VA = "0x886074")]
		[IteratorStateMachine(typeof(<WaitforOVROverlay>d__30))]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x886110", Offset = "0x886110", VA = "0x886110")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x885848", Offset = "0x885848", VA = "0x885848")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x886258", Offset = "0x886258", VA = "0x886258")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x886138", Offset = "0x886138", VA = "0x886138")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x8865E0", Offset = "0x8865E0", VA = "0x8865E0")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x8866CC", Offset = "0x8866CC", VA = "0x8866CC")]
		public OVROverlaySample()
		{
		}
	}
}
