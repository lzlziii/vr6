using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.IO.Compression;
using System.Linq;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using Amazon;
using Amazon.Kinesis;
using Amazon.Kinesis.Model;
using Amazon.Runtime;
using Array2DEditor;
using AttentionLab;
using AttentionLab.Audio;
using AttentionLab.Charts.UI;
using AttentionLab.DRM;
using AttentionLab.Enums;
using AttentionLab.Localization;
using AttentionLab.MiniGames;
using AttentionLab.REST;
using AttentionLab.REST.Data;
using AttentionLab.Rooms.Onboarding;
using AttentionLab.UI;
using AttentionLab.UI.Utils;
using AttentionLab.Utils;
using Il2CppDummyDll;
using LitJson;
using NaughtyAttributes;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Oculus.Platform;
using Oculus.Spatializer.Propagation;
using PathCreation.Examples;
using Pvr_UnitySDKAPI;
using TMPro;
using Unity.RemoteConfig;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.UI.Extensions;
using Valve.VR;
using Valve.VR.InteractionSystem;
using Viveport;
using Viveport.Internal;
using XRSpace.Platform.InputDevice;
using wvr;
using wvr.render;
using wvr.render.thread;
using wvr.render.utils;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class ConnectGearFXAnimator : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator _animator;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73E24", Offset = "0xB73E24")]
	private bool <IsActive>k__BackingField;

	[Token(Token = "0x17000001")]
	public bool IsActive
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0xD386E8", Offset = "0xD386E8", VA = "0xD386E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83404", Offset = "0xB83404")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000002")]
		[Address(RVA = "0xD386F0", Offset = "0xD386F0", VA = "0xD386F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83414", Offset = "0xB83414")]
		private set
		{
		}
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xD386FC", Offset = "0xD386FC", VA = "0xD386FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xD38754", Offset = "0xD38754", VA = "0xD38754")]
	public void PlayEffect()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xD387B8", Offset = "0xD387B8", VA = "0xD387B8")]
	public void EffectAnimation_Completed()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xD387C0", Offset = "0xD387C0", VA = "0xD387C0")]
	public ConnectGearFXAnimator()
	{
	}
}
[Token(Token = "0x2000003")]
public enum EHAND_PLATE
{
	[Token(Token = "0x4000004")]
	Left,
	[Token(Token = "0x4000005")]
	Right
}
[Serializable]
[Token(Token = "0x2000004")]
public class HideAndSeekLevelRules
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int flashlightConeSize;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int basePoints;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int numDistractors;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool robotInLowerPlaces;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool robotInMidPlaces;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool robotInHigherPlaces;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int secondsToHint;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float spawnPointsVariation;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x132194C", Offset = "0x132194C", VA = "0x132194C")]
	public HideAndSeekLevelRules()
	{
	}
}
[Token(Token = "0x2000005")]
public class SetController : MonoBehaviour
{
	[Token(Token = "0x200053E")]
	public enum Node
	{
		[Token(Token = "0x40021AC")]
		BehindCurtain,
		[Token(Token = "0x40021AD")]
		OnSet,
		[Token(Token = "0x40021AE")]
		Left,
		[Token(Token = "0x40021AF")]
		Right,
		[Token(Token = "0x40021B0")]
		Moving
	}

	[Token(Token = "0x200053F")]
	public enum Mode
	{
		[Token(Token = "0x40021B2")]
		DefaultMode,
		[Token(Token = "0x40021B3")]
		AlternateMode,
		[Token(Token = "0x40021B4")]
		Switching
	}

	[Token(Token = "0x2000540")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB724A4", Offset = "0xB724A4")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SetController <>4__this;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _on;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x6002846")]
		[Address(RVA = "0x10E15DC", Offset = "0x10E15DC", VA = "0x10E15DC")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6002847")]
		[Address(RVA = "0x10E1AFC", Offset = "0x10E1AFC", VA = "0x10E1AFC")]
		internal void <RevealCards>b__0()
		{
		}

		[Token(Token = "0x6002848")]
		[Address(RVA = "0x10E1BA0", Offset = "0x10E1BA0", VA = "0x10E1BA0")]
		internal void <RevealCards>b__1()
		{
		}
	}

	[Token(Token = "0x2000541")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB724B4", Offset = "0xB724B4")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SetController <>4__this;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action callback;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x6002849")]
		[Address(RVA = "0x10E1674", Offset = "0x10E1674", VA = "0x10E1674")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0x10E1BC0", Offset = "0x10E1BC0", VA = "0x10E1BC0")]
		internal void <MoveToCenter>b__0()
		{
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0x10E1C5C", Offset = "0x10E1C5C", VA = "0x10E1C5C")]
		internal void <MoveToCenter>b__1()
		{
		}
	}

	[Token(Token = "0x2000542")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB724C4", Offset = "0xB724C4")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SetController <>4__this;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action callback;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x600284C")]
		[Address(RVA = "0x10E167C", Offset = "0x10E167C", VA = "0x10E167C")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x600284D")]
		[Address(RVA = "0x10E1C78", Offset = "0x10E1C78", VA = "0x10E1C78")]
		internal void <MoveToSide>b__0()
		{
		}

		[Token(Token = "0x600284E")]
		[Address(RVA = "0x10E1D3C", Offset = "0x10E1D3C", VA = "0x10E1D3C")]
		internal void <MoveToSide>b__1()
		{
		}
	}

	[Token(Token = "0x2000543")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB724D4", Offset = "0xB724D4")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action callback;

		[Token(Token = "0x600284F")]
		[Address(RVA = "0x10E1684", Offset = "0x10E1684", VA = "0x10E1684")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0x10E1D58", Offset = "0x10E1D58", VA = "0x10E1D58")]
		internal void <SetMode>b__0()
		{
		}
	}

	[Token(Token = "0x2000544")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB724E4", Offset = "0xB724E4")]
	private sealed class <SetMode_Coroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetController <>4__this;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool alternateMode;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action callback;

		[Token(Token = "0x17000450")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002854")]
			[Address(RVA = "0x10E1FEC", Offset = "0x10E1FEC", VA = "0x10E1FEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000451")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002856")]
			[Address(RVA = "0x10E2058", Offset = "0x10E2058", VA = "0x10E2058", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0x10E171C", Offset = "0x10E171C", VA = "0x10E171C")]
		[DebuggerHidden]
		public <SetMode_Coroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0x10E1EF8", Offset = "0x10E1EF8", VA = "0x10E1EF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0x10E1EFC", Offset = "0x10E1EFC", VA = "0x10E1EFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002855")]
		[Address(RVA = "0x10E1FF4", Offset = "0x10E1FF4", VA = "0x10E1FF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000545")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB724F4", Offset = "0xB724F4")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action callback;

		[Token(Token = "0x6002857")]
		[Address(RVA = "0x10E1748", Offset = "0x10E1748", VA = "0x10E1748")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0x10E1D74", Offset = "0x10E1D74", VA = "0x10E1D74")]
		internal void <MoveTo>b__0()
		{
		}
	}

	[Token(Token = "0x2000546")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72504", Offset = "0xB72504")]
	private sealed class <MoveTo_Coroutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetController <>4__this;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int position;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action callback;

		[Token(Token = "0x17000452")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600285C")]
			[Address(RVA = "0x10E1E84", Offset = "0x10E1E84", VA = "0x10E1E84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000453")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600285E")]
			[Address(RVA = "0x10E1EF0", Offset = "0x10E1EF0", VA = "0x10E1EF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0x10E17DC", Offset = "0x10E17DC", VA = "0x10E17DC")]
		[DebuggerHidden]
		public <MoveTo_Coroutine>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0x10E1D90", Offset = "0x10E1D90", VA = "0x10E1D90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0x10E1D94", Offset = "0x10E1D94", VA = "0x10E1D94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0x10E1E8C", Offset = "0x10E1E8C", VA = "0x10E1E8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator _anim;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Node currentNode;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Mode currentMode;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _busy;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int _ringCardsShot;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int _centerCardsShot;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _cardsDestroyed;

	[Token(Token = "0x17000002")]
	private Animator _animator
	{
		[Token(Token = "0x6000008")]
		[Address(RVA = "0x10E0CE8", Offset = "0x10E0CE8", VA = "0x10E0CE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000003")]
	public bool isBusy
	{
		[Token(Token = "0x6000009")]
		[Address(RVA = "0x10E0D80", Offset = "0x10E0D80", VA = "0x10E0D80")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x10E0D88", Offset = "0x10E0D88", VA = "0x10E0D88")]
	public bool IsRevealingCards()
	{
		return default(bool);
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x10E0DB8", Offset = "0x10E0DB8", VA = "0x10E0DB8")]
	public void HideRobot()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x10E0E78", Offset = "0x10E0E78", VA = "0x10E0E78")]
	public void Intro(bool comesFromBehindCurtain)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x10E10D8", Offset = "0x10E10D8", VA = "0x10E10D8")]
	public void Idle()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x10E1260", Offset = "0x10E1260", VA = "0x10E1260")]
	public void ShootCardRing()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x10E13C8", Offset = "0x10E13C8", VA = "0x10E13C8")]
	public void DestroyCards()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x10E1508", Offset = "0x10E1508", VA = "0x10E1508")]
	public void RevealCards(bool _on = true)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x10E15E4", Offset = "0x10E15E4", VA = "0x10E15E4")]
	public void ShootCenterCard()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x10E12F0", Offset = "0x10E12F0", VA = "0x10E12F0")]
	private void MoveToCenter(Action callback)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x10E1458", Offset = "0x10E1458", VA = "0x10E1458")]
	private void MoveToSide(Action callback)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x10E116C", Offset = "0x10E116C", VA = "0x10E116C")]
	private void SetMode(bool alternateMode, Action callback)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x10E168C", Offset = "0x10E168C", VA = "0x10E168C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83424", Offset = "0xB83424")]
	private IEnumerator SetMode_Coroutine(bool alternateMode, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x10E0FB8", Offset = "0x10E0FB8", VA = "0x10E0FB8")]
	private void MoveTo(int position, Action callback)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x10E1750", Offset = "0x10E1750", VA = "0x10E1750")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83488", Offset = "0xB83488")]
	private IEnumerator MoveTo_Coroutine(int position, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x10E1808", Offset = "0x10E1808", VA = "0x10E1808")]
	public void CenterCardShot()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x10E1818", Offset = "0x10E1818", VA = "0x10E1818")]
	public void RingCardShot()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x10E1828", Offset = "0x10E1828", VA = "0x10E1828")]
	public void CardsDestroyed()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x10E1834", Offset = "0x10E1834", VA = "0x10E1834")]
	public void ModeSwitched_Alternate()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x10E1840", Offset = "0x10E1840", VA = "0x10E1840")]
	public void ModeSwitched_Default()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x10E1848", Offset = "0x10E1848", VA = "0x10E1848")]
	public void ArrivedAt_OnSet()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x10E1854", Offset = "0x10E1854", VA = "0x10E1854")]
	public void ArrivedAt_Right()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x10E1860", Offset = "0x10E1860", VA = "0x10E1860")]
	public void ArrivedAt_Left()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x10E186C", Offset = "0x10E186C", VA = "0x10E186C")]
	public SetController()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x10E1874", Offset = "0x10E1874", VA = "0x10E1874")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB834EC", Offset = "0xB834EC")]
	private void <Intro>b__15_0()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x10E187C", Offset = "0x10E187C", VA = "0x10E187C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB834FC", Offset = "0xB834FC")]
	private void <Idle>b__16_0()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x10E18F0", Offset = "0x10E18F0", VA = "0x10E18F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8350C", Offset = "0xB8350C")]
	private void <Idle>b__16_1()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x10E18F8", Offset = "0x10E18F8", VA = "0x10E18F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8351C", Offset = "0xB8351C")]
	private void <ShootCardRing>b__17_0()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x10E1970", Offset = "0x10E1970", VA = "0x10E1970")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8352C", Offset = "0xB8352C")]
	private void <ShootCardRing>b__17_1()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x10E19D8", Offset = "0x10E19D8", VA = "0x10E19D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8353C", Offset = "0xB8353C")]
	private void <DestroyCards>b__18_0()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x10E1A40", Offset = "0x10E1A40", VA = "0x10E1A40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8354C", Offset = "0xB8354C")]
	private void <ShootCenterCard>b__20_0()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x10E1AEC", Offset = "0x10E1AEC", VA = "0x10E1AEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8355C", Offset = "0xB8355C")]
	private void <ShootCenterCard>b__20_1()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x10E1AF4", Offset = "0x10E1AF4", VA = "0x10E1AF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8356C", Offset = "0xB8356C")]
	private void <ShootCenterCard>b__20_2()
	{
	}
}
[Token(Token = "0x2000006")]
public static class ExtensionMethods
{
	[Token(Token = "0x600002A")]
	public static void Shuffle<T>(this IList<T> list)
	{
	}
}
[Token(Token = "0x2000007")]
public class ShapeMeshHolder : MonoBehaviour
{
	[Token(Token = "0x600002B")]
	[Address(RVA = "0x10E2060", Offset = "0x10E2060", VA = "0x10E2060")]
	public ShapeMeshHolder()
	{
	}
}
[Token(Token = "0x2000008")]
public delegate void Invokable();
[Token(Token = "0x2000009")]
public class Invoker : MonoBehaviour
{
	[Token(Token = "0x2000547")]
	private struct InvokableItem
	{
		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Invokable func;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float timeToExecute;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float timePassed;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Invoker _instance;

		[Token(Token = "0x600285F")]
		[Address(RVA = "0xC3D7FC", Offset = "0xC3D7FC", VA = "0xC3D7FC")]
		public InvokableItem(Invokable func, float delaySeconds)
		{
		}
	}

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Invoker _instance;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<InvokableItem> invokeList;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<InvokableItem> invokeListPendingAddition;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<InvokableItem> invokeListExecuted;

	[Token(Token = "0x17000004")]
	public static Invoker Instance
	{
		[Token(Token = "0x6000030")]
		[Address(RVA = "0x1324DCC", Offset = "0x1324DCC", VA = "0x1324DCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x1324F24", Offset = "0x1324F24", VA = "0x1324F24")]
	public static void InvokeDelayed(Invokable func, float delaySeconds)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x1324FC8", Offset = "0x1324FC8", VA = "0x1324FC8")]
	public static void CancelInvoke(Invokable func)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x1325224", Offset = "0x1325224", VA = "0x1325224")]
	public void Update()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x13255B4", Offset = "0x13255B4", VA = "0x13255B4")]
	public Invoker()
	{
	}
}
[Token(Token = "0x200000A")]
public class UMotionAudioPlayer : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AudioSource> audioSources;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x10EA384", Offset = "0x10EA384", VA = "0x10EA384")]
	public void PlayAudio(int i)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x10EA408", Offset = "0x10EA408", VA = "0x10EA408")]
	public UMotionAudioPlayer()
	{
	}
}
[Token(Token = "0x200000B")]
public class PlayerCameraHeight : MonoBehaviour
{
	[Token(Token = "0x6000038")]
	[Address(RVA = "0xFFAC8C", Offset = "0xFFAC8C", VA = "0xFFAC8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xFFAC90", Offset = "0xFFAC90", VA = "0xFFAC90")]
	public PlayerCameraHeight()
	{
	}
}
[Token(Token = "0x200000C")]
public class RemoteConfigManager : MonoBehaviour
{
	[Token(Token = "0x2000548")]
	private struct UserAttributes
	{
	}

	[Token(Token = "0x2000549")]
	private struct AppAttributes
	{
	}

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73E64", Offset = "0xB73E64")]
	[SerializeField]
	private bool _bypassConfigUpdate;

	[Token(Token = "0x400001B")]
	private const string DEVELOPMENT_ENVIRONMENT_ID = "26a41a9b-a94c-4486-be2e-129a1b49273e";

	[Token(Token = "0x400001C")]
	private const string RELEASE_ENVIRONMENT_ID = "8b6c65d0-d5f2-4c6a-8234-426d41cfe458";

	[Token(Token = "0x17000005")]
	public bool BypassConfigUpdate
	{
		[Token(Token = "0x600003A")]
		[Address(RVA = "0x10DE050", Offset = "0x10DE050", VA = "0x10DE050")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600003B")]
		[Address(RVA = "0x10DE058", Offset = "0x10DE058", VA = "0x10DE058")]
		set
		{
		}
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x10DE064", Offset = "0x10DE064", VA = "0x10DE064")]
	private void Start()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x10DE19C", Offset = "0x10DE19C", VA = "0x10DE19C")]
	private void SceneLoader_LoadStart(SceneLoader sender, string currentSceneName, string nextSceneName)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x10DE104", Offset = "0x10DE104", VA = "0x10DE104")]
	private void FetchConfigFromServer()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x10DE1A0", Offset = "0x10DE1A0", VA = "0x10DE1A0")]
	private void UpdateConfigVariables(ConfigResponse configResponse)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x10DE1BC", Offset = "0x10DE1BC", VA = "0x10DE1BC")]
	private void UpdateAllGamesConfig()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x10DE3AC", Offset = "0x10DE3AC", VA = "0x10DE3AC")]
	private void UpdateGameConfig(AttentionLab.Enums.GameType game)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x10DE890", Offset = "0x10DE890", VA = "0x10DE890")]
	private void UpdateLocalConfigFile(object gameConfig, AttentionLab.Enums.GameType game)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x10DEAFC", Offset = "0x10DEAFC", VA = "0x10DEAFC")]
	private object GetRemoteValue(string variableKey, Type variableType)
	{
		return null;
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x10DEF88", Offset = "0x10DEF88", VA = "0x10DEF88")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x10DF0DC", Offset = "0x10DF0DC", VA = "0x10DF0DC")]
	public RemoteConfigManager()
	{
	}
}
[Token(Token = "0x200000D")]
public class PointsFeedback : MonoBehaviour
{
	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float textGrowthSpeed;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float textFadeSpeed;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro pointsValueText;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro comboChainValueText;

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xFFAC98", Offset = "0xFFAC98", VA = "0xFFAC98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xFFAC9C", Offset = "0xFFAC9C", VA = "0xFFAC9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xFFAFD4", Offset = "0xFFAFD4", VA = "0xFFAFD4")]
	public void SetPointsText(int pointsValue, int chainValue)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xFFB0E0", Offset = "0xFFB0E0", VA = "0xFFB0E0")]
	public PointsFeedback()
	{
	}
}
[Token(Token = "0x200000E")]
public class EnhanceCertificate : CertificateHandler
{
	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string PUB_KEY;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xD3B810", Offset = "0xD3B810", VA = "0xD3B810", Slot = "5")]
	protected override bool ValidateCertificate(byte[] certificateData)
	{
		return default(bool);
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xD3B818", Offset = "0xD3B818", VA = "0xD3B818")]
	public EnhanceCertificate()
	{
	}
}
[Token(Token = "0x200000F")]
public class RESTApi : MonoBehaviour
{
	[Token(Token = "0x200054A")]
	public enum RequestType
	{
		[Token(Token = "0x40021CF")]
		GET,
		[Token(Token = "0x40021D0")]
		POST,
		[Token(Token = "0x40021D1")]
		PUT,
		[Token(Token = "0x40021D2")]
		PATCH
	}

	[Token(Token = "0x200054B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72514", Offset = "0xB72514")]
	private sealed class <GetRequest>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string requestUrl;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AttentionLab.REST.Request.GrantType grantType;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, string> headerData;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string bodyData;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<ServerResponse> result;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x17000454")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002864")]
			[Address(RVA = "0x10DD324", Offset = "0x10DD324", VA = "0x10DD324", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000455")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002866")]
			[Address(RVA = "0x10DD390", Offset = "0x10DD390", VA = "0x10DD390", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002861")]
		[Address(RVA = "0x10DC64C", Offset = "0x10DC64C", VA = "0x10DC64C")]
		[DebuggerHidden]
		public <GetRequest>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0x10DD174", Offset = "0x10DD174", VA = "0x10DD174", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002863")]
		[Address(RVA = "0x10DD178", Offset = "0x10DD178", VA = "0x10DD178", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0x10DD32C", Offset = "0x10DD32C", VA = "0x10DD32C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200054C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72524", Offset = "0xB72524")]
	private sealed class <PostRequest>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string requestUrl;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, string> bodyData;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AttentionLab.REST.Request.GrantType grantType;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<string, string> headerData;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<ServerResponse> result;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x17000456")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600286A")]
			[Address(RVA = "0x10DD9C4", Offset = "0x10DD9C4", VA = "0x10DD9C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000457")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600286C")]
			[Address(RVA = "0x10DDA30", Offset = "0x10DDA30", VA = "0x10DDA30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0x10DC714", Offset = "0x10DC714", VA = "0x10DC714")]
		[DebuggerHidden]
		public <PostRequest>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0x10DD7B0", Offset = "0x10DD7B0", VA = "0x10DD7B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0x10DD7B4", Offset = "0x10DD7B4", VA = "0x10DD7B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600286B")]
		[Address(RVA = "0x10DD9CC", Offset = "0x10DD9CC", VA = "0x10DD9CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200054D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72534", Offset = "0xB72534")]
	private sealed class <PutRequest>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string requestUrl;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, string> bodyData;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AttentionLab.REST.Request.GrantType grantType;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<string, string> headerData;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<ServerResponse> result;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x17000458")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002870")]
			[Address(RVA = "0x10DDD9C", Offset = "0x10DDD9C", VA = "0x10DDD9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000459")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002872")]
			[Address(RVA = "0x10DDE08", Offset = "0x10DDE08", VA = "0x10DDE08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0x10DC7DC", Offset = "0x10DC7DC", VA = "0x10DC7DC")]
		[DebuggerHidden]
		public <PutRequest>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600286E")]
		[Address(RVA = "0x10DDA38", Offset = "0x10DDA38", VA = "0x10DDA38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0x10DDA3C", Offset = "0x10DDA3C", VA = "0x10DDA3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0x10DDDA4", Offset = "0x10DDDA4", VA = "0x10DDDA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200054E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72544", Offset = "0xB72544")]
	private sealed class <PatchRequest>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string requestUrl;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, string> bodyData;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AttentionLab.REST.Request.GrantType grantType;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<string, string> headerData;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<ServerResponse> result;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x1700045A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002876")]
			[Address(RVA = "0x10DD73C", Offset = "0x10DD73C", VA = "0x10DD73C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002878")]
			[Address(RVA = "0x10DD7A8", Offset = "0x10DD7A8", VA = "0x10DD7A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002873")]
		[Address(RVA = "0x10DC8A4", Offset = "0x10DC8A4", VA = "0x10DC8A4")]
		[DebuggerHidden]
		public <PatchRequest>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002874")]
		[Address(RVA = "0x10DD510", Offset = "0x10DD510", VA = "0x10DD510", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0x10DD514", Offset = "0x10DD514", VA = "0x10DD514", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0x10DD744", Offset = "0x10DD744", VA = "0x10DD744", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200054F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72554", Offset = "0xB72554")]
	private sealed class <LoadImage>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<ServerResponse, Texture2D> result;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700045C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600287C")]
			[Address(RVA = "0x10DD49C", Offset = "0x10DD49C", VA = "0x10DD49C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600287E")]
			[Address(RVA = "0x10DD508", Offset = "0x10DD508", VA = "0x10DD508", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0x10DC950", Offset = "0x10DC950", VA = "0x10DC950")]
		[DebuggerHidden]
		public <LoadImage>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600287A")]
		[Address(RVA = "0x10DD398", Offset = "0x10DD398", VA = "0x10DD398", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0x10DD39C", Offset = "0x10DD39C", VA = "0x10DD39C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0x10DD4A4", Offset = "0x10DD4A4", VA = "0x10DD4A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000022")]
	private const string HEADER_ACCEPT_KEY = "Accept";

	[Token(Token = "0x4000023")]
	private const string HEADER_AUTH_KEY = "Authorization";

	[Token(Token = "0x4000024")]
	private const string HEADER_AUTH_VALUE_FORMAT = "Bearer {0}";

	[Token(Token = "0x4000025")]
	private const string HEADER_CONTENT_TYPE_KEY = "Content-Type";

	[Token(Token = "0x4000026")]
	private const string HEADER_PRINT_FORMAT = "{0} = {1}\n";

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x10DC5AC", Offset = "0x10DC5AC", VA = "0x10DC5AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8358C", Offset = "0xB8358C")]
	public static IEnumerator GetRequest(string requestUrl, AttentionLab.REST.Request.GrantType grantType, Dictionary<string, string> headerData, string bodyData, Action<ServerResponse> result)
	{
		return null;
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x10DC678", Offset = "0x10DC678", VA = "0x10DC678")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB835F0", Offset = "0xB835F0")]
	public static IEnumerator PostRequest(string requestUrl, AttentionLab.REST.Request.GrantType grantType, Dictionary<string, string> headerData, Dictionary<string, string> bodyData, Action<ServerResponse> result)
	{
		return null;
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x10DC740", Offset = "0x10DC740", VA = "0x10DC740")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83654", Offset = "0xB83654")]
	public static IEnumerator PutRequest(string requestUrl, AttentionLab.REST.Request.GrantType grantType, Dictionary<string, string> headerData, Dictionary<string, string> bodyData, Action<ServerResponse> result)
	{
		return null;
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x10DC808", Offset = "0x10DC808", VA = "0x10DC808")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB836B8", Offset = "0xB836B8")]
	public static IEnumerator PatchRequest(string requestUrl, AttentionLab.REST.Request.GrantType grantType, Dictionary<string, string> headerData, Dictionary<string, string> bodyData, Action<ServerResponse> result)
	{
		return null;
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x10DC8D0", Offset = "0x10DC8D0", VA = "0x10DC8D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8371C", Offset = "0xB8371C")]
	public static IEnumerator LoadImage(string url, Action<ServerResponse, Texture2D> result)
	{
		return null;
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x10DC97C", Offset = "0x10DC97C", VA = "0x10DC97C")]
	private static ServerResponse ParseResponse(UnityWebRequest request, string parameters)
	{
		return null;
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x10DCA58", Offset = "0x10DCA58", VA = "0x10DCA58")]
	private static string GetFullUrl(string requestUrl)
	{
		return null;
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x10DCAB4", Offset = "0x10DCAB4", VA = "0x10DCAB4")]
	private static void AddAccessToken(ref UnityWebRequest request, ref StringBuilder printBuilder, AttentionLab.REST.Request.GrantType grantType)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x10DCB94", Offset = "0x10DCB94", VA = "0x10DCB94")]
	private static void AddContentType(ref UnityWebRequest request, ref StringBuilder printBuilder)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x10DCC44", Offset = "0x10DCC44", VA = "0x10DCC44")]
	private static void AddHeaders(ref UnityWebRequest request, Dictionary<string, string> headerData, ref StringBuilder printBuilder)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x10DCDC4", Offset = "0x10DCDC4", VA = "0x10DCDC4")]
	private static string BodyToString(Dictionary<string, string> bodyData)
	{
		return null;
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x10DD16C", Offset = "0x10DD16C", VA = "0x10DD16C")]
	public RESTApi()
	{
	}
}
[Token(Token = "0x2000010")]
public class ServerRequestsConstants
{
	[Token(Token = "0x4000027")]
	public const string PASSWORD_CREDENTIAL_ID = "1";

	[Token(Token = "0x4000028")]
	public const string PASSWORD_CREDENTIAL_SECRET = "OTGHYl5IJLBBDPyfvXH1Fdok5LoZf12QKfyMw37d";

	[Token(Token = "0x4000029")]
	public const string CLIENT_CREDENTIAL_ID = "2";

	[Token(Token = "0x400002A")]
	public const string CLIENT_CREDENTIAL_SECRET = "2ggzfNQeiIVfGTb6UwwkUaKX8gWr0EO2A5vVAcEH";

	[Token(Token = "0x400002B")]
	public const string CONTENT_TYPE_JSON = "application/json";

	[Token(Token = "0x400002C")]
	public const string CONTENT_TYPE_X_WWW_FORM_URLENCODED = "application/x-www-form-urlencoded";

	[Token(Token = "0x400002D")]
	private const string _API_PREFIX = "/api/";

	[Token(Token = "0x400002E")]
	private const string _OAUTH_PREFIX = "/oauth/";

	[Token(Token = "0x400002F")]
	private const string _GAMES_PREFIX = "games/";

	[Token(Token = "0x4000030")]
	private const string _VALIDATIONS_PREFIX = "validations/";

	[Token(Token = "0x4000031")]
	private const string _USERS_PREFIX = "users/";

	[Token(Token = "0x4000032")]
	private const string _PAGES_PREFIX = "pages/";

	[Token(Token = "0x4000033")]
	private const string _CATEGORIES_PREFIX = "categories/";

	[Token(Token = "0x4000034")]
	private const string _WODS_PREFIX = "wods/";

	[Token(Token = "0x4000035")]
	private const string _VERSIONS_PREFIX = "versions/";

	[Token(Token = "0x4000036")]
	public const string GET_SERVER_CHECK = "/api/server/check";

	[Token(Token = "0x4000037")]
	public const string GET_GAMES = "/api/games";

	[Token(Token = "0x4000038")]
	public const string GET_AVATARS = "/api/avatars";

	[Token(Token = "0x4000039")]
	public const string GET_NEWS = "/api/news";

	[Token(Token = "0x400003A")]
	public const string GET_GAME_TUTORIALS = "/api/games/{0}/tutorials";

	[Token(Token = "0x400003B")]
	public const string GET_USER = "/api/users/me";

	[Token(Token = "0x400003C")]
	public const string GET_WOD_DAILY = "/api/wods/today";

	[Token(Token = "0x400003D")]
	public const string GET_PRIVACY_POLICY = "/api/pages/privacy-policy";

	[Token(Token = "0x400003E")]
	public const string GET_USER_AGREEMENT = "/api/pages/user-agreement";

	[Token(Token = "0x400003F")]
	public const string GET_HEALTH_AND_SAFETY_WARNING = "/api/pages/health-and-safety";

	[Token(Token = "0x4000040")]
	public const string GET_EPI_INFORMATION = "/api/pages/epi-information";

	[Token(Token = "0x4000041")]
	public const string GET_CREDITS = "/api/pages/credits";

	[Token(Token = "0x4000042")]
	public const string GET_GAME_CATEGORY_STATS = "/api/categories/{0}/stats";

	[Token(Token = "0x4000043")]
	public const string GET_GAME_CATEGORIES_STATS = "/api/categories/stats";

	[Token(Token = "0x4000044")]
	public const string GET_GAMES_STATS = "/api/games/stats";

	[Token(Token = "0x4000045")]
	public const string GET_GAME_STATS = "/api/games/{0}/stats";

	[Token(Token = "0x4000046")]
	public const string GET_USER_EPI = "/api/users/epi";

	[Token(Token = "0x4000047")]
	public const string GET_USER_STATS = "/api/users/stats";

	[Token(Token = "0x4000048")]
	public const string GET_WODS_STATS = "/api/wods/stats";

	[Token(Token = "0x4000049")]
	public const string POST_LATEST_VERSION = "/api/versions/latest";

	[Token(Token = "0x400004A")]
	public const string OAUTH_TOKEN = "/oauth/token";

	[Token(Token = "0x400004B")]
	public const string POST_ACTIVITIES = "/api/activities";

	[Token(Token = "0x400004C")]
	public const string POST_MOOD = "/api/moods";

	[Token(Token = "0x400004D")]
	public const string POST_USERS = "/api/users";

	[Token(Token = "0x400004E")]
	public const string POST_GAME_SESSION = "/api/games/{0}/sessions";

	[Token(Token = "0x400004F")]
	public const string POST_GAME_TUTORIAL = "/api/games/{0}/tutorials";

	[Token(Token = "0x4000050")]
	public const string POST_VALIDATION_EMAIL = "/api/validations/email";

	[Token(Token = "0x4000051")]
	public const string POST_RESET_EMAIL = "/api/users/password/reset/email";

	[Token(Token = "0x4000052")]
	public const string POST_RESEND_EMAIL = "/api/users/verify/resend";

	[Token(Token = "0x4000053")]
	public const string PUT_GAME_SESSION_FORMAT = "/api/games/{0}/sessions/{1}";

	[Token(Token = "0x4000054")]
	public const string PUT_USER = "/api/users/me";

	[Token(Token = "0x4000055")]
	public const string PATCH_AVATAR = "/api/users/avatar";

	[Token(Token = "0x4000056")]
	public const string PATCH_LANGUAGE = "/api/users/language";

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x10E088C", Offset = "0x10E088C", VA = "0x10E088C")]
	public ServerRequestsConstants()
	{
	}
}
[Token(Token = "0x2000011")]
public class ServerRequestsHandler : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text errorDescriptionTF;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button tryAgainButton;

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x10E0894", Offset = "0x10E0894", VA = "0x10E0894")]
	public void SetErrorMessage(string message)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x10E08B8", Offset = "0x10E08B8", VA = "0x10E08B8")]
	public void CloseErrorDialog()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x10E08F4", Offset = "0x10E08F4", VA = "0x10E08F4")]
	public ServerRequestsHandler()
	{
	}
}
[Serializable]
[Token(Token = "0x2000012")]
public class ServerRequest
{
	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RESTApi.RequestType type;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string request;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<string, string> header;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<string, string> body;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string bodyJson;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<ServerResponse> result;

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x10E0884", Offset = "0x10E0884", VA = "0x10E0884")]
	public ServerRequest()
	{
	}
}
[Token(Token = "0x2000013")]
public class ServerResponse
{
	[Token(Token = "0x400005F")]
	private const int CODE_SUCCESS_OK = 200;

	[Token(Token = "0x4000060")]
	private const int CODE_SUCCESS_CREATED = 201;

	[Token(Token = "0x4000061")]
	private const int CODE_SUCCESS_NO_CONTENT = 204;

	[Token(Token = "0x4000062")]
	private const int CODE_CLIENT_ERROR_BAD_REQUEST = 400;

	[Token(Token = "0x4000063")]
	private const int CODE_CLIENT_ERROR_UNAUTHORIZED = 401;

	[Token(Token = "0x4000064")]
	private const int CODE_CLIENT_ERROR_FORBIDDEN = 403;

	[Token(Token = "0x4000065")]
	private const int CODE_CLIENT_ERROR_NOT_FOUND = 404;

	[Token(Token = "0x4000066")]
	private const int CODE_CLIENT_ERROR_CONFLICT = 409;

	[Token(Token = "0x4000067")]
	private const int CODE_VALIDATION_FAILURE = 422;

	[Token(Token = "0x4000068")]
	private const int CODE_SERVER_ERROR_INTERNAL = 500;

	[Token(Token = "0x4000069")]
	private const int CODE_SERVER_UNDER_MAINTENANCE = 503;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public long code;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string content;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ResponseCodeType _code;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73EB0", Offset = "0xB73EB0")]
	private Guid <Identifier>k__BackingField;

	[Token(Token = "0x17000006")]
	public ResponseCodeType Code
	{
		[Token(Token = "0x600005E")]
		[Address(RVA = "0x10E08FC", Offset = "0x10E08FC", VA = "0x10E08FC")]
		get
		{
			return default(ResponseCodeType);
		}
	}

	[Token(Token = "0x17000007")]
	public bool Success
	{
		[Token(Token = "0x600005F")]
		[Address(RVA = "0x10DD480", Offset = "0x10DD480", VA = "0x10DD480")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000060")]
		[Address(RVA = "0x10E0B54", Offset = "0x10E0B54", VA = "0x10E0B54")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public bool HasData
	{
		[Token(Token = "0x6000061")]
		[Address(RVA = "0x10E0B7C", Offset = "0x10E0B7C", VA = "0x10E0B7C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000009")]
	public Guid Identifier
	{
		[Token(Token = "0x6000062")]
		[Address(RVA = "0x10E0BA0", Offset = "0x10E0BA0", VA = "0x10E0BA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83780", Offset = "0xB83780")]
		get
		{
			return default(Guid);
		}
		[Token(Token = "0x6000063")]
		[Address(RVA = "0x10E0BB0", Offset = "0x10E0BB0", VA = "0x10E0BB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83790", Offset = "0xB83790")]
		set
		{
		}
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x10E0BBC", Offset = "0x10E0BBC", VA = "0x10E0BBC", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x10DCA50", Offset = "0x10DCA50", VA = "0x10DCA50")]
	public ServerResponse()
	{
	}
}
[Token(Token = "0x2000014")]
public class AutoDestroy : MonoBehaviour
{
	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _secondsToDestroy;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xD35FD4", Offset = "0xD35FD4", VA = "0xD35FD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xD3602C", Offset = "0xD3602C", VA = "0xD3602C")]
	private void SelfDestruct()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xD360A8", Offset = "0xD360A8", VA = "0xD360A8")]
	public AutoDestroy()
	{
	}
}
[Token(Token = "0x2000015")]
public class DateTimeUtils
{
	[Token(Token = "0x6000069")]
	[Address(RVA = "0xD3A430", Offset = "0xD3A430", VA = "0xD3A430")]
	public static string FormatTime(float totalSeconds)
	{
		return null;
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xD3A528", Offset = "0xD3A528", VA = "0xD3A528")]
	public static string GetCurrentDate()
	{
		return null;
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xD306FC", Offset = "0xD306FC", VA = "0xD306FC")]
	public static DateTime UnixTimeStampToDateTime(double unixTimeStamp)
	{
		return default(DateTime);
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xD3A6F0", Offset = "0xD3A6F0", VA = "0xD3A6F0")]
	public static bool IsLeapYear(int year)
	{
		return default(bool);
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xD3A740", Offset = "0xD3A740", VA = "0xD3A740")]
	public static string ToServerFormat(DateTime date)
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xD3A798", Offset = "0xD3A798", VA = "0xD3A798")]
	public DateTimeUtils()
	{
	}
}
[Token(Token = "0x2000016")]
public class ImageUtils : MonoBehaviour
{
	[Token(Token = "0x2000550")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72564", Offset = "0xB72564")]
	private sealed class <GenerateImageFromURL>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string imageURL;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image targetImageObject;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <www>5__2;

		[Token(Token = "0x1700045E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002882")]
			[Address(RVA = "0x13222FC", Offset = "0x13222FC", VA = "0x13222FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002884")]
			[Address(RVA = "0x1322368", Offset = "0x1322368", VA = "0x1322368", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0x1322158", Offset = "0x1322158", VA = "0x1322158")]
		[DebuggerHidden]
		public <GenerateImageFromURL>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0x132218C", Offset = "0x132218C", VA = "0x132218C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0x1322190", Offset = "0x1322190", VA = "0x1322190", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0x1322304", Offset = "0x1322304", VA = "0x1322304", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x13220D8", Offset = "0x13220D8", VA = "0x13220D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB837A0", Offset = "0xB837A0")]
	public static IEnumerator GenerateImageFromURL(string imageURL, Image targetImageObject)
	{
		return null;
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x1322184", Offset = "0x1322184", VA = "0x1322184")]
	public ImageUtils()
	{
	}
}
[Token(Token = "0x2000017")]
public static class PlayerPrefsUtils
{
	[Token(Token = "0x400006F")]
	public const string FIRST_NAME = "firstName";

	[Token(Token = "0x4000070")]
	public const string LAST_NAME = "lastName";

	[Token(Token = "0x4000071")]
	public const string LOCALE = "locale";

	[Token(Token = "0x4000072")]
	public const string MUSIC_VOLUME = "musicVolume";

	[Token(Token = "0x4000073")]
	public const string PREFS_RESET = "prefsReset";

	[Token(Token = "0x4000074")]
	public const string SFX_VOLUME = "sfxVolume";

	[Token(Token = "0x4000075")]
	public const string TOKEN_ACCESS_CLIENT = "clientToken";

	[Token(Token = "0x4000076")]
	public const string TOKEN_CLIENT_EXPIRE_DATE_SECONDS = "tokenClientExpiresIn";

	[Token(Token = "0x4000077")]
	public const string TOKEN_ACCESS_PASS = "passToken";

	[Token(Token = "0x4000078")]
	public const string TOKEN_REFRESH_PASS = "refreshPassToken";

	[Token(Token = "0x4000079")]
	public const string TOKEN_PASS_EXPIRE_DATE_SECONDS = "tokenClientExpiresIn";

	[Token(Token = "0x400007A")]
	public const string USERNAME = "username";

	[Token(Token = "0x400007B")]
	public const string DID_REGISTER = "didRegister";

	[Token(Token = "0x400007C")]
	public const string LOCAL_SESSIONS = "localSessions";
}
[Token(Token = "0x2000018")]
public class StoreScreenshot : MonoBehaviour
{
	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HandController _leftController;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HandController _rightController;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HandController _newLeft;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HandController _newRight;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x10E7E24", Offset = "0x10E7E24", VA = "0x10E7E24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x10E831C", Offset = "0x10E831C", VA = "0x10E831C")]
	public StoreScreenshot()
	{
	}
}
[Token(Token = "0x2000019")]
public class SelectableItem : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerDownHandler
{
	[Token(Token = "0x2000551")]
	public delegate void OnValueChanged(SelectableItem sender, bool selected);

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73ED0", Offset = "0xB73ED0")]
	[SerializeField]
	private Toggle _toggle;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text _label;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image _icon;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OnValueChanged ValueChanged;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73F3C", Offset = "0xB73F3C")]
	private int <Id>k__BackingField;

	[Token(Token = "0x1700000A")]
	public Toggle Component
	{
		[Token(Token = "0x6000073")]
		[Address(RVA = "0x10DFF48", Offset = "0x10DFF48", VA = "0x10DFF48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000B")]
	public int Id
	{
		[Token(Token = "0x6000074")]
		[Address(RVA = "0x10DFF50", Offset = "0x10DFF50", VA = "0x10DFF50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83804", Offset = "0xB83804")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000075")]
		[Address(RVA = "0x10DFF58", Offset = "0x10DFF58", VA = "0x10DFF58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83814", Offset = "0xB83814")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public string Label
	{
		[Token(Token = "0x6000076")]
		[Address(RVA = "0x10DFF60", Offset = "0x10DFF60", VA = "0x10DFF60")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000077")]
		[Address(RVA = "0x10DFF84", Offset = "0x10DFF84", VA = "0x10DFF84")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public Sprite Icon
	{
		[Token(Token = "0x6000078")]
		[Address(RVA = "0x10E0000", Offset = "0x10E0000", VA = "0x10E0000")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000079")]
		[Address(RVA = "0x10E0020", Offset = "0x10E0020", VA = "0x10E0020")]
		set
		{
		}
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x10E00E4", Offset = "0x10E00E4", VA = "0x10E00E4", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x10E0244", Offset = "0x10E0244", VA = "0x10E0244", Slot = "5")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x10E0248", Offset = "0x10E0248", VA = "0x10E0248")]
	public void Toggle(bool toggle)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x10E0268", Offset = "0x10E0268", VA = "0x10E0268")]
	public void UI_OnValueChanged(bool selected)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x10E07C0", Offset = "0x10E07C0", VA = "0x10E07C0")]
	public SelectableItem()
	{
	}
}
[Token(Token = "0x200001A")]
public class HoverTrigger : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioAssets.UI HoverSound;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pitchOverride;

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1321C14", Offset = "0x1321C14", VA = "0x1321C14", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1321DD0", Offset = "0x1321DD0", VA = "0x1321DD0", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1321DD4", Offset = "0x1321DD4", VA = "0x1321DD4")]
	public HoverTrigger()
	{
	}
}
[Token(Token = "0x200001B")]
[ExecuteAlways]
public class PrefabStageCanvasSize : MonoBehaviour
{
	[Token(Token = "0x2000552")]
	public enum Mode
	{
		[Token(Token = "0x40021FE")]
		ReferenceSize,
		[Token(Token = "0x40021FF")]
		HeightFollowsGameViewAspect,
		[Token(Token = "0x4002200")]
		WidthFollowsGameViewAspect,
		[Token(Token = "0x4002201")]
		ExpandUsingGameViewAspect,
		[Token(Token = "0x4002202")]
		NativeBehaviour
	}

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 ReferenceSize;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 ReferenceScale;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Mode CanvasSizeMode;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ScaleCanvas;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float dynamicPixelsPerUnit;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float referencePixelsPerUnit;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xFFB0E8", Offset = "0xFFB0E8", VA = "0xFFB0E8")]
	public PrefabStageCanvasSize()
	{
	}
}
[Token(Token = "0x200001C")]
public class SwitchButtonsPanel : MonoBehaviour
{
	[Token(Token = "0x2000553")]
	public enum EnableMode
	{
		[Token(Token = "0x4002204")]
		Component,
		[Token(Token = "0x4002205")]
		Interactable
	}

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnableMode _mode;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private AudioAssets.UI _buttonClickedSFX;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button[] buttons;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x10E8324", Offset = "0x10E8324", VA = "0x10E8324")]
	public void EnableAllButtons()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x10E8420", Offset = "0x10E8420", VA = "0x10E8420")]
	public void OnButtonClicked(Button clickedButton)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x10E83A4", Offset = "0x10E83A4", VA = "0x10E83A4")]
	private void EnableButton(Button button, bool value)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x10E84B0", Offset = "0x10E84B0", VA = "0x10E84B0")]
	public void SetButtonList(Button[] buttonList)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x10E84B8", Offset = "0x10E84B8", VA = "0x10E84B8")]
	public SwitchButtonsPanel()
	{
	}
}
[Token(Token = "0x200001D")]
[ExecuteInEditMode]
public class TextJustified : Text
{
	[Token(Token = "0x2000554")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72574", Offset = "0xB72574")]
	private sealed class <Justify>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextJustified <>4__this;

		[Token(Token = "0x17000460")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600288C")]
			[Address(RVA = "0x10E9880", Offset = "0x10E9880", VA = "0x10E9880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000461")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600288E")]
			[Address(RVA = "0x10E98EC", Offset = "0x10E98EC", VA = "0x10E98EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0x10E8F20", Offset = "0x10E8F20", VA = "0x10E8F20")]
		[DebuggerHidden]
		public <Justify>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600288A")]
		[Address(RVA = "0x10E9668", Offset = "0x10E9668", VA = "0x10E9668", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600288B")]
		[Address(RVA = "0x10E966C", Offset = "0x10E966C", VA = "0x10E966C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600288D")]
		[Address(RVA = "0x10E9888", Offset = "0x10E9888", VA = "0x10E9888", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	public bool m_Justified;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string m_JustifiedText;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string m_lastJustifiedText;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private TextGenerationSettings settings;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool justifying;

	[Token(Token = "0x1700000E")]
	public override string text
	{
		[Token(Token = "0x6000088")]
		[Address(RVA = "0x10E8CA8", Offset = "0x10E8CA8", VA = "0x10E8CA8", Slot = "72")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000089")]
		[Address(RVA = "0x10E8DD0", Offset = "0x10E8DD0", VA = "0x10E8DD0", Slot = "73")]
		set
		{
		}
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x10E8D0C", Offset = "0x10E8D0C", VA = "0x10E8D0C")]
	public void StartJustification()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x10E8EAC", Offset = "0x10E8EAC", VA = "0x10E8EAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83824", Offset = "0xB83824")]
	private IEnumerator Justify()
	{
		return null;
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x10E8F4C", Offset = "0x10E8F4C", VA = "0x10E8F4C")]
	private string FillLine(string line)
	{
		return null;
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x10E92C4", Offset = "0x10E92C4", VA = "0x10E92C4")]
	private string GenerateSentenceWithSpace(List<string> words, int spaceCount = 1)
	{
		return null;
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x10E93D4", Offset = "0x10E93D4", VA = "0x10E93D4")]
	private string GenerateSentenceWithExtraSpaces(List<string> words, int spaceCount, int extraSpaces)
	{
		return null;
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x10E95DC", Offset = "0x10E95DC", VA = "0x10E95DC")]
	public TextJustified()
	{
	}
}
[Token(Token = "0x200001E")]
public class Underline : MonoBehaviour
{
	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int underlineStart;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int underlineEnd;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text text;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform textRectTransform;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextGenerator textGenerator;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject lineGameObject;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Image lineImage;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RectTransform lineRectTransform;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _isSetUp;

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x10EA410", Offset = "0x10EA410", VA = "0x10EA410")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x10EA63C", Offset = "0x10EA63C", VA = "0x10EA63C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x10EA864", Offset = "0x10EA864", VA = "0x10EA864")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x10EA940", Offset = "0x10EA940", VA = "0x10EA940")]
	public Underline()
	{
	}
}
[Token(Token = "0x200001F")]
public class DataStorage : MonoBehaviour
{
	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DataStorage _instance;

	[Token(Token = "0x1700000F")]
	public static DataStorage Instance
	{
		[Token(Token = "0x6000095")]
		[Address(RVA = "0xD3A380", Offset = "0xD3A380", VA = "0xD3A380")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xD3A378", Offset = "0xD3A378", VA = "0xD3A378")]
	public DataStorage()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xD313B0", Offset = "0xD313B0", VA = "0xD313B0")]
	public static bool PrefsHasKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xD313C0", Offset = "0xD313C0", VA = "0xD313C0")]
	public static string GetFromPrefs(string key)
	{
		return null;
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xD313C8", Offset = "0xD313C8", VA = "0xD313C8")]
	public static void SetToPrefs(string key, string value)
	{
	}
}
[Token(Token = "0x2000020")]
public class GameOptionsController : MonoBehaviour
{
	[Token(Token = "0x6000099")]
	[Address(RVA = "0xD3C920", Offset = "0xD3C920", VA = "0xD3C920")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xD3C980", Offset = "0xD3C980", VA = "0xD3C980")]
	private void Update()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xD3CB10", Offset = "0xD3CB10", VA = "0xD3CB10")]
	public GameOptionsController()
	{
	}
}
[Token(Token = "0x2000021")]
public class UserRegistrationController : MonoBehaviour
{
	[Token(Token = "0x600009C")]
	[Address(RVA = "0x18B9E04", Offset = "0x18B9E04", VA = "0x18B9E04")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x18B9E64", Offset = "0x18B9E64", VA = "0x18B9E64")]
	private void Update()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x18B9FF0", Offset = "0x18B9FF0", VA = "0x18B9FF0")]
	public UserRegistrationController()
	{
	}
}
[Token(Token = "0x2000022")]
public class FindPrefabsWithComponent : MonoBehaviour
{
	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] prefabs;

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xD3BA30", Offset = "0xD3BA30", VA = "0xD3BA30")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xD3BA34", Offset = "0xD3BA34", VA = "0xD3BA34")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xB83888", Offset = "0xB83888")]
	private void Find()
	{
	}

	[Token(Token = "0x60000A1")]
	private void FindPrefabsWithComponentType<T>() where T : Component
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xD3BA84", Offset = "0xD3BA84", VA = "0xD3BA84")]
	public FindPrefabsWithComponent()
	{
	}
}
[Token(Token = "0x2000023")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB70448", Offset = "0xB70448")]
public class HUDProfile : ScriptableObject
{
	[Token(Token = "0x2000555")]
	public enum MovementType
	{
		[Token(Token = "0x400220A")]
		Leash,
		[Token(Token = "0x400220B")]
		Frozen
	}

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73F8C", Offset = "0xB73F8C")]
	public MovementType movementType;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73FC4", Offset = "0xB73FC4")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB73FC4", Offset = "0xB73FC4")]
	public bool selfRotate;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB74024", Offset = "0xB74024")]
	public bool displacementFx;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB7405C", Offset = "0xB7405C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB7405C", Offset = "0xB7405C")]
	public float rotationSmoothness;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB740B4", Offset = "0xB740B4")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB740B4", Offset = "0xB740B4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB740B4", Offset = "0xB740B4")]
	public float angleDifferenceToUnfocus;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB74130", Offset = "0xB74130")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74130", Offset = "0xB74130")]
	public float opacityWhenUnfocused;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB74184", Offset = "0xB74184")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB74184", Offset = "0xB74184")]
	public bool heightIsRelativeToUser;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB741E4", Offset = "0xB741E4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB741E4", Offset = "0xB741E4")]
	public float absoluteHeight;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB74238", Offset = "0xB74238")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74238", Offset = "0xB74238")]
	public float userHeightOffset;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB7428C", Offset = "0xB7428C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB7428C", Offset = "0xB7428C")]
	public float hudDistance;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB742E4", Offset = "0xB742E4")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB742E4", Offset = "0xB742E4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB742E4", Offset = "0xB742E4")]
	public float positionXSmoothness;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB74360", Offset = "0xB74360")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74360", Offset = "0xB74360")]
	public float maxXPlaneAngleUser;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB743BC", Offset = "0xB743BC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB743BC", Offset = "0xB743BC")]
	public float minXPlaneAngleUser;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB74414", Offset = "0xB74414")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74414", Offset = "0xB74414")]
	public float maxXPlaneAngleHud;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB7446C", Offset = "0xB7446C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB7446C", Offset = "0xB7446C")]
	public float minXPlaneAngleHud;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB744C4", Offset = "0xB744C4")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB744C4", Offset = "0xB744C4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB744C4", Offset = "0xB744C4")]
	public float positionYSmoothness;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB74540", Offset = "0xB74540")]
	public bool useShortcuts;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB74578", Offset = "0xB74578")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74578", Offset = "0xB74578")]
	public float yPlaneLeashAngle;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB745D0", Offset = "0xB745D0")]
	public bool usesPivot;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB74608", Offset = "0xB74608")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74608", Offset = "0xB74608")]
	public float pivotAngle;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB74664", Offset = "0xB74664")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74664", Offset = "0xB74664")]
	public float maxAngleAmplitudeFromPivot;

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x131F75C", Offset = "0x131F75C", VA = "0x131F75C")]
	public bool IsLeash()
	{
		return default(bool);
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x131F76C", Offset = "0x131F76C", VA = "0x131F76C")]
	public bool UsesPivot()
	{
		return default(bool);
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x131F78C", Offset = "0x131F78C", VA = "0x131F78C")]
	public bool DoesNotUsePivot()
	{
		return default(bool);
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x131F7AC", Offset = "0x131F7AC", VA = "0x131F7AC")]
	public bool DoesSelfRotate()
	{
		return default(bool);
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x131F7CC", Offset = "0x131F7CC", VA = "0x131F7CC")]
	public bool HeightIsRelative()
	{
		return default(bool);
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x131F7EC", Offset = "0x131F7EC", VA = "0x131F7EC")]
	public bool HeightIsNotRelative()
	{
		return default(bool);
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x131F80C", Offset = "0x131F80C", VA = "0x131F80C")]
	public HUDProfile()
	{
	}
}
[Token(Token = "0x2000024")]
public class ViveportDemo_Deeplink : MonoBehaviour
{
	[Token(Token = "0x2000556")]
	private class GotoAppDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x20008DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73D14", Offset = "0xB73D14")]
		private sealed class <>c
		{
			[Token(Token = "0x400300E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400300F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x6003551")]
			[Address(RVA = "0x17F5578", Offset = "0x17F5578", VA = "0x17F5578")]
			public <>c()
			{
			}

			[Token(Token = "0x6003552")]
			[Address(RVA = "0x17F5580", Offset = "0x17F5580", VA = "0x17F5580")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x20008DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73D24", Offset = "0xB73D24")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4003010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x4003011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x6003553")]
			[Address(RVA = "0x17F550C", Offset = "0x17F550C", VA = "0x17F550C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6003554")]
			[Address(RVA = "0x17F55EC", Offset = "0x17F55EC", VA = "0x17F55EC")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0x17F530C", Offset = "0x17F530C", VA = "0x17F530C", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0x17F5424", Offset = "0x17F5424", VA = "0x17F5424", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6002891")]
		[Address(RVA = "0x17F4D88", Offset = "0x17F4D88", VA = "0x17F4D88")]
		public GotoAppDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x2000557")]
	private class GotoStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x20008DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73D34", Offset = "0xB73D34")]
		private sealed class <>c
		{
			[Token(Token = "0x4003012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x6003556")]
			[Address(RVA = "0x17F59F0", Offset = "0x17F59F0", VA = "0x17F59F0")]
			public <>c()
			{
			}

			[Token(Token = "0x6003557")]
			[Address(RVA = "0x17F59F8", Offset = "0x17F59F8", VA = "0x17F59F8")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x20008DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73D44", Offset = "0xB73D44")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4003014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x4003015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x6003558")]
			[Address(RVA = "0x17F5984", Offset = "0x17F5984", VA = "0x17F5984")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6003559")]
			[Address(RVA = "0x17F5A64", Offset = "0x17F5A64", VA = "0x17F5A64")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x6002892")]
		[Address(RVA = "0x17F5784", Offset = "0x17F5784", VA = "0x17F5784", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6002893")]
		[Address(RVA = "0x17F589C", Offset = "0x17F589C", VA = "0x17F589C", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6002894")]
		[Address(RVA = "0x17F4D90", Offset = "0x17F4D90", VA = "0x17F4D90")]
		public GotoStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x2000558")]
	private class GoToAppOrGoToStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x20008DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73D54", Offset = "0xB73D54")]
		private sealed class <>c
		{
			[Token(Token = "0x4003016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x600355B")]
			[Address(RVA = "0x17F5100", Offset = "0x17F5100", VA = "0x17F5100")]
			public <>c()
			{
			}

			[Token(Token = "0x600355C")]
			[Address(RVA = "0x17F5108", Offset = "0x17F5108", VA = "0x17F5108")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x20008E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73D64", Offset = "0xB73D64")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4003018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x4003019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x600355D")]
			[Address(RVA = "0x17F5094", Offset = "0x17F5094", VA = "0x17F5094")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600355E")]
			[Address(RVA = "0x17F5174", Offset = "0x17F5174", VA = "0x17F5174")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0x17F4E94", Offset = "0x17F4E94", VA = "0x17F4E94", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0x17F4FAC", Offset = "0x17F4FAC", VA = "0x17F4FAC", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6002897")]
		[Address(RVA = "0x17F4D98", Offset = "0x17F4D98", VA = "0x17F4D98")]
		public GoToAppOrGoToStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ID;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string VIVEPORT_KEY;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string GoToApp_Viveport_ID;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string GoToStore_Viveport_ID;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string LaunchData;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string LaunchBranchName;

	[Token(Token = "0x40000BC")]
	private const int SUCCESS = 0;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bInitComplete;

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x17F4684", Offset = "0x17F4684", VA = "0x17F4684")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x17F4758", Offset = "0x17F4758", VA = "0x17F4758")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x17F4800", Offset = "0x17F4800", VA = "0x17F4800")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x17F48C4", Offset = "0x17F48C4", VA = "0x17F48C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x17F4954", Offset = "0x17F4954", VA = "0x17F4954")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x17F4A2C", Offset = "0x17F4A2C", VA = "0x17F4A2C")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x17F4B08", Offset = "0x17F4B08", VA = "0x17F4B08")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x17F4B0C", Offset = "0x17F4B0C", VA = "0x17F4B0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x17F4DA0", Offset = "0x17F4DA0", VA = "0x17F4DA0")]
	public ViveportDemo_Deeplink()
	{
	}
}
[Token(Token = "0x2000025")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB7049C", Offset = "0xB7049C")]
public class Beam : MonoBehaviour
{
	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float startWidth;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float endWidth;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startOffset;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float endOffset;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int count;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool updateEveryFrame;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool makeTail;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int maxUVAngle;

	[Token(Token = "0x40000C6")]
	private const float epsilon = 0.001f;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Vector3> vertices;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Vector2> uvs;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Vector3> normals;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<int> indices;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 position;

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xD360D0", Offset = "0xD360D0", VA = "0xD360D0")]
	private void Validate()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xD36188", Offset = "0xD36188", VA = "0xD36188")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xD36A5C", Offset = "0xD36A5C", VA = "0xD36A5C")]
	public void Update()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xD3622C", Offset = "0xD3622C", VA = "0xD3622C")]
	private Mesh createMesh()
	{
		return null;
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xD36AF0", Offset = "0xD36AF0", VA = "0xD36AF0")]
	public Beam()
	{
	}
}
[Token(Token = "0x2000026")]
internal class WaveVR_COMMITINFO
{
	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string wavevr_version;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x1577398", Offset = "0x1577398", VA = "0x1577398")]
	public WaveVR_COMMITINFO()
	{
	}
}
[Token(Token = "0x2000027")]
public class ControllerConnectionStateReactor : MonoBehaviour
{
	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WVR_DeviceType type;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool connected;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> targetGameObjects;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool mFocusCapturedBySystem;

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xD39584", Offset = "0xD39584", VA = "0xD39584")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xD3966C", Offset = "0xD3966C", VA = "0xD3966C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xD39954", Offset = "0xD39954", VA = "0xD39954")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xD39A1C", Offset = "0xD39A1C", VA = "0xD39A1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xD3977C", Offset = "0xD3977C", VA = "0xD3977C")]
	private bool checkConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xD39800", Offset = "0xD39800", VA = "0xD39800")]
	private void setActive(bool active)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xD39B4C", Offset = "0xD39B4C", VA = "0xD39B4C")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xD39E48", Offset = "0xD39E48", VA = "0xD39E48")]
	public ControllerConnectionStateReactor()
	{
	}
}
[Token(Token = "0x2000028")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB7051C", Offset = "0xB7051C")]
public class ControllerFadeManager : MonoBehaviour
{
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FadeManger fadeManager;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float AngleHide;

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xD39F14", Offset = "0xD39F14", VA = "0xD39F14")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xD3A13C", Offset = "0xD3A13C", VA = "0xD3A13C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xD3A368", Offset = "0xD3A368", VA = "0xD3A368")]
	public ControllerFadeManager()
	{
	}
}
[Token(Token = "0x2000029")]
public class WaveVR_EventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler, IBeginDragHandler, IDragHandler, IEndDragHandler, IDropHandler, IPointerUpHandler, IPointerHoverHandler
{
	[Token(Token = "0x2000559")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72584", Offset = "0xB72584")]
	private sealed class <TrackPointer>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_EventHandler <>4__this;

		[Token(Token = "0x17000462")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600289B")]
			[Address(RVA = "0x13F1FD4", Offset = "0x13F1FD4", VA = "0x13F1FD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000463")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600289D")]
			[Address(RVA = "0x13F2040", Offset = "0x13F2040", VA = "0x13F2040", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002898")]
		[Address(RVA = "0x13F1EB0", Offset = "0x13F1EB0", VA = "0x13F1EB0")]
		[DebuggerHidden]
		public <TrackPointer>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0x13F1F44", Offset = "0x13F1F44", VA = "0x13F1F44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0x13F1F48", Offset = "0x13F1F48", VA = "0x13F1F48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0x13F1FDC", Offset = "0x13F1FDC", VA = "0x13F1FDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000D4")]
	private const string LOG_TAG = "WaveVR_EventHandler";

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 goPosition;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float goPositionZ;

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x13F164C", Offset = "0x13F164C", VA = "0x13F164C")]
	private void TeleportRandomly()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x13F1774", Offset = "0x13F1774", VA = "0x13F1774")]
	private void Rotate()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x13F1814", Offset = "0x13F1814", VA = "0x13F1814", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x13F18C8", Offset = "0x13F18C8", VA = "0x13F18C8", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x13F18CC", Offset = "0x13F18CC", VA = "0x13F18CC", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x13F1948", Offset = "0x13F1948", VA = "0x13F1948", Slot = "11")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x13F19C4", Offset = "0x13F19C4", VA = "0x13F19C4", Slot = "7")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x13F1AE8", Offset = "0x13F1AE8", VA = "0x13F1AE8", Slot = "8")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x13F1BCC", Offset = "0x13F1BCC", VA = "0x13F1BCC", Slot = "9")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x13F1CB0", Offset = "0x13F1CB0", VA = "0x13F1CB0", Slot = "10")]
	public void OnDrop(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x13F1DE0", Offset = "0x13F1DE0", VA = "0x13F1DE0", Slot = "12")]
	public void OnPointerHover(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x13F1E3C", Offset = "0x13F1E3C", VA = "0x13F1E3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB838A0", Offset = "0xB838A0")]
	private IEnumerator TrackPointer()
	{
		return null;
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x13F1EDC", Offset = "0x13F1EDC", VA = "0x13F1EDC")]
	public WaveVR_EventHandler()
	{
	}
}
[Token(Token = "0x200002A")]
public class WaveVR_Raycast : MonoBehaviour
{
	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WVR_DeviceType index;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool ListenToDevice;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool AddLineRenderer;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject raycastObject;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distance;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LineRenderer lr;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xFCD0AC", Offset = "0xFCD0AC", VA = "0xFCD0AC")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xFCD194", Offset = "0xFCD194", VA = "0xFCD194")]
	private void initLineRenderer()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xFCD2B8", Offset = "0xFCD2B8", VA = "0xFCD2B8")]
	private void shotRaycast()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xFCD530", Offset = "0xFCD530", VA = "0xFCD530")]
	private void updateLineRenderer()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xFCD6D0", Offset = "0xFCD6D0", VA = "0xFCD6D0")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xFCDA4C", Offset = "0xFCDA4C", VA = "0xFCDA4C")]
	private void OnRenderModelLoaded(params object[] args)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xFCDC24", Offset = "0xFCDC24", VA = "0xFCDC24")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xFCDC34", Offset = "0xFCDC34", VA = "0xFCDC34")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xFCDC84", Offset = "0xFCDC84", VA = "0xFCDC84")]
	private void onDestroy()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xFCDD18", Offset = "0xFCDD18", VA = "0xFCDD18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xFCDEBC", Offset = "0xFCDEBC", VA = "0xFCDEBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xFCDFBC", Offset = "0xFCDFBC", VA = "0xFCDFBC")]
	public WaveVR_Raycast()
	{
	}
}
[Token(Token = "0x200002B")]
public class FadeManger : MonoBehaviour
{
	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float FadeTime;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Material> Materials;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float InternalFadeTime;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isInTransition;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool IsFadeOut;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float alpha;

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xD3A300", Offset = "0xD3A300", VA = "0xD3A300")]
	public void Fade(bool fadeOut)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xD3B87C", Offset = "0xD3B87C", VA = "0xD3B87C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xD3BA10", Offset = "0xD3BA10", VA = "0xD3BA10")]
	public FadeManger()
	{
	}
}
[Token(Token = "0x200002C")]
public class FollowTransform : MonoBehaviour
{
	[Token(Token = "0x200055A")]
	public enum DOF
	{
		[Token(Token = "0x4002210")]
		TRACK_6DOF,
		[Token(Token = "0x4002211")]
		TRACK_3DOF
	}

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DOF howTargetTrackHMD;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool followPostion;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool followRotation;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaveVR_DevicePoseTracker inverter;

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xD3BA8C", Offset = "0xD3BA8C", VA = "0xD3BA8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xD3BDA8", Offset = "0xD3BDA8", VA = "0xD3BDA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xD3BC44", Offset = "0xD3BC44", VA = "0xD3BC44")]
	private void Expand()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xD3BE54", Offset = "0xD3BE54", VA = "0xD3BE54")]
	private void OnAfterNewPoses(params object[] args)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xD3C00C", Offset = "0xD3C00C", VA = "0xD3C00C")]
	public FollowTransform()
	{
	}
}
[Token(Token = "0x200002D")]
public enum EGazeTriggerMouseKey
{
	[Token(Token = "0x40000EB")]
	LeftClick,
	[Token(Token = "0x40000EC")]
	RightClick,
	[Token(Token = "0x40000ED")]
	MiddleClick
}
[Token(Token = "0x200002E")]
public enum EGazeTriggerButton
{
	[Token(Token = "0x40000EF")]
	System = 0,
	[Token(Token = "0x40000F0")]
	Menu = 1,
	[Token(Token = "0x40000F1")]
	Grip = 2,
	[Token(Token = "0x40000F2")]
	DPad_Left = 3,
	[Token(Token = "0x40000F3")]
	DPad_Up = 4,
	[Token(Token = "0x40000F4")]
	DPad_Right = 5,
	[Token(Token = "0x40000F5")]
	DPad_Down = 6,
	[Token(Token = "0x40000F6")]
	Volume_Up = 7,
	[Token(Token = "0x40000F7")]
	Volume_Down = 8,
	[Token(Token = "0x40000F8")]
	DigitalTrigger = 9,
	[Token(Token = "0x40000F9")]
	Touchpad = 16,
	[Token(Token = "0x40000FA")]
	Trigger = 17
}
[Token(Token = "0x200002F")]
public enum EGazeTriggerDevice
{
	[Token(Token = "0x40000FC")]
	HMD,
	[Token(Token = "0x40000FD")]
	NonDominantController,
	[Token(Token = "0x40000FE")]
	DominantController,
	[Token(Token = "0x40000FF")]
	HMDWithNonDominantController,
	[Token(Token = "0x4000100")]
	HMDWithDominantController,
	[Token(Token = "0x4000101")]
	HMDWithTwoControllers
}
[Token(Token = "0x2000030")]
public enum EGazeInputEvent
{
	[Token(Token = "0x4000103")]
	PointerDown,
	[Token(Token = "0x4000104")]
	PointerClick,
	[Token(Token = "0x4000105")]
	PointerSubmit
}
[Token(Token = "0x2000031")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB70580", Offset = "0xB70580")]
public class GazeInputModule : PointerInputModule
{
	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool progressRate;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float RateTextZPosition;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool progressCounter;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float CounterTextZPosition;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float TimeToGaze;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public EGazeInputEvent InputEvent;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject Head;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool BtnControl;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public EGazeTriggerDevice GazeDevice;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public EGazeTriggerButton ButtonToTrigger;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[HideInInspector]
	public bool WithTimeGaze;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool defWithTimeGaze;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	private bool btnPressDown;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
	private bool btnPressed;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool btnPressUp;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool HmdEnterPressDown;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float currUnscaledTime;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PointerEventData pointerData;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float gazeTime;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Text progressText;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Text counterText;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private WaveVR_Reticle gazePointer;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject percentCanvas;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject counterCanvas;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool EnableGaze;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Canvas[] sceneCanvases;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool focusCapturedBySystem;

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xD3CB18", Offset = "0xD3CB18", VA = "0xD3CB18")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xD3CBB8", Offset = "0xD3CBB8", VA = "0xD3CBB8")]
	public void SetWithTimeGaze(bool withTimer)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xD3CCDC", Offset = "0xD3CCDC", VA = "0xD3CCDC")]
	private Vector3 GetIntersectionPosition(Camera cam, RaycastResult raycastResult)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xD3CE80", Offset = "0xD3CE80", VA = "0xD3CE80")]
	private void CastToCenterOfScreen()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xD3D014", Offset = "0xD3D014", VA = "0xD3D014")]
	private void GraphicRaycast(Camera event_camera)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xD3D3FC", Offset = "0xD3D3FC", VA = "0xD3D3FC")]
	private void PhysicRaycast(PhysicsRaycaster raycaster)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xD3D6D8", Offset = "0xD3D6D8", VA = "0xD3D6D8")]
	private GameObject GetCurrentGameObject(PointerEventData pointerData)
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xD3D778", Offset = "0xD3D778", VA = "0xD3D778")]
	private Vector3 GetIntersectionPosition(PointerEventData pointerData)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xD3D944", Offset = "0xD3D944", VA = "0xD3D944")]
	private void UpdateProgressDistance(PointerEventData pointerEvent)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xD3DB60", Offset = "0xD3DB60", VA = "0xD3DB60")]
	private void UpdateReticle(GameObject preGazedObject, PointerEventData pointerEvent)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xD3DE78", Offset = "0xD3DE78", VA = "0xD3DE78")]
	private void UpdateButtonStates()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xD3E194", Offset = "0xD3E194", VA = "0xD3E194")]
	private void UpdateProgressText()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xD3E490", Offset = "0xD3E490", VA = "0xD3E490")]
	private void UpdateCounterText()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xD3E7B4", Offset = "0xD3E7B4", VA = "0xD3E7B4")]
	private void OnTriggeGaze()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xD3EE50", Offset = "0xD3EE50", VA = "0xD3EE50")]
	private void GazeControl()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xD3F050", Offset = "0xD3F050", VA = "0xD3F050", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xD3F6E0", Offset = "0xD3F6E0", VA = "0xD3F6E0", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xD3F414", Offset = "0xD3F414", VA = "0xD3F414")]
	private void ActivaeGazePointerCanvas(bool active)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xD3F734", Offset = "0xD3F734", VA = "0xD3F734", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xD3F8A4", Offset = "0xD3F8A4", VA = "0xD3F8A4")]
	public GazeInputModule()
	{
	}
}
[Token(Token = "0x2000032")]
public class GOEventTrigger : MonoBehaviour
{
	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startPosition;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Color defaultColor;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color changedColor;

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xD3C020", Offset = "0xD3C020", VA = "0xD3C020")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xD3C0EC", Offset = "0xD3C0EC", VA = "0xD3C0EC")]
	public void OnEnter()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xD3C254", Offset = "0xD3C254", VA = "0xD3C254")]
	public void OnTrigger()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xD3C42C", Offset = "0xD3C42C", VA = "0xD3C42C")]
	public void OnExit()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xD3C4E0", Offset = "0xD3C4E0", VA = "0xD3C4E0")]
	public void OnQuitGame()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xD3C58C", Offset = "0xD3C58C", VA = "0xD3C58C")]
	public void OnGazeReset()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xD3C5D0", Offset = "0xD3C5D0", VA = "0xD3C5D0")]
	public void OnShowButton()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xD3C6A4", Offset = "0xD3C6A4", VA = "0xD3C6A4")]
	public void OnHideButton()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xD3C778", Offset = "0xD3C778", VA = "0xD3C778")]
	public void ChangeColor(string color)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xD3C1A0", Offset = "0xD3C1A0", VA = "0xD3C1A0")]
	private void ChangeColor(bool change)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xD3C304", Offset = "0xD3C304", VA = "0xD3C304")]
	private void TeleportRandomly()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xD3C880", Offset = "0xD3C880", VA = "0xD3C880")]
	public GOEventTrigger()
	{
	}
}
[Token(Token = "0x2000033")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB705B8", Offset = "0xB705B8")]
public class IndicatorLine : MonoBehaviour
{
	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB746EC", Offset = "0xB746EC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB746EC", Offset = "0xB746EC")]
	public float startWidth;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74748", Offset = "0xB74748")]
	public float endWidth;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74768", Offset = "0xB74768")]
	public float lineLength;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color lineColor;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ButtonIndication.Alignment alignment;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startOffset;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float endOffset;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int count;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool makeTail;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxUVAngle;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int Count;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int verticesCount;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int indicesCount;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> vertices;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector2> uvs;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector3> normals;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<int> indices;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Color32> colors;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 position;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Mesh updateMesh;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x1322370", Offset = "0x1322370", VA = "0x1322370")]
	private void Validate()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x13223BC", Offset = "0x13223BC", VA = "0x13223BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x1322558", Offset = "0x1322558", VA = "0x1322558")]
	private void Start()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x13227BC", Offset = "0x13227BC", VA = "0x13227BC")]
	public void Update()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x13227C0", Offset = "0x13227C0", VA = "0x13227C0")]
	public void Circle(Texture2D tex, int cx, int cy, int r, Color col)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x132255C", Offset = "0x132255C", VA = "0x132255C")]
	public void updateMeshSettings()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x1322990", Offset = "0x1322990", VA = "0x1322990")]
	private Mesh createMesh()
	{
		return null;
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x13233A8", Offset = "0x13233A8", VA = "0x13233A8")]
	public IndicatorLine()
	{
	}
}
[Token(Token = "0x2000034")]
public class QuaternionToEuler : MonoBehaviour
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float x;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float y;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float z;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float w;

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x10DC4DC", Offset = "0x10DC4DC", VA = "0x10DC4DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x10DC4E0", Offset = "0x10DC4E0", VA = "0x10DC4E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x10DC548", Offset = "0x10DC548", VA = "0x10DC548")]
	public QuaternionToEuler()
	{
	}
}
[Token(Token = "0x2000035")]
public class QuitApplication : MonoBehaviour
{
	[Token(Token = "0x6000117")]
	[Address(RVA = "0x10DC550", Offset = "0x10DC550", VA = "0x10DC550")]
	private void Start()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x10DC554", Offset = "0x10DC554", VA = "0x10DC554")]
	private void Update()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x10DC558", Offset = "0x10DC558", VA = "0x10DC558")]
	public void ExitGame()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x10DC560", Offset = "0x10DC560", VA = "0x10DC560")]
	public void BackToUpLayer()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x10DC56C", Offset = "0x10DC56C", VA = "0x10DC56C")]
	public QuitApplication()
	{
	}
}
[Token(Token = "0x2000036")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB70638", Offset = "0xB70638")]
public class RingMeshDrawer : MonoBehaviour
{
	[Token(Token = "0x400013F")]
	private const string LOG_TAG = "RingMeshDrawer";

	[Token(Token = "0x4000140")]
	private const float DEF_RING_WIDTH = 0.01f;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RingWidth;

	[Token(Token = "0x4000142")]
	private const float MIN_RING_WIDTH = 0.001f;

	[Token(Token = "0x4000143")]
	private const float DEF_INNER_CIRCLE_RADIUS = 0.02f;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InnerCircleRadius;

	[Token(Token = "0x4000145")]
	private const float MIN_INNER_CIRCLE_RADIUS = 0.001f;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Vector3 RingPosition;

	[Token(Token = "0x4000147")]
	private const float DEF_RING_DISTANCE = 2f;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float RingDistance;

	[Token(Token = "0x4000149")]
	private const float MIN_RING_DISTANCE = 0.3f;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color Color;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color ProgressColor;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public int RingPercent;

	[Token(Token = "0x400014D")]
	private const float percentAngle = 3.6f;

	[Token(Token = "0x400014E")]
	private const string RING_MATERIAL = "RingUnlitTransparentMat";

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material ringMaterial;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material ringMaterialInstance;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MeshRenderer meshRend;

	[Token(Token = "0x4000152")]
	private const int RENDER_QUEUE_MIN = 1000;

	[Token(Token = "0x4000153")]
	private const int RENDER_QUEUE_MAX = 5000;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MeshFilter meshFilt;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Camera mCamera;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool mEnabled;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 ringPos;

	[Token(Token = "0x4000158")]
	private const int VERTEX_COUNT = 400;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3[] ringVert;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color[] ringColor;

	[Token(Token = "0x400015B")]
	private const int TRIANGLE_COUNT = 600;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int[] ringTriangle;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector2[] ringUv;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x10DF180", Offset = "0x10DF180", VA = "0x10DF180")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x10DF228", Offset = "0x10DF228", VA = "0x10DF228")]
	private bool ValidateParameters()
	{
		return default(bool);
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x10DF4BC", Offset = "0x10DF4BC", VA = "0x10DF4BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x10DF6D0", Offset = "0x10DF6D0", VA = "0x10DF6D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x10DFD64", Offset = "0x10DFD64", VA = "0x10DFD64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x10DF870", Offset = "0x10DF870", VA = "0x10DF870")]
	public void DrawRing(float radius, float innerRadius, int percent, Vector3 position)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x10DFDEC", Offset = "0x10DFDEC", VA = "0x10DFDEC")]
	public RingMeshDrawer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000037")]
public class BatteryPercentage
{
	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float minBatteryPercentage;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float maxBatteryPercentage;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture texture;

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xD360C8", Offset = "0xD360C8", VA = "0xD360C8")]
	public BatteryPercentage()
	{
	}
}
[Token(Token = "0x2000038")]
public class UniversalControllerActions : MonoBehaviour
{
	[Token(Token = "0x200055B")]
	public enum AxisMapping
	{
		[Token(Token = "0x4002213")]
		Y_Axis,
		[Token(Token = "0x4002214")]
		Z_Axis
	}

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WVR_DeviceType device;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool useSystemConfig;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject TouchPad;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Touch_Dot;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AxisMapping touch_YAxis_mapping;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Touch_Press;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Trigger_Press;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject VolumeUp_Press;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject VolumeDown_Press;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject Grip_Press;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject DigitalTrigger_Press;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Menu_Press;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject Home_Press;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject Battery_Change;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<BatteryPercentage> batteryPercentages;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 originPosition;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MeshRenderer batteryMeshRenderer;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Mesh toucheffectMesh;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Mesh touchpadMesh;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool isTouchPressed;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Color materialColor;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool currentIsLeftHandMode;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int batteryLevels;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int t;

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x18B57E0", Offset = "0x18B57E0", VA = "0x18B57E0")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x18B59B4", Offset = "0x18B59B4", VA = "0x18B59B4")]
	private Color StringToColor(string color_string)
	{
		return default(Color);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x18B5AF0", Offset = "0x18B5AF0", VA = "0x18B5AF0")]
	private Texture2D GetTexture2D(string texture_path)
	{
		return null;
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x18B5B90", Offset = "0x18B5B90", VA = "0x18B5B90")]
	public void Circle(Texture2D tex, int cx, int cy, int r, Color col)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x18B5D60", Offset = "0x18B5D60", VA = "0x18B5D60")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x18B70E0", Offset = "0x18B70E0", VA = "0x18B70E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x18B75A0", Offset = "0x18B75A0", VA = "0x18B75A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x18B764C", Offset = "0x18B764C", VA = "0x18B764C")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x18B7748", Offset = "0x18B7748", VA = "0x18B7748")]
	private void onBatteryStatusUpdate(params object[] args)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x18B7824", Offset = "0x18B7824", VA = "0x18B7824")]
	private bool updateBatteryInfo()
	{
		return default(bool);
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x18B7EA0", Offset = "0x18B7EA0", VA = "0x18B7EA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x18B7270", Offset = "0x18B7270", VA = "0x18B7270")]
	private void resetButtonState()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x18B8114", Offset = "0x18B8114", VA = "0x18B8114")]
	private void Update()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x18B9CD4", Offset = "0x18B9CD4", VA = "0x18B9CD4")]
	public UniversalControllerActions()
	{
	}
}
[Token(Token = "0x2000039")]
public class WaveVR_Resource
{
	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_Resource mInstance;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string mPreferredLanguage;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string mCountry;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool useSystemLanguageFlag;

	[Token(Token = "0x17000010")]
	public static WaveVR_Resource instance
	{
		[Token(Token = "0x6000133")]
		[Address(RVA = "0x162EAA4", Offset = "0x162EAA4", VA = "0x162EAA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x162EBC0", Offset = "0x162EBC0", VA = "0x162EBC0")]
	public string getString(string stringName)
	{
		return null;
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x162ED34", Offset = "0x162ED34", VA = "0x162ED34")]
	public string getStringByLanguage(string stringName, string lang, string country)
	{
		return null;
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x162EFA8", Offset = "0x162EFA8", VA = "0x162EFA8")]
	public string getSystemLanguage()
	{
		return null;
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x162F080", Offset = "0x162F080", VA = "0x162F080")]
	public string getSystemCountry()
	{
		return null;
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x162F158", Offset = "0x162F158", VA = "0x162F158")]
	public bool setPreferredLanguage(string lang, string country)
	{
		return default(bool);
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x162F1EC", Offset = "0x162F1EC", VA = "0x162F1EC")]
	public void useSystemLanguage()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x162EB60", Offset = "0x162EB60", VA = "0x162EB60")]
	public WaveVR_Resource()
	{
	}
}
[Token(Token = "0x200003A")]
public class WVR_Android : Interop.WVR_Base
{
	[Token(Token = "0x200055C")]
	private class RequestCompleteHandler : AndroidJavaProxy
	{
		[Token(Token = "0x600289E")]
		[Address(RVA = "0x17FE10C", Offset = "0x17FE10C", VA = "0x17FE10C")]
		internal RequestCompleteHandler()
		{
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0x17FEFD8", Offset = "0x17FEFD8", VA = "0x17FEFD8")]
		public void onRequestCompletedwithObject(AndroidJavaObject resultObject)
		{
		}
	}

	[Token(Token = "0x200055D")]
	private class RequestUsbCompleteHandler : AndroidJavaProxy
	{
		[Token(Token = "0x60028A0")]
		[Address(RVA = "0x17FE2DC", Offset = "0x17FE2DC", VA = "0x17FE2DC")]
		internal RequestUsbCompleteHandler()
		{
		}

		[Token(Token = "0x60028A1")]
		[Address(RVA = "0x17FF274", Offset = "0x17FF274", VA = "0x17FF274")]
		public void onRequestCompletedwithObject(AndroidJavaObject resultObject)
		{
		}
	}

	[Token(Token = "0x200055E")]
	public class OEMConfigCallback : AndroidJavaProxy
	{
		[Token(Token = "0x60028A2")]
		[Address(RVA = "0x17FEE98", Offset = "0x17FEE98", VA = "0x17FEE98")]
		internal OEMConfigCallback()
		{
		}

		[Token(Token = "0x60028A3")]
		[Address(RVA = "0x17FEF2C", Offset = "0x17FEF2C", VA = "0x17FEF2C")]
		public void onConfigChanged()
		{
		}
	}

	[Token(Token = "0x400017F")]
	private const string PERMISSION_MANAGER_CLASSNAME = "com.htc.vr.permission.client.PermissionManager";

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WVR_RequestCompleteCallback mCallback;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WVR_RequestUsbCompleteCallback mUsbCallback;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaObject permissionsManager;

	[Token(Token = "0x4000183")]
	private const string RESOURCE_WRAPPER_CLASSNAME = "com.htc.vr.unity.ResourceWrapper";

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AndroidJavaObject ResourceWrapper;

	[Token(Token = "0x4000185")]
	private const string OEM_CONFIG_CLASSNAME = "com.htc.vr.unity.WVRUnityVRActivity";

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static WVR_OnOEMConfigChanged OEMChangedCallback;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static AndroidJavaObject mOEMConfig;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static OEMConfigCallback mOEMCallback;

	[PreserveSig]
	[Token(Token = "0x600013C")]
	[Address(RVA = "0x17F6744", Offset = "0x17F6744", VA = "0x17F6744")]
	public static extern bool WVR_PollEventQueue_Android(ref WVR_Event_t e);

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x17F67E8", Offset = "0x17F67E8", VA = "0x17F67E8", Slot = "4")]
	public override bool PollEventQueue(ref WVR_Event_t e)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600013E")]
	[Address(RVA = "0x17F684C", Offset = "0x17F684C", VA = "0x17F684C")]
	public static extern int WVR_GetInputDeviceCapability_Android(WVR_DeviceType type, WVR_InputType inputType);

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x17F68F8", Offset = "0x17F68F8", VA = "0x17F68F8", Slot = "5")]
	public override int GetInputDeviceCapability(WVR_DeviceType type, WVR_InputType inputType)
	{
		return default(int);
	}

	[PreserveSig]
	[Token(Token = "0x6000140")]
	[Address(RVA = "0x17F696C", Offset = "0x17F696C", VA = "0x17F696C")]
	public static extern WVR_AnalogType WVR_GetInputDeviceAnalogType_Android(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x17F6A18", Offset = "0x17F6A18", VA = "0x17F6A18", Slot = "6")]
	public override WVR_AnalogType GetInputDeviceAnalogType(WVR_DeviceType type, WVR_InputId id)
	{
		return default(WVR_AnalogType);
	}

	[PreserveSig]
	[Token(Token = "0x6000142")]
	[Address(RVA = "0x17F6A8C", Offset = "0x17F6A8C", VA = "0x17F6A8C")]
	public static extern bool WVR_GetInputDeviceState_Android(WVR_DeviceType type, uint inputMask, ref uint buttons, ref uint touches, [In][Out] WVR_AnalogState_t[] analogArray, uint analogArrayCount);

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x17F6B78", Offset = "0x17F6B78", VA = "0x17F6B78", Slot = "7")]
	public override bool GetInputDeviceState(WVR_DeviceType type, uint inputMask, ref uint buttons, ref uint touches, [In][Out] WVR_AnalogState_t[] analogArray, uint analogArrayCount)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000144")]
	[Address(RVA = "0x17F6C1C", Offset = "0x17F6C1C", VA = "0x17F6C1C")]
	public static extern int WVR_GetInputTypeCount_Android(WVR_DeviceType type, WVR_InputType inputType);

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x17F6CC8", Offset = "0x17F6CC8", VA = "0x17F6CC8", Slot = "8")]
	public override int GetInputTypeCount(WVR_DeviceType type, WVR_InputType inputType)
	{
		return default(int);
	}

	[PreserveSig]
	[Token(Token = "0x6000146")]
	[Address(RVA = "0x17F6D3C", Offset = "0x17F6D3C", VA = "0x17F6D3C")]
	public static extern bool WVR_GetInputButtonState_Android(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x17F6DF0", Offset = "0x17F6DF0", VA = "0x17F6DF0", Slot = "9")]
	public override bool GetInputButtonState(WVR_DeviceType type, WVR_InputId id)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000148")]
	[Address(RVA = "0x17F6E64", Offset = "0x17F6E64", VA = "0x17F6E64")]
	public static extern bool WVR_GetInputTouchState_Android(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x17F6F18", Offset = "0x17F6F18", VA = "0x17F6F18", Slot = "10")]
	public override bool GetInputTouchState(WVR_DeviceType type, WVR_InputId id)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600014A")]
	[Address(RVA = "0x17F6F8C", Offset = "0x17F6F8C", VA = "0x17F6F8C")]
	public static extern WVR_Axis_t WVR_GetInputAnalogAxis_Android(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x17F7038", Offset = "0x17F7038", VA = "0x17F7038", Slot = "11")]
	public override WVR_Axis_t GetInputAnalogAxis(WVR_DeviceType type, WVR_InputId id)
	{
		return default(WVR_Axis_t);
	}

	[PreserveSig]
	[Token(Token = "0x600014C")]
	[Address(RVA = "0x17F70AC", Offset = "0x17F70AC", VA = "0x17F70AC")]
	public static extern void WVR_GetPoseState_Android(WVR_DeviceType type, WVR_PoseOriginModel originModel, uint predictedMilliSec, ref WVR_PoseState_t poseState);

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x17F71C0", Offset = "0x17F71C0", VA = "0x17F71C0", Slot = "13")]
	public override void GetPoseState(WVR_DeviceType type, WVR_PoseOriginModel originModel, uint predictedMilliSec, ref WVR_PoseState_t poseState)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600014E")]
	[Address(RVA = "0x17F724C", Offset = "0x17F724C", VA = "0x17F724C")]
	public static extern void WVR_GetSyncPose_Android(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount);

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x17F740C", Offset = "0x17F740C", VA = "0x17F740C", Slot = "17")]
	public override void GetSyncPose(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000150")]
	[Address(RVA = "0x17F7488", Offset = "0x17F7488", VA = "0x17F7488")]
	public static extern bool WVR_IsDeviceConnected_Android(WVR_DeviceType type);

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x17F752C", Offset = "0x17F752C", VA = "0x17F752C", Slot = "18")]
	public override bool IsDeviceConnected(WVR_DeviceType type)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000152")]
	[Address(RVA = "0x17F7590", Offset = "0x17F7590", VA = "0x17F7590")]
	public static extern void WVR_TriggerVibration_Android(WVR_DeviceType type, WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity);

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x17F7658", Offset = "0x17F7658", VA = "0x17F7658", Slot = "19")]
	public override void TriggerVibration(WVR_DeviceType type, WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000154")]
	[Address(RVA = "0x17F76EC", Offset = "0x17F76EC", VA = "0x17F76EC")]
	public static extern void WVR_InAppRecenter_Android(WVR_RecenterType recenterType);

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x17F7788", Offset = "0x17F7788", VA = "0x17F7788", Slot = "20")]
	public override void InAppRecenter(WVR_RecenterType recenterType)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000156")]
	[Address(RVA = "0x17F77EC", Offset = "0x17F77EC", VA = "0x17F77EC")]
	public static extern void WVR_SetNeckModelEnabled_Android(bool enabled);

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x17F7888", Offset = "0x17F7888", VA = "0x17F7888", Slot = "21")]
	public override void SetNeckModelEnabled(bool enabled)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000158")]
	[Address(RVA = "0x17F78EC", Offset = "0x17F78EC", VA = "0x17F78EC")]
	public static extern void WVR_SetNeckModel_Android(WVR_SimulationType simulationType);

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x17F7988", Offset = "0x17F7988", VA = "0x17F7988", Slot = "22")]
	public override void SetNeckModel(WVR_SimulationType simulationType)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600015A")]
	[Address(RVA = "0x17F79EC", Offset = "0x17F79EC", VA = "0x17F79EC")]
	public static extern void WVR_SetArmModel_Android(WVR_SimulationType simulationType);

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x17F7A88", Offset = "0x17F7A88", VA = "0x17F7A88", Slot = "23")]
	public override void SetArmModel(WVR_SimulationType simulationType)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600015C")]
	[Address(RVA = "0x17F7AEC", Offset = "0x17F7AEC", VA = "0x17F7AEC")]
	public static extern void WVR_SetArmSticky_Android(bool stickyArm);

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x17F7B88", Offset = "0x17F7B88", VA = "0x17F7B88", Slot = "24")]
	public override void SetArmSticky(bool stickyArm)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600015E")]
	[Address(RVA = "0x17F7BEC", Offset = "0x17F7BEC", VA = "0x17F7BEC")]
	public static extern bool WVR_SetInputRequest_Android(WVR_DeviceType type, WVR_InputAttribute_t[] request, uint size);

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x17F7CB0", Offset = "0x17F7CB0", VA = "0x17F7CB0", Slot = "25")]
	public override bool SetInputRequest(WVR_DeviceType type, WVR_InputAttribute_t[] request, uint size)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000160")]
	[Address(RVA = "0x17F7D2C", Offset = "0x17F7D2C", VA = "0x17F7D2C")]
	public static extern bool WVR_GetInputMappingPair_Android(WVR_DeviceType type, WVR_InputId destination, ref WVR_InputMappingPair_t pair);

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x17F7DE8", Offset = "0x17F7DE8", VA = "0x17F7DE8", Slot = "26")]
	public override bool GetInputMappingPair(WVR_DeviceType type, WVR_InputId destination, ref WVR_InputMappingPair_t pair)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000162")]
	[Address(RVA = "0x17F7E64", Offset = "0x17F7E64", VA = "0x17F7E64")]
	public static extern uint WVR_GetInputMappingTable_Android(WVR_DeviceType type, [In][Out] WVR_InputMappingPair_t[] table, uint size);

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x17F7F20", Offset = "0x17F7F20", VA = "0x17F7F20", Slot = "27")]
	public override uint GetInputMappingTable(WVR_DeviceType type, [In][Out] WVR_InputMappingPair_t[] table, uint size)
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x6000164")]
	[Address(RVA = "0x17F7F9C", Offset = "0x17F7F9C", VA = "0x17F7F9C")]
	public static extern WVR_Arena_t WVR_GetArena_Android();

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x17F802C", Offset = "0x17F802C", VA = "0x17F802C", Slot = "28")]
	public override WVR_Arena_t GetArena()
	{
		return default(WVR_Arena_t);
	}

	[PreserveSig]
	[Token(Token = "0x6000166")]
	[Address(RVA = "0x17F8090", Offset = "0x17F8090", VA = "0x17F8090")]
	public static extern bool WVR_SetArena_Android(ref WVR_Arena_t arena);

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x17F8134", Offset = "0x17F8134", VA = "0x17F8134", Slot = "29")]
	public override bool SetArena(ref WVR_Arena_t arena)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000168")]
	[Address(RVA = "0x17F8198", Offset = "0x17F8198", VA = "0x17F8198")]
	public static extern WVR_ArenaVisible WVR_GetArenaVisible_Android();

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x17F8224", Offset = "0x17F8224", VA = "0x17F8224", Slot = "30")]
	public override WVR_ArenaVisible GetArenaVisible()
	{
		return default(WVR_ArenaVisible);
	}

	[PreserveSig]
	[Token(Token = "0x600016A")]
	[Address(RVA = "0x17F8280", Offset = "0x17F8280", VA = "0x17F8280")]
	public static extern void WVR_SetArenaVisible_Android(WVR_ArenaVisible config);

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x17F831C", Offset = "0x17F831C", VA = "0x17F831C", Slot = "31")]
	public override void SetArenaVisible(WVR_ArenaVisible config)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600016C")]
	[Address(RVA = "0x17F8380", Offset = "0x17F8380", VA = "0x17F8380")]
	public static extern bool WVR_IsOverArenaRange_Android();

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x17F8414", Offset = "0x17F8414", VA = "0x17F8414", Slot = "32")]
	public override bool IsOverArenaRange()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600016E")]
	[Address(RVA = "0x17F8470", Offset = "0x17F8470", VA = "0x17F8470")]
	public static extern float WVR_GetDeviceBatteryPercentage_Android(WVR_DeviceType type);

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x17F850C", Offset = "0x17F850C", VA = "0x17F850C", Slot = "33")]
	public override float GetDeviceBatteryPercentage(WVR_DeviceType type)
	{
		return default(float);
	}

	[PreserveSig]
	[Token(Token = "0x6000170")]
	[Address(RVA = "0x17F8570", Offset = "0x17F8570", VA = "0x17F8570")]
	public static extern WVR_BatteryStatus WVR_GetBatteryStatus_Android(WVR_DeviceType type);

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x17F860C", Offset = "0x17F860C", VA = "0x17F860C", Slot = "34")]
	public override WVR_BatteryStatus GetBatteryStatus(WVR_DeviceType type)
	{
		return default(WVR_BatteryStatus);
	}

	[PreserveSig]
	[Token(Token = "0x6000172")]
	[Address(RVA = "0x17F8670", Offset = "0x17F8670", VA = "0x17F8670")]
	public static extern WVR_ChargeStatus WVR_GetChargeStatus_Android(WVR_DeviceType type);

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x17F870C", Offset = "0x17F870C", VA = "0x17F870C", Slot = "35")]
	public override WVR_ChargeStatus GetChargeStatus(WVR_DeviceType type)
	{
		return default(WVR_ChargeStatus);
	}

	[PreserveSig]
	[Token(Token = "0x6000174")]
	[Address(RVA = "0x17F8770", Offset = "0x17F8770", VA = "0x17F8770")]
	public static extern WVR_BatteryTemperatureStatus WVR_GetBatteryTemperatureStatus_Android(WVR_DeviceType type);

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x17F880C", Offset = "0x17F880C", VA = "0x17F880C", Slot = "36")]
	public override WVR_BatteryTemperatureStatus GetBatteryTemperatureStatus(WVR_DeviceType type)
	{
		return default(WVR_BatteryTemperatureStatus);
	}

	[PreserveSig]
	[Token(Token = "0x6000176")]
	[Address(RVA = "0x17F8870", Offset = "0x17F8870", VA = "0x17F8870")]
	public static extern float WVR_GetBatteryTemperature_Android(WVR_DeviceType type);

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x17F890C", Offset = "0x17F890C", VA = "0x17F890C", Slot = "37")]
	public override float GetBatteryTemperature(WVR_DeviceType type)
	{
		return default(float);
	}

	[PreserveSig]
	[Token(Token = "0x6000178")]
	[Address(RVA = "0x17F8970", Offset = "0x17F8970", VA = "0x17F8970")]
	public static extern WVR_Result WVR_StartHandGesture();

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x17F89FC", Offset = "0x17F89FC", VA = "0x17F89FC", Slot = "38")]
	public override WVR_Result StartHandGesture()
	{
		return default(WVR_Result);
	}

	[PreserveSig]
	[Token(Token = "0x600017A")]
	[Address(RVA = "0x17F8A58", Offset = "0x17F8A58", VA = "0x17F8A58")]
	public static extern void WVR_StopHandGesture();

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x17F8AE4", Offset = "0x17F8AE4", VA = "0x17F8AE4", Slot = "39")]
	public override void StopHandGesture()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600017C")]
	[Address(RVA = "0x17F8B40", Offset = "0x17F8B40", VA = "0x17F8B40")]
	public static extern WVR_Result WVR_GetHandGestureData(ref WVR_HandGestureData_t data);

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x17F8BDC", Offset = "0x17F8BDC", VA = "0x17F8BDC", Slot = "40")]
	public override WVR_Result GetHandGestureData(ref WVR_HandGestureData_t data)
	{
		return default(WVR_Result);
	}

	[PreserveSig]
	[Token(Token = "0x600017E")]
	[Address(RVA = "0x17F8C40", Offset = "0x17F8C40", VA = "0x17F8C40")]
	public static extern WVR_Result WVR_StartHandTracking();

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x17F8CCC", Offset = "0x17F8CCC", VA = "0x17F8CCC", Slot = "41")]
	public override WVR_Result StartHandTracking()
	{
		return default(WVR_Result);
	}

	[PreserveSig]
	[Token(Token = "0x6000180")]
	[Address(RVA = "0x17F8D28", Offset = "0x17F8D28", VA = "0x17F8D28")]
	public static extern void WVR_StopHandTracking();

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x17F8DB4", Offset = "0x17F8DB4", VA = "0x17F8DB4", Slot = "42")]
	public override void StopHandTracking()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000182")]
	[Address(RVA = "0x17F8E10", Offset = "0x17F8E10", VA = "0x17F8E10")]
	public static extern WVR_Result WVR_GetHandTrackingData(ref WVR_HandTrackingData_t data, WVR_PoseOriginModel originModel, uint predictedMilliSec);

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x17F8F2C", Offset = "0x17F8F2C", VA = "0x17F8F2C", Slot = "43")]
	public override WVR_Result GetHandTrackingData(ref WVR_HandTrackingData_t data, WVR_PoseOriginModel originModel, uint predictedMilliSec)
	{
		return default(WVR_Result);
	}

	[PreserveSig]
	[Token(Token = "0x6000184")]
	[Address(RVA = "0x17F8FA8", Offset = "0x17F8FA8", VA = "0x17F8FA8")]
	public static extern ulong WVR_GetSupportedFeatures();

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x17F9034", Offset = "0x17F9034", VA = "0x17F9034", Slot = "44")]
	public override ulong GetSupportedFeatures()
	{
		return default(ulong);
	}

	[PreserveSig]
	[Token(Token = "0x6000186")]
	[Address(RVA = "0x17F9090", Offset = "0x17F9090", VA = "0x17F9090")]
	public static extern WVR_InitError WVR_Init_Android(WVR_AppType eType);

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x17F912C", Offset = "0x17F912C", VA = "0x17F912C", Slot = "45")]
	public override WVR_InitError Init(WVR_AppType eType)
	{
		return default(WVR_InitError);
	}

	[PreserveSig]
	[Token(Token = "0x6000188")]
	[Address(RVA = "0x17F9190", Offset = "0x17F9190", VA = "0x17F9190")]
	public static extern void WVR_Quit_Android();

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x17F921C", Offset = "0x17F921C", VA = "0x17F921C", Slot = "47")]
	public override void Quit()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600018A")]
	[Address(RVA = "0x17F9278", Offset = "0x17F9278", VA = "0x17F9278")]
	public static extern IntPtr WVR_GetInitErrorString_Android(WVR_InitError error);

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x17F9314", Offset = "0x17F9314", VA = "0x17F9314", Slot = "48")]
	public override IntPtr GetInitErrorString(WVR_InitError error)
	{
		return default(IntPtr);
	}

	[PreserveSig]
	[Token(Token = "0x600018C")]
	[Address(RVA = "0x17F9378", Offset = "0x17F9378", VA = "0x17F9378")]
	public static extern uint WVR_GetWaveRuntimeVersion_Android();

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x17F9404", Offset = "0x17F9404", VA = "0x17F9404", Slot = "49")]
	public override uint GetWaveRuntimeVersion()
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x600018E")]
	[Address(RVA = "0x17F9460", Offset = "0x17F9460", VA = "0x17F9460")]
	public static extern uint WVR_GetWaveSDKVersion_Android();

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x17F94EC", Offset = "0x17F94EC", VA = "0x17F94EC", Slot = "50")]
	public override uint GetWaveSDKVersion()
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x6000190")]
	[Address(RVA = "0x17F9548", Offset = "0x17F9548", VA = "0x17F9548")]
	public static extern bool WVR_IsInputFocusCapturedBySystem_Android();

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x17F95DC", Offset = "0x17F95DC", VA = "0x17F95DC", Slot = "51")]
	public override bool IsInputFocusCapturedBySystem()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000192")]
	[Address(RVA = "0x17F9638", Offset = "0x17F9638", VA = "0x17F9638")]
	internal static extern WVR_RenderError WVR_RenderInit_Android(ref WVR_RenderInitParams_t param);

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x17F96D4", Offset = "0x17F96D4", VA = "0x17F96D4", Slot = "52")]
	internal override WVR_RenderError RenderInit(ref WVR_RenderInitParams_t param)
	{
		return default(WVR_RenderError);
	}

	[PreserveSig]
	[Token(Token = "0x6000194")]
	[Address(RVA = "0x17F9738", Offset = "0x17F9738", VA = "0x17F9738")]
	internal static extern bool WVR_SetPerformanceLevels_Android(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel);

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x17F97EC", Offset = "0x17F97EC", VA = "0x17F97EC", Slot = "53")]
	internal override bool SetPerformanceLevels(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000196")]
	[Address(RVA = "0x17F9860", Offset = "0x17F9860", VA = "0x17F9860")]
	internal static extern bool WVR_EnableAdaptiveQuality_Android(bool enable, uint flags);

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x17F9914", Offset = "0x17F9914", VA = "0x17F9914", Slot = "54")]
	internal override bool EnableAdaptiveQuality(bool enable, uint flags)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000198")]
	[Address(RVA = "0x17F9988", Offset = "0x17F9988", VA = "0x17F9988")]
	internal static extern bool WVR_IsAdaptiveQualityEnabled_Android();

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x17F9A1C", Offset = "0x17F9A1C", VA = "0x17F9A1C", Slot = "55")]
	internal override bool IsAdaptiveQualityEnabled()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600019A")]
	[Address(RVA = "0x17F9A78", Offset = "0x17F9A78", VA = "0x17F9A78")]
	public static extern bool WVR_StartCamera_Android(ref WVR_CameraInfo_t info);

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x17F9B1C", Offset = "0x17F9B1C", VA = "0x17F9B1C", Slot = "56")]
	public override bool StartCamera(ref WVR_CameraInfo_t info)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600019C")]
	[Address(RVA = "0x17F9B80", Offset = "0x17F9B80", VA = "0x17F9B80")]
	public static extern void WVR_StopCamera_Android();

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x17F9C0C", Offset = "0x17F9C0C", VA = "0x17F9C0C", Slot = "57")]
	public override void StopCamera()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600019E")]
	[Address(RVA = "0x17F9C68", Offset = "0x17F9C68", VA = "0x17F9C68")]
	public static extern bool WVR_UpdateTexture_Android(uint textureid);

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x17F9D0C", Offset = "0x17F9D0C", VA = "0x17F9D0C", Slot = "58")]
	public override bool UpdateTexture(IntPtr textureid)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x17F9D84", Offset = "0x17F9D84", VA = "0x17F9D84")]
	public static extern bool WVR_GetCameraIntrinsic_Android(WVR_CameraPosition position, ref WVR_CameraIntrinsic_t intrinsic);

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x17F9E38", Offset = "0x17F9E38", VA = "0x17F9E38", Slot = "59")]
	public override bool GetCameraIntrinsic(WVR_CameraPosition position, ref WVR_CameraIntrinsic_t intrinsic)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x17F9EAC", Offset = "0x17F9EAC", VA = "0x17F9EAC")]
	public static extern bool WVR_GetCameraFrameBuffer_Android(IntPtr pFramebuffer, uint frameBufferSize);

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x17F9F60", Offset = "0x17F9F60", VA = "0x17F9F60", Slot = "60")]
	public override bool GetCameraFrameBuffer(IntPtr pFramebuffer, uint frameBufferSize)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x17F9FD4", Offset = "0x17F9FD4", VA = "0x17F9FD4")]
	public static extern bool GetFrameBufferWithPoseState_Android(IntPtr pFramebuffer, uint frameBufferSize, WVR_PoseOriginModel origin, uint predictInMs, ref WVR_PoseState_t poseState);

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x17FA104", Offset = "0x17FA104", VA = "0x17FA104", Slot = "61")]
	public override bool GetFrameBufferWithPoseState(IntPtr pFramebuffer, uint frameBufferSize, WVR_PoseOriginModel origin, uint predictInMs, ref WVR_PoseState_t poseState)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x17FA198", Offset = "0x17FA198", VA = "0x17FA198")]
	public static extern void ReleaseCameraTexture_Android();

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x17FA220", Offset = "0x17FA220", VA = "0x17FA220", Slot = "63")]
	public override void ReleaseCameraTexture()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x17FA27C", Offset = "0x17FA27C", VA = "0x17FA27C")]
	public static extern bool DrawTextureWithBuffer_Android(uint textureId, WVR_CameraImageFormat imgFormat, IntPtr frameBuffer, uint size, uint width, uint height);

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x17FA360", Offset = "0x17FA360", VA = "0x17FA360", Slot = "62")]
	public override bool DrawTextureWithBuffer(IntPtr textureId, WVR_CameraImageFormat imgFormat, IntPtr frameBuffer, uint size, uint width, uint height)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x17FA418", Offset = "0x17FA418", VA = "0x17FA418")]
	public static extern bool WVR_IsDeviceSuspend_Android(WVR_DeviceType type);

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x17FA4BC", Offset = "0x17FA4BC", VA = "0x17FA4BC", Slot = "64")]
	public override bool IsDeviceSuspend(WVR_DeviceType type)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x17FA520", Offset = "0x17FA520", VA = "0x17FA520")]
	public static extern void WVR_ConvertMatrixQuaternion_Android(ref WVR_Matrix4f_t mat, ref WVR_Quatf_t quat, bool m2q);

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x17FA5D4", Offset = "0x17FA5D4", VA = "0x17FA5D4", Slot = "65")]
	public override void ConvertMatrixQuaternion(ref WVR_Matrix4f_t mat, ref WVR_Quatf_t quat, bool m2q)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x17FA650", Offset = "0x17FA650", VA = "0x17FA650")]
	public static extern WVR_NumDoF WVR_GetDegreeOfFreedom_Android(WVR_DeviceType type);

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x17FA6EC", Offset = "0x17FA6EC", VA = "0x17FA6EC", Slot = "66")]
	public override WVR_NumDoF GetDegreeOfFreedom(WVR_DeviceType type)
	{
		return default(WVR_NumDoF);
	}

	[PreserveSig]
	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x17FA750", Offset = "0x17FA750", VA = "0x17FA750")]
	public static extern void WVR_SetParameters_Android(WVR_DeviceType type, IntPtr pchValue);

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x17FA7FC", Offset = "0x17FA7FC", VA = "0x17FA7FC", Slot = "67")]
	public override void SetParameters(WVR_DeviceType type, IntPtr pchValue)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x17FA870", Offset = "0x17FA870", VA = "0x17FA870")]
	public static extern uint WVR_GetParameters_Android(WVR_DeviceType type, IntPtr pchValue, IntPtr retValue, uint unBufferSize);

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x17FA934", Offset = "0x17FA934", VA = "0x17FA934", Slot = "68")]
	public override uint GetParameters(WVR_DeviceType type, IntPtr pchValue, IntPtr retValue, uint unBufferSize)
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x17FA9C0", Offset = "0x17FA9C0", VA = "0x17FA9C0")]
	public static extern WVR_DeviceType WVR_GetDefaultControllerRole_Android();

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x17FAA4C", Offset = "0x17FAA4C", VA = "0x17FAA4C", Slot = "69")]
	public override WVR_DeviceType GetDefaultControllerRole()
	{
		return default(WVR_DeviceType);
	}

	[PreserveSig]
	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x17FAAA8", Offset = "0x17FAAA8", VA = "0x17FAAA8")]
	public static extern bool WVR_SetInteractionMode_Android(WVR_InteractionMode mode);

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x17FAB4C", Offset = "0x17FAB4C", VA = "0x17FAB4C", Slot = "70")]
	public override bool SetInteractionMode(WVR_InteractionMode mode)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x17FABB0", Offset = "0x17FABB0", VA = "0x17FABB0")]
	public static extern WVR_InteractionMode WVR_GetInteractionMode_Android();

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x17FAC3C", Offset = "0x17FAC3C", VA = "0x17FAC3C", Slot = "71")]
	public override WVR_InteractionMode GetInteractionMode()
	{
		return default(WVR_InteractionMode);
	}

	[PreserveSig]
	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x17FAC98", Offset = "0x17FAC98", VA = "0x17FAC98")]
	public static extern bool WVR_SetGazeTriggerType_Android(WVR_GazeTriggerType type);

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x17FAD3C", Offset = "0x17FAD3C", VA = "0x17FAD3C", Slot = "72")]
	public override bool SetGazeTriggerType(WVR_GazeTriggerType type)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x17FADA0", Offset = "0x17FADA0", VA = "0x17FADA0")]
	public static extern WVR_GazeTriggerType WVR_GetGazeTriggerType_Android();

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x17FAE2C", Offset = "0x17FAE2C", VA = "0x17FAE2C", Slot = "73")]
	public override WVR_GazeTriggerType GetGazeTriggerType()
	{
		return default(WVR_GazeTriggerType);
	}

	[PreserveSig]
	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x17FAE88", Offset = "0x17FAE88", VA = "0x17FAE88")]
	public static extern bool WVR_GetDeviceErrorState_Android(WVR_DeviceType dev_type, WVR_DeviceErrorState error_state);

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x17FAF3C", Offset = "0x17FAF3C", VA = "0x17FAF3C", Slot = "74")]
	public override bool GetDeviceErrorState(WVR_DeviceType dev_type, WVR_DeviceErrorState error_state)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x17FAFB0", Offset = "0x17FAFB0", VA = "0x17FAFB0")]
	public static extern void WVR_GetRenderTargetSize_Android(ref uint width, ref uint height);

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x17FB05C", Offset = "0x17FB05C", VA = "0x17FB05C", Slot = "75")]
	public override void GetRenderTargetSize(ref uint width, ref uint height)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x17FB0D0", Offset = "0x17FB0D0", VA = "0x17FB0D0")]
	public static extern WVR_Matrix4f_t WVR_GetProjection_Android(WVR_Eye eye, float near, float far);

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x17FB194", Offset = "0x17FB194", VA = "0x17FB194", Slot = "76")]
	public override WVR_Matrix4f_t GetProjection(WVR_Eye eye, float near, float far)
	{
		return default(WVR_Matrix4f_t);
	}

	[PreserveSig]
	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x17FB220", Offset = "0x17FB220", VA = "0x17FB220")]
	public static extern void WVR_GetClippingPlaneBoundary_Android(WVR_Eye eye, ref float left, ref float right, ref float top, ref float bottom);

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x17FB2EC", Offset = "0x17FB2EC", VA = "0x17FB2EC", Slot = "77")]
	public override void GetClippingPlaneBoundary(WVR_Eye eye, ref float left, ref float right, ref float top, ref float bottom)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x17FB380", Offset = "0x17FB380", VA = "0x17FB380")]
	public static extern void WVR_SetOverfillRatio_Android(float ratioX, float ratioY);

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x17FB428", Offset = "0x17FB428", VA = "0x17FB428", Slot = "78")]
	public override void SetOverfillRatio(float ratioX, float ratioY)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x17FB49C", Offset = "0x17FB49C", VA = "0x17FB49C")]
	public static extern WVR_Matrix4f_t WVR_GetTransformFromEyeToHead_Android(WVR_Eye eye, WVR_NumDoF dof);

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x17FB550", Offset = "0x17FB550", VA = "0x17FB550", Slot = "79")]
	public override WVR_Matrix4f_t GetTransformFromEyeToHead(WVR_Eye eye, WVR_NumDoF dof)
	{
		return default(WVR_Matrix4f_t);
	}

	[PreserveSig]
	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x17FB5CC", Offset = "0x17FB5CC", VA = "0x17FB5CC")]
	public static extern WVR_SubmitError WVR_SubmitFrame_Android(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod);

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x17FB7B0", Offset = "0x17FB7B0", VA = "0x17FB7B0", Slot = "80")]
	public override WVR_SubmitError SubmitFrame(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod)
	{
		return default(WVR_SubmitError);
	}

	[PreserveSig]
	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x17FB83C", Offset = "0x17FB83C", VA = "0x17FB83C")]
	public static extern void WVR_PreRenderEye_Android(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_RenderFoveationParams[] foveationParams);

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x17FB900", Offset = "0x17FB900", VA = "0x17FB900", Slot = "82")]
	public override void PreRenderEye(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_RenderFoveationParams[] foveationParams)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x17FB97C", Offset = "0x17FB97C", VA = "0x17FB97C")]
	public static extern bool WVR_RequestScreenshot_Android(uint width, uint height, WVR_ScreenshotMode mode, IntPtr filename);

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x17FBA48", Offset = "0x17FBA48", VA = "0x17FBA48", Slot = "83")]
	public override bool RequestScreenshot(uint width, uint height, WVR_ScreenshotMode mode, IntPtr filename)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x17FBAD4", Offset = "0x17FBAD4", VA = "0x17FBAD4")]
	public static extern void WVR_RenderMask_Android(WVR_Eye eye);

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x17FBB70", Offset = "0x17FBB70", VA = "0x17FBB70", Slot = "84")]
	public override void RenderMask(WVR_Eye eye)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x17FBBD4", Offset = "0x17FBBD4", VA = "0x17FBBD4")]
	public static extern bool WVR_GetRenderProps_Android(ref WVR_RenderProps_t props);

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x17FBCBC", Offset = "0x17FBCBC", VA = "0x17FBCBC", Slot = "85")]
	public override bool GetRenderProps(ref WVR_RenderProps_t props)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x17FBD20", Offset = "0x17FBD20", VA = "0x17FBD20")]
	public static extern IntPtr WVR_ObtainTextureQueue_Android(WVR_TextureTarget target, WVR_TextureFormat format, WVR_TextureType type, uint width, uint height, int level);

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x17FBDFC", Offset = "0x17FBDFC", VA = "0x17FBDFC", Slot = "86")]
	public override IntPtr ObtainTextureQueue(WVR_TextureTarget target, WVR_TextureFormat format, WVR_TextureType type, uint width, uint height, int level)
	{
		return default(IntPtr);
	}

	[PreserveSig]
	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x17FBEA0", Offset = "0x17FBEA0", VA = "0x17FBEA0")]
	public static extern uint WVR_GetTextureQueueLength_Android(IntPtr handle);

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x17FBF3C", Offset = "0x17FBF3C", VA = "0x17FBF3C", Slot = "87")]
	public override uint GetTextureQueueLength(IntPtr handle)
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x17FBFA0", Offset = "0x17FBFA0", VA = "0x17FBFA0")]
	public static extern WVR_TextureParams_t WVR_GetTexture_Android(IntPtr handle, int index);

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x17FC054", Offset = "0x17FC054", VA = "0x17FC054", Slot = "88")]
	public override WVR_TextureParams_t GetTexture(IntPtr handle, int index)
	{
		return default(WVR_TextureParams_t);
	}

	[PreserveSig]
	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x17FC0D0", Offset = "0x17FC0D0", VA = "0x17FC0D0")]
	public static extern int WVR_GetAvailableTextureIndex_Android(IntPtr handle);

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x17FC16C", Offset = "0x17FC16C", VA = "0x17FC16C", Slot = "89")]
	public override int GetAvailableTextureIndex(IntPtr handle)
	{
		return default(int);
	}

	[PreserveSig]
	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x17FC1D0", Offset = "0x17FC1D0", VA = "0x17FC1D0")]
	public static extern void WVR_ReleaseTextureQueue_Android(IntPtr handle);

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x17FC26C", Offset = "0x17FC26C", VA = "0x17FC26C", Slot = "90")]
	public override void ReleaseTextureQueue(IntPtr handle)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x17FC2D0", Offset = "0x17FC2D0", VA = "0x17FC2D0")]
	public static extern bool WVR_IsRenderFoveationSupport_Android();

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x17FC364", Offset = "0x17FC364", VA = "0x17FC364", Slot = "91")]
	public override bool IsRenderFoveationSupport()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x17FC3C0", Offset = "0x17FC3C0", VA = "0x17FC3C0")]
	public static extern void WVR_RenderFoveation_Android(bool enable);

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x17FC45C", Offset = "0x17FC45C", VA = "0x17FC45C", Slot = "92")]
	public override void RenderFoveation(bool enable)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x17FC4C0", Offset = "0x17FC4C0", VA = "0x17FC4C0")]
	public static extern void WVR_SetPosePredictEnabled_Android(WVR_DeviceType type, bool enabled_position_predict, bool enable_rotation_predict);

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x17FC574", Offset = "0x17FC574", VA = "0x17FC574", Slot = "93")]
	public override void SetPosePredictEnabled(WVR_DeviceType type, bool enabled_position_predict, bool enable_rotation_predict)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x17FC5F0", Offset = "0x17FC5F0", VA = "0x17FC5F0")]
	public static extern bool WVR_ShowPassthroughOverlay_Android(bool show);

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x17FC694", Offset = "0x17FC694", VA = "0x17FC694", Slot = "94")]
	public override bool ShowPassthroughOverlay(bool show)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x17FC6F8", Offset = "0x17FC6F8", VA = "0x17FC6F8")]
	public static extern void WVR_EnableAutoPassthrough_Android(bool enable);

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x17FC794", Offset = "0x17FC794", VA = "0x17FC794", Slot = "95")]
	public override void EnableAutoPassthrough(bool enable)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x17FC7F8", Offset = "0x17FC7F8", VA = "0x17FC7F8")]
	public static extern bool WVR_IsPassthroughOverlayVisible_Android();

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x17FC88C", Offset = "0x17FC88C", VA = "0x17FC88C", Slot = "96")]
	public override bool IsPassthroughOverlayVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x17FC8E8", Offset = "0x17FC8E8", VA = "0x17FC8E8", Slot = "97")]
	public override string DeployRenderModelAssets(int deviceIndex, string renderModelName)
	{
		return null;
	}

	[PreserveSig]
	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x17FCBDC", Offset = "0x17FCBDC", VA = "0x17FCBDC")]
	public static extern void WVR_SetFocusedController_Android(WVR_DeviceType focusController);

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x17FCC78", Offset = "0x17FCC78", VA = "0x17FCC78", Slot = "98")]
	public override void SetFocusedController(WVR_DeviceType focusController)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x17FCCDC", Offset = "0x17FCCDC", VA = "0x17FCCDC")]
	public static extern WVR_DeviceType WVR_GetFocusedController_Android();

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x17FCD68", Offset = "0x17FCD68", VA = "0x17FCD68", Slot = "99")]
	public override WVR_DeviceType GetFocusedController()
	{
		return default(WVR_DeviceType);
	}

	[PreserveSig]
	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x17FCDC4", Offset = "0x17FCDC4", VA = "0x17FCDC4")]
	public static extern bool WVR_OpenMesh_Android(string filename, ref uint sessiionid, IntPtr errorCode, bool merge);

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x17FCEA4", Offset = "0x17FCEA4", VA = "0x17FCEA4", Slot = "100")]
	public override bool OpenMesh(string filename, ref uint sessionid, IntPtr errorCode, bool merge)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x17FCF30", Offset = "0x17FCF30", VA = "0x17FCF30")]
	public static extern bool WVR_getSectionCount_Android(uint sessionid, ref uint sectionCount);

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x17FCFE4", Offset = "0x17FCFE4", VA = "0x17FCFE4", Slot = "101")]
	public override bool GetSectionCount(uint sessionid, ref uint sectionCount)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x17FD058", Offset = "0x17FD058", VA = "0x17FD058")]
	public static extern bool WVR_getMeshData_Android(uint sessionid, [In][Out] FBXInfo_t[] infoArray);

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x17FD114", Offset = "0x17FD114", VA = "0x17FD114", Slot = "102")]
	public override bool GetMeshData(uint sessionid, [In][Out] FBXInfo_t[] infoArray)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x17FD188", Offset = "0x17FD188", VA = "0x17FD188")]
	public static extern bool WVR_getSectionData_Android(uint sessionid, uint sectionIndiceIndex, [In][Out] Vector3[] vecticeArray, [In][Out] Vector3[] normalArray, [In][Out] Vector2[] uvArray, [In][Out] int[] indiceArray, ref bool active);

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x17FD2AC", Offset = "0x17FD2AC", VA = "0x17FD2AC", Slot = "103")]
	public override bool GetSectionData(uint sessionid, uint sectionIndiceIndex, [In][Out] Vector3[] vecticeArray, [In][Out] Vector3[] normalArray, [In][Out] Vector2[] uvArray, [In][Out] int[] indiceArray, ref bool active)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x17FD358", Offset = "0x17FD358", VA = "0x17FD358")]
	public static extern void WVR_releaseMesh_Android(uint sessionid);

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x17FD3F4", Offset = "0x17FD3F4", VA = "0x17FD3F4", Slot = "104")]
	public override void ReleaseMesh(uint sessionid)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x17FD458", Offset = "0x17FD458", VA = "0x17FD458")]
	private AndroidJavaObject javaArrayFromCS(string[] values)
	{
		return null;
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x17FD740", Offset = "0x17FD740", VA = "0x17FD740", Slot = "105")]
	public override bool IsPermissionInitialed()
	{
		return default(bool);
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x17FD938", Offset = "0x17FD938", VA = "0x17FD938", Slot = "106")]
	public override bool ShowDialogOnScene()
	{
		return default(bool);
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x17FDA64", Offset = "0x17FDA64", VA = "0x17FDA64", Slot = "107")]
	public override bool IsPermissionGranted(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x17FDB68", Offset = "0x17FDB68", VA = "0x17FDB68", Slot = "108")]
	public override bool ShouldGrantPermission(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x17FDC6C", Offset = "0x17FDC6C", VA = "0x17FDC6C", Slot = "109")]
	public override void RequestPermissions(string[] permissions, WVR_RequestCompleteCallback cb)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x17FE1A0", Offset = "0x17FE1A0", VA = "0x17FE1A0", Slot = "110")]
	public override void RequestUsbPermission(WVR_RequestUsbCompleteCallback cb)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x17FE370", Offset = "0x17FE370", VA = "0x17FE370")]
	private bool initializeResourceObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x17FE4AC", Offset = "0x17FE4AC", VA = "0x17FE4AC", Slot = "111")]
	public override string GetStringBySystemLanguage(string stringName)
	{
		return null;
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x17FE5A8", Offset = "0x17FE5A8", VA = "0x17FE5A8", Slot = "112")]
	public override string GetStringByLanguage(string stringName, string lang, string country)
	{
		return null;
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x17FE704", Offset = "0x17FE704", VA = "0x17FE704", Slot = "113")]
	public override string GetSystemLanguage()
	{
		return null;
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x17FE828", Offset = "0x17FE828", VA = "0x17FE828", Slot = "114")]
	public override string GetSystemCountry()
	{
		return null;
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x17FE94C", Offset = "0x17FE94C", VA = "0x17FE94C")]
	private static void initAJC()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x17FEB68", Offset = "0x17FEB68", VA = "0x17FEB68", Slot = "115")]
	public override string GetOEMConfigByKey(string key)
	{
		return null;
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x17FED34", Offset = "0x17FED34", VA = "0x17FED34", Slot = "116")]
	public override void SetOEMConfigChangedCallback(WVR_OnOEMConfigChanged cb)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x17FEDA0", Offset = "0x17FEDA0", VA = "0x17FEDA0")]
	public WVR_Android()
	{
	}
}
[Token(Token = "0x200003B")]
public class WVR_HVR : Interop.WVR_Base
{
	[PreserveSig]
	[Token(Token = "0x600020A")]
	[Address(RVA = "0x17FF31C", Offset = "0x17FF31C", VA = "0x17FF31C")]
	public static extern bool WVR_PollEventQueue_HVR(ref WVR_Event_t e);

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x17FF3BC", Offset = "0x17FF3BC", VA = "0x17FF3BC", Slot = "4")]
	public override bool PollEventQueue(ref WVR_Event_t e)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600020C")]
	[Address(RVA = "0x17FF3C4", Offset = "0x17FF3C4", VA = "0x17FF3C4")]
	public static extern int WVR_GetInputDeviceCapability_HVR(WVR_DeviceType type, WVR_InputType inputType);

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x17FF46C", Offset = "0x17FF46C", VA = "0x17FF46C", Slot = "5")]
	public override int GetInputDeviceCapability(WVR_DeviceType type, WVR_InputType inputType)
	{
		return default(int);
	}

	[PreserveSig]
	[Token(Token = "0x600020E")]
	[Address(RVA = "0x17FF478", Offset = "0x17FF478", VA = "0x17FF478")]
	public static extern WVR_AnalogType WVR_GetInputDeviceAnalogType_HVR(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x17FF520", Offset = "0x17FF520", VA = "0x17FF520", Slot = "6")]
	public override WVR_AnalogType GetInputDeviceAnalogType(WVR_DeviceType type, WVR_InputId id)
	{
		return default(WVR_AnalogType);
	}

	[PreserveSig]
	[Token(Token = "0x6000210")]
	[Address(RVA = "0x17FF52C", Offset = "0x17FF52C", VA = "0x17FF52C")]
	public static extern bool WVR_GetInputDeviceState_HVR(WVR_DeviceType type, uint inputMask, ref uint buttons, ref uint touches, [In][Out] WVR_AnalogState_t[] analogArray, uint analogArrayCount);

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x17FF618", Offset = "0x17FF618", VA = "0x17FF618", Slot = "7")]
	public override bool GetInputDeviceState(WVR_DeviceType type, uint inputMask, ref uint buttons, ref uint touches, [In][Out] WVR_AnalogState_t[] analogArray, uint analogArrayCount)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000212")]
	[Address(RVA = "0x17FF634", Offset = "0x17FF634", VA = "0x17FF634")]
	public static extern int WVR_GetInputTypeCount_HVR(WVR_DeviceType type, WVR_InputType inputType);

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x17FF6DC", Offset = "0x17FF6DC", VA = "0x17FF6DC", Slot = "8")]
	public override int GetInputTypeCount(WVR_DeviceType type, WVR_InputType inputType)
	{
		return default(int);
	}

	[PreserveSig]
	[Token(Token = "0x6000214")]
	[Address(RVA = "0x17FF6E8", Offset = "0x17FF6E8", VA = "0x17FF6E8")]
	public static extern bool WVR_GetInputButtonState_HVR(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x17FF798", Offset = "0x17FF798", VA = "0x17FF798", Slot = "9")]
	public override bool GetInputButtonState(WVR_DeviceType type, WVR_InputId id)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000216")]
	[Address(RVA = "0x17FF7A4", Offset = "0x17FF7A4", VA = "0x17FF7A4")]
	public static extern bool WVR_GetInputTouchState_HVR(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x17FF854", Offset = "0x17FF854", VA = "0x17FF854", Slot = "10")]
	public override bool GetInputTouchState(WVR_DeviceType type, WVR_InputId id)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000218")]
	[Address(RVA = "0x17FF860", Offset = "0x17FF860", VA = "0x17FF860")]
	public static extern WVR_Axis_t WVR_GetInputAnalogAxis_HVR(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x17FF908", Offset = "0x17FF908", VA = "0x17FF908", Slot = "11")]
	public override WVR_Axis_t GetInputAnalogAxis(WVR_DeviceType type, WVR_InputId id)
	{
		return default(WVR_Axis_t);
	}

	[PreserveSig]
	[Token(Token = "0x600021A")]
	[Address(RVA = "0x17FF914", Offset = "0x17FF914", VA = "0x17FF914")]
	public static extern void WVR_GetPoseState_HVR(WVR_DeviceType type, WVR_PoseOriginModel originModel, uint predictedMilliSec, ref WVR_PoseState_t poseState);

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x17FFA28", Offset = "0x17FFA28", VA = "0x17FFA28", Slot = "13")]
	public override void GetPoseState(WVR_DeviceType type, WVR_PoseOriginModel originModel, uint predictedMilliSec, ref WVR_PoseState_t poseState)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600021C")]
	[Address(RVA = "0x17FFA3C", Offset = "0x17FFA3C", VA = "0x17FFA3C")]
	public static extern void WVR_SetTextureBounds_HVR([In][Out] WVR_TextureBound_t[] textureBound);

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x17FFADC", Offset = "0x17FFADC", VA = "0x17FFADC", Slot = "12")]
	public override void SetTextureBounds([In][Out] WVR_TextureBound_t[] textureBound)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600021E")]
	[Address(RVA = "0x17FFBDC", Offset = "0x17FFBDC", VA = "0x17FFBDC")]
	public static extern void WVR_WaitGetPoseIndex_HVR(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount, ref uint frameIndex);

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x17FFDA8", Offset = "0x17FFDA8", VA = "0x17FFDA8", Slot = "15")]
	public override void WaitGetPoseIndex(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount, ref uint frameIndex)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000220")]
	[Address(RVA = "0x17FFE54", Offset = "0x17FFE54", VA = "0x17FFE54")]
	public static extern void WVR_GetLastPoseIndex_HVR(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount, ref uint frameIndex);

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x1800020", Offset = "0x1800020", VA = "0x1800020", Slot = "14")]
	public override void GetLastPoseIndex(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount, ref uint frameIndex)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000222")]
	[Address(RVA = "0x18000CC", Offset = "0x18000CC", VA = "0x18000CC")]
	public static extern void WVR_GetSyncPose_HVR(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount);

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x180028C", Offset = "0x180028C", VA = "0x180028C", Slot = "17")]
	public override void GetSyncPose(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000224")]
	[Address(RVA = "0x1800328", Offset = "0x1800328", VA = "0x1800328")]
	public static extern bool WVR_IsDeviceConnected_HVR(WVR_DeviceType type);

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x18003CC", Offset = "0x18003CC", VA = "0x18003CC", Slot = "18")]
	public override bool IsDeviceConnected(WVR_DeviceType type)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000226")]
	[Address(RVA = "0x18003D4", Offset = "0x18003D4", VA = "0x18003D4")]
	public static extern void WVR_TriggerVibration_HVR(WVR_DeviceType type, WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity);

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x180049C", Offset = "0x180049C", VA = "0x180049C", Slot = "19")]
	public override void TriggerVibration(WVR_DeviceType type, WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000228")]
	[Address(RVA = "0x18004B4", Offset = "0x18004B4", VA = "0x18004B4")]
	public static extern void WVR_InAppRecenter_HVR(WVR_RecenterType recenterType);

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x1800550", Offset = "0x1800550", VA = "0x1800550", Slot = "20")]
	public override void InAppRecenter(WVR_RecenterType recenterType)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600022A")]
	[Address(RVA = "0x1800558", Offset = "0x1800558", VA = "0x1800558")]
	public static extern void WVR_SetNeckModelEnabled_HVR(bool enabled);

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x18005F4", Offset = "0x18005F4", VA = "0x18005F4", Slot = "21")]
	public override void SetNeckModelEnabled(bool enabled)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600022C")]
	[Address(RVA = "0x18005F8", Offset = "0x18005F8", VA = "0x18005F8")]
	public static extern void WVR_SetNeckModel_HVR(WVR_SimulationType simulationType);

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1800694", Offset = "0x1800694", VA = "0x1800694", Slot = "22")]
	public override void SetNeckModel(WVR_SimulationType simulationType)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600022E")]
	[Address(RVA = "0x180069C", Offset = "0x180069C", VA = "0x180069C")]
	public static extern void WVR_SetArmModel_HVR(WVR_SimulationType simulationType);

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x1800738", Offset = "0x1800738", VA = "0x1800738", Slot = "23")]
	public override void SetArmModel(WVR_SimulationType simulationType)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000230")]
	[Address(RVA = "0x180073C", Offset = "0x180073C", VA = "0x180073C")]
	public static extern void WVR_SetArmSticky_HVR(bool stickyArm);

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x18007D8", Offset = "0x18007D8", VA = "0x18007D8", Slot = "24")]
	public override void SetArmSticky(bool stickyArm)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000232")]
	[Address(RVA = "0x18007DC", Offset = "0x18007DC", VA = "0x18007DC")]
	public static extern bool WVR_SetInputRequest_HVR(WVR_DeviceType type, WVR_InputAttribute_t[] request, uint size);

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x18008A0", Offset = "0x18008A0", VA = "0x18008A0", Slot = "25")]
	public override bool SetInputRequest(WVR_DeviceType type, WVR_InputAttribute_t[] request, uint size)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000234")]
	[Address(RVA = "0x18008B0", Offset = "0x18008B0", VA = "0x18008B0")]
	public static extern bool WVR_GetInputMappingPair_HVR(WVR_DeviceType type, WVR_InputId destination, ref WVR_InputMappingPair_t pair);

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x180096C", Offset = "0x180096C", VA = "0x180096C", Slot = "26")]
	public override bool GetInputMappingPair(WVR_DeviceType type, WVR_InputId destination, ref WVR_InputMappingPair_t pair)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000236")]
	[Address(RVA = "0x180097C", Offset = "0x180097C", VA = "0x180097C")]
	public static extern uint WVR_GetInputMappingTable_HVR(WVR_DeviceType type, [In][Out] WVR_InputMappingPair_t[] table, uint size);

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1800A38", Offset = "0x1800A38", VA = "0x1800A38", Slot = "27")]
	public override uint GetInputMappingTable(WVR_DeviceType type, [In][Out] WVR_InputMappingPair_t[] table, uint size)
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x6000238")]
	[Address(RVA = "0x1800A48", Offset = "0x1800A48", VA = "0x1800A48")]
	public static extern WVR_Arena_t WVR_GetArena_HVR();

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1800AD8", Offset = "0x1800AD8", VA = "0x1800AD8", Slot = "28")]
	public override WVR_Arena_t GetArena()
	{
		return default(WVR_Arena_t);
	}

	[PreserveSig]
	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1800AF0", Offset = "0x1800AF0", VA = "0x1800AF0")]
	public static extern bool WVR_SetArena_HVR(ref WVR_Arena_t arena);

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x1800B90", Offset = "0x1800B90", VA = "0x1800B90", Slot = "29")]
	public override bool SetArena(ref WVR_Arena_t arena)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600023C")]
	[Address(RVA = "0x1800B98", Offset = "0x1800B98", VA = "0x1800B98")]
	public static extern WVR_ArenaVisible WVR_GetArenaVisible_HVR();

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x1800C24", Offset = "0x1800C24", VA = "0x1800C24", Slot = "30")]
	public override WVR_ArenaVisible GetArenaVisible()
	{
		return default(WVR_ArenaVisible);
	}

	[PreserveSig]
	[Token(Token = "0x600023E")]
	[Address(RVA = "0x1800C28", Offset = "0x1800C28", VA = "0x1800C28")]
	public static extern void WVR_SetArenaVisible_HVR(WVR_ArenaVisible config);

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x1800CC4", Offset = "0x1800CC4", VA = "0x1800CC4", Slot = "31")]
	public override void SetArenaVisible(WVR_ArenaVisible config)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1800CCC", Offset = "0x1800CCC", VA = "0x1800CCC")]
	public static extern bool WVR_IsOverArenaRange_HVR();

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1800D60", Offset = "0x1800D60", VA = "0x1800D60", Slot = "32")]
	public override bool IsOverArenaRange()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1800D64", Offset = "0x1800D64", VA = "0x1800D64")]
	public static extern float WVR_GetDeviceBatteryPercentage_HVR(WVR_DeviceType type);

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x1800E00", Offset = "0x1800E00", VA = "0x1800E00", Slot = "33")]
	public override float GetDeviceBatteryPercentage(WVR_DeviceType type)
	{
		return default(float);
	}

	[PreserveSig]
	[Token(Token = "0x6000244")]
	[Address(RVA = "0x1800E08", Offset = "0x1800E08", VA = "0x1800E08")]
	public static extern WVR_BatteryStatus WVR_GetBatteryStatus_HVR(WVR_DeviceType type);

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x1800EA4", Offset = "0x1800EA4", VA = "0x1800EA4", Slot = "34")]
	public override WVR_BatteryStatus GetBatteryStatus(WVR_DeviceType type)
	{
		return default(WVR_BatteryStatus);
	}

	[PreserveSig]
	[Token(Token = "0x6000246")]
	[Address(RVA = "0x1800EAC", Offset = "0x1800EAC", VA = "0x1800EAC")]
	public static extern WVR_ChargeStatus WVR_GetChargeStatus_HVR(WVR_DeviceType type);

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x1800F48", Offset = "0x1800F48", VA = "0x1800F48", Slot = "35")]
	public override WVR_ChargeStatus GetChargeStatus(WVR_DeviceType type)
	{
		return default(WVR_ChargeStatus);
	}

	[PreserveSig]
	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1800F50", Offset = "0x1800F50", VA = "0x1800F50")]
	public static extern WVR_BatteryTemperatureStatus WVR_GetBatteryTemperatureStatus_HVR(WVR_DeviceType type);

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1800FEC", Offset = "0x1800FEC", VA = "0x1800FEC", Slot = "36")]
	public override WVR_BatteryTemperatureStatus GetBatteryTemperatureStatus(WVR_DeviceType type)
	{
		return default(WVR_BatteryTemperatureStatus);
	}

	[PreserveSig]
	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1800FF4", Offset = "0x1800FF4", VA = "0x1800FF4")]
	public static extern float WVR_GetBatteryTemperature_HVR(WVR_DeviceType type);

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1801090", Offset = "0x1801090", VA = "0x1801090", Slot = "37")]
	public override float GetBatteryTemperature(WVR_DeviceType type)
	{
		return default(float);
	}

	[PreserveSig]
	[Token(Token = "0x600024C")]
	[Address(RVA = "0x1801098", Offset = "0x1801098", VA = "0x1801098")]
	public static extern WVR_InitError WVR_Init_HVR(WVR_AppType eType);

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x1801130", Offset = "0x1801130", VA = "0x1801130", Slot = "45")]
	public override WVR_InitError Init(WVR_AppType eType)
	{
		return default(WVR_InitError);
	}

	[PreserveSig]
	[Token(Token = "0x600024E")]
	[Address(RVA = "0x18011B4", Offset = "0x18011B4", VA = "0x18011B4")]
	public static extern void WVR_Quit_HVR();

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x180123C", Offset = "0x180123C", VA = "0x180123C", Slot = "47")]
	public override void Quit()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000250")]
	[Address(RVA = "0x18012B8", Offset = "0x18012B8", VA = "0x18012B8")]
	public static extern IntPtr WVR_GetInitErrorString_HVR(WVR_InitError error);

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1801354", Offset = "0x1801354", VA = "0x1801354", Slot = "48")]
	public override IntPtr GetInitErrorString(WVR_InitError error)
	{
		return default(IntPtr);
	}

	[PreserveSig]
	[Token(Token = "0x6000252")]
	[Address(RVA = "0x18013D8", Offset = "0x18013D8", VA = "0x18013D8")]
	public static extern uint WVR_GetWaveRuntimeVersion_HVR();

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x1801464", Offset = "0x1801464", VA = "0x1801464", Slot = "49")]
	public override uint GetWaveRuntimeVersion()
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x6000254")]
	[Address(RVA = "0x18014E0", Offset = "0x18014E0", VA = "0x18014E0")]
	public static extern uint WVR_GetWaveSDKVersion_HVR();

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x180156C", Offset = "0x180156C", VA = "0x180156C", Slot = "50")]
	public override uint GetWaveSDKVersion()
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x6000256")]
	[Address(RVA = "0x18015EC", Offset = "0x18015EC", VA = "0x18015EC")]
	public static extern bool WVR_IsInputFocusCapturedBySystem_HVR();

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x1801680", Offset = "0x1801680", VA = "0x1801680", Slot = "51")]
	public override bool IsInputFocusCapturedBySystem()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000258")]
	[Address(RVA = "0x18016FC", Offset = "0x18016FC", VA = "0x18016FC")]
	internal static extern WVR_RenderError WVR_RenderInit_HVR(ref WVR_RenderInitParams_t param);

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x1801794", Offset = "0x1801794", VA = "0x1801794", Slot = "52")]
	internal override WVR_RenderError RenderInit(ref WVR_RenderInitParams_t param)
	{
		return default(WVR_RenderError);
	}

	[PreserveSig]
	[Token(Token = "0x600025A")]
	[Address(RVA = "0x180179C", Offset = "0x180179C", VA = "0x180179C")]
	internal static extern bool WVR_SetPerformanceLevels_HVR(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel);

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x180184C", Offset = "0x180184C", VA = "0x180184C", Slot = "53")]
	internal override bool SetPerformanceLevels(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600025C")]
	[Address(RVA = "0x18018CC", Offset = "0x18018CC", VA = "0x18018CC")]
	internal static extern bool WVR_EnableAdaptiveQuality_HVR(bool enable, uint flags);

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x180197C", Offset = "0x180197C", VA = "0x180197C", Slot = "54")]
	internal override bool EnableAdaptiveQuality(bool enable, uint flags)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600025E")]
	[Address(RVA = "0x18019FC", Offset = "0x18019FC", VA = "0x18019FC")]
	internal static extern bool WVR_IsAdaptiveQualityEnabled_HVR();

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x1801A90", Offset = "0x1801A90", VA = "0x1801A90", Slot = "55")]
	internal override bool IsAdaptiveQualityEnabled()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000260")]
	[Address(RVA = "0x1801B0C", Offset = "0x1801B0C", VA = "0x1801B0C")]
	public static extern bool WVR_StartCamera_HVR(ref WVR_CameraInfo_t info);

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x1801BAC", Offset = "0x1801BAC", VA = "0x1801BAC", Slot = "56")]
	public override bool StartCamera(ref WVR_CameraInfo_t info)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000262")]
	[Address(RVA = "0x1801C30", Offset = "0x1801C30", VA = "0x1801C30")]
	public static extern void WVR_StopCamera_HVR();

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x1801CBC", Offset = "0x1801CBC", VA = "0x1801CBC", Slot = "57")]
	public override void StopCamera()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000264")]
	[Address(RVA = "0x1801D38", Offset = "0x1801D38", VA = "0x1801D38")]
	public static extern bool WVR_UpdateTexture_HVR(IntPtr textureid);

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x1801DD8", Offset = "0x1801DD8", VA = "0x1801DD8", Slot = "58")]
	public override bool UpdateTexture(IntPtr textureid)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000266")]
	[Address(RVA = "0x1801E5C", Offset = "0x1801E5C", VA = "0x1801E5C")]
	public static extern bool DrawTextureWithBuffer_HVR(IntPtr textureId, WVR_CameraImageFormat imgFormat, IntPtr frameBuffer, uint size, uint width, uint height);

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x1801F40", Offset = "0x1801F40", VA = "0x1801F40", Slot = "62")]
	public override bool DrawTextureWithBuffer(IntPtr textureId, WVR_CameraImageFormat imgFormat, IntPtr frameBuffer, uint size, uint width, uint height)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000268")]
	[Address(RVA = "0x1801F5C", Offset = "0x1801F5C", VA = "0x1801F5C")]
	public static extern bool WVR_GetCameraIntrinsic_HVR(WVR_CameraPosition position, ref WVR_CameraIntrinsic_t intrinsic);

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x1802010", Offset = "0x1802010", VA = "0x1802010", Slot = "59")]
	public override bool GetCameraIntrinsic(WVR_CameraPosition position, ref WVR_CameraIntrinsic_t intrinsic)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600026A")]
	[Address(RVA = "0x18020A4", Offset = "0x18020A4", VA = "0x18020A4")]
	public static extern bool WVR_IsDeviceSuspend_HVR(WVR_DeviceType type);

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x1802148", Offset = "0x1802148", VA = "0x1802148", Slot = "64")]
	public override bool IsDeviceSuspend(WVR_DeviceType type)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600026C")]
	[Address(RVA = "0x18021CC", Offset = "0x18021CC", VA = "0x18021CC")]
	public static extern void WVR_ConvertMatrixQuaternion_HVR(ref WVR_Matrix4f_t mat, ref WVR_Quatf_t quat, bool m2q);

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1802280", Offset = "0x1802280", VA = "0x1802280", Slot = "65")]
	public override void ConvertMatrixQuaternion(ref WVR_Matrix4f_t mat, ref WVR_Quatf_t quat, bool m2q)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600026E")]
	[Address(RVA = "0x180231C", Offset = "0x180231C", VA = "0x180231C")]
	public static extern WVR_NumDoF WVR_GetDegreeOfFreedom_HVR(WVR_DeviceType type);

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x18023B8", Offset = "0x18023B8", VA = "0x18023B8", Slot = "66")]
	public override WVR_NumDoF GetDegreeOfFreedom(WVR_DeviceType type)
	{
		return default(WVR_NumDoF);
	}

	[PreserveSig]
	[Token(Token = "0x6000270")]
	[Address(RVA = "0x180243C", Offset = "0x180243C", VA = "0x180243C")]
	public static extern void WVR_SetParameters_HVR(WVR_DeviceType type, IntPtr pchValue);

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x18024E8", Offset = "0x18024E8", VA = "0x18024E8", Slot = "67")]
	public override void SetParameters(WVR_DeviceType type, IntPtr pchValue)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000272")]
	[Address(RVA = "0x180257C", Offset = "0x180257C", VA = "0x180257C")]
	public static extern uint WVR_GetParameters_HVR(WVR_DeviceType type, IntPtr pchValue, IntPtr retValue, uint unBufferSize);

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x1802640", Offset = "0x1802640", VA = "0x1802640", Slot = "68")]
	public override uint GetParameters(WVR_DeviceType type, IntPtr pchValue, IntPtr retValue, uint unBufferSize)
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x6000274")]
	[Address(RVA = "0x18026EC", Offset = "0x18026EC", VA = "0x18026EC")]
	public static extern WVR_DeviceType WVR_GetDefaultControllerRole_HVR();

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x1802778", Offset = "0x1802778", VA = "0x1802778", Slot = "69")]
	public override WVR_DeviceType GetDefaultControllerRole()
	{
		return default(WVR_DeviceType);
	}

	[PreserveSig]
	[Token(Token = "0x6000276")]
	[Address(RVA = "0x180277C", Offset = "0x180277C", VA = "0x180277C")]
	public static extern bool WVR_SetInteractionMode_HVR(WVR_InteractionMode mode);

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x1802820", Offset = "0x1802820", VA = "0x1802820", Slot = "70")]
	public override bool SetInteractionMode(WVR_InteractionMode mode)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000278")]
	[Address(RVA = "0x1802828", Offset = "0x1802828", VA = "0x1802828")]
	public static extern WVR_InteractionMode WVR_GetInteractionMode_HVR();

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x18028B4", Offset = "0x18028B4", VA = "0x18028B4", Slot = "71")]
	public override WVR_InteractionMode GetInteractionMode()
	{
		return default(WVR_InteractionMode);
	}

	[PreserveSig]
	[Token(Token = "0x600027A")]
	[Address(RVA = "0x18028B8", Offset = "0x18028B8", VA = "0x18028B8")]
	public static extern bool WVR_SetGazeTriggerType_HVR(WVR_GazeTriggerType type);

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x180295C", Offset = "0x180295C", VA = "0x180295C", Slot = "72")]
	public override bool SetGazeTriggerType(WVR_GazeTriggerType type)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600027C")]
	[Address(RVA = "0x1802964", Offset = "0x1802964", VA = "0x1802964")]
	public static extern WVR_GazeTriggerType WVR_GetGazeTriggerType_HVR();

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x18029F0", Offset = "0x18029F0", VA = "0x18029F0", Slot = "73")]
	public override WVR_GazeTriggerType GetGazeTriggerType()
	{
		return default(WVR_GazeTriggerType);
	}

	[PreserveSig]
	[Token(Token = "0x600027E")]
	[Address(RVA = "0x18029F4", Offset = "0x18029F4", VA = "0x18029F4")]
	public static extern bool WVR_GetDeviceErrorState_HVR(WVR_DeviceType dev_type, WVR_DeviceErrorState error_state);

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x1802AA4", Offset = "0x1802AA4", VA = "0x1802AA4", Slot = "74")]
	public override bool GetDeviceErrorState(WVR_DeviceType dev_type, WVR_DeviceErrorState error_state)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000280")]
	[Address(RVA = "0x1802B38", Offset = "0x1802B38", VA = "0x1802B38")]
	public static extern void WVR_GetRenderTargetSize_HVR(ref uint width, ref uint height);

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x1802BE4", Offset = "0x1802BE4", VA = "0x1802BE4", Slot = "75")]
	public override void GetRenderTargetSize(ref uint width, ref uint height)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000282")]
	[Address(RVA = "0x1802C78", Offset = "0x1802C78", VA = "0x1802C78")]
	public static extern WVR_Matrix4f_t WVR_GetProjection_HVR(WVR_Eye eye, float near, float far);

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1802D3C", Offset = "0x1802D3C", VA = "0x1802D3C", Slot = "76")]
	public override WVR_Matrix4f_t GetProjection(WVR_Eye eye, float near, float far)
	{
		return default(WVR_Matrix4f_t);
	}

	[PreserveSig]
	[Token(Token = "0x6000284")]
	[Address(RVA = "0x1802DE8", Offset = "0x1802DE8", VA = "0x1802DE8")]
	public static extern void WVR_GetClippingPlaneBoundary_HVR(WVR_Eye eye, ref float left, ref float right, ref float top, ref float bottom);

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x1802EB4", Offset = "0x1802EB4", VA = "0x1802EB4", Slot = "77")]
	public override void GetClippingPlaneBoundary(WVR_Eye eye, ref float left, ref float right, ref float top, ref float bottom)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000286")]
	[Address(RVA = "0x1802F68", Offset = "0x1802F68", VA = "0x1802F68")]
	public static extern void WVR_SetOverfillRatio_HVR(float ratioX, float ratioY);

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x180300C", Offset = "0x180300C", VA = "0x180300C", Slot = "78")]
	public override void SetOverfillRatio(float ratioX, float ratioY)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000288")]
	[Address(RVA = "0x18030A0", Offset = "0x18030A0", VA = "0x18030A0")]
	public static extern WVR_Matrix4f_t WVR_GetTransformFromEyeToHead_HVR(WVR_Eye eye, WVR_NumDoF dof);

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x1803150", Offset = "0x1803150", VA = "0x1803150", Slot = "79")]
	public override WVR_Matrix4f_t GetTransformFromEyeToHead(WVR_Eye eye, WVR_NumDoF dof)
	{
		return default(WVR_Matrix4f_t);
	}

	[PreserveSig]
	[Token(Token = "0x600028A")]
	[Address(RVA = "0x18031EC", Offset = "0x18031EC", VA = "0x18031EC")]
	public static extern WVR_SubmitError WVR_SubmitFrame_HVR(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod);

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x18033D0", Offset = "0x18033D0", VA = "0x18033D0", Slot = "80")]
	public override WVR_SubmitError SubmitFrame(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod)
	{
		return default(WVR_SubmitError);
	}

	[PreserveSig]
	[Token(Token = "0x600028C")]
	[Address(RVA = "0x180347C", Offset = "0x180347C", VA = "0x180347C")]
	public static extern void WVR_SetSubmitParams_HVR(WVR_Eye eye, [Out] WVR_TextureParams_t[] param, [Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod);

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1803664", Offset = "0x1803664", VA = "0x1803664", Slot = "81")]
	public override void SetSubmitParams(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1803710", Offset = "0x1803710", VA = "0x1803710")]
	public static extern bool WVR_RequestScreenshot_HVR(uint width, uint height, WVR_ScreenshotMode mode, IntPtr filename);

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x18037DC", Offset = "0x18037DC", VA = "0x18037DC", Slot = "83")]
	public override bool RequestScreenshot(uint width, uint height, WVR_ScreenshotMode mode, IntPtr filename)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000290")]
	[Address(RVA = "0x1803888", Offset = "0x1803888", VA = "0x1803888")]
	public static extern void WVR_RenderMask_HVR(WVR_Eye eye);

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1803924", Offset = "0x1803924", VA = "0x1803924", Slot = "84")]
	public override void RenderMask(WVR_Eye eye)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000292")]
	[Address(RVA = "0x18039A8", Offset = "0x18039A8", VA = "0x18039A8")]
	public static extern bool WVR_GetRenderProps_HVR(ref WVR_RenderProps_t props);

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1803A8C", Offset = "0x1803A8C", VA = "0x1803A8C", Slot = "85")]
	public override bool GetRenderProps(ref WVR_RenderProps_t props)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000294")]
	[Address(RVA = "0x1803B10", Offset = "0x1803B10", VA = "0x1803B10")]
	public static extern IntPtr WVR_ObtainTextureQueue_HVR(WVR_TextureTarget target, WVR_TextureFormat format, WVR_TextureType type, uint width, uint height, int level);

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x1803BEC", Offset = "0x1803BEC", VA = "0x1803BEC", Slot = "86")]
	public override IntPtr ObtainTextureQueue(WVR_TextureTarget target, WVR_TextureFormat format, WVR_TextureType type, uint width, uint height, int level)
	{
		return default(IntPtr);
	}

	[PreserveSig]
	[Token(Token = "0x6000296")]
	[Address(RVA = "0x1803CB0", Offset = "0x1803CB0", VA = "0x1803CB0")]
	public static extern uint WVR_GetTextureQueueLength_HVR(IntPtr handle);

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x1803D48", Offset = "0x1803D48", VA = "0x1803D48", Slot = "87")]
	public override uint GetTextureQueueLength(IntPtr handle)
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x6000298")]
	[Address(RVA = "0x1803DCC", Offset = "0x1803DCC", VA = "0x1803DCC")]
	public static extern WVR_TextureParams_t WVR_GetTexture_HVR(IntPtr handle, int index);

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x1803E80", Offset = "0x1803E80", VA = "0x1803E80", Slot = "88")]
	public override WVR_TextureParams_t GetTexture(IntPtr handle, int index)
	{
		return default(WVR_TextureParams_t);
	}

	[PreserveSig]
	[Token(Token = "0x600029A")]
	[Address(RVA = "0x1803F1C", Offset = "0x1803F1C", VA = "0x1803F1C")]
	public static extern int WVR_GetAvailableTextureIndex_HVR(IntPtr handle);

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1803FB4", Offset = "0x1803FB4", VA = "0x1803FB4", Slot = "89")]
	public override int GetAvailableTextureIndex(IntPtr handle)
	{
		return default(int);
	}

	[PreserveSig]
	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1804038", Offset = "0x1804038", VA = "0x1804038")]
	public static extern void WVR_ReleaseTextureQueue_HVR(IntPtr handle);

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x18040D0", Offset = "0x18040D0", VA = "0x18040D0", Slot = "90")]
	public override void ReleaseTextureQueue(IntPtr handle)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600029E")]
	[Address(RVA = "0x1804154", Offset = "0x1804154", VA = "0x1804154")]
	public static extern bool WVR_IsRenderFoveationSupport_HVR();

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x18041E8", Offset = "0x18041E8", VA = "0x18041E8", Slot = "91")]
	public override bool IsRenderFoveationSupport()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x18041EC", Offset = "0x18041EC", VA = "0x18041EC")]
	public static extern void WVR_RenderFoveation_HVR(bool enable);

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x1804288", Offset = "0x1804288", VA = "0x1804288", Slot = "92")]
	public override void RenderFoveation(bool enable)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x180430C", Offset = "0x180430C", VA = "0x180430C")]
	public static extern void WVR_SetFocusedController_HVR(WVR_DeviceType focusController);

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x18043A8", Offset = "0x18043A8", VA = "0x18043A8", Slot = "98")]
	public override void SetFocusedController(WVR_DeviceType focusController)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x180442C", Offset = "0x180442C", VA = "0x180442C")]
	public static extern WVR_DeviceType WVR_GetFocusedController_HVR();

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x18044B8", Offset = "0x18044B8", VA = "0x18044B8", Slot = "99")]
	public override WVR_DeviceType GetFocusedController()
	{
		return default(WVR_DeviceType);
	}

	[PreserveSig]
	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x1804534", Offset = "0x1804534", VA = "0x1804534")]
	public static extern IntPtr WVR_StoreRenderTexturesHVR(IntPtr[] texturesIDs, int size, bool eEye, WVR_TextureTarget target);

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x1804600", Offset = "0x1804600", VA = "0x1804600", Slot = "16")]
	public override IntPtr StoreRenderTextures(IntPtr[] texturesIDs, int size, bool eEye, WVR_TextureTarget target)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x18046AC", Offset = "0x18046AC", VA = "0x18046AC")]
	public WVR_HVR()
	{
	}
}
[Serializable]
[Token(Token = "0x200003C")]
public class MeshObject
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string MeshName;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasEffect;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject gameObject;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 originPosition;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material originMat;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material effectMat;

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x1338FF8", Offset = "0x1338FF8", VA = "0x1338FF8")]
	public MeshObject()
	{
	}
}
[Token(Token = "0x200003D")]
public class WaveVR_AdaptiveControllerActions : MonoBehaviour
{
	[Token(Token = "0x200055F")]
	public class WVR_InputObject
	{
		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WVR_InputId destination;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public WVR_InputId sourceId;

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0x180DD68", Offset = "0x180DD68", VA = "0x180DD68")]
		public WVR_InputObject()
		{
		}
	}

	[Token(Token = "0x2000560")]
	private enum keyMappingInputType
	{
		[Token(Token = "0x4002218")]
		TouchDown,
		[Token(Token = "0x4002219")]
		TouchUp,
		[Token(Token = "0x400221A")]
		PressDown,
		[Token(Token = "0x400221B")]
		PressUp
	}

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool enableButtonEffect;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useSystemConfig;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color buttonEffectColor;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool collectInStart;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int volume_index;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly WVR_InputId[] pressIds;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string[] PressEffectNames;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshObject[] pressObjectArrays;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly WVR_InputId[] touchIds;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly string[] TouchEffectNames;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshObject[] touchObjectArrays;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject touchpad;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh touchpadMesh;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Mesh toucheffectMesh;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool currentIsLeftHandMode;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int touch_index;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material effectMat;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material touchMat;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool mergeToOneBone;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool isTouchPadSetting;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 touchCenter;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float raidus;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 touchPtW;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 touchPtU;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 touchPtV;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float touchptHeight;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private ModelSpecify modelSpecify;

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x1808A50", Offset = "0x1808A50", VA = "0x1808A50")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x1808C20", Offset = "0x1808C20", VA = "0x1808C20")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x1808DF0", Offset = "0x1808DF0", VA = "0x1808DF0")]
	private void onAdaptiveControllerModelReady(params object[] args)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x1809BD0", Offset = "0x1809BD0", VA = "0x1809BD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x180A0A8", Offset = "0x180A0A8", VA = "0x180A0A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x180A154", Offset = "0x180A154", VA = "0x180A154")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x1809C94", Offset = "0x1809C94", VA = "0x1809C94")]
	private void resetButtonState()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x180A1F4", Offset = "0x180A1F4", VA = "0x180A1F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x180A22C", Offset = "0x180A22C", VA = "0x180A22C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x180C714", Offset = "0x180C714", VA = "0x180C714")]
	private bool GetTouchPadParam()
	{
		return default(bool);
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x180BEB4", Offset = "0x180BEB4", VA = "0x180BEB4")]
	private int GetPressInputMapping(int pressIds_Index, keyMappingInputType status)
	{
		return default(int);
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x180C308", Offset = "0x180C308", VA = "0x180C308")]
	private int GetTouchInputMapping(int touchIds_Index, keyMappingInputType status)
	{
		return default(int);
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x1808EB8", Offset = "0x1808EB8", VA = "0x1808EB8")]
	private void CollectEffectObjects()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x180D42C", Offset = "0x180D42C", VA = "0x180D42C")]
	private Color StringToColor(string color_string)
	{
		return default(Color);
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x180D568", Offset = "0x180D568", VA = "0x180D568")]
	private Texture2D GetTexture2D(string texture_path)
	{
		return null;
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x180D608", Offset = "0x180D608", VA = "0x180D608")]
	public void Circle(Texture2D tex, int cx, int cy, int r, Color col)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x180D048", Offset = "0x180D048", VA = "0x180D048")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x180D7D8", Offset = "0x180D7D8", VA = "0x180D7D8")]
	public WaveVR_AdaptiveControllerActions()
	{
	}
}
[Token(Token = "0x200003E")]
public class WaveVR_ControllerInstanceManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000561")]
	private class ControllerInstance
	{
		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WVR_DeviceType type;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject instance;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool eventEnabled;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool showBeam;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool showPointer;

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0x13DAA44", Offset = "0x13DAA44", VA = "0x13DAA44")]
		public ControllerInstance()
		{
		}
	}

	[Token(Token = "0x2000562")]
	private enum CComponent
	{
		[Token(Token = "0x4002223")]
		Beam,
		[Token(Token = "0x4002224")]
		ControllerPointer
	}

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_ControllerInstanceManager instance;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int ControllerIdx;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject eventSystem;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ControllerInstance> ctrInstanceList;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WVR_DeviceType ControllerFocus;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private WVR_DeviceType lastControllerFocus;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool mFocusCapturedBySystem;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool EnableSingleBeam;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool rConnected;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	private bool lConnected;

	[Token(Token = "0x17000011")]
	public static WaveVR_ControllerInstanceManager Instance
	{
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x15893CC", Offset = "0x15893CC", VA = "0x15893CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x15892EC", Offset = "0x15892EC", VA = "0x15892EC")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x158957C", Offset = "0x158957C", VA = "0x158957C")]
	private bool getEventSystemParameter(WVR_DeviceType type)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x15897B8", Offset = "0x15897B8", VA = "0x15897B8")]
	private bool getComponentParameter(GameObject controller, CComponent comp)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x1589998", Offset = "0x1589998", VA = "0x1589998")]
	public int registerControllerInstance(WVR_DeviceType type, GameObject controller)
	{
		return default(int);
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1589F40", Offset = "0x1589F40", VA = "0x1589F40")]
	public void removeControllerInstance(int index)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x158A298", Offset = "0x158A298", VA = "0x158A298")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x158A688", Offset = "0x158A688", VA = "0x158A688")]
	private void onSystemFocusChanged(params object[] args)
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x158A790", Offset = "0x158A790", VA = "0x158A790")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x158A9D8", Offset = "0x158A9D8", VA = "0x158A9D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x158AB0C", Offset = "0x158AB0C", VA = "0x158AB0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x158ABA0", Offset = "0x158ABA0", VA = "0x158ABA0")]
	private void onOEMConfigChanged(params object[] args)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x158ABF4", Offset = "0x158ABF4", VA = "0x158ABF4")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x158AE80", Offset = "0x158AE80", VA = "0x158AE80")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x158AE84", Offset = "0x158AE84", VA = "0x158AE84")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x158AECC", Offset = "0x158AECC", VA = "0x158AECC")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x158AF70", Offset = "0x158AF70", VA = "0x158AF70")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x158BEC8", Offset = "0x158BEC8", VA = "0x158BEC8")]
	private void printAllChildren(GameObject go)
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x158A8CC", Offset = "0x158A8CC", VA = "0x158A8CC")]
	private void checkControllerConnected()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x158BD5C", Offset = "0x158BD5C", VA = "0x158BD5C")]
	private void SetActiveOfEmitter()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x158B3B0", Offset = "0x158B3B0", VA = "0x158B3B0")]
	private void ForceSetActiveOfEmitter(ControllerInstance ci, bool enabled)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x158BAEC", Offset = "0x158BAEC", VA = "0x158BAEC")]
	private void ActivateEventSystem(WVR_DeviceType type, bool enabled)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x158C010", Offset = "0x158C010", VA = "0x158C010")]
	public WaveVR_ControllerInstanceManager()
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB706B8", Offset = "0xB706B8")]
public class WaveVR_ControllerPointer : MonoBehaviour
{
	[Token(Token = "0x40001B7")]
	private const string LOG_TAG = "WaveVR_ControllerPointer";

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool ShowPointer;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool Blink;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float PointerOuterDiameterMin;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public float PointerOuterDiameter;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool UseDefaultTexture;

	[Token(Token = "0x40001BE")]
	private const string defaultPointerResource_Texture = "focused_dot";

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D defaultTexture;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D CustomTexture;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public string TextureName;

	[Token(Token = "0x40001C2")]
	private const float pointerDistanceMin = 0.5f;

	[Token(Token = "0x40001C3")]
	[HideInInspector]
	public const float pointerDistanceMax = 100f;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public float PointerDistanceInMeters;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool useTexture;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshFilter pointerMeshFilter;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh pointerMesh;

	[Token(Token = "0x40001C8")]
	private const string defaultPointerResource_Material = "ControllerPointer";

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material pointerMaterial;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material pointerMaterialInstance;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color colorFactor;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public Color PointerColor;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public Color borderColor;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public Color focusColor;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Color focusBorderColor;

	[Token(Token = "0x40001D0")]
	private const int PointerRenderQueueMin = 1000;

	[Token(Token = "0x40001D1")]
	private const int PointerRenderQueueMax = 5000;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int PointerRenderQueue;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int reticleSegments;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public float kpointerGrowthAngle;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float colorFlickerTime;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool isPointerEnabled;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool pointerInitialized;

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x13E731C", Offset = "0x13E731C", VA = "0x13E731C")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x13E73C4", Offset = "0x13E73C4", VA = "0x13E73C4")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x13E8440", Offset = "0x13E8440", VA = "0x13E8440")]
	private bool IsBoolean(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x13E8294", Offset = "0x13E8294", VA = "0x13E8294")]
	private bool IsFloat(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x13E89C0", Offset = "0x13E89C0", VA = "0x13E89C0")]
	private bool IsNumeric(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x13E85F0", Offset = "0x13E85F0", VA = "0x13E85F0")]
	private Color32 StringToColor32(string color_string, int value)
	{
		return default(Color32);
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x13E8B6C", Offset = "0x13E8B6C", VA = "0x13E8B6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x13E8B70", Offset = "0x13E8B70", VA = "0x13E8B70")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x13E8B74", Offset = "0x13E8B74", VA = "0x13E8B74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x13E9010", Offset = "0x13E9010", VA = "0x13E9010")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x13E9170", Offset = "0x13E9170", VA = "0x13E9170")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x13E9CFC", Offset = "0x13E9CFC", VA = "0x13E9CFC")]
	private void CreatePointerMesh()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x13E9944", Offset = "0x13E9944", VA = "0x13E9944")]
	private void initialPointer()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x13E90A4", Offset = "0x13E90A4", VA = "0x13E90A4")]
	private void removePointer()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x13EA078", Offset = "0x13EA078", VA = "0x13EA078")]
	public void OnPointerEnter(Camera camera, GameObject target, Vector3 intersectionPosition, bool isInteractive)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x13EA080", Offset = "0x13EA080", VA = "0x13EA080")]
	private void SetPointerTarget(Vector3 target, bool interactive)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x13EA4B4", Offset = "0x13EA4B4", VA = "0x13EA4B4")]
	public WaveVR_ControllerPointer()
	{
	}
}
[Token(Token = "0x2000040")]
public enum ModelSpecify
{
	[Token(Token = "0x40001D9")]
	MS_Dominant,
	[Token(Token = "0x40001DA")]
	MS_NonDominant
}
[Serializable]
[Token(Token = "0x2000041")]
public class BatteryIndicator
{
	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int level;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float min;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float max;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string texturePath;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool textureLoaded;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D batteryTexture;

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xD360C0", Offset = "0xD360C0", VA = "0xD360C0")]
	public BatteryIndicator()
	{
	}
}
[Serializable]
[Token(Token = "0x2000042")]
public class TouchSetting
{
	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 touchForward;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 touchCenter;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 touchRight;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 touchPtU;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 touchPtW;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 touchPtV;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float raidus;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float touchptHeight;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x10E98F4", Offset = "0x10E98F4", VA = "0x10E98F4")]
	public TouchSetting()
	{
	}
}
[Serializable]
[Token(Token = "0x2000043")]
public class ModelResource
{
	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string renderModelName;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ModelSpecify modelSpecify;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool mergeToOne;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint sectionCount;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FBXInfo_t[] FBXInfo;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshInfo_t[] SectionInfo;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool parserReady;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D modelTexture;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isTouchSetting;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TouchSetting TouchSetting;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool isBatterySetting;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<BatteryIndicator> batteryTextureList;

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x13390E4", Offset = "0x13390E4", VA = "0x13390E4")]
	public ModelResource()
	{
	}
}
[Token(Token = "0x2000044")]
public class WaveVR_ControllerResourceHolder
{
	[Token(Token = "0x2000563")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72594", Offset = "0xB72594")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_ControllerResourceHolder <>4__this;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ModelResource newMR;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool merge;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ModelFolder;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ModelSpecify ms;

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0x13EC3CC", Offset = "0x13EC3CC", VA = "0x13EC3CC")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x60028A7")]
		[Address(RVA = "0x13F01BC", Offset = "0x13F01BC", VA = "0x13F01BC")]
		internal void <addRenderModel>b__0()
		{
		}
	}

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Thread mthread;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_ControllerResourceHolder instance;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ModelResource> renderModelList;

	[Token(Token = "0x17000012")]
	public static WaveVR_ControllerResourceHolder Instance
	{
		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x13E36B0", Offset = "0x13E36B0", VA = "0x13E36B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x13EBF3C", Offset = "0x13EBF3C", VA = "0x13EBF3C")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x13EBFDC", Offset = "0x13EBFDC", VA = "0x13EBFDC")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x13EC07C", Offset = "0x13EC07C", VA = "0x13EC07C")]
	private void PrintWarningLog(string msg)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x13EC11C", Offset = "0x13EC11C", VA = "0x13EC11C")]
	public bool isRenderModelExist(string renderModel, ModelSpecify ms, bool merge)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x13EC274", Offset = "0x13EC274", VA = "0x13EC274")]
	public ModelResource getRenderModelResource(string renderModel, ModelSpecify ms, bool merge)
	{
		return null;
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x13E37B4", Offset = "0x13E37B4", VA = "0x13E37B4")]
	public bool addRenderModel(string renderModel, string ModelFolder, ModelSpecify ms, bool merge)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x13ECC68", Offset = "0x13ECC68", VA = "0x13ECC68")]
	private void readNativeData(ModelResource curr, bool mergeTo, string modelFolderPath, ModelSpecify ms)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x13EE4EC", Offset = "0x13EE4EC", VA = "0x13EE4EC")]
	private bool GetTouchPadParam(ModelResource curr, string modelFolderPath, ModelSpecify ms)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x13EC3D4", Offset = "0x13EC3D4", VA = "0x13EC3D4")]
	private bool getBatteryIndicatorParam(ModelResource curr, string modelFolderPath, ModelSpecify ms)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x13EBECC", Offset = "0x13EBECC", VA = "0x13EBECC")]
	public WaveVR_ControllerResourceHolder()
	{
	}
}
[Token(Token = "0x2000045")]
public class WaveVR_ControllerRootToEmitter : MonoBehaviour
{
	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveVR_Controller.EDeviceType deviceType;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] moveToEmitter;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject emitter;

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x13F01EC", Offset = "0x13F01EC", VA = "0x13F01EC")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x13F02D4", Offset = "0x13F02D4", VA = "0x13F02D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x13F0380", Offset = "0x13F0380", VA = "0x13F0380")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x13F042C", Offset = "0x13F042C", VA = "0x13F042C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x13F0430", Offset = "0x13F0430", VA = "0x13F0430")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x13F0434", Offset = "0x13F0434", VA = "0x13F0434")]
	private void onAdaptiveControllerModelReady(params object[] args)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x13F0AB0", Offset = "0x13F0AB0", VA = "0x13F0AB0")]
	public WaveVR_ControllerRootToEmitter()
	{
	}
}
[Token(Token = "0x2000046")]
public class WaveVR_RenderModel : MonoBehaviour
{
	[Token(Token = "0x2000564")]
	public enum ControllerHand
	{
		[Token(Token = "0x400222B")]
		Controller_Dominant,
		[Token(Token = "0x400222C")]
		Controller_NonDominant
	}

	[Token(Token = "0x2000565")]
	public enum LoadingState
	{
		[Token(Token = "0x400222E")]
		LoadingState_NOT_LOADED,
		[Token(Token = "0x400222F")]
		LoadingState_LOADING,
		[Token(Token = "0x4002230")]
		LoadingState_LOADED
	}

	[Token(Token = "0x2000566")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB725A4", Offset = "0xB725A4")]
	private sealed class <SpawnRenderModel>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_RenderModel <>4__this;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private uint <i>5__2;

		[Token(Token = "0x17000464")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028AB")]
			[Address(RVA = "0x162E958", Offset = "0x162E958", VA = "0x162E958", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000465")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028AD")]
			[Address(RVA = "0x162E9C4", Offset = "0x162E9C4", VA = "0x162E9C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0x162CB8C", Offset = "0x162CB8C", VA = "0x162CB8C")]
		[DebuggerHidden]
		public <SpawnRenderModel>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x60028A9")]
		[Address(RVA = "0x162CE8C", Offset = "0x162CE8C", VA = "0x162CE8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0x162CE90", Offset = "0x162CE90", VA = "0x162CE90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0x162E960", Offset = "0x162E960", VA = "0x162E960", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000567")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB725B4", Offset = "0xB725B4")]
	private sealed class <checkRenderModelAndDelete>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_RenderModel <>4__this;

		[Token(Token = "0x17000466")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028B1")]
			[Address(RVA = "0x162EA30", Offset = "0x162EA30", VA = "0x162EA30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000467")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028B3")]
			[Address(RVA = "0x162EA9C", Offset = "0x162EA9C", VA = "0x162EA9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028AE")]
		[Address(RVA = "0x162CBB8", Offset = "0x162CBB8", VA = "0x162CBB8")]
		[DebuggerHidden]
		public <checkRenderModelAndDelete>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x60028AF")]
		[Address(RVA = "0x162E9CC", Offset = "0x162E9CC", VA = "0x162E9CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028B0")]
		[Address(RVA = "0x162E9D0", Offset = "0x162E9D0", VA = "0x162E9D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0x162EA38", Offset = "0x162EA38", VA = "0x162EA38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerHand WhichHand;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject defaultModel;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool updateDynamically;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool mergeToOneBone;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject controllerSpawned;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaveVR_Controller.EDeviceType deviceType;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool connected;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string renderModelNamePath;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string renderModelName;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IntPtr ptrParameterName;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private IntPtr ptrResult;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Color32> colors;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject meshCom;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject meshGO;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Mesh updateMesh;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material modelMat;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material ImgMaterial;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private WaitForEndOfFrame wfef;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private WaitForSeconds wfs;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool showBatterIndicator;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool isBatteryIndicatorReady;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private BatteryIndicator currentBattery;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject batteryGO;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private MeshRenderer batteryMR;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ModelResource modelResource;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ModelSpecify modelSpecify;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private LoadingState mLoadingState;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int t;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool IsFocusCapturedBySystemLastFrame;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string emitterMeshName;

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1629D70", Offset = "0x1629D70", VA = "0x1629D70")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1629F44", Offset = "0x1629F44", VA = "0x1629F44")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x162A118", Offset = "0x162A118", VA = "0x162A118")]
	private void PrintWarningLog(string msg)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x162A2EC", Offset = "0x162A2EC", VA = "0x162A2EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x162B6E0", Offset = "0x162B6E0", VA = "0x162B6E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x162B8D0", Offset = "0x162B8D0", VA = "0x162B8D0")]
	private void onOEMConfigChanged(params object[] args)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x162B928", Offset = "0x162B928", VA = "0x162B928")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x162BC2C", Offset = "0x162BC2C", VA = "0x162BC2C")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x162A6C0", Offset = "0x162A6C0", VA = "0x162A6C0")]
	private bool isRenderModelNameSameAsPrevious()
	{
		return default(bool);
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x162C114", Offset = "0x162C114", VA = "0x162C114")]
	private void Start()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x162C364", Offset = "0x162C364", VA = "0x162C364")]
	private void Update()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x162A864", Offset = "0x162A864", VA = "0x162A864")]
	private void onLoadController(WVR_DeviceType type)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x162CB18", Offset = "0x162CB18", VA = "0x162CB18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83904", Offset = "0xB83904")]
	private IEnumerator SpawnRenderModel()
	{
		return null;
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x162C72C", Offset = "0x162C72C", VA = "0x162C72C")]
	private void updateBatteryLevel()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x162C2F0", Offset = "0x162C2F0", VA = "0x162C2F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83968", Offset = "0xB83968")]
	private IEnumerator checkRenderModelAndDelete()
	{
		return null;
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x162A4E8", Offset = "0x162A4E8", VA = "0x162A4E8")]
	private void deleteChild(string reason)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x162CBE4", Offset = "0x162CBE4", VA = "0x162CBE4")]
	private void DeleteControllerWhenDisconnect()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x162A63C", Offset = "0x162A63C", VA = "0x162A63C")]
	private bool checkConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x162CD8C", Offset = "0x162CD8C", VA = "0x162CD8C")]
	public WaveVR_RenderModel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000047")]
public class ButtonIndication
{
	[Token(Token = "0x2000568")]
	public enum Alignment
	{
		[Token(Token = "0x4002239")]
		RIGHT,
		[Token(Token = "0x400223A")]
		LEFT
	}

	[Token(Token = "0x2000569")]
	public enum KeyIndicator
	{
		[Token(Token = "0x400223C")]
		Trigger,
		[Token(Token = "0x400223D")]
		TouchPad,
		[Token(Token = "0x400223E")]
		DigitalTrigger,
		[Token(Token = "0x400223F")]
		App,
		[Token(Token = "0x4002240")]
		Home,
		[Token(Token = "0x4002241")]
		Volume,
		[Token(Token = "0x4002242")]
		VolumeUp,
		[Token(Token = "0x4002243")]
		VolumeDown,
		[Token(Token = "0x4002244")]
		Grip,
		[Token(Token = "0x4002245")]
		DPad_Left,
		[Token(Token = "0x4002246")]
		DPad_Right,
		[Token(Token = "0x4002247")]
		DPad_Up,
		[Token(Token = "0x4002248")]
		DPad_Down
	}

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public KeyIndicator keyType;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Alignment alignment;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 indicationOffset;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool useMultiLanguage;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string indicationText;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool followButtonRotation;

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xD3725C", Offset = "0xD3725C", VA = "0xD3725C")]
	public ButtonIndication()
	{
	}
}
[Serializable]
[Token(Token = "0x2000048")]
public class ComponentsIndication
{
	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Description;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SourceObject;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject LineIndicator;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject DestObject;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ButtonIndication.Alignment alignment;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 Offset;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool followButtonRoration;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xD38690", Offset = "0xD38690", VA = "0xD38690")]
	public ComponentsIndication()
	{
	}
}
[Token(Token = "0x2000049")]
public class WaveVR_ShowIndicator : MonoBehaviour
{
	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB74838", Offset = "0xB74838")]
	public bool showIndicator;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74870", Offset = "0xB74870")]
	public float showIndicatorAngle;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hideIndicatorByRoll;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool basedOnEmitter;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7488C", Offset = "0xB7488C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB7488C", Offset = "0xB7488C")]
	public float lineLength;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB748E8", Offset = "0xB748E8")]
	public float lineStartWidth;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74908", Offset = "0xB74908")]
	public float lineEndWidth;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color lineColor;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB74928", Offset = "0xB74928")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74928", Offset = "0xB74928")]
	public float textCharacterSize;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74984", Offset = "0xB74984")]
	public float zhCharactarSize;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB749A4", Offset = "0xB749A4")]
	public int textFontSize;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color textColor;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB749C4", Offset = "0xB749C4")]
	public List<ButtonIndication> buttonIndicationList;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WaveVR_Resource rw;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string sysLang;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string sysCountry;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int checkCount;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject indicatorPrefab;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject linePrefab;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<ComponentsIndication> compInd;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject _HMD;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool needRedraw;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject Emitter;

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1632920", Offset = "0x1632920", VA = "0x1632920")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x16329C0", Offset = "0x16329C0", VA = "0x16329C0")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x1632A60", Offset = "0x1632A60", VA = "0x1632A60")]
	private void resetIndicator()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x1632D20", Offset = "0x1632D20", VA = "0x1632D20")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x1632B10", Offset = "0x1632B10", VA = "0x1632B10")]
	private void clearResourceAndObject()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x1632D2C", Offset = "0x1632D2C", VA = "0x1632D2C")]
	private void onAdaptiveControllerModelReady(params object[] args)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x1635BC8", Offset = "0x1635BC8", VA = "0x1635BC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x1635C68", Offset = "0x1635C68", VA = "0x1635C68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x1635D08", Offset = "0x1635D08", VA = "0x1635D08")]
	private void Start()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1632D30", Offset = "0x1632D30", VA = "0x1632D30")]
	public void createIndicator()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x1635D0C", Offset = "0x1635D0C", VA = "0x1635D0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x1636A1C", Offset = "0x1636A1C", VA = "0x1636A1C")]
	public WaveVR_ShowIndicator()
	{
	}
}
[Token(Token = "0x200004A")]
public interface IPointerHoverHandler : IEventSystemHandler
{
	[Token(Token = "0x6000320")]
	void OnPointerHover(PointerEventData eventData);
}
[Token(Token = "0x200004B")]
public class WaveVR_AddEventSystemGUI : MonoBehaviour
{
	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool added;

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x180DD70", Offset = "0x180DD70", VA = "0x180DD70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x180DED0", Offset = "0x180DED0", VA = "0x180DED0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x180DF5C", Offset = "0x180DF5C", VA = "0x180DF5C")]
	public WaveVR_AddEventSystemGUI()
	{
	}
}
[Token(Token = "0x200004C")]
public class WaveVR_EventSystemControllerProvider
{
	[Token(Token = "0x200056A")]
	public class ControllerModel
	{
		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82A48", Offset = "0xB82A48")]
		private WaveVR_Controller.EDeviceType <DeviceType>k__BackingField;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82A58", Offset = "0xB82A58")]
		private GameObject <Model>k__BackingField;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82A68", Offset = "0xB82A68")]
		private bool <HasLoader>k__BackingField;

		[Token(Token = "0x17000468")]
		public WaveVR_Controller.EDeviceType DeviceType
		{
			[Token(Token = "0x60028B4")]
			[Address(RVA = "0x13F2374", Offset = "0x13F2374", VA = "0x13F2374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EB24", Offset = "0xB8EB24")]
			get
			{
				return default(WaveVR_Controller.EDeviceType);
			}
			[Token(Token = "0x60028B5")]
			[Address(RVA = "0x13F237C", Offset = "0x13F237C", VA = "0x13F237C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EB34", Offset = "0xB8EB34")]
			set
			{
			}
		}

		[Token(Token = "0x17000469")]
		public GameObject Model
		{
			[Token(Token = "0x60028B6")]
			[Address(RVA = "0x13F2384", Offset = "0x13F2384", VA = "0x13F2384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EB44", Offset = "0xB8EB44")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028B7")]
			[Address(RVA = "0x13F238C", Offset = "0x13F238C", VA = "0x13F238C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EB54", Offset = "0xB8EB54")]
			set
			{
			}
		}

		[Token(Token = "0x1700046A")]
		public bool HasLoader
		{
			[Token(Token = "0x60028B8")]
			[Address(RVA = "0x13F2394", Offset = "0x13F2394", VA = "0x13F2394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EB64", Offset = "0xB8EB64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028B9")]
			[Address(RVA = "0x13F239C", Offset = "0x13F239C", VA = "0x13F239C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EB74", Offset = "0xB8EB74")]
			set
			{
			}
		}

		[Token(Token = "0x60028BA")]
		[Address(RVA = "0x13F2160", Offset = "0x13F2160", VA = "0x13F2160")]
		public ControllerModel(WaveVR_Controller.EDeviceType type, GameObject model)
		{
		}
	}

	[Token(Token = "0x4000243")]
	private const string LOG_TAG = "WaveVR_EventSystemControllerProvider";

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_EventSystemControllerProvider instance;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<ControllerModel> ControllerModels;

	[Token(Token = "0x17000013")]
	public static WaveVR_EventSystemControllerProvider Instance
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0x13E02D8", Offset = "0x13E02D8", VA = "0x13E02D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x13F2048", Offset = "0x13F2048", VA = "0x13F2048")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x13F20F0", Offset = "0x13F20F0", VA = "0x13F20F0")]
	private WaveVR_EventSystemControllerProvider()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x13E3078", Offset = "0x13E3078", VA = "0x13E3078")]
	public void SetControllerModel(WaveVR_Controller.EDeviceType type, GameObject model)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x13F21A0", Offset = "0x13F21A0", VA = "0x13F21A0")]
	public GameObject GetControllerModel(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x13E0398", Offset = "0x13E0398", VA = "0x13E0398")]
	public void MarkControllerLoader(WaveVR_Controller.EDeviceType type, bool value)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x13F2284", Offset = "0x13F2284", VA = "0x13F2284")]
	public bool HasControllerLoader(WaveVR_Controller.EDeviceType type)
	{
		return default(bool);
	}
}
[Token(Token = "0x200004D")]
internal static class WaveVR_EventSystemGUIProvider
{
	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> EventGUIs;

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x13F23A8", Offset = "0x13F23A8", VA = "0x13F23A8")]
	public static void AddEventGUI(GameObject go)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x13F242C", Offset = "0x13F242C", VA = "0x13F242C")]
	public static void RemoveEventGUI(GameObject go)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x13F24B0", Offset = "0x13F24B0", VA = "0x13F24B0")]
	public static GameObject[] GetEventGUIs()
	{
		return null;
	}
}
[Token(Token = "0x200004E")]
public static class WaveVR_ExecuteEvents
{
	[Token(Token = "0x17000014")]
	public static ExecuteEvents.EventFunction<IPointerHoverHandler> pointerHoverHandler
	{
		[Token(Token = "0x6000331")]
		[Address(RVA = "0x13F26D8", Offset = "0x13F26D8", VA = "0x13F26D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x13F25E0", Offset = "0x13F25E0", VA = "0x13F25E0")]
	private static void HoverExecutor(IPointerHoverHandler handler, BaseEventData eventData)
	{
	}
}
[Token(Token = "0x200004F")]
public class WaveVR_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x200056B")]
	public enum EGazeTriggerMouseKey
	{
		[Token(Token = "0x400224D")]
		LeftClick,
		[Token(Token = "0x400224E")]
		RightClick,
		[Token(Token = "0x400224F")]
		MiddleClick
	}

	[Token(Token = "0x200056C")]
	public enum EGazeInputEvent
	{
		[Token(Token = "0x4002251")]
		PointerDown,
		[Token(Token = "0x4002252")]
		PointerClick,
		[Token(Token = "0x4002253")]
		PointerSubmit
	}

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UseWaveVRReticle;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool useWaveVRReticle;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool TimerControl;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private bool timerControlDefault;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float TimeToGaze;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool ProgressRate;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float RateTextZPosition;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool ProgressCounter;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float CounterTextZPosition;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public EGazeInputEvent InputEvent;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool ButtonControl;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<WaveVR_Controller.EDeviceType> ButtonControlDevices;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<WaveVR_ButtonList.EButtons> ButtonControlKeys;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject Head;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool btnPressDown;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool btnPressed;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool btnPressUp;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	private bool HmdEnterPressDown;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float currUnscaledTime;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 gazeTargetPos;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 gazeScreenPos;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 gazeScreenPos2D;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private PointerEventData pointerData;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<RaycastResult> physicsRaycastResultsGaze;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<GameObject> physicsRaycastObjectsGaze;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<GameObject> prePhysicsRaycastObjectsGaze;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<GameObject> physicsRaycastObjectsTmp;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<GameObject> prePhysicsRaycastObjectsTmp;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<RaycastResult> graphicRaycastResultsGaze;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<GameObject> graphicRaycastObjectsGaze;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<GameObject> preGraphicRaycastObjectsGaze;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<GameObject> graphicRaycastObjectsTmp;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<GameObject> preGraphicRaycastObjectsTmp;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float gazeTime;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Text progressText;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Text counterText;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private WaveVR_Reticle gazePointer;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private GameObject percentCanvas;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private GameObject counterCanvas;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 ringPos;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject preGazeObject;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool mEnabled;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	private bool mEnableGaze;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private RingMeshDrawer ringMesh;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool focusCapturedBySystem;

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x13F29AC", Offset = "0x13F29AC", VA = "0x13F29AC")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x13F2A8C", Offset = "0x13F2A8C", VA = "0x13F2A8C")]
	public void EnableTimerControl(bool enable)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x13F2B58", Offset = "0x13F2B58", VA = "0x13F2B58")]
	private Vector3 GetIntersectionPosition(Camera cam, RaycastResult raycastResult)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x13F2CFC", Offset = "0x13F2CFC", VA = "0x13F2CFC")]
	private void ResetPointerEventData()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x13F2DD0", Offset = "0x13F2DD0", VA = "0x13F2DD0")]
	private void CastToCenterOfScreen()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x13F3EAC", Offset = "0x13F3EAC", VA = "0x13F3EAC")]
	private void EnterExitPhysicsObject()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x13F426C", Offset = "0x13F426C", VA = "0x13F426C")]
	private void EnterExitGraphicObject()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x13F462C", Offset = "0x13F462C", VA = "0x13F462C")]
	private void ExitAllObjects()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x13F3AE8", Offset = "0x13F3AE8", VA = "0x13F3AE8")]
	private void PhysicsRaycast(PhysicsRaycaster raycaster)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x13F2F78", Offset = "0x13F2F78", VA = "0x13F2F78")]
	private void GraphicRaycast(Camera event_camera)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x13F4908", Offset = "0x13F4908", VA = "0x13F4908")]
	private GameObject GetCurrentGameObject(PointerEventData pointerData)
	{
		return null;
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x13F49A8", Offset = "0x13F49A8", VA = "0x13F49A8")]
	private Vector3 GetIntersectionPosition(PointerEventData pointerData)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x13F4B74", Offset = "0x13F4B74", VA = "0x13F4B74")]
	private void UpdateProgressDistance(PointerEventData pointerEvent)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x13F4D90", Offset = "0x13F4D90", VA = "0x13F4D90")]
	private void UpdateReticle(GameObject preGazedObject, PointerEventData pointerEvent)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x13F50F4", Offset = "0x13F50F4", VA = "0x13F50F4")]
	private void UpdateButtonStates()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x13F5368", Offset = "0x13F5368", VA = "0x13F5368")]
	private void UpdateProgressText()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x13F5630", Offset = "0x13F5630", VA = "0x13F5630")]
	private void UpdateCounterText()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x13F591C", Offset = "0x13F591C", VA = "0x13F591C")]
	private void OnTriggeGaze()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x13F6150", Offset = "0x13F6150", VA = "0x13F6150")]
	private void GazeControl()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x13F6360", Offset = "0x13F6360", VA = "0x13F6360", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x13F67F0", Offset = "0x13F67F0", VA = "0x13F67F0", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x13F6DB4", Offset = "0x13F6DB4", VA = "0x13F6DB4", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x13F6FF0", Offset = "0x13F6FF0", VA = "0x13F6FF0")]
	public void ActivatePointerAndRing(bool active)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x13F6880", Offset = "0x13F6880", VA = "0x13F6880")]
	private void ActivateGazePointerCanvas(bool active)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x13F6B98", Offset = "0x13F6B98", VA = "0x13F6B98")]
	private void ActivateMeshDrawer(bool active)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x13F7044", Offset = "0x13F7044", VA = "0x13F7044")]
	public WaveVR_GazeInputModule()
	{
	}
}
[Token(Token = "0x2000050")]
public enum WaveVR_EInputModule
{
	[Token(Token = "0x4000276")]
	Controller,
	[Token(Token = "0x4000277")]
	Gaze
}
[Token(Token = "0x2000051")]
public class WaveVR_InputModuleManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200056D")]
	public class CGazeInputModule
	{
		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool UseWaveVRReticle;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool TimerControl;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float TimeToGaze;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ProgressRate;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float RateTextZPosition;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ProgressCounter;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float CounterTextZPosition;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WaveVR_GazeInputModule.EGazeInputEvent InputEvent;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ButtonControl;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<WaveVR_Controller.EDeviceType> ButtonControlDevices;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<WaveVR_ButtonList.EButtons> ButtonControlKeys;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject Head;

		[Token(Token = "0x60028BB")]
		[Address(RVA = "0xFC7FA0", Offset = "0xFC7FA0", VA = "0xFC7FA0")]
		public CGazeInputModule()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200056E")]
	public class CControllerInputModule
	{
		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool DominantEventEnabled;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject DominantController;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask DominantRaycastMask;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool NonDominantEventEnabled;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject NonDominantController;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask NonDominantRaycastMask;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<WaveVR_ButtonList.EButtons> ButtonToTrigger;

		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WaveVR_ControllerInputModule.ERaycastMode RaycastMode;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public ERaycastStartPoint RaycastStartPoint;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB82A78", Offset = "0xB82A78")]
		public string CanvasTag;

		[Token(Token = "0x60028BC")]
		[Address(RVA = "0xFC8058", Offset = "0xFC8058", VA = "0xFC8058")]
		public CControllerInputModule()
		{
		}
	}

	[Token(Token = "0x4000278")]
	private const string LOG_TAG = "WaveVR_InputModuleManager";

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableInputModule;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool OverrideSystemSettings;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AutoGaze;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool AlwaysShowController;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WaveVR_EInputModule CustomInputModule;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CGazeInputModule Gaze;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CControllerInputModule Controller;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float FixedBeamLength;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_InputModuleManager instance;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool preOverrideSystemSettings;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaveVR_EInputModule InteractionMode_User;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private WVR_InteractionMode InteractionMode_System;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WVR_InteractionMode InteractionMode_Current;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private WVR_GazeTriggerType gazeTriggerType_User;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WVR_GazeTriggerType gazeTriggerType_System;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private WVR_GazeTriggerType gazeTriggerType_User_pre;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject Head;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject eventSystem;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WaveVR_GazeInputModule gazeInputModule;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WaveVR_ControllerInputModule controllerInputModule;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MeshRenderer gazePointerRenderer;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MeshRenderer gazeRingRenderer;

	[Token(Token = "0x17000015")]
	public static WaveVR_InputModuleManager Instance
	{
		[Token(Token = "0x600034E")]
		[Address(RVA = "0xFC59AC", Offset = "0xFC59AC", VA = "0xFC59AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xFC5904", Offset = "0xFC5904", VA = "0xFC5904")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xFC5A14", Offset = "0xFC5A14", VA = "0xFC5A14")]
	private void initInteractionModeAndGazeTriggerType()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xFC6134", Offset = "0xFC6134", VA = "0xFC6134")]
	private void updateInteractionModeAndGazeTriggerType()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xFC5E7C", Offset = "0xFC5E7C", VA = "0xFC5E7C")]
	private void updateGazeTriggerType_User()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xFC65EC", Offset = "0xFC65EC", VA = "0xFC65EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xFC66BC", Offset = "0xFC66BC", VA = "0xFC66BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xFC6DA0", Offset = "0xFC6DA0", VA = "0xFC6DA0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xFC6C18", Offset = "0xFC6C18", VA = "0xFC6C18")]
	private void ActivateGazePointer(bool active)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xFC71B4", Offset = "0xFC71B4", VA = "0xFC71B4")]
	private void CreateGazeInputModule()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xFC7284", Offset = "0xFC7284", VA = "0xFC7284")]
	private void SetGazeInputModuleParameters()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xFC7458", Offset = "0xFC7458", VA = "0xFC7458")]
	private void updateGazeInputModule()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xFC7584", Offset = "0xFC7584", VA = "0xFC7584")]
	private void SetActiveGaze(bool value)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xFC7644", Offset = "0xFC7644", VA = "0xFC7644")]
	public void UseWaveVRReticle(bool use)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xFC76F8", Offset = "0xFC76F8", VA = "0xFC76F8")]
	private void CreateControllerInputModule()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xFC77C8", Offset = "0xFC77C8", VA = "0xFC77C8")]
	private void SetControllerInputModuleParameters()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xFC7AA0", Offset = "0xFC7AA0", VA = "0xFC7AA0")]
	private void updateControllerInputModule()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xFC7B38", Offset = "0xFC7B38", VA = "0xFC7B38")]
	private void SetActiveController(bool value)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xFC7BF8", Offset = "0xFC7BF8", VA = "0xFC7BF8")]
	private bool IsAnyControllerConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xFC5EC0", Offset = "0xFC5EC0", VA = "0xFC5EC0")]
	private void initializeInputModuleByCustomSettings()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xFC5FE4", Offset = "0xFC5FE4", VA = "0xFC5FE4")]
	private void initializeInputModuleBySystemSetting()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xFC6D74", Offset = "0xFC6D74", VA = "0xFC6D74")]
	private void disableAllInputModules()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xFC6480", Offset = "0xFC6480", VA = "0xFC6480")]
	private void updateInputModuleByCustomSettings()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xFC6534", Offset = "0xFC6534", VA = "0xFC6534")]
	private void updateInputModuleBySystemSetting()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xFC7D78", Offset = "0xFC7D78", VA = "0xFC7D78")]
	public WaveVR_ControllerInputModule.ERaycastMode GetRaycastMode()
	{
		return default(WaveVR_ControllerInputModule.ERaycastMode);
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xFC610C", Offset = "0xFC610C", VA = "0xFC610C")]
	public WVR_InteractionMode GetInteractionMode()
	{
		return default(WVR_InteractionMode);
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xFC7E18", Offset = "0xFC7E18", VA = "0xFC7E18")]
	public WVR_GazeTriggerType GetGazeTriggerType()
	{
		return default(WVR_GazeTriggerType);
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xFC7E34", Offset = "0xFC7E34", VA = "0xFC7E34")]
	public WVR_GazeTriggerType GetUserGazeTriggerType()
	{
		return default(WVR_GazeTriggerType);
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xFC7E3C", Offset = "0xFC7E3C", VA = "0xFC7E3C")]
	public void SetControllerBeamLength(WaveVR_Controller.EDeviceType dt, float length)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xFC7EF8", Offset = "0xFC7EF8", VA = "0xFC7EF8")]
	public WaveVR_InputModuleManager()
	{
	}
}
[Token(Token = "0x2000052")]
public class WaveVR_RaycastResult
{
	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB749FC", Offset = "0xB749FC")]
	private GameObject <gameObject>k__BackingField;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB74A0C", Offset = "0xB74A0C")]
	private Vector3 <worldPosition>k__BackingField;

	[Token(Token = "0x17000016")]
	public GameObject gameObject
	{
		[Token(Token = "0x600036C")]
		[Address(RVA = "0xFCE030", Offset = "0xFCE030", VA = "0xFCE030")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB839CC", Offset = "0xB839CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600036D")]
		[Address(RVA = "0xFCE038", Offset = "0xFCE038", VA = "0xFCE038")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB839DC", Offset = "0xB839DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public Vector3 worldPosition
	{
		[Token(Token = "0x600036E")]
		[Address(RVA = "0xFCE040", Offset = "0xFCE040", VA = "0xFCE040")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB839EC", Offset = "0xB839EC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600036F")]
		[Address(RVA = "0xFCE04C", Offset = "0xFCE04C", VA = "0xFCE04C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB839FC", Offset = "0xB839FC")]
		set
		{
		}
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xFCE058", Offset = "0xFCE058", VA = "0xFCE058")]
	public WaveVR_RaycastResult()
	{
	}
}
[Token(Token = "0x2000053")]
public class WaveVR_RaycastResultProvider
{
	[Token(Token = "0x200056F")]
	public class ERaycastResult
	{
		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Controller.EDeviceType Type;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaveVR_RaycastResult Result;

		[Token(Token = "0x60028BD")]
		[Address(RVA = "0xFCE398", Offset = "0xFCE398", VA = "0xFCE398")]
		public ERaycastResult(WaveVR_Controller.EDeviceType type, WaveVR_RaycastResult result)
		{
		}
	}

	[Token(Token = "0x4000291")]
	private const string LOG_TAG = "WaveVR_RaycastResultProvider";

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_RaycastResultProvider instance;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<ERaycastResult> RaycastResults;

	[Token(Token = "0x17000018")]
	public static WaveVR_RaycastResultProvider Instance
	{
		[Token(Token = "0x6000372")]
		[Address(RVA = "0xFCE150", Offset = "0xFCE150", VA = "0xFCE150")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xFCE0D8", Offset = "0xFCE0D8", VA = "0xFCE0D8")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xFCE210", Offset = "0xFCE210", VA = "0xFCE210")]
	private WaveVR_RaycastResultProvider()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xFCE3D4", Offset = "0xFCE3D4", VA = "0xFCE3D4")]
	public void SetRaycastResult(WaveVR_Controller.EDeviceType device, GameObject gameObject, Vector3 worldPosition)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xFCE51C", Offset = "0xFCE51C", VA = "0xFCE51C")]
	public WaveVR_RaycastResult GetRaycastResult(WVR_DeviceType type)
	{
		return null;
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xFCE59C", Offset = "0xFCE59C", VA = "0xFCE59C")]
	public WaveVR_RaycastResult GetRaycastResult(WaveVR_Controller.EDeviceType device)
	{
		return null;
	}
}
[Token(Token = "0x2000054")]
public class WaveVR_SetAsEventSystemController : MonoBehaviour
{
	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool added;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WaveVR_Controller.EDeviceType Type;

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x16327D8", Offset = "0x16327D8", VA = "0x16327D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x1632884", Offset = "0x1632884", VA = "0x1632884")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1632910", Offset = "0x1632910", VA = "0x1632910")]
	public WaveVR_SetAsEventSystemController()
	{
	}
}
[Token(Token = "0x2000055")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB7071C", Offset = "0xB7071C")]
public class WaveVR_GesturePointer : MonoBehaviour
{
	[Token(Token = "0x2000570")]
	private enum DrawMode
	{
		[Token(Token = "0x400226D")]
		FORWARD,
		[Token(Token = "0x400226E")]
		UPWARD
	}

	[Token(Token = "0x4000296")]
	private const string LOG_TAG = "WaveVR_GesturePointer";

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB74A1C", Offset = "0xB74A1C")]
	public WaveVR_GestureManager.EGestureHand Hand;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private DrawMode drawMode;

	[Token(Token = "0x4000299")]
	private const float DEF_RING_WIDTH = 0.005f;

	[Token(Token = "0x400029A")]
	private const float MIN_RING_WIDTH = 0.001f;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB74A54", Offset = "0xB74A54")]
	public float PointerRingWidth;

	[Token(Token = "0x400029C")]
	private const float DEF_INNER_CIRCLE_RADIUS = 0.005f;

	[Token(Token = "0x400029D")]
	private const float MIN_INNER_CIRCLE_RADIUS = 0.001f;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB74A8C", Offset = "0xB74A8C")]
	public float PointerCircleRadius;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 pointerOffset;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 pointerFrameOffset;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 pointerWorldPosition;

	[Token(Token = "0x40002A2")]
	private const float DEF_POINTER_DISTANCE = 1f;

	[Token(Token = "0x40002A3")]
	private const float MIN_POINTER_DISTANCE = 0.1f;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB74AC4", Offset = "0xB74AC4")]
	public float PointerDistance;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float pointerDistance;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB74AFC", Offset = "0xB74AFC")]
	public Color PointerColor;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB74B34", Offset = "0xB74B34")]
	public Color ProgressColor;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Mesh mMesh;

	[Token(Token = "0x40002A9")]
	private const string POINTER_MATERIAL_NAME = "RingUnlitTransparentMat";

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB74B6C", Offset = "0xB74B6C")]
	public Material PointerMaterial;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material pointerMaterialInstance;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MeshRenderer pointerMeshRend;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MeshFilter pointerMeshFilter;

	[Token(Token = "0x40002AE")]
	private const int POINTER_MATERIAL_RENDER_QUEUE_MIN = 1000;

	[Token(Token = "0x40002AF")]
	private const int POINTER_MATERIAL_RENDER_QUEUE_MAX = 5000;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB74BA4", Offset = "0xB74BA4")]
	public int PointerRenderQueue;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB74BDC", Offset = "0xB74BDC")]
	public int PointerSortingOrder;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isHovering;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	[HideInInspector]
	public bool ShowPointer;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool mEnabled;

	[Token(Token = "0x40002B5")]
	private const int VERTEX_COUNT = 400;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3[] ringVert;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Color[] ringColor;

	[Token(Token = "0x40002B8")]
	private const int TRIANGLE_COUNT = 600;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int[] ringTriangle;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector2[] ringUv;

	[Token(Token = "0x40002BB")]
	private const float percentAngle = 3.6f;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int frameCount;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int frameInterval;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int beginVertex;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int endVertex;

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xFBE8DC", Offset = "0xFBE8DC", VA = "0xFBE8DC")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xFBE984", Offset = "0xFBE984", VA = "0xFBE984")]
	private bool ValidateParameters()
	{
		return default(bool);
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xFBEAAC", Offset = "0xFBEAAC", VA = "0xFBEAAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xFBF244", Offset = "0xFBF244", VA = "0xFBF244")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xFBF2FC", Offset = "0xFBF2FC", VA = "0xFBF2FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xFBEDDC", Offset = "0xFBEDDC", VA = "0xFBEDDC")]
	private void SetPointerActive(bool active)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xFBF72C", Offset = "0xFBF72C", VA = "0xFBF72C")]
	private void DrawRingRoll(float radius, float innerRadius, Vector3 offset, bool active)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xFBFDB8", Offset = "0xFBFDB8", VA = "0xFBFDB8")]
	public Vector3 GetPointerPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xFBFDC4", Offset = "0xFBFDC4", VA = "0xFBFDC4")]
	public void OnHover(bool hovering, Vector3 intersecPosition)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xFBFDD8", Offset = "0xFBFDD8", VA = "0xFBFDD8")]
	public void OnHover(bool hovering)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xFBFDE4", Offset = "0xFBFDE4", VA = "0xFBFDE4")]
	public WaveVR_GesturePointer()
	{
	}
}
[Token(Token = "0x2000056")]
public class WaveVR_GesturePointerProvider
{
	[Token(Token = "0x2000571")]
	private class GesturePointer
	{
		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82AB0", Offset = "0xB82AB0")]
		private WaveVR_GestureManager.EGestureHand <Hand>k__BackingField;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82AC0", Offset = "0xB82AC0")]
		private GameObject <Pointer>k__BackingField;

		[Token(Token = "0x1700046B")]
		public WaveVR_GestureManager.EGestureHand Hand
		{
			[Token(Token = "0x60028BE")]
			[Address(RVA = "0xFC01A8", Offset = "0xFC01A8", VA = "0xFC01A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EB84", Offset = "0xB8EB84")]
			get
			{
				return default(WaveVR_GestureManager.EGestureHand);
			}
			[Token(Token = "0x60028BF")]
			[Address(RVA = "0xFC01B0", Offset = "0xFC01B0", VA = "0xFC01B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EB94", Offset = "0xB8EB94")]
			set
			{
			}
		}

		[Token(Token = "0x1700046C")]
		public GameObject Pointer
		{
			[Token(Token = "0x60028C0")]
			[Address(RVA = "0xFC01B8", Offset = "0xFC01B8", VA = "0xFC01B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EBA4", Offset = "0xB8EBA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028C1")]
			[Address(RVA = "0xFC01C0", Offset = "0xFC01C0", VA = "0xFC01C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EBB4", Offset = "0xB8EBB4")]
			set
			{
			}
		}

		[Token(Token = "0x60028C2")]
		[Address(RVA = "0xFC0168", Offset = "0xFC0168", VA = "0xFC0168")]
		public GesturePointer(WaveVR_GestureManager.EGestureHand type, GameObject pointer)
		{
		}
	}

	[Token(Token = "0x40002C0")]
	private const string LOG_TAG = "WaveVR_GesturePointerProvider";

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<GesturePointer> gesturePointers;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WaveVR_GestureManager.EGestureHand[] gestureHandList;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_GesturePointerProvider instance;

	[Token(Token = "0x17000019")]
	public static WaveVR_GesturePointerProvider Instance
	{
		[Token(Token = "0x6000387")]
		[Address(RVA = "0xFB8D48", Offset = "0xFB8D48", VA = "0xFB8D48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xFBFF74", Offset = "0xFBFF74", VA = "0xFBFF74")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xFC001C", Offset = "0xFC001C", VA = "0xFC001C")]
	private WaveVR_GesturePointerProvider()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xFBEEF4", Offset = "0xFBEEF4", VA = "0xFBEEF4")]
	public void SetGesturePointer(WaveVR_GestureManager.EGestureHand hand, GameObject pointer)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xFB8E08", Offset = "0xFB8E08", VA = "0xFB8E08")]
	public GameObject GetGesturePointer(WaveVR_GestureManager.EGestureHand hand)
	{
		return null;
	}
}
[Token(Token = "0x2000057")]
public class WaveVR_GestureInputModule : BaseInputModule
{
	[Token(Token = "0x40002C4")]
	private const string LOG_TAG = "WaveVR_GestureInputModule";

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB74C24", Offset = "0xB74C24")]
	public bool EnableEvent;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB74C5C", Offset = "0xB74C5C")]
	public WaveVR_GestureManager.EStaticGestures SelectGesture;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool forceModuleActive;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private WVR_HandGestureType currentGestureRight;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WVR_HandGestureType previousGestureRight;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private WVR_HandGestureType currentGestureLeft;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WVR_HandGestureType previousGestureLeft;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private WaveVR_GestureManager.EGestureHand gestureFocusHand;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject pointerObject;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WaveVR_GesturePointer gesturePointer;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Camera eventCamera;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PhysicsRaycaster pointerPhysicsRaycaster;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PointerEventData mPointerEventData;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Vector2 centerOfScreen;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject prevRaycastedObject;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool mInputModuleEnabled;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private RaycastResult firstRaycastResult;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GraphicRaycaster[] graphic_raycasters;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<RaycastResult> graphicRaycastResults;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<GameObject> graphicRaycastObjects;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<GameObject> preGraphicRaycastObjects;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<RaycastResult> physicsRaycastResults;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<GameObject> physicsRaycastObjects;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<GameObject> prePhysicsRaycastObjects;

	[Token(Token = "0x40002DD")]
	private const float DRAG_TIME = 0.3f;

	[Token(Token = "0x1700001A")]
	public bool ForceModuleActive
	{
		[Token(Token = "0x600038E")]
		[Address(RVA = "0xFB881C", Offset = "0xFB881C", VA = "0xFB881C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600038F")]
		[Address(RVA = "0xFB8824", Offset = "0xFB8824", VA = "0xFB8824")]
		set
		{
		}
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xFB86B8", Offset = "0xFB86B8", VA = "0xFB86B8")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xFB87A4", Offset = "0xFB87A4", VA = "0xFB87A4")]
	private void INFO(string msg)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xFB8830", Offset = "0xFB8830", VA = "0xFB8830", Slot = "25")]
	public override bool IsModuleSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xFB8838", Offset = "0xFB8838", VA = "0xFB8838", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xFB886C", Offset = "0xFB886C", VA = "0xFB886C", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xFB8874", Offset = "0xFB8874", VA = "0xFB8874")]
	private bool ValidateParameters()
	{
		return default(bool);
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xFB90C0", Offset = "0xFB90C0", VA = "0xFB90C0")]
	private void ResetPointerEventData()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xFB9214", Offset = "0xFB9214", VA = "0xFB9214")]
	private GameObject GetRaycastedObject()
	{
		return null;
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xFB922C", Offset = "0xFB922C", VA = "0xFB922C")]
	private Vector3 GetIntersectionPosition(RaycastResult raycastResult)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xFB93C0", Offset = "0xFB93C0", VA = "0xFB93C0", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xFB94AC", Offset = "0xFB94AC", VA = "0xFB94AC", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xFB9518", Offset = "0xFB9518", VA = "0xFB9518", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xFB9864", Offset = "0xFB9864", VA = "0xFB9864")]
	private void GraphicRaycast()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xFBA2F0", Offset = "0xFBA2F0", VA = "0xFBA2F0")]
	private void PhysicsRaycast()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xFBA714", Offset = "0xFBA714", VA = "0xFBA714")]
	private void OnGraphicPointerEnterExit()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xFBAB28", Offset = "0xFBAB28", VA = "0xFBAB28")]
	private void OnPhysicsPointerEnterExit()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xFBAF3C", Offset = "0xFBAF3C", VA = "0xFBAF3C")]
	private void OnPointerHover()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xFBAFE0", Offset = "0xFBAFE0", VA = "0xFBAFE0")]
	private void OnPointerDown()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xFBB4F0", Offset = "0xFBB4F0", VA = "0xFBB4F0")]
	private void OnPointerDrag()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xFBB70C", Offset = "0xFBB70C", VA = "0xFBB70C")]
	private void OnPointerUp()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xFBBD0C", Offset = "0xFBBD0C", VA = "0xFBBD0C")]
	private void CopyList(List<GameObject> src, List<GameObject> dst)
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xFBBDCC", Offset = "0xFBBDCC", VA = "0xFBBDCC")]
	public WaveVR_GestureInputModule()
	{
	}
}
[Token(Token = "0x2000058")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB7079C", Offset = "0xB7079C")]
public class WaveVR_GesturePointerTracker : MonoBehaviour
{
	[Token(Token = "0x40002DE")]
	private const string LOG_TAG = "WaveVR_GesturePointerTracker";

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_GesturePointerTracker instance;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WaveVR_GestureManager.EGestureHand gestureFocusHand;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject pointerObject;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaveVR_GesturePointer gesturePointer;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 pointerPosition;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 lookDirection;

	[Token(Token = "0x1700001B")]
	public static WaveVR_GesturePointerTracker Instance
	{
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xFC0270", Offset = "0xFC0270", VA = "0xFC0270")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xFC01C8", Offset = "0xFC01C8", VA = "0xFC01C8")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xFC02D8", Offset = "0xFC02D8", VA = "0xFC02D8")]
	private bool ValidateParameters()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xFC0460", Offset = "0xFC0460", VA = "0xFC0460")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xFC04CC", Offset = "0xFC04CC", VA = "0xFC04CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xFC0628", Offset = "0xFC0628", VA = "0xFC0628")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xFB9020", Offset = "0xFB9020", VA = "0xFB9020")]
	public Camera GetPointerTrackerCamera()
	{
		return null;
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xFB9070", Offset = "0xFB9070", VA = "0xFB9070")]
	public PhysicsRaycaster GetPhysicsRaycaster()
	{
		return null;
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xFC07A0", Offset = "0xFC07A0", VA = "0xFC07A0")]
	public WaveVR_GesturePointerTracker()
	{
	}
}
[Token(Token = "0x2000059")]
public abstract class IWaveVR_BonePose : MonoBehaviour
{
	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_BonePoseImpl instance;

	[Token(Token = "0x1700001C")]
	public static WaveVR_BonePoseImpl Instance
	{
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x1321DE4", Offset = "0x1321DE4", VA = "0x1321DE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x1321EB4", Offset = "0x1321EB4", VA = "0x1321EB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1321F60", Offset = "0x1321F60", VA = "0x1321F60")]
	public WaveVR_Utils.RigidTransform GetBoneTransform(WaveVR_BonePoseImpl.Bones bone_type)
	{
		return default(WaveVR_Utils.RigidTransform);
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x1321FE4", Offset = "0x1321FE4", VA = "0x1321FE4")]
	public bool IsBonePoseValid(WaveVR_BonePoseImpl.Bones bone_type)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x1322058", Offset = "0x1322058", VA = "0x1322058")]
	public bool IsHandPoseValid(WaveVR_GestureManager.EGestureHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x13220CC", Offset = "0x13220CC", VA = "0x13220CC")]
	protected IWaveVR_BonePose()
	{
	}
}
[Token(Token = "0x200005A")]
public class WaveVR_BonePose : IWaveVR_BonePose
{
	[Token(Token = "0x40002E6")]
	private const string LOG_TAG = "WaveVR_BonePose";

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB74CA4", Offset = "0xB74CA4")]
	public WaveVR_BonePoseImpl.Bones BoneType;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB74CDC", Offset = "0xB74CDC")]
	public bool HideInvalidBone;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool mEnabled;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer meshRend;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> childrenObjects;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<bool> childrenObjectsState;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool objectsShown;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private WaveVR_Utils.RigidTransform boneTransform;

	[Token(Token = "0x1700001D")]
	public bool Valid
	{
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x1571B5C", Offset = "0x1571B5C", VA = "0x1571B5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001E")]
	public Vector3 Position
	{
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x1571B74", Offset = "0x1571B74", VA = "0x1571B74")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700001F")]
	public Quaternion Rotation
	{
		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x1571BA4", Offset = "0x1571BA4", VA = "0x1571BA4")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1571A64", Offset = "0x1571A64", VA = "0x1571A64")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x1571B50", Offset = "0x1571B50", VA = "0x1571B50")]
	public bool IsBonePoseValid()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x1571B68", Offset = "0x1571B68", VA = "0x1571B68")]
	public WaveVR_Utils.RigidTransform GetBoneTransform()
	{
		return default(WaveVR_Utils.RigidTransform);
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x1571BD4", Offset = "0x1571BD4", VA = "0x1571BD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x1571F68", Offset = "0x1571F68", VA = "0x1571F68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x1572238", Offset = "0x1572238", VA = "0x1572238")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x15725CC", Offset = "0x15725CC", VA = "0x15725CC")]
	private void ActivateObjects()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x1571FD4", Offset = "0x1571FD4", VA = "0x1571FD4")]
	private void ForceActivateObjects(bool active)
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x15726B0", Offset = "0x15726B0", VA = "0x15726B0")]
	public WaveVR_BonePose()
	{
	}
}
[Token(Token = "0x200005B")]
public class WaveVR_BonePoseImpl
{
	[Token(Token = "0x2000572")]
	public enum Bones
	{
		[Token(Token = "0x4002272")]
		ROOT,
		[Token(Token = "0x4002273")]
		LEFT_WRIST,
		[Token(Token = "0x4002274")]
		LEFT_THUMB_JOINT1,
		[Token(Token = "0x4002275")]
		LEFT_THUMB_JOINT2,
		[Token(Token = "0x4002276")]
		LEFT_THUMB_JOINT3,
		[Token(Token = "0x4002277")]
		LEFT_THUMB_TIP,
		[Token(Token = "0x4002278")]
		LEFT_INDEX_JOINT1,
		[Token(Token = "0x4002279")]
		LEFT_INDEX_JOINT2,
		[Token(Token = "0x400227A")]
		LEFT_INDEX_JOINT3,
		[Token(Token = "0x400227B")]
		LEFT_INDEX_TIP,
		[Token(Token = "0x400227C")]
		LEFT_MIDDLE_JOINT1,
		[Token(Token = "0x400227D")]
		LEFT_MIDDLE_JOINT2,
		[Token(Token = "0x400227E")]
		LEFT_MIDDLE_JOINT3,
		[Token(Token = "0x400227F")]
		LEFT_MIDDLE_TIP,
		[Token(Token = "0x4002280")]
		LEFT_RING_JOINT1,
		[Token(Token = "0x4002281")]
		LEFT_RING_JOINT2,
		[Token(Token = "0x4002282")]
		LEFT_RING_JOINT3,
		[Token(Token = "0x4002283")]
		LEFT_RING_TIP,
		[Token(Token = "0x4002284")]
		LEFT_PINKY_JOINT1,
		[Token(Token = "0x4002285")]
		LEFT_PINKY_JOINT2,
		[Token(Token = "0x4002286")]
		LEFT_PINKY_JOINT3,
		[Token(Token = "0x4002287")]
		LEFT_PINKY_TIP,
		[Token(Token = "0x4002288")]
		RIGHT_WRIST,
		[Token(Token = "0x4002289")]
		RIGHT_THUMB_JOINT1,
		[Token(Token = "0x400228A")]
		RIGHT_THUMB_JOINT2,
		[Token(Token = "0x400228B")]
		RIGHT_THUMB_JOINT3,
		[Token(Token = "0x400228C")]
		RIGHT_THUMB_TIP,
		[Token(Token = "0x400228D")]
		RIGHT_INDEX_JOINT1,
		[Token(Token = "0x400228E")]
		RIGHT_INDEX_JOINT2,
		[Token(Token = "0x400228F")]
		RIGHT_INDEX_JOINT3,
		[Token(Token = "0x4002290")]
		RIGHT_INDEX_TIP,
		[Token(Token = "0x4002291")]
		RIGHT_MIDDLE_JOINT1,
		[Token(Token = "0x4002292")]
		RIGHT_MIDDLE_JOINT2,
		[Token(Token = "0x4002293")]
		RIGHT_MIDDLE_JOINT3,
		[Token(Token = "0x4002294")]
		RIGHT_MIDDLE_TIP,
		[Token(Token = "0x4002295")]
		RIGHT_RING_JOINT1,
		[Token(Token = "0x4002296")]
		RIGHT_RING_JOINT2,
		[Token(Token = "0x4002297")]
		RIGHT_RING_JOINT3,
		[Token(Token = "0x4002298")]
		RIGHT_RING_TIP,
		[Token(Token = "0x4002299")]
		RIGHT_PINKY_JOINT1,
		[Token(Token = "0x400229A")]
		RIGHT_PINKY_JOINT2,
		[Token(Token = "0x400229B")]
		RIGHT_PINKY_JOINT3,
		[Token(Token = "0x400229C")]
		RIGHT_PINKY_TIP
	}

	[Token(Token = "0x2000573")]
	private class BoneData
	{
		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WaveVR_Utils.RigidTransform rigidTransform;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool valid;

		[Token(Token = "0x60028C3")]
		[Address(RVA = "0x1572AA8", Offset = "0x1572AA8", VA = "0x1572AA8")]
		public BoneData()
		{
		}

		[Token(Token = "0x60028C4")]
		[Address(RVA = "0x1574DB4", Offset = "0x1574DB4", VA = "0x1574DB4")]
		public WaveVR_Utils.RigidTransform GetTransform()
		{
			return default(WaveVR_Utils.RigidTransform);
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0x1574DC8", Offset = "0x1574DC8", VA = "0x1574DC8")]
		public Vector3 GetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0x1574CE8", Offset = "0x1574CE8", VA = "0x1574CE8")]
		public void SetPosition(Vector3 in_pos)
		{
		}

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0x1574DD4", Offset = "0x1574DD4", VA = "0x1574DD4")]
		public Quaternion GetRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0x1574CF4", Offset = "0x1574CF4", VA = "0x1574CF4")]
		public void SetRotation(Quaternion in_rot)
		{
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0x1574DE0", Offset = "0x1574DE0", VA = "0x1574DE0")]
		public bool IsValidPose()
		{
			return default(bool);
		}

		[Token(Token = "0x60028CA")]
		[Address(RVA = "0x1574DE8", Offset = "0x1574DE8", VA = "0x1574DE8")]
		public void SetValidPose(bool in_valid)
		{
		}
	}

	[Token(Token = "0x40002EF")]
	private const string LOG_TAG = "WaveVR_BonePoseImpl";

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Bones[] leftBones;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Bones[] rightBones;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private BoneData[] boneDatas;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int prevFrame_tracking;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool hasHandTrackingData;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WVR_HandTrackingData_t handTrackingData;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private WaveVR_Utils.RigidTransform rtWristLeft;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
	private WaveVR_Utils.RigidTransform rtWristRight;

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x15727A4", Offset = "0x15727A4", VA = "0x15727A4")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x157284C", Offset = "0x157284C", VA = "0x157284C")]
	public WaveVR_BonePoseImpl()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x1572B14", Offset = "0x1572B14", VA = "0x1572B14")]
	private bool AllowGetTrackingData()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x1572B5C", Offset = "0x1572B5C", VA = "0x1572B5C")]
	public WaveVR_Utils.RigidTransform GetBoneTransform(Bones bone_type)
	{
		return default(WaveVR_Utils.RigidTransform);
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x1574B20", Offset = "0x1574B20", VA = "0x1574B20")]
	public bool IsBonePoseValid(Bones bone_type)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x1574CB4", Offset = "0x1574CB4", VA = "0x1574CB4")]
	public bool IsHandPoseValid(WaveVR_GestureManager.EGestureHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x1572D2C", Offset = "0x1572D2C", VA = "0x1572D2C")]
	private void UpdateLeftHandTrackingData()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x1573C38", Offset = "0x1573C38", VA = "0x1573C38")]
	private void UpdateRightHandTrackingData()
	{
	}
}
[Token(Token = "0x200005C")]
public class WaveVR_GestureManager : MonoBehaviour
{
	[Token(Token = "0x2000574")]
	public enum EGestureHand
	{
		[Token(Token = "0x40022A0")]
		RIGHT,
		[Token(Token = "0x40022A1")]
		LEFT
	}

	[Token(Token = "0x2000575")]
	public enum EStaticGestures
	{
		[Token(Token = "0x40022A3")]
		FIST = 2,
		[Token(Token = "0x40022A4")]
		FIVE,
		[Token(Token = "0x40022A5")]
		OK,
		[Token(Token = "0x40022A6")]
		THUMBUP,
		[Token(Token = "0x40022A7")]
		INDEXUP
	}

	[Token(Token = "0x40002F8")]
	private const string LOG_TAG = "WaveVR_GestureManager";

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_GestureManager instance;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static EGestureHand GestureFocusHand;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableHandGesture;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool preEnableHandGesture;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WVR_HandGestureData_t handGestureData;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool EnableHandTracking;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool preEnableHandTracking;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool hasHandGesture;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private WVR_HandGestureType prevStaticGestureLeft;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WVR_HandGestureType currStaticGestureLeft;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private WVR_HandGestureType prevStaticGestureRight;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WVR_HandGestureType currStaticGestureRight;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private WaveVR_Utils.HandGestureStatus handGestureStatus;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static ReaderWriterLockSlim handGestureStatusRWLock;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private object handGestureThreadLock;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WaveVR_Utils.HandTrackingStatus handTrackingStatus;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static ReaderWriterLockSlim handTrackingStatusRWLock;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private object handTrackingThreadLocker;

	[Token(Token = "0x17000020")]
	public static WaveVR_GestureManager Instance
	{
		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xFBBFDC", Offset = "0xFBBFDC", VA = "0xFBBFDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000001")]
	private event WaveVR_Utils.HandGestureResultDelegate handGestureResultCB
	{
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xFBD0F0", Offset = "0xFBD0F0", VA = "0xFBD0F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83A0C", Offset = "0xB83A0C")]
		add
		{
		}
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xFBD194", Offset = "0xFBD194", VA = "0xFBD194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83A1C", Offset = "0xB83A1C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	private event WaveVR_Utils.HandTrackingResultDelegate handTrackingResultCB
	{
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xFBDE30", Offset = "0xFBDE30", VA = "0xFBDE30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83A2C", Offset = "0xB83A2C")]
		add
		{
		}
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xFBDED4", Offset = "0xFBDED4", VA = "0xFBDED4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83A3C", Offset = "0xB83A3C")]
		remove
		{
		}
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xFBBF34", Offset = "0xFBBF34", VA = "0xFBBF34")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xFBC044", Offset = "0xFBC044", VA = "0xFBC044")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xFBC114", Offset = "0xFBC114", VA = "0xFBC114")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xFBC2E4", Offset = "0xFBC2E4", VA = "0xFBC2E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xFBC8B0", Offset = "0xFBC8B0", VA = "0xFBC8B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xFBC95C", Offset = "0xFBC95C", VA = "0xFBC95C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xFBC604", Offset = "0xFBC604", VA = "0xFBC604")]
	private void UpdateLeftHandGestureData(WVR_HandGestureData_t data)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xFBCA08", Offset = "0xFBCA08", VA = "0xFBCA08")]
	public WVR_HandGestureType GetCurrentLeftHandStaticGesture()
	{
		return default(WVR_HandGestureType);
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xFBC75C", Offset = "0xFBC75C", VA = "0xFBC75C")]
	private void UpdateRightHandGestureData(WVR_HandGestureData_t data)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xFBCA10", Offset = "0xFBCA10", VA = "0xFBCA10")]
	public WVR_HandGestureType GetCurrentRightHandStaticGesture()
	{
		return default(WVR_HandGestureType);
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xFBCA18", Offset = "0xFBCA18", VA = "0xFBCA18")]
	private void OnEvent(params object[] args)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xFBCC58", Offset = "0xFBCC58", VA = "0xFBCC58")]
	private void SetHandGestureStatus(WaveVR_Utils.HandGestureStatus status)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xFBCE88", Offset = "0xFBCE88", VA = "0xFBCE88")]
	public WaveVR_Utils.HandGestureStatus GetHandGestureStatus()
	{
		return default(WaveVR_Utils.HandGestureStatus);
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xFBD238", Offset = "0xFBD238", VA = "0xFBD238")]
	private void StartHandGestureLock()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xFBD530", Offset = "0xFBD530", VA = "0xFBD530")]
	private void StartHandGestureThread()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xFBC1A4", Offset = "0xFBC1A4", VA = "0xFBC1A4")]
	private void StartHandGesture()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xFBD600", Offset = "0xFBD600", VA = "0xFBD600")]
	private void StopHandGestureLock()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xFBD7B8", Offset = "0xFBD7B8", VA = "0xFBD7B8")]
	private void StopHandGestureThread()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xFBC41C", Offset = "0xFBC41C", VA = "0xFBC41C")]
	private void StopHandGesture()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xFBD888", Offset = "0xFBD888", VA = "0xFBD888")]
	private void RestartHandGestureThread()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xFBCB18", Offset = "0xFBCB18", VA = "0xFBCB18")]
	public void RestartHandGesture()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xFBD960", Offset = "0xFBD960", VA = "0xFBD960")]
	public void RestartHandGesture(WaveVR_Utils.HandGestureResultDelegate callback)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xFBC55C", Offset = "0xFBC55C", VA = "0xFBC55C")]
	private bool GetHandGestureData(ref WVR_HandGestureData_t data)
	{
		return default(bool);
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xFBD998", Offset = "0xFBD998", VA = "0xFBD998")]
	private void SetHandTrackingStatus(WaveVR_Utils.HandTrackingStatus status)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xFBDBC8", Offset = "0xFBDBC8", VA = "0xFBDBC8")]
	public WaveVR_Utils.HandTrackingStatus GetHandTrackingStatus()
	{
		return default(WaveVR_Utils.HandTrackingStatus);
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xFBDF78", Offset = "0xFBDF78", VA = "0xFBDF78")]
	private void StartHandTrackingLock()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xFBE270", Offset = "0xFBE270", VA = "0xFBE270")]
	private void StartHandTrackingThread()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xFBC244", Offset = "0xFBC244", VA = "0xFBC244")]
	private void StartHandTracking()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xFBE340", Offset = "0xFBE340", VA = "0xFBE340")]
	private void StopHandTrackingLock()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xFBE4F8", Offset = "0xFBE4F8", VA = "0xFBE4F8")]
	private void StopHandTrackingThread()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xFBC4BC", Offset = "0xFBC4BC", VA = "0xFBC4BC")]
	private void StopHandTracking()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xFBE5C8", Offset = "0xFBE5C8", VA = "0xFBE5C8")]
	private void RestartHandTrackingThread()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xFBCBB8", Offset = "0xFBCBB8", VA = "0xFBCBB8")]
	public void RestartHandTracking()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xFBE6A0", Offset = "0xFBE6A0", VA = "0xFBE6A0")]
	public void RestartHandTracking(WaveVR_Utils.HandTrackingResultDelegate callback)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xFBE6D8", Offset = "0xFBE6D8", VA = "0xFBE6D8")]
	public bool GetHandTrackingData(ref WVR_HandTrackingData_t data, WVR_PoseOriginModel originModel, uint predictedMilliSec)
	{
		return default(bool);
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xFBE79C", Offset = "0xFBE79C", VA = "0xFBE79C")]
	public WaveVR_GestureManager()
	{
	}
}
[Token(Token = "0x200005D")]
public class WaveVR_ControllerPoseTracker : MonoBehaviour
{
	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveVR_Controller.EDeviceType Type;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool InversePosition;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool TrackPosition;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WVR_SimulationOption SimulationOption;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private WVR_SimulationOption currSimulationOption;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool bSetupSimulation;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool FollowHead;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool currFollowHead;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool bSetupFollowHead;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool InverseRotation;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool TrackRotation;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WVR_TrackTiming TrackTiming;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public bool ApplyNeckOffset;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74D54", Offset = "0xB74D54")]
	public float ElbowRaiseYaxis;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74D70", Offset = "0xB74D70")]
	public float ElbowRaiseZaxis;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject Head;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	private bool SetCustomHand;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool cptEnabled;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WVR_DevicePosePair_t wvr_pose;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private WaveVR_Utils.RigidTransform rigid_pose;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 v3ChangeAxisX;

	[Token(Token = "0x4000323")]
	private const float BodyAngularVelocityUpperBound = 0.2f;

	[Token(Token = "0x4000324")]
	private const float ControllerAngularVelocityUpperBound = 30f;

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x13EA608", Offset = "0x13EA608", VA = "0x13EA608")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x13EA6E8", Offset = "0x13EA6E8", VA = "0x13EA6E8")]
	private void PrintErrorLog(string msg)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x13EA7D0", Offset = "0x13EA7D0", VA = "0x13EA7D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x13EB0B4", Offset = "0x13EB0B4", VA = "0x13EB0B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x13EB6F8", Offset = "0x13EB6F8", VA = "0x13EB6F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x13EACF0", Offset = "0x13EACF0", VA = "0x13EACF0")]
	private void SetupPoseSimulation()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x13EBB18", Offset = "0x13EBB18", VA = "0x13EBB18")]
	private void OnNewPoses(params object[] args)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x13EB898", Offset = "0x13EB898", VA = "0x13EB898")]
	private void updateDevicePose(WVR_DevicePosePair_t pose, WaveVR_Utils.RigidTransform rtPose)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x13EBD18", Offset = "0x13EBD18", VA = "0x13EBD18")]
	private float BodyRotationFilter1(WVR_DevicePosePair_t pose)
	{
		return default(float);
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x13EBDDC", Offset = "0x13EBDDC", VA = "0x13EBDDC")]
	public WaveVR_ControllerPoseTracker()
	{
	}
}
[Token(Token = "0x200005E")]
public sealed class WaveVR_DevicePoseTracker : MonoBehaviour
{
	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveVR_Controller.EDeviceType type;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool inversePosition;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool trackPosition;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB74D9C", Offset = "0xB74D9C")]
	public bool EnableNeckModel;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool inverseRotation;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool trackRotation;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public WVR_TrackTiming timing;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WVR_DevicePosePair_t wvr_pose;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private WaveVR_Utils.RigidTransform rigid_pose;

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x13F0B1C", Offset = "0x13F0B1C", VA = "0x13F0B1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x13F0DD4", Offset = "0x13F0DD4", VA = "0x13F0DD4")]
	private void OnNewPoses(params object[] args)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x13F0C60", Offset = "0x13F0C60", VA = "0x13F0C60")]
	private void updatePose(WVR_DevicePosePair_t pose, WaveVR_Utils.RigidTransform rtPose)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x13F0FC0", Offset = "0x13F0FC0", VA = "0x13F0FC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x13F14C0", Offset = "0x13F14C0", VA = "0x13F14C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x13F1588", Offset = "0x13F1588", VA = "0x13F1588")]
	public WaveVR_DevicePoseTracker()
	{
	}
}
[Token(Token = "0x200005F")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB7081C", Offset = "0xB7081C")]
public class WaveVR_PoseSimulator : MonoBehaviour
{
	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_PoseSimulator instance;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WaveVR_Utils.RigidTransform rtPose_head;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private WaveVR_Utils.RigidTransform rtPose_head_onGround;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaveVR_Utils.RigidTransform rtPose_right;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private WaveVR_Utils.RigidTransform rtPose_left;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private WaveVR_Utils.WVR_ButtonState_t btn_right;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private WaveVR_Utils.WVR_ButtonState_t btn_left;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private WVR_Axis_t axis_right;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private WVR_Axis_t axis_left;

	[Token(Token = "0x4000338")]
	private const string MOUSE_X = "Mouse X";

	[Token(Token = "0x4000339")]
	private const string MOUSE_Y = "Mouse Y";

	[Token(Token = "0x400033A")]
	private const string MOUSE_SCROLLWHEEL = "Mouse ScrollWheel";

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float shiftX_head;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float shiftY_head;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float shiftZ_head;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float angleX_head;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float angleY_head;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float angleZ_head;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float shiftX_right;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float shiftY_right;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float shiftZ_right;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float angleX_right;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float angleY_right;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float angleZ_right;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float shiftX_left;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float shiftY_left;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float shiftZ_left;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float angleX_left;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float angleY_left;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float angleZ_left;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly KeyCode[] KeyCode_Head;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly KeyCode[] KeyCode_Right;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly KeyCode[] KeyCode_Left;

	[Token(Token = "0x17000021")]
	public static WaveVR_PoseSimulator Instance
	{
		[Token(Token = "0x6000406")]
		[Address(RVA = "0xFCA188", Offset = "0xFCA188", VA = "0xFCA188")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xFCA2F8", Offset = "0xFCA2F8", VA = "0xFCA2F8")]
	public void GetRigidTransform(WVR_DeviceType type, ref WaveVR_Utils.RigidTransform rtPose, WVR_PoseOriginModel origin)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xFCA364", Offset = "0xFCA364", VA = "0xFCA364")]
	private void UpdateHeadPose(float axis_x, float axis_y, float axis_z)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xFCA774", Offset = "0xFCA774", VA = "0xFCA774")]
	private void UpdateRightHandPose(float axis_x, float axis_y, float axis_z)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xFCAB80", Offset = "0xFCAB80", VA = "0xFCAB80")]
	private void UpdateLefHandPose(float axis_x, float axis_y, float axis_z)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xFCAE0C", Offset = "0xFCAE0C", VA = "0xFCAE0C")]
	public void Update()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xFCAEC8", Offset = "0xFCAEC8", VA = "0xFCAEC8")]
	public WaveVR_PoseSimulator()
	{
	}
}
[Token(Token = "0x2000060")]
public enum WVR_TrackTiming
{
	[Token(Token = "0x4000351")]
	WhenUpdate,
	[Token(Token = "0x4000352")]
	WhenNewPoses
}
[Token(Token = "0x2000061")]
public enum WVR_SimulationOption
{
	[Token(Token = "0x4000354")]
	WhenNoPosition,
	[Token(Token = "0x4000355")]
	ForceSimulation,
	[Token(Token = "0x4000356")]
	NoSimulation
}
[Token(Token = "0x2000062")]
public class WaveVR_PoseTrackerManager : MonoBehaviour
{
	[Token(Token = "0x4000357")]
	private const string LOG_TAG = "WaveVR_PoseTrackerManager";

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveVR_Controller.EDeviceType Type;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool TrackPosition;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool EnableNeckModel;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WVR_SimulationOption SimulationOption;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool FollowHead;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool TrackRotation;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WVR_TrackTiming TrackTiming;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> IncludedObjects;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<bool> IncludedStates;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool showTrackedObject;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool connected;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool mFocusCapturedBySystem;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool poseUpdated;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool hasNewPose;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool gazeOnly;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WaveVR_DevicePoseTracker devicePoseTracker;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaveVR_ControllerPoseTracker ctrlerPoseTracker;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool ptmEnabled;

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xFCB050", Offset = "0xFCB050", VA = "0xFCB050")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xFCB0F8", Offset = "0xFCB0F8", VA = "0xFCB0F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xFCB94C", Offset = "0xFCB94C", VA = "0xFCB94C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xFCBF30", Offset = "0xFCBF30", VA = "0xFCBF30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xFCC698", Offset = "0xFCC698", VA = "0xFCC698")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xFCC834", Offset = "0xFCC834", VA = "0xFCC834")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xFCC8A4", Offset = "0xFCC8A4", VA = "0xFCC8A4")]
	private bool hideEventController()
	{
		return default(bool);
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xFCC304", Offset = "0xFCC304", VA = "0xFCC304")]
	public void ActivateTargetObjects()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xFCB628", Offset = "0xFCB628", VA = "0xFCB628")]
	private void ForceActivateTargetObjects(bool active)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xFCCAC4", Offset = "0xFCCAC4", VA = "0xFCCAC4")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xFCCD2C", Offset = "0xFCCD2C", VA = "0xFCCD2C")]
	private void OnNewPoses(params object[] args)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xFCCE38", Offset = "0xFCCE38", VA = "0xFCCE38")]
	private void onSystemFocusChanged(params object[] args)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xFCCFEC", Offset = "0xFCCFEC", VA = "0xFCCFEC")]
	public WaveVR_PoseTrackerManager()
	{
	}
}
[Token(Token = "0x2000063")]
public class WaveVR : IDisposable
{
	[Token(Token = "0x2000576")]
	public class Device
	{
		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82AD0", Offset = "0xB82AD0")]
		private WVR_DeviceType <type>k__BackingField;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82AE0", Offset = "0xB82AE0")]
		private int <index>k__BackingField;

		[Token(Token = "0x1700046D")]
		public WVR_DeviceType type
		{
			[Token(Token = "0x60028CC")]
			[Address(RVA = "0x18087CC", Offset = "0x18087CC", VA = "0x18087CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EBC4", Offset = "0xB8EBC4")]
			get
			{
				return default(WVR_DeviceType);
			}
			[Token(Token = "0x60028CD")]
			[Address(RVA = "0x18087D4", Offset = "0x18087D4", VA = "0x18087D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EBD4", Offset = "0xB8EBD4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700046E")]
		public int index
		{
			[Token(Token = "0x60028CE")]
			[Address(RVA = "0x18087DC", Offset = "0x18087DC", VA = "0x18087DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EBE4", Offset = "0xB8EBE4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60028CF")]
			[Address(RVA = "0x18087E4", Offset = "0x18087E4", VA = "0x18087E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EBF4", Offset = "0xB8EBF4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700046F")]
		public bool connected
		{
			[Token(Token = "0x60028D0")]
			[Address(RVA = "0x18087EC", Offset = "0x18087EC", VA = "0x18087EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000470")]
		public WVR_DevicePosePair_t pose
		{
			[Token(Token = "0x60028D1")]
			[Address(RVA = "0x1808894", Offset = "0x1808894", VA = "0x1808894")]
			get
			{
				return default(WVR_DevicePosePair_t);
			}
		}

		[Token(Token = "0x17000471")]
		public WaveVR_Utils.RigidTransform rigidTransform
		{
			[Token(Token = "0x60028D2")]
			[Address(RVA = "0x1808970", Offset = "0x1808970", VA = "0x1808970")]
			get
			{
				return default(WaveVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0x1805DC0", Offset = "0x1805DC0", VA = "0x1805DC0")]
		public Device(WVR_DeviceType type)
		{
		}
	}

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public bool editor;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR instance;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool Initialized;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong supportedFeatures;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool FocusCapturedBySystem;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool handTrackingEnabled;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool handGestureEnabled;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public WVR_InteractionMode InteractionMode;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WVR_GazeTriggerType GazeTriggerType;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB74DE4", Offset = "0xB74DE4")]
	private Device <hmd>k__BackingField;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB74DF4", Offset = "0xB74DF4")]
	private Device <controllerLeft>k__BackingField;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB74E04", Offset = "0xB74E04")]
	private Device <controllerRight>k__BackingField;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static WVR_DeviceType[] DeviceTypes;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool[] isValidPose;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private uint[] deviceIndexMap;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public uint frameInx;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WVR_DevicePosePair_t[] poses;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WaveVR_Utils.RigidTransform[] rtPoses;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static WaveVR_Render.StereoRenderingPath UnityPlayerSettingsStereoRenderingPath;

	[Token(Token = "0x17000022")]
	public static WaveVR Instance
	{
		[Token(Token = "0x600041E")]
		[Address(RVA = "0x1805528", Offset = "0x1805528", VA = "0x1805528")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000023")]
	public Device hmd
	{
		[Token(Token = "0x600041F")]
		[Address(RVA = "0x18059C0", Offset = "0x18059C0", VA = "0x18059C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83A4C", Offset = "0xB83A4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000420")]
		[Address(RVA = "0x18059C8", Offset = "0x18059C8", VA = "0x18059C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83A5C", Offset = "0xB83A5C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public Device controllerLeft
	{
		[Token(Token = "0x6000421")]
		[Address(RVA = "0x18059D0", Offset = "0x18059D0", VA = "0x18059D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83A6C", Offset = "0xB83A6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000422")]
		[Address(RVA = "0x18059D8", Offset = "0x18059D8", VA = "0x18059D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83A7C", Offset = "0xB83A7C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public Device controllerRight
	{
		[Token(Token = "0x6000423")]
		[Address(RVA = "0x18059E0", Offset = "0x18059E0", VA = "0x18059E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83A8C", Offset = "0xB83A8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000424")]
		[Address(RVA = "0x18059E8", Offset = "0x18059E8", VA = "0x18059E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83A9C", Offset = "0xB83A9C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000026")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB94244", Offset = "0xB94244")]
	public static bool Hmd
	{
		[Token(Token = "0x6000428")]
		[Address(RVA = "0x1805D58", Offset = "0x1805D58", VA = "0x1805D58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x1805314", Offset = "0x1805314", VA = "0x1805314")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x18053F0", Offset = "0x18053F0", VA = "0x18053F0")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x180548C", Offset = "0x180548C", VA = "0x180548C")]
	private void PrintErrorLog(string msg)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x18059F0", Offset = "0x18059F0", VA = "0x18059F0")]
	public Device getDeviceByType(WVR_DeviceType type)
	{
		return null;
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x1805B74", Offset = "0x1805B74", VA = "0x1805B74")]
	public Device getDeviceByType(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x1805CD0", Offset = "0x1805CD0", VA = "0x1805CD0")]
	private void ReportError(WVR_InitError error)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x18055E4", Offset = "0x18055E4", VA = "0x18055E4")]
	private WaveVR()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x1806530", Offset = "0x1806530", VA = "0x1806530", Slot = "1")]
	~WaveVR()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x1806690", Offset = "0x1806690", VA = "0x1806690")]
	public void onLoadLevel()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x180659C", Offset = "0x180659C", VA = "0x180659C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x180689C", Offset = "0x180689C", VA = "0x180689C")]
	public static void SafeDispose()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x1806944", Offset = "0x1806944", VA = "0x1806944")]
	public int is6DoFTracking()
	{
		return default(int);
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x180698C", Offset = "0x180698C", VA = "0x180698C")]
	public void UpdateEachFrame(WVR_PoseOriginModel origin)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x18069A0", Offset = "0x18069A0", VA = "0x18069A0")]
	public void UpdateEachFrame(WVR_PoseOriginModel origin, bool isSimulator)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x1807AB4", Offset = "0x1807AB4", VA = "0x1807AB4")]
	public int SetQualityLevel(int level, bool applyExpensiveChanges = true)
	{
		return default(int);
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x1805EC4", Offset = "0x1805EC4", VA = "0x1805EC4")]
	public bool SetLeftHandedMode(bool leftHandedInEditor = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x1807A18", Offset = "0x1807A18", VA = "0x1807A18")]
	private bool GetConnectionStatus(WVR_DeviceType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x1807B9C", Offset = "0x1807B9C", VA = "0x1807B9C")]
	public void SetConnectionStatus(WVR_DeviceType type, bool conn)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x1806140", Offset = "0x1806140", VA = "0x1806140")]
	public void UpdateAllConnection()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x1807DA0", Offset = "0x1807DA0", VA = "0x1807DA0")]
	private void UpdateAllPoseState()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x18078E4", Offset = "0x18078E4", VA = "0x18078E4")]
	public void UpdateButtonEvents()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x1808184", Offset = "0x1808184", VA = "0x1808184")]
	public void ResetAllButtonStates()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x1806268", Offset = "0x1806268", VA = "0x1806268")]
	public void SetDefaultButtons()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x18082AC", Offset = "0x18082AC", VA = "0x18082AC")]
	public void SetPoseSimulation(WVR_SimulationType type)
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x1808348", Offset = "0x1808348", VA = "0x1808348")]
	public void SetPoseSimulationFollowHead(bool follow)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x18083DC", Offset = "0x18083DC", VA = "0x18083DC")]
	public void SetNeckModelEnabled(bool enabled)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x1808470", Offset = "0x1808470", VA = "0x1808470")]
	public bool StartHandGesture()
	{
		return default(bool);
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x18067A4", Offset = "0x18067A4", VA = "0x18067A4")]
	public void StopHandGesture()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x1808584", Offset = "0x1808584", VA = "0x1808584")]
	public bool IsHandGestureEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x180858C", Offset = "0x180858C", VA = "0x180858C")]
	public bool GetHandGestureData(ref WVR_HandGestureData_t data)
	{
		return default(bool);
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x18085C0", Offset = "0x18085C0", VA = "0x18085C0")]
	public bool StartHandTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x1806820", Offset = "0x1806820", VA = "0x1806820")]
	public void StopHandTracking()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x18086D4", Offset = "0x18086D4", VA = "0x18086D4")]
	public bool IsHandTrackingEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x18086DC", Offset = "0x18086DC", VA = "0x18086DC")]
	public bool GetHandTrackingData(ref WVR_HandTrackingData_t data, WVR_PoseOriginModel originModel, uint predictedMilliSec)
	{
		return default(bool);
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x1808718", Offset = "0x1808718", VA = "0x1808718")]
	public ulong GetSupportedFeatures()
	{
		return default(ulong);
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x1807D84", Offset = "0x1807D84", VA = "0x1807D84")]
	private bool IsDeviceConnected(WVR_DeviceType device)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000064")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB70854", Offset = "0xB70854")]
public class WaveVR_Beam : MonoBehaviour
{
	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ShowBeam;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool ListenToDevice;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float StartWidth;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float EndWidth;

	[Token(Token = "0x4000384")]
	private const float minimal_length = 0.1f;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float preStartOffset;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float StartOffset;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float endOffsetMin;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float endOffsetMax;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float preEndOffset;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float EndOffset;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color32 preStartColor;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color32 StartColor;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color32 TailColor;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Color32 preEndColor;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color32 EndColor;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool useDefaultMaterial;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material customMat;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int count;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool updateEveryFrame;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool makeTail;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string textureName;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int maxUVAngle;

	[Token(Token = "0x4000397")]
	private const float epsilon = 0.0001f;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool isBeamEnable;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool connected;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int Count;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int verticesCount;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int indicesCount;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Vector3> vertices;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<Vector2> uvs;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Vector3> normals;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<int> indices;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<Color32> colors;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 position;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Mesh emptyMesh;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Mesh updateMesh;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Material materialComp;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private MeshFilter mf_beam;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool meshIsCreated;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool toUpdateBeam;

	[Token(Token = "0x40003AA")]
	private const string CtrColorBeam3 = "CtrColorBeam3";

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Matrix4x4 mat44_rot;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private Matrix4x4 mat44_uv;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Vector3 vec3_vertices_start;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector3 vec3_vertices_end;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private readonly Vector2 vec2_05_05;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private readonly Vector3 vec3_0_05_0;

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x180DF64", Offset = "0x180DF64", VA = "0x180DF64")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x180E040", Offset = "0x180E040", VA = "0x180E040")]
	public void SetEndOffset(float end_offset)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x180E1E0", Offset = "0x180E1E0", VA = "0x180E1E0")]
	public void SetEndOffset(Vector3 target, bool interactive)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x180E248", Offset = "0x180E248", VA = "0x180E248")]
	public void ResetEndOffset()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x180E4C8", Offset = "0x180E4C8", VA = "0x180E4C8")]
	private bool Color32Equal(Color32 color1, Color32 color2)
	{
		return default(bool);
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x180E510", Offset = "0x180E510", VA = "0x180E510")]
	private void ValidateBeamAttributes()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x180E9DC", Offset = "0x180E9DC", VA = "0x180E9DC")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x180FDB0", Offset = "0x180FDB0", VA = "0x180FDB0")]
	private bool IsBoolean(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x180F4E4", Offset = "0x180F4E4", VA = "0x180F4E4")]
	private bool IsFloat(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x180FF80", Offset = "0x180FF80", VA = "0x180FF80")]
	private bool IsNumeric(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x181014C", Offset = "0x181014C", VA = "0x181014C")]
	private void Validate()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x1810204", Offset = "0x1810204", VA = "0x1810204")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x1810284", Offset = "0x1810284", VA = "0x1810284")]
	private void Start()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x1810288", Offset = "0x1810288", VA = "0x1810288")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x1810C04", Offset = "0x1810C04", VA = "0x1810C04")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x1810DF0", Offset = "0x1810DF0", VA = "0x1810DF0")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x1810E90", Offset = "0x1810E90", VA = "0x1810E90")]
	public void Update()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x18114D4", Offset = "0x18114D4", VA = "0x18114D4")]
	private void createMesh()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x181142C", Offset = "0x181142C", VA = "0x181142C")]
	private void createBeamMesh()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x1810C9C", Offset = "0x1810C9C", VA = "0x1810C9C")]
	private void showBeamMesh(bool show)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x1811C78", Offset = "0x1811C78", VA = "0x1811C78")]
	private Color32 StringToColor32(string color_string)
	{
		return default(Color32);
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x180F6B0", Offset = "0x180F6B0", VA = "0x180F6B0")]
	private void UpdateStartColor(string color_string)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x180FA38", Offset = "0x180FA38", VA = "0x180FA38")]
	private void UpdateEndColor(string color_string)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x181145C", Offset = "0x181145C", VA = "0x181145C")]
	private bool checkConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x1812004", Offset = "0x1812004", VA = "0x1812004")]
	public WaveVR_Beam()
	{
	}
}
[Token(Token = "0x2000065")]
public class WaveVR_ButtonList : MonoBehaviour
{
	[Token(Token = "0x2000577")]
	public enum EButtons
	{
		[Token(Token = "0x40022AB")]
		Unavailable = 0,
		[Token(Token = "0x40022AC")]
		Menu = 1,
		[Token(Token = "0x40022AD")]
		Grip = 2,
		[Token(Token = "0x40022AE")]
		DPadUp = 4,
		[Token(Token = "0x40022AF")]
		DPadRight = 5,
		[Token(Token = "0x40022B0")]
		DPadDown = 6,
		[Token(Token = "0x40022B1")]
		DPadLeft = 3,
		[Token(Token = "0x40022B2")]
		VolumeUp = 7,
		[Token(Token = "0x40022B3")]
		VolumeDown = 8,
		[Token(Token = "0x40022B4")]
		Back = 14,
		[Token(Token = "0x40022B5")]
		Enter = 15,
		[Token(Token = "0x40022B6")]
		Touchpad = 16,
		[Token(Token = "0x40022B7")]
		Trigger = 17,
		[Token(Token = "0x40022B8")]
		Thumbstick = 18
	}

	[Token(Token = "0x2000578")]
	public enum EHmdButtons
	{
		[Token(Token = "0x40022BA")]
		Menu = 1,
		[Token(Token = "0x40022BB")]
		DPadUp = 4,
		[Token(Token = "0x40022BC")]
		DPadRight = 5,
		[Token(Token = "0x40022BD")]
		DPadDown = 6,
		[Token(Token = "0x40022BE")]
		DPadLeft = 3,
		[Token(Token = "0x40022BF")]
		VolumeUp = 7,
		[Token(Token = "0x40022C0")]
		VolumeDown = 8,
		[Token(Token = "0x40022C1")]
		Enter = 15,
		[Token(Token = "0x40022C2")]
		Touchpad = 16
	}

	[Token(Token = "0x2000579")]
	public enum EControllerButtons
	{
		[Token(Token = "0x40022C4")]
		Menu = 1,
		[Token(Token = "0x40022C5")]
		Grip = 2,
		[Token(Token = "0x40022C6")]
		DPadUp = 4,
		[Token(Token = "0x40022C7")]
		DPadRight = 5,
		[Token(Token = "0x40022C8")]
		DPadDown = 6,
		[Token(Token = "0x40022C9")]
		DPadLeft = 3,
		[Token(Token = "0x40022CA")]
		VolumeUp = 7,
		[Token(Token = "0x40022CB")]
		VolumeDown = 8,
		[Token(Token = "0x40022CC")]
		Touchpad = 16,
		[Token(Token = "0x40022CD")]
		Trigger = 17,
		[Token(Token = "0x40022CE")]
		Thumbstick = 18
	}

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<EHmdButtons> HmdButtons;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WVR_InputAttribute_t[] inputAttributes_hmd;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<WVR_InputId> usableButtons_hmd;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool hmd_connected;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<EControllerButtons> DominantButtons;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WVR_InputAttribute_t[] inputAttributes_Dominant;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<WVR_InputId> usableButtons_dominant;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool dominant_connected;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<EControllerButtons> NonDominantButtons;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WVR_InputAttribute_t[] inputAttributes_NonDominant;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<WVR_InputId> usableButtons_nonDominant;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool nodomint_connected;

	[Token(Token = "0x40003BE")]
	private const uint inputTableSize = 32u;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WVR_InputMappingPair_t[] inputTableHMD;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private uint inputTableHMDSize;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private WVR_InputMappingPair_t[] inputTableDominant;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private uint inputTableDominantSize;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private WVR_InputMappingPair_t[] inputTableNonDominant;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private uint inputTableNonDominantSize;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_ButtonList instance;

	[Token(Token = "0x17000027")]
	public static WaveVR_ButtonList Instance
	{
		[Token(Token = "0x6000467")]
		[Address(RVA = "0x15751C0", Offset = "0x15751C0", VA = "0x15751C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x1574DF4", Offset = "0x1574DF4", VA = "0x1574DF4")]
	private void INFO(string msg)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x1574E94", Offset = "0x1574E94", VA = "0x1574E94")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x1574F74", Offset = "0x1574F74", VA = "0x1574F74")]
	public EButtons GetEButtonsType(WVR_InputId button)
	{
		return default(EButtons);
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x1574F98", Offset = "0x1574F98", VA = "0x1574F98")]
	private List<EButtons> ToEButtons(List<EHmdButtons> eList)
	{
		return null;
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x15750AC", Offset = "0x15750AC", VA = "0x15750AC")]
	private List<EButtons> ToEButtons(List<EControllerButtons> eList)
	{
		return null;
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x1575228", Offset = "0x1575228", VA = "0x1575228")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x15752F8", Offset = "0x15752F8", VA = "0x15752F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x15753BC", Offset = "0x15753BC", VA = "0x15753BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x15755F8", Offset = "0x15755F8", VA = "0x15755F8")]
	public bool GetInputMappingPair(WaveVR_Controller.EDeviceType device, ref EButtons destination)
	{
		return default(bool);
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x1575640", Offset = "0x1575640", VA = "0x1575640")]
	public bool GetInputMappingPair(WaveVR_Controller.EDeviceType device, ref WVR_InputId destination)
	{
		return default(bool);
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x1575838", Offset = "0x1575838", VA = "0x1575838")]
	private void setupButtonAttributes(WaveVR_Controller.EDeviceType device, List<EButtons> buttons, WVR_InputAttribute_t[] inputAttributes, int count)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x1575D78", Offset = "0x1575D78", VA = "0x1575D78")]
	private void createHmdRequestAttributes()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x1575E44", Offset = "0x1575E44", VA = "0x1575E44")]
	private void createDominantRequestAttributes()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x1575EDC", Offset = "0x1575EDC", VA = "0x1575EDC")]
	private void createNonDominantRequestAttributes()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x1575F74", Offset = "0x1575F74", VA = "0x1575F74")]
	public bool IsButtonAvailable(WaveVR_Controller.EDeviceType device, EButtons button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x1575F78", Offset = "0x1575F78", VA = "0x1575F78")]
	public bool IsButtonAvailable(WaveVR_Controller.EDeviceType device, WVR_InputId button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x1576024", Offset = "0x1576024", VA = "0x1576024")]
	private void SetHmdInputRequest()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x1576588", Offset = "0x1576588", VA = "0x1576588")]
	private void SetDominantInputRequest()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x1576AEC", Offset = "0x1576AEC", VA = "0x1576AEC")]
	private void SetNonDominantInputRequest()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x1577050", Offset = "0x1577050", VA = "0x1577050")]
	private void ResetInputRequest(WaveVR_Controller.EDeviceType device)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x1577128", Offset = "0x1577128", VA = "0x1577128")]
	public void SetupHmdButtonList(List<EHmdButtons> list)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x1577190", Offset = "0x1577190", VA = "0x1577190")]
	public void SetupControllerButtonList(WaveVR_Controller.EDeviceType device, List<EControllerButtons> list)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x157534C", Offset = "0x157534C", VA = "0x157534C")]
	public void ResetAllInputRequest()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x1577250", Offset = "0x1577250", VA = "0x1577250")]
	public WaveVR_ButtonList()
	{
	}
}
[Token(Token = "0x2000066")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB708D4", Offset = "0xB708D4")]
public class WaveVR_Camera : MonoBehaviour, IEquatable<Camera>
{
	[Token(Token = "0x200057A")]
	private class RenderThreadContext : wvr.render.utils.Message
	{
		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int antialiasing;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint textureId;

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint depthId;

		[Token(Token = "0x60028D3")]
		[Address(RVA = "0x1578E60", Offset = "0x1578E60", VA = "0x1578E60")]
		public static void IssueUpdateConfig(RenderThreadSyncObject syncObj, uint textureId, uint depthId, int antialiasing)
		{
		}

		[Token(Token = "0x60028D4")]
		[Address(RVA = "0x1579DB0", Offset = "0x1579DB0", VA = "0x1579DB0")]
		public static void ReceiveBeforeOpaque(PreAllocatedQueue queue)
		{
		}

		[Token(Token = "0x60028D5")]
		[Address(RVA = "0x157A02C", Offset = "0x157A02C", VA = "0x157A02C")]
		public static void ReceiveUpdateConfig(PreAllocatedQueue queue)
		{
		}

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0x157A1BC", Offset = "0x157A1BC", VA = "0x157A1BC")]
		public void CopyTo(RenderThreadContext dest)
		{
		}

		[Token(Token = "0x60028D7")]
		[Address(RVA = "0x1579DA8", Offset = "0x1579DA8", VA = "0x1579DA8")]
		public RenderThreadContext()
		{
		}
	}

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string TAG;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WVR_Eye eye;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera cam;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly RenderThreadContext contextRTOnly;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly RenderThreadSyncObject RTSOBeforeOpaque;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly RenderThreadSyncObject RTSOUpdateConfig;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4 unity_SingleCullMatrixP;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Vector4[] eyesOffset;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private readonly Matrix4x4[] eyesOffsetMatrixInv;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private readonly Matrix4x4[] skybox_MatrixVP;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private readonly Vector4[] unity_StereoScaleOffset;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private readonly Vector4[] stereoWorldSpaceCameraPos;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private CommandBuffer cmdBufBeforeForwardOpaque;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CommandBuffer cmdBufBeforeSkybox;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private CommandBuffer cmdBufAfterSkybox;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool needInitPropertyId;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int id_unity_StereoCameraProjection;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int id_unity_StereoCameraInvProjection;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int id_unity_StereoMatrixP;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int id_unity_StereoCameraToWorld;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int id_unity_StereoWorldToCamera;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int id_unity_StereoWorldSpaceCameraPos;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int id_unity_StereoMatrixV;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int id_unity_StereoMatrixInvV;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int id_unity_StereoMatrixVP;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int id_unity_StereoScaleOffset;

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x15773FC", Offset = "0x15773FC", VA = "0x15773FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x1577454", Offset = "0x1577454", VA = "0x1577454")]
	public Camera GetCamera()
	{
		return null;
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x15774EC", Offset = "0x15774EC", VA = "0x15774EC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB83AAC", Offset = "0xB83AAC")]
	public Camera getCamera()
	{
		return null;
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x1577584", Offset = "0x1577584", VA = "0x1577584", Slot = "4")]
	public bool Equals(Camera other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x1577600", Offset = "0x1577600", VA = "0x1577600")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x1577C38", Offset = "0x1577C38", VA = "0x1577C38")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x1577C68", Offset = "0x1577C68", VA = "0x1577C68")]
	private void SetStereoViewAndCullingMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x1577DDC", Offset = "0x1577DDC", VA = "0x1577DDC")]
	private void DebugLogMatrix(ref Matrix4x4 m, string name)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x157862C", Offset = "0x157862C", VA = "0x157862C")]
	private void PrepareCommandBuffers()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x1577614", Offset = "0x1577614", VA = "0x1577614")]
	private void SinglePassPreRender()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x1577C4C", Offset = "0x1577C4C", VA = "0x1577C4C")]
	private void SinglePassPostRender()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x1578FE0", Offset = "0x1578FE0", VA = "0x1578FE0")]
	public void SetEyesPosition(Vector3 left, Vector3 right)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x1579364", Offset = "0x1579364", VA = "0x1579364")]
	public void SetStereoCullingMatrix()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x1579468", Offset = "0x1579468", VA = "0x1579468")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right, Matrix4x4 cull)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x1578ADC", Offset = "0x1578ADC", VA = "0x1578ADC")]
	private static void M4Multiply(ref Matrix4x4 mout, ref Matrix4x4 lhs, ref Matrix4x4 rhs)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x1578F9C", Offset = "0x1578F9C", VA = "0x1578F9C")]
	private static void V4Add(ref Vector4 vout, ref Vector4 lhs, ref Vector4 rhs)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x1579694", Offset = "0x1579694", VA = "0x1579694")]
	public WaveVR_Camera()
	{
	}
}
[Token(Token = "0x2000067")]
public class WaveVR_CameraTexture
{
	[Token(Token = "0x200057B")]
	public delegate void UpdateCameraCompleted(IntPtr nativeTextureId);

	[Token(Token = "0x200057C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB725C4", Offset = "0xB725C4")]
	public delegate void StartCameraCompleted(bool result);

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WVR_CameraInfo_t camerainfo;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool mStarted;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr nativeTextureId;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IntPtr mframeBuffer;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool syncPose;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WVR_PoseState_t mPoseState;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private WVR_PoseOriginModel origin;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static WaveVR_CameraTexture mInstance;

	[Token(Token = "0x40003F1")]
	private const bool DEBUG = false;

	[Token(Token = "0x17000028")]
	public bool isStarted
	{
		[Token(Token = "0x600048E")]
		[Address(RVA = "0x157A1EC", Offset = "0x157A1EC", VA = "0x157A1EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000029")]
	public static WaveVR_CameraTexture instance
	{
		[Token(Token = "0x6000494")]
		[Address(RVA = "0x157A5B8", Offset = "0x157A5B8", VA = "0x157A5B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000003")]
	public static event UpdateCameraCompleted UpdateCameraCompletedDelegate
	{
		[Token(Token = "0x600048F")]
		[Address(RVA = "0x157A1F4", Offset = "0x157A1F4", VA = "0x157A1F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83AE4", Offset = "0xB83AE4")]
		add
		{
		}
		[Token(Token = "0x6000490")]
		[Address(RVA = "0x157A2E4", Offset = "0x157A2E4", VA = "0x157A2E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83AF4", Offset = "0xB83AF4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB9420C", Offset = "0xB9420C")]
	public static event StartCameraCompleted StartCameraCompletedDelegate
	{
		[Token(Token = "0x6000491")]
		[Address(RVA = "0x157A3D4", Offset = "0x157A3D4", VA = "0x157A3D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83B04", Offset = "0xB83B04")]
		add
		{
		}
		[Token(Token = "0x6000492")]
		[Address(RVA = "0x157A4C4", Offset = "0x157A4C4", VA = "0x157A4C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83B14", Offset = "0xB83B14")]
		remove
		{
		}
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x157A5B4", Offset = "0x157A5B4", VA = "0x157A5B4")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x157A6C8", Offset = "0x157A6C8", VA = "0x157A6C8")]
	private void OnUpdateCameraCompleted(params object[] args)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x157A9BC", Offset = "0x157A9BC", VA = "0x157A9BC")]
	public IntPtr getNativeTextureId()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x157AA10", Offset = "0x157AA10", VA = "0x157AA10")]
	public bool startCamera()
	{
		return default(bool);
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x157B14C", Offset = "0x157B14C", VA = "0x157B14C")]
	public void enableSyncPose(bool enable)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x157B234", Offset = "0x157B234", VA = "0x157B234")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB83B24", Offset = "0xB83B24")]
	public WVR_CameraImageType GetCameraImageType()
	{
		return default(WVR_CameraImageType);
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x157B23C", Offset = "0x157B23C", VA = "0x157B23C")]
	public WVR_CameraImageType getImageType()
	{
		return default(WVR_CameraImageType);
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x157B254", Offset = "0x157B254", VA = "0x157B254")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB83B5C", Offset = "0xB83B5C")]
	public WVR_CameraImageFormat GetCameraImageFormat()
	{
		return default(WVR_CameraImageFormat);
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x157B26C", Offset = "0x157B26C", VA = "0x157B26C")]
	public WVR_CameraImageFormat getImageFormat()
	{
		return default(WVR_CameraImageFormat);
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x157B284", Offset = "0x157B284", VA = "0x157B284")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB83B94", Offset = "0xB83B94")]
	public uint GetCameraImageWidth()
	{
		return default(uint);
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x157B29C", Offset = "0x157B29C", VA = "0x157B29C")]
	public uint getImageWidth()
	{
		return default(uint);
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x157B2B4", Offset = "0x157B2B4", VA = "0x157B2B4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB83BCC", Offset = "0xB83BCC")]
	public uint GetCameraImageHeight()
	{
		return default(uint);
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x157B2CC", Offset = "0x157B2CC", VA = "0x157B2CC")]
	public uint getImageHeight()
	{
		return default(uint);
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x157B2E4", Offset = "0x157B2E4", VA = "0x157B2E4")]
	public uint getImageSize()
	{
		return default(uint);
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x157B2FC", Offset = "0x157B2FC", VA = "0x157B2FC")]
	public bool isEnableSyncPose()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x157B31C", Offset = "0x157B31C", VA = "0x157B31C")]
	public IntPtr getNativeFrameBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x157B370", Offset = "0x157B370", VA = "0x157B370")]
	public void stopCamera()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x157B5A4", Offset = "0x157B5A4", VA = "0x157B5A4")]
	public WVR_PoseState_t getFramePose()
	{
		return default(WVR_PoseState_t);
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x157B5B4", Offset = "0x157B5B4", VA = "0x157B5B4")]
	public void updateTexture(IntPtr textureId)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x157A674", Offset = "0x157A674", VA = "0x157A674")]
	public WaveVR_CameraTexture()
	{
	}
}
[Token(Token = "0x2000068")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB70938", Offset = "0xB70938")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB70938", Offset = "0xB70938")]
public class WaveVR_CanvasEye : MonoBehaviour
{
	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Canvas canvas;

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x157BAE8", Offset = "0x157BAE8", VA = "0x157BAE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x157BB50", Offset = "0x157BB50", VA = "0x157BB50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x157BD00", Offset = "0x157BD00", VA = "0x157BD00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x157BEB0", Offset = "0x157BEB0", VA = "0x157BEB0")]
	private void MyRenderEye(WaveVR_Render render, WVR_Eye eye, WaveVR_Camera wvrCamera)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x157BF1C", Offset = "0x157BF1C", VA = "0x157BF1C")]
	public WaveVR_CanvasEye()
	{
	}
}
[Token(Token = "0x2000069")]
public class WaveVR_Controller
{
	[Token(Token = "0x200057D")]
	public enum EDeviceType
	{
		[Token(Token = "0x40022D3")]
		Head = 1,
		[Token(Token = "0x40022D4")]
		Dominant,
		[Token(Token = "0x40022D5")]
		NonDominant
	}

	[Token(Token = "0x200057E")]
	public class Device
	{
		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WVR_InputId[] pressIds;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int[] prevFrameCount_press;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool[] state_press;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool[] prevState_press;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool[] event_state_press;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static WVR_InputId[] touchIds;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] prevFrameCount_touch;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool[] state_touch;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool[] prevState_touch;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool[] event_state_touch;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82AF0", Offset = "0xB82AF0")]
		private WVR_DeviceType <DeviceType>k__BackingField;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int prevFrame_connected;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _connected;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int prevFrame_pose;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private WVR_PoseState_t pose;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private WaveVR_Utils.RigidTransform rtPose;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private WVR_Vector3f_t vel;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 v3velocity;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private WVR_Vector3f_t aVel;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3 v3AngularVelocity;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private WVR_Axis_t axis;

		[Token(Token = "0x17000472")]
		public WVR_DeviceType DeviceType
		{
			[Token(Token = "0x60028E5")]
			[Address(RVA = "0x157D3D8", Offset = "0x157D3D8", VA = "0x157D3D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EC04", Offset = "0xB8EC04")]
			get
			{
				return default(WVR_DeviceType);
			}
			[Token(Token = "0x60028E6")]
			[Address(RVA = "0x157D3E0", Offset = "0x157D3E0", VA = "0x157D3E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EC14", Offset = "0xB8EC14")]
			private set
			{
			}
		}

		[Token(Token = "0x17000473")]
		public bool connected
		{
			[Token(Token = "0x60028E8")]
			[Address(RVA = "0x157D430", Offset = "0x157D430", VA = "0x157D430")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028E9")]
			[Address(RVA = "0x157D438", Offset = "0x157D438", VA = "0x157D438")]
			set
			{
			}
		}

		[Token(Token = "0x17000474")]
		public WaveVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x60028EB")]
			[Address(RVA = "0x157D644", Offset = "0x157D644", VA = "0x157D644")]
			get
			{
				return default(WaveVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x17000475")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB9434C", Offset = "0xB9434C")]
		public WVR_Vector3f_t velocity
		{
			[Token(Token = "0x60028EC")]
			[Address(RVA = "0x157D7C4", Offset = "0x157D7C4", VA = "0x157D7C4")]
			get
			{
				return default(WVR_Vector3f_t);
			}
		}

		[Token(Token = "0x17000476")]
		public Vector3 V3Velocity
		{
			[Token(Token = "0x60028ED")]
			[Address(RVA = "0x157D918", Offset = "0x157D918", VA = "0x157D918")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000477")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB94384", Offset = "0xB94384")]
		public WVR_Vector3f_t AngularVelocity
		{
			[Token(Token = "0x60028EE")]
			[Address(RVA = "0x157DAAC", Offset = "0x157DAAC", VA = "0x157DAAC")]
			get
			{
				return default(WVR_Vector3f_t);
			}
		}

		[Token(Token = "0x17000478")]
		public Vector3 V3AngularVelocity
		{
			[Token(Token = "0x60028EF")]
			[Address(RVA = "0x157DC00", Offset = "0x157DC00", VA = "0x157DC00")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0x157C5B8", Offset = "0x157C5B8", VA = "0x157C5B8")]
		public Device(WVR_DeviceType dt)
		{
		}

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0x157CB30", Offset = "0x157CB30", VA = "0x157CB30")]
		public void SetEventState_Press(WVR_InputId btn, bool down)
		{
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0x157CE68", Offset = "0x157CE68", VA = "0x157CE68")]
		public bool GetEventState_Press(WVR_InputId btn)
		{
			return default(bool);
		}

		[Token(Token = "0x60028E3")]
		[Address(RVA = "0x157CF84", Offset = "0x157CF84", VA = "0x157CF84")]
		public void SetEventState_Touch(WVR_InputId btn, bool down)
		{
		}

		[Token(Token = "0x60028E4")]
		[Address(RVA = "0x157D2BC", Offset = "0x157D2BC", VA = "0x157D2BC")]
		public bool GetEventState_Touch(WVR_InputId btn)
		{
			return default(bool);
		}

		[Token(Token = "0x60028E7")]
		[Address(RVA = "0x157D3E8", Offset = "0x157D3E8", VA = "0x157D3E8")]
		private bool AllowGetConnectionState()
		{
			return default(bool);
		}

		[Token(Token = "0x60028EA")]
		[Address(RVA = "0x157D5F4", Offset = "0x157D5F4", VA = "0x157D5F4")]
		private bool AllowGetPoseState()
		{
			return default(bool);
		}

		[Token(Token = "0x60028F0")]
		[Address(RVA = "0x157DD94", Offset = "0x157DD94", VA = "0x157DD94")]
		private bool AllowPressActionInAFrame(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60028F1")]
		[Address(RVA = "0x157DEDC", Offset = "0x157DEDC", VA = "0x157DEDC")]
		private bool AllowTouchActionInAFrame(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60028F2")]
		[Address(RVA = "0x157E024", Offset = "0x157E024", VA = "0x157E024")]
		private void Update_PressState(WVR_InputId _id)
		{
		}

		[Token(Token = "0x60028F3")]
		[Address(RVA = "0x157E190", Offset = "0x157E190", VA = "0x157E190")]
		private void Update_TouchState(WVR_InputId _id)
		{
		}

		[Token(Token = "0x60028F4")]
		[Address(RVA = "0x157C8E8", Offset = "0x157C8E8", VA = "0x157C8E8")]
		public void ResetAllButtonStates()
		{
		}

		[Token(Token = "0x60028F5")]
		[Address(RVA = "0x157E2FC", Offset = "0x157E2FC", VA = "0x157E2FC")]
		public void ResetButtonEvents()
		{
		}

		[Token(Token = "0x60028F6")]
		[Address(RVA = "0x157E484", Offset = "0x157E484", VA = "0x157E484")]
		public void UpdateButtonEvents()
		{
		}

		[Token(Token = "0x60028F7")]
		[Address(RVA = "0x157E92C", Offset = "0x157E92C", VA = "0x157E92C")]
		public bool GetPress(WaveVR_ButtonList.EButtons btn)
		{
			return default(bool);
		}

		[Token(Token = "0x60028F8")]
		[Address(RVA = "0x157E930", Offset = "0x157E930", VA = "0x157E930")]
		public bool GetPress(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60028F9")]
		[Address(RVA = "0x157EA58", Offset = "0x157EA58", VA = "0x157EA58")]
		public bool GetPressDown(WaveVR_ButtonList.EButtons btn)
		{
			return default(bool);
		}

		[Token(Token = "0x60028FA")]
		[Address(RVA = "0x157EA5C", Offset = "0x157EA5C", VA = "0x157EA5C")]
		public bool GetPressDown(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60028FB")]
		[Address(RVA = "0x157EBA8", Offset = "0x157EBA8", VA = "0x157EBA8")]
		public bool GetPressUp(WaveVR_ButtonList.EButtons btn)
		{
			return default(bool);
		}

		[Token(Token = "0x60028FC")]
		[Address(RVA = "0x157EBAC", Offset = "0x157EBAC", VA = "0x157EBAC")]
		public bool GetPressUp(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60028FD")]
		[Address(RVA = "0x157ECF8", Offset = "0x157ECF8", VA = "0x157ECF8")]
		public bool GetTouch(WaveVR_ButtonList.EButtons btn)
		{
			return default(bool);
		}

		[Token(Token = "0x60028FE")]
		[Address(RVA = "0x157ECFC", Offset = "0x157ECFC", VA = "0x157ECFC")]
		public bool GetTouch(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60028FF")]
		[Address(RVA = "0x157EE24", Offset = "0x157EE24", VA = "0x157EE24")]
		public bool GetTouchDown(WaveVR_ButtonList.EButtons btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6002900")]
		[Address(RVA = "0x157EE28", Offset = "0x157EE28", VA = "0x157EE28")]
		public bool GetTouchDown(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x6002901")]
		[Address(RVA = "0x157EF74", Offset = "0x157EF74", VA = "0x157EF74")]
		public bool GetTouchUp(WaveVR_ButtonList.EButtons btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6002902")]
		[Address(RVA = "0x157EF78", Offset = "0x157EF78", VA = "0x157EF78")]
		public bool GetTouchUp(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x6002903")]
		[Address(RVA = "0x157F0C4", Offset = "0x157F0C4", VA = "0x157F0C4")]
		public Vector2 GetAxis(WaveVR_ButtonList.EButtons btn)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002904")]
		[Address(RVA = "0x157F0C8", Offset = "0x157F0C8", VA = "0x157F0C8")]
		public Vector2 GetAxis(WVR_InputId btn)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002905")]
		[Address(RVA = "0x157F188", Offset = "0x157F188", VA = "0x157F188")]
		public void TriggerHapticPulse(uint durationMicroSec = 1000000u, WVR_InputId id = WVR_InputId.WVR_InputId_16)
		{
		}

		[Token(Token = "0x6002906")]
		[Address(RVA = "0x157F1B4", Offset = "0x157F1B4", VA = "0x157F1B4")]
		public void TriggerVibration(WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity)
		{
		}
	}

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool isLeftHanded;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static EDeviceType[] DeviceTypes;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Device[] devices;

	[Token(Token = "0x1700002A")]
	public static bool IsLeftHanded
	{
		[Token(Token = "0x60004AF")]
		[Address(RVA = "0x157C004", Offset = "0x157C004", VA = "0x157C004")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x157BF24", Offset = "0x157BF24", VA = "0x157BF24")]
	private static void DEBUG(string msg)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x157C06C", Offset = "0x157C06C", VA = "0x157C06C")]
	public static void SetLeftHandedMode(bool lefthanded)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x157C108", Offset = "0x157C108", VA = "0x157C108")]
	public static EDeviceType GetEDeviceByWVRType(WVR_DeviceType type)
	{
		return default(EDeviceType);
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x157C1C0", Offset = "0x157C1C0", VA = "0x157C1C0")]
	public static Device Input(WVR_DeviceType deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x1575500", Offset = "0x1575500", VA = "0x1575500")]
	public static Device Input(EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x157C264", Offset = "0x157C264", VA = "0x157C264")]
	private static Device ChangeRole(WVR_DeviceType deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x157C840", Offset = "0x157C840", VA = "0x157C840")]
	public WaveVR_Controller()
	{
	}
}
[Token(Token = "0x200006A")]
public enum ERaycastStartPoint
{
	[Token(Token = "0x40003F8")]
	CenterOfEyes,
	[Token(Token = "0x40003F9")]
	LeftEye,
	[Token(Token = "0x40003FA")]
	RightEye
}
[Token(Token = "0x200006B")]
public class WaveVR_ControllerInputModule : BaseInputModule
{
	[Token(Token = "0x200057F")]
	public enum ERaycastMode
	{
		[Token(Token = "0x40022EC")]
		Beam,
		[Token(Token = "0x40022ED")]
		Fixed,
		[Token(Token = "0x40022EE")]
		Mouse
	}

	[Serializable]
	[Token(Token = "0x2000580")]
	public class CBeamConfig
	{
		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float StartWidth;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float EndWidth;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float StartOffset;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float EndOffset;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color32 StartColor;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color32 EndColor;

		[Token(Token = "0x6002908")]
		[Address(RVA = "0x15891AC", Offset = "0x15891AC", VA = "0x15891AC")]
		public void assignedTo(CBeamConfig src)
		{
		}

		[Token(Token = "0x6002909")]
		[Address(RVA = "0x1589104", Offset = "0x1589104", VA = "0x1589104")]
		public CBeamConfig()
		{
		}
	}

	[Token(Token = "0x2000581")]
	public class RaycastModeSetting
	{
		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82B00", Offset = "0xB82B00")]
		private ERaycastMode <Mode>k__BackingField;

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82B10", Offset = "0xB82B10")]
		private CBeamConfig <Config>k__BackingField;

		[Token(Token = "0x17000479")]
		public ERaycastMode Mode
		{
			[Token(Token = "0x600290A")]
			[Address(RVA = "0x15892CC", Offset = "0x15892CC", VA = "0x15892CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EC24", Offset = "0xB8EC24")]
			get
			{
				return default(ERaycastMode);
			}
			[Token(Token = "0x600290B")]
			[Address(RVA = "0x15892D4", Offset = "0x15892D4", VA = "0x15892D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EC34", Offset = "0xB8EC34")]
			set
			{
			}
		}

		[Token(Token = "0x1700047A")]
		public CBeamConfig Config
		{
			[Token(Token = "0x600290C")]
			[Address(RVA = "0x15892DC", Offset = "0x15892DC", VA = "0x15892DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EC44", Offset = "0xB8EC44")]
			get
			{
				return null;
			}
			[Token(Token = "0x600290D")]
			[Address(RVA = "0x15892E4", Offset = "0x15892E4", VA = "0x15892E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EC54", Offset = "0xB8EC54")]
			set
			{
			}
		}

		[Token(Token = "0x600290E")]
		[Address(RVA = "0x1589290", Offset = "0x1589290", VA = "0x1589290")]
		public RaycastModeSetting(ERaycastMode mode, CBeamConfig config)
		{
		}
	}

	[Token(Token = "0x2000582")]
	public class EventController
	{
		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82B20", Offset = "0xB82B20")]
		private WaveVR_Controller.EDeviceType <device>k__BackingField;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82B30", Offset = "0xB82B30")]
		private GameObject <controller>k__BackingField;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82B40", Offset = "0xB82B40")]
		private GameObject <prevRaycastedObject>k__BackingField;

		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82B50", Offset = "0xB82B50")]
		private PointerEventData <event_data>k__BackingField;

		[Token(Token = "0x40022FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82B60", Offset = "0xB82B60")]
		private WaveVR_ControllerPointer <pointer>k__BackingField;

		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82B70", Offset = "0xB82B70")]
		private bool <pointerEnabled>k__BackingField;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82B80", Offset = "0xB82B80")]
		private WaveVR_Beam <beam>k__BackingField;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82B90", Offset = "0xB82B90")]
		private bool <beamEnabled>k__BackingField;

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<RaycastModeSetting> raycastModeSettings;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82BA0", Offset = "0xB82BA0")]
		private bool <eligibleForButtonClick>k__BackingField;

		[Token(Token = "0x1700047B")]
		public WaveVR_Controller.EDeviceType device
		{
			[Token(Token = "0x600290F")]
			[Address(RVA = "0x15891F4", Offset = "0x15891F4", VA = "0x15891F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EC64", Offset = "0xB8EC64")]
			get
			{
				return default(WaveVR_Controller.EDeviceType);
			}
			[Token(Token = "0x6002910")]
			[Address(RVA = "0x15891FC", Offset = "0x15891FC", VA = "0x15891FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EC74", Offset = "0xB8EC74")]
			set
			{
			}
		}

		[Token(Token = "0x1700047C")]
		public GameObject controller
		{
			[Token(Token = "0x6002911")]
			[Address(RVA = "0x1589204", Offset = "0x1589204", VA = "0x1589204")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EC84", Offset = "0xB8EC84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002912")]
			[Address(RVA = "0x158920C", Offset = "0x158920C", VA = "0x158920C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EC94", Offset = "0xB8EC94")]
			set
			{
			}
		}

		[Token(Token = "0x1700047D")]
		public GameObject prevRaycastedObject
		{
			[Token(Token = "0x6002913")]
			[Address(RVA = "0x1589214", Offset = "0x1589214", VA = "0x1589214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8ECA4", Offset = "0xB8ECA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002914")]
			[Address(RVA = "0x158921C", Offset = "0x158921C", VA = "0x158921C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8ECB4", Offset = "0xB8ECB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700047E")]
		public PointerEventData event_data
		{
			[Token(Token = "0x6002915")]
			[Address(RVA = "0x1589224", Offset = "0x1589224", VA = "0x1589224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8ECC4", Offset = "0xB8ECC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002916")]
			[Address(RVA = "0x158922C", Offset = "0x158922C", VA = "0x158922C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8ECD4", Offset = "0xB8ECD4")]
			set
			{
			}
		}

		[Token(Token = "0x1700047F")]
		public WaveVR_ControllerPointer pointer
		{
			[Token(Token = "0x6002917")]
			[Address(RVA = "0x1589234", Offset = "0x1589234", VA = "0x1589234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8ECE4", Offset = "0xB8ECE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002918")]
			[Address(RVA = "0x158923C", Offset = "0x158923C", VA = "0x158923C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8ECF4", Offset = "0xB8ECF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000480")]
		public bool pointerEnabled
		{
			[Token(Token = "0x6002919")]
			[Address(RVA = "0x1589244", Offset = "0x1589244", VA = "0x1589244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8ED04", Offset = "0xB8ED04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600291A")]
			[Address(RVA = "0x158924C", Offset = "0x158924C", VA = "0x158924C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8ED14", Offset = "0xB8ED14")]
			set
			{
			}
		}

		[Token(Token = "0x17000481")]
		public WaveVR_Beam beam
		{
			[Token(Token = "0x600291B")]
			[Address(RVA = "0x1589258", Offset = "0x1589258", VA = "0x1589258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8ED24", Offset = "0xB8ED24")]
			get
			{
				return null;
			}
			[Token(Token = "0x600291C")]
			[Address(RVA = "0x1589260", Offset = "0x1589260", VA = "0x1589260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8ED34", Offset = "0xB8ED34")]
			set
			{
			}
		}

		[Token(Token = "0x17000482")]
		public bool beamEnabled
		{
			[Token(Token = "0x600291D")]
			[Address(RVA = "0x1589268", Offset = "0x1589268", VA = "0x1589268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8ED44", Offset = "0xB8ED44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600291E")]
			[Address(RVA = "0x1589270", Offset = "0x1589270", VA = "0x1589270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8ED54", Offset = "0xB8ED54")]
			set
			{
			}
		}

		[Token(Token = "0x17000483")]
		public bool eligibleForButtonClick
		{
			[Token(Token = "0x6002921")]
			[Address(RVA = "0x158927C", Offset = "0x158927C", VA = "0x158927C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8ED64", Offset = "0xB8ED64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002922")]
			[Address(RVA = "0x1589284", Offset = "0x1589284", VA = "0x1589284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8ED74", Offset = "0xB8ED74")]
			set
			{
			}
		}

		[Token(Token = "0x600291F")]
		[Address(RVA = "0x15804DC", Offset = "0x15804DC", VA = "0x15804DC")]
		public void SetBeamConfig(ERaycastMode mode, CBeamConfig config)
		{
		}

		[Token(Token = "0x6002920")]
		[Address(RVA = "0x1581048", Offset = "0x1581048", VA = "0x1581048")]
		public CBeamConfig GetBeamConfig(ERaycastMode mode)
		{
			return null;
		}

		[Token(Token = "0x6002923")]
		[Address(RVA = "0x1582734", Offset = "0x1582734", VA = "0x1582734")]
		public EventController(WaveVR_Controller.EDeviceType type)
		{
		}
	}

	[Token(Token = "0x40003FB")]
	private const string LOG_TAG = "WaveVR_ControllerInputModule";

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ERaycastMode[] RaycastModes;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public bool UnityMode;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[HideInInspector]
	public bool UnityMode_PriorDrag;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool DomintEventEnabled;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject DominantController;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LayerMask DominantRaycastMask;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool NoDomtEventEnabled;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject NonDominantController;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LayerMask NonDominantRaycastMask;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<WaveVR_ButtonList.EButtons> ButtonToTrigger;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject Head;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public ERaycastMode RaycastMode;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[HideInInspector]
	public ERaycastStartPoint RaycastStartPoint;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB74E94", Offset = "0xB74E94")]
	public string CanvasTag;

	[Token(Token = "0x400040A")]
	private const float CLICK_TIME = 0.2f;

	[Token(Token = "0x400040B")]
	private const float DRAG_TIME = 0.2f;

	[Token(Token = "0x400040C")]
	private const float raycastStartPointOffset = 0.0315f;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject pointCameraNoDomt;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject pointCameraDomint;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float FixedBeamLength;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float lengthFromBeamToPointer;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Color32 FlexiblePointerColor;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ERaycastMode preRaycastMode;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool toChangeBeamPointer;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 DomintIntersectPos_prev;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 NoDomtIntersectPos_prev;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private bool mForceModuleActive;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private CBeamConfig mouseBeamConfig;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private CBeamConfig fixedBeamConfig;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private CBeamConfig flexibleBeamConfig;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<EventController> EventControllers;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool enableControllerInputModule;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<RaycastResult> physicsRaycastResultsDominant;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<RaycastResult> physicsRaycastResultsNoDomint;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<GameObject> physicsRaycastObjectsDominant;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<GameObject> prePhysicsRaycastObjectsDominant;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<GameObject> physicsRaycastObjectsNoDomint;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<GameObject> prePhysicsRaycastObjectsNoDomint;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<GameObject> physicsRaycastObjectsTmp;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<GameObject> prePhysicsRaycastObjectsTmp;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private List<RaycastResult> graphicRaycastResultsDominant;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<RaycastResult> graphicRaycastResultsNoDomint;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private List<GameObject> graphicRaycastObjectsDominant;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<GameObject> preGraphicRaycastObjectsDominant;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<GameObject> graphicRaycastObjectsNoDomint;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private List<GameObject> preGraphicRaycastObjectsNoDomint;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private List<GameObject> graphicRaycastObjectsTmp;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private List<GameObject> preGraphicRaycastObjectsTmp;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector2 centerOfScreen;

	[Token(Token = "0x1700002B")]
	public bool ForceModuleActive
	{
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x157F3A0", Offset = "0x157F3A0", VA = "0x157F3A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x157F3A8", Offset = "0x157F3A8", VA = "0x157F3A8")]
		set
		{
		}
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x157F280", Offset = "0x157F280", VA = "0x157F280")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x157F328", Offset = "0x157F328", VA = "0x157F328")]
	private void INFO(string msg)
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x157F3B4", Offset = "0x157F3B4", VA = "0x157F3B4", Slot = "25")]
	public override bool IsModuleSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x157F3BC", Offset = "0x157F3BC", VA = "0x157F3BC", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x157F3F0", Offset = "0x157F3F0", VA = "0x157F3F0", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x157F510", Offset = "0x157F510", VA = "0x157F510")]
	private EventController GetEventController(WaveVR_Controller.EDeviceType dt)
	{
		return null;
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x157FA40", Offset = "0x157FA40", VA = "0x157FA40")]
	private void UpdateControllerModelInProcess()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x157FD68", Offset = "0x157FD68", VA = "0x157FD68")]
	private void SetupEventController(EventController eventController, GameObject controller_model, LayerMask mask)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x15805CC", Offset = "0x15805CC", VA = "0x15805CC")]
	private void SetupEventControllerBeam(EventController eventController, Vector3 intersectionPosition, bool updateRaycastConfig = false)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x158112C", Offset = "0x158112C", VA = "0x158112C")]
	private void SetupEventControllerPointer(EventController eventController, Camera eventCamera, Vector3 intersectionPosition)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x1580F74", Offset = "0x1580F74", VA = "0x1580F74")]
	private void SetupEventControllerPointer(EventController eventController)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x15816B4", Offset = "0x15816B4", VA = "0x15816B4")]
	public void ChangeBeamLength(WaveVR_Controller.EDeviceType dt, float length)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x15817AC", Offset = "0x15817AC", VA = "0x15817AC")]
	private void SetupPointerCamera(WaveVR_Controller.EDeviceType type)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x15823C4", Offset = "0x15823C4", VA = "0x15823C4", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x15828E4", Offset = "0x15828E4", VA = "0x15828E4", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x1582A30", Offset = "0x1582A30", VA = "0x1582A30", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x1584D44", Offset = "0x1584D44", VA = "0x1584D44")]
	private void PhysicsRaycast(EventController event_controller, PhysicsRaycaster raycaster)
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x1583F5C", Offset = "0x1583F5C", VA = "0x1583F5C")]
	private void GraphicRaycast(EventController event_controller, Camera event_camera)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x15880B0", Offset = "0x15880B0", VA = "0x15880B0")]
	private bool IsPhysicalRaycasted(EventController event_controller, GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x1588158", Offset = "0x1588158", VA = "0x1588158")]
	private bool IsGraphicRaycasted(EventController event_controller, GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x1585748", Offset = "0x1585748", VA = "0x1585748")]
	private void EnterExitPhysicsObject(EventController event_controller)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x1585214", Offset = "0x1585214", VA = "0x1585214")]
	private void EnterExitGraphicObject(EventController event_controller)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x157F5EC", Offset = "0x157F5EC", VA = "0x157F5EC")]
	private void ExitAllObjects(EventController event_controller)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x15865F4", Offset = "0x15865F4", VA = "0x15865F4")]
	private void OnTriggerDown(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x1586B88", Offset = "0x1586B88", VA = "0x1586B88")]
	private void OnTriggerUp(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x1587204", Offset = "0x1587204", VA = "0x1587204")]
	private void OnTriggerUpMouse(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x1585D38", Offset = "0x1585D38", VA = "0x1585D38")]
	private void OnDrag(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x15862F8", Offset = "0x15862F8", VA = "0x15862F8")]
	private void OnDragMouse(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x1585C7C", Offset = "0x1585C7C", VA = "0x1585C7C")]
	private void OnTriggerHover(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x15882C0", Offset = "0x15882C0", VA = "0x15882C0")]
	private void OnTriggerEnterAndExit(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x1588678", Offset = "0x1588678", VA = "0x1588678")]
	private void onButtonClick(EventController event_controller)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x1583E9C", Offset = "0x1583E9C", VA = "0x1583E9C")]
	private void ResetPointerEventData(WaveVR_Controller.EDeviceType type)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x1583D30", Offset = "0x1583D30", VA = "0x1583D30")]
	private void ResetPointerEventData_Hybrid(WaveVR_Controller.EDeviceType type, Camera eventCam)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x1587BD4", Offset = "0x1587BD4", VA = "0x1587BD4")]
	private Vector3 GetIntersectionPosition(Camera cam, RaycastResult raycastResult)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x1581688", Offset = "0x1581688", VA = "0x1581688")]
	private GameObject GetRaycastedObject(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x1583964", Offset = "0x1583964", VA = "0x1583964")]
	private void CheckBeamPointerActive(EventController eventController)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x1587D60", Offset = "0x1587D60", VA = "0x1587D60")]
	private void SetPointerCameraTracker()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x15889F8", Offset = "0x15889F8", VA = "0x15889F8")]
	private GameObject[] MergeArray(GameObject[] start, GameObject[] end)
	{
		return null;
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x1588200", Offset = "0x1588200", VA = "0x1588200")]
	private void CopyList(List<GameObject> src, List<GameObject> dst)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x1588C48", Offset = "0x1588C48", VA = "0x1588C48")]
	public WaveVR_ControllerInputModule()
	{
	}
}
[Token(Token = "0x200006C")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB709C0", Offset = "0xB709C0")]
public class WaveVR_ControllerListener : MonoBehaviour
{
	[Token(Token = "0x2000583")]
	public class Device
	{
		[Token(Token = "0x20008E1")]
		public delegate void ButtonEventHandler();

		[Token(Token = "0x20008E2")]
		public delegate void ConnectionEventHandler(bool value);

		[Token(Token = "0x20008E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73D74", Offset = "0xB73D74")]
		private sealed class <PollingConnectionStatus>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400301A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400301B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400301C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x1700062E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600356A")]
				[Address(RVA = "0x13DD2E8", Offset = "0x13DD2E8", VA = "0x13DD2E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700062F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600356C")]
				[Address(RVA = "0x13DD354", Offset = "0x13DD354", VA = "0x13DD354", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003567")]
			[Address(RVA = "0x13DC9D4", Offset = "0x13DC9D4", VA = "0x13DC9D4")]
			[DebuggerHidden]
			public <PollingConnectionStatus>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x6003568")]
			[Address(RVA = "0x13DCF9C", Offset = "0x13DCF9C", VA = "0x13DCF9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003569")]
			[Address(RVA = "0x13DCFA0", Offset = "0x13DCFA0", VA = "0x13DCFA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600356B")]
			[Address(RVA = "0x13DD2F0", Offset = "0x13DD2F0", VA = "0x13DD2F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73D84", Offset = "0xB73D84")]
		private sealed class <PollingPressState_Menu>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400301D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400301E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400301F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x17000630")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003570")]
				[Address(RVA = "0x13DDB2C", Offset = "0x13DDB2C", VA = "0x13DDB2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000631")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003572")]
				[Address(RVA = "0x13DDB98", Offset = "0x13DDB98", VA = "0x13DDB98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600356D")]
			[Address(RVA = "0x13DCB50", Offset = "0x13DCB50", VA = "0x13DCB50")]
			[DebuggerHidden]
			public <PollingPressState_Menu>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x600356E")]
			[Address(RVA = "0x13DD88C", Offset = "0x13DD88C", VA = "0x13DD88C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600356F")]
			[Address(RVA = "0x13DD890", Offset = "0x13DD890", VA = "0x13DD890", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003571")]
			[Address(RVA = "0x13DDB34", Offset = "0x13DDB34", VA = "0x13DDB34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73D94", Offset = "0xB73D94")]
		private sealed class <PollingPressState_Grip>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x17000632")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003576")]
				[Address(RVA = "0x13DD818", Offset = "0x13DD818", VA = "0x13DD818", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000633")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003578")]
				[Address(RVA = "0x13DD884", Offset = "0x13DD884", VA = "0x13DD884", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003573")]
			[Address(RVA = "0x13DCB7C", Offset = "0x13DCB7C", VA = "0x13DCB7C")]
			[DebuggerHidden]
			public <PollingPressState_Grip>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x6003574")]
			[Address(RVA = "0x13DD35C", Offset = "0x13DD35C", VA = "0x13DD35C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003575")]
			[Address(RVA = "0x13DD360", Offset = "0x13DD360", VA = "0x13DD360", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003577")]
			[Address(RVA = "0x13DD820", Offset = "0x13DD820", VA = "0x13DD820", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73DA4", Offset = "0xB73DA4")]
		private sealed class <PollingPressState_Touchpad>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x17000634")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600357C")]
				[Address(RVA = "0x13DDE40", Offset = "0x13DDE40", VA = "0x13DDE40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000635")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600357E")]
				[Address(RVA = "0x13DDEAC", Offset = "0x13DDEAC", VA = "0x13DDEAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003579")]
			[Address(RVA = "0x13DCBA8", Offset = "0x13DCBA8", VA = "0x13DCBA8")]
			[DebuggerHidden]
			public <PollingPressState_Touchpad>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x600357A")]
			[Address(RVA = "0x13DDBA0", Offset = "0x13DDBA0", VA = "0x13DDBA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600357B")]
			[Address(RVA = "0x13DDBA4", Offset = "0x13DDBA4", VA = "0x13DDBA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600357D")]
			[Address(RVA = "0x13DDE48", Offset = "0x13DDE48", VA = "0x13DDE48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73DB4", Offset = "0xB73DB4")]
		private sealed class <PollingPressState_Trigger>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x17000636")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003582")]
				[Address(RVA = "0x13DE154", Offset = "0x13DE154", VA = "0x13DE154", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000637")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003584")]
				[Address(RVA = "0x13DE1C0", Offset = "0x13DE1C0", VA = "0x13DE1C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600357F")]
			[Address(RVA = "0x13DCBD4", Offset = "0x13DCBD4", VA = "0x13DCBD4")]
			[DebuggerHidden]
			public <PollingPressState_Trigger>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x6003580")]
			[Address(RVA = "0x13DDEB4", Offset = "0x13DDEB4", VA = "0x13DDEB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003581")]
			[Address(RVA = "0x13DDEB8", Offset = "0x13DDEB8", VA = "0x13DDEB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003583")]
			[Address(RVA = "0x13DE15C", Offset = "0x13DE15C", VA = "0x13DE15C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73DC4", Offset = "0xB73DC4")]
		private sealed class <PollingTouchState_Touchpad>d__76 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400302A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400302B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x17000638")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003588")]
				[Address(RVA = "0x13DE468", Offset = "0x13DE468", VA = "0x13DE468", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000639")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600358A")]
				[Address(RVA = "0x13DE4D4", Offset = "0x13DE4D4", VA = "0x13DE4D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003585")]
			[Address(RVA = "0x13DCCD0", Offset = "0x13DCCD0", VA = "0x13DCCD0")]
			[DebuggerHidden]
			public <PollingTouchState_Touchpad>d__76(int <>1__state)
			{
			}

			[Token(Token = "0x6003586")]
			[Address(RVA = "0x13DE1C8", Offset = "0x13DE1C8", VA = "0x13DE1C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003587")]
			[Address(RVA = "0x13DE1CC", Offset = "0x13DE1CC", VA = "0x13DE1CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003589")]
			[Address(RVA = "0x13DE470", Offset = "0x13DE470", VA = "0x13DE470", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73DD4", Offset = "0xB73DD4")]
		private sealed class <PollingTouchState_Trigger>d__77 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400302C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400302D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400302E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x1700063A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600358E")]
				[Address(RVA = "0x13DE77C", Offset = "0x13DE77C", VA = "0x13DE77C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700063B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003590")]
				[Address(RVA = "0x13DE7E8", Offset = "0x13DE7E8", VA = "0x13DE7E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600358B")]
			[Address(RVA = "0x13DCCFC", Offset = "0x13DCCFC", VA = "0x13DCCFC")]
			[DebuggerHidden]
			public <PollingTouchState_Trigger>d__77(int <>1__state)
			{
			}

			[Token(Token = "0x600358C")]
			[Address(RVA = "0x13DE4DC", Offset = "0x13DE4DC", VA = "0x13DE4DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600358D")]
			[Address(RVA = "0x13DE4E0", Offset = "0x13DE4E0", VA = "0x13DE4E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600358F")]
			[Address(RVA = "0x13DE784", Offset = "0x13DE784", VA = "0x13DE784", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ulong Input_Mask_Menu;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ulong Input_Mask_Grip;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static ulong Input_Mask_Touchpad;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static ulong Input_Mask_Trigger;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IEnumerator ieConnection;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator iePressMenu;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator iePressGrip;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEnumerator iePressTouchpad;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IEnumerator iePressTrigger;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IEnumerator ieTouchTouchpad;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IEnumerator ieTouchTrigger;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82BB0", Offset = "0xB82BB0")]
		private WVR_DeviceType <DeviceType>k__BackingField;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal WaveVR_Utils.RigidTransform rtPose;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal WaveVR_Utils.WVR_ButtonState_t state;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal WaveVR_Utils.WVR_ButtonState_t pre_state;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal WVR_Axis_t axis;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal WVR_PoseState_t pose;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private WaitForEndOfFrame waitForEndOfFrame;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82C80", Offset = "0xB82C80")]
		private bool <connected>k__BackingField;

		[Token(Token = "0x17000484")]
		public WVR_DeviceType DeviceType
		{
			[Token(Token = "0x6002925")]
			[Address(RVA = "0x13DB724", Offset = "0x13DB724", VA = "0x13DB724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8ED84", Offset = "0xB8ED84")]
			get
			{
				return default(WVR_DeviceType);
			}
			[Token(Token = "0x6002926")]
			[Address(RVA = "0x13DB72C", Offset = "0x13DB72C", VA = "0x13DB72C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8ED94", Offset = "0xB8ED94")]
			private set
			{
			}
		}

		[Token(Token = "0x17000485")]
		public WaveVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x6002927")]
			[Address(RVA = "0x13DB734", Offset = "0x13DB734", VA = "0x13DB734")]
			get
			{
				return default(WaveVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x17000486")]
		public bool connected
		{
			[Token(Token = "0x6002940")]
			[Address(RVA = "0x13DC870", Offset = "0x13DC870", VA = "0x13DC870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EF24", Offset = "0xB8EF24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002941")]
			[Address(RVA = "0x13DC878", Offset = "0x13DC878", VA = "0x13DC878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EF34", Offset = "0xB8EF34")]
			private set
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public event ButtonEventHandler PressDownListenersMenu
		{
			[Token(Token = "0x6002928")]
			[Address(RVA = "0x13DB8B0", Offset = "0x13DB8B0", VA = "0x13DB8B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EDA4", Offset = "0xB8EDA4")]
			add
			{
			}
			[Token(Token = "0x6002929")]
			[Address(RVA = "0x13DB958", Offset = "0x13DB958", VA = "0x13DB958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EDB4", Offset = "0xB8EDB4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000050")]
		public event ButtonEventHandler PressDownListenersGrip
		{
			[Token(Token = "0x600292A")]
			[Address(RVA = "0x13DBA00", Offset = "0x13DBA00", VA = "0x13DBA00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EDC4", Offset = "0xB8EDC4")]
			add
			{
			}
			[Token(Token = "0x600292B")]
			[Address(RVA = "0x13DBAA8", Offset = "0x13DBAA8", VA = "0x13DBAA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EDD4", Offset = "0xB8EDD4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000051")]
		public event ButtonEventHandler PressDownListenersTouchpad
		{
			[Token(Token = "0x600292C")]
			[Address(RVA = "0x13DBB50", Offset = "0x13DBB50", VA = "0x13DBB50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EDE4", Offset = "0xB8EDE4")]
			add
			{
			}
			[Token(Token = "0x600292D")]
			[Address(RVA = "0x13DBBF8", Offset = "0x13DBBF8", VA = "0x13DBBF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EDF4", Offset = "0xB8EDF4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000052")]
		public event ButtonEventHandler PressDownListenersTrigger
		{
			[Token(Token = "0x600292E")]
			[Address(RVA = "0x13DBCA0", Offset = "0x13DBCA0", VA = "0x13DBCA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EE04", Offset = "0xB8EE04")]
			add
			{
			}
			[Token(Token = "0x600292F")]
			[Address(RVA = "0x13DBD48", Offset = "0x13DBD48", VA = "0x13DBD48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EE14", Offset = "0xB8EE14")]
			remove
			{
			}
		}

		[Token(Token = "0x14000053")]
		public event ButtonEventHandler PressUpListenersMenu
		{
			[Token(Token = "0x6002930")]
			[Address(RVA = "0x13DBDF0", Offset = "0x13DBDF0", VA = "0x13DBDF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EE24", Offset = "0xB8EE24")]
			add
			{
			}
			[Token(Token = "0x6002931")]
			[Address(RVA = "0x13DBE98", Offset = "0x13DBE98", VA = "0x13DBE98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EE34", Offset = "0xB8EE34")]
			remove
			{
			}
		}

		[Token(Token = "0x14000054")]
		public event ButtonEventHandler PressUpListenersGrip
		{
			[Token(Token = "0x6002932")]
			[Address(RVA = "0x13DBF40", Offset = "0x13DBF40", VA = "0x13DBF40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EE44", Offset = "0xB8EE44")]
			add
			{
			}
			[Token(Token = "0x6002933")]
			[Address(RVA = "0x13DBFE8", Offset = "0x13DBFE8", VA = "0x13DBFE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EE54", Offset = "0xB8EE54")]
			remove
			{
			}
		}

		[Token(Token = "0x14000055")]
		public event ButtonEventHandler PressUpListenersTouchpad
		{
			[Token(Token = "0x6002934")]
			[Address(RVA = "0x13DC090", Offset = "0x13DC090", VA = "0x13DC090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EE64", Offset = "0xB8EE64")]
			add
			{
			}
			[Token(Token = "0x6002935")]
			[Address(RVA = "0x13DC138", Offset = "0x13DC138", VA = "0x13DC138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EE74", Offset = "0xB8EE74")]
			remove
			{
			}
		}

		[Token(Token = "0x14000056")]
		public event ButtonEventHandler PressUpListenersTrigger
		{
			[Token(Token = "0x6002936")]
			[Address(RVA = "0x13DC1E0", Offset = "0x13DC1E0", VA = "0x13DC1E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EE84", Offset = "0xB8EE84")]
			add
			{
			}
			[Token(Token = "0x6002937")]
			[Address(RVA = "0x13DC288", Offset = "0x13DC288", VA = "0x13DC288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EE94", Offset = "0xB8EE94")]
			remove
			{
			}
		}

		[Token(Token = "0x14000057")]
		public event ButtonEventHandler TouchDownListenersTouchpad
		{
			[Token(Token = "0x6002938")]
			[Address(RVA = "0x13DC330", Offset = "0x13DC330", VA = "0x13DC330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EEA4", Offset = "0xB8EEA4")]
			add
			{
			}
			[Token(Token = "0x6002939")]
			[Address(RVA = "0x13DC3D8", Offset = "0x13DC3D8", VA = "0x13DC3D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EEB4", Offset = "0xB8EEB4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000058")]
		public event ButtonEventHandler TouchDownListenersTrigger
		{
			[Token(Token = "0x600293A")]
			[Address(RVA = "0x13DC480", Offset = "0x13DC480", VA = "0x13DC480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EEC4", Offset = "0xB8EEC4")]
			add
			{
			}
			[Token(Token = "0x600293B")]
			[Address(RVA = "0x13DC528", Offset = "0x13DC528", VA = "0x13DC528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EED4", Offset = "0xB8EED4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000059")]
		public event ButtonEventHandler TouchUpListenersTouchpad
		{
			[Token(Token = "0x600293C")]
			[Address(RVA = "0x13DC5D0", Offset = "0x13DC5D0", VA = "0x13DC5D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EEE4", Offset = "0xB8EEE4")]
			add
			{
			}
			[Token(Token = "0x600293D")]
			[Address(RVA = "0x13DC678", Offset = "0x13DC678", VA = "0x13DC678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EEF4", Offset = "0xB8EEF4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005A")]
		public event ButtonEventHandler TouchUpListenersTrigger
		{
			[Token(Token = "0x600293E")]
			[Address(RVA = "0x13DC720", Offset = "0x13DC720", VA = "0x13DC720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EF04", Offset = "0xB8EF04")]
			add
			{
			}
			[Token(Token = "0x600293F")]
			[Address(RVA = "0x13DC7C8", Offset = "0x13DC7C8", VA = "0x13DC7C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EF14", Offset = "0xB8EF14")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005B")]
		public event ConnectionEventHandler ConnectionStatusListeners
		{
			[Token(Token = "0x6002942")]
			[Address(RVA = "0x13DC884", Offset = "0x13DC884", VA = "0x13DC884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EF44", Offset = "0xB8EF44")]
			add
			{
			}
			[Token(Token = "0x6002943")]
			[Address(RVA = "0x13DC92C", Offset = "0x13DC92C", VA = "0x13DC92C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8EF54", Offset = "0xB8EF54")]
			remove
			{
			}
		}

		[Token(Token = "0x6002924")]
		[Address(RVA = "0x13DAF04", Offset = "0x13DAF04", VA = "0x13DAF04")]
		public Device(WVR_DeviceType dt)
		{
		}

		[Token(Token = "0x6002944")]
		[Address(RVA = "0x13DB3F8", Offset = "0x13DB3F8", VA = "0x13DB3F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8EF64", Offset = "0xB8EF64")]
		private IEnumerator PollingConnectionStatus()
		{
			return null;
		}

		[Token(Token = "0x6002945")]
		[Address(RVA = "0x13DCA00", Offset = "0x13DCA00", VA = "0x13DCA00")]
		public bool GetPress(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x6002946")]
		[Address(RVA = "0x13DB46C", Offset = "0x13DB46C", VA = "0x13DB46C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8EFC8", Offset = "0xB8EFC8")]
		private IEnumerator PollingPressState_Menu()
		{
			return null;
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0x13DB4E0", Offset = "0x13DB4E0", VA = "0x13DB4E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB9002C", Offset = "0xB9002C")]
		private IEnumerator PollingPressState_Grip()
		{
			return null;
		}

		[Token(Token = "0x6002948")]
		[Address(RVA = "0x13DB554", Offset = "0x13DB554", VA = "0x13DB554")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB90090", Offset = "0xB90090")]
		private IEnumerator PollingPressState_Touchpad()
		{
			return null;
		}

		[Token(Token = "0x6002949")]
		[Address(RVA = "0x13DB5C8", Offset = "0x13DB5C8", VA = "0x13DB5C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB900F4", Offset = "0xB900F4")]
		private IEnumerator PollingPressState_Trigger()
		{
			return null;
		}

		[Token(Token = "0x600294A")]
		[Address(RVA = "0x13DCC00", Offset = "0x13DCC00", VA = "0x13DCC00")]
		public bool GetTouch(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x600294B")]
		[Address(RVA = "0x13DB63C", Offset = "0x13DB63C", VA = "0x13DB63C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB90158", Offset = "0xB90158")]
		private IEnumerator PollingTouchState_Touchpad()
		{
			return null;
		}

		[Token(Token = "0x600294C")]
		[Address(RVA = "0x13DB6B0", Offset = "0x13DB6B0", VA = "0x13DB6B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB901BC", Offset = "0xB901BC")]
		private IEnumerator PollingTouchState_Trigger()
		{
			return null;
		}

		[Token(Token = "0x600294D")]
		[Address(RVA = "0x13DCD28", Offset = "0x13DCD28", VA = "0x13DCD28")]
		public Vector2 GetAxis(WVR_InputId _id)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600294E")]
		[Address(RVA = "0x13DCE98", Offset = "0x13DCE98", VA = "0x13DCE98")]
		public void TriggerHapticPulse(uint _durationMicroSec = 1000000u, WVR_InputId _id = WVR_InputId.WVR_InputId_16)
		{
		}
	}

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_ControllerListener instance;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Device[] devices;

	[Token(Token = "0x1700002C")]
	public static WaveVR_ControllerListener Instance
	{
		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x13DAA4C", Offset = "0x13DAA4C", VA = "0x13DAA4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x13DABFC", Offset = "0x13DABFC", VA = "0x13DABFC")]
	public Device ChangeRole(WVR_DeviceType deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x13DB094", Offset = "0x13DB094", VA = "0x13DB094")]
	public Device Input(WVR_DeviceType deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x13DB168", Offset = "0x13DB168", VA = "0x13DB168")]
	public Device Input(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x13DB1E0", Offset = "0x13DB1E0", VA = "0x13DB1E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x13DB384", Offset = "0x13DB384", VA = "0x13DB384")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x13DB388", Offset = "0x13DB388", VA = "0x13DB388")]
	public WaveVR_ControllerListener()
	{
	}
}
[Token(Token = "0x200006D")]
public class WaveVR_ControllerLoader : MonoBehaviour
{
	[Token(Token = "0x2000584")]
	public enum ControllerHand
	{
		[Token(Token = "0x4002322")]
		Dominant,
		[Token(Token = "0x4002323")]
		Non_Dominant
	}

	[Token(Token = "0x2000585")]
	public enum CComponent
	{
		[Token(Token = "0x4002325")]
		One_Bone,
		[Token(Token = "0x4002326")]
		Multi_Component
	}

	[Token(Token = "0x2000586")]
	public enum CTrackingSpace
	{
		[Token(Token = "0x4002328")]
		REAL_POSITION_ONLY,
		[Token(Token = "0x4002329")]
		FAKE_POSITION_ONLY,
		[Token(Token = "0x400232A")]
		AUTO_POSITION_ONLY,
		[Token(Token = "0x400232B")]
		ROTATION_ONLY,
		[Token(Token = "0x400232C")]
		ROTATION_AND_REAL_POSITION,
		[Token(Token = "0x400232D")]
		ROTATION_AND_FAKE_POSITION,
		[Token(Token = "0x400232E")]
		ROTATION_AND_AUTO_POSITION,
		[Token(Token = "0x400232F")]
		CTS_SYSTEM
	}

	[Token(Token = "0x2000587")]
	public enum ControllerType
	{
		[Token(Token = "0x4002331")]
		ControllerType_None,
		[Token(Token = "0x4002332")]
		ControllerType_Generic,
		[Token(Token = "0x4002333")]
		ControllerType_Resources,
		[Token(Token = "0x4002334")]
		ControllerType_AssetBundles,
		[Token(Token = "0x4002335")]
		ControllerType_AdaptiveController
	}

	[Token(Token = "0x2000588")]
	public enum CLoadingState
	{
		[Token(Token = "0x4002337")]
		LoadingState_NOT_LOADED,
		[Token(Token = "0x4002338")]
		LoadingState_LOADING,
		[Token(Token = "0x4002339")]
		LoadingState_LOADED
	}

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB74EDC", Offset = "0xB74EDC")]
	public ControllerHand WhichHand;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CComponent ControllerComponents;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool TrackPosition;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public WVR_SimulationOption SimulationOption;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool FollowHead;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool TrackRotation;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB74F14", Offset = "0xB74F14")]
	public bool overwriteIndicatorSettings;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool showIndicator;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool hideIndicatorByRoll;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool basedOnEmitter;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74F4C", Offset = "0xB74F4C")]
	public float showIndicatorAngle;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB74F68", Offset = "0xB74F68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74F68", Offset = "0xB74F68")]
	public float lineLength;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74FC4", Offset = "0xB74FC4")]
	public float lineStartWidth;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74FE4", Offset = "0xB74FE4")]
	public float lineEndWidth;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color lineColor;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB75004", Offset = "0xB75004")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB75004", Offset = "0xB75004")]
	public float textCharacterSize;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB75060", Offset = "0xB75060")]
	public float zhCharactarSize;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB75080", Offset = "0xB75080")]
	public int textFontSize;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color textColor;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB750A0", Offset = "0xB750A0")]
	public bool useIndicatorSystemConfig;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<ButtonIndication> buttonIndicationList;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB750D8", Offset = "0xB750D8")]
	public bool adaptiveLoading;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool enableEmitter;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool sendEvent;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB75110", Offset = "0xB75110")]
	public bool enableButtonEffect;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool useEffectSystemConfig;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color32 buttonEffectColor;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB75148", Offset = "0xB75148")]
	public bool ShowBeam;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	public bool useBeamSystemConfig;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	public bool updateEveryFrame;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float StartWidth;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float EndWidth;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float StartOffset;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float EndOffset;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color32 StartColor;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Color32 EndColor;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool useDefaultMaterial;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material customMat;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB75180", Offset = "0xB75180")]
	public bool showPointer;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool usePointerSystemConfig;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	public bool Blink;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	public bool UseDefaultTexture;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Texture2D customTexture;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float PointerOuterDiameterMin;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float PointerDistanceInMeters;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool useTexture;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public Color PointerColor;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Color borderColor;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Color focusColor;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Color focusBorderColor;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private string TextureName;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ControllerType controllerType;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GameObject controllerPrefab;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObject originalControllerPrefab;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private string controllerFileName;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private string controllerModelFoler;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private string genericControllerFileName;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private List<AssetBundle> loadedAssetBundle;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private string renderModelNamePath;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private WaveVR_Controller.EDeviceType focusController;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private WaveVR_Controller.EDeviceType deviceType;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private string renderModelName;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool connected;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private CLoadingState mLoadingState;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private string parameterName;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private IntPtr ptrParameterName;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private IntPtr ptrResult;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private uint resultVertLength;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int bufferSize;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private WaveVR_ControllerInstanceManager CtrInstanceMgr;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int ControllerIdx;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private ModelSpecify modelSpecify;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool forceCheckRenderModelName;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
	private bool lastFrameConnection;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private GameObject eventSystem;

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x13DE8EC", Offset = "0x13DE8EC", VA = "0x13DE8EC")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x13DEAC0", Offset = "0x13DEAC0", VA = "0x13DEAC0")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x13DEC94", Offset = "0x13DEC94", VA = "0x13DEC94")]
	private void PrintWarningLog(string msg)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x13DEE68", Offset = "0x13DEE68", VA = "0x13DEE68")]
	private void checkAndCreateCIM()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x13DF010", Offset = "0x13DF010", VA = "0x13DF010")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x13DF0E0", Offset = "0x13DF0E0", VA = "0x13DF0E0")]
	private void resetControllerState()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x13DF154", Offset = "0x13DF154", VA = "0x13DF154")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x13DF200", Offset = "0x13DF200", VA = "0x13DF200")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x13DF34C", Offset = "0x13DF34C", VA = "0x13DF34C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x13E05B8", Offset = "0x13E05B8", VA = "0x13E05B8")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x13DF264", Offset = "0x13DF264", VA = "0x13DF264")]
	private void removeControllerFromMgr(string funcName)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x13E085C", Offset = "0x13E085C", VA = "0x13E085C")]
	private void UpdateFocusController()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x13DF544", Offset = "0x13DF544", VA = "0x13DF544")]
	private void onLoadController(WVR_DeviceType type)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x13E08A0", Offset = "0x13E08A0", VA = "0x13E08A0")]
	private bool loadMeshAndImageByDevice(string renderModelNamePath)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x13E1180", Offset = "0x13E1180", VA = "0x13E1180")]
	private bool tryLoadModelFromRuntime(string renderModelNamePath, string modelName)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x13E3B38", Offset = "0x13E3B38", VA = "0x13E3B38")]
	private bool verifyControllerPrefab(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x13E101C", Offset = "0x13E101C", VA = "0x13E101C")]
	private int checkAssetBundlesVersion(string version)
	{
		return default(int);
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x13E16CC", Offset = "0x13E16CC", VA = "0x13E16CC")]
	private GameObject loadGenericControllerModelFromPackage(string tmpGeneric)
	{
		return null;
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x13E181C", Offset = "0x13E181C", VA = "0x13E181C")]
	private void SetControllerOptions(GameObject controller_prefab)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x13E3BC8", Offset = "0x13E3BC8", VA = "0x13E3BC8")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x13E3C34", Offset = "0x13E3C34", VA = "0x13E3C34")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x13E3E3C", Offset = "0x13E3E3C", VA = "0x13E3E3C")]
	private void checkConnectionAndModelName()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x13DF484", Offset = "0x13DF484", VA = "0x13DF484")]
	private bool checkConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x13E1E70", Offset = "0x13E1E70", VA = "0x13E1E70")]
	private void SetControllerBeamParameters(GameObject ctrlr)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x13E25EC", Offset = "0x13E25EC", VA = "0x13E25EC")]
	private void SetControllerPointerParameters(GameObject ctrlr)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x13E5464", Offset = "0x13E5464", VA = "0x13E5464")]
	private void UpdateStartColor(string color_string)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x13E562C", Offset = "0x13E562C", VA = "0x13E562C")]
	private void UpdateEndColor(string color_string)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x13E44D4", Offset = "0x13E44D4", VA = "0x13E44D4")]
	private void ReadJsonValues_Beam()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x13E4840", Offset = "0x13E4840", VA = "0x13E4840")]
	private void ReadJsonValues_Pointer()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x13E57F4", Offset = "0x13E57F4", VA = "0x13E57F4")]
	private static bool IsFloat(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x13E5A24", Offset = "0x13E5A24", VA = "0x13E5A24")]
	private static bool IsBoolean(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x13E5C5C", Offset = "0x13E5C5C", VA = "0x13E5C5C")]
	private Color32 StringToColor32(string color_string, int value)
	{
		return default(Color32);
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x13E1940", Offset = "0x13E1940", VA = "0x13E1940")]
	private void PresetAdaptiveControllerParameters(GameObject ctrPrefab)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x13E345C", Offset = "0x13E345C", VA = "0x13E345C")]
	private void setEventSystemParameter()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x13E2B58", Offset = "0x13E2B58", VA = "0x13E2B58")]
	private void ApplyIndicatorParameters()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x13E6050", Offset = "0x13E6050", VA = "0x13E6050")]
	private void addbuttonIndicationList()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x13E6434", Offset = "0x13E6434", VA = "0x13E6434")]
	public WaveVR_ControllerLoader()
	{
	}
}
[Token(Token = "0x200006E")]
public class WaveVR_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x2000589")]
	public enum CIndex
	{
		[Token(Token = "0x400233B")]
		invalid = -1,
		[Token(Token = "0x400233C")]
		Dominant,
		[Token(Token = "0x400233D")]
		NonDominant
	}

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Dominant;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject NonDominant;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] ControllerObjects;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool[] ControllerConnected;

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x13E678C", Offset = "0x13E678C", VA = "0x13E678C")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x13E682C", Offset = "0x13E682C", VA = "0x13E682C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x13E6904", Offset = "0x13E6904", VA = "0x13E6904")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x13E6DD0", Offset = "0x13E6DD0", VA = "0x13E6DD0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x13E6E7C", Offset = "0x13E6E7C", VA = "0x13E6E7C")]
	private void BroadcastToObjects(CIndex index)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x13E6A98", Offset = "0x13E6A98", VA = "0x13E6A98")]
	private void checkConnection()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x13E7044", Offset = "0x13E7044", VA = "0x13E7044")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x13E7260", Offset = "0x13E7260", VA = "0x13E7260")]
	public WaveVR_ControllerManager()
	{
	}
}
[Token(Token = "0x200006F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB709F8", Offset = "0xB709F8")]
public class WaveVR_Distortion : MonoBehaviour
{
	[Token(Token = "0x6000519")]
	[Address(RVA = "0x13F1644", Offset = "0x13F1644", VA = "0x13F1644")]
	public WaveVR_Distortion()
	{
	}
}
[Token(Token = "0x2000070")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB70A5C", Offset = "0xB70A5C")]
public class WaveVR_FPS : MonoBehaviour
{
	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text textField;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float fps;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float targetfps;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float accTime;

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x13F274C", Offset = "0x13F274C", VA = "0x13F274C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x13F27A8", Offset = "0x13F27A8", VA = "0x13F27A8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x13F2964", Offset = "0x13F2964", VA = "0x13F2964")]
	private void Start()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x13F2998", Offset = "0x13F2998", VA = "0x13F2998")]
	public WaveVR_FPS()
	{
	}
}
[Token(Token = "0x2000071")]
public class WaveVR_IMEManager
{
	[Token(Token = "0x200058A")]
	public class InputResult
	{
		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int mId;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string mContent;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int mErrorCode;

		[Token(Token = "0x17000487")]
		public string InputContent
		{
			[Token(Token = "0x6002951")]
			[Address(RVA = "0xFC1F44", Offset = "0xFC1F44", VA = "0xFC1F44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000488")]
		public int ErrorCode
		{
			[Token(Token = "0x6002952")]
			[Address(RVA = "0xFC1F4C", Offset = "0xFC1F4C", VA = "0xFC1F4C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000489")]
		public int Id
		{
			[Token(Token = "0x6002953")]
			[Address(RVA = "0xFC1F54", Offset = "0xFC1F54", VA = "0xFC1F54")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002950")]
		[Address(RVA = "0xFC1F00", Offset = "0xFC1F00", VA = "0xFC1F00")]
		public InputResult(int id, string content, int errorCode)
		{
		}
	}

	[Token(Token = "0x200058B")]
	public class IMEParameter
	{
		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int type;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int mode;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string exist;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int cursor;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int selectStart;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int selectEnd;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double[] pos;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public double[] rot;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int width;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int height;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int shadow;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string locale;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string title;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int buttonId;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int extraInt;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string extraString;

		[Token(Token = "0x6002954")]
		[Address(RVA = "0xFC1B34", Offset = "0xFC1B34", VA = "0xFC1B34")]
		public IMEParameter(int id, int type, int mode, string exist, int cursor, int selectStart, int selectEnd, double[] pos, double[] rot, int width, int height, int shadow, string locale, string title, int extraInt, string extraString, int buttonId)
		{
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0xFC1C2C", Offset = "0xFC1C2C", VA = "0xFC1C2C")]
		public IMEParameter(int id, int type, int mode, string exist, int cursor, int selectStart, int selectEnd, double[] pos, double[] rot, int width, int height, int shadow, string locale, string title, int buttonId)
		{
		}

		[Token(Token = "0x6002956")]
		[Address(RVA = "0xFC1D08", Offset = "0xFC1D08", VA = "0xFC1D08")]
		public IMEParameter(int id, int type, int mode, string exist, int cursor, double[] pos, double[] rot, int width, int height, int shadow, string locale, string title, int buttonId)
		{
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0xFC1DD0", Offset = "0xFC1DD0", VA = "0xFC1DD0")]
		public IMEParameter(int id, int type, int mode, double[] pos, double[] rot, int width, int height, int shadow, string locale, string title, int buttonId)
		{
		}

		[Token(Token = "0x6002958")]
		[Address(RVA = "0xFC1E70", Offset = "0xFC1E70", VA = "0xFC1E70")]
		public IMEParameter(int id, int type, int mode, double[] pos, double[] rot, int width, int height, int shadow, int buttonId)
		{
		}
	}

	[Token(Token = "0x200058C")]
	public delegate void inputCompleteCallback(InputResult results);

	[Token(Token = "0x200058D")]
	private class RequestCompleteHandler : AndroidJavaProxy
	{
		[Token(Token = "0x600295D")]
		[Address(RVA = "0xFC16E0", Offset = "0xFC16E0", VA = "0xFC16E0")]
		internal RequestCompleteHandler()
		{
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0xFC1F5C", Offset = "0xFC1F5C", VA = "0xFC1F5C")]
		public void onInputCompletedwithObject(AndroidJavaObject resultObject)
		{
		}
	}

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000486")]
	private const string IME_MANAGER_CLASSNAME = "com.htc.vr.ime.client.IMEManager";

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaObject imeManager;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_IMEManager mInstance;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inited;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static inputCompleteCallback mCallback;

	[Token(Token = "0x1700002D")]
	public static WaveVR_IMEManager instance
	{
		[Token(Token = "0x600051E")]
		[Address(RVA = "0xFC082C", Offset = "0xFC082C", VA = "0xFC082C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xFC08F4", Offset = "0xFC08F4", VA = "0xFC08F4")]
	private AndroidJavaObject javaArrayFromCS(string[] values)
	{
		return null;
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xFC0BDC", Offset = "0xFC0BDC", VA = "0xFC0BDC")]
	private AndroidJavaObject javaIMEParameterFromCS(IMEParameter parameter)
	{
		return null;
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xFC1068", Offset = "0xFC1068", VA = "0xFC1068")]
	private void initializeJavaObject()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xFC1310", Offset = "0xFC1310", VA = "0xFC1310")]
	public bool isInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xFC149C", Offset = "0xFC149C", VA = "0xFC149C")]
	public void showKeyboard(IMEParameter parameter, inputCompleteCallback cb)
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xFC1774", Offset = "0xFC1774", VA = "0xFC1774")]
	public void hideKeyboard()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xFC193C", Offset = "0xFC193C", VA = "0xFC193C")]
	public int getKeyboardState()
	{
		return default(int);
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xFC08EC", Offset = "0xFC08EC", VA = "0xFC08EC")]
	public WaveVR_IMEManager()
	{
	}
}
[Token(Token = "0x2000072")]
public class WaveVR_IMEManagerWrapper
{
	[Token(Token = "0x200058E")]
	public enum Locale
	{
		[Token(Token = "0x4002353")]
		en_US,
		[Token(Token = "0x4002354")]
		zh_CN
	}

	[Token(Token = "0x200058F")]
	public enum Action
	{
		[Token(Token = "0x4002356")]
		Done,
		[Token(Token = "0x4002357")]
		Enter,
		[Token(Token = "0x4002358")]
		Search,
		[Token(Token = "0x4002359")]
		Go,
		[Token(Token = "0x400235A")]
		Send,
		[Token(Token = "0x400235B")]
		Next,
		[Token(Token = "0x400235C")]
		Submit
	}

	[Token(Token = "0x2000590")]
	public delegate void InputDoneCallback(InputResult results);

	[Token(Token = "0x2000591")]
	public class InputResult
	{
		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string mContent;

		[Token(Token = "0x6002963")]
		[Address(RVA = "0xFC2CFC", Offset = "0xFC2CFC", VA = "0xFC2CFC")]
		public InputResult(string content)
		{
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0xFC31AC", Offset = "0xFC31AC", VA = "0xFC31AC")]
		public string GetContent()
		{
			return null;
		}
	}

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int VERSION_ID;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static WaveVR_IMEManager mIMEManager;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static WaveVR_IMEManagerWrapper mInstance;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WaveVR_IMEManager.IMEParameter mParameter;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static InputDoneCallback mCallback;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int CONTROLLER_BUTTON_DEFAULT;

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xFC2538", Offset = "0xFC2538", VA = "0xFC2538")]
	private WaveVR_IMEManagerWrapper()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xFC26BC", Offset = "0xFC26BC", VA = "0xFC26BC")]
	public static WaveVR_IMEManagerWrapper GetInstance()
	{
		return null;
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xFC2878", Offset = "0xFC2878", VA = "0xFC2878")]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xFC2898", Offset = "0xFC2898", VA = "0xFC2898")]
	public void SetTitle(string title)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xFC28B8", Offset = "0xFC28B8", VA = "0xFC28B8")]
	public void SetLocale(Locale locale)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xFC29EC", Offset = "0xFC29EC", VA = "0xFC29EC")]
	public void SetCallback(InputDoneCallback callback)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xFC2A58", Offset = "0xFC2A58", VA = "0xFC2A58")]
	public void Show()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xFC2B14", Offset = "0xFC2B14", VA = "0xFC2B14")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xFC2B84", Offset = "0xFC2B84", VA = "0xFC2B84")]
	public void SetAction(Action action)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xFC2560", Offset = "0xFC2560", VA = "0xFC2560")]
	public void InitParameter()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xFC2C18", Offset = "0xFC2C18", VA = "0xFC2C18")]
	private void inputDoneCallback(WaveVR_IMEManager.InputResult results)
	{
	}
}
[Token(Token = "0x2000073")]
public class WaveVR_Init : MonoBehaviour
{
	[Token(Token = "0x4000492")]
	private const string LOG_TAG = "WaveVR_Init";

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_Init _instance;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool toCheckStatesWhenNoEvent;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WVR_Event_t vrevent;

	[Token(Token = "0x1700002E")]
	public static WaveVR_Init Instance
	{
		[Token(Token = "0x6000535")]
		[Address(RVA = "0xFC325C", Offset = "0xFC325C", VA = "0xFC325C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xFC31B4", Offset = "0xFC31B4", VA = "0xFC31B4")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xFC33DC", Offset = "0xFC33DC", VA = "0xFC33DC")]
	private void signalSurfaceState(string msg)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xFC3688", Offset = "0xFC3688", VA = "0xFC3688")]
	private void Start()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xFC37A0", Offset = "0xFC37A0", VA = "0xFC37A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xFC3970", Offset = "0xFC3970", VA = "0xFC3970")]
	private void CheckStatesWhenNoEvent()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xFC3A38", Offset = "0xFC3A38", VA = "0xFC3A38")]
	private void Update()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xFC5144", Offset = "0xFC5144", VA = "0xFC5144")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xFC3AA0", Offset = "0xFC3AA0", VA = "0xFC3AA0")]
	private void processVREvent(WVR_Event_t vrEvent)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xFC5860", Offset = "0xFC5860", VA = "0xFC5860")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xFC58FC", Offset = "0xFC58FC", VA = "0xFC58FC")]
	public WaveVR_Init()
	{
	}
}
[Token(Token = "0x2000074")]
public class WaveVR_PermissionManager
{
	[Token(Token = "0x2000592")]
	public class RequestResult
	{
		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string mPermission;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool mGranted;

		[Token(Token = "0x1700048A")]
		public string PermissionName
		{
			[Token(Token = "0x6002966")]
			[Address(RVA = "0xFC9C9C", Offset = "0xFC9C9C", VA = "0xFC9C9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048B")]
		public bool Granted
		{
			[Token(Token = "0x6002967")]
			[Address(RVA = "0xFC9CA4", Offset = "0xFC9CA4", VA = "0xFC9CA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002965")]
		[Address(RVA = "0xFC8F24", Offset = "0xFC8F24", VA = "0xFC8F24")]
		public RequestResult(string name, bool granted)
		{
		}
	}

	[Token(Token = "0x2000593")]
	public delegate void requestCompleteCallback(List<RequestResult> results);

	[Token(Token = "0x2000594")]
	public delegate void requestUsbCompleteCallback(bool result);

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_PermissionManager mInstance;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static requestCompleteCallback mCallback;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static requestUsbCompleteCallback mUsbCallback;

	[Token(Token = "0x1700002F")]
	public static WaveVR_PermissionManager instance
	{
		[Token(Token = "0x600053F")]
		[Address(RVA = "0xFC8C54", Offset = "0xFC8C54", VA = "0xFC8C54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xFC8D1C", Offset = "0xFC8D1C", VA = "0xFC8D1C")]
	public static void requestDoneCallback(List<WVR_RequestResult> results)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xFC9318", Offset = "0xFC9318", VA = "0xFC9318")]
	public static void requestUsbDoneCallback(bool result)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xFC9654", Offset = "0xFC9654", VA = "0xFC9654")]
	public bool isInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xFC9740", Offset = "0xFC9740", VA = "0xFC9740")]
	public void requestPermissions(string[] permissions, requestCompleteCallback cb)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xFC983C", Offset = "0xFC983C", VA = "0xFC983C")]
	public void requestUsbPermission(requestUsbCompleteCallback cb)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xFC9930", Offset = "0xFC9930", VA = "0xFC9930")]
	public bool isPermissionGranted(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xFC9A34", Offset = "0xFC9A34", VA = "0xFC9A34")]
	public bool shouldGrantPermission(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xFC9B38", Offset = "0xFC9B38", VA = "0xFC9B38")]
	public bool showDialogOnScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xFC8D14", Offset = "0xFC8D14", VA = "0xFC8D14")]
	public WaveVR_PermissionManager()
	{
	}
}
[Token(Token = "0x2000075")]
public class WaveVR_PointerCameraTracker : MonoBehaviour
{
	[Token(Token = "0x400049A")]
	private const string LOG_TAG = "WaveVR_PointerCameraTracker";

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject reticleObject;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WaveVR_Controller.EDeviceType type;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaveVR_ControllerPointer reticle;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 pointer_location;

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xFC9D98", Offset = "0xFC9D98", VA = "0xFC9D98")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xFC9E10", Offset = "0xFC9E10", VA = "0xFC9E10")]
	private void Start()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xFC9EA8", Offset = "0xFC9EA8", VA = "0xFC9EA8")]
	private void Update()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xFCA178", Offset = "0xFCA178", VA = "0xFCA178")]
	public void setDeviceType(WaveVR_Controller.EDeviceType value)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xFCA180", Offset = "0xFCA180", VA = "0xFCA180")]
	public WaveVR_PointerCameraTracker()
	{
	}
}
[Token(Token = "0x2000076")]
public class WaveVR_Render : MonoBehaviour
{
	[Token(Token = "0x2000595")]
	public enum StereoRenderingPath
	{
		[Token(Token = "0x4002361")]
		MultiPass = 0,
		[Token(Token = "0x4002362")]
		SinglePass = 1,
		[Token(Token = "0x4002363")]
		Auto = 1,
		[Token(Token = "0x4002364")]
		Instancing = 2
	}

	[Token(Token = "0x2000596")]
	public delegate void RenderCallback(WaveVR_Render render);

	[Token(Token = "0x2000597")]
	public delegate void RenderCallbackWithEye(WaveVR_Render render, WVR_Eye eye);

	[Token(Token = "0x2000598")]
	public delegate void RenderCallbackWithEyeAndCamera(WaveVR_Render render, WVR_Eye eye, WaveVR_Camera wvrCamera);

	[Token(Token = "0x2000599")]
	public class RenderThreadSynchronizer
	{
		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RenderTexture mutable;

		[Token(Token = "0x600297C")]
		[Address(RVA = "0x1626D58", Offset = "0x1626D58", VA = "0x1626D58")]
		public RenderThreadSynchronizer()
		{
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0x1626DF4", Offset = "0x1626DF4", VA = "0x1626DF4")]
		public void sync()
		{
		}
	}

	[Token(Token = "0x200059A")]
	private class RenderThreadContext : wvr.render.utils.Message
	{
		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public WVR_Eye eye;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int textureCount;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WVR_TextureParams_t[] textureParam;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int foveationCount;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WVR_RenderFoveationParams[] foveationParams;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int poseCount;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WVR_PoseState_t[] pose;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public WVR_SubmitExtend flag;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int renderEvent;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public WVR_RenderInitParams_t renderInitParams;

		[Token(Token = "0x600297E")]
		[Address(RVA = "0x1625B48", Offset = "0x1625B48", VA = "0x1625B48")]
		public RenderThreadContext()
		{
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0x1625BE0", Offset = "0x1625BE0", VA = "0x1625BE0")]
		public static void IssueRenderEvent(RenderThreadSyncObject syncObj, int renderEvent, WVR_RenderInitParams_t renderInitParams)
		{
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0x1625D1C", Offset = "0x1625D1C", VA = "0x1625D1C")]
		public static void ReceiveRenderEvent(PreAllocatedQueue queue)
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0x16260F4", Offset = "0x16260F4", VA = "0x16260F4")]
		public static void IssueBefore(RenderThreadSyncObject syncObj, WVR_Eye eye, int textureCount, WVR_TextureParams_t textureParam0, WVR_TextureParams_t textureParam1, int foveationCount, WVR_RenderFoveationParams foveationParams0, WVR_RenderFoveationParams foveationParams1)
		{
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0x162636C", Offset = "0x162636C", VA = "0x162636C")]
		public static void IssueAfter(RenderThreadSyncObject syncObj, WVR_Eye eye, int textureCount, WVR_TextureParams_t textureParam0, WVR_TextureParams_t textureParam1, int poseCount, WVR_PoseState_t pose0, WVR_SubmitExtend flag)
		{
		}

		[Token(Token = "0x6002983")]
		[Address(RVA = "0x16265DC", Offset = "0x16265DC", VA = "0x16265DC")]
		public static void ReceiveBefore(PreAllocatedQueue queue)
		{
		}

		[Token(Token = "0x6002984")]
		[Address(RVA = "0x162698C", Offset = "0x162698C", VA = "0x162698C")]
		public static void ReceiveAfter(PreAllocatedQueue queue)
		{
		}

		[Token(Token = "0x6002985")]
		[Address(RVA = "0x1625F30", Offset = "0x1625F30", VA = "0x1625F30")]
		public void CopyTo(RenderThreadContext dest)
		{
		}
	}

	[Token(Token = "0x200059B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB725FC", Offset = "0xB725FC")]
	private sealed class <RenderLoop>d__116 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_Render <>4__this;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <tim>5__2;

		[Token(Token = "0x1700048C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002989")]
			[Address(RVA = "0x1625920", Offset = "0x1625920", VA = "0x1625920", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600298B")]
			[Address(RVA = "0x162598C", Offset = "0x162598C", VA = "0x162598C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002986")]
		[Address(RVA = "0x1624FCC", Offset = "0x1624FCC", VA = "0x1624FCC")]
		[DebuggerHidden]
		public <RenderLoop>d__116(int <>1__state)
		{
		}

		[Token(Token = "0x6002987")]
		[Address(RVA = "0x1624FF8", Offset = "0x1624FF8", VA = "0x1624FF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002988")]
		[Address(RVA = "0x1624FFC", Offset = "0x1624FFC", VA = "0x1624FFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600298A")]
		[Address(RVA = "0x1625928", Offset = "0x1625928", VA = "0x1625928", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200059C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7260C", Offset = "0xB7260C")]
	private sealed class <>c__DisplayClass137_0
	{
		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Render <>4__this;

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaveVR_Camera vrcamera;

		[Token(Token = "0x600298C")]
		[Address(RVA = "0x16242D4", Offset = "0x16242D4", VA = "0x16242D4")]
		public <>c__DisplayClass137_0()
		{
		}

		[Token(Token = "0x600298D")]
		[Address(RVA = "0x16242DC", Offset = "0x16242DC", VA = "0x16242DC")]
		internal void <CreateCenterCamera>b__0(RenderCallbackWithEye a)
		{
		}

		[Token(Token = "0x600298E")]
		[Address(RVA = "0x16246E4", Offset = "0x16246E4", VA = "0x16246E4")]
		internal void <CreateCenterCamera>b__1(RenderCallbackWithEyeAndCamera a)
		{
		}
	}

	[Token(Token = "0x200059D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7261C", Offset = "0xB7261C")]
	private sealed class <>c__DisplayClass138_0
	{
		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Render <>4__this;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaveVR_Camera vrcamera;

		[Token(Token = "0x600298F")]
		[Address(RVA = "0x1624B14", Offset = "0x1624B14", VA = "0x1624B14")]
		public <>c__DisplayClass138_0()
		{
		}

		[Token(Token = "0x6002990")]
		[Address(RVA = "0x1624B1C", Offset = "0x1624B1C", VA = "0x1624B1C")]
		internal void <CreateEyeBoth>b__0(RenderCallbackWithEye a)
		{
		}

		[Token(Token = "0x6002991")]
		[Address(RVA = "0x1624B44", Offset = "0x1624B44", VA = "0x1624B44")]
		internal void <CreateEyeBoth>b__1(RenderCallbackWithEyeAndCamera a)
		{
		}
	}

	[Token(Token = "0x200059E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7262C", Offset = "0xB7262C")]
	private sealed class <>c__DisplayClass139_0
	{
		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Render <>4__this;

		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WVR_Eye eye;

		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_Camera vrcamera;

		[Token(Token = "0x6002992")]
		[Address(RVA = "0x1624B6C", Offset = "0x1624B6C", VA = "0x1624B6C")]
		public <>c__DisplayClass139_0()
		{
		}

		[Token(Token = "0x6002993")]
		[Address(RVA = "0x1624B74", Offset = "0x1624B74", VA = "0x1624B74")]
		internal void <CreateEye>b__0(RenderCallbackWithEye a)
		{
		}

		[Token(Token = "0x6002994")]
		[Address(RVA = "0x1624B9C", Offset = "0x1624B9C", VA = "0x1624B9C")]
		internal void <CreateEye>b__1(RenderCallbackWithEyeAndCamera a)
		{
		}
	}

	[Token(Token = "0x200059F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7263C", Offset = "0xB7263C")]
	private sealed class <>c__DisplayClass142_0
	{
		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Render head;

		[Token(Token = "0x6002995")]
		[Address(RVA = "0x1624BC8", Offset = "0x1624BC8", VA = "0x1624BC8")]
		public <>c__DisplayClass142_0()
		{
		}

		[Token(Token = "0x6002996")]
		[Address(RVA = "0x1624BD0", Offset = "0x1624BD0", VA = "0x1624BD0")]
		internal void <Expand>b__0(RenderCallback a)
		{
		}

		[Token(Token = "0x6002997")]
		[Address(RVA = "0x1624FA8", Offset = "0x1624FA8", VA = "0x1624FA8")]
		internal void <Expand>b__1(RenderCallback a)
		{
		}
	}

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string TAG;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_Render instance;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB751B8", Offset = "0xB751B8")]
	public float ipd;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int targetFPS;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool surfaceChanged;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool isNeedTimeout;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private static bool isGraphicInitialized;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private static bool isDuringFirstFrame;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static bool isSetActiveSceneChangedCB;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB751F0", Offset = "0xB751F0")]
	private uint <recommendedWidth>k__BackingField;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB75200", Offset = "0xB75200")]
	private uint <recommendedHeight>k__BackingField;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB75210", Offset = "0xB75210")]
	private float <sceneWidth>k__BackingField;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB75220", Offset = "0xB75220")]
	private float <sceneHeight>k__BackingField;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float[] projRawL;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] projRawR;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WaveVR_Utils.RigidTransform[] _eyes;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75230", Offset = "0xB75230")]
	public bool configurationChanged;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75268", Offset = "0xB75268")]
	[SerializeField]
	private StereoRenderingPath PreferredStereoRenderingPath;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB752B4", Offset = "0xB752B4")]
	private bool <IsSinglePass>k__BackingField;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RenderCallback beforeRenderExpand;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RenderCallbackWithEye beforeEyeExpand;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RenderCallbackWithEyeAndCamera afterEyeExpand;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RenderCallback afterRenderExpand;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RenderCallback onConfigurationChanged;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public RenderCallback onSDKGraphicReady;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public RenderCallback onFirstFrame;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RenderCallbackWithEyeAndCamera beforeRenderEye;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public RenderCallbackWithEyeAndCamera afterRenderEye;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private RenderThreadSynchronizer synchronizer;

	[Token(Token = "0x40004BC")]
	private const string OBJ_NAME_EYE_CENTER = "Eye Center";

	[Token(Token = "0x40004BD")]
	private const string OBJ_NAME_LEFT_EYE = "Eye Left";

	[Token(Token = "0x40004BE")]
	private const string OBJ_NAME_RIGHT_EYE = "Eye Right";

	[Token(Token = "0x40004BF")]
	private const string OBJ_NAME_BOTH_EYES = "Eye Both";

	[Token(Token = "0x40004C0")]
	private const string OBJ_NAME_EAR = "Ear";

	[Token(Token = "0x40004C1")]
	private const string OBJ_NAME_DISTORTION = "Distortion";

	[Token(Token = "0x40004C2")]
	private const string OBJ_NAME_RETICLE = "Reticle";

	[Token(Token = "0x40004C3")]
	private const string OBJ_NAME_LOADING = "Loading";

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public WaveVR_Camera centerWVRCamera;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public WaveVR_Camera lefteye;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public WaveVR_Camera righteye;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public WaveVR_Camera botheyes;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public WaveVR_Distortion distortion;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject loadingCanvas;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject ear;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB752C4", Offset = "0xB752C4")]
	private bool useLoadingCanvas;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75310", Offset = "0xB75310")]
	private Color loadingBlockerColor;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static TextureManager _textureManager;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int globalOrigin;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int globalPreferredStereoRenderingPath;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7535C", Offset = "0xB7535C")]
	private ColorSpace <QSColorSpace>k__BackingField;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public WVR_PoseOriginModel _origin;

	[Token(Token = "0x40004D2")]
	private const string WVRSinglePassDeviceName = "mockhmd";

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Coroutine renderLooperCoroutine;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private WaitForEndOfFrame cachedWaitForEndOfFrame;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool isPartialTexture;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB7536C", Offset = "0xB7536C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB7536C", Offset = "0xB7536C")]
	private float pixelDensity;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB753D4", Offset = "0xB753D4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB753D4", Offset = "0xB753D4")]
	private float overDraw;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float resolutionScale;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private readonly Rect fullViewport;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Rect drawViewport;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private WVR_TextureParams_t[] textureParams;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool previousInputFocus;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75428", Offset = "0xB75428")]
	public bool needTimeControl;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly WVR_RenderFoveationParams[] foveationParams;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static RenderThreadContext contextRTOnly;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly RenderThreadSyncObject RenderCommandRenderEvent;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly RenderThreadSyncObject RenderCommandBeforeEyeTemplate;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly RenderThreadSyncObject RenderCommandAfterEyeTemplate;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static readonly RenderThreadSyncObject[] RenderCommandBeforeEye;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static readonly RenderThreadSyncObject[] RenderCommandAfterEye;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static WVR_PoseState_t poseUsedOnSubmit;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private static WVR_SubmitExtend submitExtendFlag;

	[Token(Token = "0x17000030")]
	public static WaveVR_Render Instance
	{
		[Token(Token = "0x600054F")]
		[Address(RVA = "0xFCE684", Offset = "0xFCE684", VA = "0xFCE684")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000031")]
	public bool IsGraphicReady
	{
		[Token(Token = "0x6000550")]
		[Address(RVA = "0xFCE6EC", Offset = "0xFCE6EC", VA = "0xFCE6EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000032")]
	public uint recommendedWidth
	{
		[Token(Token = "0x6000551")]
		[Address(RVA = "0xFCE754", Offset = "0xFCE754", VA = "0xFCE754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83C04", Offset = "0xB83C04")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000552")]
		[Address(RVA = "0xFCE75C", Offset = "0xFCE75C", VA = "0xFCE75C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83C14", Offset = "0xB83C14")]
		private set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public uint recommendedHeight
	{
		[Token(Token = "0x6000553")]
		[Address(RVA = "0xFCE764", Offset = "0xFCE764", VA = "0xFCE764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83C24", Offset = "0xB83C24")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000554")]
		[Address(RVA = "0xFCE76C", Offset = "0xFCE76C", VA = "0xFCE76C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83C34", Offset = "0xB83C34")]
		private set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public float sceneWidth
	{
		[Token(Token = "0x6000555")]
		[Address(RVA = "0xFCE774", Offset = "0xFCE774", VA = "0xFCE774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83C44", Offset = "0xB83C44")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000556")]
		[Address(RVA = "0xFCE77C", Offset = "0xFCE77C", VA = "0xFCE77C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83C54", Offset = "0xB83C54")]
		private set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public float sceneHeight
	{
		[Token(Token = "0x6000557")]
		[Address(RVA = "0xFCE784", Offset = "0xFCE784", VA = "0xFCE784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83C64", Offset = "0xB83C64")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000558")]
		[Address(RVA = "0xFCE78C", Offset = "0xFCE78C", VA = "0xFCE78C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83C74", Offset = "0xB83C74")]
		private set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public WaveVR_Utils.RigidTransform[] eyes
	{
		[Token(Token = "0x6000559")]
		[Address(RVA = "0xFCE794", Offset = "0xFCE794", VA = "0xFCE794")]
		get
		{
			return null;
		}
		[Token(Token = "0x600055A")]
		[Address(RVA = "0xFCE79C", Offset = "0xFCE79C", VA = "0xFCE79C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public StereoRenderingPath acturalStereoRenderingPath
	{
		[Token(Token = "0x600055B")]
		[Address(RVA = "0xFCE7A4", Offset = "0xFCE7A4", VA = "0xFCE7A4")]
		get
		{
			return default(StereoRenderingPath);
		}
	}

	[Token(Token = "0x17000038")]
	public bool IsSinglePass
	{
		[Token(Token = "0x600055C")]
		[Address(RVA = "0xFCE7AC", Offset = "0xFCE7AC", VA = "0xFCE7AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83C84", Offset = "0xB83C84")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600055D")]
		[Address(RVA = "0xFCE7B4", Offset = "0xFCE7B4", VA = "0xFCE7B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83C94", Offset = "0xB83C94")]
		private set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public bool isExpanded
	{
		[Token(Token = "0x600055F")]
		[Address(RVA = "0xFCE7C0", Offset = "0xFCE7C0", VA = "0xFCE7C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003A")]
	public Camera centerCamera
	{
		[Token(Token = "0x6000560")]
		[Address(RVA = "0xFCEA2C", Offset = "0xFCEA2C", VA = "0xFCEA2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003B")]
	public TextureManager textureManager
	{
		[Token(Token = "0x6000561")]
		[Address(RVA = "0xFCEAC4", Offset = "0xFCEAC4", VA = "0xFCEAC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000562")]
		[Address(RVA = "0xFCEB2C", Offset = "0xFCEB2C", VA = "0xFCEB2C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	[HideInInspector]
	public ColorSpace QSColorSpace
	{
		[Token(Token = "0x6000563")]
		[Address(RVA = "0xFCEB98", Offset = "0xFCEB98", VA = "0xFCEB98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83CA4", Offset = "0xB83CA4")]
		get
		{
			return default(ColorSpace);
		}
		[Token(Token = "0x6000564")]
		[Address(RVA = "0xFCEBA0", Offset = "0xFCEBA0", VA = "0xFCEBA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83CB4", Offset = "0xB83CB4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public WVR_PoseOriginModel origin
	{
		[Token(Token = "0x6000565")]
		[Address(RVA = "0xFCEBA8", Offset = "0xFCEBA8", VA = "0xFCEBA8")]
		get
		{
			return default(WVR_PoseOriginModel);
		}
		[Token(Token = "0x6000566")]
		[Address(RVA = "0xFCEBB0", Offset = "0xFCEBB0", VA = "0xFCEBB0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public float PixelDensity
	{
		[Token(Token = "0x600057D")]
		[Address(RVA = "0xFD4868", Offset = "0xFD4868", VA = "0xFD4868")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700003F")]
	public float OverDraw
	{
		[Token(Token = "0x600057E")]
		[Address(RVA = "0xFD4870", Offset = "0xFD4870", VA = "0xFD4870")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000040")]
	public float ResolutionScale
	{
		[Token(Token = "0x600057F")]
		[Address(RVA = "0xFD4878", Offset = "0xFD4878", VA = "0xFD4878")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600055E")]
	public T GetComponentFromChildren<T>(string name)
	{
		return (T)null;
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xFCF948", Offset = "0xFCF948", VA = "0xFCF948")]
	public static void InitializeGraphic([Optional] RenderThreadSynchronizer synchronizer)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xFCEBB8", Offset = "0xFCEBB8", VA = "0xFCEBB8")]
	public void OnIpdChanged(params object[] args)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xFCFC40", Offset = "0xFCFC40", VA = "0xFCFC40")]
	public static bool IsVRSinglePassBuildTimeSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xFCFC48", Offset = "0xFCFC48", VA = "0xFCFC48")]
	private bool checkVRSinglePassSupport()
	{
		return default(bool);
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xFD025C", Offset = "0xFD025C", VA = "0xFD025C")]
	private void SwitchDeviceView(bool enableSinglepass)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xFD0278", Offset = "0xFD0278", VA = "0xFD0278")]
	private void SwitchKeyword(bool enable)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xFD0300", Offset = "0xFD0300", VA = "0xFD0300")]
	private void Awake()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xFD0828", Offset = "0xFD0828", VA = "0xFD0828")]
	private void enableRenderLoop(bool start)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xFD090C", Offset = "0xFD090C", VA = "0xFD090C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xFD0C34", Offset = "0xFD0C34", VA = "0xFD0C34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xFD0FB4", Offset = "0xFD0FB4", VA = "0xFD0FB4")]
	private static void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xFC3440", Offset = "0xFC3440", VA = "0xFC3440")]
	public static void signalSurfaceState(string msg)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xFD21B4", Offset = "0xFD21B4", VA = "0xFD21B4")]
	private static bool checkSurfaceChanged()
	{
		return default(bool);
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xFD2348", Offset = "0xFD2348", VA = "0xFD2348")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xFD266C", Offset = "0xFD266C", VA = "0xFD266C")]
	public int SetQualityLevel(int level, bool applyExpensiveChanges = true)
	{
		return default(int);
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xFD2714", Offset = "0xFD2714", VA = "0xFD2714")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xFD2788", Offset = "0xFD2788", VA = "0xFD2788")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xFD2828", Offset = "0xFD2828", VA = "0xFD2828")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xFD2C94", Offset = "0xFD2C94", VA = "0xFD2C94")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xFD0898", Offset = "0xFD0898", VA = "0xFD0898")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83CC4", Offset = "0xB83CC4")]
	private IEnumerator RenderLoop()
	{
		return null;
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xFD2E58", Offset = "0xFD2E58", VA = "0xFD2E58")]
	private void RenderCycle()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xFD47B8", Offset = "0xFD47B8", VA = "0xFD47B8")]
	private void GetSubmitTextureParams(WVR_Eye eye, IntPtr texture, [Out] WVR_TextureParams_t[] textureParams, ref WVR_SubmitExtend flag)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xFCFAA0", Offset = "0xFCFAA0", VA = "0xFCFAA0")]
	private void UpdateViewports()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xFD4880", Offset = "0xFD4880", VA = "0xFD4880")]
	public void SetResolutionScale(float scale)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xFD3254", Offset = "0xFD3254", VA = "0xFD3254")]
	private void RenderEyeBoth(WaveVR_Camera wvrCamera)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xFD3B64", Offset = "0xFD3B64", VA = "0xFD3B64")]
	private void RenderEye(WaveVR_Camera wvrCamera, WVR_Eye eye)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xFD4A84", Offset = "0xFD4A84", VA = "0xFD4A84")]
	private static void AddRaycaster(GameObject obj)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xFD4C4C", Offset = "0xFD4C4C", VA = "0xFD4C4C")]
	private WaveVR_Camera CreateCenterCamera()
	{
		return null;
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xFD537C", Offset = "0xFD537C", VA = "0xFD537C")]
	private WaveVR_Camera CreateEyeBoth()
	{
		return null;
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xFD6910", Offset = "0xFD6910", VA = "0xFD6910")]
	private WaveVR_Camera CreateEye(WVR_Eye eye)
	{
		return null;
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xFD71A4", Offset = "0xFD71A4", VA = "0xFD71A4")]
	private void createLoadingBlack()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xFD0B7C", Offset = "0xFD0B7C", VA = "0xFD0B7C")]
	private void setLoadingCanvas(bool enabled)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xFC5374", Offset = "0xFC5374", VA = "0xFC5374")]
	public static void Expand(WaveVR_Render head)
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xFD7520", Offset = "0xFD7520", VA = "0xFD7520")]
	public static void Collapse(WaveVR_Render head)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xFD708C", Offset = "0xFD708C", VA = "0xFD708C")]
	private float GetFieldOfView(float[] projRaw)
	{
		return default(float);
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xFD7894", Offset = "0xFD7894", VA = "0xFD7894")]
	private static float[] GetEditorProjectionRaw(float fov, float width, float height)
	{
		return null;
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xFD7A1C", Offset = "0xFD7A1C", VA = "0xFD7A1C")]
	public static void debugLogMatrix(Matrix4x4 m, string name)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xFD5EA4", Offset = "0xFD5EA4", VA = "0xFD5EA4")]
	private static Matrix4x4 MakeCullingProjectionMatrix(float[] projRawL, float[] projRawR, float near, float far, Vector3 leftEyePosition, Vector3 rightEyePosition, bool lrtbWithNear1 = false)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xFD5D00", Offset = "0xFD5D00", VA = "0xFD5D00")]
	private static Matrix4x4 GetProjection(float[] projRaw, float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xFD826C", Offset = "0xFD826C", VA = "0xFD826C")]
	public static Matrix4x4 MakeProjection(float l, float r, float t, float b, float n, float f, bool lrtbWithNear1 = false)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xFD4570", Offset = "0xFD4570", VA = "0xFD4570")]
	private void TimeControl()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xFD490C", Offset = "0xFD490C", VA = "0xFD490C")]
	public void SafeExecuteRenderEyeCallback(RenderCallbackWithEyeAndCamera multi, WVR_Eye eye, WaveVR_Camera wvrCamera)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xFD8434", Offset = "0xFD8434", VA = "0xFD8434")]
	public static void SetFoveatedRenderingParameter(WVR_Eye eye, float ndcFocalPointX, float ndcFocalPointY, float clearVisionFOV, WVR_PeripheralQuality peripheralQuality)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xFD8574", Offset = "0xFD8574", VA = "0xFD8574")]
	public static void SetPoseUsedOnSubmit(WVR_PoseState_t pose)
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xFD8604", Offset = "0xFD8604", VA = "0xFD8604")]
	public static void ResetPoseUsedOnSubmit()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xFD866C", Offset = "0xFD866C", VA = "0xFD866C")]
	public static void SetSubmitExtendedFlag(WVR_SubmitExtend flag)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xFD86D8", Offset = "0xFD86D8", VA = "0xFD86D8")]
	public WaveVR_Render()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xFD8DE8", Offset = "0xFD8DE8", VA = "0xFD8DE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83D28", Offset = "0xB83D28")]
	private void <Start>b__105_0(RenderCallback a)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xFD8E10", Offset = "0xFD8E10", VA = "0xFD8E10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83D38", Offset = "0xB83D38")]
	private void <RenderLoop>b__116_0(RenderCallback a)
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xFD8E38", Offset = "0xFD8E38", VA = "0xFD8E38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83D48", Offset = "0xB83D48")]
	private void <RenderLoop>b__116_1(RenderCallback a)
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xFD8E60", Offset = "0xFD8E60", VA = "0xFD8E60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83D58", Offset = "0xB83D58")]
	private void <RenderCycle>b__117_0(RenderCallback a)
	{
	}
}
[Token(Token = "0x2000077")]
public class WaveVR_RenderMask : MonoBehaviour
{
	[Token(Token = "0x20005A0")]
	private class Data
	{
		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WVR_Eye eye;

		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_Camera wvrCamera;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Mesh mesh;

		[Token(Token = "0x6002998")]
		[Address(RVA = "0x16274F4", Offset = "0x16274F4", VA = "0x16274F4")]
		public Data()
		{
		}
	}

	[Token(Token = "0x20005A1")]
	public delegate void BeforeCreateMaskCommandBuffer(WaveVR_RenderMask renderMask);

	[Token(Token = "0x20005A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7264C", Offset = "0xB7264C")]
	private sealed class <Initialization>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_RenderMask <>4__this;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaveVR_Render <render>5__2;

		[Token(Token = "0x1700048E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029A0")]
			[Address(RVA = "0x1629CBC", Offset = "0x1629CBC", VA = "0x1629CBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029A2")]
			[Address(RVA = "0x1629D28", Offset = "0x1629D28", VA = "0x1629D28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600299D")]
		[Address(RVA = "0x1628664", Offset = "0x1628664", VA = "0x1628664")]
		[DebuggerHidden]
		public <Initialization>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600299E")]
		[Address(RVA = "0x1629928", Offset = "0x1629928", VA = "0x1629928", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600299F")]
		[Address(RVA = "0x162992C", Offset = "0x162992C", VA = "0x162992C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029A1")]
		[Address(RVA = "0x1629CC4", Offset = "0x1629CC4", VA = "0x1629CC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string TAG;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Data> data;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isGraphicReady;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isCameraReady;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader renderMaskShader;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material renderMaskMaterial;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Mesh renderMaskMeshLeft;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Mesh renderMaskMeshRight;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Mesh renderMaskMeshBoth;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color32 color;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BeforeCreateMaskCommandBuffer beforeCreateMaskCommandBuffer;

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x1626EE0", Offset = "0x1626EE0", VA = "0x1626EE0")]
	private bool CheckCameras()
	{
		return default(bool);
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x1627058", Offset = "0x1627058", VA = "0x1627058")]
	private bool CheckCommandBuffers()
	{
		return default(bool);
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x1627160", Offset = "0x1627160", VA = "0x1627160")]
	private void PrepareCameras(WaveVR_Render render)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x1627528", Offset = "0x1627528", VA = "0x1627528")]
	private void MyPreCull(Camera cam)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x1627D2C", Offset = "0x1627D2C", VA = "0x1627D2C")]
	private void MyPreRender(Camera cam)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x1628054", Offset = "0x1628054", VA = "0x1628054")]
	private void OnConfigurationChanged(WaveVR_Render render)
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x1628058", Offset = "0x1628058", VA = "0x1628058")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x1628204", Offset = "0x1628204", VA = "0x1628204")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x16285F0", Offset = "0x16285F0", VA = "0x16285F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83D68", Offset = "0xB83D68")]
	private IEnumerator Initialization()
	{
		return null;
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x1628690", Offset = "0x1628690", VA = "0x1628690")]
	public void SetMaskColor(Color32 c)
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x1628788", Offset = "0x1628788", VA = "0x1628788")]
	private Mesh GetStencilMesh(WVR_Eye eye)
	{
		return null;
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x1629034", Offset = "0x1629034", VA = "0x1629034")]
	private Mesh GetEyeBothMesh(Mesh l, Mesh r)
	{
		return null;
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x162755C", Offset = "0x162755C", VA = "0x162755C")]
	private void createMaskCommandBuffer()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x1628024", Offset = "0x1628024", VA = "0x1628024")]
	private void addRenderMaskCommandBuffer(Data d)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x1627EA8", Offset = "0x1627EA8", VA = "0x1627EA8")]
	private void removeRenderMaskCommandBuffer(Data d)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x1628580", Offset = "0x1628580", VA = "0x1628580")]
	private void cleanData()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x1629470", Offset = "0x1629470", VA = "0x1629470")]
	public WaveVR_RenderMask()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x1629550", Offset = "0x1629550", VA = "0x1629550")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83DCC", Offset = "0xB83DCC")]
	private void <createMaskCommandBuffer>b__25_0(BeforeCreateMaskCommandBuffer a)
	{
	}
}
[Token(Token = "0x2000078")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB70AC0", Offset = "0xB70AC0")]
public class WaveVR_Reticle : MonoBehaviour
{
	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ListenToDevice;

	[Token(Token = "0x40004F3")]
	private const string LOG_TAG = "WaveVR_Reticle";

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int reticleSegments;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float reticleGrowthSpeed;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color reticleColor;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool colorFlickerPerSecond;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool deepeningColorRotation;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int rotationSpeed;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float reticleInnerDiameter;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float reticleOuterDiameter;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float interactObjInnerDiameter;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float interactObjOuterDiameter;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float kReticleDistanceMax;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material materialComp;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Mesh mesh;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float reticleDistanceInMeters;

	[Token(Token = "0x4000503")]
	private const float kReticleDistanceMin = 1f;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float reticleInnerAngle;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float reticleOuterAngle;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float kReticleMinInnerAngle;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float kReticleMinOuterAngle;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float kReticleGrowthInnerAngle;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float kReticleGrowthOuterAngle;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Color colorFactor;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float colorFlickerTime;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float progressTime;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool isTriggerProgress;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int rotSpeedLimit;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool enabledReticle;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	private bool meshIsCreated;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int internalRotationSpeed;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int colorIter;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float[] colorRotation;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int[] rotSpeedBound;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private MaterialPropertyBlock materialProperty;

	[Token(Token = "0x4000516")]
	private const float reticleInnerDiameterMin = 0f;

	[Token(Token = "0x4000517")]
	private const float reticleInnerDiameterMax = 0.0002f;

	[Token(Token = "0x4000518")]
	private const float reticleOuterDiameterMin = 0.005f;

	[Token(Token = "0x4000519")]
	private const float reticleOuterDiameterMax = 0.01f;

	[Token(Token = "0x400051A")]
	private const float interactObjInnerDiameterMin = 0.015f;

	[Token(Token = "0x400051B")]
	private const float interactObjInnerDiameterMax = 0.022f;

	[Token(Token = "0x400051C")]
	private const float interactObjOuterDiameterMin = 0.026f;

	[Token(Token = "0x400051D")]
	private const float interactObjOuterDiameterMax = 0.035f;

	[Token(Token = "0x400051E")]
	private const float kReticleDistanceValidateMax = 10f;

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x162F2AC", Offset = "0x162F2AC", VA = "0x162F2AC")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x162F354", Offset = "0x162F354", VA = "0x162F354")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x1630A30", Offset = "0x1630A30", VA = "0x1630A30")]
	private void setReticleAngle()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x1630B1C", Offset = "0x1630B1C", VA = "0x1630B1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x1630954", Offset = "0x1630954", VA = "0x1630954")]
	private void initialReticle()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x16309FC", Offset = "0x16309FC", VA = "0x16309FC")]
	private void removeReticle()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x1631470", Offset = "0x1631470", VA = "0x1631470")]
	private void CreateGazePointer()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x163127C", Offset = "0x163127C", VA = "0x163127C")]
	private void UpdateRotSpeedBound(int speedSetting)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x16317C0", Offset = "0x16317C0", VA = "0x16317C0")]
	public void ShowReticle()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x16317CC", Offset = "0x16317CC", VA = "0x16317CC")]
	public void RemoveReticle()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x16317D4", Offset = "0x16317D4", VA = "0x16317D4")]
	public void SetColorFlicker(bool switchOn)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x16317E0", Offset = "0x16317E0", VA = "0x16317E0")]
	public bool GetColorFlicker()
	{
		return default(bool);
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x16317E8", Offset = "0x16317E8", VA = "0x16317E8")]
	public void OnGazeEnter(Camera camera, GameObject target, Vector3 intersectionPosition, bool isInteractive)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x16318E4", Offset = "0x16318E4", VA = "0x16318E4")]
	public void OnGazeStay(Camera camera, GameObject target, Vector3 intersectionPosition, bool isInteractive)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x16318EC", Offset = "0x16318EC", VA = "0x16318EC")]
	public void OnGazeExit(Camera camera, GameObject target)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x1631900", Offset = "0x1631900", VA = "0x1631900")]
	public void OnGazeTriggerStart(Camera camera)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x1631904", Offset = "0x1631904", VA = "0x1631904")]
	public void OnGazeTriggerEnd(Camera camera)
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x1631908", Offset = "0x1631908", VA = "0x1631908")]
	public void GetPointerRadius(out float innerRadius, out float outerRadius)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x16319BC", Offset = "0x16319BC", VA = "0x16319BC")]
	public void setProgressBarTime(float time)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x16319C4", Offset = "0x16319C4", VA = "0x16319C4")]
	public float getReticleCurrentDistance()
	{
		return default(float);
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x16319CC", Offset = "0x16319CC", VA = "0x16319CC")]
	public void triggerProgressBar(bool switchOn)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x16317F0", Offset = "0x16317F0", VA = "0x16317F0")]
	private void SetGazeTarget(Vector3 target, bool interactive)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x1631A64", Offset = "0x1631A64", VA = "0x1631A64")]
	public void SetReticleColor(Color reticle_color)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x162F3B0", Offset = "0x162F3B0", VA = "0x162F3B0")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x16321A0", Offset = "0x16321A0", VA = "0x16321A0")]
	private bool IsBoolean(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x1631AE0", Offset = "0x1631AE0", VA = "0x1631AE0")]
	private bool IsFloat(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x1631C8C", Offset = "0x1631C8C", VA = "0x1631C8C")]
	private bool IsNumeric(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x163089C", Offset = "0x163089C", VA = "0x163089C")]
	private void Validate()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x1631E48", Offset = "0x1631E48", VA = "0x1631E48")]
	private Color32 StringToColor32(string color_string)
	{
		return default(Color32);
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x1632350", Offset = "0x1632350", VA = "0x1632350")]
	public WaveVR_Reticle()
	{
	}
}
[Token(Token = "0x2000079")]
public class WaveVR_Screenshot
{
	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x16323E8", Offset = "0x16323E8", VA = "0x16323E8")]
	private static void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x1632488", Offset = "0x1632488", VA = "0x1632488")]
	public static bool requestScreenshot(WVR_ScreenshotMode mode, string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x1632774", Offset = "0x1632774", VA = "0x1632774")]
	public WaveVR_Screenshot()
	{
	}
}
[Token(Token = "0x200007A")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB70B24", Offset = "0xB70B24")]
public class WaveVR_TrackedButtons : MonoBehaviour
{
	[Token(Token = "0x20005A3")]
	public struct ClickedEventArgs
	{
		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_DeviceType device;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint flags;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 axis;
	}

	[Token(Token = "0x20005A4")]
	public delegate void ClickedEventHandler(object sender, ClickedEventArgs e);

	[Token(Token = "0x4000520")]
	public const string LOG_TAG = "WaveVR_TrackedButtons";

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ulong Input_Mask_Menu;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ulong Input_Mask_Grip;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static ulong Input_Mask_DPad_Left;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static ulong Input_Mask_DPad_Up;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static ulong Input_Mask_DPad_Right;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static ulong Input_Mask_DPad_Down;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static ulong Input_Mask_Volume_Up;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static ulong Input_Mask_Volume_Down;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static ulong Input_Mask_Hmd_Enter;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static ulong Input_Mask_Touchpad;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static ulong Input_Mask_Trigger;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static ulong Input_Mask_DigitalTrigger;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool triggerPressed;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool menuPressed;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool padPressed;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	private bool gripPressed;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool padTouched;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool hmdEnterPressed;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private uint inputMask;

	[Token(Token = "0x14000005")]
	public event ClickedEventHandler MenuButtonClicked
	{
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x1636B7C", Offset = "0x1636B7C", VA = "0x1636B7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83DDC", Offset = "0xB83DDC")]
		add
		{
		}
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x1636C20", Offset = "0x1636C20", VA = "0x1636C20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83DEC", Offset = "0xB83DEC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event ClickedEventHandler MenuButtonUnclicked
	{
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x1636CC4", Offset = "0x1636CC4", VA = "0x1636CC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83DFC", Offset = "0xB83DFC")]
		add
		{
		}
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x1636D68", Offset = "0x1636D68", VA = "0x1636D68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83E0C", Offset = "0xB83E0C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event ClickedEventHandler TriggerClicked
	{
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x1636E0C", Offset = "0x1636E0C", VA = "0x1636E0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83E1C", Offset = "0xB83E1C")]
		add
		{
		}
		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x1636EB0", Offset = "0x1636EB0", VA = "0x1636EB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83E2C", Offset = "0xB83E2C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event ClickedEventHandler TriggerUnclicked
	{
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x1636F54", Offset = "0x1636F54", VA = "0x1636F54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83E3C", Offset = "0xB83E3C")]
		add
		{
		}
		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x1636FF8", Offset = "0x1636FF8", VA = "0x1636FF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83E4C", Offset = "0xB83E4C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event ClickedEventHandler PadClicked
	{
		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x163709C", Offset = "0x163709C", VA = "0x163709C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83E5C", Offset = "0xB83E5C")]
		add
		{
		}
		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x1637140", Offset = "0x1637140", VA = "0x1637140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83E6C", Offset = "0xB83E6C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event ClickedEventHandler PadUnclicked
	{
		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x16371E4", Offset = "0x16371E4", VA = "0x16371E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83E7C", Offset = "0xB83E7C")]
		add
		{
		}
		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x1637288", Offset = "0x1637288", VA = "0x1637288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83E8C", Offset = "0xB83E8C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event ClickedEventHandler PadTouched
	{
		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x163732C", Offset = "0x163732C", VA = "0x163732C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83E9C", Offset = "0xB83E9C")]
		add
		{
		}
		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x16373D0", Offset = "0x16373D0", VA = "0x16373D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83EAC", Offset = "0xB83EAC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event ClickedEventHandler PadUntouched
	{
		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x1637474", Offset = "0x1637474", VA = "0x1637474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83EBC", Offset = "0xB83EBC")]
		add
		{
		}
		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x1637518", Offset = "0x1637518", VA = "0x1637518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83ECC", Offset = "0xB83ECC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event ClickedEventHandler Gripped
	{
		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x16375BC", Offset = "0x16375BC", VA = "0x16375BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83EDC", Offset = "0xB83EDC")]
		add
		{
		}
		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x1637660", Offset = "0x1637660", VA = "0x1637660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83EEC", Offset = "0xB83EEC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event ClickedEventHandler Ungripped
	{
		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x1637704", Offset = "0x1637704", VA = "0x1637704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83EFC", Offset = "0xB83EFC")]
		add
		{
		}
		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x16377A8", Offset = "0x16377A8", VA = "0x16377A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83F0C", Offset = "0xB83F0C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event ClickedEventHandler HmdEnterClicked
	{
		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x163784C", Offset = "0x163784C", VA = "0x163784C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83F1C", Offset = "0xB83F1C")]
		add
		{
		}
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x16378F0", Offset = "0x16378F0", VA = "0x16378F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83F2C", Offset = "0xB83F2C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event ClickedEventHandler HmdEnterUnclicked
	{
		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x1637994", Offset = "0x1637994", VA = "0x1637994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83F3C", Offset = "0xB83F3C")]
		add
		{
		}
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x1637A38", Offset = "0x1637A38", VA = "0x1637A38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83F4C", Offset = "0xB83F4C")]
		remove
		{
		}
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x1637ADC", Offset = "0x1637ADC", VA = "0x1637ADC", Slot = "4")]
	public virtual void OnTriggerClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x1637F9C", Offset = "0x1637F9C", VA = "0x1637F9C", Slot = "5")]
	public virtual void OnTriggerUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x1638054", Offset = "0x1638054", VA = "0x1638054", Slot = "6")]
	public virtual void OnMenuClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x163810C", Offset = "0x163810C", VA = "0x163810C", Slot = "7")]
	public virtual void OnMenuUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x16381C4", Offset = "0x16381C4", VA = "0x16381C4", Slot = "8")]
	public virtual void OnPadClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x163827C", Offset = "0x163827C", VA = "0x163827C", Slot = "9")]
	public virtual void OnPadUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x1638334", Offset = "0x1638334", VA = "0x1638334", Slot = "10")]
	public virtual void OnPadTouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x16383EC", Offset = "0x16383EC", VA = "0x16383EC", Slot = "11")]
	public virtual void OnPadUntouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x16384A4", Offset = "0x16384A4", VA = "0x16384A4", Slot = "12")]
	public virtual void OnGripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x163855C", Offset = "0x163855C", VA = "0x163855C", Slot = "13")]
	public virtual void OnUngripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x1638614", Offset = "0x1638614", VA = "0x1638614", Slot = "14")]
	public virtual void OnHmdEnterClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x16386CC", Offset = "0x16386CC", VA = "0x16386CC", Slot = "15")]
	public virtual void OnHmdEnterUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x1638784", Offset = "0x1638784", VA = "0x1638784")]
	private Vector2 GetAxis(WVR_AnalogState_t[] analogArray, WVR_InputId _id, WVR_AnalogType aType, int _count)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x1638C04", Offset = "0x1638C04", VA = "0x1638C04")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x1639220", Offset = "0x1639220", VA = "0x1639220")]
	public WaveVR_TrackedButtons()
	{
	}
}
[Token(Token = "0x200007B")]
public static class WaveVR_Utils
{
	[Token(Token = "0x20005A5")]
	public enum DegreeField
	{
		[Token(Token = "0x4002389")]
		DOF3,
		[Token(Token = "0x400238A")]
		DOF6
	}

	[Token(Token = "0x20005A6")]
	public enum WVR_PerfLevel
	{
		[Token(Token = "0x400238C")]
		System,
		[Token(Token = "0x400238D")]
		Minimum,
		[Token(Token = "0x400238E")]
		Medium,
		[Token(Token = "0x400238F")]
		Maximum
	}

	[Token(Token = "0x20005A7")]
	public struct WVR_ButtonState_t
	{
		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong BtnPressed;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong BtnTouched;
	}

	[Token(Token = "0x20005A8")]
	public class OEMConfig
	{
		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isSetCallback;

		[Token(Token = "0x60029A7")]
		[Address(RVA = "0x163C47C", Offset = "0x163C47C", VA = "0x163C47C")]
		public static void OEMConfig_Changed()
		{
		}

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0x163C5C0", Offset = "0x163C5C0", VA = "0x163C5C0")]
		public static void initOEMConfig()
		{
		}

		[Token(Token = "0x60029A9")]
		[Address(RVA = "0x1631A70", Offset = "0x1631A70", VA = "0x1631A70")]
		public static string getControllerConfig()
		{
			return null;
		}

		[Token(Token = "0x60029AA")]
		[Address(RVA = "0x162BBBC", Offset = "0x162BBBC", VA = "0x162BBBC")]
		public static string getBatteryConfig()
		{
			return null;
		}

		[Token(Token = "0x60029AB")]
		[Address(RVA = "0x163C6D0", Offset = "0x163C6D0", VA = "0x163C6D0")]
		public static string getSingleBeamEnableConfig()
		{
			return null;
		}

		[Token(Token = "0x60029AC")]
		[Address(RVA = "0x163C740", Offset = "0x163C740", VA = "0x163C740")]
		public OEMConfig()
		{
		}
	}

	[Token(Token = "0x20005A9")]
	public class Event
	{
		[Token(Token = "0x20008EA")]
		public delegate void Handler(params object[] args);

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string DEVICE_CONNECTED;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string NEW_POSES;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string AFTER_NEW_POSES;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string ALL_VREVENT;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string BATTERY_STATUS_UPDATE;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string CONTROLLER_MODEL_LOADED;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string CONTROLLER_MODEL_UNLOADED;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string PRE_CULL_LEFT;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string PRE_CULL_RIGHT;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string SWIPE_EVENT;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string SYSTEMFOCUS_CHANGED;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string INTERACTION_MODE_CHANGED;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string ADAPTIVE_CONTROLLER_READY;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string RENDER_CONFIGURATION_CHANGED;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB82CA0", Offset = "0xB82CA0")]
		public static string DEVICE_ROLE_CHANGED;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string DS_ASSETS_NOT_FOUND;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string OEM_CONFIG_CHANGED;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string DEVICE_STATUS_UPDATE;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static string IPD_CHANGED;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static string HAND_STATIC_GESTURE_LEFT;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static string HAND_STATIC_GESTURE_RIGHT;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static string HAND_DYNAMIC_GESTURE_LEFT;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static string HAND_DYNAMIC_GESTURE_RIGHT;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public static string HAND_GESTURE_STATUS;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static string HAND_TRACKING_STATUS;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private static Dictionary<string, List<Handler>> listeners;

		[Token(Token = "0x60029AE")]
		[Address(RVA = "0x162B4A8", Offset = "0x162B4A8", VA = "0x162B4A8")]
		public static void Listen(string message, Handler action)
		{
		}

		[Token(Token = "0x60029AF")]
		[Address(RVA = "0x162B7F8", Offset = "0x162B7F8", VA = "0x162B7F8")]
		public static void Remove(string message, Handler action)
		{
		}

		[Token(Token = "0x60029B0")]
		[Address(RVA = "0x162E6F8", Offset = "0x162E6F8", VA = "0x162E6F8")]
		public static void Send(string message, params object[] args)
		{
		}

		[Token(Token = "0x60029B1")]
		[Address(RVA = "0x163B898", Offset = "0x163B898", VA = "0x163B898")]
		public Event()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005AA")]
	public struct RigidTransform
	{
		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x17000490")]
		public static RigidTransform identity
		{
			[Token(Token = "0x60029B3")]
			[Address(RVA = "0x163CA28", Offset = "0x163CA28", VA = "0x163CA28")]
			get
			{
				return default(RigidTransform);
			}
		}

		[Token(Token = "0x60029B4")]
		[Address(RVA = "0xC472B4", Offset = "0xC472B4", VA = "0xC472B4")]
		public RigidTransform(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x60029B5")]
		[Address(RVA = "0xC472C8", Offset = "0xC472C8", VA = "0xC472C8")]
		public RigidTransform(Transform t)
		{
		}

		[Token(Token = "0x60029B6")]
		[Address(RVA = "0xC472D0", Offset = "0xC472D0", VA = "0xC472D0")]
		public RigidTransform(WVR_Matrix4f_t pose)
		{
		}

		[Token(Token = "0x60029B7")]
		[Address(RVA = "0x162E110", Offset = "0x162E110", VA = "0x162E110")]
		public static Matrix4x4 toMatrix44(WVR_Matrix4f_t pose, bool glToUnity = true)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60029B8")]
		[Address(RVA = "0x163CC84", Offset = "0x163CC84", VA = "0x163CC84")]
		public static WVR_Matrix4f_t ToWVRMatrix(Matrix4x4 m, bool unityToGL = true)
		{
			return default(WVR_Matrix4f_t);
		}

		[Token(Token = "0x60029B9")]
		[Address(RVA = "0x163CEA4", Offset = "0x163CEA4", VA = "0x163CEA4")]
		public static Vector3 ToUnityPos(Vector3 glPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60029BA")]
		[Address(RVA = "0xC47314", Offset = "0xC47314", VA = "0xC47314")]
		public void update(WVR_Matrix4f_t pose)
		{
		}

		[Token(Token = "0x60029BB")]
		[Address(RVA = "0xC47358", Offset = "0xC47358", VA = "0xC47358")]
		public void update(Vector3 position, Quaternion orientation)
		{
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0xC4736C", Offset = "0xC4736C", VA = "0xC4736C", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0xC47374", Offset = "0xC47374", VA = "0xC47374", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60029BE")]
		[Address(RVA = "0x163D194", Offset = "0x163D194", VA = "0x163D194")]
		public static bool operator ==(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x60029BF")]
		[Address(RVA = "0x163D2CC", Offset = "0x163D2CC", VA = "0x163D2CC")]
		public static bool operator !=(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x60029C0")]
		[Address(RVA = "0x163D404", Offset = "0x163D404", VA = "0x163D404")]
		public static RigidTransform operator *(RigidTransform a, RigidTransform b)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60029C1")]
		[Address(RVA = "0xC473B0", Offset = "0xC473B0", VA = "0xC473B0")]
		public void Inverse()
		{
		}

		[Token(Token = "0x60029C2")]
		[Address(RVA = "0xC473B8", Offset = "0xC473B8", VA = "0xC473B8")]
		public RigidTransform GetInverse()
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60029C3")]
		[Address(RVA = "0xC473C0", Offset = "0xC473C0", VA = "0xC473C0")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60029C4")]
		[Address(RVA = "0x163D7C8", Offset = "0x163D7C8", VA = "0x163D7C8")]
		public static Vector3 operator *(RigidTransform t, Vector3 v)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x20005AB")]
	public class Trace
	{
		[Token(Token = "0x60029C5")]
		[Address(RVA = "0x163D7CC", Offset = "0x163D7CC", VA = "0x163D7CC")]
		public static void BeginSection(string sectionName, bool inRenderThread = true)
		{
		}

		[Token(Token = "0x60029C6")]
		[Address(RVA = "0x163D940", Offset = "0x163D940", VA = "0x163D940")]
		public static void EndSection(bool inRenderThread = true)
		{
		}

		[Token(Token = "0x60029C7")]
		[Address(RVA = "0x163D9C4", Offset = "0x163D9C4", VA = "0x163D9C4")]
		public Trace()
		{
		}
	}

	[Token(Token = "0x20005AC")]
	private delegate void RenderEventDelegate(int e);

	[Token(Token = "0x20005AD")]
	public delegate void CustomRenderThreadFunc();

	[Token(Token = "0x20005AE")]
	public enum EngineThreadID
	{
		[Token(Token = "0x40023B0")]
		JAVA_THREAD,
		[Token(Token = "0x40023B1")]
		GAME_THREAD,
		[Token(Token = "0x40023B2")]
		RENDER_THREAD,
		[Token(Token = "0x40023B3")]
		WORKER1_THREAD,
		[Token(Token = "0x40023B4")]
		WORKER2_THREAD
	}

	[Token(Token = "0x20005AF")]
	public enum EngineEventID
	{
		[Token(Token = "0x40023B6")]
		ENGINE_EVENT_ID_BEGIN = 40960,
		[Token(Token = "0x40023B7")]
		HMD_CREATE,
		[Token(Token = "0x40023B8")]
		HMD_INITIAILZED,
		[Token(Token = "0x40023B9")]
		HMD_RESUME,
		[Token(Token = "0x40023BA")]
		HMD_PAUSE,
		[Token(Token = "0x40023BB")]
		HMD_TERMINATED,
		[Token(Token = "0x40023BC")]
		FIRST_FRAME,
		[Token(Token = "0x40023BD")]
		FRAME_START,
		[Token(Token = "0x40023BE")]
		FRAME_END,
		[Token(Token = "0x40023BF")]
		UNITY_AWAKE,
		[Token(Token = "0x40023C0")]
		UNITY_ENABLE,
		[Token(Token = "0x40023C1")]
		UNITY_DISABLE,
		[Token(Token = "0x40023C2")]
		UNITY_START,
		[Token(Token = "0x40023C3")]
		UNITY_DESTROY,
		[Token(Token = "0x40023C4")]
		UNITY_APPLICATION_RESUME,
		[Token(Token = "0x40023C5")]
		UNITY_APPLICATION_PAUSE,
		[Token(Token = "0x40023C6")]
		UNITY_APPLICATION_QUIT,
		[Token(Token = "0x40023C7")]
		ENGINE_EVENT_ID_END
	}

	[Token(Token = "0x20005B0")]
	public delegate void HandGestureResultDelegate(object sender, bool result);

	[Token(Token = "0x20005B1")]
	public enum HandGestureStatus
	{
		[Token(Token = "0x40023C9")]
		NOT_START,
		[Token(Token = "0x40023CA")]
		START_FAILURE,
		[Token(Token = "0x40023CB")]
		STARTING,
		[Token(Token = "0x40023CC")]
		STOPING,
		[Token(Token = "0x40023CD")]
		AVAILABLE,
		[Token(Token = "0x40023CE")]
		UNSUPPORT
	}

	[Token(Token = "0x20005B2")]
	public delegate void HandTrackingResultDelegate(object sender, bool result);

	[Token(Token = "0x20005B3")]
	public enum HandTrackingStatus
	{
		[Token(Token = "0x40023D0")]
		NOT_START,
		[Token(Token = "0x40023D1")]
		START_FAILURE,
		[Token(Token = "0x40023D2")]
		STARTING,
		[Token(Token = "0x40023D3")]
		STOPING,
		[Token(Token = "0x40023D4")]
		AVAILABLE,
		[Token(Token = "0x40023D5")]
		UNSUPPORT
	}

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string LOG_TAG;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Queue TraceSessionNameQueue;

	[Token(Token = "0x4000543")]
	public const int k_nRenderEventID_SubmitL = 1;

	[Token(Token = "0x4000544")]
	public const int k_nRenderEventID_SubmitR = 2;

	[Token(Token = "0x4000545")]
	public const int k_nRenderEventID_SubmitBoth = 3;

	[Token(Token = "0x4000546")]
	public const int k_nRenderEventID_GraphicInitial = 8;

	[Token(Token = "0x4000547")]
	public const int k_nRenderEventID_GraphicShutdown = 9;

	[Token(Token = "0x4000548")]
	public const int k_nRenderEventID_RenderEyeL = 256;

	[Token(Token = "0x4000549")]
	public const int k_nRenderEventID_RenderEyeR = 257;

	[Token(Token = "0x400054A")]
	public const int k_nRenderEventID_RenderEyeEndL = 258;

	[Token(Token = "0x400054B")]
	public const int k_nRenderEventID_RenderEyeEndR = 259;

	[Token(Token = "0x400054C")]
	public const int k_nRenderEventID_RenderEyeBoth = 273;

	[Token(Token = "0x400054D")]
	public const int k_nRenderEventID_RenderEyeEndBoth = 274;

	[Token(Token = "0x400054E")]
	public const int RENDEREVENTID_INIT_GRAPHIC = 0;

	[Token(Token = "0x400054F")]
	public const int RENDEREVENTID_SHUTDOWN_GRAPHIC = 1;

	[Token(Token = "0x4000550")]
	public const int RENDEREVENTID_Systrace_BeginSession = 4;

	[Token(Token = "0x4000551")]
	public const int RENDEREVENTID_Systrace_EndSession = 5;

	[Token(Token = "0x4000552")]
	public const int RENDEREVENTID_StartCamera = 21;

	[Token(Token = "0x4000553")]
	public const int RENDEREVENTID_StopCamera = 22;

	[Token(Token = "0x4000554")]
	public const int RENDEREVENTID_UpdateCamera = 23;

	[Token(Token = "0x4000555")]
	public const int RENDEREVENTID_DrawTextureWithBuffer = 24;

	[Token(Token = "0x4000556")]
	public const int RENDEREVENTID_ReleaseTexture = 25;

	[Token(Token = "0x4000557")]
	public const int RENDEREVENTID_RenderMaskLeft = 30;

	[Token(Token = "0x4000558")]
	public const int RENDEREVENTID_RenderMaskRight = 31;

	[Token(Token = "0x4000559")]
	public const int RENDEREVENTID_SinglePassPrepare = 90;

	[Token(Token = "0x400055A")]
	public const int RENDEREVENTID_SinglePassPrepareWithAntiAliasing2x = 92;

	[Token(Token = "0x400055B")]
	public const int RENDEREVENTID_SinglePassPrepareWithAntiAliasing4x = 94;

	[Token(Token = "0x400055C")]
	public const int RENDEREVENTID_SinglePassPrepareWithAntiAliasing8x = 98;

	[Token(Token = "0x400055D")]
	public const int RENDEREVENTID_SinglePassBeforeForwardOpaque = 86;

	[Token(Token = "0x400055E")]
	public const int RENDEREVENTID_SinglePassPostRender = 87;

	[Token(Token = "0x400055F")]
	public const int RENDEREVENTID_ExecuteCustomFunction = 45;

	[Token(Token = "0x4000560")]
	public const int RENDEREVENTID_EditorEmptyOperation = 65536;

	[Token(Token = "0x4000561")]
	public const int RENDEREVENTID_SubmitL = 1001;

	[Token(Token = "0x4000562")]
	public const int RENDEREVENTID_SubmitR = 1002;

	[Token(Token = "0x4000563")]
	public const uint RENDEREVENTID_SubmitL_Index_Min = 1100u;

	[Token(Token = "0x4000564")]
	public const uint RENDEREVENTID_SubmitR_Index_Min = 1200u;

	[Token(Token = "0x4000565")]
	public const uint RENDEREVENTID_Wait_Get_Poses = 2000u;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static RenderEventDelegate RenderEventHandle;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static IntPtr RenderEventHandlePtr;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static CustomRenderThreadFunc mCustomRenderThreadFunc;

	[Token(Token = "0x60005FB")]
	public static void SafeExecuteAllDelegate<T>(Delegate multi, Action<T> invoker, bool throws = false)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x1639C4C", Offset = "0x1639C4C", VA = "0x1639C4C")]
	private static float _copysign(float sizeval, float signval)
	{
		return default(float);
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x162E3A8", Offset = "0x162E3A8", VA = "0x162E3A8")]
	public static Quaternion GetRotation(Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x1639D08", Offset = "0x1639D08", VA = "0x1639D08")]
	public static Quaternion GetRotation(WVR_Quatf_t glQuat)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x162E36C", Offset = "0x162E36C", VA = "0x162E36C")]
	public static Vector3 GetPosition(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x1639D4C", Offset = "0x1639D4C", VA = "0x1639D4C")]
	public static Vector3 GetPosition(WVR_Vector3f_t glVector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x1639D84", Offset = "0x1639D84", VA = "0x1639D84")]
	public static void GetVectorFromGL(WVR_Vector3f_t gl_vec, out Vector3 unity_vec)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x162E630", Offset = "0x162E630", VA = "0x162E630")]
	public static Vector3 GetScale(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x1639D94", Offset = "0x1639D94", VA = "0x1639D94")]
	public static string GetControllerName(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x163A0C4", Offset = "0x163A0C4", VA = "0x163A0C4")]
	public static void notifyActivityUnityStarted()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000605")]
	[Address(RVA = "0x163A288", Offset = "0x163A288", VA = "0x163A288")]
	public static extern void NativeRenderEvent(int eventID);

	[PreserveSig]
	[Token(Token = "0x6000606")]
	[Address(RVA = "0x163A324", Offset = "0x163A324", VA = "0x163A324")]
	public static extern void SetColorSpace(int colorspace);

	[PreserveSig]
	[Token(Token = "0x6000607")]
	[Address(RVA = "0x163A3C0", Offset = "0x163A3C0", VA = "0x163A3C0")]
	public static extern void SetSubmitOptionalArgument([Out] WVR_PoseState_t[] poses, int submit_extend_flag);

	[PreserveSig]
	[Token(Token = "0x6000608")]
	[Address(RVA = "0x163A534", Offset = "0x163A534", VA = "0x163A534")]
	public static extern void NativeProcessEngineEvent(uint tID, uint eventID);

	[PreserveSig]
	[Token(Token = "0x6000609")]
	[Address(RVA = "0x163A5DC", Offset = "0x163A5DC", VA = "0x163A5DC")]
	public static extern int IsSinglePassSupported();

	[PreserveSig]
	[Token(Token = "0x600060A")]
	[Address(RVA = "0x163A668", Offset = "0x163A668", VA = "0x163A668")]
	public static extern IntPtr PrepareSinglePassTexture(int antiAliasing, int width, int height);

	[PreserveSig]
	[Token(Token = "0x600060B")]
	[Address(RVA = "0x163A71C", Offset = "0x163A71C", VA = "0x163A71C")]
	public static extern void SinglePassBeforeForwardOpaque();

	[PreserveSig]
	[Token(Token = "0x600060C")]
	[Address(RVA = "0x163A7A8", Offset = "0x163A7A8", VA = "0x163A7A8")]
	public static extern void SinglePassPostRender();

	[PreserveSig]
	[Token(Token = "0x600060D")]
	[Address(RVA = "0x163A834", Offset = "0x163A834", VA = "0x163A834")]
	private static extern void TraceBeginSection(string name);

	[PreserveSig]
	[Token(Token = "0x600060E")]
	[Address(RVA = "0x163A8D8", Offset = "0x163A8D8", VA = "0x163A8D8")]
	private static extern void TraceEndSection();

	[PreserveSig]
	[Token(Token = "0x600060F")]
	[Address(RVA = "0x1625818", Offset = "0x1625818", VA = "0x1625818")]
	public static extern bool WVR_IsATWActive();

	[PreserveSig]
	[Token(Token = "0x6000610")]
	[Address(RVA = "0x163A964", Offset = "0x163A964", VA = "0x163A964")]
	public static extern int WVR_GetNumberOfTextures();

	[PreserveSig]
	[Token(Token = "0x6000611")]
	[Address(RVA = "0x163A9F0", Offset = "0x163A9F0", VA = "0x163A9F0")]
	public static extern IntPtr WVR_StoreRenderTextures(int[] texturesIDs, int size, bool eEye, WVR_TextureTarget target);

	[PreserveSig]
	[Token(Token = "0x6000612")]
	[Address(RVA = "0x163AABC", Offset = "0x163AABC", VA = "0x163AABC")]
	public static extern IntPtr WVR_ReplaceCurrentTextureID(IntPtr queue, IntPtr imageHandle);

	[PreserveSig]
	[Token(Token = "0x6000613")]
	[Address(RVA = "0x163AB68", Offset = "0x163AB68", VA = "0x163AB68")]
	public static extern uint WVR_GetAvailableTextureID(IntPtr queue);

	[PreserveSig]
	[Token(Token = "0x6000614")]
	[Address(RVA = "0x163AC04", Offset = "0x163AC04", VA = "0x163AC04")]
	public static extern bool WVR_IsPresentedOnExternal();

	[PreserveSig]
	[Token(Token = "0x6000615")]
	[Address(RVA = "0x163AC98", Offset = "0x163AC98", VA = "0x163AC98")]
	public static extern int WVR_LoadCriteriaData(string criteriaData);

	[PreserveSig]
	[Token(Token = "0x6000616")]
	[Address(RVA = "0x163AD4C", Offset = "0x163AD4C", VA = "0x163AD4C")]
	public static extern int WVR_StartPerformanceTest(string sceneID);

	[PreserveSig]
	[Token(Token = "0x6000617")]
	[Address(RVA = "0x163AE00", Offset = "0x163AE00", VA = "0x163AE00")]
	public static extern int WVR_EndPerformanceTest(StringBuilder pReport, uint ReportSize);

	[PreserveSig]
	[Token(Token = "0x6000618")]
	[Address(RVA = "0x163AED0", Offset = "0x163AED0", VA = "0x163AED0")]
	public static extern uint WVR_GetPerformanceReportSize();

	[PreserveSig]
	[Token(Token = "0x6000619")]
	[Address(RVA = "0x163AF5C", Offset = "0x163AF5C", VA = "0x163AF5C")]
	public static extern bool WVR_SetPerformanceLevels(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel);

	[PreserveSig]
	[Token(Token = "0x600061A")]
	[Address(RVA = "0x1628F40", Offset = "0x1628F40", VA = "0x1628F40")]
	public static extern void WVR_GetStencilMesh(WVR_Eye eEye, ref uint vertexCount, ref uint triangleCount, uint floatArrayCount, [In][Out] float[] vertexData, uint intArrayCount, [In][Out] int[] indexData);

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x16393C4", Offset = "0x16393C4", VA = "0x16393C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB83F7C", Offset = "0xB83F7C")]
	private static void RenderEvent(int eventId)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x163B22C", Offset = "0x163B22C", VA = "0x163B22C")]
	private static IntPtr GetFunctionPointerForDelegate(Delegate del)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x163B294", Offset = "0x163B294", VA = "0x163B294")]
	public static void SendRenderEvent(int eventId)
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x16258AC", Offset = "0x16258AC", VA = "0x16258AC")]
	public static void IssueEngineEvent(EngineEventID eventID)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x163B308", Offset = "0x163B308", VA = "0x163B308")]
	public static void IssueEngineEvent(EngineThreadID tID, EngineEventID eventID)
	{
	}
}
[Token(Token = "0x200007C")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB70B6C", Offset = "0xB70B6C")]
public class FastList<T>
{
	[Token(Token = "0x20005B4")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x20005B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7265C", Offset = "0xB7265C")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000491")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x60029DF")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000492")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029E1")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029DC")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60029DD")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029DE")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029E0")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000041")]
	public int Count
	{
		[Token(Token = "0x6000623")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000624")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public T Item
	{
		[Token(Token = "0x6000625")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000626")]
		set
		{
		}
	}

	[Token(Token = "0x6000621")]
	public FastList()
	{
	}

	[Token(Token = "0x6000622")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000627")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000628")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000629")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x600062A")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600062B")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600062C")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600062D")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600062E")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x600062F")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000630")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000631")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000632")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000633")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000634")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000635")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83FE0", Offset = "0xB83FE0")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000636")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000637")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000638")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000639")]
	public void Clear()
	{
	}

	[Token(Token = "0x600063A")]
	public void Release()
	{
	}
}
[Token(Token = "0x200007D")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x1324B28", Offset = "0x1324B28", VA = "0x1324B28")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x200007E")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x1324AFC", Offset = "0x1324AFC", VA = "0x1324AFC")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x200007F")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x131F224", Offset = "0x131F224", VA = "0x131F224")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x131F294", Offset = "0x131F294", VA = "0x131F294")]
	private void Start()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x131F41C", Offset = "0x131F41C", VA = "0x131F41C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x131F480", Offset = "0x131F480", VA = "0x131F480")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x131F2D0", Offset = "0x131F2D0", VA = "0x131F2D0")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x131F548", Offset = "0x131F548", VA = "0x131F548")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x131F5A8", Offset = "0x131F5A8", VA = "0x131F5A8")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000080")]
public class AvatarLayer
{
	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xD360B8", Offset = "0xD360B8", VA = "0xD360B8")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000081")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xFFA15C", Offset = "0xFFA15C", VA = "0xFFA15C")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000082")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x20005B6")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60029E2")]
		[Address(RVA = "0x161CEC0", Offset = "0x161CEC0", VA = "0x161CEC0")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x20005B7")]
	public enum HandType
	{
		[Token(Token = "0x40023DC")]
		Right,
		[Token(Token = "0x40023DD")]
		Left,
		[Token(Token = "0x40023DE")]
		Max
	}

	[Token(Token = "0x20005B8")]
	public enum HandJoint
	{
		[Token(Token = "0x40023E0")]
		HandBase,
		[Token(Token = "0x40023E1")]
		IndexBase,
		[Token(Token = "0x40023E2")]
		IndexTip,
		[Token(Token = "0x40023E3")]
		ThumbBase,
		[Token(Token = "0x40023E4")]
		ThumbTip,
		[Token(Token = "0x40023E5")]
		Max
	}

	[Token(Token = "0x20005B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7266C", Offset = "0xB7266C")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000493")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029E6")]
			[Address(RVA = "0x161F260", Offset = "0x161F260", VA = "0x161F260", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000494")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029E8")]
			[Address(RVA = "0x161F2CC", Offset = "0x161F2CC", VA = "0x161F2CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0x161EC80", Offset = "0x161EC80", VA = "0x161EC80")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0x161F0C8", Offset = "0x161F0C8", VA = "0x161F0C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0x161F0CC", Offset = "0x161F0CC", VA = "0x161F0CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0x161F268", Offset = "0x161F268", VA = "0x161F268", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB75520", Offset = "0xB75520")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB75558", Offset = "0xB75558")]
	public bool EnableBody;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB75590", Offset = "0xB75590")]
	public bool RecordPackets;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB755C8", Offset = "0xB755C8")]
	public bool StartWithControllers;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB75600", Offset = "0xB75600")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75600", Offset = "0xB75600")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75670", Offset = "0xB75670")]
	private bool CombineMeshes;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB756A8", Offset = "0xB756A8")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB756E0", Offset = "0xB756E0")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB75718", Offset = "0xB75718")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75750", Offset = "0xB75750")]
	public bool EnableLaughter;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40005AF")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40005B1")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40005B2")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40005B3")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40005B4")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40005B5")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x1619D1C", Offset = "0x1619D1C", VA = "0x1619D1C")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x161A088", Offset = "0x161A088", VA = "0x161A088")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x161A110", Offset = "0x161A110", VA = "0x161A110")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x161A180", Offset = "0x161A180", VA = "0x161A180")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x161A2A0", Offset = "0x161A2A0", VA = "0x161A2A0")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x161A388", Offset = "0x161A388", VA = "0x161A388")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x161A46C", Offset = "0x161A46C", VA = "0x161A46C")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x161A658", Offset = "0x161A658", VA = "0x161A658")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x161A720", Offset = "0x161A720", VA = "0x161A720")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x161053C", Offset = "0x161053C", VA = "0x161053C")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x16169B8", Offset = "0x16169B8", VA = "0x16169B8")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x161A7A4", Offset = "0x161A7A4", VA = "0x161A7A4")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x161A8D0", Offset = "0x161A8D0", VA = "0x161A8D0")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x161A930", Offset = "0x161A930", VA = "0x161A930")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000654")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x161AD88", Offset = "0x161AD88", VA = "0x161AD88")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x161B0DC", Offset = "0x161B0DC", VA = "0x161B0DC")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x161B244", Offset = "0x161B244", VA = "0x161B244")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x161B514", Offset = "0x161B514", VA = "0x161B514")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x161B604", Offset = "0x161B604", VA = "0x161B604")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x161BC40", Offset = "0x161BC40", VA = "0x161BC40")]
	private void Start()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x161BF54", Offset = "0x161BF54", VA = "0x161BF54")]
	private void Update()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x161C970", Offset = "0x161C970", VA = "0x161C970")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x161C9B8", Offset = "0x161C9B8", VA = "0x161C9B8")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x161B878", Offset = "0x161B878", VA = "0x161B878")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x161B910", Offset = "0x161B910", VA = "0x161B910")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x161C9E8", Offset = "0x161C9E8", VA = "0x161C9E8")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x161C2D4", Offset = "0x161C2D4", VA = "0x161C2D4")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x161CC24", Offset = "0x161CC24", VA = "0x161CC24")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x161CA50", Offset = "0x161CA50", VA = "0x161CA50")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x161CF3C", Offset = "0x161CF3C", VA = "0x161CF3C")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x161D354", Offset = "0x161D354", VA = "0x161D354")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x161D708", Offset = "0x161D708", VA = "0x161D708")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x161D848", Offset = "0x161D848", VA = "0x161D848")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x161DA08", Offset = "0x161DA08", VA = "0x161DA08")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x161C468", Offset = "0x161C468", VA = "0x161C468")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x161DAE4", Offset = "0x161DAE4", VA = "0x161DAE4")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x161C2E4", Offset = "0x161C2E4", VA = "0x161C2E4")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x161DBD8", Offset = "0x161DBD8", VA = "0x161DBD8")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x161E18C", Offset = "0x161E18C", VA = "0x161E18C")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x161E660", Offset = "0x161E660", VA = "0x161E660")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x161E6E0", Offset = "0x161E6E0", VA = "0x161E6E0")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x161E764", Offset = "0x161E764", VA = "0x161E764")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x161C808", Offset = "0x161C808", VA = "0x161C808")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x161DC94", Offset = "0x161DC94", VA = "0x161DC94")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x161EC0C", Offset = "0x161EC0C", VA = "0x161EC0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB85044", Offset = "0xB85044")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x161ECAC", Offset = "0x161ECAC", VA = "0x161ECAC")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x161EAAC", Offset = "0x161EAAC", VA = "0x161EAAC")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x161ED74", Offset = "0x161ED74", VA = "0x161ED74")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x161EE60", Offset = "0x161EE60", VA = "0x161EE60")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x161E83C", Offset = "0x161E83C", VA = "0x161E83C")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x161EF4C", Offset = "0x161EF4C", VA = "0x161EF4C")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000083")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x161F2D4", Offset = "0x161F2D4", VA = "0x161F2D4")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000084")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x161F380", Offset = "0x161F380", VA = "0x161F380")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x1620654", Offset = "0x1620654", VA = "0x1620654")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x16201F8", Offset = "0x16201F8", VA = "0x16201F8")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x161FFBC", Offset = "0x161FFBC", VA = "0x161FFBC")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x162008C", Offset = "0x162008C", VA = "0x162008C")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x16208C4", Offset = "0x16208C4", VA = "0x16208C4")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000085")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40005D2")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x1620E44", Offset = "0x1620E44", VA = "0x1620E44")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000086")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x16210A4", Offset = "0x16210A4", VA = "0x16210A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x1621510", Offset = "0x1621510", VA = "0x1621510")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000087")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x161D5A0", Offset = "0x161D5A0", VA = "0x161D5A0")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x162160C", Offset = "0x162160C", VA = "0x162160C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x1621728", Offset = "0x1621728", VA = "0x1621728")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000088")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x162178C", Offset = "0x162178C", VA = "0x162178C")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x16211C0", Offset = "0x16211C0", VA = "0x16211C0")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x1621794", Offset = "0x1621794", VA = "0x1621794")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x16217F8", Offset = "0x16217F8", VA = "0x16217F8")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x1621FE4", Offset = "0x1621FE4", VA = "0x1621FE4")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x1621574", Offset = "0x1621574", VA = "0x1621574")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000089")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x20005BA")]
	public enum PacketMode
	{
		[Token(Token = "0x40023EA")]
		SDK,
		[Token(Token = "0x40023EB")]
		Unity
	}

	[Token(Token = "0x20005BB")]
	public struct ControllerPose
	{
		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60029E9")]
		[Address(RVA = "0x162317C", Offset = "0x162317C", VA = "0x162317C")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x20005BC")]
	public struct PoseFrame
	{
		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60029EA")]
		[Address(RVA = "0xFF0A40", Offset = "0xFF0A40", VA = "0xFF0A40")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x16230C0", Offset = "0x16230C0", VA = "0x16230C0")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x600068F")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x16230D0", Offset = "0x16230D0", VA = "0x16230D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x161B9A8", Offset = "0x161B9A8", VA = "0x161B9A8")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x1623164", Offset = "0x1623164", VA = "0x1623164")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x162316C", Offset = "0x162316C", VA = "0x162316C")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x200008A")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xFF0E10", Offset = "0xFF0E10", VA = "0xFF0E10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xFF0F74", Offset = "0xFF0F74", VA = "0xFF0F74")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200008B")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xFF0FE4", Offset = "0xFF0FE4", VA = "0xFF0FE4")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xFF1150", Offset = "0xFF1150", VA = "0xFF1150")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xFF14F4", Offset = "0xFF14F4", VA = "0xFF14F4")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xFF1728", Offset = "0xFF1728", VA = "0xFF1728", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xFF1758", Offset = "0xFF1758", VA = "0xFF1758")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x200008C")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x20005BD")]
	public enum TextureType
	{
		[Token(Token = "0x40023FC")]
		DiffuseTextures,
		[Token(Token = "0x40023FD")]
		NormalMaps,
		[Token(Token = "0x40023FE")]
		RoughnessMaps,
		[Token(Token = "0x40023FF")]
		Count
	}

	[Token(Token = "0x20005BE")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x20005BF")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x20005C0")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x20005C1")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60029EB")]
		[Address(RVA = "0xFF3A6C", Offset = "0xFF3A6C", VA = "0xFF3A6C")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x20005C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7267C", Offset = "0xB7267C")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000495")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029EF")]
			[Address(RVA = "0xFF4388", Offset = "0xFF4388", VA = "0xFF4388", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000496")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029F1")]
			[Address(RVA = "0xFF43F4", Offset = "0xFF43F4", VA = "0xFF43F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029EC")]
		[Address(RVA = "0xFF38D4", Offset = "0xFF38D4", VA = "0xFF38D4")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60029ED")]
		[Address(RVA = "0xFF3D08", Offset = "0xFF3D08", VA = "0xFF3D08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029EE")]
		[Address(RVA = "0xFF3D0C", Offset = "0xFF3D0C", VA = "0xFF3D0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029F0")]
		[Address(RVA = "0xFF4390", Offset = "0xFF4390", VA = "0xFF4390", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000606")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000607")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000608")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000609")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xFF1800", Offset = "0xFF1800", VA = "0xFF1800")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xFF1968", Offset = "0xFF1968", VA = "0xFF1968")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xFF1994", Offset = "0xFF1994", VA = "0xFF1994")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xFF20C0", Offset = "0xFF20C0", VA = "0xFF20C0")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xFF24E4", Offset = "0xFF24E4", VA = "0xFF24E4")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xFF1A28", Offset = "0xFF1A28", VA = "0xFF1A28")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xFF25DC", Offset = "0xFF25DC", VA = "0xFF25DC")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xFF1E34", Offset = "0xFF1E34", VA = "0xFF1E34")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xFF2850", Offset = "0xFF2850", VA = "0xFF2850")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xFF2ACC", Offset = "0xFF2ACC", VA = "0xFF2ACC")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xFF2BCC", Offset = "0xFF2BCC", VA = "0xFF2BCC")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xFF2C04", Offset = "0xFF2C04", VA = "0xFF2C04")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xFF2040", Offset = "0xFF2040", VA = "0xFF2040")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB850A8", Offset = "0xB850A8")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xFF3900", Offset = "0xFF3900", VA = "0xFF3900")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200008D")]
public class OvrAvatarPacket
{
	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000043")]
	public float Duration
	{
		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xFF43FC", Offset = "0xFF43FC", VA = "0xFF43FC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000044")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xFF446C", Offset = "0xFF446C", VA = "0xFF446C")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xFF44F4", Offset = "0xFF44F4", VA = "0xFF44F4")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xFF45B8", Offset = "0xFF45B8", VA = "0xFF45B8")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xFF4700", Offset = "0xFF4700", VA = "0xFF4700")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xFF47DC", Offset = "0xFF47DC", VA = "0xFF47DC")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xFF48B0", Offset = "0xFF48B0", VA = "0xFF48B0")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xFF4AC0", Offset = "0xFF4AC0", VA = "0xFF4AC0")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xFF4D1C", Offset = "0xFF4D1C", VA = "0xFF4D1C")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x200008E")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xD36F34", Offset = "0xD36F34", VA = "0xD36F34")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xD3704C", Offset = "0xD3704C", VA = "0xD3704C")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xD37204", Offset = "0xD37204", VA = "0xD37204")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xD370C0", Offset = "0xD370C0", VA = "0xD370C0")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xD37158", Offset = "0xD37158", VA = "0xD37158")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x200008F")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xD36B1C", Offset = "0xD36B1C", VA = "0xD36B1C")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xD36ED4", Offset = "0xD36ED4", VA = "0xD36ED4")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xD36CC4", Offset = "0xD36CC4", VA = "0xD36CC4")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xD36D40", Offset = "0xD36D40", VA = "0xD36D40")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xD36DE0", Offset = "0xD36DE0", VA = "0xD36DE0")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000090")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000611")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000612")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xFF4F14", Offset = "0xFF4F14", VA = "0xFF4F14")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xFF4FA0", Offset = "0xFF4FA0", VA = "0xFF4FA0", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xFF4FBC", Offset = "0xFF4FBC", VA = "0xFF4FBC")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xFF5170", Offset = "0xFF5170", VA = "0xFF5170")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xFF5324", Offset = "0xFF5324", VA = "0xFF5324")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000091")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xFF539C", Offset = "0xFF539C", VA = "0xFF539C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xFF5488", Offset = "0xFF5488", VA = "0xFF5488")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xFF5708", Offset = "0xFF5708", VA = "0xFF5708")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xFF5AB0", Offset = "0xFF5AB0", VA = "0xFF5AB0")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xFF5BB0", Offset = "0xFF5BB0", VA = "0xFF5BB0")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000092")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x400061B")]
	Body = 1,
	[Token(Token = "0x400061C")]
	Hands = 2,
	[Token(Token = "0x400061D")]
	Base = 4,
	[Token(Token = "0x400061E")]
	BodyTilt = 0x10,
	[Token(Token = "0x400061F")]
	Expressive = 0x20,
	[Token(Token = "0x4000620")]
	All = -1
}
[Token(Token = "0x2000093")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000622")]
	AvatarSpecification,
	[Token(Token = "0x4000623")]
	AssetLoaded,
	[Token(Token = "0x4000624")]
	Count
}
[Token(Token = "0x2000094")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000095")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000096")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x400062A")]
	Mesh,
	[Token(Token = "0x400062B")]
	Texture,
	[Token(Token = "0x400062C")]
	Pose,
	[Token(Token = "0x400062D")]
	Material,
	[Token(Token = "0x400062E")]
	CombinedMesh,
	[Token(Token = "0x400062F")]
	PBSMaterial,
	[Token(Token = "0x4000630")]
	FailedLoad,
	[Token(Token = "0x4000631")]
	Count
}
[Token(Token = "0x2000097")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000098")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000099")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200009A")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200009B")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200009C")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000666")]
	RGB24,
	[Token(Token = "0x4000667")]
	DXT1,
	[Token(Token = "0x4000668")]
	DXT5,
	[Token(Token = "0x4000669")]
	ASTC_RGB_6x6,
	[Token(Token = "0x400066A")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x400066B")]
	Count
}
[Token(Token = "0x200009D")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x200009E")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000673")]
	SkinnedMeshRender,
	[Token(Token = "0x4000674")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000675")]
	ProjectorRender,
	[Token(Token = "0x4000676")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000677")]
	Count
}
[Token(Token = "0x200009F")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000679")]
	Unknown,
	[Token(Token = "0x400067A")]
	Default,
	[Token(Token = "0x400067B")]
	Verbose,
	[Token(Token = "0x400067C")]
	Debug,
	[Token(Token = "0x400067D")]
	Info,
	[Token(Token = "0x400067E")]
	Warn,
	[Token(Token = "0x400067F")]
	Error,
	[Token(Token = "0x4000680")]
	Fatal,
	[Token(Token = "0x4000681")]
	Silent
}
[Token(Token = "0x20000A0")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x20000A1")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000686")]
	One = 1,
	[Token(Token = "0x4000687")]
	Two = 2,
	[Token(Token = "0x4000688")]
	Three = 4,
	[Token(Token = "0x4000689")]
	Joystick = 8
}
[Token(Token = "0x20000A2")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x400068B")]
	One = 1,
	[Token(Token = "0x400068C")]
	Two = 2,
	[Token(Token = "0x400068D")]
	Joystick = 4,
	[Token(Token = "0x400068E")]
	ThumbRest = 8,
	[Token(Token = "0x400068F")]
	Index = 0x10,
	[Token(Token = "0x4000690")]
	Pointing = 0x40,
	[Token(Token = "0x4000691")]
	ThumbUp = 0x80
}
[Token(Token = "0x20000A3")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x20000A4")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x20000A5")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x20000A6")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000A7")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000A8")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x20000A9")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000AA")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000AB")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40006B1")]
	Add,
	[Token(Token = "0x40006B2")]
	Multiply,
	[Token(Token = "0x40006B3")]
	Count
}
[Token(Token = "0x20000AC")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40006B5")]
	Color,
	[Token(Token = "0x40006B6")]
	Texture,
	[Token(Token = "0x40006B7")]
	TextureSingleChannel,
	[Token(Token = "0x40006B8")]
	Parallax,
	[Token(Token = "0x40006B9")]
	Count
}
[Token(Token = "0x20000AD")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40006BB")]
	None,
	[Token(Token = "0x40006BC")]
	Positional,
	[Token(Token = "0x40006BD")]
	ViewReflection,
	[Token(Token = "0x40006BE")]
	Fresnel,
	[Token(Token = "0x40006BF")]
	Pulse,
	[Token(Token = "0x40006C0")]
	Count
}
[Token(Token = "0x20000AE")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40006C2")]
	Touch,
	[Token(Token = "0x40006C3")]
	Malibu,
	[Token(Token = "0x40006C4")]
	Go,
	[Token(Token = "0x40006C5")]
	Quest,
	[Token(Token = "0x40006C6")]
	Count
}
[Token(Token = "0x20000AF")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40006C8")]
	Lowest = 1,
	[Token(Token = "0x40006C9")]
	Medium = 3,
	[Token(Token = "0x40006CA")]
	Highest = 5
}
[Token(Token = "0x20000B0")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40006CC")]
	Unknown = -1,
	[Token(Token = "0x40006CD")]
	One,
	[Token(Token = "0x40006CE")]
	Two
}
[Token(Token = "0x20000B1")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x1F38CC0", Offset = "0x1F38CC0", VA = "0x1F38CC0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xC65470", Offset = "0xC65470", VA = "0xC65470", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xC65478", Offset = "0xC65478", VA = "0xC65478", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000B2")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x1F38FF0", Offset = "0x1F38FF0", VA = "0x1F38FF0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xC65714", Offset = "0xC65714", VA = "0xC65714", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xC6571C", Offset = "0xC6571C", VA = "0xC6571C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000B3")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x1F38368", Offset = "0x1F38368", VA = "0x1F38368")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xC651C0", Offset = "0xC651C0", VA = "0xC651C0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xC651C8", Offset = "0xC651C8", VA = "0xC651C8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000B4")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x1F3952C", Offset = "0x1F3952C", VA = "0x1F3952C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xC65FC0", Offset = "0xC65FC0", VA = "0xC65FC0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xC65FC8", Offset = "0xC65FC8", VA = "0xC65FC8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000B5")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x161F2DC", Offset = "0x161F2DC", VA = "0x161F2DC")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20000B6")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20000B7")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000703")]
	FirstPerson = 1,
	[Token(Token = "0x4000704")]
	ThirdPerson = 2,
	[Token(Token = "0x4000705")]
	SelfOccluding = 4
}
[Token(Token = "0x20000B8")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000B9")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000BA")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20000BB")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000BC")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x400071B")]
	Default,
	[Token(Token = "0x400071C")]
	GripSphere,
	[Token(Token = "0x400071D")]
	GripCube,
	[Token(Token = "0x400071E")]
	Count
}
[Token(Token = "0x20000BD")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000720")]
	Body,
	[Token(Token = "0x4000721")]
	Clothing,
	[Token(Token = "0x4000722")]
	Eyewear,
	[Token(Token = "0x4000723")]
	Hair,
	[Token(Token = "0x4000724")]
	Beard,
	[Token(Token = "0x4000725")]
	Count
}
[Token(Token = "0x20000BE")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20000BF")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20000C0")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20000C1")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20000C2")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x400072F")]
	AvatarHead,
	[Token(Token = "0x4000730")]
	AvatarHand,
	[Token(Token = "0x4000731")]
	Object,
	[Token(Token = "0x4000732")]
	ObjectStatic,
	[Token(Token = "0x4000733")]
	Count
}
[Token(Token = "0x20000C3")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20000C4")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20000C5")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20000C6")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20000C7")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x400073F")]
	Point,
	[Token(Token = "0x4000740")]
	Direction,
	[Token(Token = "0x4000741")]
	Spot,
	[Token(Token = "0x4000742")]
	Count
}
[Token(Token = "0x20000C8")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20000C9")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20000CA")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20000CB")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20000CC")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000758")]
	None = 0u,
	[Token(Token = "0x4000759")]
	GazeTarget = 1u,
	[Token(Token = "0x400075A")]
	Any = uint.MaxValue
}
[Token(Token = "0x20000CD")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20000CE")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20000CF")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20000D0")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20000D1")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20000D2")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20005C3")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x60029F2")]
		[Address(RVA = "0xC357D4", Offset = "0xC357D4", VA = "0xC357D4")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x400076F")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000045")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xFF2128", Offset = "0xFF2128", VA = "0xFF2128")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xFF5BC0", Offset = "0xFF5BC0", VA = "0xFF5BC0")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xFF5DE8", Offset = "0xFF5DE8", VA = "0xFF5DE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xFF5E5C", Offset = "0xFF5E5C", VA = "0xFF5E5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xFF66C0", Offset = "0xFF66C0", VA = "0xFF66C0")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xFF671C", Offset = "0xFF671C", VA = "0xFF671C")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xFF6778", Offset = "0xFF6778", VA = "0xFF6778")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xFF67E0", Offset = "0xFF67E0", VA = "0xFF67E0")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xFF6848", Offset = "0xFF6848", VA = "0xFF6848")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xFF64F8", Offset = "0xFF64F8", VA = "0xFF64F8")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xFF6938", Offset = "0xFF6938", VA = "0xFF6938")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xFF6A54", Offset = "0xFF6A54", VA = "0xFF6A54")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xFF5688", Offset = "0xFF5688", VA = "0xFF5688")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xFF6B38", Offset = "0xFF6B38", VA = "0xFF6B38")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xFF5DC0", Offset = "0xFF5DC0", VA = "0xFF5DC0")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xFF22BC", Offset = "0xFF22BC", VA = "0xFF22BC")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xFF6C10", Offset = "0xFF6C10", VA = "0xFF6C10")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20000D3")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000046")]
	public static string AppID
	{
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xFF6BD0", Offset = "0xFF6BD0", VA = "0xFF6BD0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xFF6D68", Offset = "0xFF6D68", VA = "0xFF6D68")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public static string MobileAppID
	{
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xFF6BF0", Offset = "0xFF6BF0", VA = "0xFF6BF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xFF6D94", Offset = "0xFF6D94", VA = "0xFF6D94")]
		set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xFF6C54", Offset = "0xFF6C54", VA = "0xFF6C54")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xFF6DC0", Offset = "0xFF6DC0", VA = "0xFF6DC0")]
		set
		{
		}
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xFF6E14", Offset = "0xFF6E14", VA = "0xFF6E14")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20000D4")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xFF87BC", Offset = "0xFF87BC", VA = "0xFF87BC")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xFF8A68", Offset = "0xFF8A68", VA = "0xFF8A68")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xFF8904", Offset = "0xFF8904", VA = "0xFF8904")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xFF8CA0", Offset = "0xFF8CA0", VA = "0xFF8CA0")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20000D5")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xFF8CB0", Offset = "0xFF8CB0", VA = "0xFF8CB0")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xFF8DE8", Offset = "0xFF8DE8", VA = "0xFF8DE8")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xFF8F8C", Offset = "0xFF8F8C", VA = "0xFF8F8C")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20000D6")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x400077E")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x400077F")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000780")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xFF6E6C", Offset = "0xFF6E6C", VA = "0xFF6E6C")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xFF7D30", Offset = "0xFF7D30", VA = "0xFF7D30")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xFF7F60", Offset = "0xFF7F60", VA = "0xFF7F60")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xFF744C", Offset = "0xFF744C", VA = "0xFF744C")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xFF7214", Offset = "0xFF7214", VA = "0xFF7214")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xFF732C", Offset = "0xFF732C", VA = "0xFF732C")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xFF87AC", Offset = "0xFF87AC", VA = "0xFF87AC")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20000D7")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005C4")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20005C5")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0xC35844", Offset = "0xC35844", VA = "0xC35844")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20005C6")]
	public struct TextureSet
	{
		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x60029F4")]
		[Address(RVA = "0xC358DC", Offset = "0xC358DC", VA = "0xC358DC")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20005C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7268C", Offset = "0xB7268C")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000497")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029F8")]
			[Address(RVA = "0xFF9C3C", Offset = "0xFF9C3C", VA = "0xFF9C3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000498")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029FA")]
			[Address(RVA = "0xFF9CA8", Offset = "0xFF9CA8", VA = "0xFF9CA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0xFF95CC", Offset = "0xFF95CC", VA = "0xFF95CC")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60029F6")]
		[Address(RVA = "0xFF973C", Offset = "0xFF973C", VA = "0xFF973C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029F7")]
		[Address(RVA = "0xFF9740", Offset = "0xFF9740", VA = "0xFF9740", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0xFF9C44", Offset = "0xFF9C44", VA = "0xFF9C44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000784")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000785")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000788")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000789")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x400078A")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x400078B")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x400078C")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x400078D")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x400078E")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xFF8F9C", Offset = "0xFF8F9C", VA = "0xFF8F9C")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xFF92F8", Offset = "0xFF92F8", VA = "0xFF92F8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xFF4334", Offset = "0xFF4334", VA = "0xFF4334")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xFF26CC", Offset = "0xFF26CC", VA = "0xFF26CC")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xFF9484", Offset = "0xFF9484", VA = "0xFF9484")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xFF2340", Offset = "0xFF2340", VA = "0xFF2340")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xFF2534", Offset = "0xFF2534", VA = "0xFF2534")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xFF9534", Offset = "0xFF9534", VA = "0xFF9534")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB851AC", Offset = "0xB851AC")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xFF68E4", Offset = "0xFF68E4", VA = "0xFF68E4")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xFF95F8", Offset = "0xFF95F8", VA = "0xFF95F8")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000D8")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xFF9CB0", Offset = "0xFF9CB0", VA = "0xFF9CB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xFF9E14", Offset = "0xFF9E14", VA = "0xFF9E14")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000D9")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x600071A")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xD3B808", Offset = "0xD3B808", VA = "0xD3B808")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x20000DA")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB757A8", Offset = "0xB757A8")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB757E0", Offset = "0xB757E0")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75818", Offset = "0xB75818")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x1325664", Offset = "0x1325664", VA = "0x1325664")]
	private void Start()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x1325668", Offset = "0x1325668", VA = "0x1325668")]
	private void Update()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x13256E8", Offset = "0x13256E8", VA = "0x13256E8")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x13258D8", Offset = "0x13258D8", VA = "0x13258D8")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x20000DB")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x1325900", Offset = "0x1325900", VA = "0x1325900")]
	private void Start()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x1325A10", Offset = "0x1325A10", VA = "0x1325A10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x1325AE4", Offset = "0x1325AE4", VA = "0x1325AE4")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x1325D7C", Offset = "0x1325D7C", VA = "0x1325D7C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x1325DCC", Offset = "0x1325DCC", VA = "0x1325DCC")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x20000DC")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000049")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x6000725")]
		[Address(RVA = "0x1608588", Offset = "0x1608588", VA = "0x1608588")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x1608844", Offset = "0x1608844", VA = "0x1608844")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x1608980", Offset = "0x1608980", VA = "0x1608980")]
	private void Update()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x16088B4", Offset = "0x16088B4", VA = "0x16088B4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x1608A80", Offset = "0x1608A80", VA = "0x1608A80")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x1608BF4", Offset = "0x1608BF4", VA = "0x1608BF4")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x1608A18", Offset = "0x1608A18", VA = "0x1608A18")]
	public static void Clear()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x1608CD0", Offset = "0x1608CD0", VA = "0x1608CD0")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x1608B04", Offset = "0x1608B04", VA = "0x1608B04")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x1608C94", Offset = "0x1608C94", VA = "0x1608C94")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x1608D50", Offset = "0x1608D50", VA = "0x1608D50")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x1608F4C", Offset = "0x1608F4C", VA = "0x1608F4C")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x1608D60", Offset = "0x1608D60", VA = "0x1608D60")]
	private void Display()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x1608FFC", Offset = "0x1608FFC", VA = "0x1608FFC")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x20000DD")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x160B7B8", Offset = "0x160B7B8", VA = "0x160B7B8")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x20000DE")]
public static class OVRTouchpad
{
	[Token(Token = "0x20005C8")]
	public enum TouchEvent
	{
		[Token(Token = "0x4002432")]
		SingleTap,
		[Token(Token = "0x4002433")]
		DoubleTap,
		[Token(Token = "0x4002434")]
		Left,
		[Token(Token = "0x4002435")]
		Right,
		[Token(Token = "0x4002436")]
		Up,
		[Token(Token = "0x4002437")]
		Down
	}

	[Token(Token = "0x20005C9")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x160B7E4", Offset = "0x160B7E4", VA = "0x160B7E4")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x160B7E8", Offset = "0x160B7E8", VA = "0x160B7E8")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x160BB0C", Offset = "0x160BB0C", VA = "0x160BB0C")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x160B958", Offset = "0x160B958", VA = "0x160B958")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x160BB10", Offset = "0x160BB10", VA = "0x160BB10")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x20000DF")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x600073B")]
	[Address(RVA = "0x160BC80", Offset = "0x160BC80", VA = "0x160BC80")]
	private void Awake()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x160BCFC", Offset = "0x160BCFC", VA = "0x160BCFC")]
	private void Start()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x160BD94", Offset = "0x160BD94", VA = "0x160BD94")]
	private void Update()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x160BDF0", Offset = "0x160BDF0", VA = "0x160BDF0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x160BE54", Offset = "0x160BE54", VA = "0x160BE54")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x160BE58", Offset = "0x160BE58", VA = "0x160BE58")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x20000E0")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x20005CA")]
	public enum Result
	{
		[Token(Token = "0x4002439")]
		Success = 0,
		[Token(Token = "0x400243A")]
		Unknown = -2200,
		[Token(Token = "0x400243B")]
		CannotCreateContext = -2201,
		[Token(Token = "0x400243C")]
		InvalidParam = -2202,
		[Token(Token = "0x400243D")]
		BadSampleRate = -2203,
		[Token(Token = "0x400243E")]
		MissingDLL = -2204,
		[Token(Token = "0x400243F")]
		BadVersion = -2205,
		[Token(Token = "0x4002440")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x20005CB")]
	public enum AudioDataType
	{
		[Token(Token = "0x4002442")]
		S16_Mono,
		[Token(Token = "0x4002443")]
		S16_Stereo,
		[Token(Token = "0x4002444")]
		F32_Mono,
		[Token(Token = "0x4002445")]
		F32_Stereo
	}

	[Token(Token = "0x20005CC")]
	public enum Viseme
	{
		[Token(Token = "0x4002447")]
		sil,
		[Token(Token = "0x4002448")]
		PP,
		[Token(Token = "0x4002449")]
		FF,
		[Token(Token = "0x400244A")]
		TH,
		[Token(Token = "0x400244B")]
		DD,
		[Token(Token = "0x400244C")]
		kk,
		[Token(Token = "0x400244D")]
		CH,
		[Token(Token = "0x400244E")]
		SS,
		[Token(Token = "0x400244F")]
		nn,
		[Token(Token = "0x4002450")]
		RR,
		[Token(Token = "0x4002451")]
		aa,
		[Token(Token = "0x4002452")]
		E,
		[Token(Token = "0x4002453")]
		ih,
		[Token(Token = "0x4002454")]
		oh,
		[Token(Token = "0x4002455")]
		ou
	}

	[Token(Token = "0x20005CD")]
	public enum Signals
	{
		[Token(Token = "0x4002457")]
		VisemeOn,
		[Token(Token = "0x4002458")]
		VisemeOff,
		[Token(Token = "0x4002459")]
		VisemeAmount,
		[Token(Token = "0x400245A")]
		VisemeSmoothing,
		[Token(Token = "0x400245B")]
		LaughterAmount
	}

	[Token(Token = "0x20005CE")]
	public enum ContextProviders
	{
		[Token(Token = "0x400245D")]
		Original,
		[Token(Token = "0x400245E")]
		Enhanced,
		[Token(Token = "0x400245F")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x20005CF")]
	public class Frame
	{
		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0x1D7CC18", Offset = "0x1D7CC18", VA = "0x1D7CC18")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6002A00")]
		[Address(RVA = "0x1D7CC74", Offset = "0x1D7CC74", VA = "0x1D7CC74")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002A01")]
		[Address(RVA = "0x1D7CD04", Offset = "0x1D7CD04", VA = "0x1D7CD04")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x40007A8")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x6000741")]
	[Address(RVA = "0x1D7B4D8", Offset = "0x1D7B4D8", VA = "0x1D7B4D8")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x6000742")]
	[Address(RVA = "0x1D7B580", Offset = "0x1D7B580", VA = "0x1D7B580")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000743")]
	[Address(RVA = "0x1D7B608", Offset = "0x1D7B608", VA = "0x1D7B608")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000744")]
	[Address(RVA = "0x1D7B6B4", Offset = "0x1D7B6B4", VA = "0x1D7B6B4")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000745")]
	[Address(RVA = "0x1D7B774", Offset = "0x1D7B774", VA = "0x1D7B774")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000746")]
	[Address(RVA = "0x1D7B858", Offset = "0x1D7B858", VA = "0x1D7B858")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000747")]
	[Address(RVA = "0x1D7B8F0", Offset = "0x1D7B8F0", VA = "0x1D7B8F0")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000748")]
	[Address(RVA = "0x1D7B988", Offset = "0x1D7B988", VA = "0x1D7B988")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000749")]
	[Address(RVA = "0x1D7BA48", Offset = "0x1D7BA48", VA = "0x1D7BA48")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x1D7BB5C", Offset = "0x1D7BB5C", VA = "0x1D7BB5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x1D7BFCC", Offset = "0x1D7BFCC", VA = "0x1D7BFCC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x1D7BE94", Offset = "0x1D7BE94", VA = "0x1D7BE94")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x1D7C0AC", Offset = "0x1D7C0AC", VA = "0x1D7C0AC")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x1D7C1C0", Offset = "0x1D7C1C0", VA = "0x1D7C1C0")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x1D7C230", Offset = "0x1D7C230", VA = "0x1D7C230")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x1D7C298", Offset = "0x1D7C298", VA = "0x1D7C298")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x1D7C3BC", Offset = "0x1D7C3BC", VA = "0x1D7C3BC")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x1D7C4F4", Offset = "0x1D7C4F4", VA = "0x1D7C4F4")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x1D7C5D4", Offset = "0x1D7C5D4", VA = "0x1D7C5D4")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x1D7C6B4", Offset = "0x1D7C6B4", VA = "0x1D7C6B4")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x1D7C7B8", Offset = "0x1D7C7B8", VA = "0x1D7C7B8")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x1D7C960", Offset = "0x1D7C960", VA = "0x1D7C960")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x1D7CB00", Offset = "0x1D7CB00", VA = "0x1D7CB00")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x20000E1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB70C14", Offset = "0xB70C14")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75850", Offset = "0xB75850")]
	public bool enableKeyboardInput;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75888", Offset = "0xB75888")]
	public bool enableTouchInput;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB758C0", Offset = "0xB758C0")]
	public bool audioLoopback;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB758F8", Offset = "0xB758F8")]
	public KeyCode loopbackKey;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75930", Offset = "0xB75930")]
	public bool showVisemes;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75968", Offset = "0xB75968")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB759A0", Offset = "0xB759A0")]
	public bool skipAudioSource;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB759D8", Offset = "0xB759D8")]
	public float gain;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x1D7CD8C", Offset = "0x1D7CD8C", VA = "0x1D7CD8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x1D7CEBC", Offset = "0x1D7CEBC", VA = "0x1D7CEBC")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x1D7D2C0", Offset = "0x1D7D2C0", VA = "0x1D7D2C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x1D7D584", Offset = "0x1D7D584", VA = "0x1D7D584")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x1D7D5EC", Offset = "0x1D7D5EC", VA = "0x1D7D5EC")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x1D7D65C", Offset = "0x1D7D65C", VA = "0x1D7D65C")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x1D7D7F8", Offset = "0x1D7D7F8", VA = "0x1D7D7F8")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x1D7D994", Offset = "0x1D7D994", VA = "0x1D7D994")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x1D7DAC8", Offset = "0x1D7DAC8", VA = "0x1D7DAC8")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x1D7D308", Offset = "0x1D7D308", VA = "0x1D7D308")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x1D7D1E0", Offset = "0x1D7D1E0", VA = "0x1D7D1E0")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x1D7DAD8", Offset = "0x1D7DAD8", VA = "0x1D7DAD8")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x1D7DC10", Offset = "0x1D7DC10", VA = "0x1D7DC10")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x20000E2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB70C78", Offset = "0xB70C78")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75A10", Offset = "0xB75A10")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75A48", Offset = "0xB75A48")]
	public bool enableAcceleration;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x1700004A")]
	public int Smoothing
	{
		[Token(Token = "0x6000767")]
		[Address(RVA = "0x1D7DD90", Offset = "0x1D7DD90", VA = "0x1D7DD90")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000766")]
		[Address(RVA = "0x1D7DCA4", Offset = "0x1D7DCA4", VA = "0x1D7DCA4")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public uint Context
	{
		[Token(Token = "0x6000768")]
		[Address(RVA = "0x1D7DD98", Offset = "0x1D7DD98", VA = "0x1D7DD98")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700004C")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x6000769")]
		[Address(RVA = "0x1D7DDA0", Offset = "0x1D7DDA0", VA = "0x1D7DDA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x1D7DDA8", Offset = "0x1D7DDA8", VA = "0x1D7DDA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x1D7DF40", Offset = "0x1D7DF40", VA = "0x1D7DF40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x1D7E064", Offset = "0x1D7E064", VA = "0x1D7E064")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x1D7E06C", Offset = "0x1D7E06C", VA = "0x1D7E06C")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x1D7E160", Offset = "0x1D7E160", VA = "0x1D7E160")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x1D7E228", Offset = "0x1D7E228", VA = "0x1D7E228")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x1D7DC34", Offset = "0x1D7DC34", VA = "0x1D7DC34")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x20000E3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB70CDC", Offset = "0xB70CDC")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75A80", Offset = "0xB75A80")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x16077E4", Offset = "0x16077E4", VA = "0x16077E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x1607964", Offset = "0x1607964", VA = "0x1607964")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x20000E4")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75AB8", Offset = "0xB75AB8")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75AF0", Offset = "0xB75AF0")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75B28", Offset = "0xB75B28")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75B60", Offset = "0xB75B60")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75B98", Offset = "0xB75B98")]
	public KeyCode laughterKey;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75BD0", Offset = "0xB75BD0")]
	public int laughterBlendTarget;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB75C08", Offset = "0xB75C08")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75C08", Offset = "0xB75C08")]
	public float laughterThreshold;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB75C5C", Offset = "0xB75C5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75C5C", Offset = "0xB75C5C")]
	public float laughterMultiplier;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB75CB0", Offset = "0xB75CB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75CB0", Offset = "0xB75CB0")]
	public int smoothAmount;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x160796C", Offset = "0x160796C", VA = "0x160796C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x1607AB4", Offset = "0x1607AB4", VA = "0x1607AB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x1607D88", Offset = "0x1607D88", VA = "0x1607D88")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x1607BC8", Offset = "0x1607BC8", VA = "0x1607BC8")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x1607C94", Offset = "0x1607C94", VA = "0x1607C94")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x1607E60", Offset = "0x1607E60", VA = "0x1607E60")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x1607F38", Offset = "0x1607F38", VA = "0x1607F38")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x1607FA8", Offset = "0x1607FA8", VA = "0x1607FA8")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x20000E5")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75D08", Offset = "0xB75D08")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0xB75D08", Offset = "0xB75D08")]
	public Texture[] Textures;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB75E84", Offset = "0xB75E84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75E84", Offset = "0xB75E84")]
	public int smoothAmount;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x16080A0", Offset = "0x16080A0", VA = "0x16080A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x16081F8", Offset = "0x16081F8", VA = "0x16081F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x16083B0", Offset = "0x16083B0", VA = "0x16083B0")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x16084D8", Offset = "0x16084D8", VA = "0x16084D8")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x20000E6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB70D40", Offset = "0xB70D40")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x20005D0")]
	public enum micActivation
	{
		[Token(Token = "0x4002465")]
		HoldToSpeak,
		[Token(Token = "0x4002466")]
		PushToSpeak,
		[Token(Token = "0x4002467")]
		ConstantSpeak
	}

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75EDC", Offset = "0xB75EDC")]
	public AudioSource audioSource;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75F14", Offset = "0xB75F14")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75F4C", Offset = "0xB75F4C")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB75F84", Offset = "0xB75F84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75F84", Offset = "0xB75F84")]
	private float micInputVolume;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75FEC", Offset = "0xB75FEC")]
	private int micFrequency;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76038", Offset = "0xB76038")]
	public micActivation micControl;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76070", Offset = "0xB76070")]
	public KeyCode micActivationKey;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB760A8", Offset = "0xB760A8")]
	public string selectedDevice;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x1700004D")]
	public float MicFrequency
	{
		[Token(Token = "0x600077F")]
		[Address(RVA = "0x1609070", Offset = "0x1609070", VA = "0x1609070")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000780")]
		[Address(RVA = "0x160907C", Offset = "0x160907C", VA = "0x160907C")]
		set
		{
		}
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x1609108", Offset = "0x1609108", VA = "0x1609108")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x16091C8", Offset = "0x16091C8", VA = "0x16091C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x1609214", Offset = "0x1609214", VA = "0x1609214")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x1609368", Offset = "0x1609368", VA = "0x1609368")]
	private void Update()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x16097B0", Offset = "0x16097B0", VA = "0x16097B0")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x16097C4", Offset = "0x16097C4", VA = "0x16097C4")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x16097DC", Offset = "0x16097DC", VA = "0x16097DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x16097E0", Offset = "0x16097E0", VA = "0x16097E0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x1609858", Offset = "0x1609858", VA = "0x1609858")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x16092A0", Offset = "0x16092A0", VA = "0x16092A0")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x1609610", Offset = "0x1609610", VA = "0x1609610")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x16094C4", Offset = "0x16094C4", VA = "0x16094C4")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x1609A4C", Offset = "0x1609A4C", VA = "0x1609A4C")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x1609A54", Offset = "0x1609A54", VA = "0x1609A54")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E7")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x16078BC", Offset = "0x16078BC", VA = "0x16078BC")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x1609A84", Offset = "0x1609A84", VA = "0x1609A84")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x20000E8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB70DA4", Offset = "0xB70DA4")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20005D1")]
	public enum RotationAxes
	{
		[Token(Token = "0x4002469")]
		MouseXAndY,
		[Token(Token = "0x400246A")]
		MouseX,
		[Token(Token = "0x400246B")]
		MouseY
	}

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x13390EC", Offset = "0x13390EC", VA = "0x13390EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x1339354", Offset = "0x1339354", VA = "0x1339354")]
	private void Start()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x1339414", Offset = "0x1339414", VA = "0x1339414")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000E9")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000EA")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x1D70FD0", Offset = "0x1D70FD0", VA = "0x1D70FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x1D70FD4", Offset = "0x1D70FD4", VA = "0x1D70FD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x1D70FD8", Offset = "0x1D70FD8", VA = "0x1D70FD8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x1D71148", Offset = "0x1D71148", VA = "0x1D71148")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x1D71028", Offset = "0x1D71028", VA = "0x1D71028")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x1D710BC", Offset = "0x1D710BC", VA = "0x1D710BC")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x1D71198", Offset = "0x1D71198", VA = "0x1D71198")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x1D71230", Offset = "0x1D71230", VA = "0x1D71230")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x1D71398", Offset = "0x1D71398", VA = "0x1D71398")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x1D71500", Offset = "0x1D71500", VA = "0x1D71500")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000EB")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20005D2")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x40007F8")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40007FE")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x1617644", Offset = "0x1617644", VA = "0x1617644")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x1617474", Offset = "0x1617474", VA = "0x1617474")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB85210", Offset = "0xB85210")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x161767C", Offset = "0x161767C", VA = "0x161767C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x16177C8", Offset = "0x16177C8", VA = "0x16177C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x16178D4", Offset = "0x16178D4", VA = "0x16178D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x1618300", Offset = "0x1618300", VA = "0x1618300")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x161771C", Offset = "0x161771C", VA = "0x161771C")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x161782C", Offset = "0x161782C", VA = "0x161782C")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x1617FFC", Offset = "0x1617FFC", VA = "0x1617FFC")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x1618094", Offset = "0x1618094", VA = "0x1618094")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x1618130", Offset = "0x1618130", VA = "0x1618130")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x16181CC", Offset = "0x16181CC", VA = "0x16181CC")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x1618264", Offset = "0x1618264", VA = "0x1618264")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x161913C", Offset = "0x161913C", VA = "0x161913C")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x16191FC", Offset = "0x16191FC", VA = "0x16191FC")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x16192BC", Offset = "0x16192BC", VA = "0x16192BC")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000EC")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20005D3")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x400246D")]
		Uninitialized = -1,
		[Token(Token = "0x400246E")]
		NotEnabled,
		[Token(Token = "0x400246F")]
		Success,
		[Token(Token = "0x4002470")]
		StreamError,
		[Token(Token = "0x4002471")]
		ProcessError,
		[Token(Token = "0x4002472")]
		MaxStatValue
	}

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x1700004E")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x1339898", Offset = "0x1339898", VA = "0x1339898")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x13398A0", Offset = "0x13398A0", VA = "0x13398A0")]
		set
		{
		}
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x13398AC", Offset = "0x13398AC", VA = "0x13398AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x1339ACC", Offset = "0x1339ACC", VA = "0x1339ACC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x1339D2C", Offset = "0x1339D2C", VA = "0x1339D2C")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000ED")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20005D4")]
	private enum Parameters
	{
		[Token(Token = "0x4002474")]
		P_GAIN,
		[Token(Token = "0x4002475")]
		P_USEINVSQR,
		[Token(Token = "0x4002476")]
		P_NEAR,
		[Token(Token = "0x4002477")]
		P_FAR,
		[Token(Token = "0x4002478")]
		P_RADIUS,
		[Token(Token = "0x4002479")]
		P_DISABLE_RFL,
		[Token(Token = "0x400247A")]
		P_VSPEAKERMODE,
		[Token(Token = "0x400247B")]
		P_AMBISTAT,
		[Token(Token = "0x400247C")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x400247D")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x400247E")]
		P_SENDLEVEL,
		[Token(Token = "0x400247F")]
		P_NUM
	}

	[Token(Token = "0x4000804")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700004F")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x1339FB8", Offset = "0x1339FB8", VA = "0x1339FB8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x1339FC0", Offset = "0x1339FC0", VA = "0x1339FC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public float Gain
	{
		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x1339FCC", Offset = "0x1339FCC", VA = "0x1339FCC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x1339FD4", Offset = "0x1339FD4", VA = "0x1339FD4")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x133A058", Offset = "0x133A058", VA = "0x133A058")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x133A060", Offset = "0x133A060", VA = "0x133A060")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public float Near
	{
		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x133A06C", Offset = "0x133A06C", VA = "0x133A06C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x133A074", Offset = "0x133A074", VA = "0x133A074")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public float Far
	{
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x133A0FC", Offset = "0x133A0FC", VA = "0x133A0FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x133A104", Offset = "0x133A104", VA = "0x133A104")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x133A18C", Offset = "0x133A18C", VA = "0x133A18C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x133A194", Offset = "0x133A194", VA = "0x133A194")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public float ReverbSend
	{
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x133A21C", Offset = "0x133A21C", VA = "0x133A21C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x133A224", Offset = "0x133A224", VA = "0x133A224")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public bool EnableRfl
	{
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x133A2AC", Offset = "0x133A2AC", VA = "0x133A2AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x133A2B4", Offset = "0x133A2B4", VA = "0x133A2B4")]
		set
		{
		}
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x1339DB0", Offset = "0x1339DB0", VA = "0x1339DB0")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB85274", Offset = "0xB85274")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x1339EC0", Offset = "0x1339EC0", VA = "0x1339EC0")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x133A2C0", Offset = "0x133A2C0", VA = "0x133A2C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x133A438", Offset = "0x133A438", VA = "0x133A438")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x133A43C", Offset = "0x133A43C", VA = "0x133A43C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x133A32C", Offset = "0x133A32C", VA = "0x133A32C")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x133A508", Offset = "0x133A508", VA = "0x133A508")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x133A968", Offset = "0x133A968", VA = "0x133A968")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x1339E28", Offset = "0x1339E28", VA = "0x1339E28")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x133AA38", Offset = "0x133AA38", VA = "0x133AA38")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000EE")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x400080F")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000811")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x133AA58", Offset = "0x133AA58", VA = "0x133AA58")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x133AA64", Offset = "0x133AA64", VA = "0x133AA64")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x133AB34", Offset = "0x133AB34", VA = "0x133AB34")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x133AA9C", Offset = "0x133AA9C", VA = "0x133AA9C")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x133ABCC", Offset = "0x133ABCC", VA = "0x133ABCC")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000EF")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20005D5")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20005D6")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000818")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000057")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x1D649E8", Offset = "0x1D649E8", VA = "0x1D649E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000058")]
	public string filePath
	{
		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x1D64A74", Offset = "0x1D64A74", VA = "0x1D64A74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x1D64AEC", Offset = "0x1D64AEC", VA = "0x1D64AEC")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x1D64C28", Offset = "0x1D64C28", VA = "0x1D64C28")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x1D64C2C", Offset = "0x1D64C2C", VA = "0x1D64C2C")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x1D651A4", Offset = "0x1D651A4", VA = "0x1D651A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x1D6554C", Offset = "0x1D6554C", VA = "0x1D6554C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x1D656B0", Offset = "0x1D656B0", VA = "0x1D656B0")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x1D65D78", Offset = "0x1D65D78", VA = "0x1D65D78")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x1D65DC4", Offset = "0x1D65DC4", VA = "0x1D65DC4")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x1D67738", Offset = "0x1D67738", VA = "0x1D67738")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x1D6760C", Offset = "0x1D6760C", VA = "0x1D6760C")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x1D64FD8", Offset = "0x1D64FD8", VA = "0x1D64FD8")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x1D64E00", Offset = "0x1D64E00", VA = "0x1D64E00")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x1D67D50", Offset = "0x1D67D50", VA = "0x1D67D50")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x1D681A4", Offset = "0x1D681A4", VA = "0x1D681A4")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000F0")]
internal class ONSPPropagation
{
	[Token(Token = "0x20005D7")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4002486")]
		Int8,
		[Token(Token = "0x4002487")]
		UInt8,
		[Token(Token = "0x4002488")]
		Int16,
		[Token(Token = "0x4002489")]
		UInt16,
		[Token(Token = "0x400248A")]
		Int32,
		[Token(Token = "0x400248B")]
		UInt32,
		[Token(Token = "0x400248C")]
		Int64,
		[Token(Token = "0x400248D")]
		UInt64,
		[Token(Token = "0x400248E")]
		Float16,
		[Token(Token = "0x400248F")]
		Float32,
		[Token(Token = "0x4002490")]
		Float64
	}

	[Token(Token = "0x20005D8")]
	public class ClientType
	{
		[Token(Token = "0x4002491")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4002492")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4002493")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4002494")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4002495")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4002496")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4002497")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4002498")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4002499")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x400249A")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x400249B")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x400249C")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x400249D")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x400249E")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x400249F")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6002A06")]
		[Address(RVA = "0x133AFCC", Offset = "0x133AFCC", VA = "0x133AFCC")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20005D9")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6002A07")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6002A08")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6002A09")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6002A0A")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002A0B")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6002A0C")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002A0D")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002A0E")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002A0F")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002A10")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002A11")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002A12")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6002A13")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002A14")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002A15")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20005DA")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x40024A0")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000499")]
		private IntPtr context
		{
			[Token(Token = "0x6002A16")]
			[Address(RVA = "0x133BD90", Offset = "0x133BD90", VA = "0x133BD90")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002A17")]
		[Address(RVA = "0x133BDF4", Offset = "0x133BDF4", VA = "0x133BDF4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002A18")]
		[Address(RVA = "0x133BE9C", Offset = "0x133BE9C", VA = "0x133BE9C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0x133BF44", Offset = "0x133BF44", VA = "0x133BF44", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A1A")]
		[Address(RVA = "0x133BF68", Offset = "0x133BF68", VA = "0x133BF68")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0x133C010", Offset = "0x133C010", VA = "0x133C010", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A1C")]
		[Address(RVA = "0x133C034", Offset = "0x133C034", VA = "0x133C034")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002A1D")]
		[Address(RVA = "0x133C0D8", Offset = "0x133C0D8", VA = "0x133C0D8", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A1E")]
		[Address(RVA = "0x133C0FC", Offset = "0x133C0FC", VA = "0x133C0FC")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002A1F")]
		[Address(RVA = "0x133C194", Offset = "0x133C194", VA = "0x133C194", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A20")]
		[Address(RVA = "0x133C19C", Offset = "0x133C19C", VA = "0x133C19C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002A21")]
		[Address(RVA = "0x133C2C0", Offset = "0x133C2C0", VA = "0x133C2C0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A22")]
		[Address(RVA = "0x133C3B8", Offset = "0x133C3B8", VA = "0x133C3B8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002A23")]
		[Address(RVA = "0x133C468", Offset = "0x133C468", VA = "0x133C468", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A24")]
		[Address(RVA = "0x133C474", Offset = "0x133C474", VA = "0x133C474")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002A25")]
		[Address(RVA = "0x133C5B8", Offset = "0x133C5B8", VA = "0x133C5B8", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A26")]
		[Address(RVA = "0x133C5C4", Offset = "0x133C5C4", VA = "0x133C5C4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002A27")]
		[Address(RVA = "0x133C688", Offset = "0x133C688", VA = "0x133C688", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A28")]
		[Address(RVA = "0x133C694", Offset = "0x133C694", VA = "0x133C694")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002A29")]
		[Address(RVA = "0x133C758", Offset = "0x133C758", VA = "0x133C758", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A2A")]
		[Address(RVA = "0x133C764", Offset = "0x133C764", VA = "0x133C764")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002A2B")]
		[Address(RVA = "0x133C828", Offset = "0x133C828", VA = "0x133C828", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A2C")]
		[Address(RVA = "0x133C834", Offset = "0x133C834", VA = "0x133C834")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002A2D")]
		[Address(RVA = "0x133C8D8", Offset = "0x133C8D8", VA = "0x133C8D8", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A2E")]
		[Address(RVA = "0x133C8FC", Offset = "0x133C8FC", VA = "0x133C8FC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002A2F")]
		[Address(RVA = "0x133C994", Offset = "0x133C994", VA = "0x133C994", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A30")]
		[Address(RVA = "0x133C99C", Offset = "0x133C99C", VA = "0x133C99C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002A31")]
		[Address(RVA = "0x133CA5C", Offset = "0x133CA5C", VA = "0x133CA5C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A32")]
		[Address(RVA = "0x133CA68", Offset = "0x133CA68", VA = "0x133CA68")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002A33")]
		[Address(RVA = "0x133CB28", Offset = "0x133CB28", VA = "0x133CB28", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A34")]
		[Address(RVA = "0x133CB38", Offset = "0x133CB38", VA = "0x133CB38")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6002A35")]
		[Address(RVA = "0x133CBE0", Offset = "0x133CBE0", VA = "0x133CBE0", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6002A36")]
		[Address(RVA = "0x133AF78", Offset = "0x133AF78", VA = "0x133AF78")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20005DB")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x40024A2")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700049A")]
		private IntPtr context
		{
			[Token(Token = "0x6002A37")]
			[Address(RVA = "0x1D63B38", Offset = "0x1D63B38", VA = "0x1D63B38")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002A38")]
		[Address(RVA = "0x1D63B9C", Offset = "0x1D63B9C", VA = "0x1D63B9C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002A39")]
		[Address(RVA = "0x1D63C44", Offset = "0x1D63C44", VA = "0x1D63C44")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002A3A")]
		[Address(RVA = "0x1D63CEC", Offset = "0x1D63CEC", VA = "0x1D63CEC", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A3B")]
		[Address(RVA = "0x1D63D10", Offset = "0x1D63D10", VA = "0x1D63D10")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002A3C")]
		[Address(RVA = "0x1D63DB8", Offset = "0x1D63DB8", VA = "0x1D63DB8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A3D")]
		[Address(RVA = "0x1D63DDC", Offset = "0x1D63DDC", VA = "0x1D63DDC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002A3E")]
		[Address(RVA = "0x1D63E84", Offset = "0x1D63E84", VA = "0x1D63E84", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A3F")]
		[Address(RVA = "0x1D63EA8", Offset = "0x1D63EA8", VA = "0x1D63EA8")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002A40")]
		[Address(RVA = "0x1D63F40", Offset = "0x1D63F40", VA = "0x1D63F40", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A41")]
		[Address(RVA = "0x1D63F48", Offset = "0x1D63F48", VA = "0x1D63F48")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002A42")]
		[Address(RVA = "0x1D6406C", Offset = "0x1D6406C", VA = "0x1D6406C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A43")]
		[Address(RVA = "0x1D64164", Offset = "0x1D64164", VA = "0x1D64164")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002A44")]
		[Address(RVA = "0x1D64214", Offset = "0x1D64214", VA = "0x1D64214", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A45")]
		[Address(RVA = "0x1D64220", Offset = "0x1D64220", VA = "0x1D64220")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002A46")]
		[Address(RVA = "0x1D64364", Offset = "0x1D64364", VA = "0x1D64364", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A47")]
		[Address(RVA = "0x1D64370", Offset = "0x1D64370", VA = "0x1D64370")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002A48")]
		[Address(RVA = "0x1D64434", Offset = "0x1D64434", VA = "0x1D64434", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A49")]
		[Address(RVA = "0x1D64440", Offset = "0x1D64440", VA = "0x1D64440")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002A4A")]
		[Address(RVA = "0x1D64504", Offset = "0x1D64504", VA = "0x1D64504", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A4B")]
		[Address(RVA = "0x1D64510", Offset = "0x1D64510", VA = "0x1D64510")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002A4C")]
		[Address(RVA = "0x1D645D4", Offset = "0x1D645D4", VA = "0x1D645D4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A4D")]
		[Address(RVA = "0x1D645E0", Offset = "0x1D645E0", VA = "0x1D645E0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002A4E")]
		[Address(RVA = "0x1D64688", Offset = "0x1D64688", VA = "0x1D64688", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A4F")]
		[Address(RVA = "0x1D646AC", Offset = "0x1D646AC", VA = "0x1D646AC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002A50")]
		[Address(RVA = "0x1D64744", Offset = "0x1D64744", VA = "0x1D64744", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A51")]
		[Address(RVA = "0x1D6474C", Offset = "0x1D6474C", VA = "0x1D6474C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002A52")]
		[Address(RVA = "0x1D6480C", Offset = "0x1D6480C", VA = "0x1D6480C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A53")]
		[Address(RVA = "0x1D64818", Offset = "0x1D64818", VA = "0x1D64818")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002A54")]
		[Address(RVA = "0x1D648D8", Offset = "0x1D648D8", VA = "0x1D648D8", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A55")]
		[Address(RVA = "0x1D648E8", Offset = "0x1D648E8", VA = "0x1D648E8")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6002A56")]
		[Address(RVA = "0x1D64990", Offset = "0x1D64990", VA = "0x1D64990", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0x1D6499C", Offset = "0x1D6499C", VA = "0x1D6499C")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20005DC")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x40024A4")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700049B")]
		private IntPtr context
		{
			[Token(Token = "0x6002A58")]
			[Address(RVA = "0x133AFD4", Offset = "0x133AFD4", VA = "0x133AFD4")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002A59")]
		[Address(RVA = "0x133AE84", Offset = "0x133AE84", VA = "0x133AE84")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002A5A")]
		[Address(RVA = "0x133B038", Offset = "0x133B038", VA = "0x133B038")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002A5B")]
		[Address(RVA = "0x133B0E0", Offset = "0x133B0E0", VA = "0x133B0E0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A5C")]
		[Address(RVA = "0x133B104", Offset = "0x133B104", VA = "0x133B104")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002A5D")]
		[Address(RVA = "0x133B1AC", Offset = "0x133B1AC", VA = "0x133B1AC", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A5E")]
		[Address(RVA = "0x133B1D0", Offset = "0x133B1D0", VA = "0x133B1D0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0x133B278", Offset = "0x133B278", VA = "0x133B278", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A60")]
		[Address(RVA = "0x133B29C", Offset = "0x133B29C", VA = "0x133B29C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002A61")]
		[Address(RVA = "0x133B334", Offset = "0x133B334", VA = "0x133B334", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A62")]
		[Address(RVA = "0x133B33C", Offset = "0x133B33C", VA = "0x133B33C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002A63")]
		[Address(RVA = "0x133B460", Offset = "0x133B460", VA = "0x133B460", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A64")]
		[Address(RVA = "0x133B558", Offset = "0x133B558", VA = "0x133B558")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002A65")]
		[Address(RVA = "0x133B608", Offset = "0x133B608", VA = "0x133B608", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A66")]
		[Address(RVA = "0x133B614", Offset = "0x133B614", VA = "0x133B614")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002A67")]
		[Address(RVA = "0x133B758", Offset = "0x133B758", VA = "0x133B758", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A68")]
		[Address(RVA = "0x133B764", Offset = "0x133B764", VA = "0x133B764")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002A69")]
		[Address(RVA = "0x133B828", Offset = "0x133B828", VA = "0x133B828", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A6A")]
		[Address(RVA = "0x133B834", Offset = "0x133B834", VA = "0x133B834")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002A6B")]
		[Address(RVA = "0x133B8F8", Offset = "0x133B8F8", VA = "0x133B8F8", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A6C")]
		[Address(RVA = "0x133B904", Offset = "0x133B904", VA = "0x133B904")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002A6D")]
		[Address(RVA = "0x133B9C8", Offset = "0x133B9C8", VA = "0x133B9C8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A6E")]
		[Address(RVA = "0x133B9D4", Offset = "0x133B9D4", VA = "0x133B9D4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002A6F")]
		[Address(RVA = "0x133BA7C", Offset = "0x133BA7C", VA = "0x133BA7C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A70")]
		[Address(RVA = "0x133BAA0", Offset = "0x133BAA0", VA = "0x133BAA0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002A71")]
		[Address(RVA = "0x133BB38", Offset = "0x133BB38", VA = "0x133BB38", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A72")]
		[Address(RVA = "0x133BB40", Offset = "0x133BB40", VA = "0x133BB40")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002A73")]
		[Address(RVA = "0x133BC00", Offset = "0x133BC00", VA = "0x133BC00", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A74")]
		[Address(RVA = "0x133BC0C", Offset = "0x133BC0C", VA = "0x133BC0C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002A75")]
		[Address(RVA = "0x133BCCC", Offset = "0x133BCCC", VA = "0x133BCCC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002A76")]
		[Address(RVA = "0x133BCDC", Offset = "0x133BCDC", VA = "0x133BCDC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6002A77")]
		[Address(RVA = "0x133BD84", Offset = "0x133BD84", VA = "0x133BD84", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6002A78")]
		[Address(RVA = "0x133AF2C", Offset = "0x133AF2C", VA = "0x133AF2C")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000059")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x133ABDC", Offset = "0x133ABDC", VA = "0x133ABDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x133AC4C", Offset = "0x133AC4C", VA = "0x133AC4C")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x133AFC4", Offset = "0x133AFC4", VA = "0x133AFC4")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000F1")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20005DD")]
	public enum Preset
	{
		[Token(Token = "0x40024A7")]
		Custom,
		[Token(Token = "0x40024A8")]
		AcousticTile,
		[Token(Token = "0x40024A9")]
		Brick,
		[Token(Token = "0x40024AA")]
		BrickPainted,
		[Token(Token = "0x40024AB")]
		Carpet,
		[Token(Token = "0x40024AC")]
		CarpetHeavy,
		[Token(Token = "0x40024AD")]
		CarpetHeavyPadded,
		[Token(Token = "0x40024AE")]
		CeramicTile,
		[Token(Token = "0x40024AF")]
		Concrete,
		[Token(Token = "0x40024B0")]
		ConcreteRough,
		[Token(Token = "0x40024B1")]
		ConcreteBlock,
		[Token(Token = "0x40024B2")]
		ConcreteBlockPainted,
		[Token(Token = "0x40024B3")]
		Curtain,
		[Token(Token = "0x40024B4")]
		Foliage,
		[Token(Token = "0x40024B5")]
		Glass,
		[Token(Token = "0x40024B6")]
		GlassHeavy,
		[Token(Token = "0x40024B7")]
		Grass,
		[Token(Token = "0x40024B8")]
		Gravel,
		[Token(Token = "0x40024B9")]
		GypsumBoard,
		[Token(Token = "0x40024BA")]
		PlasterOnBrick,
		[Token(Token = "0x40024BB")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x40024BC")]
		Soil,
		[Token(Token = "0x40024BD")]
		SoundProof,
		[Token(Token = "0x40024BE")]
		Snow,
		[Token(Token = "0x40024BF")]
		Steel,
		[Token(Token = "0x40024C0")]
		Water,
		[Token(Token = "0x40024C1")]
		WoodThin,
		[Token(Token = "0x40024C2")]
		WoodThick,
		[Token(Token = "0x40024C3")]
		WoodFloor,
		[Token(Token = "0x40024C4")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20005DE")]
	public sealed class Point
	{
		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6002A79")]
		[Address(RVA = "0x1D70880", Offset = "0x1D70880", VA = "0x1D70880")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6002A7A")]
		[Address(RVA = "0x1D709C8", Offset = "0x1D709C8", VA = "0x1D709C8")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6002A7B")]
		[Address(RVA = "0x1D70A38", Offset = "0x1D70A38", VA = "0x1D70A38")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20005DF")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB7269C", Offset = "0xB7269C")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20008EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73DE4", Offset = "0xB73DE4")]
		private sealed class <>c
		{
			[Token(Token = "0x400302F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4003031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6003596")]
			[Address(RVA = "0x1D70EAC", Offset = "0x1D70EAC", VA = "0x1D70EAC")]
			public <>c()
			{
			}

			[Token(Token = "0x6003597")]
			[Address(RVA = "0x1D70EB4", Offset = "0x1D70EB4", VA = "0x1D70EB4")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6003598")]
			[Address(RVA = "0x1D70ED0", Offset = "0x1D70ED0", VA = "0x1D70ED0")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x1700049C")]
		public float Item
		{
			[Token(Token = "0x6002A7C")]
			[Address(RVA = "0x1D70A70", Offset = "0x1D70A70", VA = "0x1D70A70")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A7D")]
		[Address(RVA = "0x1D70950", Offset = "0x1D70950", VA = "0x1D70950")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76170", Offset = "0xB76170")]
	public Spectrum absorption;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB761A8", Offset = "0xB761A8")]
	public Spectrum transmission;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB761E0", Offset = "0xB761E0")]
	public Spectrum scattering;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x1700005A")]
	public Preset preset
	{
		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x1D6827C", Offset = "0x1D6827C", VA = "0x1D6827C")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x1D68284", Offset = "0x1D68284", VA = "0x1D68284")]
		set
		{
		}
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x1D682AC", Offset = "0x1D682AC", VA = "0x1D682AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x1D67BDC", Offset = "0x1D67BDC", VA = "0x1D67BDC")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x1D688CC", Offset = "0x1D688CC", VA = "0x1D688CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x1D688D0", Offset = "0x1D688D0", VA = "0x1D688D0")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x1D682B0", Offset = "0x1D682B0", VA = "0x1D682B0")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x1D67478", Offset = "0x1D67478", VA = "0x1D67478")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x1D689B8", Offset = "0x1D689B8", VA = "0x1D689B8")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x1D68E58", Offset = "0x1D68E58", VA = "0x1D68E58")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x1D69300", Offset = "0x1D69300", VA = "0x1D69300")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x1D697A8", Offset = "0x1D697A8", VA = "0x1D697A8")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x1D69C54", Offset = "0x1D69C54", VA = "0x1D69C54")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x1D6A0F8", Offset = "0x1D6A0F8", VA = "0x1D6A0F8")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x1D6A59C", Offset = "0x1D6A59C", VA = "0x1D6A59C")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x1D6AA48", Offset = "0x1D6AA48", VA = "0x1D6AA48")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x1D6AEF4", Offset = "0x1D6AEF4", VA = "0x1D6AEF4")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x1D6B39C", Offset = "0x1D6B39C", VA = "0x1D6B39C")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x1D6B848", Offset = "0x1D6B848", VA = "0x1D6B848")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x1D6BCF4", Offset = "0x1D6BCF4", VA = "0x1D6BCF4")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x1D6C198", Offset = "0x1D6C198", VA = "0x1D6C198")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x1D6C63C", Offset = "0x1D6C63C", VA = "0x1D6C63C")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x1D6CAE0", Offset = "0x1D6CAE0", VA = "0x1D6CAE0")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x1D6CF8C", Offset = "0x1D6CF8C", VA = "0x1D6CF8C")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x1D6D2F8", Offset = "0x1D6D2F8", VA = "0x1D6D2F8")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x1D6D65C", Offset = "0x1D6D65C", VA = "0x1D6D65C")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x1D6DB08", Offset = "0x1D6DB08", VA = "0x1D6DB08")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x1D6DFB0", Offset = "0x1D6DFB0", VA = "0x1D6DFB0")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x1D6E458", Offset = "0x1D6E458", VA = "0x1D6E458")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x1D6E7C0", Offset = "0x1D6E7C0", VA = "0x1D6E7C0")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x1D6E91C", Offset = "0x1D6E91C", VA = "0x1D6E91C")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x1D6EC80", Offset = "0x1D6EC80", VA = "0x1D6EC80")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x1D6F128", Offset = "0x1D6F128", VA = "0x1D6F128")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x1D6F5D4", Offset = "0x1D6F5D4", VA = "0x1D6F5D4")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x1D6FA7C", Offset = "0x1D6FA7C", VA = "0x1D6FA7C")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x1D6FF28", Offset = "0x1D6FF28", VA = "0x1D6FF28")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x1D703D4", Offset = "0x1D703D4", VA = "0x1D703D4")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x1D708B8", Offset = "0x1D708B8", VA = "0x1D708B8")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000F2")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x1D70EEC", Offset = "0x1D70EEC", VA = "0x1D70EEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x1D70FC0", Offset = "0x1D70FC0", VA = "0x1D70FC0")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000F3")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x1700005B")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000812")]
		[Address(RVA = "0x1D71588", Offset = "0x1D71588", VA = "0x1D71588")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x1D7169C", Offset = "0x1D7169C", VA = "0x1D7169C")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000F4")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000823")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000814")]
	[Address(RVA = "0x1D716AC", Offset = "0x1D716AC", VA = "0x1D716AC")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x1D7175C", Offset = "0x1D7175C", VA = "0x1D7175C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x1D71868", Offset = "0x1D71868", VA = "0x1D71868")]
	private void Start()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x1D7186C", Offset = "0x1D7186C", VA = "0x1D7186C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x1D71870", Offset = "0x1D71870", VA = "0x1D71870")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000F5")]
public class VoiceModDemo_Logic : MonoBehaviour
{
	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRVoiceModContext[] contexts;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] xfrms;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VoiceModEnableSwitch SwitchTarget;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int targetSet;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 scale;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float scaleMax;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int currentPreset;

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x17F5BFC", Offset = "0x17F5BFC", VA = "0x17F5BFC")]
	private void Start()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x17F5E08", Offset = "0x17F5E08", VA = "0x17F5E08")]
	private void Update()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x17F622C", Offset = "0x17F622C", VA = "0x17F622C")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x17F6324", Offset = "0x17F6324", VA = "0x17F6324")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x17F60D8", Offset = "0x17F60D8", VA = "0x17F60D8")]
	private void UpdateModelScale()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x17F66D8", Offset = "0x17F66D8", VA = "0x17F66D8")]
	public VoiceModDemo_Logic()
	{
	}
}
[Token(Token = "0x20000F6")]
public class VoiceModEnableSwitch : MonoBehaviour
{
	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x600081F")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x17F5D38", Offset = "0x17F5D38", VA = "0x17F5D38")]
	public bool SetActive(int target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x17F673C", Offset = "0x17F673C", VA = "0x17F673C")]
	public VoiceModEnableSwitch()
	{
	}
}
[Token(Token = "0x20000F7")]
public class OVRDebugConsole : MonoBehaviour
{
	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRDebugConsole s_Instance;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x1700005C")]
	public static OVRDebugConsole instance
	{
		[Token(Token = "0x6000822")]
		[Address(RVA = "0x1D7A9F0", Offset = "0x1D7A9F0", VA = "0x1D7A9F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x1D7ACAC", Offset = "0x1D7ACAC", VA = "0x1D7ACAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x1D7ADE8", Offset = "0x1D7ADE8", VA = "0x1D7ADE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x1D7AD1C", Offset = "0x1D7AD1C", VA = "0x1D7AD1C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x1D7AEE8", Offset = "0x1D7AEE8", VA = "0x1D7AEE8")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x1D7B05C", Offset = "0x1D7B05C", VA = "0x1D7B05C")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x1D7AE80", Offset = "0x1D7AE80", VA = "0x1D7AE80")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x1D7B138", Offset = "0x1D7B138", VA = "0x1D7B138")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x1D7AF6C", Offset = "0x1D7AF6C", VA = "0x1D7AF6C")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x1D7B0FC", Offset = "0x1D7B0FC", VA = "0x1D7B0FC")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x1D7B1B8", Offset = "0x1D7B1B8", VA = "0x1D7B1B8")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x1D7B3B4", Offset = "0x1D7B3B4", VA = "0x1D7B3B4")]
	private void Prune()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x1D7B1C8", Offset = "0x1D7B1C8", VA = "0x1D7B1C8")]
	private void Display()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x1D7B464", Offset = "0x1D7B464", VA = "0x1D7B464")]
	public OVRDebugConsole()
	{
	}
}
[Token(Token = "0x20000F8")]
public delegate void OVRCallback();
[Token(Token = "0x20000F9")]
public delegate void OVRCallback<T>(T arg1);
[Token(Token = "0x20000FA")]
public delegate void OVRCallback<T, U>(T arg1, U arg2);
[Token(Token = "0x20000FB")]
public delegate void OVRCallback<T, U, V>(T arg1, U arg2, V arg3);
[Token(Token = "0x20000FC")]
internal static class OVRMessenger
{
	[Token(Token = "0x20005E0")]
	public class BroadcastException : Exception
	{
		[Token(Token = "0x6002A7E")]
		[Address(RVA = "0x160A8F8", Offset = "0x160A8F8", VA = "0x160A8F8")]
		public BroadcastException(string msg)
		{
		}
	}

	[Token(Token = "0x20005E1")]
	public class ListenerException : Exception
	{
		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0x160A4F0", Offset = "0x160A4F0", VA = "0x160A4F0")]
		public ListenerException(string msg)
		{
		}
	}

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MessengerHelper messengerHelper;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<string, Delegate> eventTable;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static List<string> permanentMessages;

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x1609AF4", Offset = "0x1609AF4", VA = "0x1609AF4")]
	public static void MarkAsPermanent(string eventType)
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x1609B78", Offset = "0x1609B78", VA = "0x1609B78")]
	public static void Cleanup()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x1609F4C", Offset = "0x1609F4C", VA = "0x1609F4C")]
	public static void PrintEventTable()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x160A29C", Offset = "0x160A29C", VA = "0x160A29C")]
	public static void OnListenerAdding(string eventType, Delegate listenerBeingAdded)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x160A568", Offset = "0x160A568", VA = "0x160A568")]
	public static void OnListenerRemoving(string eventType, Delegate listenerBeingRemoved)
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x160A7A4", Offset = "0x160A7A4", VA = "0x160A7A4")]
	public static void OnListenerRemoved(string eventType)
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x160A874", Offset = "0x160A874", VA = "0x160A874")]
	public static void OnBroadcasting(string eventType)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x160A878", Offset = "0x160A878", VA = "0x160A878")]
	public static BroadcastException CreateBroadcastSignatureException(string eventType)
	{
		return null;
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x160A970", Offset = "0x160A970", VA = "0x160A970")]
	public static void AddListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x600084A")]
	public static void AddListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x600084B")]
	public static void AddListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x600084C")]
	public static void AddListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x160AA7C", Offset = "0x160AA7C", VA = "0x160AA7C")]
	public static void RemoveListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x600084E")]
	public static void RemoveListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x600084F")]
	public static void RemoveListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x6000850")]
	public static void RemoveListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x160AB90", Offset = "0x160AB90", VA = "0x160AB90")]
	public static void Broadcast(string eventType)
	{
	}

	[Token(Token = "0x6000852")]
	public static void Broadcast<T>(string eventType, T arg1)
	{
	}

	[Token(Token = "0x6000853")]
	public static void Broadcast<T, U>(string eventType, T arg1, U arg2)
	{
	}

	[Token(Token = "0x6000854")]
	public static void Broadcast<T, U, V>(string eventType, T arg1, U arg2, V arg3)
	{
	}
}
[Token(Token = "0x20000FD")]
public sealed class MessengerHelper : MonoBehaviour
{
	[Token(Token = "0x6000856")]
	[Address(RVA = "0x1339000", Offset = "0x1339000", VA = "0x1339000")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x133907C", Offset = "0x133907C", VA = "0x133907C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x13390DC", Offset = "0x13390DC", VA = "0x13390DC")]
	public MessengerHelper()
	{
	}
}
[Token(Token = "0x20000FE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB70DDC", Offset = "0xB70DDC")]
public class OVRMicInput : MonoBehaviour
{
	[Token(Token = "0x20005E2")]
	public enum micActivation
	{
		[Token(Token = "0x40024CA")]
		HoldToSpeak,
		[Token(Token = "0x40024CB")]
		PushToSpeak,
		[Token(Token = "0x40024CC")]
		ConstantSpeak
	}

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool GuiSelectDevice;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float sensitivity;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float sourceVolume;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int micFrequency;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public micActivation micControl;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string selectedDevice;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float loudness;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool micSelected;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int minFreq;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int maxFreq;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool focused;

	[Token(Token = "0x1700005D")]
	public float Sensitivity
	{
		[Token(Token = "0x6000859")]
		[Address(RVA = "0x160AD80", Offset = "0x160AD80", VA = "0x160AD80")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600085A")]
		[Address(RVA = "0x160AD88", Offset = "0x160AD88", VA = "0x160AD88")]
		set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public float SourceVolume
	{
		[Token(Token = "0x600085B")]
		[Address(RVA = "0x160AE10", Offset = "0x160AE10", VA = "0x160AE10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600085C")]
		[Address(RVA = "0x160AE18", Offset = "0x160AE18", VA = "0x160AE18")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public float MicFrequency
	{
		[Token(Token = "0x600085D")]
		[Address(RVA = "0x160AEA0", Offset = "0x160AEA0", VA = "0x160AEA0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600085E")]
		[Address(RVA = "0x160AEAC", Offset = "0x160AEAC", VA = "0x160AEAC")]
		set
		{
		}
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x160AF38", Offset = "0x160AF38", VA = "0x160AF38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x160AFF8", Offset = "0x160AFF8", VA = "0x160AFF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x160B170", Offset = "0x160B170", VA = "0x160B170")]
	private void Update()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x160B4F8", Offset = "0x160B4F8", VA = "0x160B4F8")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x160B50C", Offset = "0x160B50C", VA = "0x160B50C")]
	private void OnApplicationPause(bool focus)
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x160B520", Offset = "0x160B520", VA = "0x160B520")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x160B524", Offset = "0x160B524", VA = "0x160B524")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x160B59C", Offset = "0x160B59C", VA = "0x160B59C")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x160B0A8", Offset = "0x160B0A8", VA = "0x160B0A8")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x160B470", Offset = "0x160B470", VA = "0x160B470")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x160B33C", Offset = "0x160B33C", VA = "0x160B33C")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x160B468", Offset = "0x160B468", VA = "0x160B468")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x160B790", Offset = "0x160B790", VA = "0x160B790")]
	public OVRMicInput()
	{
	}
}
[Token(Token = "0x20000FF")]
public class OVRVoiceMod : MonoBehaviour
{
	[Token(Token = "0x20005E3")]
	public enum ovrVoiceModError
	{
		[Token(Token = "0x40024CE")]
		Unknown = -2250,
		[Token(Token = "0x40024CF")]
		CannotCreateContext = -2251,
		[Token(Token = "0x40024D0")]
		InvalidParam = -2252,
		[Token(Token = "0x40024D1")]
		BadSampleRate = -2253,
		[Token(Token = "0x40024D2")]
		MissingDLL = -2254,
		[Token(Token = "0x40024D3")]
		BadVersion = -2255,
		[Token(Token = "0x40024D4")]
		UndefinedFunction = -2256
	}

	[Token(Token = "0x20005E4")]
	public enum ovrViceModFlag
	{
		[Token(Token = "0x40024D6")]
		None
	}

	[Token(Token = "0x4000842")]
	public const int ovrVoiceModSuccess = 0;

	[Token(Token = "0x4000843")]
	public const string strOVRLS = "OVRVoiceMod";

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int sOVRVoiceModInit;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static OVRVoiceMod sInstance;

	[PreserveSig]
	[Token(Token = "0x600086C")]
	[Address(RVA = "0x160BE60", Offset = "0x160BE60", VA = "0x160BE60")]
	private static extern int ovrVoiceModDll_Initialize(int SampleRate, int BufferSize);

	[PreserveSig]
	[Token(Token = "0x600086D")]
	[Address(RVA = "0x160BF08", Offset = "0x160BF08", VA = "0x160BF08")]
	private static extern void ovrVoiceModDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x600086E")]
	[Address(RVA = "0x160BF90", Offset = "0x160BF90", VA = "0x160BF90")]
	private static extern IntPtr ovrVoicemodDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x600086F")]
	[Address(RVA = "0x160C040", Offset = "0x160C040", VA = "0x160C040")]
	private static extern int ovrVoiceModDll_CreateContext(ref uint Context);

	[PreserveSig]
	[Token(Token = "0x6000870")]
	[Address(RVA = "0x160C0D8", Offset = "0x160C0D8", VA = "0x160C0D8")]
	private static extern int ovrVoiceModDll_DestroyContext(uint Context);

	[PreserveSig]
	[Token(Token = "0x6000871")]
	[Address(RVA = "0x160C170", Offset = "0x160C170", VA = "0x160C170")]
	private static extern int ovrVoiceModDll_SendParameter(uint Context, int Parameter, int Value);

	[PreserveSig]
	[Token(Token = "0x6000872")]
	[Address(RVA = "0x160C220", Offset = "0x160C220", VA = "0x160C220")]
	private static extern int ovrVoiceModDll_ProcessFrame(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x6000873")]
	[Address(RVA = "0x160C2D8", Offset = "0x160C2D8", VA = "0x160C2D8")]
	private static extern int ovrVoiceModDll_ProcessFrameInterleaved(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x6000874")]
	[Address(RVA = "0x160C390", Offset = "0x160C390", VA = "0x160C390")]
	private static extern int ovrVoiceModDll_GetAverageAbsVolume(uint Context, ref float Volume);

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x160C438", Offset = "0x160C438", VA = "0x160C438")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x160C7BC", Offset = "0x160C7BC", VA = "0x160C7BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x160C7C0", Offset = "0x160C7C0", VA = "0x160C7C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x160C7C4", Offset = "0x160C7C4", VA = "0x160C7C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x160C8D0", Offset = "0x160C8D0", VA = "0x160C8D0")]
	public static int IsInitialized()
	{
		return default(int);
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x160C938", Offset = "0x160C938", VA = "0x160C938")]
	public static int CreateContext(ref uint context)
	{
		return default(int);
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x160CA18", Offset = "0x160CA18", VA = "0x160CA18")]
	public static int DestroyContext(uint context)
	{
		return default(int);
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x160CAF8", Offset = "0x160CAF8", VA = "0x160CAF8")]
	public static int SendParameter(uint context, int parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x160CBF4", Offset = "0x160CBF4", VA = "0x160CBF4")]
	public static int ProcessFrame(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x160CCE0", Offset = "0x160CCE0", VA = "0x160CCE0")]
	public static int ProcessFrameInterleaved(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x160CDCC", Offset = "0x160CDCC", VA = "0x160CDCC")]
	public static float GetAverageAbsVolume(uint context)
	{
		return default(float);
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x160CEB0", Offset = "0x160CEB0", VA = "0x160CEB0")]
	public OVRVoiceMod()
	{
	}
}
[Token(Token = "0x2000100")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB70E40", Offset = "0xB70E40")]
public class OVRVoiceModContext : MonoBehaviour
{
	[Token(Token = "0x20005E5")]
	public enum ovrVoiceModParams
	{
		[Token(Token = "0x40024D8")]
		MixInputAudio,
		[Token(Token = "0x40024D9")]
		PitchInputAudio,
		[Token(Token = "0x40024DA")]
		SetBands,
		[Token(Token = "0x40024DB")]
		FormantCorrection,
		[Token(Token = "0x40024DC")]
		Carrier1_TrackPitch,
		[Token(Token = "0x40024DD")]
		Carrier1_Type,
		[Token(Token = "0x40024DE")]
		Carrier1_Gain,
		[Token(Token = "0x40024DF")]
		Carrier1_Frequency,
		[Token(Token = "0x40024E0")]
		Carrier1_Note,
		[Token(Token = "0x40024E1")]
		Carrier1_PulseWidth,
		[Token(Token = "0x40024E2")]
		Carrier1_CycledNoiseSize,
		[Token(Token = "0x40024E3")]
		Carrier2_TrackPitch,
		[Token(Token = "0x40024E4")]
		Carrier2_Type,
		[Token(Token = "0x40024E5")]
		Carrier2_Gain,
		[Token(Token = "0x40024E6")]
		Carrier2_Frequency,
		[Token(Token = "0x40024E7")]
		Carrier2_Note,
		[Token(Token = "0x40024E8")]
		Carrier2_PulseWidth,
		[Token(Token = "0x40024E9")]
		Carrier2_CycledNoiseSize,
		[Token(Token = "0x40024EA")]
		Count
	}

	[Token(Token = "0x20005E6")]
	public struct VMPreset
	{
		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string info;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color color;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mix;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pitch;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bands;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int formant;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int c1PTrack;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int c1Type;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float c1Gain;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float c1Freq;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int c1Note;

		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float c1PW;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int c1CNS;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int c2PTrack;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int c2Type;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float c2Gain;

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float c2Freq;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int c2Note;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float c2PW;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int c2CNS;
	}

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gain;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool audioMute;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode loopback;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VMPreset[] VMPresets;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float VM_MixAudio;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float VM_Pitch;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int VM_Bands;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int VM_FormantCorrect;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int VM_C1_TrackPitch;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int VM_C1_Type;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float VM_C1_Gain;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float VM_C1_Freq;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int VM_C1_Note;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float VM_C1_PulseWidth;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int VM_C1_CycledNoiseSize;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int VM_C2_TrackPitch;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int VM_C2_Type;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float VM_C2_Gain;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float VM_C2_Freq;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int VM_C2_Note;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float VM_C2_PulseWidth;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int VM_C2_CycledNoiseSize;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private uint context;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float prevVol;

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x160CF18", Offset = "0x160CF18", VA = "0x160CF18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x160CFD8", Offset = "0x160CFD8", VA = "0x160CFD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x160D570", Offset = "0x160D570", VA = "0x160D570")]
	private void Update()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x160D7F4", Offset = "0x160D7F4", VA = "0x160D7F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x160D918", Offset = "0x160D918", VA = "0x160D918")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x160DB44", Offset = "0x160DB44", VA = "0x160DB44")]
	public int SendParameter(ovrVoiceModParams parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x160DC44", Offset = "0x160DC44", VA = "0x160DC44")]
	public bool SetPreset(int preset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x160DF28", Offset = "0x160DF28", VA = "0x160DF28")]
	public int GetNumPresets()
	{
		return default(int);
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x160DF48", Offset = "0x160DF48", VA = "0x160DF48")]
	public Color GetPresetColor(int preset)
	{
		return default(Color);
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x160DFA8", Offset = "0x160DFA8", VA = "0x160DFA8")]
	public float GetAverageAbsVolume()
	{
		return default(float);
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x160E04C", Offset = "0x160E04C", VA = "0x160E04C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x160D74C", Offset = "0x160D74C", VA = "0x160D74C")]
	private void UpdateVoiceModUpdate()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x160D1BC", Offset = "0x160D1BC", VA = "0x160D1BC")]
	private void SendVoiceModUpdate()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x160E138", Offset = "0x160E138", VA = "0x160E138")]
	public OVRVoiceModContext()
	{
	}
}
[Token(Token = "0x2000101")]
public class Pvr_Controller : MonoBehaviour
{
	[Token(Token = "0x20005E7")]
	public enum UserHandNess
	{
		[Token(Token = "0x4002500")]
		Right,
		[Token(Token = "0x4002501")]
		Left
	}

	[Token(Token = "0x20005E8")]
	public enum GazeType
	{
		[Token(Token = "0x4002503")]
		Never,
		[Token(Token = "0x4002504")]
		DuringMotion,
		[Token(Token = "0x4002505")]
		Always
	}

	[Token(Token = "0x20005E9")]
	public enum ControllerAxis
	{
		[Token(Token = "0x4002507")]
		Controller,
		[Token(Token = "0x4002508")]
		Wrist,
		[Token(Token = "0x4002509")]
		Elbow,
		[Token(Token = "0x400250A")]
		Shoulder
	}

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller0;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller1;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UserHandNess handness;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerAxis Axis;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GazeType Gazetype;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB76268", Offset = "0xB76268")]
	public float ElbowHeight;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB76284", Offset = "0xB76284")]
	public float ElbowDepth;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB762A0", Offset = "0xB762A0")]
	public float PointerTiltAngle;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mouseX;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mouseY;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mouseZ;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] inputDirection;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB762B8", Offset = "0xB762B8")]
	private static Vector3 <pointerPosition>k__BackingField;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB762C8", Offset = "0xB762C8")]
	private static Quaternion <pointerRotation>k__BackingField;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB762D8", Offset = "0xB762D8")]
	private static Vector3 <elbowPosition>k__BackingField;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB762E8", Offset = "0xB762E8")]
	private static Quaternion <elbowRotation>k__BackingField;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB762F8", Offset = "0xB762F8")]
	private static Vector3 <wristPosition>k__BackingField;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB76308", Offset = "0xB76308")]
	private static Quaternion <wristRotation>k__BackingField;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB76318", Offset = "0xB76318")]
	private static Vector3 <shoulderPosition>k__BackingField;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB76328", Offset = "0xB76328")]
	private static Quaternion <shoulderRotation>k__BackingField;

	[Token(Token = "0x17000060")]
	public static Vector3 pointerPosition
	{
		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xFFD758", Offset = "0xFFD758", VA = "0xFFD758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85288", Offset = "0xB85288")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xFFD7AC", Offset = "0xFFD7AC", VA = "0xFFD7AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85298", Offset = "0xB85298")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public static Quaternion pointerRotation
	{
		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xFFD81C", Offset = "0xFFD81C", VA = "0xFFD81C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB852A8", Offset = "0xB852A8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xFFD870", Offset = "0xFFD870", VA = "0xFFD870")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB852B8", Offset = "0xB852B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public static Vector3 elbowPosition
	{
		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xFFD8E4", Offset = "0xFFD8E4", VA = "0xFFD8E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB852C8", Offset = "0xB852C8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xFFD938", Offset = "0xFFD938", VA = "0xFFD938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB852D8", Offset = "0xB852D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public static Quaternion elbowRotation
	{
		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xFFD9A8", Offset = "0xFFD9A8", VA = "0xFFD9A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB852E8", Offset = "0xB852E8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xFFD9FC", Offset = "0xFFD9FC", VA = "0xFFD9FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB852F8", Offset = "0xB852F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public static Vector3 wristPosition
	{
		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xFFDA70", Offset = "0xFFDA70", VA = "0xFFDA70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85308", Offset = "0xB85308")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xFFDAC4", Offset = "0xFFDAC4", VA = "0xFFDAC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85318", Offset = "0xB85318")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public static Quaternion wristRotation
	{
		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xFFDB34", Offset = "0xFFDB34", VA = "0xFFDB34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85328", Offset = "0xB85328")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xFFDB88", Offset = "0xFFDB88", VA = "0xFFDB88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85338", Offset = "0xB85338")]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public static Vector3 shoulderPosition
	{
		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xFFDBFC", Offset = "0xFFDBFC", VA = "0xFFDBFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85348", Offset = "0xB85348")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xFFDC50", Offset = "0xFFDC50", VA = "0xFFDC50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85358", Offset = "0xB85358")]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public static Quaternion shoulderRotation
	{
		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xFFDCC0", Offset = "0xFFDCC0", VA = "0xFFDCC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85368", Offset = "0xB85368")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xFFDD14", Offset = "0xFFDD14", VA = "0xFFDD14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85378", Offset = "0xB85378")]
		set
		{
		}
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xFFB948", Offset = "0xFFB948", VA = "0xFFB948")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xFFBA84", Offset = "0xFFBA84", VA = "0xFFBA84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xFFBAF4", Offset = "0xFFBAF4", VA = "0xFFBAF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xFFBC30", Offset = "0xFFBC30", VA = "0xFFBC30")]
	private void MainControllerChanged(string index)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xFFBCD8", Offset = "0xFFBCD8", VA = "0xFFBCD8")]
	private void HandnessChanged(string index)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xFFBCDC", Offset = "0xFFBCDC", VA = "0xFFBCDC")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xFFBC34", Offset = "0xFFBC34", VA = "0xFFBC34")]
	private void RefreshHandness()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xFFBD3C", Offset = "0xFFBD3C", VA = "0xFFBD3C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xFFBEBC", Offset = "0xFFBEBC", VA = "0xFFBEBC")]
	private void ShowController()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xFFC024", Offset = "0xFFC024", VA = "0xFFC024")]
	private void CheckControllerState(string data)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xFFC0FC", Offset = "0xFFC0FC", VA = "0xFFC0FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xFFBCE0", Offset = "0xFFBCE0", VA = "0xFFBCE0")]
	public static void ChangeHandNess()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xFFC308", Offset = "0xFFC308", VA = "0xFFC308")]
	private void DoUpdateControler0()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xFFC384", Offset = "0xFFC384", VA = "0xFFC384")]
	private void DoUpdateControler1()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xFFC408", Offset = "0xFFC408", VA = "0xFFC408")]
	private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xFFD574", Offset = "0xFFD574", VA = "0xFFD574")]
	private Quaternion UpdateSimulatedFrameParams()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xFFC55C", Offset = "0xFFC55C", VA = "0xFFC55C")]
	private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xFFC56C", Offset = "0xFFC56C", VA = "0xFFC56C")]
	private void CalcArmModelfromSo(int hand)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xFFCA4C", Offset = "0xFFCA4C", VA = "0xFFCA4C")]
	public void UpdateControllerDataSO(int hand)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xFFDD88", Offset = "0xFFDD88", VA = "0xFFDD88")]
	public Pvr_Controller()
	{
	}
}
[Token(Token = "0x2000102")]
public class Pvr_ControllerDemo : MonoBehaviour
{
	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HeadSetController;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller0;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controller1;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cube;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray ray;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject currentController;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform lastHit;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform currentHit;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material normat;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material gazemat;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Material clickmat;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool noClick;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject referenceObj;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float rayDefaultLength;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isHasController;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool headcontrolmode;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RaycastHit hit;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject rayLine;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject dot;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform dragObj;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float disX;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float disY;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float disZ;

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xFFDDF0", Offset = "0xFFDDF0", VA = "0xFFDDF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xFFDF80", Offset = "0xFFDF80", VA = "0xFFDF80")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xFFE098", Offset = "0xFFE098", VA = "0xFFE098")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xFFFA50", Offset = "0xFFFA50", VA = "0xFFFA50")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xFFFAE8", Offset = "0xFFFAE8", VA = "0xFFFAE8")]
	private void ControllerStateListener(string data)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xFFFB80", Offset = "0xFFFB80", VA = "0xFFFB80")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xFFFC1C", Offset = "0xFFFC1C", VA = "0xFFFC1C")]
	public void SwitchControlMode()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xFFFC20", Offset = "0xFFFC20", VA = "0xFFFC20")]
	public Pvr_ControllerDemo()
	{
	}
}
[Token(Token = "0x2000103")]
public class Pvr_ControllerEventsExamples : MonoBehaviour
{
	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xFFFC30", Offset = "0xFFFC30", VA = "0xFFFC30")]
	private void Start()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xFFFE6C", Offset = "0xFFFE6C", VA = "0xFFFE6C")]
	private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xFFFF08", Offset = "0xFFFF08", VA = "0xFFFF08")]
	private void UIPointerElementExit(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xFFFFA4", Offset = "0xFFFFA4", VA = "0xFFFFA4")]
	private void UIPointerElementClick(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x1000040", Offset = "0x1000040", VA = "0x1000040")]
	private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x10000DC", Offset = "0x10000DC", VA = "0x10000DC")]
	private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x1000178", Offset = "0x1000178", VA = "0x1000178")]
	public Pvr_ControllerEventsExamples()
	{
	}
}
[Token(Token = "0x2000104")]
public class Pvr_ControllerInit : MonoBehaviour
{
	[Token(Token = "0x20005EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB726D4", Offset = "0xB726D4")]
	private sealed class <RefreshController>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int id;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_ControllerInit <>4__this;

		[Token(Token = "0x1700049D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A83")]
			[Address(RVA = "0x1002034", Offset = "0x1002034", VA = "0x1002034", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A85")]
			[Address(RVA = "0x10020A0", Offset = "0x10020A0", VA = "0x10020A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A80")]
		[Address(RVA = "0x1000FC8", Offset = "0x1000FC8", VA = "0x1000FC8")]
		[DebuggerHidden]
		public <RefreshController>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6002A81")]
		[Address(RVA = "0x1001C54", Offset = "0x1001C54", VA = "0x1001C54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A82")]
		[Address(RVA = "0x1001C58", Offset = "0x1001C58", VA = "0x1001C58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A84")]
		[Address(RVA = "0x100203C", Offset = "0x100203C", VA = "0x100203C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerVariety Variety;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isCustomModel;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject goblin;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject neo;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject g2;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject neo2L;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject neo2R;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Material standardMat;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material unlitMat;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int controllerType;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public bool loadModelSuccess;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int systemOrUnity;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private JsonData curControllerData;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string modelName;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string texFormat;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string prePath;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string modelFilePath;

	[Token(Token = "0x400089B")]
	private const string goblinTexbasePath = "Controller/controller1/controller1";

	[Token(Token = "0x400089C")]
	private const string neoTexbasePath = "Controller/controller2/controller2";

	[Token(Token = "0x400089D")]
	private const string g2TexbasePath = "Controller/controller3/controller3";

	[Token(Token = "0x400089E")]
	private const string neo2TexbasePath = "Controller/controller4/controller4";

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x1000180", Offset = "0x1000180", VA = "0x1000180")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x10002F8", Offset = "0x10002F8", VA = "0x10002F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x10003FC", Offset = "0x10003FC", VA = "0x10003FC")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x10006D0", Offset = "0x10006D0", VA = "0x10006D0")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x10008CC", Offset = "0x10008CC", VA = "0x10008CC")]
	private void LoadResFromJson()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x1000AA0", Offset = "0x1000AA0", VA = "0x1000AA0")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x1000E60", Offset = "0x1000E60", VA = "0x1000E60")]
	private void CheckControllerStateOfAbility(string data)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x1000408", Offset = "0x1000408", VA = "0x1000408")]
	private void DestroyLocalController()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x1000B8C", Offset = "0x1000B8C", VA = "0x1000B8C")]
	private void DestroySysController()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x1000A1C", Offset = "0x1000A1C", VA = "0x1000A1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB85388", Offset = "0xB85388")]
	private IEnumerator RefreshController(int id)
	{
		return null;
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x1000FF4", Offset = "0x1000FF4", VA = "0x1000FF4")]
	private void LoadControllerFromPrefab()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x10015A8", Offset = "0x10015A8", VA = "0x10015A8")]
	private void LoadControllerFromSystem(int id)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x10012AC", Offset = "0x10012AC", VA = "0x10012AC")]
	private void LoadTexture(Pvr_ControllerVisual visual, string controllerName, bool fromRes)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x10019BC", Offset = "0x10019BC", VA = "0x10019BC")]
	private Texture2D LoadOneTexture(string filepath, bool fromRes)
	{
		return null;
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x1001AD0", Offset = "0x1001AD0", VA = "0x1001AD0")]
	private byte[] ReadPNG(string path)
	{
		return null;
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x1001BE0", Offset = "0x1001BE0", VA = "0x1001BE0")]
	public Pvr_ControllerInit()
	{
	}
}
[Token(Token = "0x2000105")]
public class Pvr_ControllerLink
{
	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaClass javaHummingbirdClass;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AndroidJavaClass javaPico2ReceiverClass;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AndroidJavaClass javaserviceClass;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AndroidJavaClass javavractivityclass;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AndroidJavaClass javaCVClass;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AndroidJavaObject activity;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string gameobjname;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool picoDevice;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string hummingBirdMac;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hummingBirdRSSI;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool goblinserviceStarted;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool neoserviceStarted;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool controller0Connected;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool controller1Connected;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int mainHandID;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Pvr_Controller.UserHandNess handness;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int controllerType;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerHand Controller0;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ControllerHand Controller1;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int platFormType;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int trackingmode;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int systemProp;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int enablehand6dofbyhead;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool switchHomeKey;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] sensorData;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int[] keyData;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float[] fixedState;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float[] neoposeData;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int[] goblinKeyArray;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int[] neoKeyArray;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int[] neotriggerV;

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x10020A8", Offset = "0x10020A8", VA = "0x10020A8")]
	public Pvr_ControllerLink(string name)
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x10023E8", Offset = "0x10023E8", VA = "0x10023E8")]
	private void StartHummingBirdService()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x1002E20", Offset = "0x1002E20", VA = "0x1002E20")]
	public bool IsServiceExisted()
	{
		return default(bool);
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x1002BC4", Offset = "0x1002BC4", VA = "0x1002BC4")]
	public void SetGameObjectToJar(string name)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x1002CD4", Offset = "0x1002CD4", VA = "0x1002CD4")]
	public void BindService()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x1002FA8", Offset = "0x1002FA8", VA = "0x1002FA8")]
	public void UnBindService()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x10030F4", Offset = "0x10030F4", VA = "0x10030F4")]
	public void StopLark2Receiver()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x1003250", Offset = "0x1003250", VA = "0x1003250")]
	public void StartLark2Receiver()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x1003374", Offset = "0x1003374", VA = "0x1003374")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x10034D0", Offset = "0x10034D0", VA = "0x10034D0")]
	public void StartLark2Service()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x1003658", Offset = "0x1003658", VA = "0x1003658")]
	public int getHandness()
	{
		return default(int);
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x1003864", Offset = "0x1003864", VA = "0x1003864")]
	public void setHandness(int hand)
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x10039BC", Offset = "0x10039BC", VA = "0x10039BC")]
	public void StartScan()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x1003AD4", Offset = "0x1003AD4", VA = "0x1003AD4")]
	public void StopScan()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x1002A54", Offset = "0x1002A54", VA = "0x1002A54")]
	public int GetSysproc()
	{
		return default(int);
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x1003BF0", Offset = "0x1003BF0", VA = "0x1003BF0")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x1003DF8", Offset = "0x1003DF8", VA = "0x1003DF8")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x1003F34", Offset = "0x1003F34", VA = "0x1003F34")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x1004054", Offset = "0x1004054", VA = "0x1004054")]
	public bool StartUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x1004190", Offset = "0x1004190", VA = "0x1004190")]
	public void setBinPath(string path, bool isasset)
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x1004308", Offset = "0x1004308", VA = "0x1004308")]
	public string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x100446C", Offset = "0x100446C", VA = "0x100446C")]
	public long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x10045D4", Offset = "0x10045D4", VA = "0x10045D4")]
	public string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x1004738", Offset = "0x1004738", VA = "0x1004738")]
	public long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x10048A0", Offset = "0x10048A0", VA = "0x10048A0")]
	public int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x1004BE0", Offset = "0x1004BE0", VA = "0x1004BE0")]
	public void RebackToLauncher()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x1004DC8", Offset = "0x1004DC8", VA = "0x1004DC8")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x1004F44", Offset = "0x1004F44", VA = "0x1004F44")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x10050C0", Offset = "0x10050C0", VA = "0x10050C0")]
	public float[] GetHBControllerPoseData()
	{
		return null;
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x10054B8", Offset = "0x10054B8", VA = "0x10054B8")]
	public float[] GetControllerSensorData()
	{
		return null;
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x100568C", Offset = "0x100568C", VA = "0x100568C")]
	public int[] GetControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x1005794", Offset = "0x1005794", VA = "0x1005794")]
	public float[] GetControllerFixedSensorState(int hand)
	{
		return null;
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x1005D3C", Offset = "0x1005D3C", VA = "0x1005D3C")]
	public float[] GetCvControllerPoseData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x1006458", Offset = "0x1006458", VA = "0x1006458")]
	public int[] GetHBControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x1007790", Offset = "0x1007790", VA = "0x1007790")]
	public int GetHBKeyValue()
	{
		return default(int);
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x100792C", Offset = "0x100792C", VA = "0x100792C")]
	public int[] GetCvControllerKeyData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x10093F8", Offset = "0x10093F8", VA = "0x10093F8")]
	public int GetCVTriggerValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x10095B4", Offset = "0x10095B4", VA = "0x10095B4")]
	public void AutoConnectHbController(int scanTimeMs)
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x100972C", Offset = "0x100972C", VA = "0x100972C")]
	public void StartControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x10098F4", Offset = "0x10098F4", VA = "0x10098F4")]
	public void StopControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x1009ABC", Offset = "0x1009ABC", VA = "0x1009ABC")]
	public void SetUnityVersionToJar(string version)
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x1009BD8", Offset = "0x1009BD8", VA = "0x1009BD8")]
	public Vector3 GetVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x1009F58", Offset = "0x1009F58", VA = "0x1009F58")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x100A500", Offset = "0x100A500", VA = "0x100A500")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x100A954", Offset = "0x100A954", VA = "0x100A954")]
	public string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x100AAB4", Offset = "0x100AAB4", VA = "0x100AAB4")]
	public void VibateController(int hand, int strength)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x100AC70", Offset = "0x100AC70", VA = "0x100AC70")]
	public void VibrateNeo2Controller(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x100AF4C", Offset = "0x100AF4C", VA = "0x100AF4C")]
	public int GetMainControllerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x100B0C0", Offset = "0x100B0C0", VA = "0x100B0C0")]
	public void SetMainController(int index)
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x100B214", Offset = "0x100B214", VA = "0x100B214")]
	public void ResetHeadSensorForController()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x100B338", Offset = "0x100B338", VA = "0x100B338")]
	public void GetDeviceVersion(int deviceType)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x100B494", Offset = "0x100B494", VA = "0x100B494")]
	public void GetControllerSnCode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x100B5F0", Offset = "0x100B5F0", VA = "0x100B5F0")]
	public void SetControllerUnbind(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x100B74C", Offset = "0x100B74C", VA = "0x100B74C")]
	public void SetStationRestart()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x100B870", Offset = "0x100B870", VA = "0x100B870")]
	public void StartStationOtaUpdate()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x100B994", Offset = "0x100B994", VA = "0x100B994")]
	public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x100BB50", Offset = "0x100BB50", VA = "0x100BB50")]
	public void EnterPairMode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x100BCAC", Offset = "0x100BCAC", VA = "0x100BCAC")]
	public void SetControllerShutdown(int controllerSerialNum)
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x100BE08", Offset = "0x100BE08", VA = "0x100BE08")]
	public int GetStationPairState()
	{
		return default(int);
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x100BF80", Offset = "0x100BF80", VA = "0x100BF80")]
	public int GetStationOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x100C0F8", Offset = "0x100C0F8", VA = "0x100C0F8")]
	public int GetControllerOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x100C270", Offset = "0x100C270", VA = "0x100C270")]
	public void GetControllerVersionAndSN(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x100C3CC", Offset = "0x100C3CC", VA = "0x100C3CC")]
	public void GetControllerUniqueID()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x100C4F0", Offset = "0x100C4F0", VA = "0x100C4F0")]
	public void InterruptStationPairMode()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x100C614", Offset = "0x100C614", VA = "0x100C614")]
	public int GetControllerAbility(int controllerSerialNum)
	{
		return default(int);
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x100C78C", Offset = "0x100C78C", VA = "0x100C78C")]
	public void SwitchHomeKey(bool state)
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x100C83C", Offset = "0x100C83C", VA = "0x100C83C")]
	public void SetBootReconnect()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x100C958", Offset = "0x100C958", VA = "0x100C958")]
	public int GetTemperature()
	{
		return default(int);
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x100CAC8", Offset = "0x100CAC8", VA = "0x100CAC8")]
	public int GetDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x100CC38", Offset = "0x100CC38", VA = "0x100CC38")]
	public string GetHummingBird2SN()
	{
		return null;
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x100CD90", Offset = "0x100CD90", VA = "0x100CD90")]
	public string GetControllerVersion()
	{
		return null;
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x100CEE8", Offset = "0x100CEE8", VA = "0x100CEE8")]
	public bool IsEnbleTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x100D044", Offset = "0x100D044", VA = "0x100D044")]
	public void StartCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x100D1A0", Offset = "0x100D1A0", VA = "0x100D1A0")]
	public void StopCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x100D2FC", Offset = "0x100D2FC", VA = "0x100D2FC")]
	public int GetControllerBindingState(int id)
	{
		return default(int);
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x100D464", Offset = "0x100D464", VA = "0x100D464")]
	public void setIsEnbleHomeKey(bool state)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x100D5B0", Offset = "0x100D5B0", VA = "0x100D5B0")]
	public int getControllerSensorStatus(int id)
	{
		return default(int);
	}
}
[Token(Token = "0x2000106")]
public class Pvr_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x20005EB")]
	public delegate void PvrServiceStartSuccess();

	[Token(Token = "0x20005EC")]
	public delegate void PvrControllerStateChanged(string data);

	[Token(Token = "0x20005ED")]
	public delegate void ChangeMainControllerCallBack(string index);

	[Token(Token = "0x20005EE")]
	public delegate void ChangeHandNessCallBack(string index);

	[Token(Token = "0x20005EF")]
	public delegate void SetHbServiceBindState();

	[Token(Token = "0x20005F0")]
	public delegate void ControllerThreadStartedCallback();

	[Token(Token = "0x20005F1")]
	public delegate void SetControllerServiceBindState();

	[Token(Token = "0x20005F2")]
	public delegate void ControllerStatusChange(string isconnect);

	[Token(Token = "0x20005F3")]
	public delegate void SetControllerAbility(string data);

	[Token(Token = "0x20005F4")]
	public delegate void SetControllerStateChanged(string data);

	[Token(Token = "0x20005F5")]
	public delegate void SetHbControllerMac(string mac);

	[Token(Token = "0x20005F6")]
	public delegate void ControllerDeviceVersionCallback(string data);

	[Token(Token = "0x20005F7")]
	public delegate void ControllerSnCodeCallback(string data);

	[Token(Token = "0x20005F8")]
	public delegate void ControllerUnbindCallback(string status);

	[Token(Token = "0x20005F9")]
	public delegate void ControllerStationStatusCallback(string status);

	[Token(Token = "0x20005FA")]
	public delegate void ControllerStationBusyCallback(string status);

	[Token(Token = "0x20005FB")]
	public delegate void ControllerOtaStartCodeCallback(string data);

	[Token(Token = "0x20005FC")]
	public delegate void ControllerDeviceVersionAndSNCallback(string data);

	[Token(Token = "0x20005FD")]
	public delegate void ControllerUniqueIDCallback(string data);

	[Token(Token = "0x20005FE")]
	public delegate void ControllerCombinedKeyUnbindCallback(string data);

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ControllerManager instance;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Pvr_ControllerLink controllerlink;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float cTime;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool stopConnect;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text toast;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool controllerServicestate;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float disConnectTime;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool LengthAdaptiveRay;

	[Token(Token = "0x17000068")]
	public static Pvr_ControllerManager Instance
	{
		[Token(Token = "0x6000920")]
		[Address(RVA = "0x176C09C", Offset = "0x176C09C", VA = "0x176C09C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000011")]
	public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
	{
		[Token(Token = "0x6000921")]
		[Address(RVA = "0x176C2D0", Offset = "0x176C2D0", VA = "0x176C2D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB853EC", Offset = "0xB853EC")]
		add
		{
		}
		[Token(Token = "0x6000922")]
		[Address(RVA = "0x176C3C0", Offset = "0x176C3C0", VA = "0x176C3C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB853FC", Offset = "0xB853FC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event PvrControllerStateChanged PvrControllerStateChangedEvent
	{
		[Token(Token = "0x6000923")]
		[Address(RVA = "0x176C4B0", Offset = "0x176C4B0", VA = "0x176C4B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8540C", Offset = "0xB8540C")]
		add
		{
		}
		[Token(Token = "0x6000924")]
		[Address(RVA = "0x176C5A0", Offset = "0x176C5A0", VA = "0x176C5A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8541C", Offset = "0xB8541C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
	{
		[Token(Token = "0x6000925")]
		[Address(RVA = "0x176C690", Offset = "0x176C690", VA = "0x176C690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8542C", Offset = "0xB8542C")]
		add
		{
		}
		[Token(Token = "0x6000926")]
		[Address(RVA = "0x176C780", Offset = "0x176C780", VA = "0x176C780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8543C", Offset = "0xB8543C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
	{
		[Token(Token = "0x6000927")]
		[Address(RVA = "0x176C870", Offset = "0x176C870", VA = "0x176C870")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8544C", Offset = "0xB8544C")]
		add
		{
		}
		[Token(Token = "0x6000928")]
		[Address(RVA = "0x176C960", Offset = "0x176C960", VA = "0x176C960")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8545C", Offset = "0xB8545C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event SetHbServiceBindState SetHbServiceBindStateEvent
	{
		[Token(Token = "0x6000929")]
		[Address(RVA = "0x176CA50", Offset = "0x176CA50", VA = "0x176CA50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8546C", Offset = "0xB8546C")]
		add
		{
		}
		[Token(Token = "0x600092A")]
		[Address(RVA = "0x176CB40", Offset = "0x176CB40", VA = "0x176CB40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8547C", Offset = "0xB8547C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
	{
		[Token(Token = "0x600092B")]
		[Address(RVA = "0x176CC30", Offset = "0x176CC30", VA = "0x176CC30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8548C", Offset = "0xB8548C")]
		add
		{
		}
		[Token(Token = "0x600092C")]
		[Address(RVA = "0x176CD20", Offset = "0x176CD20", VA = "0x176CD20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8549C", Offset = "0xB8549C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
	{
		[Token(Token = "0x600092D")]
		[Address(RVA = "0x176CE10", Offset = "0x176CE10", VA = "0x176CE10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB854AC", Offset = "0xB854AC")]
		add
		{
		}
		[Token(Token = "0x600092E")]
		[Address(RVA = "0x176CF00", Offset = "0x176CF00", VA = "0x176CF00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB854BC", Offset = "0xB854BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event ControllerStatusChange ControllerStatusChangeEvent
	{
		[Token(Token = "0x600092F")]
		[Address(RVA = "0x176CFF0", Offset = "0x176CFF0", VA = "0x176CFF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB854CC", Offset = "0xB854CC")]
		add
		{
		}
		[Token(Token = "0x6000930")]
		[Address(RVA = "0x176D0E0", Offset = "0x176D0E0", VA = "0x176D0E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB854DC", Offset = "0xB854DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public static event SetControllerAbility SetControllerAbilityEvent
	{
		[Token(Token = "0x6000931")]
		[Address(RVA = "0x176D1D0", Offset = "0x176D1D0", VA = "0x176D1D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB854EC", Offset = "0xB854EC")]
		add
		{
		}
		[Token(Token = "0x6000932")]
		[Address(RVA = "0x176D2C0", Offset = "0x176D2C0", VA = "0x176D2C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB854FC", Offset = "0xB854FC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public static event SetControllerStateChanged SetControllerStateChangedEvent
	{
		[Token(Token = "0x6000933")]
		[Address(RVA = "0x176D3B0", Offset = "0x176D3B0", VA = "0x176D3B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8550C", Offset = "0xB8550C")]
		add
		{
		}
		[Token(Token = "0x6000934")]
		[Address(RVA = "0x176D4A0", Offset = "0x176D4A0", VA = "0x176D4A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8551C", Offset = "0xB8551C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public static event SetHbControllerMac SetHbControllerMacEvent
	{
		[Token(Token = "0x6000935")]
		[Address(RVA = "0x176D590", Offset = "0x176D590", VA = "0x176D590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8552C", Offset = "0xB8552C")]
		add
		{
		}
		[Token(Token = "0x6000936")]
		[Address(RVA = "0x176D680", Offset = "0x176D680", VA = "0x176D680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8553C", Offset = "0xB8553C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
	{
		[Token(Token = "0x6000937")]
		[Address(RVA = "0x176D770", Offset = "0x176D770", VA = "0x176D770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8554C", Offset = "0xB8554C")]
		add
		{
		}
		[Token(Token = "0x6000938")]
		[Address(RVA = "0x176D860", Offset = "0x176D860", VA = "0x176D860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8555C", Offset = "0xB8555C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
	{
		[Token(Token = "0x6000939")]
		[Address(RVA = "0x176D950", Offset = "0x176D950", VA = "0x176D950")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8556C", Offset = "0xB8556C")]
		add
		{
		}
		[Token(Token = "0x600093A")]
		[Address(RVA = "0x176DA40", Offset = "0x176DA40", VA = "0x176DA40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8557C", Offset = "0xB8557C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
	{
		[Token(Token = "0x600093B")]
		[Address(RVA = "0x176DB30", Offset = "0x176DB30", VA = "0x176DB30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8558C", Offset = "0xB8558C")]
		add
		{
		}
		[Token(Token = "0x600093C")]
		[Address(RVA = "0x176DC20", Offset = "0x176DC20", VA = "0x176DC20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8559C", Offset = "0xB8559C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
	{
		[Token(Token = "0x600093D")]
		[Address(RVA = "0x176DD10", Offset = "0x176DD10", VA = "0x176DD10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB855AC", Offset = "0xB855AC")]
		add
		{
		}
		[Token(Token = "0x600093E")]
		[Address(RVA = "0x176DE00", Offset = "0x176DE00", VA = "0x176DE00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB855BC", Offset = "0xB855BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
	{
		[Token(Token = "0x600093F")]
		[Address(RVA = "0x176DEF0", Offset = "0x176DEF0", VA = "0x176DEF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB855CC", Offset = "0xB855CC")]
		add
		{
		}
		[Token(Token = "0x6000940")]
		[Address(RVA = "0x176DFE0", Offset = "0x176DFE0", VA = "0x176DFE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB855DC", Offset = "0xB855DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
	{
		[Token(Token = "0x6000941")]
		[Address(RVA = "0x176E0D0", Offset = "0x176E0D0", VA = "0x176E0D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB855EC", Offset = "0xB855EC")]
		add
		{
		}
		[Token(Token = "0x6000942")]
		[Address(RVA = "0x176E1C0", Offset = "0x176E1C0", VA = "0x176E1C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB855FC", Offset = "0xB855FC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
	{
		[Token(Token = "0x6000943")]
		[Address(RVA = "0x176E2B0", Offset = "0x176E2B0", VA = "0x176E2B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8560C", Offset = "0xB8560C")]
		add
		{
		}
		[Token(Token = "0x6000944")]
		[Address(RVA = "0x176E3A0", Offset = "0x176E3A0", VA = "0x176E3A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8561C", Offset = "0xB8561C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
	{
		[Token(Token = "0x6000945")]
		[Address(RVA = "0x176E490", Offset = "0x176E490", VA = "0x176E490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8562C", Offset = "0xB8562C")]
		add
		{
		}
		[Token(Token = "0x6000946")]
		[Address(RVA = "0x176E580", Offset = "0x176E580", VA = "0x176E580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8563C", Offset = "0xB8563C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
	{
		[Token(Token = "0x6000947")]
		[Address(RVA = "0x176E670", Offset = "0x176E670", VA = "0x176E670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8564C", Offset = "0xB8564C")]
		add
		{
		}
		[Token(Token = "0x6000948")]
		[Address(RVA = "0x176E760", Offset = "0x176E760", VA = "0x176E760")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8565C", Offset = "0xB8565C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x176E850", Offset = "0x176E850", VA = "0x176E850")]
	private void Awake()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x176EB54", Offset = "0x176EB54", VA = "0x176EB54")]
	private void Start()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x176EBFC", Offset = "0x176EBFC", VA = "0x176EBFC")]
	private void Update()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x176FF6C", Offset = "0x176FF6C", VA = "0x176FF6C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x177060C", Offset = "0x177060C", VA = "0x177060C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x17706EC", Offset = "0x17706EC", VA = "0x17706EC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x1770820", Offset = "0x1770820", VA = "0x1770820")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x17708CC", Offset = "0x17708CC", VA = "0x17708CC")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x17709B4", Offset = "0x17709B4", VA = "0x17709B4")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x176EAA8", Offset = "0x176EAA8", VA = "0x176EAA8")]
	public void BindService()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x1770A9C", Offset = "0x1770A9C", VA = "0x1770A9C")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x1770B48", Offset = "0x1770B48", VA = "0x1770B48")]
	public void StopScan()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x1770BF4", Offset = "0x1770BF4", VA = "0x1770BF4")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x1770374", Offset = "0x1770374", VA = "0x1770374")]
	public static int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x1770CA8", Offset = "0x1770CA8", VA = "0x1770CA8")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x1770D54", Offset = "0x1770D54", VA = "0x1770D54")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x1770E00", Offset = "0x1770E00", VA = "0x1770E00")]
	public void SetBinPath(string path, bool isAsset)
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x1770EC8", Offset = "0x1770EC8", VA = "0x1770EC8")]
	public void StartUpgrade()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x1770F74", Offset = "0x1770F74", VA = "0x1770F74")]
	public static string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x1770FE8", Offset = "0x1770FE8", VA = "0x1770FE8")]
	public static long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x177105C", Offset = "0x177105C", VA = "0x177105C")]
	public static string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x17710D0", Offset = "0x17710D0", VA = "0x17710D0")]
	public static long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x1771144", Offset = "0x1771144", VA = "0x1771144")]
	public static void AutoConnectHbController(int scans)
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x17711F8", Offset = "0x17711F8", VA = "0x17711F8")]
	public static string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x17712B4", Offset = "0x17712B4", VA = "0x17712B4")]
	public void setHbControllerMac(string mac)
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x1771828", Offset = "0x1771828", VA = "0x1771828")]
	public int GetControllerRSSI()
	{
		return default(int);
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x17718A0", Offset = "0x17718A0", VA = "0x17718A0")]
	public void setHbServiceBindState(string state)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x1771D4C", Offset = "0x1771D4C", VA = "0x1771D4C")]
	public void setControllerServiceBindState(string state)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x1772200", Offset = "0x1772200", VA = "0x1772200")]
	public void setHbControllerConnectState(string isconnect)
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x1772C04", Offset = "0x1772C04", VA = "0x1772C04")]
	public void setControllerStateChanged(string state)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x177355C", Offset = "0x177355C", VA = "0x177355C")]
	public void setControllerAbility(string data)
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x1773A0C", Offset = "0x1773A0C", VA = "0x1773A0C")]
	public void controllerThreadStartedCallback()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x1774070", Offset = "0x1774070", VA = "0x1774070")]
	public void controllerDeviceVersionCallback(string data)
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x1774520", Offset = "0x1774520", VA = "0x1774520")]
	public void controllerSnCodeCallback(string data)
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x17749D0", Offset = "0x17749D0", VA = "0x17749D0")]
	public void controllerUnbindCallback(string status)
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x1774E80", Offset = "0x1774E80", VA = "0x1774E80")]
	public void controllerStationStatusCallback(string status)
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x1775330", Offset = "0x1775330", VA = "0x1775330")]
	public void controllerStationBusyCallback(string status)
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x17757E0", Offset = "0x17757E0", VA = "0x17757E0")]
	public void controllerOTAStartCodeCallback(string data)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x1775C90", Offset = "0x1775C90", VA = "0x1775C90")]
	public void controllerDeviceVersionAndSNCallback(string data)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x1776140", Offset = "0x1776140", VA = "0x1776140")]
	public void controllerUniqueIDCallback(string data)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x17765F0", Offset = "0x17765F0", VA = "0x17765F0")]
	public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x1776A54", Offset = "0x1776A54", VA = "0x1776A54")]
	public void setupdateFailed()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x1776A58", Offset = "0x1776A58", VA = "0x1776A58")]
	public void setupdateSuccess()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x1776A5C", Offset = "0x1776A5C", VA = "0x1776A5C")]
	public void setupdateProgress(string progress)
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x1776A60", Offset = "0x1776A60", VA = "0x1776A60")]
	public void setHbAutoConnectState(string state)
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x1776D80", Offset = "0x1776D80", VA = "0x1776D80")]
	public void callbackControllerServiceState(string state)
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x1776EDC", Offset = "0x1776EDC", VA = "0x1776EDC")]
	public void changeMainControllerCallback(string index)
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x17773E0", Offset = "0x17773E0", VA = "0x17773E0")]
	public void changeHandnessCallback(string index)
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x1776BB4", Offset = "0x1776BB4", VA = "0x1776BB4")]
	private void ShowToast(int type)
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x17778E4", Offset = "0x17778E4", VA = "0x17778E4")]
	private void HideToast()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x177798C", Offset = "0x177798C", VA = "0x177798C")]
	private void CheckControllerService()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x1773B48", Offset = "0x1773B48", VA = "0x1773B48")]
	private void GetCVControllerState()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x176F84C", Offset = "0x176F84C", VA = "0x176F84C")]
	private void SetSystemKey()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x176F514", Offset = "0x176F514", VA = "0x176F514")]
	private void TransformData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x17779A0", Offset = "0x17779A0", VA = "0x17779A0")]
	private void TransSingleKey(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x1777AF8", Offset = "0x1777AF8", VA = "0x1777AF8")]
	public Pvr_ControllerManager()
	{
	}
}
[Token(Token = "0x2000107")]
public class Pvr_ControllerModuleInit : MonoBehaviour
{
	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerVariety Variety;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsCustomModel;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool moduleState;

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x177804C", Offset = "0x177804C", VA = "0x177804C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x17780DC", Offset = "0x17780DC", VA = "0x17780DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x177816C", Offset = "0x177816C", VA = "0x177816C")]
	private void ControllerStateChanged(string data)
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x1778278", Offset = "0x1778278", VA = "0x1778278")]
	public void ForceHideOrShow(bool state)
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x1778350", Offset = "0x1778350", VA = "0x1778350")]
	public void UpdateRay()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x1778354", Offset = "0x1778354", VA = "0x1778354")]
	public Pvr_ControllerModuleInit()
	{
	}
}
[Token(Token = "0x2000108")]
public class Pvr_ControllerPower : MonoBehaviour
{
	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite power1;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite power2;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite power3;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite power4;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite power5;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image powerImage;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int powerValue;

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x1778364", Offset = "0x1778364", VA = "0x1778364")]
	private void Start()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x177842C", Offset = "0x177842C", VA = "0x177842C")]
	private void Update()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x177844C", Offset = "0x177844C", VA = "0x177844C")]
	private void RefreshPower(int hand)
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x1778A90", Offset = "0x1778A90", VA = "0x1778A90")]
	public Pvr_ControllerPower()
	{
	}
}
[Token(Token = "0x2000109")]
public class Pvr_ControllerVisual : MonoBehaviour
{
	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D m_idle;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D m_app;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_home;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_touchpad;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D m_volUp;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D m_volDn;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D m_trigger;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D m_a;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D m_b;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D m_x;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D m_y;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D m_grip;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer controllerRenderMat;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x1778A98", Offset = "0x1778A98", VA = "0x1778A98")]
	private void Awake()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x1778AF0", Offset = "0x1778AF0", VA = "0x1778AF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x1778B60", Offset = "0x1778B60", VA = "0x1778B60")]
	private void Update()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x1778B80", Offset = "0x1778B80", VA = "0x1778B80")]
	private void ChangeKeyEffects(int hand)
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x1778EAC", Offset = "0x1778EAC", VA = "0x1778EAC")]
	public Pvr_ControllerVisual()
	{
	}
}
[Token(Token = "0x200010A")]
public class Pvr_ToolTips : MonoBehaviour
{
	[Token(Token = "0x20005FF")]
	public enum TipBtn
	{
		[Token(Token = "0x4002510")]
		app,
		[Token(Token = "0x4002511")]
		touchpad,
		[Token(Token = "0x4002512")]
		home,
		[Token(Token = "0x4002513")]
		volup,
		[Token(Token = "0x4002514")]
		voldown,
		[Token(Token = "0x4002515")]
		trigger,
		[Token(Token = "0x4002516")]
		grip
	}

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerDevice currentDevice;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float tipsAlpha;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Pvr_ToolTips tooltips;

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x177D238", Offset = "0x177D238", VA = "0x177D238")]
	public void ChangeTipsText(TipBtn tip, string key)
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x177D3B0", Offset = "0x177D3B0", VA = "0x177D3B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x177D428", Offset = "0x177D428", VA = "0x177D428")]
	private void Update()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x177D628", Offset = "0x177D628", VA = "0x177D628")]
	private void LoadTextFromJson()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x177DA7C", Offset = "0x177DA7C", VA = "0x177DA7C")]
	public static void RefreshTips()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x177DAD4", Offset = "0x177DAD4", VA = "0x177DAD4")]
	public Pvr_ToolTips()
	{
	}
}
[Token(Token = "0x200010B")]
public class Pvr_TouchPadScroll : MonoBehaviour
{
	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect scrollRect;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isHoving;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int mainHand;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SwipeDirection direction;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currPos;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 tarPos;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lerpSpeed;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform tranViewport;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ignoreDis;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 lastTouchDownPos;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 lastTouchUpPos;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isTouching;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isClosed;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 vecOrigin;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 vecOriginNeo2;

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x177DADC", Offset = "0x177DADC", VA = "0x177DADC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x177DB6C", Offset = "0x177DB6C", VA = "0x177DB6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x177E01C", Offset = "0x177E01C", VA = "0x177E01C")]
	private bool IsControllerConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x177DCB8", Offset = "0x177DCB8", VA = "0x177DCB8")]
	private void UpdateTargetPos()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x177E57C", Offset = "0x177E57C", VA = "0x177E57C")]
	private void ComputePos()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x177E1E0", Offset = "0x177E1E0", VA = "0x177E1E0")]
	private void ComputeNeo2Pos()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x177E8D4", Offset = "0x177E8D4", VA = "0x177E8D4")]
	private bool VerifyNeo2TouchValid(Vector2 nowTouchPos)
	{
		return default(bool);
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x177DE0C", Offset = "0x177DE0C", VA = "0x177DE0C")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x177E100", Offset = "0x177E100", VA = "0x177E100")]
	private void ResetParameter()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x177DB98", Offset = "0x177DB98", VA = "0x177DB98")]
	private void Process()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x177E910", Offset = "0x177E910", VA = "0x177E910")]
	private bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x177EB0C", Offset = "0x177EB0C", VA = "0x177EB0C")]
	private bool FindTree(Transform tran)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x177EBFC", Offset = "0x177EBFC", VA = "0x177EBFC")]
	public Pvr_TouchPadScroll()
	{
	}
}
[Token(Token = "0x200010C")]
public class Pvr_TouchVisual : MonoBehaviour
{
	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer touchRenderer;

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x177ECB8", Offset = "0x177ECB8", VA = "0x177ECB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x177ED60", Offset = "0x177ED60", VA = "0x177ED60")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x177ED80", Offset = "0x177ED80", VA = "0x177ED80")]
	private void ChangeEffects(int hand)
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x177EFC8", Offset = "0x177EFC8", VA = "0x177EFC8")]
	public Pvr_TouchVisual()
	{
	}
}
[Token(Token = "0x200010D")]
public class DemoController : MonoBehaviour
{
	[Token(Token = "0x2000600")]
	public delegate void showLoadingEventHandler();

	[Token(Token = "0x2000601")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB726E4", Offset = "0xB726E4")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoController <>4__this;

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0xD3AF6C", Offset = "0xD3AF6C", VA = "0xD3AF6C")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0xD3B7A4", Offset = "0xD3B7A4", VA = "0xD3B7A4")]
		internal void <InitDelegate>b__0()
		{
		}
	}

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Callback callback;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject msg;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKManager picoVrManager;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string currentOrderID;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loading;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject BG;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject InputPanel;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static showLoadingEventHandler showLoading;

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xD3A7A0", Offset = "0xD3A7A0", VA = "0xD3A7A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xD3A954", Offset = "0xD3A954", VA = "0xD3A954")]
	private void Start()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xD3AE08", Offset = "0xD3AE08", VA = "0xD3AE08")]
	private void Update()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xD3AA20", Offset = "0xD3AA20", VA = "0xD3AA20")]
	private void InitDelegate()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xD3AF74", Offset = "0xD3AF74", VA = "0xD3AF74")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xD3B2AC", Offset = "0xD3B2AC", VA = "0xD3B2AC")]
	public string getRamdomTestOrderID()
	{
		return null;
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xD3B268", Offset = "0xD3B268", VA = "0xD3B268")]
	private void StartLoading()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xD3B2F0", Offset = "0xD3B2F0", VA = "0xD3B2F0")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xD3B400", Offset = "0xD3B400", VA = "0xD3B400")]
	public void DoPayByCode()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xD3B6CC", Offset = "0xD3B6CC", VA = "0xD3B6CC")]
	private bool VerifyLocalToken()
	{
		return default(bool);
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xD3B79C", Offset = "0xD3B79C", VA = "0xD3B79C")]
	public DemoController()
	{
	}
}
[Token(Token = "0x200010E")]
public class LoadingRatation : MonoBehaviour
{
	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x1338EA8", Offset = "0x1338EA8", VA = "0x1338EA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x1338EAC", Offset = "0x1338EAC", VA = "0x1338EAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x1338F28", Offset = "0x1338F28", VA = "0x1338F28")]
	public LoadingRatation()
	{
	}
}
[Token(Token = "0x200010F")]
public class InputManager : MonoBehaviour
{
	[Token(Token = "0x2000602")]
	public delegate void doEnterEventHandler();

	[Token(Token = "0x2000603")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB726F4", Offset = "0xB726F4")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputManager <>4__this;

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0x1323E5C", Offset = "0x1323E5C", VA = "0x1323E5C")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0x1324A88", Offset = "0x1324A88", VA = "0x1324A88")]
		internal void <InitKeyBoard>b__0()
		{
		}
	}

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static doEnterEventHandler doEnter;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StringBuilder sb;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ArrayList btnsName;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject enter;

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x1323560", Offset = "0x1323560", VA = "0x1323560")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x1323E54", Offset = "0x1323E54", VA = "0x1323E54")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x1323E58", Offset = "0x1323E58", VA = "0x1323E58")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x1323564", Offset = "0x1323564", VA = "0x1323564")]
	private void InitKeyBoard()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x1323E64", Offset = "0x1323E64", VA = "0x1323E64")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x132490C", Offset = "0x132490C", VA = "0x132490C")]
	private void EnterChar(string s)
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x132409C", Offset = "0x132409C", VA = "0x132409C")]
	private void DoCapslock(bool IsUpper)
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x132467C", Offset = "0x132467C", VA = "0x132467C")]
	private void ClearBuffer()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x1324A00", Offset = "0x1324A00", VA = "0x1324A00")]
	public InputManager()
	{
	}
}
[Token(Token = "0x2000110")]
public class Callback : MonoBehaviour
{
	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IS_SUCCESS;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string MSG;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string CODE;

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xD37368", Offset = "0xD37368", VA = "0xD37368")]
	public void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xD37924", Offset = "0xD37924", VA = "0xD37924")]
	public void QueryOrPayCallback(string queryOrPayInfo)
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xD37B38", Offset = "0xD37B38", VA = "0xD37B38")]
	public void UserInfoCallback(string userInfo)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xD3757C", Offset = "0xD3757C", VA = "0xD3757C")]
	public void SetMassage(string massage)
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xD37C04", Offset = "0xD37C04", VA = "0xD37C04")]
	public GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xD37C50", Offset = "0xD37C50", VA = "0xD37C50")]
	public void ActivityForResultCallback(string activity)
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xD37D80", Offset = "0xD37D80", VA = "0xD37D80")]
	public Callback()
	{
	}
}
[Token(Token = "0x2000111")]
public class CommonDic
{
	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CommonDic dic;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, string> mydic;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _app_ID;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _app_Key;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _user_token;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _access_token;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _open_id;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _refresh_token;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _expires_in;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _user_info;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _subject;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _body;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _order_id;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _total;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _goods_tag;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _notify_url;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _trade_type;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _pay_code;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _order_info;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _code;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string _msg;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string _merchant_ID;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _payKey;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string _isSuucess;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string _loginMsg;

	[Token(Token = "0x17000069")]
	public string subject
	{
		[Token(Token = "0x60009CB")]
		[Address(RVA = "0xD38520", Offset = "0xD38520", VA = "0xD38520")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009CC")]
		[Address(RVA = "0xD38528", Offset = "0xD38528", VA = "0xD38528")]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public string body
	{
		[Token(Token = "0x60009CD")]
		[Address(RVA = "0xD38530", Offset = "0xD38530", VA = "0xD38530")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xD38538", Offset = "0xD38538", VA = "0xD38538")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public string order_id
	{
		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xD38540", Offset = "0xD38540", VA = "0xD38540")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xD38548", Offset = "0xD38548", VA = "0xD38548")]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public string total
	{
		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xD38550", Offset = "0xD38550", VA = "0xD38550")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xD38558", Offset = "0xD38558", VA = "0xD38558")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public string goods_tag
	{
		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xD38560", Offset = "0xD38560", VA = "0xD38560")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xD38568", Offset = "0xD38568", VA = "0xD38568")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public string notify_url
	{
		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xD38570", Offset = "0xD38570", VA = "0xD38570")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xD38578", Offset = "0xD38578", VA = "0xD38578")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public string pay_code
	{
		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xD38580", Offset = "0xD38580", VA = "0xD38580")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xD38588", Offset = "0xD38588", VA = "0xD38588")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public string trade_type
	{
		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xD38590", Offset = "0xD38590", VA = "0xD38590")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xD38598", Offset = "0xD38598", VA = "0xD38598")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public string user_token
	{
		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xD385A0", Offset = "0xD385A0", VA = "0xD385A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xD385A8", Offset = "0xD385A8", VA = "0xD385A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public string access_token
	{
		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xD385B0", Offset = "0xD385B0", VA = "0xD385B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xD385B8", Offset = "0xD385B8", VA = "0xD385B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public string open_id
	{
		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xD385C0", Offset = "0xD385C0", VA = "0xD385C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xD385C8", Offset = "0xD385C8", VA = "0xD385C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public string refresh_token
	{
		[Token(Token = "0x60009E1")]
		[Address(RVA = "0xD385D0", Offset = "0xD385D0", VA = "0xD385D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xD385D8", Offset = "0xD385D8", VA = "0xD385D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public string expires_in
	{
		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xD385E0", Offset = "0xD385E0", VA = "0xD385E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xD385E8", Offset = "0xD385E8", VA = "0xD385E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public string isSuccess
	{
		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xD385F0", Offset = "0xD385F0", VA = "0xD385F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xD385F8", Offset = "0xD385F8", VA = "0xD385F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public string loginMsg
	{
		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xD38600", Offset = "0xD38600", VA = "0xD38600")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xD38608", Offset = "0xD38608", VA = "0xD38608")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public string user_info
	{
		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xD38610", Offset = "0xD38610", VA = "0xD38610")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xD38618", Offset = "0xD38618", VA = "0xD38618")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public string order_info
	{
		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xD38620", Offset = "0xD38620", VA = "0xD38620")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xD38628", Offset = "0xD38628", VA = "0xD38628")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public string code
	{
		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xD38630", Offset = "0xD38630", VA = "0xD38630")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xD38638", Offset = "0xD38638", VA = "0xD38638")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public string msg
	{
		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xD38640", Offset = "0xD38640", VA = "0xD38640")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xD38648", Offset = "0xD38648", VA = "0xD38648")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public string app_ID
	{
		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xD38650", Offset = "0xD38650", VA = "0xD38650")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xD38658", Offset = "0xD38658", VA = "0xD38658")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public string app_Key
	{
		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xD38660", Offset = "0xD38660", VA = "0xD38660")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xD38668", Offset = "0xD38668", VA = "0xD38668")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public string merchant_ID
	{
		[Token(Token = "0x60009F5")]
		[Address(RVA = "0xD38670", Offset = "0xD38670", VA = "0xD38670")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xD38678", Offset = "0xD38678", VA = "0xD38678")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public string paykey
	{
		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xD38680", Offset = "0xD38680", VA = "0xD38680")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xD38688", Offset = "0xD38688", VA = "0xD38688")]
		set
		{
		}
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xD37860", Offset = "0xD37860", VA = "0xD37860")]
	public static CommonDic getInstance()
	{
		return null;
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xD38304", Offset = "0xD38304", VA = "0xD38304")]
	public Dictionary<string, string> getDic()
	{
		return null;
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xD38354", Offset = "0xD38354", VA = "0xD38354")]
	public void setParameters(string name, string value)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xD384B0", Offset = "0xD384B0", VA = "0xD384B0")]
	public string PayOrderString()
	{
		return null;
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xD37E7C", Offset = "0xD37E7C", VA = "0xD37E7C")]
	public static void InitDicData(Dictionary<string, string> mydic)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xD37E10", Offset = "0xD37E10", VA = "0xD37E10")]
	public CommonDic()
	{
	}
}
[Token(Token = "0x2000112")]
public class LoginSDK
{
	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x1338F30", Offset = "0x1338F30", VA = "0x1338F30")]
	public static void Login()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x1338F90", Offset = "0x1338F90", VA = "0x1338F90")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x1338FF0", Offset = "0x1338FF0", VA = "0x1338FF0")]
	public LoginSDK()
	{
	}
}
[Token(Token = "0x2000113")]
public class PicoPaymentSDK
{
	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject _jo;

	[Token(Token = "0x17000080")]
	public static AndroidJavaObject jo
	{
		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xFFA170", Offset = "0xFFA170", VA = "0xFFA170")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xFFA1D8", Offset = "0xFFA1D8", VA = "0xFFA1D8")]
		set
		{
		}
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xFFA244", Offset = "0xFFA244", VA = "0xFFA244")]
	public static void Login()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xFFA4B4", Offset = "0xFFA4B4", VA = "0xFFA4B4")]
	public static void Pay(string payOrderJson)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xFFA6E0", Offset = "0xFFA6E0", VA = "0xFFA6E0")]
	public static void QueryOrder(string orderId)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xFFA90C", Offset = "0xFFA90C", VA = "0xFFA90C")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xFFAB7C", Offset = "0xFFAB7C", VA = "0xFFAB7C")]
	public PicoPaymentSDK()
	{
	}
}
[Token(Token = "0x2000114")]
public class PLOG : MonoBehaviour
{
	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int logLevel;

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xFF9E84", Offset = "0xFF9E84", VA = "0xFF9E84")]
	public static void getConfigTraceLevel()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xFF9EF0", Offset = "0xFF9EF0", VA = "0xFF9EF0")]
	public static void D(string msg)
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xFF9F98", Offset = "0xFF9F98", VA = "0xFF9F98")]
	public static void I(string msg)
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xFFA040", Offset = "0xFFA040", VA = "0xFFA040")]
	public static void W(string msg)
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xFFA0E8", Offset = "0xFFA0E8", VA = "0xFFA0E8")]
	public static void E(string msg)
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xFFA150", Offset = "0xFFA150", VA = "0xFFA150")]
	public PLOG()
	{
	}
}
[Token(Token = "0x2000115")]
public class CPicoSDKSettingAsset : ScriptableObject
{
	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IgnoreSDKSetting;

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xD37360", Offset = "0xD37360", VA = "0xD37360")]
	public CPicoSDKSettingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000116")]
public class Pvr_UnitySDKProjectSetting : ScriptableObject
{
	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTextureAntiAliasing rtAntiAlising;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTextureDepth rtBitDepth;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTextureFormat rtFormat;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool usedefaultRenderTexture;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 customRTSize;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool usedefaultfps;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int customfps;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool usesinglepass;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool usecontentprotect;

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x10D4994", Offset = "0x10D4994", VA = "0x10D4994")]
	public static Pvr_UnitySDKProjectSetting GetProjectConfig()
	{
		return null;
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x10D49E8", Offset = "0x10D49E8", VA = "0x10D49E8")]
	public Pvr_UnitySDKProjectSetting()
	{
	}
}
[Token(Token = "0x2000117")]
public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
{
	[Token(Token = "0x2000604")]
	public enum simulationType
	{
		[Token(Token = "0x400251C")]
		Null,
		[Token(Token = "0x400251D")]
		Invalid,
		[Token(Token = "0x400251E")]
		Valid
	}

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool entitlementchecksimulation;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> deviceSN;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKPlatformSetting instance;

	[Token(Token = "0x17000081")]
	public static bool Entitlementchecksimulation
	{
		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x10D3BEC", Offset = "0x10D3BEC", VA = "0x10D3BEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x10D3CC4", Offset = "0x10D3CC4", VA = "0x10D3CC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public static Pvr_UnitySDKPlatformSetting Instance
	{
		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x10D3C0C", Offset = "0x10D3C0C", VA = "0x10D3C0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x10D3D10", Offset = "0x10D3D10", VA = "0x10D3D10")]
		set
		{
		}
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x10D3D64", Offset = "0x10D3D64", VA = "0x10D3D64")]
	public Pvr_UnitySDKPlatformSetting()
	{
	}
}
[Token(Token = "0x2000118")]
public class Pvr_UnitySDKManager : MonoBehaviour
{
	[Token(Token = "0x2000605")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72704", Offset = "0xB72704")]
	private sealed class <ToastManager>d__89 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int type;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool state;

		[Token(Token = "0x1700049F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AE5")]
			[Address(RVA = "0x10D3B78", Offset = "0x10D3B78", VA = "0x10D3B78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AE7")]
			[Address(RVA = "0x10D3BE4", Offset = "0x10D3BE4", VA = "0x10D3BE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0x10D3A10", Offset = "0x10D3A10", VA = "0x10D3A10")]
		[DebuggerHidden]
		public <ToastManager>d__89(int <>1__state)
		{
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0x10D3A3C", Offset = "0x10D3A3C", VA = "0x10D3A3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AE4")]
		[Address(RVA = "0x10D3A40", Offset = "0x10D3A40", VA = "0x10D3A40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0x10D3B80", Offset = "0x10D3B80", VA = "0x10D3B80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000606")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72714", Offset = "0xB72714")]
	private sealed class <>c__DisplayClass94_0
	{
		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trans;

		[Token(Token = "0x6002AE8")]
		[Address(RVA = "0x10D26E8", Offset = "0x10D26E8", VA = "0x10D26E8")]
		public <>c__DisplayClass94_0()
		{
		}

		[Token(Token = "0x6002AE9")]
		[Address(RVA = "0x10D26F0", Offset = "0x10D26F0", VA = "0x10D26F0")]
		internal void <SetProperty>b__0()
		{
		}
	}

	[Token(Token = "0x2000607")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72724", Offset = "0xB72724")]
	private sealed class <G3TipsManager>d__98 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tip;

		[Token(Token = "0x170004A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AED")]
			[Address(RVA = "0x10D2838", Offset = "0x10D2838", VA = "0x10D2838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AEF")]
			[Address(RVA = "0x10D28A4", Offset = "0x10D28A4", VA = "0x10D28A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AEA")]
		[Address(RVA = "0x10D2750", Offset = "0x10D2750", VA = "0x10D2750")]
		[DebuggerHidden]
		public <G3TipsManager>d__98(int <>1__state)
		{
		}

		[Token(Token = "0x6002AEB")]
		[Address(RVA = "0x10D277C", Offset = "0x10D277C", VA = "0x10D277C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AEC")]
		[Address(RVA = "0x10D2780", Offset = "0x10D2780", VA = "0x10D2780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AEE")]
		[Address(RVA = "0x10D2840", Offset = "0x10D2840", VA = "0x10D2840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000608")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72734", Offset = "0xB72734")]
	private sealed class <Start>d__109 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x170004A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AF3")]
			[Address(RVA = "0x10D399C", Offset = "0x10D399C", VA = "0x10D399C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AF5")]
			[Address(RVA = "0x10D3A08", Offset = "0x10D3A08", VA = "0x10D3A08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AF0")]
		[Address(RVA = "0x10D37D4", Offset = "0x10D37D4", VA = "0x10D37D4")]
		[DebuggerHidden]
		public <Start>d__109(int <>1__state)
		{
		}

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0x10D3800", Offset = "0x10D3800", VA = "0x10D3800", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AF2")]
		[Address(RVA = "0x10D3804", Offset = "0x10D3804", VA = "0x10D3804", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF4")]
		[Address(RVA = "0x10D39A4", Offset = "0x10D39A4", VA = "0x10D39A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000609")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72744", Offset = "0xB72744")]
	private sealed class <InitRenderThreadRoutine>d__110 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x170004A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AF9")]
			[Address(RVA = "0x10D2C90", Offset = "0x10D2C90", VA = "0x10D2C90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AFB")]
			[Address(RVA = "0x10D2CFC", Offset = "0x10D2CFC", VA = "0x10D2CFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AF6")]
		[Address(RVA = "0x10D28AC", Offset = "0x10D28AC", VA = "0x10D28AC")]
		[DebuggerHidden]
		public <InitRenderThreadRoutine>d__110(int <>1__state)
		{
		}

		[Token(Token = "0x6002AF7")]
		[Address(RVA = "0x10D28D8", Offset = "0x10D28D8", VA = "0x10D28D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0x10D28DC", Offset = "0x10D28DC", VA = "0x10D28DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0x10D2C98", Offset = "0x10D2C98", VA = "0x10D2C98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200060A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72754", Offset = "0xB72754")]
	private sealed class <OnResume>d__123 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <ability6dof>5__2;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <waitNum>5__3;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <resetNum>5__4;

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__5;

		[Token(Token = "0x170004A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AFF")]
			[Address(RVA = "0x10D3760", Offset = "0x10D3760", VA = "0x10D3760", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B01")]
			[Address(RVA = "0x10D37CC", Offset = "0x10D37CC", VA = "0x10D37CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0x10D2D04", Offset = "0x10D2D04", VA = "0x10D2D04")]
		[DebuggerHidden]
		public <OnResume>d__123(int <>1__state)
		{
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0x10D2D30", Offset = "0x10D2D30", VA = "0x10D2D30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AFE")]
		[Address(RVA = "0x10D2D34", Offset = "0x10D2D34", VA = "0x10D2D34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B00")]
		[Address(RVA = "0x10D3768", Offset = "0x10D3768", VA = "0x10D3768", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatForm platform;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Pvr_UnitySDKManager sdk;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float EyesAspect;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int posStatus;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool ismirroring;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Vector3 resetBasePos;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int trackingmode;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int systemprop;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool systemFPS;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float[] headData;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool rotfoldout;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool hmdOnlyrot;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool controllerOnlyrot;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private TrackingOrigin trackingOrigin;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ResetTrackerOnLoad;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public Vector3 leftEyeOffset;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Vector3 rightEyeOffset;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public Rect leftEyeRect;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Rect rightEyeRect;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Matrix4x4 leftEyeView;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public Matrix4x4 rightEyeView;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private bool vrModeEnabled;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public Material Eyematerial;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public Material Middlematerial;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB76748", Offset = "0xB76748")]
	private bool <picovrTriggered>k__BackingField;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[HideInInspector]
	public bool newPicovrTriggered;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	[SerializeField]
	private bool showFPS;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[HideInInspector]
	public Vector3 neckOffset;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private bool pVRNeck;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	[HideInInspector]
	public bool UseCustomNeckPara;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	[HideInInspector]
	public bool onResume;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	[HideInInspector]
	public bool isEnterVRMode;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool isHasController;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject calltoast;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject msgtoast;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject lowhmdBatterytoast;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject lowphoneBatterytoast;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject LowPhoneHealthtoast;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GameObject LowcontrollerBatterytoast;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool lowControllerpowerstate;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float controllerpowershowtime;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool UseToast;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GameObject G3LiteTips;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private bool monoscopic;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool mIsAndroid7;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Func<bool> eventEnterVRMode;

	[Token(Token = "0x17000083")]
	public static Pvr_UnitySDKManager SDK
	{
		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x1986E60", Offset = "0x1986E60", VA = "0x1986E60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000084")]
	public bool Rotfoldout
	{
		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x19970C0", Offset = "0x19970C0", VA = "0x19970C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x19970C8", Offset = "0x19970C8", VA = "0x19970C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public bool HmdOnlyrot
	{
		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x19970E8", Offset = "0x19970E8", VA = "0x19970E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x19970F0", Offset = "0x19970F0", VA = "0x19970F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public bool ControllerOnlyrot
	{
		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x1997110", Offset = "0x1997110", VA = "0x1997110")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x1997118", Offset = "0x1997118", VA = "0x1997118")]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public TrackingOrigin TrackingOrigin
	{
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x1997138", Offset = "0x1997138", VA = "0x1997138")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x1997140", Offset = "0x1997140", VA = "0x1997140")]
		set
		{
		}
	}

	[Token(Token = "0x17000088")]
	[HideInInspector]
	public bool VRModeEnabled
	{
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x19971F8", Offset = "0x19971F8", VA = "0x19971F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x1990B8C", Offset = "0x1990B8C", VA = "0x1990B8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000089")]
	[HideInInspector]
	public bool picovrTriggered
	{
		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x1997200", Offset = "0x1997200", VA = "0x1997200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8566C", Offset = "0xB8566C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x1997208", Offset = "0x1997208", VA = "0x1997208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8567C", Offset = "0xB8567C")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public bool ShowFPS
	{
		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x1997214", Offset = "0x1997214", VA = "0x1997214")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x199721C", Offset = "0x199721C", VA = "0x199721C")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public bool PVRNeck
	{
		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x199723C", Offset = "0x199723C", VA = "0x199723C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x1997244", Offset = "0x1997244", VA = "0x1997244")]
		set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	[HideInInspector]
	public bool Monoscopic
	{
		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x1997264", Offset = "0x1997264", VA = "0x1997264")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x199726C", Offset = "0x199726C", VA = "0x199726C")]
		set
		{
		}
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x199715C", Offset = "0x199715C", VA = "0x199715C")]
	public void ChangeDefaultCustomRtSize(int w, int h)
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x1991F58", Offset = "0x1991F58", VA = "0x1991F58")]
	public Vector3 EyeOffset(Eye eye)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x19971BC", Offset = "0x19971BC", VA = "0x19971BC")]
	public Rect EyeRect(Eye eye)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x1997294", Offset = "0x1997294", VA = "0x1997294")]
	private bool SDKManagerInit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x19973E4", Offset = "0x19973E4", VA = "0x19973E4")]
	private bool SDKManagerInitCoreAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x1997518", Offset = "0x1997518", VA = "0x1997518")]
	public void smsReceivedCallback(string msg)
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x1997C4C", Offset = "0x1997C4C", VA = "0x1997C4C")]
	public void phoneStateCallback(string state)
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x1997FD8", Offset = "0x1997FD8", VA = "0x1997FD8")]
	public void phoneBatteryStateCallback(string state)
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x199828C", Offset = "0x199828C", VA = "0x199828C")]
	public void hmdLowBatteryCallback(string level)
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x19978A4", Offset = "0x19978A4", VA = "0x19978A4")]
	private string TransformNumber(string number)
	{
		return null;
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x19983C4", Offset = "0x19983C4", VA = "0x19983C4")]
	public void onHmdOrientationReseted()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x1997BAC", Offset = "0x1997BAC", VA = "0x1997BAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8568C", Offset = "0xB8568C")]
	private IEnumerator ToastManager(int type, bool state, float time)
	{
		return null;
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x19983C8", Offset = "0x19983C8", VA = "0x19983C8")]
	private void CheckControllerStateForG2(string state)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x1998574", Offset = "0x1998574", VA = "0x1998574")]
	public void notificationCallback(string data)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x1999508", Offset = "0x1999508", VA = "0x1999508")]
	private Sprite LoadSprite(Vector2 size, string filepath)
	{
		return null;
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x1999628", Offset = "0x1999628", VA = "0x1999628")]
	private byte[] ReadTex(string path)
	{
		return null;
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x1998904", Offset = "0x1998904", VA = "0x1998904")]
	private void SetProperty(int type, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x1998E08", Offset = "0x1998E08", VA = "0x1998E08")]
	private void SetBaseProperty(Transform trans, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x19991E8", Offset = "0x19991E8", VA = "0x19991E8")]
	private void SetImageProperty(Transform image, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x1999770", Offset = "0x1999770", VA = "0x1999770")]
	private void SetTextProperty(Transform text, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x1999484", Offset = "0x1999484", VA = "0x1999484")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB856F0", Offset = "0xB856F0")]
	private IEnumerator G3TipsManager(GameObject tip, float time)
	{
		return null;
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x1999A28", Offset = "0x1999A28", VA = "0x1999A28")]
	private float JsonToFloat(JsonData data)
	{
		return default(float);
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x1999AA4", Offset = "0x1999AA4", VA = "0x1999AA4")]
	private bool SDKManagerInitFPS()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x1997370", Offset = "0x1997370", VA = "0x1997370")]
	private bool SDKManagerInitConfigProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x1999C68", Offset = "0x1999C68", VA = "0x1999C68")]
	private bool SDKManagerInitEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x1999D14", Offset = "0x1999D14", VA = "0x1999D14")]
	private bool SDKManagerInitPara()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x1999D1C", Offset = "0x1999D1C", VA = "0x1999D1C")]
	public void SDKManagerLongHomeKey()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x1999E20", Offset = "0x1999E20", VA = "0x1999E20")]
	private void setLongHomeKey()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x199A08C", Offset = "0x199A08C", VA = "0x199A08C")]
	public void verifyAPPCallback(string code)
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x199A114", Offset = "0x199A114", VA = "0x199A114")]
	public void IpdRefreshCallBack(string ipd)
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x199A230", Offset = "0x199A230", VA = "0x199A230")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x199B1C8", Offset = "0x199B1C8", VA = "0x199B1C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB85754", Offset = "0xB85754")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x199B23C", Offset = "0x199B23C", VA = "0x199B23C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB857B8", Offset = "0xB857B8")]
	private IEnumerator InitRenderThreadRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x199B29C", Offset = "0x199B29C", VA = "0x199B29C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x199B52C", Offset = "0x199B52C", VA = "0x199B52C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x199B68C", Offset = "0x199B68C", VA = "0x199B68C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x199B7C4", Offset = "0x199B7C4", VA = "0x199B7C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x199B7CC", Offset = "0x199B7CC", VA = "0x199B7CC")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x199B8EC", Offset = "0x199B8EC", VA = "0x199B8EC")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x199BAC8", Offset = "0x199BAC8", VA = "0x199BAC8")]
	public void EnterVRMode()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x199B87C", Offset = "0x199B87C", VA = "0x199B87C")]
	public void LeaveVRMode()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x199BBB4", Offset = "0x199BBB4", VA = "0x199BBB4")]
	public void SixDofForceQuit()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x199AC18", Offset = "0x199AC18", VA = "0x199AC18")]
	private void InitUI()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x199AE18", Offset = "0x199AE18", VA = "0x199AE18")]
	private void RefreshTextByLanguage()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x199A83C", Offset = "0x199A83C", VA = "0x199A83C")]
	private void LoadIsMirroringValue()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x199BA54", Offset = "0x199BA54", VA = "0x199BA54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8581C", Offset = "0xB8581C")]
	private IEnumerator OnResume()
	{
		return null;
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x199BBBC", Offset = "0x199BBBC", VA = "0x199BBBC")]
	public Pvr_UnitySDKManager()
	{
	}
}
[Token(Token = "0x2000119")]
public class QuitGame : MonoBehaviour
{
	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x10DC574", Offset = "0x10DC574", VA = "0x10DC574")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x10DC578", Offset = "0x10DC578", VA = "0x10DC578")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x10DC5A4", Offset = "0x10DC5A4", VA = "0x10DC5A4")]
	public QuitGame()
	{
	}
}
[Token(Token = "0x200011A")]
public class Pvr_UnityEyeMask : MonoBehaviour
{
	[Token(Token = "0x200060B")]
	private class EyeMaskData
	{
		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Eye eyeSide;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x6002B02")]
		[Address(RVA = "0x17842AC", Offset = "0x17842AC", VA = "0x17842AC")]
		public EyeMaskData()
		{
		}
	}

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader eyeMaskShader;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material eyeMaskMaterial;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh eyeMaskMeshLeft;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh eyeMaskMeshRight;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh eyeMaskMeshBoth;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float zDir;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color eyeMaskColor;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<EyeMaskData> cameraDataList;

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x1782A04", Offset = "0x1782A04", VA = "0x1782A04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x1782AC0", Offset = "0x1782AC0", VA = "0x1782AC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x17835B0", Offset = "0x17835B0", VA = "0x17835B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x1782FD8", Offset = "0x1782FD8", VA = "0x1782FD8")]
	private void CreateCommandBuffer()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x17840D8", Offset = "0x17840D8", VA = "0x17840D8")]
	private void OnCustomPreRender(Camera cam)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x1783934", Offset = "0x1783934", VA = "0x1783934")]
	private Mesh GetStencilMesh(Eye eyeSide)
	{
		return null;
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x1783C9C", Offset = "0x1783C9C", VA = "0x1783C9C")]
	private Mesh GetStencilMeshBoth(Mesh leftMesh, Mesh rightMesh)
	{
		return null;
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x1783820", Offset = "0x1783820", VA = "0x1783820")]
	private bool VerifyCommadBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x1782D18", Offset = "0x1782D18", VA = "0x1782D18")]
	private void PrepareCameras()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x178427C", Offset = "0x178427C", VA = "0x178427C")]
	private void AddCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x1783784", Offset = "0x1783784", VA = "0x1783784")]
	private void RemoveCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x17837B4", Offset = "0x17837B4", VA = "0x17837B4")]
	private void CleanEyeMask()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x17842B4", Offset = "0x17842B4", VA = "0x17842B4")]
	public Pvr_UnityEyeMask()
	{
	}
}
[Token(Token = "0x200011B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB70EA4", Offset = "0xB70EA4")]
public class Pvr_UnitySDKEye : MonoBehaviour
{
	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEye> Instances;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Eye eyeSide;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB767D8", Offset = "0xB767D8")]
	private Camera <eyecamera>k__BackingField;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int eyeCameraOriginCullingMask;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private CameraClearFlags eyeCameraOriginClearFlag;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color eyeCameraOriginBackgroundColor;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastBoundaryState;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Matrix4x4 realProj;

	[Token(Token = "0x4000984")]
	private const int bufferSize = 3;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int IDIndex;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RenderEventType eventType;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int previousId;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool setLevel;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material mat_Vignette;

	[Token(Token = "0x1700008D")]
	public Camera eyecamera
	{
		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x1990C48", Offset = "0x1990C48", VA = "0x1990C48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85880", Offset = "0xB85880")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x1990C50", Offset = "0x1990C50", VA = "0x1990C50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85890", Offset = "0xB85890")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x1990C58", Offset = "0x1990C58", VA = "0x1990C58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x1990CF8", Offset = "0x1990CF8", VA = "0x1990CF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x1991290", Offset = "0x1991290", VA = "0x1991290")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x19914CC", Offset = "0x19914CC", VA = "0x19914CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x19915D4", Offset = "0x19915D4", VA = "0x19915D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x19916DC", Offset = "0x19916DC", VA = "0x19916DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x1991760", Offset = "0x1991760", VA = "0x1991760")]
	public void MyPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x1991950", Offset = "0x1991950", VA = "0x1991950")]
	public void MyPreRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x1991A14", Offset = "0x1991A14", VA = "0x1991A14")]
	public void MyPostRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x1991824", Offset = "0x1991824", VA = "0x1991824")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x1991AD8", Offset = "0x1991AD8", VA = "0x1991AD8")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x1991DD0", Offset = "0x1991DD0", VA = "0x1991DD0")]
	public void EyeRender()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x1990DD8", Offset = "0x1990DD8", VA = "0x1990DD8")]
	private void Setup(Eye eyeSide)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x1990FF0", Offset = "0x1990FF0", VA = "0x1990FF0")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x1989DF4", Offset = "0x1989DF4", VA = "0x1989DF4")]
	public void RefreshCameraPosition(float ipd)
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x1991F90", Offset = "0x1991F90", VA = "0x1991F90")]
	private void DrawVignetteLine()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x19920BC", Offset = "0x19920BC", VA = "0x19920BC")]
	private void vignette()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x1991C7C", Offset = "0x1991C7C", VA = "0x1991C7C")]
	private void SetFFRParameter()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x199233C", Offset = "0x199233C", VA = "0x199233C")]
	public Pvr_UnitySDKEye()
	{
	}
}
[Token(Token = "0x200011C")]
public class Pvr_UnitySDKEyeManager : MonoBehaviour
{
	[Token(Token = "0x200060C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72764", Offset = "0xB72764")]
	private sealed class <EndOfFrame>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x170004A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B06")]
			[Address(RVA = "0x1995A20", Offset = "0x1995A20", VA = "0x1995A20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B08")]
			[Address(RVA = "0x1995A8C", Offset = "0x1995A8C", VA = "0x1995A8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B03")]
		[Address(RVA = "0x1994004", Offset = "0x1994004", VA = "0x1994004")]
		[DebuggerHidden]
		public <EndOfFrame>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002B04")]
		[Address(RVA = "0x1994AE4", Offset = "0x1994AE4", VA = "0x1994AE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B05")]
		[Address(RVA = "0x1994AE8", Offset = "0x1994AE8", VA = "0x1994AE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B07")]
		[Address(RVA = "0x1995A28", Offset = "0x1995A28", VA = "0x1995A28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200060D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72774", Offset = "0xB72774")]
	private sealed class <ScreenFade>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170004AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B0C")]
			[Address(RVA = "0x1995BCC", Offset = "0x1995BCC", VA = "0x1995BCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B0E")]
			[Address(RVA = "0x1995C38", Offset = "0x1995C38", VA = "0x1995C38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B09")]
		[Address(RVA = "0x1994A1C", Offset = "0x1994A1C", VA = "0x1994A1C")]
		[DebuggerHidden]
		public <ScreenFade>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6002B0A")]
		[Address(RVA = "0x1995A94", Offset = "0x1995A94", VA = "0x1995A94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B0B")]
		[Address(RVA = "0x1995A98", Offset = "0x1995A98", VA = "0x1995A98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B0D")]
		[Address(RVA = "0x1995BD4", Offset = "0x1995BD4", VA = "0x1995BD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKEyeManager instance;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Camera LeftEyeCamera;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Camera RightEyeCamera;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Camera MonoEyeCamera;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Camera BothEyeCamera;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int MonoEyeTextureID;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int WaitSplashScreenFrames;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int frameNum;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool isFrameRateLimitForBoundary;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int lastBoundaryState;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int recordTargetFrameRate;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int limitTargetFrameRate;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	[HideInInspector]
	private bool foveatedRendering;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[HideInInspector]
	private EFoveationLevel foveationLevel;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int eyeTextureId;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RenderEventType eventType;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Pvr_UnitySDKEyeOverlay compositeLayer;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int overlayLayerDepth;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int underlayLayerDepth;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isHeadLocked;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int layerFlags;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public bool EyeTracking;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Vector3 eyePoint;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private EyeTrackingData eyePoseData;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public bool supportEyeTracking;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB768C8", Offset = "0xB768C8")]
	public bool screenFade;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76900", Offset = "0xB76900")]
	public float fadeTime;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76938", Offset = "0xB76938")]
	public Color fadeColor;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public int renderQueue;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private MeshFilter fadeMeshFilter;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Material fadeMaterial;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float elapsedTime;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private bool isFading;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float currentAlpha;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float nowFadeAlpha;

	[Token(Token = "0x1700008E")]
	public static Pvr_UnitySDKEyeManager Instance
	{
		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x1989CA0", Offset = "0x1989CA0", VA = "0x1989CA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008F")]
	public Pvr_UnitySDKEye[] Eyes
	{
		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x1989D64", Offset = "0x1989D64", VA = "0x1989D64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000090")]
	[HideInInspector]
	public bool FoveatedRendering
	{
		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x199245C", Offset = "0x199245C", VA = "0x199245C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x1992464", Offset = "0x1992464", VA = "0x1992464")]
		set
		{
		}
	}

	[Token(Token = "0x17000091")]
	[HideInInspector]
	public EFoveationLevel FoveationLevel
	{
		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x19924C8", Offset = "0x19924C8", VA = "0x19924C8")]
		get
		{
			return default(EFoveationLevel);
		}
		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x19924D0", Offset = "0x19924D0", VA = "0x19924D0")]
		set
		{
		}
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x19924E4", Offset = "0x19924E4", VA = "0x19924E4")]
	private void SetCameraEnableEditor()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x1992718", Offset = "0x1992718", VA = "0x1992718")]
	private void SetCamerasEnableByStereoRendering()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x19927E4", Offset = "0x19927E4", VA = "0x19927E4")]
	private void SetupMonoCamera()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x19928FC", Offset = "0x19928FC", VA = "0x19928FC")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x19929E0", Offset = "0x19929E0", VA = "0x19929E0")]
	private void MonoEyeRender()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x1992B68", Offset = "0x1992B68", VA = "0x1992B68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x1993324", Offset = "0x1993324", VA = "0x1993324")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x1993918", Offset = "0x1993918", VA = "0x1993918")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x199395C", Offset = "0x199395C", VA = "0x199395C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x1993C44", Offset = "0x1993C44", VA = "0x1993C44")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x1993D28", Offset = "0x1993D28", VA = "0x1993D28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x1993D30", Offset = "0x1993D30", VA = "0x1993D30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x1993E98", Offset = "0x1993E98", VA = "0x1993E98")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x1993F90", Offset = "0x1993F90", VA = "0x1993F90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB858A0", Offset = "0xB858A0")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x1994030", Offset = "0x1994030", VA = "0x1994030")]
	private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x199442C", Offset = "0x199442C", VA = "0x199442C")]
	public bool SetEyeTrackingMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x198AB70", Offset = "0x198AB70", VA = "0x198AB70")]
	public Vector3 GetEyeTrackingPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x1994668", Offset = "0x1994668", VA = "0x1994668")]
	private EyeDeviceInfo GetDeviceInfo()
	{
		return default(EyeDeviceInfo);
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x1992EA8", Offset = "0x1992EA8", VA = "0x1992EA8")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x1993D34", Offset = "0x1993D34", VA = "0x1993D34")]
	private void DestoryFadeMesh()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x199331C", Offset = "0x199331C", VA = "0x199331C")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x1993890", Offset = "0x1993890", VA = "0x1993890")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB85904", Offset = "0xB85904")]
	private IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x19948C4", Offset = "0x19948C4", VA = "0x19948C4")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x1993888", Offset = "0x1993888", VA = "0x1993888")]
	public bool GfxDeviceAdvanceFrameGLES()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x1994A48", Offset = "0x1994A48", VA = "0x1994A48")]
	public Pvr_UnitySDKEyeManager()
	{
	}
}
[Token(Token = "0x200011D")]
public class Pvr_UnitySDKEyeOverlay : MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
{
	[Token(Token = "0x200060E")]
	public delegate void ExternalAndroidSurfaceObjectCreated();

	[Token(Token = "0x200060F")]
	public enum OverlayShape
	{
		[Token(Token = "0x4002545")]
		Quad,
		[Token(Token = "0x4002546")]
		Cylinder,
		[Token(Token = "0x4002547")]
		Equirect
	}

	[Token(Token = "0x2000610")]
	public enum OverlayType
	{
		[Token(Token = "0x4002549")]
		Overlay,
		[Token(Token = "0x400254A")]
		Underlay
	}

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEyeOverlay> Instances;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int layerIndex;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OverlayType overlayType;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OverlayShape overlayShape;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform layerTransform;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture[] layerTextures;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] layerTextureIds;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Matrix4x4[] MVMatrixs;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] ModelScales;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion[] ModelRotations;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3[] ModelTranslations;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Quaternion[] CameraRotations;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3[] CameraTranslations;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Camera[] layerEyeCamera;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool overrideColorScaleAndOffset;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector4 colorScale;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector4 colorOffset;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector4 overlayLayerColorScaleDefault;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector4 overlayLayerColorOffsetDefault;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool isExternalAndroidSurface;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntPtr externalAndroidSurfaceObject;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x1995C40", Offset = "0x1995C40", VA = "0x1995C40", Slot = "4")]
	public int CompareTo(Pvr_UnitySDKEyeOverlay other)
	{
		return default(int);
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x1995C64", Offset = "0x1995C64", VA = "0x1995C64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x1996104", Offset = "0x1996104", VA = "0x1996104")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x19965EC", Offset = "0x19965EC", VA = "0x19965EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x19936A4", Offset = "0x19936A4", VA = "0x19936A4")]
	public void RefreshCamera()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x1995F40", Offset = "0x1995F40", VA = "0x1995F40")]
	private void InitializeBuffer()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x1996108", Offset = "0x1996108", VA = "0x1996108")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x1996670", Offset = "0x1996670", VA = "0x1996670")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x199670C", Offset = "0x199670C", VA = "0x199670C")]
	public void SetLayerColorScaleAndOffset(Vector4 scale, Vector4 offset)
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x19959A0", Offset = "0x19959A0", VA = "0x19959A0")]
	public Vector4 GetLayerColorScale()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x19959E0", Offset = "0x19959E0", VA = "0x19959E0")]
	public Vector4 GetLayerColorOffset()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x1996720", Offset = "0x1996720", VA = "0x1996720")]
	public Pvr_UnitySDKEyeOverlay()
	{
	}
}
[Token(Token = "0x200011E")]
public class Pvr_UnitySDKRender
{
	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKRender instance;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaObject activity;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AndroidJavaClass javaVrActivityClass;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AndroidJavaClass javaSysActivityClass;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AndroidJavaClass javaserviceClass;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static AndroidJavaClass javaVrActivityLongReceiver;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static AndroidJavaClass javaVrActivityClientClass;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canConnecttoActivity;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isInitrenderThread;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string model;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 prefinger1;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 prefinger2;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int eyeTextureCount;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture[] eyeTextures;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] eyeTextureIds;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currEyeTextureIdx;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int nextEyeTextureIdx;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int lastEyeTextureIdx;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isSwitchSDK;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int RenderviewNumber;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isFirstStartup;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private StereoRenderingPathPico stereoRenderPath;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB76970", Offset = "0xB76970")]
	private SDKStereoRendering <StereoRendering>k__BackingField;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rtScaleFactor;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float eyeVFov;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float eyeHFov;

	[Token(Token = "0x17000092")]
	public static Pvr_UnitySDKRender Instance
	{
		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x10D2A80", Offset = "0x10D2A80", VA = "0x10D2A80")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x10D4B00", Offset = "0x10D4B00", VA = "0x10D4B00")]
		set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public StereoRenderingPathPico StereoRenderPath
	{
		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x10D545C", Offset = "0x10D545C", VA = "0x10D545C")]
		get
		{
			return default(StereoRenderingPathPico);
		}
	}

	[Token(Token = "0x17000094")]
	public SDKStereoRendering StereoRendering
	{
		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x10D5464", Offset = "0x10D5464", VA = "0x10D5464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85968", Offset = "0xB85968")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x10D546C", Offset = "0x10D546C", VA = "0x10D546C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85978", Offset = "0xB85978")]
		private set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public float RtScaleFactor
	{
		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x10D5474", Offset = "0x10D5474", VA = "0x10D5474")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x10D547C", Offset = "0x10D547C", VA = "0x10D547C")]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public float EyeVFoV
	{
		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x10D55EC", Offset = "0x10D55EC", VA = "0x10D55EC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x10D55F4", Offset = "0x10D55F4", VA = "0x10D55F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public float EyeHFoV
	{
		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x10D5608", Offset = "0x10D5608", VA = "0x10D5608")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x10D5610", Offset = "0x10D5610", VA = "0x10D5610")]
		set
		{
		}
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x10D49F0", Offset = "0x10D49F0", VA = "0x10D49F0")]
	public Pvr_UnitySDKRender()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x10D4B6C", Offset = "0x10D4B6C", VA = "0x10D4B6C")]
	public void ConnectToAndriod()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x10D53DC", Offset = "0x10D53DC", VA = "0x10D53DC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x10D5624", Offset = "0x10D5624", VA = "0x10D5624")]
	private bool InitRenderAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x10D5744", Offset = "0x10D5744", VA = "0x10D5744")]
	private bool UpdateRenderParaFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x10D57F0", Offset = "0x10D57F0", VA = "0x10D57F0")]
	private bool CreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x10D6148", Offset = "0x10D6148", VA = "0x10D6148")]
	private void InitSinglePass()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x10D5B38", Offset = "0x10D5B38", VA = "0x10D5B38")]
	public float GetEyeVFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x10D5CA0", Offset = "0x10D5CA0", VA = "0x10D5CA0")]
	public float GetEyeHFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x10D6360", Offset = "0x10D6360", VA = "0x10D6360")]
	private void ConfigureEyeBuffer(int eyeTextureIndex, Vector2 resolution)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x10D5494", Offset = "0x10D5494", VA = "0x10D5494")]
	public bool ReCreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x10D3984", Offset = "0x10D3984", VA = "0x10D3984")]
	public void ReInit()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x10D2B40", Offset = "0x10D2B40", VA = "0x10D2B40")]
	public void IssueRenderThread()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x10D6884", Offset = "0x10D6884", VA = "0x10D6884")]
	private void AutoAdpatForPico1s()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x10D5E08", Offset = "0x10D5E08", VA = "0x10D5E08")]
	public Vector2 GetEyeBufferResolution()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x10D6ACC", Offset = "0x10D6ACC", VA = "0x10D6ACC")]
	public bool GetUsePredictedMatrix()
	{
		return default(bool);
	}
}
[Token(Token = "0x200011F")]
public class Pvr_UnitySDKSinglePass : SDKStereoRendering
{
	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera bothCamera;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] eyesOffset;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CommandBuffer commandBufferBeforeForwardOpaque;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CommandBuffer commandBufferBeforeSkybox;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommandBuffer commandBufferAfterSkybox;

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x10D9A94", Offset = "0x10D9A94", VA = "0x10D9A94", Slot = "4")]
	public override void InitEye(Camera eye)
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x10DA348", Offset = "0x10DA348", VA = "0x10DA348", Slot = "5")]
	public override void OnSDKRenderInited()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x10DA478", Offset = "0x10DA478", VA = "0x10DA478", Slot = "6")]
	public override void OnSDKPreRender()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x10DAD40", Offset = "0x10DAD40", VA = "0x10DAD40", Slot = "7")]
	public override void OnSDKPostRender()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x10DA34C", Offset = "0x10DA34C", VA = "0x10DA34C")]
	public void OnSDKRenderInited_SinglePass()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x10DADF8", Offset = "0x10DADF8", VA = "0x10DADF8")]
	private void SetAntiAliasing()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x10D9DB8", Offset = "0x10D9DB8", VA = "0x10D9DB8")]
	public void SetEyesPosition()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x10DA200", Offset = "0x10DA200", VA = "0x10DA200")]
	public void SetEyeProjection()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x10DAF00", Offset = "0x10DAF00", VA = "0x10DAF00")]
	private static Matrix4x4 GetProjection(float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x10DB184", Offset = "0x10DB184", VA = "0x10DB184")]
	public static Matrix4x4 MakeProjection(float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x10DAFD4", Offset = "0x10DAFD4", VA = "0x10DAFD4")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x10DAD48", Offset = "0x10DAD48", VA = "0x10DAD48")]
	private void SwitchKeywordAndDeviceView(bool enable)
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x10DB360", Offset = "0x10DB360", VA = "0x10DB360")]
	public static Matrix4x4[] GetStereoWorldToCameraMat()
	{
		return null;
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x10DA47C", Offset = "0x10DA47C", VA = "0x10DA47C")]
	public void SinglePassPreRender()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x10DB648", Offset = "0x10DB648", VA = "0x10DB648")]
	private void SetCommandBuffers()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x10DB59C", Offset = "0x10DB59C", VA = "0x10DB59C")]
	private void SetRenderTextureWithDepth()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x10D67DC", Offset = "0x10D67DC", VA = "0x10D67DC")]
	public Pvr_UnitySDKSinglePass()
	{
	}
}
[Token(Token = "0x2000120")]
public abstract class SDKStereoRendering
{
	[Token(Token = "0x6000AD8")]
	public abstract void InitEye(Camera eye);

	[Token(Token = "0x6000AD9")]
	public abstract void OnSDKRenderInited();

	[Token(Token = "0x6000ADA")]
	public abstract void OnSDKPreRender();

	[Token(Token = "0x6000ADB")]
	public abstract void OnSDKPostRender();

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x10DBCD8", Offset = "0x10DBCD8", VA = "0x10DBCD8")]
	protected SDKStereoRendering()
	{
	}
}
[Token(Token = "0x2000121")]
public class HighlightAtGaze : MonoBehaviour
{
	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color HighlightColor;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float AnimationTime;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer myRenderer;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color originalColor;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color targetColor;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x132196C", Offset = "0x132196C", VA = "0x132196C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x13219F0", Offset = "0x13219F0", VA = "0x13219F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x1321BD4", Offset = "0x1321BD4", VA = "0x1321BD4")]
	public HighlightAtGaze()
	{
	}
}
[Token(Token = "0x2000122")]
public class RayVisualizer : MonoBehaviour
{
	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer _line;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x10DDE10", Offset = "0x10DDE10", VA = "0x10DDE10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x10DDEA8", Offset = "0x10DDEA8", VA = "0x10DDEA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x10DE048", Offset = "0x10DE048", VA = "0x10DE048")]
	public RayVisualizer()
	{
	}
}
[Token(Token = "0x2000123")]
public class GetSeeThroughImage : MonoBehaviour
{
	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage viewImage_left;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage viewImage_right;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int width;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int height;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture cameraTex_left;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture cameraTex_right;

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x131F5B0", Offset = "0x131F5B0", VA = "0x131F5B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x131F6C8", Offset = "0x131F6C8", VA = "0x131F6C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x131F5B4", Offset = "0x131F5B4", VA = "0x131F5B4")]
	private void CreateTexture()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x131F71C", Offset = "0x131F71C", VA = "0x131F71C")]
	private void DrawTexture()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x131F754", Offset = "0x131F754", VA = "0x131F754")]
	public GetSeeThroughImage()
	{
	}
}
[Token(Token = "0x2000124")]
public class OverlayExternalSurfaceDemo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000611")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72784", Offset = "0xB72784")]
	private sealed class <>c
	{
		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Pvr_UnitySDKEyeOverlay.ExternalAndroidSurfaceObjectCreated <>9__7_0;

		[Token(Token = "0x6002B14")]
		[Address(RVA = "0x1619CA8", Offset = "0x1619CA8", VA = "0x1619CA8")]
		public <>c()
		{
		}

		[Token(Token = "0x6002B15")]
		[Address(RVA = "0x1619CB0", Offset = "0x1619CB0", VA = "0x1619CB0")]
		internal void <StartPlay>b__7_0()
		{
		}
	}

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string movieName;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Pvr_UnitySDKEyeOverlay.OverlayType overlayType;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Pvr_UnitySDKEyeOverlay.OverlayShape overlayShape;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKEyeOverlay overlay;

	[Token(Token = "0x40009FC")]
	private const string TAG = "[ExternalSurface]>>>>>>";

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x1619898", Offset = "0x1619898", VA = "0x1619898")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x16199C4", Offset = "0x16199C4", VA = "0x16199C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x1619A48", Offset = "0x1619A48", VA = "0x1619A48")]
	private void StartPlay(string moviePath, string licenceUrl)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x1619C3C", Offset = "0x1619C3C", VA = "0x1619C3C")]
	public OverlayExternalSurfaceDemo()
	{
	}
}
[Token(Token = "0x2000125")]
public class MoveCylinder : MonoBehaviour
{
	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startingRotation;

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x1339434", Offset = "0x1339434", VA = "0x1339434")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x1339490", Offset = "0x1339490", VA = "0x1339490")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x13394E8", Offset = "0x13394E8", VA = "0x13394E8")]
	public MoveCylinder()
	{
	}
}
[Token(Token = "0x2000126")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB70F08", Offset = "0xB70F08")]
public class MoveSphere : MonoBehaviour
{
	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x13394F0", Offset = "0x13394F0", VA = "0x13394F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x1339674", Offset = "0x1339674", VA = "0x1339674")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x13395D4", Offset = "0x13395D4", VA = "0x13395D4")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x1339678", Offset = "0x1339678", VA = "0x1339678")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x1339780", Offset = "0x1339780", VA = "0x1339780")]
	public void TeleportRandomly()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x1339890", Offset = "0x1339890", VA = "0x1339890")]
	public MoveSphere()
	{
	}
}
[Token(Token = "0x2000127")]
public class Resetbutton : MonoBehaviour
{
	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x10DF0E4", Offset = "0x10DF0E4", VA = "0x10DF0E4")]
	public void DemoResetTracking()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x10DF178", Offset = "0x10DF178", VA = "0x10DF178")]
	public Resetbutton()
	{
	}
}
[Token(Token = "0x2000128")]
public class Pvr_UnitySDKHeadTrack : MonoBehaviour
{
	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76980", Offset = "0xB76980")]
	public bool trackRotation;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB769B8", Offset = "0xB769B8")]
	public bool trackPosition;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool updated;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool dataClock;

	[Token(Token = "0x17000098")]
	public Ray Gaze
	{
		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x1996BA8", Offset = "0x1996BA8", VA = "0x1996BA8")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x19970A8", Offset = "0x19970A8", VA = "0x19970A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x1996C44", Offset = "0x1996C44", VA = "0x1996C44")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x19970B0", Offset = "0x19970B0", VA = "0x19970B0")]
	public Pvr_UnitySDKHeadTrack()
	{
	}
}
[Token(Token = "0x2000129")]
public class Pvr_UnitySDKPose
{
	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Matrix4x4 flipZ;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB769F0", Offset = "0xB769F0")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB76A00", Offset = "0xB76A00")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB76A10", Offset = "0xB76A10")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x17000099")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x10D4278", Offset = "0x10D4278", VA = "0x10D4278")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x1700009A")]
	public Vector3 Position
	{
		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x10D43E4", Offset = "0x10D43E4", VA = "0x10D43E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85988", Offset = "0xB85988")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x10D43F0", Offset = "0x10D43F0", VA = "0x10D43F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85998", Offset = "0xB85998")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public Quaternion Orientation
	{
		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x10D43FC", Offset = "0x10D43FC", VA = "0x10D43FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB859A8", Offset = "0xB859A8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x10D4408", Offset = "0x10D4408", VA = "0x10D4408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB859B8", Offset = "0xB859B8")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x10D4414", Offset = "0x10D4414", VA = "0x10D4414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB859C8", Offset = "0xB859C8")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x10D4438", Offset = "0x10D4438", VA = "0x10D4438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB859D8", Offset = "0xB859D8")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x10D4454", Offset = "0x10D4454", VA = "0x10D4454")]
	public Pvr_UnitySDKPose(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x10D461C", Offset = "0x10D461C", VA = "0x10D461C")]
	public Pvr_UnitySDKPose(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x10D469C", Offset = "0x10D469C", VA = "0x10D469C")]
	public void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x10D44B0", Offset = "0x10D44B0", VA = "0x10D44B0")]
	protected void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x10D47DC", Offset = "0x10D47DC", VA = "0x10D47DC")]
	private Quaternion NormalizeQuaternion(ref Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x200012A")]
public class Pvr_UnitySDKSensor
{
	[Token(Token = "0x2000612")]
	public delegate void Enter3DofModel();

	[Token(Token = "0x2000613")]
	public delegate void Exit3DofModel();

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKSensor instance;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool SensorStart;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool SensorInit;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Quaternion UnityQuaternion;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 UnityPosition;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Sensorindex sensorIndex;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool dofClock;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action EyeFovChanged;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Pvr_UnitySDKPose HeadPose;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float vfov;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float hfov;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float w;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float x;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float y;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float z;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float px;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float py;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float pz;

	[Token(Token = "0x1700009D")]
	public static Pvr_UnitySDKSensor Instance
	{
		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x10D313C", Offset = "0x10D313C", VA = "0x10D313C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x10D6B94", Offset = "0x10D6B94", VA = "0x10D6B94")]
		set
		{
		}
	}

	[Token(Token = "0x14000025")]
	public static event Enter3DofModel Enter3DofModelEvent
	{
		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x10D6D34", Offset = "0x10D6D34", VA = "0x10D6D34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB859E8", Offset = "0xB859E8")]
		add
		{
		}
		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x10D6E24", Offset = "0x10D6E24", VA = "0x10D6E24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB859F8", Offset = "0xB859F8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public static event Exit3DofModel Exit3DofModelEvent
	{
		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x10D6F14", Offset = "0x10D6F14", VA = "0x10D6F14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85A08", Offset = "0xB85A08")]
		add
		{
		}
		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x10D7004", Offset = "0x10D7004", VA = "0x10D7004")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85A18", Offset = "0xB85A18")]
		remove
		{
		}
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x10D6AD8", Offset = "0x10D6AD8", VA = "0x10D6AD8")]
	public Pvr_UnitySDKSensor()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x10D6C00", Offset = "0x10D6C00", VA = "0x10D6C00")]
	public void Init()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x10D7488", Offset = "0x10D7488", VA = "0x10D7488")]
	public void SensorUpdate()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x10D7344", Offset = "0x10D7344", VA = "0x10D7344")]
	public bool InitUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x10D70F4", Offset = "0x10D70F4", VA = "0x10D70F4")]
	public bool InitUnitySDK6DofSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x10D31FC", Offset = "0x10D31FC", VA = "0x10D31FC")]
	public bool StartUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x10D854C", Offset = "0x10D854C", VA = "0x10D854C")]
	public bool StopUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x10D3340", Offset = "0x10D3340", VA = "0x10D3340")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x10D3518", Offset = "0x10D3518", VA = "0x10D3518")]
	public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x10D74D4", Offset = "0x10D74D4", VA = "0x10D74D4")]
	public bool GetUnitySDKSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x10D8C74", Offset = "0x10D8C74", VA = "0x10D8C74")]
	public bool GetUnitySDKPSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x10D8AC8", Offset = "0x10D8AC8", VA = "0x10D8AC8")]
	private void RefreshHeadData(float x, float y, float z, float w, float px, float py, float pz)
	{
	}
}
[Token(Token = "0x200012B")]
public class CLoadingAsset : ScriptableObject
{
	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SplashScreenType;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture2D> splashImage;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D Inside_background;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseSplashText;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DefaultText;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ChineseText;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string EnglishText;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string JapaneseText;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string KoreanText;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string FontSize;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color FontColor;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string TextHeight;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool UseCarousel;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int SplashTextAlignment;

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xD372F0", Offset = "0xD372F0", VA = "0xD372F0")]
	public CLoadingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x200012C")]
public class Pvr_UnitySDKConfigProfile
{
	[Token(Token = "0x2000614")]
	public struct Lenses
	{
		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float separation;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float offset;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int alignment;

		[Token(Token = "0x4002551")]
		public const int AlignTop = -1;

		[Token(Token = "0x4002552")]
		public const int AlignCenter = 0;

		[Token(Token = "0x4002553")]
		public const int AlignBottom = 1;
	}

	[Token(Token = "0x2000615")]
	public struct MaxFOV
	{
		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upper;

		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float lower;

		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float inner;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float outer;
	}

	[Token(Token = "0x2000616")]
	public struct Distortion
	{
		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k1;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float k2;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float k3;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float k4;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float k5;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float k6;

		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0xC501B4", Offset = "0xC501B4", VA = "0xC501B4")]
		public float distort(float r)
		{
			return default(float);
		}

		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0xC501BC", Offset = "0xC501BC", VA = "0xC501BC")]
		public float distort(float r, float dist)
		{
			return default(float);
		}

		[Token(Token = "0x6002B20")]
		[Address(RVA = "0xC501C4", Offset = "0xC501C4", VA = "0xC501C4")]
		public float diatortInv(float radious)
		{
			return default(float);
		}
	}

	[Token(Token = "0x2000617")]
	public struct Device
	{
		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lenses devLenses;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaxFOV devMaxFov;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Distortion devDistortion;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Distortion devDistortionInv;
	}

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Device SimulateDevice;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Device device;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Pvr_UnitySDKConfigProfile Default;

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x198EF98", Offset = "0x198EF98", VA = "0x198EF98")]
	public Pvr_UnitySDKConfigProfile Clone()
	{
		return null;
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x198F034", Offset = "0x198F034", VA = "0x198F034")]
	public static Pvr_UnitySDKConfigProfile GetPicoProfile()
	{
		return null;
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x198F0E0", Offset = "0x198F0E0", VA = "0x198F0E0")]
	public float[] GetLeftEyeVisibleTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x198F430", Offset = "0x198F430", VA = "0x198F430")]
	public float[] GetLeftEyeNoLensTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x198F660", Offset = "0x198F660", VA = "0x198F660")]
	public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x198F02C", Offset = "0x198F02C", VA = "0x198F02C")]
	public Pvr_UnitySDKConfigProfile()
	{
	}
}
[Token(Token = "0x200012D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB70F6C", Offset = "0xB70F6C")]
public class Pvr_UnitySDKFPS : MonoBehaviour
{
	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float fps;

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x1996958", Offset = "0x1996958", VA = "0x1996958")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x1996964", Offset = "0x1996964", VA = "0x1996964")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x1996A30", Offset = "0x1996A30", VA = "0x1996A30")]
	public string ShowFps()
	{
		return null;
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x1996B98", Offset = "0x1996B98", VA = "0x1996B98")]
	public Pvr_UnitySDKFPS()
	{
	}
}
[Token(Token = "0x200012E")]
public class Pvr_GazeFuse : MonoBehaviour
{
	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gazeGameObject;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x1778EBC", Offset = "0x1778EBC", VA = "0x1778EBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x1778F14", Offset = "0x1778F14", VA = "0x1778F14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x1779048", Offset = "0x1779048", VA = "0x1779048")]
	private void FuseAmountChanged(float fuseAmount)
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x17790F0", Offset = "0x17790F0", VA = "0x17790F0")]
	public Pvr_GazeFuse()
	{
	}
}
[Token(Token = "0x200012F")]
public class Pvr_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x2000618")]
	public enum Mode
	{
		[Token(Token = "0x4002563")]
		Click,
		[Token(Token = "0x4002564")]
		Gaze
	}

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mode mode;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB76A40", Offset = "0xB76A40")]
	public string ClickInputName;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB76A78", Offset = "0xB76A78")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB76AB0", Offset = "0xB76AB0")]
	private static float <gazeFraction>k__BackingField;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB76AC0", Offset = "0xB76AC0")]
	private static GameObject <gazeGameObject>k__BackingField;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x1700009E")]
	public static float gazeFraction
	{
		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x17790F8", Offset = "0x17790F8", VA = "0x17790F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85A28", Offset = "0xB85A28")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x1779148", Offset = "0x1779148", VA = "0x1779148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85A38", Offset = "0xB85A38")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public static GameObject gazeGameObject
	{
		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x17791A4", Offset = "0x17791A4", VA = "0x17791A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85A48", Offset = "0xB85A48")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x17791F4", Offset = "0x17791F4", VA = "0x17791F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85A58", Offset = "0xB85A58")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x1779248", Offset = "0x1779248", VA = "0x1779248", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x177926C", Offset = "0x177926C", VA = "0x177926C")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x1779434", Offset = "0x1779434", VA = "0x1779434")]
	private void HandleSelection()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x17798E4", Offset = "0x17798E4", VA = "0x17798E4")]
	public Pvr_GazeInputModule()
	{
	}
}
[Token(Token = "0x2000130")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB70FD0", Offset = "0xB70FD0")]
public class Pvr_GazeInputModuleCrosshair : MonoBehaviour
{
	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76AD0", Offset = "0xB76AD0")]
	public Transform Crosshair;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Pvr_GazeInputModule gazeInputModule;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 CrosshairOriginalScale;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x1779944", Offset = "0x1779944", VA = "0x1779944")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x177999C", Offset = "0x177999C", VA = "0x177999C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x1779A04", Offset = "0x1779A04", VA = "0x1779A04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x1779B1C", Offset = "0x1779B1C", VA = "0x1779B1C")]
	private void SetCrossHairAtDistance(float dist)
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x1779C1C", Offset = "0x1779C1C", VA = "0x1779C1C")]
	public Pvr_GazeInputModuleCrosshair()
	{
	}
}
[Token(Token = "0x2000131")]
public enum RenderEventType
{
	[Token(Token = "0x4000A41")]
	InitRenderThread = 1024,
	[Token(Token = "0x4000A42")]
	Pause,
	[Token(Token = "0x4000A43")]
	Resume,
	[Token(Token = "0x4000A44")]
	LeftEyeEndFrame,
	[Token(Token = "0x4000A45")]
	RightEyeEndFrame,
	[Token(Token = "0x4000A46")]
	TimeWarp,
	[Token(Token = "0x4000A47")]
	ResetVrModeParms,
	[Token(Token = "0x4000A48")]
	ShutdownRenderThread,
	[Token(Token = "0x4000A49")]
	BeginEye,
	[Token(Token = "0x4000A4A")]
	EndEye,
	[Token(Token = "0x4000A4B")]
	BoundaryRenderLeft,
	[Token(Token = "0x4000A4C")]
	BoundaryRenderRight,
	[Token(Token = "0x4000A4D")]
	BothEyeEndFrame,
	[Token(Token = "0x4000A4E")]
	CameraFrameLeft,
	[Token(Token = "0x4000A4F")]
	CameraFrameRight
}
[Token(Token = "0x2000132")]
public static class Pvr_UnitySDKPluginEvent
{
	[Token(Token = "0x2000619")]
	private delegate void RenderEventDelegate(int eventId);

	[Token(Token = "0x4000A50")]
	private const uint IS_DATA_FLAG = 2147483648u;

	[Token(Token = "0x4000A51")]
	private const uint DATA_POS_MASK = 1073741824u;

	[Token(Token = "0x4000A52")]
	private const int DATA_POS_SHIFT = 30;

	[Token(Token = "0x4000A53")]
	private const uint EVENT_TYPE_MASK = 1056899072u;

	[Token(Token = "0x4000A54")]
	private const int EVENT_TYPE_SHIFT = 17;

	[Token(Token = "0x4000A55")]
	private const uint PAYLOAD_MASK = 65535u;

	[Token(Token = "0x4000A56")]
	private const int PAYLOAD_SHIFT = 16;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderEventDelegate SetSinglePassBeforeForwardOpaqueHandle;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IntPtr SetSinglePassBeforeForwardOpaquePtr;

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x10D3DDC", Offset = "0x10D3DDC", VA = "0x10D3DDC")]
	public static void Issue(RenderEventType eventType)
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x10D3E08", Offset = "0x10D3E08", VA = "0x10D3E08")]
	private static int EncodeType(int eventType)
	{
		return default(int);
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x10D3E10", Offset = "0x10D3E10", VA = "0x10D3E10")]
	private static int EncodeData(int eventId, int eventData, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x10D3E30", Offset = "0x10D3E30", VA = "0x10D3E30")]
	private static int DecodeData(int eventData)
	{
		return default(int);
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x10D3DD4", Offset = "0x10D3DD4", VA = "0x10D3DD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB85A68", Offset = "0xB85A68")]
	private static void SetSinglePassBeforeForwardOpaque(int eventId)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x10D3E44", Offset = "0x10D3E44", VA = "0x10D3E44")]
	public static void SetSinglePassBeforeForwardOpaque(CommandBuffer cmd)
	{
	}
}
[Token(Token = "0x2000133")]
public class Pvr_UnitySDKSightInputModule : BaseInputModule
{
	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76B08", Offset = "0xB76B08")]
	public GameObject cursor;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int trigger;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float clickTime;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Vector2 hotspot;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PointerEventData pointerData;

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x10D8E5C", Offset = "0x10D8E5C", VA = "0x10D8E5C", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x10D8EF0", Offset = "0x10D8EF0", VA = "0x10D8EF0", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x10D91E4", Offset = "0x10D91E4", VA = "0x10D91E4", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x10D926C", Offset = "0x10D926C", VA = "0x10D926C", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x10D92A8", Offset = "0x10D92A8", VA = "0x10D92A8")]
	private void CastRayFromGaze()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x10D93F0", Offset = "0x10D93F0", VA = "0x10D93F0")]
	private void UpdateCurrentObject()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x10D9594", Offset = "0x10D9594", VA = "0x10D9594")]
	private void PlaceCursor()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x10D8FF0", Offset = "0x10D8FF0", VA = "0x10D8FF0")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x10D97C0", Offset = "0x10D97C0", VA = "0x10D97C0")]
	private void HandleTrigger()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x10D9A40", Offset = "0x10D9A40", VA = "0x10D9A40")]
	public Pvr_UnitySDKSightInputModule()
	{
	}
}
[Token(Token = "0x2000134")]
public class Pvr_ObjImporter
{
	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ObjImporter _instance;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<int> triangles;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> vertices;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector2> uv;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> normals;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PvrVector3Int> faceData;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> intArray;

	[Token(Token = "0x4000A65")]
	private const int MIN_POW_10 = -16;

	[Token(Token = "0x4000A66")]
	private const int MAX_POW_10 = 16;

	[Token(Token = "0x4000A67")]
	private const int NUM_POWS_10 = 33;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float[] pow10;

	[Token(Token = "0x170000A0")]
	public static Pvr_ObjImporter Instance
	{
		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x177BF58", Offset = "0x177BF58", VA = "0x177BF58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x177C004", Offset = "0x177C004", VA = "0x177C004")]
	public Mesh ImportFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x177C440", Offset = "0x177C440", VA = "0x177C440")]
	private void LoadMeshData(string fileName)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x177CB1C", Offset = "0x177CB1C", VA = "0x177CB1C")]
	private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
	{
		return default(float);
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x177CC98", Offset = "0x177CC98", VA = "0x177CC98")]
	private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
	{
		return default(int);
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x177D0C4", Offset = "0x177D0C4", VA = "0x177D0C4")]
	private static float[] GenerateLookupTable()
	{
		return null;
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x177CDDC", Offset = "0x177CDDC", VA = "0x177CDDC")]
	private float ParseFloat(StringBuilder value)
	{
		return default(float);
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x177D034", Offset = "0x177D034", VA = "0x177D034")]
	private int IntParseFast(StringBuilder value)
	{
		return default(int);
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x177BFFC", Offset = "0x177BFFC", VA = "0x177BFFC")]
	public Pvr_ObjImporter()
	{
	}
}
[Token(Token = "0x2000135")]
public sealed class PvrVector3Int
{
	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB76B60", Offset = "0xB76B60")]
	private int <x>k__BackingField;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB76B70", Offset = "0xB76B70")]
	private int <y>k__BackingField;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB76B80", Offset = "0xB76B80")]
	private int <z>k__BackingField;

	[Token(Token = "0x170000A1")]
	public int x
	{
		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xFFB8D0", Offset = "0xFFB8D0", VA = "0xFFB8D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85ACC", Offset = "0xB85ACC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xFFB8D8", Offset = "0xFFB8D8", VA = "0xFFB8D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85ADC", Offset = "0xB85ADC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public int y
	{
		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xFFB8E0", Offset = "0xFFB8E0", VA = "0xFFB8E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85AEC", Offset = "0xB85AEC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xFFB8E8", Offset = "0xFFB8E8", VA = "0xFFB8E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85AFC", Offset = "0xB85AFC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public int z
	{
		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xFFB8F0", Offset = "0xFFB8F0", VA = "0xFFB8F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85B0C", Offset = "0xB85B0C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xFFB8F8", Offset = "0xFFB8F8", VA = "0xFFB8F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85B1C", Offset = "0xB85B1C")]
		set
		{
		}
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xFFB900", Offset = "0xFFB900", VA = "0xFFB900")]
	public PvrVector3Int()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xFFB908", Offset = "0xFFB908", VA = "0xFFB908")]
	public PvrVector3Int(int x, int y, int z)
	{
	}
}
[Token(Token = "0x2000136")]
public class Pvr_EnumFlags : PropertyAttribute
{
	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x1778EB4", Offset = "0x1778EB4", VA = "0x1778EB4")]
	public Pvr_EnumFlags()
	{
	}
}
[Token(Token = "0x2000137")]
public enum ConfirmBtn
{
	[Token(Token = "0x4000A6D")]
	App = 1,
	[Token(Token = "0x4000A6E")]
	TouchPad = 2,
	[Token(Token = "0x4000A6F")]
	Trigger = 4
}
[Token(Token = "0x2000138")]
public class Pvr_InputModule : PointerInputModule
{
	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UIPointer> pointers;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Pvr_EnumFlags]
	public ConfirmBtn confirmBtn;

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x1779C78", Offset = "0x1779C78", VA = "0x1779C78", Slot = "30")]
	public virtual void Initialise()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x1779CF4", Offset = "0x1779CF4", VA = "0x1779CF4")]
	public static void AddPoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x1779DC4", Offset = "0x1779DC4", VA = "0x1779DC4")]
	public static void RemovePoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x1779E94", Offset = "0x1779E94", VA = "0x1779E94", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x177A210", Offset = "0x177A210", VA = "0x177A210", Slot = "31")]
	protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
	{
		return null;
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x177A364", Offset = "0x177A364", VA = "0x177A364", Slot = "32")]
	protected virtual bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x177A458", Offset = "0x177A458", VA = "0x177A458", Slot = "33")]
	protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x177A51C", Offset = "0x177A51C", VA = "0x177A51C", Slot = "34")]
	protected virtual bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x177A734", Offset = "0x177A734", VA = "0x177A734", Slot = "35")]
	protected virtual bool ValidElement(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x177A7E8", Offset = "0x177A7E8", VA = "0x177A7E8", Slot = "36")]
	protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x177A888", Offset = "0x177A888", VA = "0x177A888", Slot = "37")]
	protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x177AFA8", Offset = "0x177AFA8", VA = "0x177AFA8", Slot = "38")]
	protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x177AFF4", Offset = "0x177AFF4", VA = "0x177AFF4", Slot = "39")]
	protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x177B098", Offset = "0x177B098", VA = "0x177B098", Slot = "40")]
	protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x177B158", Offset = "0x177B158", VA = "0x177B158", Slot = "41")]
	protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x177B440", Offset = "0x177B440", VA = "0x177B440", Slot = "42")]
	protected virtual bool AttemptClick(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x177B704", Offset = "0x177B704", VA = "0x177B704", Slot = "43")]
	protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x177BED4", Offset = "0x177BED4", VA = "0x177BED4")]
	public Pvr_InputModule()
	{
	}
}
[Token(Token = "0x2000139")]
public class Pvr_UICanvas : MonoBehaviour
{
	[Token(Token = "0x200061A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72794", Offset = "0xB72794")]
	private sealed class <CreateDraggablePanel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 canvasSize;

		[Token(Token = "0x170004AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B28")]
			[Address(RVA = "0x177FAF0", Offset = "0x177FAF0", VA = "0x177FAF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B2A")]
			[Address(RVA = "0x177FB5C", Offset = "0x177FB5C", VA = "0x177FB5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0x177F44C", Offset = "0x177F44C", VA = "0x177F44C")]
		[DebuggerHidden]
		public <CreateDraggablePanel>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0x177F764", Offset = "0x177F764", VA = "0x177F764", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0x177F768", Offset = "0x177F768", VA = "0x177F768", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B29")]
		[Address(RVA = "0x177FAF8", Offset = "0x177FAF8", VA = "0x177FAF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clickOnPointerCollision;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float autoActivateWithinDistance;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected BoxCollider canvasBoxCollider;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Rigidbody canvasRigidBody;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Coroutine draggablePanelCreation;

	[Token(Token = "0x4000A77")]
	protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x177EFD0", Offset = "0x177EFD0", VA = "0x177EFD0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x177EFDC", Offset = "0x177EFDC", VA = "0x177EFDC", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x177EFE8", Offset = "0x177EFE8", VA = "0x177EFE8", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x177EFF4", Offset = "0x177EFF4", VA = "0x177EFF4", Slot = "7")]
	protected virtual void SetupCanvas()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x177F3C4", Offset = "0x177F3C4", VA = "0x177F3C4", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB85B2C", Offset = "0xB85B2C")]
	protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
	{
		return null;
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x177F478", Offset = "0x177F478", VA = "0x177F478", Slot = "9")]
	protected virtual void RemoveCanvas()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x177F75C", Offset = "0x177F75C", VA = "0x177F75C")]
	public Pvr_UICanvas()
	{
	}
}
[Token(Token = "0x200013A")]
public struct UIDraggableItemEventArgs
{
	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;
}
[Token(Token = "0x200013B")]
public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
[Token(Token = "0x200013C")]
public class Pvr_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool restrictToDropZone;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool restrictToOriginalCanvas;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveOffset;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject validDropZone;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected RectTransform dragTransform;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 startPosition;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Quaternion startRotation;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject startDropZone;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform startParent;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Canvas startCanvas;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected CanvasGroup canvasGroup;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Pvr_InputModule currentInputmodule;

	[Token(Token = "0x14000027")]
	public event UIDraggableItemEventHandler DraggableItemDropped
	{
		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x177FB64", Offset = "0x177FB64", VA = "0x177FB64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85B90", Offset = "0xB85B90")]
		add
		{
		}
		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x177FC08", Offset = "0x177FC08", VA = "0x177FC08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85BA0", Offset = "0xB85BA0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public event UIDraggableItemEventHandler DraggableItemReset
	{
		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x177FCAC", Offset = "0x177FCAC", VA = "0x177FCAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85BB0", Offset = "0xB85BB0")]
		add
		{
		}
		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x177FD50", Offset = "0x177FD50", VA = "0x177FD50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85BC0", Offset = "0xB85BC0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x177FDF4", Offset = "0x177FDF4", VA = "0x177FDF4", Slot = "7")]
	public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x177FE18", Offset = "0x177FE18", VA = "0x177FE18", Slot = "8")]
	public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x177FE3C", Offset = "0x177FE3C", VA = "0x177FE3C", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x1780058", Offset = "0x1780058", VA = "0x1780058", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x1780064", Offset = "0x1780064", VA = "0x1780064", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x17804B0", Offset = "0x17804B0", VA = "0x17804B0", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x17805A4", Offset = "0x17805A4", VA = "0x17805A4", Slot = "10")]
	protected virtual Pvr_UIPointer GetPointer()
	{
		return null;
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x1780730", Offset = "0x1780730", VA = "0x1780730", Slot = "11")]
	protected virtual void SetDragPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x17809F8", Offset = "0x17809F8", VA = "0x17809F8", Slot = "12")]
	protected virtual void ResetElement()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x1780AA8", Offset = "0x1780AA8", VA = "0x1780AA8", Slot = "13")]
	protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
	{
		return default(UIDraggableItemEventArgs);
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x1780AB0", Offset = "0x1780AB0", VA = "0x1780AB0")]
	public Pvr_UIDraggableItem()
	{
	}
}
[Token(Token = "0x200013D")]
public class Pvr_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Pvr_UIDraggableItem droppableItem;

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x1780AC4", Offset = "0x1780AC4", VA = "0x1780AC4", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x1780BB8", Offset = "0x1780BB8", VA = "0x1780BB8", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x1780C44", Offset = "0x1780C44", VA = "0x1780C44")]
	public Pvr_UIDropZone()
	{
	}
}
[Token(Token = "0x200013E")]
public class Pvr_UIGraphicRaycaster : GraphicRaycaster
{
	[Serializable]
	[Token(Token = "0x200061B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB727A4", Offset = "0xB727A4")]
	private sealed class <>c
	{
		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastResult> <>9__7_0;

		[Token(Token = "0x6002B2C")]
		[Address(RVA = "0x1781B80", Offset = "0x1781B80", VA = "0x1781B80")]
		public <>c()
		{
		}

		[Token(Token = "0x6002B2D")]
		[Address(RVA = "0x1781B88", Offset = "0x1781B88", VA = "0x1781B88")]
		internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Canvas currentCanvas;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector2 lastKnownPosition;

	[Token(Token = "0x4000A8A")]
	protected const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RaycastResult> s_RaycastResults;

	[Token(Token = "0x170000A4")]
	protected virtual Canvas canvas
	{
		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x1781998", Offset = "0x1781998", VA = "0x1781998", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x1780C4C", Offset = "0x1780C4C", VA = "0x1780C4C", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x1780E00", Offset = "0x1780E00", VA = "0x1780E00", Slot = "22")]
	protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x178108C", Offset = "0x178108C", VA = "0x178108C", Slot = "23")]
	protected virtual float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x17813AC", Offset = "0x17813AC", VA = "0x17813AC", Slot = "24")]
	protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x1781A40", Offset = "0x1781A40", VA = "0x1781A40")]
	public Pvr_UIGraphicRaycaster()
	{
	}
}
[Token(Token = "0x200013F")]
public struct UIPointerEventArgs
{
	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject currentTarget;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject previousTarget;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RaycastResult raycastResult;
}
[Token(Token = "0x2000140")]
public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
[Token(Token = "0x2000141")]
public class Pvr_UIPointer : MonoBehaviour
{
	[Token(Token = "0x200061C")]
	public enum ClickMethods
	{
		[Token(Token = "0x400256C")]
		ClickOnButtonUp,
		[Token(Token = "0x400256D")]
		ClickOnButtonDown
	}

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClickMethods clickMethod;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool collisionClick;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[HideInInspector]
	public bool pressToDrag;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject autoActivatingCanvas;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float hoverDurationTimer;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool canClickOnHover;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pointerOriginTransform;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool pointerClicked;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool beamEnabledState;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	protected bool lastPointerPressState;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	protected bool lastPointerClickState;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected GameObject currentTarget;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected EventSystem cachedEventSystem;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Pvr_InputModule cachedVRInputModule;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform originalPointerOriginTransform;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TouchBtnValue;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool AppBtnValue;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool TriggerBtnValue;

	[Token(Token = "0x14000029")]
	public event UIPointerEventHandler UIPointerElementEnter
	{
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x1781B98", Offset = "0x1781B98", VA = "0x1781B98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85BD0", Offset = "0xB85BD0")]
		add
		{
		}
		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x1781C3C", Offset = "0x1781C3C", VA = "0x1781C3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85BE0", Offset = "0xB85BE0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public event UIPointerEventHandler UIPointerElementExit
	{
		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x1781CE0", Offset = "0x1781CE0", VA = "0x1781CE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85BF0", Offset = "0xB85BF0")]
		add
		{
		}
		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x1781D84", Offset = "0x1781D84", VA = "0x1781D84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85C00", Offset = "0xB85C00")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002B")]
	public event UIPointerEventHandler UIPointerElementClick
	{
		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x1781E28", Offset = "0x1781E28", VA = "0x1781E28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85C10", Offset = "0xB85C10")]
		add
		{
		}
		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x1781ECC", Offset = "0x1781ECC", VA = "0x1781ECC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85C20", Offset = "0xB85C20")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public event UIPointerEventHandler UIPointerElementDragStart
	{
		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x1781F70", Offset = "0x1781F70", VA = "0x1781F70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85C30", Offset = "0xB85C30")]
		add
		{
		}
		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x1782014", Offset = "0x1782014", VA = "0x1782014")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85C40", Offset = "0xB85C40")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002D")]
	public event UIPointerEventHandler UIPointerElementDragEnd
	{
		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x17820B8", Offset = "0x17820B8", VA = "0x17820B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85C50", Offset = "0xB85C50")]
		add
		{
		}
		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x178215C", Offset = "0x178215C", VA = "0x178215C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85C60", Offset = "0xB85C60")]
		remove
		{
		}
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x1782200", Offset = "0x1782200", VA = "0x1782200", Slot = "4")]
	public virtual bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x1782208", Offset = "0x1782208", VA = "0x1782208", Slot = "5")]
	public virtual bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x17822E8", Offset = "0x17822E8", VA = "0x17822E8", Slot = "6")]
	public virtual Vector3 GetOriginPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x178237C", Offset = "0x178237C", VA = "0x178237C", Slot = "7")]
	public virtual Vector3 GetOriginForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x1782410", Offset = "0x1782410", VA = "0x1782410", Slot = "8")]
	public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x178242C", Offset = "0x178242C", VA = "0x178242C", Slot = "9")]
	protected virtual void ResetHoverTimer()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x1782438", Offset = "0x1782438", VA = "0x1782438", Slot = "10")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x178251C", Offset = "0x178251C", VA = "0x178251C", Slot = "11")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x17825E8", Offset = "0x17825E8", VA = "0x17825E8", Slot = "12")]
	public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x17826B4", Offset = "0x17826B4", VA = "0x17826B4", Slot = "13")]
	public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x1782700", Offset = "0x1782700", VA = "0x1782700", Slot = "14")]
	public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x178274C", Offset = "0x178274C", VA = "0x178274C", Slot = "15")]
	public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs);
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x17827B0", Offset = "0x17827B0", VA = "0x17827B0", Slot = "16")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x17827BC", Offset = "0x17827BC", VA = "0x17827BC", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x17827F4", Offset = "0x17827F4", VA = "0x17827F4", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x1782858", Offset = "0x1782858", VA = "0x1782858", Slot = "19")]
	protected virtual void ConfigureEventSystem()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x17829F8", Offset = "0x17829F8", VA = "0x17829F8")]
	public Pvr_UIPointer()
	{
	}
}
[Token(Token = "0x2000142")]
[ExecuteInEditMode]
public class Pvr_UnitySDKEditor : MonoBehaviour
{
	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool vrModeEnabled;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mouseX;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mouseY;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mouseZ;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float neckModelScale;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool autoUntiltHead;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 neckOffset;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Matrix4x4 headView;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Matrix4x4 leftEyeUndistortedProj;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Matrix4x4 rightEyeUndistortedProj;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Matrix4x4 leftEyeProj;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Matrix4x4 rightEyeProj;

	[Token(Token = "0x4000AB5")]
	private const float TOUCH_TIME_LIMIT = 0.2f;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float touchStartTime;

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x198F814", Offset = "0x198F814", VA = "0x198F814")]
	public Matrix4x4 UndistortedProjection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x198F860", Offset = "0x198F860", VA = "0x198F860")]
	public Matrix4x4 Projection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x198F8AC", Offset = "0x198F8AC", VA = "0x198F8AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x198FA9C", Offset = "0x198FA9C", VA = "0x198FA9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x198F8C0", Offset = "0x198F8C0", VA = "0x198F8C0")]
	public void InitEyePara()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x198FA0C", Offset = "0x198FA0C", VA = "0x198FA0C")]
	private void InitEditorSensorPara()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x1990380", Offset = "0x1990380", VA = "0x1990380")]
	public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x1990524", Offset = "0x1990524", VA = "0x1990524")]
	public bool UpdateStatesensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x198FC3C", Offset = "0x198FC3C", VA = "0x198FC3C")]
	public void ComputeEyesFromProfile()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x19909AC", Offset = "0x19909AC", VA = "0x19909AC")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x198FB38", Offset = "0x198FB38", VA = "0x198FB38")]
	private void SimulateInput()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x19902C4", Offset = "0x19902C4", VA = "0x19902C4")]
	private void FovAdjust()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x1990A5C", Offset = "0x1990A5C", VA = "0x1990A5C")]
	private Rect RectAdjust(Rect eyeRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x199053C", Offset = "0x199053C", VA = "0x199053C")]
	private void UpdateSimulatedSensor()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x1990154", Offset = "0x1990154", VA = "0x1990154")]
	private void InitForEye(ref Material mat, ref Material mat1)
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x19909C0", Offset = "0x19909C0", VA = "0x19909C0")]
	private void EnableVEmodel()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x1990BAC", Offset = "0x1990BAC", VA = "0x1990BAC")]
	public Pvr_UnitySDKEditor()
	{
	}
}
[Token(Token = "0x2000143")]
public class Pvr_VolumePowerBrightness : MonoBehaviour
{
	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool VolEnable;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool BattEnable;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text showResult;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text setVolumnum;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text setBrightnum;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MusicPath;

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x10DBD5C", Offset = "0x10DBD5C", VA = "0x10DBD5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x10DBE2C", Offset = "0x10DBE2C", VA = "0x10DBE2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x10DBE80", Offset = "0x10DBE80", VA = "0x10DBE80")]
	public void GetMaxVolumeNumber()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x10DBF24", Offset = "0x10DBF24", VA = "0x10DBF24")]
	public void GetCurrentVolumeNumber()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x10DBFC8", Offset = "0x10DBFC8", VA = "0x10DBFC8")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x10DC04C", Offset = "0x10DC04C", VA = "0x10DC04C")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x10DC0D0", Offset = "0x10DC0D0", VA = "0x10DC0D0")]
	public void SetVolumeNum()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x10DC1EC", Offset = "0x10DC1EC", VA = "0x10DC1EC")]
	public void SetBrightness()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x10DC308", Offset = "0x10DC308", VA = "0x10DC308")]
	public void GetCurrentBrightness()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x10DC3AC", Offset = "0x10DC3AC", VA = "0x10DC3AC")]
	public bool setAudio(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x10DC440", Offset = "0x10DC440", VA = "0x10DC440")]
	public bool setBattery(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x10DBDC4", Offset = "0x10DBDC4", VA = "0x10DBDC4")]
	private bool InitBatteryVolClass()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x10DBDCC", Offset = "0x10DBDCC", VA = "0x10DBDCC")]
	private bool StartBatteryReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x10DBE78", Offset = "0x10DBE78", VA = "0x10DBE78")]
	private bool StopBatteryReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x10DBDFC", Offset = "0x10DBDFC", VA = "0x10DBDFC")]
	private bool StartAudioReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x10DBE70", Offset = "0x10DBE70", VA = "0x10DBE70")]
	private bool StopAudioReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x10DC4D4", Offset = "0x10DC4D4", VA = "0x10DC4D4")]
	public Pvr_VolumePowerBrightness()
	{
	}
}
[Token(Token = "0x2000144")]
public class ControllerBehavior : MonoBehaviour
{
	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRCTLRaycaster CTLRaycaster;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XRHandlerDeviceType Device;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public XRControllerButton TriggerButton;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform EndPoint;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LineRenderer DistanceRenderer;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LineRenderer InfinityRenderer;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float pointDistMax;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _currentHitPos;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _currentRadius;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _fZoomPower;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _Max;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _Min;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private XRHandlerUtils.TeleportState _teleportState;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _teleportPos;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 _tpRecenterDir;

	[Token(Token = "0x170000A5")]
	private float _fRadiusMax
	{
		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xD387C8", Offset = "0xD387C8", VA = "0xD387C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xD387D0", Offset = "0xD387D0", VA = "0xD387D0")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	private float _fRadiusMin
	{
		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xD387E0", Offset = "0xD387E0", VA = "0xD387E0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xD387E8", Offset = "0xD387E8", VA = "0xD387E8")]
		set
		{
		}
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xD387FC", Offset = "0xD387FC", VA = "0xD387FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xD38820", Offset = "0xD38820", VA = "0xD38820")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xD3894C", Offset = "0xD3894C", VA = "0xD3894C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xD38A78", Offset = "0xD38A78", VA = "0xD38A78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xD38EBC", Offset = "0xD38EBC", VA = "0xD38EBC")]
	private void UpdateTeleportStatus(Vector3 Origin, Vector3 Target, XRHandlerUtils.TeleportState teleportState)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xD38D7C", Offset = "0xD38D7C", VA = "0xD38D7C")]
	private void Teleport()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xD3902C", Offset = "0xD3902C", VA = "0xD3902C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xD39054", Offset = "0xD39054", VA = "0xD39054")]
	private void DrawBeam(Vector3 origin, Vector3 direction, XRCTLRaycaster.RaycasterType type, RaycastResult result)
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xD3956C", Offset = "0xD3956C", VA = "0xD3956C")]
	public ControllerBehavior()
	{
	}
}
[Token(Token = "0x2000145")]
public class HandBehavior : MonoBehaviour
{
	[Token(Token = "0x200061D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB727B4", Offset = "0xB727B4")]
	private sealed class <ResetObject>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandBehavior <>4__this;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Go;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 _originTrans;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <dis>5__2;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <startime>5__3;

		[Token(Token = "0x170004AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B31")]
			[Address(RVA = "0x13218D8", Offset = "0x13218D8", VA = "0x13218D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B33")]
			[Address(RVA = "0x1321944", Offset = "0x1321944", VA = "0x1321944", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B2E")]
		[Address(RVA = "0x13215D4", Offset = "0x13215D4", VA = "0x13215D4")]
		[DebuggerHidden]
		public <ResetObject>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6002B2F")]
		[Address(RVA = "0x1321618", Offset = "0x1321618", VA = "0x1321618", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B30")]
		[Address(RVA = "0x132161C", Offset = "0x132161C", VA = "0x132161C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B32")]
		[Address(RVA = "0x13218E0", Offset = "0x13218E0", VA = "0x13218E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRHandlerDeviceType DeviceType;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XRHandRaycaster HandRaycaster;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private XRGestureAnimation _xRGestureAnimation;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _touchPriority;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _uiPriority;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _objectPriority;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _teleportPriority;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _grabGo;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _originPos;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 _originRot;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _currentGrabbedLocation;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 _handVector;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _startTime;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool _isGrabGo;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool _onTransition;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform EndPoint;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public LineRenderer DistanceRenderer;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public LineRenderer InfinityRenderer;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float pointDistMax;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 _currentHitPos;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _currentRadius;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float _fZoomPower;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float _Max;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float _Min;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private XRHandlerUtils.TeleportState _teleportState;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 _teleportPos;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 _tpRecenterDir;

	[Token(Token = "0x170000A7")]
	private float _fRadiusMax
	{
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x131F86C", Offset = "0x131F86C", VA = "0x131F86C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x131F874", Offset = "0x131F874", VA = "0x131F874")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	private float _fRadiusMin
	{
		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x131F884", Offset = "0x131F884", VA = "0x131F884")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x131F88C", Offset = "0x131F88C", VA = "0x131F88C")]
		set
		{
		}
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x131F8A0", Offset = "0x131F8A0", VA = "0x131F8A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x131F9C8", Offset = "0x131F9C8", VA = "0x131F9C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x131FB84", Offset = "0x131FB84", VA = "0x131FB84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x131FD40", Offset = "0x131FD40", VA = "0x131FD40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x1320424", Offset = "0x1320424", VA = "0x1320424")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x132044C", Offset = "0x132044C", VA = "0x132044C")]
	private void ProcessActionGesture(XRDeviceType deviceType, XRActionGesture actionGesture)
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x131FF54", Offset = "0x131FF54", VA = "0x131FF54")]
	private void ProcessGesture(XRHandlerGesture gesture)
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x13208C8", Offset = "0x13208C8", VA = "0x13208C8")]
	private void Grab()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x1320588", Offset = "0x1320588", VA = "0x1320588")]
	private void Release()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x1320A28", Offset = "0x1320A28", VA = "0x1320A28")]
	private void DrawBeam(Vector3 origin, Vector3 direction, XRHandRaycaster.RaycasterType type, RaycastResult result)
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x1320EE4", Offset = "0x1320EE4", VA = "0x1320EE4")]
	private void DrawLine(bool isHit, Vector3 start, Vector3 end, float radius = 0f)
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x1321290", Offset = "0x1321290", VA = "0x1321290")]
	private void HideAllLine()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x13213BC", Offset = "0x13213BC", VA = "0x13213BC")]
	private void UpdateTeleportStatus(Vector3 Origin, Vector3 Target, XRHandlerUtils.TeleportState teleportState)
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x13207A0", Offset = "0x13207A0", VA = "0x13207A0")]
	private void Teleport()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x1320164", Offset = "0x1320164", VA = "0x1320164")]
	private void MoveObject()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x1321530", Offset = "0x1321530", VA = "0x1321530")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB85C70", Offset = "0xB85C70")]
	public IEnumerator ResetObject(GameObject Go, Vector3 _originTrans)
	{
		return null;
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x1321600", Offset = "0x1321600", VA = "0x1321600")]
	public HandBehavior()
	{
	}
}
[Token(Token = "0x2000146")]
public class TeleportEffetControl : MonoBehaviour
{
	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRHandlerDeviceType Device;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XRTeleportShape TeleportShape;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public XRHandRaycaster HandRaycaster;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public XRCTLRaycaster CTLRaycaster;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _teleportDrawn;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Color teleportWhite;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Color teleportRed;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Color teleportCyan;

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x10E84C8", Offset = "0x10E84C8", VA = "0x10E84C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x10E854C", Offset = "0x10E854C", VA = "0x10E854C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x10E866C", Offset = "0x10E866C", VA = "0x10E866C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x10E878C", Offset = "0x10E878C", VA = "0x10E878C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x10E8794", Offset = "0x10E8794", VA = "0x10E8794")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x10E87C4", Offset = "0x10E87C4", VA = "0x10E87C4")]
	public void HideAll()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x10E8858", Offset = "0x10E8858", VA = "0x10E8858")]
	private void DrawTeleportHand(Vector3 strPoint, Vector3 endPoint, XRHandlerUtils.TeleportState state)
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x10E8ADC", Offset = "0x10E8ADC", VA = "0x10E8ADC")]
	private void DrawTeleportCTL(Vector3 strPoint, Vector3 endPoint, XRHandlerUtils.TeleportState state)
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x10E87C8", Offset = "0x10E87C8", VA = "0x10E87C8")]
	public void HideTeleport()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x10E8CA0", Offset = "0x10E8CA0", VA = "0x10E8CA0")]
	public TeleportEffetControl()
	{
	}
}
[Token(Token = "0x2000147")]
public class XRGazeRaycaster : XRBaseRaycaster
{
	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private LayerMask _raycastMask;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Camera _camera;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private PhysicsRaycaster _physicsRaycaster;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Canvas> canvases;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float GazeInitialTime;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float GazeTime;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float FocusDistance;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float _hitTime;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject _hitObject;

	[Token(Token = "0x170000A9")]
	public LayerMask RaycastMask
	{
		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x163D9CC", Offset = "0x163D9CC", VA = "0x163D9CC")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x163D9D4", Offset = "0x163D9D4", VA = "0x163D9D4")]
		set
		{
		}
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x163DA94", Offset = "0x163DA94", VA = "0x163DA94", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x163DC34", Offset = "0x163DC34", VA = "0x163DC34", Slot = "19")]
	public override RaycastResult Raycast(XRPointerEventData eventData)
	{
		return default(RaycastResult);
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x163E3EC", Offset = "0x163E3EC", VA = "0x163E3EC")]
	private int RaycastComparer(RaycastResult lhs, RaycastResult rhs)
	{
		return default(int);
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x163E250", Offset = "0x163E250", VA = "0x163E250")]
	private void UpdateCanvas()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x163E770", Offset = "0x163E770", VA = "0x163E770")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x163EAA0", Offset = "0x163EAA0", VA = "0x163EAA0")]
	private void ProcessFocus()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x163E794", Offset = "0x163E794", VA = "0x163E794")]
	private void ProcessGaze()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x163EB00", Offset = "0x163EB00", VA = "0x163EB00")]
	public XRGazeRaycaster()
	{
	}
}
[Token(Token = "0x2000148")]
public class XRGestureAnimation : MonoBehaviour
{
	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRHandlerDeviceType Device;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator HandAnimator;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private XRHandlerGesture _currentGesture;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB76CF0", Offset = "0xB76CF0")]
	private bool <GrabCube>k__BackingField;

	[Token(Token = "0x170000AA")]
	public bool GrabCube
	{
		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x163EB94", Offset = "0x163EB94", VA = "0x163EB94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85CD4", Offset = "0xB85CD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x163EB9C", Offset = "0x163EB9C", VA = "0x163EB9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85CE4", Offset = "0xB85CE4")]
		set
		{
		}
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x163EBA8", Offset = "0x163EBA8", VA = "0x163EBA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x163EBB0", Offset = "0x163EBB0", VA = "0x163EBB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x163EC20", Offset = "0x163EC20", VA = "0x163EC20")]
	public void ProcessGestureChange(XRHandlerGesture gesture)
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x163ED68", Offset = "0x163ED68", VA = "0x163ED68")]
	public XRGestureAnimation()
	{
	}
}
[Token(Token = "0x2000149")]
public class XRHandlerEmulator : MonoBehaviour
{
	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRCTLRaycaster CTLRaycaster;

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x163ED78", Offset = "0x163ED78", VA = "0x163ED78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x163EE04", Offset = "0x163EE04", VA = "0x163EE04")]
	private void ProcessMouseButton()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x163EE4C", Offset = "0x163EE4C", VA = "0x163EE4C")]
	private void ControlRaycastByMouse()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x163F1D0", Offset = "0x163F1D0", VA = "0x163F1D0")]
	public XRHandlerEmulator()
	{
	}
}
[Token(Token = "0x200014A")]
public class XRHandlerReceiver : MonoBehaviour
{
	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Handler3DofPosition;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public XRHandlerDeviceType Device;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandlerMode HandlerMode;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private XRHandlerData _currentData;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private XRHandlerType _currentHandlerType;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion _recenterRotation;

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x163F1D8", Offset = "0x163F1D8", VA = "0x163F1D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x163F2E4", Offset = "0x163F2E4", VA = "0x163F2E4")]
	private void ProcessHandlerType()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x163F3D8", Offset = "0x163F3D8", VA = "0x163F3D8")]
	private void ProcessTransform()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x163F6A0", Offset = "0x163F6A0", VA = "0x163F6A0")]
	public void Recenter()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x163F770", Offset = "0x163F770", VA = "0x163F770")]
	public XRHandlerReceiver()
	{
	}
}
[Token(Token = "0x200014B")]
public class XRHandlerSwitch : MonoBehaviour
{
	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ControllerGroup;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject HandGroup;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public XRHandlerDeviceType Device;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public HandlerMode HandlerMode;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private XRHandlerData _currentData;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private XRHandlerType _currentHandlerType;

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x163F818", Offset = "0x163F818", VA = "0x163F818")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x163F8CC", Offset = "0x163F8CC", VA = "0x163F8CC")]
	private void ProcessHandlerType()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x163F9AC", Offset = "0x163F9AC", VA = "0x163F9AC")]
	private void ProcessHandControllerVisible()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x163FD14", Offset = "0x163FD14", VA = "0x163FD14")]
	public XRHandlerSwitch()
	{
	}
}
[Token(Token = "0x200014C")]
public class XRReceiver : MonoBehaviour
{
	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 mouseNDC;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 mouseRotPos;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 mouseMovPos;

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x163FD1C", Offset = "0x163FD1C", VA = "0x163FD1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x16401B4", Offset = "0x16401B4", VA = "0x16401B4")]
	public XRReceiver()
	{
	}
}
[Token(Token = "0x200014D")]
public class XRTeleportCircle : MonoBehaviour
{
	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float RADIUS_MAX;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float RADIUS_MIN;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float FAR_DISTANCE_BE_ZOOM;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string VISIBILITY_PROPERTY;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float floatingDistance;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform teleportCircleEffect;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 targetOffset;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int mVertexCount;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float mRadius;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mVertexDeltaDegree;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material[] m_ColorMats;

	[Token(Token = "0x170000AB")]
	public int VertexCount
	{
		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x1640240", Offset = "0x1640240", VA = "0x1640240")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x1640248", Offset = "0x1640248", VA = "0x1640248")]
		set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public float Radius
	{
		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x164025C", Offset = "0x164025C", VA = "0x164025C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x1640264", Offset = "0x1640264", VA = "0x1640264")]
		set
		{
		}
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x164027C", Offset = "0x164027C", VA = "0x164027C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x1640388", Offset = "0x1640388", VA = "0x1640388")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x16403A4", Offset = "0x16403A4", VA = "0x16403A4")]
	public void ShowCircle(Vector3 strPoint, Vector3 endPoint, Color color, float auraAlpha = 1f, bool autoZoom = true)
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x1640B58", Offset = "0x1640B58", VA = "0x1640B58")]
	public void HideCircle()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x1640C44", Offset = "0x1640C44", VA = "0x1640C44")]
	public void ExecuteRender(bool enable, Color color, float auraAlpha = 1f)
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x1640C88", Offset = "0x1640C88", VA = "0x1640C88")]
	public void AutoZoomCircleByDistance(Vector3 strPoint, Vector3 endPoint)
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x1640650", Offset = "0x1640650", VA = "0x1640650")]
	private void ExecuteUpdate(Vector3 centerPos)
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x1640D3C", Offset = "0x1640D3C", VA = "0x1640D3C")]
	private void AutoZoomCircleByDistance(float distance)
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x1640DC4", Offset = "0x1640DC4", VA = "0x1640DC4")]
	private void SetCircleRadius(float radius)
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x16408A4", Offset = "0x16408A4", VA = "0x16408A4")]
	private void SetRenderColor(Color color, float auraAlpha)
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x1640280", Offset = "0x1640280", VA = "0x1640280")]
	private void FetchReferences()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x1640E8C", Offset = "0x1640E8C", VA = "0x1640E8C")]
	public XRTeleportCircle()
	{
	}
}
[Token(Token = "0x200014E")]
public enum XREBezierCurvePointType
{
	[Token(Token = "0x4000B18")]
	Start,
	[Token(Token = "0x4000B19")]
	Middle,
	[Token(Token = "0x4000B1A")]
	End
}
[Token(Token = "0x200014F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB71044", Offset = "0xB71044")]
public class XRTeleportCurve : MonoBehaviour
{
	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float BEZIER_CURVE_RATIO;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float BEZIER_CURVE_HEIGHT;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string COLOR_PROPERTY;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float floatingDistance;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int mVertexCount;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_Mat;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 mStrPoint;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 mMidPoint;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 mEndPoint;

	[Token(Token = "0x170000AD")]
	public int VertexCount
	{
		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x1F36B7C", Offset = "0x1F36B7C", VA = "0x1F36B7C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x1F36B84", Offset = "0x1F36B84", VA = "0x1F36B84")]
		set
		{
		}
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x1F36BB4", Offset = "0x1F36BB4", VA = "0x1F36BB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x1F36C88", Offset = "0x1F36C88", VA = "0x1F36C88")]
	public void ShowCurve(Vector3 strPoint, Vector3 endPoint, Color color)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x1F37110", Offset = "0x1F37110", VA = "0x1F37110")]
	public void HideCurve()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x1F37130", Offset = "0x1F37130", VA = "0x1F37130")]
	private void ExecuteUpdate(Vector3 strPoint, Vector3 endPoint)
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x1F36F2C", Offset = "0x1F36F2C", VA = "0x1F36F2C")]
	private void ExecuteUpdate(Vector3 strPoint, Vector3 midPoint, Vector3 endPoint)
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x1F36E20", Offset = "0x1F36E20", VA = "0x1F36E20")]
	private Vector3 CalcCurveMidPoint(Vector3 strPoint, Vector3 endPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x1F371B0", Offset = "0x1F371B0", VA = "0x1F371B0")]
	public Vector3 GetPrevCurvePoint(XREBezierCurvePointType eCurvePointType)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x1F37264", Offset = "0x1F37264", VA = "0x1F37264")]
	public XRTeleportCurve()
	{
	}
}
[Token(Token = "0x2000150")]
public class XRTeleportShape : MonoBehaviour
{
	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private XRTeleportCircle teleportCircle;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private XRTeleportCurve teleportCurve;

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x1F372FC", Offset = "0x1F372FC", VA = "0x1F372FC")]
	public void DrawTeleport(Vector3 strPoint, Vector3 endPoint, Color color, float auraAlpha = 1f, bool autoZoom = true)
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x1F3733C", Offset = "0x1F3733C", VA = "0x1F3733C")]
	public void DrawTeleport(Vector3 strPoint, Vector3 endPoint, Color circleColor, Color curveColor, float auraAlpha = 1f, bool autoZoom = true)
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x1F374E8", Offset = "0x1F374E8", VA = "0x1F374E8")]
	public void HideTeleport()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x1F37628", Offset = "0x1F37628", VA = "0x1F37628")]
	public void ShowCircle(Vector3 strPoint, Vector3 endPoint, Color color, float auraAlpha = 1f, bool autoZoom = true)
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x1F3750C", Offset = "0x1F3750C", VA = "0x1F3750C")]
	public void HideCircle()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x1F37748", Offset = "0x1F37748", VA = "0x1F37748")]
	public void ShowCurve(Vector3 strPoint, Vector3 endPoint, Color color)
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x1F3759C", Offset = "0x1F3759C", VA = "0x1F3759C")]
	public void HideCurve()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x1F37848", Offset = "0x1F37848", VA = "0x1F37848")]
	public XRTeleportShape()
	{
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x2000151")]
	public class PvrControllerKey
	{
		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool PressedDown;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool PressedUp;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool LongPressed;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Click;

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x1983548", Offset = "0x1983548", VA = "0x1983548")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class ControllerHand
	{
		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PvrControllerKey App;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PvrControllerKey Touch;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrControllerKey Home;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PvrControllerKey X;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PvrControllerKey Y;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PvrControllerKey A;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PvrControllerKey B;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PvrControllerKey Left;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PvrControllerKey Right;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector2 TouchPadPosition;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int TriggerNum;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Quaternion Rotation;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 Position;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int Battery;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public ControllerState ConnectState;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool isShowBoundary;

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x1983350", Offset = "0x1983350", VA = "0x1983350")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public enum ControllerState
	{
		[Token(Token = "0x4000B42")]
		Error = -1,
		[Token(Token = "0x4000B43")]
		DisConnected,
		[Token(Token = "0x4000B44")]
		Connected
	}
	[Token(Token = "0x2000154")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x4000B46")]
		APP = 1,
		[Token(Token = "0x4000B47")]
		TOUCHPAD,
		[Token(Token = "0x4000B48")]
		HOME,
		[Token(Token = "0x4000B49")]
		VOLUMEUP,
		[Token(Token = "0x4000B4A")]
		VOLUMEDOWN,
		[Token(Token = "0x4000B4B")]
		TRIGGER,
		[Token(Token = "0x4000B4C")]
		A,
		[Token(Token = "0x4000B4D")]
		B,
		[Token(Token = "0x4000B4E")]
		X,
		[Token(Token = "0x4000B4F")]
		Y,
		[Token(Token = "0x4000B50")]
		Left,
		[Token(Token = "0x4000B51")]
		Right
	}
	[Token(Token = "0x2000155")]
	public enum SwipeDirection
	{
		[Token(Token = "0x4000B53")]
		No,
		[Token(Token = "0x4000B54")]
		SwipeUp,
		[Token(Token = "0x4000B55")]
		SwipeDown,
		[Token(Token = "0x4000B56")]
		SwipeLeft,
		[Token(Token = "0x4000B57")]
		SwipeRight
	}
	[Token(Token = "0x2000156")]
	public enum TouchPadClick
	{
		[Token(Token = "0x4000B59")]
		No,
		[Token(Token = "0x4000B5A")]
		ClickUp,
		[Token(Token = "0x4000B5B")]
		ClickDown,
		[Token(Token = "0x4000B5C")]
		ClickLeft,
		[Token(Token = "0x4000B5D")]
		ClickRight
	}
	[Token(Token = "0x2000157")]
	public struct Controller
	{
		[Token(Token = "0x4000B5E")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x197F5A4", Offset = "0x197F5A4", VA = "0x197F5A4")]
		public static Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x197F6A4", Offset = "0x197F6A4", VA = "0x197F6A4")]
		public static Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x197F8D8", Offset = "0x197F8D8", VA = "0x197F8D8")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x197F9E0", Offset = "0x197F9E0", VA = "0x197F9E0")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x197FAFC", Offset = "0x197FAFC", VA = "0x197FAFC")]
		public static Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x197FC14", Offset = "0x197FC14", VA = "0x197FC14")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x197FCE8", Offset = "0x197FCE8", VA = "0x197FCE8")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x197FDBC", Offset = "0x197FDBC", VA = "0x197FDBC")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x197FE90", Offset = "0x197FE90", VA = "0x197FE90")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x197FF64", Offset = "0x197FF64", VA = "0x197FF64")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x19804B4", Offset = "0x19804B4", VA = "0x19804B4")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x1980A04", Offset = "0x1980A04", VA = "0x1980A04")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x1980F54", Offset = "0x1980F54", VA = "0x1980F54")]
		public static bool UPvr_GetKeyClick(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x19814A4", Offset = "0x19814A4", VA = "0x19814A4")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x19819F4", Offset = "0x19819F4", VA = "0x19819F4")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x1981BC4", Offset = "0x1981BC4", VA = "0x1981BC4")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x1981C84", Offset = "0x1981C84", VA = "0x1981C84")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x1981CFC", Offset = "0x1981CFC", VA = "0x1981CFC")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x1981DA8", Offset = "0x1981DA8", VA = "0x1981DA8")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x1981E1C", Offset = "0x1981E1C", VA = "0x1981E1C")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x1981E94", Offset = "0x1981E94", VA = "0x1981E94")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x1981F0C", Offset = "0x1981F0C", VA = "0x1981F0C")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x1981F88", Offset = "0x1981F88", VA = "0x1981F88")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x1982004", Offset = "0x1982004", VA = "0x1982004")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x19820A0", Offset = "0x19820A0", VA = "0x19820A0")]
		public static int UPvr_GetControllerBindingState(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x198211C", Offset = "0x198211C", VA = "0x198211C")]
		public static Vector3 UPvr_GetVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x1982198", Offset = "0x1982198", VA = "0x1982198")]
		public static Vector3 UPvr_GetAngularVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x1982214", Offset = "0x1982214", VA = "0x1982214")]
		public static Vector3 UPvr_GetAcceleration(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x1982290", Offset = "0x1982290", VA = "0x1982290")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x1982304", Offset = "0x1982304", VA = "0x1982304")]
		public static void UPvr_StopScanController()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x1982378", Offset = "0x1982378", VA = "0x1982378")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x1982440", Offset = "0x1982440", VA = "0x1982440")]
		public static void UPvr_DisConnectController()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x19824B4", Offset = "0x19824B4", VA = "0x19824B4")]
		public static void UPvr_ResetController(int hand)
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x1982530", Offset = "0x1982530", VA = "0x1982530")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x19825A4", Offset = "0x19825A4", VA = "0x19825A4")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x1982620", Offset = "0x1982620", VA = "0x1982620")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x198269C", Offset = "0x198269C", VA = "0x198269C")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x1982718", Offset = "0x1982718", VA = "0x1982718")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x198278C", Offset = "0x198278C", VA = "0x198278C")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x1982800", Offset = "0x1982800", VA = "0x1982800")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x198288C", Offset = "0x198288C", VA = "0x198288C")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x1982908", Offset = "0x1982908", VA = "0x1982908")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x1982984", Offset = "0x1982984", VA = "0x1982984")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x19829F8", Offset = "0x19829F8", VA = "0x19829F8")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x1982A6C", Offset = "0x1982A6C", VA = "0x1982A6C")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x1982AE0", Offset = "0x1982AE0", VA = "0x1982AE0")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x1982B5C", Offset = "0x1982B5C", VA = "0x1982B5C")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xC4FE1C", Offset = "0xC4FE1C", VA = "0xC4FE1C")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xC4FE20", Offset = "0xC4FE20", VA = "0xC4FE20")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xC4FE24", Offset = "0xC4FE24", VA = "0xC4FE24")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x1982D3C", Offset = "0x1982D3C", VA = "0x1982D3C")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x1982E14", Offset = "0x1982E14", VA = "0x1982E14")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x1982EE4", Offset = "0x1982EE4", VA = "0x1982EE4")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x1982FA4", Offset = "0x1982FA4", VA = "0x1982FA4")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x1983060", Offset = "0x1983060", VA = "0x1983060")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x198311C", Offset = "0x198311C", VA = "0x198311C")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x19831DC", Offset = "0x19831DC", VA = "0x19831DC")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x1983258", Offset = "0x1983258", VA = "0x1983258")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x19832D4", Offset = "0x19832D4", VA = "0x19832D4")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x1982E18", Offset = "0x1982E18", VA = "0x1982E18")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x1982EE8", Offset = "0x1982EE8", VA = "0x1982EE8")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x1982FA8", Offset = "0x1982FA8", VA = "0x1982FA8")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x1983064", Offset = "0x1983064", VA = "0x1983064")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x1983120", Offset = "0x1983120", VA = "0x1983120")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1982D40", Offset = "0x1982D40", VA = "0x1982D40")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
	[Token(Token = "0x2000158")]
	public enum ControllerVariety
	{
		[Token(Token = "0x4000B60")]
		Controller0,
		[Token(Token = "0x4000B61")]
		Controller1
	}
	[Token(Token = "0x2000159")]
	public enum ControllerDevice
	{
		[Token(Token = "0x4000B63")]
		Goblin,
		[Token(Token = "0x4000B64")]
		Neo,
		[Token(Token = "0x4000B65")]
		G2,
		[Token(Token = "0x4000B66")]
		Neo2,
		[Token(Token = "0x4000B67")]
		NewController
	}
	[Token(Token = "0x200015A")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x4000B69")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x4000B6A")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x4000B6B")]
		SEENSOR_COUNT,
		[Token(Token = "0x4000B6C")]
		ABILITY6DOF,
		[Token(Token = "0x4000B6D")]
		PLATFORM_TYPE,
		[Token(Token = "0x4000B6E")]
		TRACKING_MODE,
		[Token(Token = "0x4000B6F")]
		LOG_LEVEL,
		[Token(Token = "0x4000B70")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x4000B71")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x4000B72")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x4000B73")]
		iShowFPS,
		[Token(Token = "0x4000B74")]
		SensorMode,
		[Token(Token = "0x4000B75")]
		LOGICFLOW,
		[Token(Token = "0x4000B76")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x4000B77")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x4000B78")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x4000B79")]
		iPhoneHMDModeEnabled,
		[Token(Token = "0x4000B7A")]
		isEnableBoundary,
		[Token(Token = "0x4000B7B")]
		Enable_Activity_Rotation,
		[Token(Token = "0x4000B7C")]
		GetDisplay_Orientation,
		[Token(Token = "0x4000B7D")]
		GetWaitFrameNum,
		[Token(Token = "0x4000B7E")]
		GetResetFrameNum
	}
	[Token(Token = "0x200015B")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x4000B80")]
		IPD,
		[Token(Token = "0x4000B81")]
		VFOV,
		[Token(Token = "0x4000B82")]
		HFOV,
		[Token(Token = "0x4000B83")]
		NECK_MODEL_X,
		[Token(Token = "0x4000B84")]
		NECK_MODEL_Y,
		[Token(Token = "0x4000B85")]
		NECK_MODEL_Z,
		[Token(Token = "0x4000B86")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x200015C")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x4000B88")]
		X_1 = 1,
		[Token(Token = "0x4000B89")]
		X_2 = 2,
		[Token(Token = "0x4000B8A")]
		X_4 = 4,
		[Token(Token = "0x4000B8B")]
		X_8 = 8
	}
	[Token(Token = "0x200015D")]
	public enum PlatForm
	{
		[Token(Token = "0x4000B8D")]
		Android = 1,
		[Token(Token = "0x4000B8E")]
		IOS,
		[Token(Token = "0x4000B8F")]
		Win,
		[Token(Token = "0x4000B90")]
		Notsupport
	}
	[Token(Token = "0x200015E")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x4000B92")]
		BD_0 = 0,
		[Token(Token = "0x4000B93")]
		BD_16 = 16,
		[Token(Token = "0x4000B94")]
		BD_24 = 24
	}
	[Token(Token = "0x200015F")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x4000B96")]
		Normal,
		[Token(Token = "0x4000B97")]
		High
	}
	[Token(Token = "0x2000160")]
	public enum Sensorindex
	{
		[Token(Token = "0x4000B99")]
		Default,
		[Token(Token = "0x4000B9A")]
		FirstSensor,
		[Token(Token = "0x4000B9B")]
		SecondSensor
	}
	[Token(Token = "0x2000161")]
	public enum Eye
	{
		[Token(Token = "0x4000B9D")]
		LeftEye,
		[Token(Token = "0x4000B9E")]
		RightEye,
		[Token(Token = "0x4000B9F")]
		BothEye
	}
	[Token(Token = "0x2000162")]
	public enum ResUtilsType
	{
		[Token(Token = "0x4000BA1")]
		TYPE_TEXTSIZE,
		[Token(Token = "0x4000BA2")]
		TYPE_COLOR,
		[Token(Token = "0x4000BA3")]
		TYPE_TEXT,
		[Token(Token = "0x4000BA4")]
		TYPE_FONT,
		[Token(Token = "0x4000BA5")]
		TYPE_VALUE,
		[Token(Token = "0x4000BA6")]
		TYPE_DRAWABLE,
		[Token(Token = "0x4000BA7")]
		TYPE_OBJECT,
		[Token(Token = "0x4000BA8")]
		TYPR_OBJECTARRAY
	}
	[Token(Token = "0x2000163")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x4000BAA")]
		EyeLevel,
		[Token(Token = "0x4000BAB")]
		FloorLevel
	}
	[Token(Token = "0x2000164")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x4000BAD")]
		Low,
		[Token(Token = "0x4000BAE")]
		Med,
		[Token(Token = "0x4000BAF")]
		High
	}
	[Token(Token = "0x2000165")]
	public enum StereoRenderingPathPico
	{
		[Token(Token = "0x4000BB1")]
		MultiPass,
		[Token(Token = "0x4000BB2")]
		SinglePass
	}
	[Token(Token = "0x2000166")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x4000BB4")]
		kGazePointValid = 1,
		[Token(Token = "0x4000BB5")]
		kGazeVectorValid = 2,
		[Token(Token = "0x4000BB6")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x4000BB7")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x4000BB8")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x2000167")]
	public enum TrackingMode
	{
		[Token(Token = "0x4000BBA")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x4000BBB")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x4000BBC")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x2000168")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 leftEyeGazePoint;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rightEyeGazePoint;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 combinedEyeGazePoint;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 leftEyeGazeVector;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rightEyeGazeVector;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 combinedEyeGazeVector;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 leftEyePositionGuide;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 rightEyePositionGuide;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 foveatedGazeDirection;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int foveatedGazeTrackingState;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public byte[] reserved;
	}
	[Token(Token = "0x2000169")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Direction;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsValid;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Origin;
	}
	[Token(Token = "0x200016A")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x200016B")]
	public struct ViewFrustum
	{
		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;
	}
	[Token(Token = "0x200016C")]
	public struct EyeSetting
	{
		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform eyelocalPosition;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Rect eyeRect;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeFov;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float eyeAspect;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader eyeShader;
	}
	[Token(Token = "0x200016D")]
	public struct Sensor
	{
		[Token(Token = "0x4000BE0")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x1985BBC", Offset = "0x1985BBC", VA = "0x1985BBC")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1985C58", Offset = "0x1985C58", VA = "0x1985C58")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x1985D08", Offset = "0x1985D08", VA = "0x1985D08")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x1985DA4", Offset = "0x1985DA4", VA = "0x1985DA4")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x1985E40", Offset = "0x1985E40", VA = "0x1985E40")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x1985EDC", Offset = "0x1985EDC", VA = "0x1985EDC")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x1985F78", Offset = "0x1985F78", VA = "0x1985F78")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x1986014", Offset = "0x1986014", VA = "0x1986014")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x1986108", Offset = "0x1986108", VA = "0x1986108")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x1986204", Offset = "0x1986204", VA = "0x1986204")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x1986290", Offset = "0x1986290", VA = "0x1986290")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x198631C", Offset = "0x198631C", VA = "0x198631C")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x19863E0", Offset = "0x19863E0", VA = "0x19863E0")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x19864A4", Offset = "0x19864A4", VA = "0x19864A4")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x1986530", Offset = "0x1986530", VA = "0x1986530")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x19865C4", Offset = "0x19865C4", VA = "0x19865C4")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key);

		[PreserveSig]
		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x19866D0", Offset = "0x19866D0", VA = "0x19866D0")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x1986774", Offset = "0x1986774", VA = "0x1986774")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x1986778", Offset = "0x1986778", VA = "0x1986778")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x198677C", Offset = "0x198677C", VA = "0x198677C")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x1986978", Offset = "0x1986978", VA = "0x1986978")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x1986BDC", Offset = "0x1986BDC", VA = "0x1986BDC")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x1986BE0", Offset = "0x1986BE0", VA = "0x1986BE0")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x1986DE0", Offset = "0x1986DE0", VA = "0x1986DE0")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x1986DE4", Offset = "0x1986DE4", VA = "0x1986DE4")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x1986DE8", Offset = "0x1986DE8", VA = "0x1986DE8")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x1986F88", Offset = "0x1986F88", VA = "0x1986F88")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x1986F8C", Offset = "0x1986F8C", VA = "0x1986F8C")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x1986F90", Offset = "0x1986F90", VA = "0x1986F90")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x1986F9C", Offset = "0x1986F9C", VA = "0x1986F9C")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x1986FA0", Offset = "0x1986FA0", VA = "0x1986FA0")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x1986FA4", Offset = "0x1986FA4", VA = "0x1986FA4")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x1986FA8", Offset = "0x1986FA8", VA = "0x1986FA8")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x1986780", Offset = "0x1986780", VA = "0x1986780")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x19871C4", Offset = "0x19871C4", VA = "0x19871C4")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x19869CC", Offset = "0x19869CC", VA = "0x19869CC")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x1986BE4", Offset = "0x1986BE4", VA = "0x1986BE4")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x19873F8", Offset = "0x19873F8", VA = "0x19873F8")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x19873FC", Offset = "0x19873FC", VA = "0x19873FC")]
		public static void UPvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x1987808", Offset = "0x1987808", VA = "0x1987808")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200016E")]
	public struct Render
	{
		[Token(Token = "0x4000BE1")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x1984554", Offset = "0x1984554", VA = "0x1984554")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x1984640", Offset = "0x1984640", VA = "0x1984640")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x19846E4", Offset = "0x19846E4", VA = "0x19846E4")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x1984780", Offset = "0x1984780", VA = "0x1984780")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x198480C", Offset = "0x198480C", VA = "0x198480C")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x19848B8", Offset = "0x19848B8", VA = "0x19848B8")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x1984960", Offset = "0x1984960", VA = "0x1984960")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x1984A08", Offset = "0x1984A08", VA = "0x1984A08")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x1984AEC", Offset = "0x1984AEC", VA = "0x1984AEC")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x1984BE8", Offset = "0x1984BE8", VA = "0x1984BE8")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, float[] mvMatrix, float[] modelS, float[] modelR, float[] modelT, float[] cameraR, float[] cameraT, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x1984D44", Offset = "0x1984D44", VA = "0x1984D44")]
		private static extern bool Pvr_EnableFoveation(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x1984DE8", Offset = "0x1984DE8", VA = "0x1984DE8")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x1984EDC", Offset = "0x1984EDC", VA = "0x1984EDC")]
		private static extern void Pvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY);

		[PreserveSig]
		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x1984FA0", Offset = "0x1984FA0", VA = "0x1984FA0")]
		private static extern void Pvr_SetFoveationParameters2(float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x1985060", Offset = "0x1985060", VA = "0x1985060")]
		private static extern void Pvr_SetFoveationLevel(EFoveationLevel level);

		[PreserveSig]
		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x19850FC", Offset = "0x19850FC", VA = "0x19850FC")]
		private static extern EFoveationLevel Pvr_GetFoveationLevel();

		[PreserveSig]
		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x1985188", Offset = "0x1985188", VA = "0x1985188")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x1985224", Offset = "0x1985224", VA = "0x1985224")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x19852D0", Offset = "0x19852D0", VA = "0x19852D0")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x198537C", Offset = "0x198537C", VA = "0x198537C")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[PreserveSig]
		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x1985418", Offset = "0x1985418", VA = "0x1985418")]
		private static extern void Pvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexData, ref IntPtr indexData);

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x19854E4", Offset = "0x19854E4", VA = "0x19854E4")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x19854E8", Offset = "0x19854E8", VA = "0x19854E8")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x19854EC", Offset = "0x19854EC", VA = "0x19854EC")]
		public static void UPvr_EnableFoveation(bool enable)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x19854F4", Offset = "0x19854F4", VA = "0x19854F4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB85CF4", Offset = "0xB85CF4")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x19854F8", Offset = "0x19854F8", VA = "0x19854F8")]
		public static void UPvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x19854FC", Offset = "0x19854FC", VA = "0x19854FC")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x1985500", Offset = "0x1985500", VA = "0x1985500")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x1985504", Offset = "0x1985504", VA = "0x1985504")]
		public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x1985508", Offset = "0x1985508", VA = "0x1985508")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x198550C", Offset = "0x198550C", VA = "0x198550C")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x1985510", Offset = "0x1985510", VA = "0x1985510")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x198559C", Offset = "0x198559C", VA = "0x198559C")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x19855A0", Offset = "0x19855A0", VA = "0x19855A0")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x19856E8", Offset = "0x19856E8", VA = "0x19856E8")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x19856EC", Offset = "0x19856EC", VA = "0x19856EC")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, Matrix4x4 mvMatrix, Vector3 modelS, Quaternion modelR, Vector3 modelT, Quaternion cameraR, Vector3 cameraT, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x1985BA4", Offset = "0x1985BA4", VA = "0x1985BA4")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x1985BA8", Offset = "0x1985BA8", VA = "0x1985BA8")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x1985BAC", Offset = "0x1985BAC", VA = "0x1985BAC")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x1985BB0", Offset = "0x1985BB0", VA = "0x1985BB0")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x1985BB8", Offset = "0x1985BB8", VA = "0x1985BB8")]
		public static void UPvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexDataPtr, ref IntPtr indexDataPtr)
		{
		}
	}
	[Token(Token = "0x200016F")]
	public struct System
	{
		[Token(Token = "0x4000BE2")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4000BE3")]
		public const string UnitySDKVersion = "2.8.6.9";

		[PreserveSig]
		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x198780C", Offset = "0x198780C", VA = "0x198780C")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x19878B8", Offset = "0x19878B8", VA = "0x19878B8")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x1987944", Offset = "0x1987944", VA = "0x1987944")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x19879D0", Offset = "0x19879D0", VA = "0x19879D0")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x1987A5C", Offset = "0x1987A5C", VA = "0x1987A5C")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x1987AE8", Offset = "0x1987AE8", VA = "0x1987AE8")]
		public static extern int PVR_GetHmdBatteryLevel();

		[PreserveSig]
		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x1987B74", Offset = "0x1987B74", VA = "0x1987B74")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x1987C00", Offset = "0x1987C00", VA = "0x1987C00")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x1987C8C", Offset = "0x1987C8C", VA = "0x1987C8C")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x1987D28", Offset = "0x1987D28", VA = "0x1987D28")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ, ref float foveatedGazeDirectionX, ref float foveatedGazeDirectionY, ref float foveatedGazeDirectionZ, ref int foveatedGazeTrackingState);

		[PreserveSig]
		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x1987E7C", Offset = "0x1987E7C", VA = "0x1987E7C")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x1987F20", Offset = "0x1987F20", VA = "0x1987F20")]
		public static extern int Pvr_GetTrackingMode();

		[PreserveSig]
		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x1987FAC", Offset = "0x1987FAC", VA = "0x1987FAC")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x1988038", Offset = "0x1988038", VA = "0x1988038")]
		public static extern void UnityEventData(long data);

		[PreserveSig]
		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x19880D4", Offset = "0x19880D4", VA = "0x19880D4")]
		public static extern bool Pvr_EnableSinglePass(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x1988178", Offset = "0x1988178", VA = "0x1988178")]
		public static extern void Pvr_SetAntiAliasing(int antiAliasing);

		[PreserveSig]
		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x1988214", Offset = "0x1988214", VA = "0x1988214")]
		public static extern void Pvr_SinglePassBeforeForwardOpaque();

		[PreserveSig]
		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x19882A0", Offset = "0x19882A0", VA = "0x19882A0")]
		public static extern void Pvr_SetCurrentRenderTexture(uint textureId);

		[PreserveSig]
		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x198833C", Offset = "0x198833C", VA = "0x198833C")]
		public static extern bool Pvr_SetSinglePassDepthBufferWidthHeight(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x19883F0", Offset = "0x19883F0", VA = "0x19883F0")]
		public static extern int PVR_setPerformanceLevels(int cpuLevel, int gpuLevel);

		[PreserveSig]
		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x198849C", Offset = "0x198849C", VA = "0x198849C")]
		public static extern bool Pvr_SetIPD(float distance);

		[PreserveSig]
		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x1988544", Offset = "0x1988544", VA = "0x1988544")]
		public static extern float Pvr_GetIPD();

		[PreserveSig]
		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x19885D0", Offset = "0x19885D0", VA = "0x19885D0")]
		public static extern bool Pvr_SetTrackingIPDEnabled(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x1988674", Offset = "0x1988674", VA = "0x1988674")]
		public static extern bool Pvr_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x1988708", Offset = "0x1988708", VA = "0x1988708")]
		public static extern bool Pvr_GetEyeTrackingAutoIPD(ref float autoIPD);

		[PreserveSig]
		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x19844C8", Offset = "0x19844C8", VA = "0x19844C8")]
		public static extern int PVR_GetHmdAudioStatus();

		[Token(Token = "0x6000CF4")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x1986FB0", Offset = "0x1986FB0", VA = "0x1986FB0")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF6")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x19887AC", Offset = "0x19887AC", VA = "0x19887AC")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x19889C0", Offset = "0x19889C0", VA = "0x19889C0")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x1988A54", Offset = "0x1988A54", VA = "0x1988A54")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x1988A9C", Offset = "0x1988A9C", VA = "0x1988A9C")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x1988AA4", Offset = "0x1988AA4", VA = "0x1988AA4")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x19836CC", Offset = "0x19836CC", VA = "0x19836CC")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x1983B04", Offset = "0x1983B04", VA = "0x1983B04")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x1988AAC", Offset = "0x1988AAC", VA = "0x1988AAC")]
		public static void UPvr_ShutDown()
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x1988BB8", Offset = "0x1988BB8", VA = "0x1988BB8")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x1988CA0", Offset = "0x1988CA0", VA = "0x1988CA0")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x1988DAC", Offset = "0x1988DAC", VA = "0x1988DAC")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x1988EB8", Offset = "0x1988EB8", VA = "0x1988EB8")]
		public static void UPvr_Reboot()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x1988FA4", Offset = "0x1988FA4", VA = "0x1988FA4")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x19890B0", Offset = "0x19890B0", VA = "0x19890B0")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x1989350", Offset = "0x1989350", VA = "0x1989350")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x19895A0", Offset = "0x19895A0", VA = "0x19895A0")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x19896AC", Offset = "0x19896AC", VA = "0x19896AC")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x19897B8", Offset = "0x19897B8", VA = "0x19897B8")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x19898C4", Offset = "0x19898C4", VA = "0x19898C4")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x19899D4", Offset = "0x19899D4", VA = "0x19899D4")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x1989AE0", Offset = "0x1989AE0", VA = "0x1989AE0")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x1989BF4", Offset = "0x1989BF4", VA = "0x1989BF4")]
		public static bool UPvr_SetIPD(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x1989FCC", Offset = "0x1989FCC", VA = "0x1989FCC")]
		public static float UPvr_GetIPD()
		{
			return default(float);
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x198A08C", Offset = "0x198A08C", VA = "0x198A08C")]
		public static bool UPvr_SetTrackingIPDEnabled(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x198A094", Offset = "0x198A094", VA = "0x198A094")]
		public static bool UPvr_GetTrackingIPDEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x198A098", Offset = "0x198A098", VA = "0x198A098")]
		public static bool UPvr_GetEyeTrackingAutoIPD(ref float autoipd)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x198A09C", Offset = "0x198A09C", VA = "0x198A09C")]
		public static void UPvr_UnityEventData(long data)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x198A0A0", Offset = "0x198A0A0", VA = "0x198A0A0")]
		public static long UPvr_GetEyeBufferData(int id)
		{
			return default(long);
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x198A11C", Offset = "0x198A11C", VA = "0x198A11C")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x198A24C", Offset = "0x198A24C", VA = "0x198A24C")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x198A250", Offset = "0x198A250", VA = "0x198A250")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x198A2E4", Offset = "0x198A2E4", VA = "0x198A2E4")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x198A378", Offset = "0x198A378", VA = "0x198A378")]
		public static int UPvr_GetHmdBatteryLevel()
		{
			return default(int);
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x198A37C", Offset = "0x198A37C", VA = "0x198A37C")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x198A380", Offset = "0x198A380", VA = "0x198A380")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x198A384", Offset = "0x198A384", VA = "0x198A384")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x198A38C", Offset = "0x198A38C", VA = "0x198A38C")]
		public static int UPvr_GetTrackingMode()
		{
			return default(int);
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x198A390", Offset = "0x198A390", VA = "0x198A390")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x198A394", Offset = "0x198A394", VA = "0x198A394")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x198A5C8", Offset = "0x198A5C8", VA = "0x198A5C8")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x198A7D8", Offset = "0x198A7D8", VA = "0x198A7D8")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x198AA78", Offset = "0x198AA78", VA = "0x198AA78")]
		public static Vector3 UPvr_getEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x198AD7C", Offset = "0x198AD7C", VA = "0x198AD7C")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x198AE84", Offset = "0x198AE84", VA = "0x198AE84")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x198AFC4", Offset = "0x198AFC4", VA = "0x198AFC4")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x198B32C", Offset = "0x198B32C", VA = "0x198B32C")]
		public static bool UPvr_EnableSinglePass(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x198B334", Offset = "0x198B334", VA = "0x198B334")]
		public static void UPvr_SetAntiAliasing(int antiAliasing)
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x198B338", Offset = "0x198B338", VA = "0x198B338")]
		public static void UPvr_SinglePassBeforeForwardOpaque()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x198B33C", Offset = "0x198B33C", VA = "0x198B33C")]
		public static void UPvr_SetCurrentRenderTexture(uint textureId)
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x198B340", Offset = "0x198B340", VA = "0x198B340")]
		public static bool UPvr_SetSinglePassDepthBufferWidthHeight(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x198B344", Offset = "0x198B344", VA = "0x198B344")]
		public static int UPVR_setPerformanceLevels(int cpuLevel, int gpuLevel)
		{
			return default(int);
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x198B348", Offset = "0x198B348", VA = "0x198B348")]
		public static int UPvr_GetColorRes(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x198B53C", Offset = "0x198B53C", VA = "0x198B53C")]
		public static int UPvr_GetConfigInt(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x198B730", Offset = "0x198B730", VA = "0x198B730")]
		public static string UPvr_GetConfigString(string name)
		{
			return null;
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x198B92C", Offset = "0x198B92C", VA = "0x198B92C")]
		public static string UPvr_GetDrawableLocation(string name)
		{
			return null;
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x198BB28", Offset = "0x198BB28", VA = "0x198BB28")]
		public static int UPvr_GetTextSize(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x198BD1C", Offset = "0x198BD1C", VA = "0x198BD1C")]
		public static string UPvr_GetLangString(string name)
		{
			return null;
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x198BF18", Offset = "0x198BF18", VA = "0x198BF18")]
		public static string UPvr_GetStringValue(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x198C18C", Offset = "0x198C18C", VA = "0x198C18C")]
		public static int UPvr_GetIntValue(string id, int type)
		{
			return default(int);
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x198C3F8", Offset = "0x198C3F8", VA = "0x198C3F8")]
		public static float UPvr_GetFloatValue(string id)
		{
			return default(float);
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x198C5EC", Offset = "0x198C5EC", VA = "0x198C5EC")]
		public static string UPvr_GetObjectOrArray(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x198C860", Offset = "0x198C860", VA = "0x198C860")]
		public static int UPvr_GetCharSpace(string id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000170")]
	public struct BoundarySystem
	{
		[Token(Token = "0x200061E")]
		public enum BoundaryType
		{
			[Token(Token = "0x4002576")]
			OuterBoundary,
			[Token(Token = "0x4002577")]
			PlayArea
		}

		[Token(Token = "0x200061F")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x4002578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x4002579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x400257A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 ClosestPoint;

			[Token(Token = "0x400257B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x2000620")]
		public enum BoundaryTrackingNode
		{
			[Token(Token = "0x400257D")]
			HandLeft,
			[Token(Token = "0x400257E")]
			HandRight,
			[Token(Token = "0x400257F")]
			Head
		}

		[Token(Token = "0x4000BE4")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x178433C", Offset = "0x178433C", VA = "0x178433C")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x17843C8", Offset = "0x17843C8", VA = "0x17843C8")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x1784454", Offset = "0x1784454", VA = "0x1784454")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x17844E8", Offset = "0x17844E8", VA = "0x17844E8")]
		private static extern bool Pvr_IsBoundaryEnable();

		[PreserveSig]
		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x178457C", Offset = "0x178457C", VA = "0x178457C")]
		private static extern bool Pvr_BoundaryGetConfigured();

		[PreserveSig]
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x1784610", Offset = "0x1784610", VA = "0x1784610")]
		private static extern bool Pvr_BoundaryTestNode(int node, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x178472C", Offset = "0x178472C", VA = "0x178472C")]
		private static extern bool Pvr_BoundaryTestPoint(float x, float y, float z, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x1784870", Offset = "0x1784870", VA = "0x1784870")]
		private static extern int Pvr_BoundaryGetGeometry(out IntPtr handle, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x1784918", Offset = "0x1784918", VA = "0x1784918")]
		private static extern int Pvr_BoundaryGetDimensions(ref float x, ref float y, ref float z, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x17849DC", Offset = "0x17849DC", VA = "0x17849DC")]
		private static extern bool Pvr_BoundaryGetEnabled();

		[PreserveSig]
		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x1784A70", Offset = "0x1784A70", VA = "0x1784A70")]
		private static extern void Pvr_BoundarySetVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x1784B0C", Offset = "0x1784B0C", VA = "0x1784B0C")]
		private static extern bool Pvr_BoundaryGetVisible();

		[PreserveSig]
		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x1784BA0", Offset = "0x1784BA0", VA = "0x1784BA0")]
		private static extern bool Pvr_EnableLWRP(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x1784C44", Offset = "0x1784C44", VA = "0x1784C44")]
		private static extern bool Pvr_SetViewportSize(int w, int h);

		[PreserveSig]
		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x1784CF8", Offset = "0x1784CF8", VA = "0x1784CF8")]
		private static extern void Pvr_BoundarySetSeeThroughVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x1784D94", Offset = "0x1784D94", VA = "0x1784D94")]
		private static extern void PVR_SetCameraImageRect(int width, int height);

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x1784E40", Offset = "0x1784E40", VA = "0x1784E40")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x1784E44", Offset = "0x1784E44", VA = "0x1784E44")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x1784E48", Offset = "0x1784E48", VA = "0x1784E48")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x1784E4C", Offset = "0x1784E4C", VA = "0x1784E4C")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x1784E50", Offset = "0x1784E50", VA = "0x1784E50")]
		public static bool UPvr_BoundaryGetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x1784E54", Offset = "0x1784E54", VA = "0x1784E54")]
		public static BoundaryTestResult UPvr_BoundaryTestNode(BoundaryTrackingNode node, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x1784F98", Offset = "0x1784F98", VA = "0x1784F98")]
		public static BoundaryTestResult UPvr_BoundaryTestPoint(Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x17850E8", Offset = "0x17850E8", VA = "0x17850E8")]
		public static Vector3[] UPvr_BoundaryGetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x17852D0", Offset = "0x17852D0", VA = "0x17852D0")]
		public static Vector3 UPvr_BoundaryGetDimensions(BoundaryType boundaryType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x178532C", Offset = "0x178532C", VA = "0x178532C")]
		public static bool UPvr_BoundaryGetEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x1785330", Offset = "0x1785330", VA = "0x1785330")]
		public static void UPvr_BoundarySetVisible(bool value)
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x1785338", Offset = "0x1785338", VA = "0x1785338")]
		public static bool UPvr_BoundaryGetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x178533C", Offset = "0x178533C", VA = "0x178533C")]
		public static bool UPvr_EnableLWRP(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x1785344", Offset = "0x1785344", VA = "0x1785344")]
		public static bool UPvr_SetViewportSize(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x1785348", Offset = "0x1785348", VA = "0x1785348")]
		public static void UPvr_BoundaryGetSeeThroughData(int cameraIndex, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x1785530", Offset = "0x1785530", VA = "0x1785530")]
		public static void UPvr_BoundarySetCameraImageRect(int width, int height)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x178566C", Offset = "0x178566C", VA = "0x178566C")]
		public static void UPvr_BoundarySetSeeThroughVisible(bool value)
		{
		}
	}
	[Token(Token = "0x2000171")]
	public struct PlatformSettings
	{
		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x1983574", Offset = "0x1983574", VA = "0x1983574")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x1983800", Offset = "0x1983800", VA = "0x1983800")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x1983B90", Offset = "0x1983B90", VA = "0x1983B90")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x1983E94", Offset = "0x1983E94", VA = "0x1983E94")]
		public static int UPvr_AppEntitlementCheckExtra(string appid)
		{
			return default(int);
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x19841AC", Offset = "0x19841AC", VA = "0x19841AC")]
		public static int UPvr_KeyEntitlementCheckExtra(string publicKey)
		{
			return default(int);
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x19844C4", Offset = "0x19844C4", VA = "0x19844C4")]
		public static int UPvr_GetHmdAudioStatus()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000172")]
	public enum DeviceCommand
	{
		[Token(Token = "0x4000BE6")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x4000BE7")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x2000173")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x4000BE9")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x4000BEA")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x4000BEB")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x4000BEC")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x4000BED")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x2000174")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x4000BEE")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x198CA54", Offset = "0x198CA54", VA = "0x198CA54")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x198CB00", Offset = "0x198CB00", VA = "0x198CB00")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x198CB94", Offset = "0x198CB94", VA = "0x198CB94")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x198CC20", Offset = "0x198CC20", VA = "0x198CC20")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x198CCC4", Offset = "0x198CCC4", VA = "0x198CCC4")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x198CCC8", Offset = "0x198CCC8", VA = "0x198CCC8")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x198CCCC", Offset = "0x198CCCC", VA = "0x198CCCC")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x198CCD0", Offset = "0x198CCD0", VA = "0x198CCD0")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x198CF74", Offset = "0x198CF74", VA = "0x198CF74")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x198D1A0", Offset = "0x198D1A0", VA = "0x198D1A0")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x198D3A8", Offset = "0x198D3A8", VA = "0x198D3A8")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x198D5F8", Offset = "0x198D5F8", VA = "0x198D5F8")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x198D750", Offset = "0x198D750", VA = "0x198D750")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x198D884", Offset = "0x198D884", VA = "0x198D884")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x198DA90", Offset = "0x198DA90", VA = "0x198DA90")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x198DD74", Offset = "0x198DD74", VA = "0x198DD74")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x198DFC0", Offset = "0x198DFC0", VA = "0x198DFC0")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x198CD08", Offset = "0x198CD08", VA = "0x198CD08")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x198CF94", Offset = "0x198CF94", VA = "0x198CF94")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x198D1A4", Offset = "0x198D1A4", VA = "0x198D1A4")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x198D3AC", Offset = "0x198D3AC", VA = "0x198D3AC")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x198E1BC", Offset = "0x198E1BC", VA = "0x198E1BC")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x198E408", Offset = "0x198E408", VA = "0x198E408")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x198E604", Offset = "0x198E604", VA = "0x198E604")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x198E7F4", Offset = "0x198E7F4", VA = "0x198E7F4")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x198E9E4", Offset = "0x198E9E4", VA = "0x198E9E4")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x198EBC4", Offset = "0x198EBC4", VA = "0x198EBC4")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x198EDA4", Offset = "0x198EDA4", VA = "0x198EDA4")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x198EF88", Offset = "0x198EF88", VA = "0x198EF88")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x198EF90", Offset = "0x198EF90", VA = "0x198EF90")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x198D754", Offset = "0x198D754", VA = "0x198D754")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x198D5FC", Offset = "0x198D5FC", VA = "0x198D5FC")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000175")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000BF4")]
		TRIANGLES,
		[Token(Token = "0x4000BF5")]
		QUADS
	}
	[Token(Token = "0x2000176")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000BF7")]
		ABSORPTION,
		[Token(Token = "0x4000BF8")]
		TRANSMISSION,
		[Token(Token = "0x4000BF9")]
		SCATTERING
	}
	[Token(Token = "0x2000177")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000178")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000BFE")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000BFF")]
		public const string Tab = "    ";

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x160E708", Offset = "0x160E708", VA = "0x160E708")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB85D2C", Offset = "0xB85D2C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB85D2C", Offset = "0xB85D2C")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x160E790", Offset = "0x160E790", VA = "0x160E790")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB85D8C", Offset = "0xB85D8C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB85D8C", Offset = "0xB85D8C")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x160E828", Offset = "0x160E828", VA = "0x160E828")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB85DEC", Offset = "0xB85DEC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB85DEC", Offset = "0xB85DEC")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x160E8B0", Offset = "0x160E8B0", VA = "0x160E8B0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB85E4C", Offset = "0xB85E4C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB85E4C", Offset = "0xB85E4C")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x160E938", Offset = "0x160E938", VA = "0x160E938")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB85EAC", Offset = "0xB85EAC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB85EAC", Offset = "0xB85EAC")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class CAPI
	{
		[Token(Token = "0x2000621")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000622")]
		public enum Result
		{
			[Token(Token = "0x4002581")]
			Success = 0,
			[Token(Token = "0x4002582")]
			Failure = -1000,
			[Token(Token = "0x4002583")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4002584")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4002585")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4002586")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4002587")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4002588")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4002589")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000623")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x400258A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6002B38")]
			[Address(RVA = "0x1616EE4", Offset = "0x1616EE4", VA = "0x1616EE4")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000C00")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000C08")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x160EA38", Offset = "0x160EA38", VA = "0x160EA38")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x160EAE4", Offset = "0x160EAE4", VA = "0x160EAE4")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x160ECA0", Offset = "0x160ECA0", VA = "0x160ECA0")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x160ED80", Offset = "0x160ED80", VA = "0x160ED80")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x160EE0C", Offset = "0x160EE0C", VA = "0x160EE0C")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x160EE98", Offset = "0x160EE98", VA = "0x160EE98")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x160EF34", Offset = "0x160EF34", VA = "0x160EF34")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x160F04C", Offset = "0x160F04C", VA = "0x160F04C")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x160F0E8", Offset = "0x160F0E8", VA = "0x160F0E8")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x160F200", Offset = "0x160F200", VA = "0x160F200")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x160F29C", Offset = "0x160F29C", VA = "0x160F29C")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x160F338", Offset = "0x160F338", VA = "0x160F338")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x160F3D4", Offset = "0x160F3D4", VA = "0x160F3D4")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x160F470", Offset = "0x160F470", VA = "0x160F470")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x160F51C", Offset = "0x160F51C", VA = "0x160F51C")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x160F5C8", Offset = "0x160F5C8", VA = "0x160F5C8")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x160F674", Offset = "0x160F674", VA = "0x160F674")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x160F710", Offset = "0x160F710", VA = "0x160F710")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x160F7AC", Offset = "0x160F7AC", VA = "0x160F7AC")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x160F858", Offset = "0x160F858", VA = "0x160F858")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x160F904", Offset = "0x160F904", VA = "0x160F904")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x160F9B0", Offset = "0x160F9B0", VA = "0x160F9B0")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x160FA4C", Offset = "0x160FA4C", VA = "0x160FA4C")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x160FB10", Offset = "0x160FB10", VA = "0x160FB10")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x160FB94", Offset = "0x160FB94", VA = "0x160FB94")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x160FC50", Offset = "0x160FC50", VA = "0x160FC50")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x160FD2C", Offset = "0x160FD2C", VA = "0x160FD2C")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x160FE18", Offset = "0x160FE18", VA = "0x160FE18")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x160FEC4", Offset = "0x160FEC4", VA = "0x160FEC4")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x160FF70", Offset = "0x160FF70", VA = "0x160FF70")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x161001C", Offset = "0x161001C", VA = "0x161001C")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x16100C8", Offset = "0x16100C8", VA = "0x16100C8")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x1610174", Offset = "0x1610174", VA = "0x1610174")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x1610210", Offset = "0x1610210", VA = "0x1610210")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x161034C", Offset = "0x161034C", VA = "0x161034C")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x16102A0", Offset = "0x16102A0", VA = "0x16102A0")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x1610628", Offset = "0x1610628", VA = "0x1610628")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x1610760", Offset = "0x1610760", VA = "0x1610760")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000DA7")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x16107FC", Offset = "0x16107FC", VA = "0x16107FC")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x1610A60", Offset = "0x1610A60", VA = "0x1610A60")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x1610AFC", Offset = "0x1610AFC", VA = "0x1610AFC")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x1610C34", Offset = "0x1610C34", VA = "0x1610C34")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x1610CD0", Offset = "0x1610CD0", VA = "0x1610CD0")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x1610E08", Offset = "0x1610E08", VA = "0x1610E08")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x1610EA4", Offset = "0x1610EA4", VA = "0x1610EA4")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x1610FDC", Offset = "0x1610FDC", VA = "0x1610FDC")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x1611078", Offset = "0x1611078", VA = "0x1611078")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x16111B0", Offset = "0x16111B0", VA = "0x16111B0")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x161124C", Offset = "0x161124C", VA = "0x161124C")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x16112E8", Offset = "0x16112E8", VA = "0x16112E8")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x161139C", Offset = "0x161139C", VA = "0x161139C")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x1611438", Offset = "0x1611438", VA = "0x1611438")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x1611610", Offset = "0x1611610", VA = "0x1611610")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x161174C", Offset = "0x161174C", VA = "0x161174C")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x1611574", Offset = "0x1611574", VA = "0x1611574")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x16117E8", Offset = "0x16117E8", VA = "0x16117E8")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x1611884", Offset = "0x1611884", VA = "0x1611884")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x1611930", Offset = "0x1611930", VA = "0x1611930")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x16119CC", Offset = "0x16119CC", VA = "0x16119CC")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x1611A78", Offset = "0x1611A78", VA = "0x1611A78")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x1611B14", Offset = "0x1611B14", VA = "0x1611B14")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x1611BB0", Offset = "0x1611BB0", VA = "0x1611BB0")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x1611DF8", Offset = "0x1611DF8", VA = "0x1611DF8")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x1611EA4", Offset = "0x1611EA4", VA = "0x1611EA4")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x1612090", Offset = "0x1612090", VA = "0x1612090")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x1612144", Offset = "0x1612144", VA = "0x1612144")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x1612270", Offset = "0x1612270", VA = "0x1612270")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x161230C", Offset = "0x161230C", VA = "0x161230C")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x16123A8", Offset = "0x16123A8", VA = "0x16123A8")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x16124D0", Offset = "0x16124D0", VA = "0x16124D0")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x161256C", Offset = "0x161256C", VA = "0x161256C")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x1612694", Offset = "0x1612694", VA = "0x1612694")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x1612730", Offset = "0x1612730", VA = "0x1612730")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x16127DC", Offset = "0x16127DC", VA = "0x16127DC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x1612888", Offset = "0x1612888", VA = "0x1612888")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x1612934", Offset = "0x1612934", VA = "0x1612934")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x16129D0", Offset = "0x16129D0", VA = "0x16129D0")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x1612A74", Offset = "0x1612A74", VA = "0x1612A74")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x1612B18", Offset = "0x1612B18", VA = "0x1612B18")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x1612BB4", Offset = "0x1612BB4", VA = "0x1612BB4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x1612C50", Offset = "0x1612C50", VA = "0x1612C50")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x1612D20", Offset = "0x1612D20", VA = "0x1612D20")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x1612DCC", Offset = "0x1612DCC", VA = "0x1612DCC")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x1612E78", Offset = "0x1612E78", VA = "0x1612E78")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x1612F14", Offset = "0x1612F14", VA = "0x1612F14")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x1612FB0", Offset = "0x1612FB0", VA = "0x1612FB0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x161304C", Offset = "0x161304C", VA = "0x161304C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x1613100", Offset = "0x1613100", VA = "0x1613100")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x16131AC", Offset = "0x16131AC", VA = "0x16131AC")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x1613258", Offset = "0x1613258", VA = "0x1613258")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x1613304", Offset = "0x1613304", VA = "0x1613304")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x16133B8", Offset = "0x16133B8", VA = "0x16133B8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x161346C", Offset = "0x161346C", VA = "0x161346C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x1613508", Offset = "0x1613508", VA = "0x1613508")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x16135A4", Offset = "0x16135A4", VA = "0x16135A4")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x16136CC", Offset = "0x16136CC", VA = "0x16136CC")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x1613768", Offset = "0x1613768", VA = "0x1613768")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x1613890", Offset = "0x1613890", VA = "0x1613890")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x161392C", Offset = "0x161392C", VA = "0x161392C")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x1613A54", Offset = "0x1613A54", VA = "0x1613A54")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x1613AF0", Offset = "0x1613AF0", VA = "0x1613AF0")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x1613CB4", Offset = "0x1613CB4", VA = "0x1613CB4")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x1613F5C", Offset = "0x1613F5C", VA = "0x1613F5C")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x1613C18", Offset = "0x1613C18", VA = "0x1613C18")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x1614008", Offset = "0x1614008", VA = "0x1614008")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x16140A4", Offset = "0x16140A4", VA = "0x16140A4")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x1614150", Offset = "0x1614150", VA = "0x1614150")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x16141FC", Offset = "0x16141FC", VA = "0x16141FC")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x16142A8", Offset = "0x16142A8", VA = "0x16142A8")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x1614364", Offset = "0x1614364", VA = "0x1614364")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x1614420", Offset = "0x1614420", VA = "0x1614420")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x16144DC", Offset = "0x16144DC", VA = "0x16144DC")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x1614578", Offset = "0x1614578", VA = "0x1614578")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x1614614", Offset = "0x1614614", VA = "0x1614614")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x16146B0", Offset = "0x16146B0", VA = "0x16146B0")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x161474C", Offset = "0x161474C", VA = "0x161474C")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x16147E8", Offset = "0x16147E8", VA = "0x16147E8")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x1614928", Offset = "0x1614928", VA = "0x1614928")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x16149DC", Offset = "0x16149DC", VA = "0x16149DC")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x1614A78", Offset = "0x1614A78", VA = "0x1614A78")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x1614ADC", Offset = "0x1614ADC", VA = "0x1614ADC")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x1614BF8", Offset = "0x1614BF8", VA = "0x1614BF8")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x1614CA4", Offset = "0x1614CA4", VA = "0x1614CA4")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x1614DE8", Offset = "0x1614DE8", VA = "0x1614DE8")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x1614E94", Offset = "0x1614E94", VA = "0x1614E94")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x1614F58", Offset = "0x1614F58", VA = "0x1614F58")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x16152F8", Offset = "0x16152F8", VA = "0x16152F8")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x1615394", Offset = "0x1615394", VA = "0x1615394")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x1615448", Offset = "0x1615448", VA = "0x1615448")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x1615C18", Offset = "0x1615C18", VA = "0x1615C18")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x1615CB4", Offset = "0x1615CB4", VA = "0x1615CB4")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x160E9D0", Offset = "0x160E9D0", VA = "0x160E9D0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB85F0C", Offset = "0xB85F0C")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x1615D68", Offset = "0x1615D68", VA = "0x1615D68")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x1615E08", Offset = "0x1615E08", VA = "0x1615E08")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x1615EA4", Offset = "0x1615EA4", VA = "0x1615EA4")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x1615F40", Offset = "0x1615F40", VA = "0x1615F40")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x1615FDC", Offset = "0x1615FDC", VA = "0x1615FDC")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x1616A48", Offset = "0x1616A48", VA = "0x1616A48")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x1616AE4", Offset = "0x1616AE4", VA = "0x1616AE4")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x1616FDC", Offset = "0x1616FDC", VA = "0x1616FDC")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x1616E54", Offset = "0x1616E54", VA = "0x1616E54")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x1617068", Offset = "0x1617068", VA = "0x1617068")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x200017A")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0xB76D20", Offset = "0xB76D20")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x1D7A6B0", Offset = "0x1D7A6B0", VA = "0x1D7A6B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x1D7A6B4", Offset = "0x1D7A6B4", VA = "0x1D7A6B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x1D7A77C", Offset = "0x1D7A77C", VA = "0x1D7A77C")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x200017B")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76D6C", Offset = "0xB76D6C")]
		public bool autoRetrigger;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xB76DA4", Offset = "0xB76DA4")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76DC8", Offset = "0xB76DC8")]
		public Transform[] playPositions;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x1D71878", Offset = "0x1D71878", VA = "0x1D71878")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x1D71A00", Offset = "0x1D71A00", VA = "0x1D71A00")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x1D71BE0", Offset = "0x1D71BE0", VA = "0x1D71BE0")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x1D71A60", Offset = "0x1D71A60", VA = "0x1D71A60")]
		public void Play()
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x1D71D2C", Offset = "0x1D71D2C", VA = "0x1D71D2C")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x1D71EAC", Offset = "0x1D71EAC", VA = "0x1D71EAC")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x200017C")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000C17")]
		Default,
		[Token(Token = "0x4000C18")]
		Preload,
		[Token(Token = "0x4000C19")]
		ManualPreload
	}
	[Token(Token = "0x200017D")]
	public enum Fade
	{
		[Token(Token = "0x4000C1B")]
		In,
		[Token(Token = "0x4000C1C")]
		Out
	}
	[Serializable]
	[Token(Token = "0x200017E")]
	public class SoundGroup
	{
		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB76E00", Offset = "0xB76E00")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x1D7A590", Offset = "0x1D7A590", VA = "0x1D7A590")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x1D7A624", Offset = "0x1D7A624", VA = "0x1D7A624")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x1D78FB0", Offset = "0x1D78FB0", VA = "0x1D78FB0")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x1D790F0", Offset = "0x1D790F0", VA = "0x1D790F0")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x1D79BE4", Offset = "0x1D79BE4", VA = "0x1D79BE4")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200017F")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000624")]
		public enum Fade
		{
			[Token(Token = "0x400258C")]
			In,
			[Token(Token = "0x400258D")]
			Out
		}

		[Token(Token = "0x2000625")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB727C4", Offset = "0xB727C4")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x400258E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6002B3A")]
			[Address(RVA = "0x1D76070", Offset = "0x1D76070", VA = "0x1D76070")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6002B3B")]
			[Address(RVA = "0x1D78A68", Offset = "0x1D78A68", VA = "0x1D78A68")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000626")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB727D4", Offset = "0xB727D4")]
		private sealed class <>c
		{
			[Token(Token = "0x400258F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x6002B3D")]
			[Address(RVA = "0x1D789CC", Offset = "0x1D789CC", VA = "0x1D789CC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002B3E")]
			[Address(RVA = "0x1D789D4", Offset = "0x1D789D4", VA = "0x1D789D4")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76E2C", Offset = "0xB76E2C")]
		public bool makePersistent;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76E64", Offset = "0xB76E64")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76E9C", Offset = "0xB76E9C")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76ED4", Offset = "0xB76ED4")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76F0C", Offset = "0xB76F0C")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76F44", Offset = "0xB76F44")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76F7C", Offset = "0xB76F7C")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76FB4", Offset = "0xB76FB4")]
		public bool verboseLogging;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB76FEC", Offset = "0xB76FEC")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77024", Offset = "0xB77024")]
		public float volumeSoundFX;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB7705C", Offset = "0xB7705C")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170000AE")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0x1D71F68", Offset = "0x1D71F68", VA = "0x1D71F68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AF")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x1D7204C", Offset = "0x1D7204C", VA = "0x1D7204C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0x1D720B4", Offset = "0x1D720B4", VA = "0x1D720B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B1")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000E22")]
			[Address(RVA = "0x1D7212C", Offset = "0x1D7212C", VA = "0x1D7212C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B2")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x1D721A4", Offset = "0x1D721A4", VA = "0x1D721A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0x1D7221C", Offset = "0x1D7221C", VA = "0x1D7221C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0x1D72294", Offset = "0x1D72294", VA = "0x1D72294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000E30")]
			[Address(RVA = "0x1D7402C", Offset = "0x1D7402C", VA = "0x1D7402C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x1D7230C", Offset = "0x1D7230C", VA = "0x1D7230C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x1D72538", Offset = "0x1D72538", VA = "0x1D72538")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x1D72310", Offset = "0x1D72310", VA = "0x1D72310")]
		private void Init()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x1D73180", Offset = "0x1D73180", VA = "0x1D73180")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x1D72690", Offset = "0x1D72690", VA = "0x1D72690")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x1D737AC", Offset = "0x1D737AC", VA = "0x1D737AC")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x1D73934", Offset = "0x1D73934", VA = "0x1D73934")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x1D73AD4", Offset = "0x1D73AD4", VA = "0x1D73AD4")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x1D73BD4", Offset = "0x1D73BD4", VA = "0x1D73BD4")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x1D73C68", Offset = "0x1D73C68", VA = "0x1D73C68")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x1D72AE0", Offset = "0x1D72AE0", VA = "0x1D72AE0")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x1D73184", Offset = "0x1D73184", VA = "0x1D73184")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x1D742A8", Offset = "0x1D742A8", VA = "0x1D742A8")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x1D743A4", Offset = "0x1D743A4", VA = "0x1D743A4")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x1D744A4", Offset = "0x1D744A4", VA = "0x1D744A4")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x1D74174", Offset = "0x1D74174", VA = "0x1D74174")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x1D74624", Offset = "0x1D74624", VA = "0x1D74624")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x1D74784", Offset = "0x1D74784", VA = "0x1D74784")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x1D74940", Offset = "0x1D74940", VA = "0x1D74940")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x1D71C70", Offset = "0x1D71C70", VA = "0x1D71C70")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x1D71DF0", Offset = "0x1D71DF0", VA = "0x1D71DF0")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x1D74AF8", Offset = "0x1D74AF8", VA = "0x1D74AF8")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x1D74BC8", Offset = "0x1D74BC8", VA = "0x1D74BC8")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x1D74C70", Offset = "0x1D74C70", VA = "0x1D74C70")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x1D74D44", Offset = "0x1D74D44", VA = "0x1D74D44")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x1D74DF0", Offset = "0x1D74DF0", VA = "0x1D74DF0")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x1D74ED0", Offset = "0x1D74ED0", VA = "0x1D74ED0")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x1D759B4", Offset = "0x1D759B4", VA = "0x1D759B4")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x1D76078", Offset = "0x1D76078", VA = "0x1D76078")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x1D76258", Offset = "0x1D76258", VA = "0x1D76258")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x1D76FA4", Offset = "0x1D76FA4", VA = "0x1D76FA4")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x1D750D8", Offset = "0x1D750D8", VA = "0x1D750D8")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x1D770C8", Offset = "0x1D770C8", VA = "0x1D770C8")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x1D771B4", Offset = "0x1D771B4", VA = "0x1D771B4")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x1D772AC", Offset = "0x1D772AC", VA = "0x1D772AC")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x1D77668", Offset = "0x1D77668", VA = "0x1D77668")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x1D77870", Offset = "0x1D77870", VA = "0x1D77870")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x1D7798C", Offset = "0x1D7798C", VA = "0x1D7798C")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x1D77B60", Offset = "0x1D77B60", VA = "0x1D77B60")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x1D77C3C", Offset = "0x1D77C3C", VA = "0x1D77C3C")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x1D77D78", Offset = "0x1D77D78", VA = "0x1D77D78")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x1D7816C", Offset = "0x1D7816C", VA = "0x1D7816C")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000C44")]
		None = -1,
		[Token(Token = "0x4000C45")]
		Reserved,
		[Token(Token = "0x4000C46")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000181")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x1D78B68", Offset = "0x1D78B68", VA = "0x1D78B68")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000182")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x1D78B0C", Offset = "0x1D78B0C", VA = "0x1D78B0C")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x2000627")]
		public enum FadeState
		{
			[Token(Token = "0x4002592")]
			Null,
			[Token(Token = "0x4002593")]
			FadingIn,
			[Token(Token = "0x4002594")]
			FadingOut,
			[Token(Token = "0x4002595")]
			Ducking
		}

		[Token(Token = "0x2000628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB727E4", Offset = "0xB727E4")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002599")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x400259A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x400259B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170004B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B42")]
				[Address(RVA = "0x1D795D0", Offset = "0x1D795D0", VA = "0x1D795D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B44")]
				[Address(RVA = "0x1D7963C", Offset = "0x1D7963C", VA = "0x1D7963C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B3F")]
			[Address(RVA = "0x1D792A0", Offset = "0x1D792A0", VA = "0x1D792A0")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6002B40")]
			[Address(RVA = "0x1D794E8", Offset = "0x1D794E8", VA = "0x1D794E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B41")]
			[Address(RVA = "0x1D794EC", Offset = "0x1D794EC", VA = "0x1D794EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B43")]
			[Address(RVA = "0x1D795D8", Offset = "0x1D795D8", VA = "0x1D795D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000629")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB727F4", Offset = "0xB727F4")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400259C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400259D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400259E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400259F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x40025A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x40025A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x40025A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x40025A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40025A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170004B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B48")]
				[Address(RVA = "0x1D79A94", Offset = "0x1D79A94", VA = "0x1D79A94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B4A")]
				[Address(RVA = "0x1D79B00", Offset = "0x1D79B00", VA = "0x1D79B00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B45")]
			[Address(RVA = "0x1D79478", Offset = "0x1D79478", VA = "0x1D79478")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6002B46")]
			[Address(RVA = "0x1D79924", Offset = "0x1D79924", VA = "0x1D79924", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B47")]
			[Address(RVA = "0x1D79928", Offset = "0x1D79928", VA = "0x1D79928", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B49")]
			[Address(RVA = "0x1D79A9C", Offset = "0x1D79A9C", VA = "0x1D79A9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200062A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72804", Offset = "0xB72804")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x40025A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x40025A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x40025AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40025AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x40025AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x40025AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x40025AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x40025AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x40025B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170004B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B4E")]
				[Address(RVA = "0x1D798B0", Offset = "0x1D798B0", VA = "0x1D798B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B50")]
				[Address(RVA = "0x1D7991C", Offset = "0x1D7991C", VA = "0x1D7991C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B4B")]
			[Address(RVA = "0x1D794A4", Offset = "0x1D794A4", VA = "0x1D794A4")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6002B4C")]
			[Address(RVA = "0x1D79644", Offset = "0x1D79644", VA = "0x1D79644", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B4D")]
			[Address(RVA = "0x1D79648", Offset = "0x1D79648", VA = "0x1D79648", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0x1D798B8", Offset = "0x1D798B8", VA = "0x1D798B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170000B6")]
		public float volume
		{
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x1D76F88", Offset = "0x1D76F88", VA = "0x1D76F88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x1D78C08", Offset = "0x1D78C08", VA = "0x1D78C08")]
			set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		public float pitch
		{
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x1D78C24", Offset = "0x1D78C24", VA = "0x1D78C24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0x1D78C40", Offset = "0x1D78C40", VA = "0x1D78C40")]
			set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public AudioClip clip
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x1D78C5C", Offset = "0x1D78C5C", VA = "0x1D78C5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x1D78C78", Offset = "0x1D78C78", VA = "0x1D78C78")]
			set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public float time
		{
			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0x1D78C94", Offset = "0x1D78C94", VA = "0x1D78C94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0x1D74EB4", Offset = "0x1D74EB4", VA = "0x1D74EB4")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public float length
		{
			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0x1D78CB0", Offset = "0x1D78CB0", VA = "0x1D78CB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000BB")]
		public bool loop
		{
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x1D78D68", Offset = "0x1D78D68", VA = "0x1D78D68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0x1D78D84", Offset = "0x1D78D84", VA = "0x1D78D84")]
			set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public bool mute
		{
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x1D78DA4", Offset = "0x1D78DA4", VA = "0x1D78DA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E60")]
			[Address(RVA = "0x1D78DC0", Offset = "0x1D78DC0", VA = "0x1D78DC0")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0x1D78DE0", Offset = "0x1D78DE0", VA = "0x1D78DE0")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000E62")]
			[Address(RVA = "0x1D78DFC", Offset = "0x1D78DFC", VA = "0x1D78DFC")]
			set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public bool isPlaying
		{
			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x1D78E18", Offset = "0x1D78E18", VA = "0x1D78E18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x1D78E34", Offset = "0x1D78E34", VA = "0x1D78E34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x1D76F74", Offset = "0x1D76F74", VA = "0x1D76F74")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x1D79040", Offset = "0x1D79040", VA = "0x1D79040")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x1D772A4", Offset = "0x1D772A4", VA = "0x1D772A4")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x1D79048", Offset = "0x1D79048", VA = "0x1D79048")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x1D79050", Offset = "0x1D79050", VA = "0x1D79050")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x1D77AB8", Offset = "0x1D77AB8", VA = "0x1D77AB8")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x1D74248", Offset = "0x1D74248", VA = "0x1D74248")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x1D79058", Offset = "0x1D79058", VA = "0x1D79058")]
		public void Play()
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x1D790B8", Offset = "0x1D790B8", VA = "0x1D790B8")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x1D74094", Offset = "0x1D74094", VA = "0x1D74094")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x1D79180", Offset = "0x1D79180", VA = "0x1D79180")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x1D7756C", Offset = "0x1D7756C", VA = "0x1D7756C")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x1D777B8", Offset = "0x1D777B8", VA = "0x1D777B8")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x1D745E4", Offset = "0x1D745E4", VA = "0x1D745E4")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x1D791E0", Offset = "0x1D791E0", VA = "0x1D791E0")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x1D7920C", Offset = "0x1D7920C", VA = "0x1D7920C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB85F70", Offset = "0xB85F70")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x1D792CC", Offset = "0x1D792CC", VA = "0x1D792CC")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x1D74A04", Offset = "0x1D74A04", VA = "0x1D74A04")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x1D74A80", Offset = "0x1D74A80", VA = "0x1D74A80")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x1D748A8", Offset = "0x1D748A8", VA = "0x1D748A8")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x1D746E8", Offset = "0x1D746E8", VA = "0x1D746E8")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x1D79344", Offset = "0x1D79344", VA = "0x1D79344")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB85FD4", Offset = "0xB85FD4")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x1D793CC", Offset = "0x1D793CC", VA = "0x1D793CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB86038", Offset = "0xB86038")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x1D794D0", Offset = "0x1D794D0", VA = "0x1D794D0")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000C5D")]
		Random,
		[Token(Token = "0x4000C5E")]
		Sequential
	}
	[Token(Token = "0x2000185")]
	public enum FreqHint
	{
		[Token(Token = "0x4000C60")]
		None,
		[Token(Token = "0x4000C61")]
		Wide,
		[Token(Token = "0x4000C62")]
		Narrow
	}
	[Token(Token = "0x2000186")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000C64")]
		VeryLow = -2,
		[Token(Token = "0x4000C65")]
		Low,
		[Token(Token = "0x4000C66")]
		Default,
		[Token(Token = "0x4000C67")]
		High,
		[Token(Token = "0x4000C68")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000187")]
	public class OSPProps
	{
		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77144", Offset = "0xB77144")]
		public bool enableSpatialization;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB7717C", Offset = "0xB7717C")]
		public bool useFastOverride;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB771B4", Offset = "0xB771B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB771B4", Offset = "0xB771B4")]
		public float gain;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77208", Offset = "0xB77208")]
		public bool enableInvSquare;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77240", Offset = "0xB77240")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB77240", Offset = "0xB77240")]
		public float volumetric;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77298", Offset = "0xB77298")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xB77298", Offset = "0xB77298")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x1D78B78", Offset = "0x1D78B78", VA = "0x1D78B78")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000188")]
	public class SoundFX
	{
		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB772F8", Offset = "0xB772F8")]
		public string name;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77330", Offset = "0xB77330")]
		public SoundFXNext playback;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77368", Offset = "0xB77368")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB77368", Offset = "0xB77368")]
		public float volume;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB773BC", Offset = "0xB773BC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xB773BC", Offset = "0xB773BC")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77418", Offset = "0xB77418")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xB77418", Offset = "0xB77418")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77478", Offset = "0xB77478")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB774B0", Offset = "0xB774B0")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB774E8", Offset = "0xB774E8")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77520", Offset = "0xB77520")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB77520", Offset = "0xB77520")]
		public float spread;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77578", Offset = "0xB77578")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB77578", Offset = "0xB77578")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB775CC", Offset = "0xB775CC")]
		public SoundPriority priority;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77604", Offset = "0xB77604")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xB77604", Offset = "0xB77604")]
		public Vector2 delay;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77660", Offset = "0xB77660")]
		public bool looping;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77698", Offset = "0xB77698")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170000BF")]
		public int Length
		{
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x1D79B08", Offset = "0x1D79B08", VA = "0x1D79B08")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C0")]
		public bool IsValid
		{
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x1D79B28", Offset = "0x1D79B28", VA = "0x1D79B28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C1")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000E81")]
			[Address(RVA = "0x1D79BD4", Offset = "0x1D79BD4", VA = "0x1D79BD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x1D79BDC", Offset = "0x1D79BDC", VA = "0x1D79BDC")]
			set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000E83")]
			[Address(RVA = "0x1D76E78", Offset = "0x1D76E78", VA = "0x1D76E78")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000C3")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x1D76EAC", Offset = "0x1D76EAC", VA = "0x1D76EAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x1D7847C", Offset = "0x1D7847C", VA = "0x1D7847C")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x1D76DA0", Offset = "0x1D76DA0", VA = "0x1D76DA0")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x1D76ED0", Offset = "0x1D76ED0", VA = "0x1D76ED0")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x1D76E84", Offset = "0x1D76E84", VA = "0x1D76E84")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x1D79C04", Offset = "0x1D79C04", VA = "0x1D79C04")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x1D76EC4", Offset = "0x1D76EC4", VA = "0x1D76EC4")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x1D79D0C", Offset = "0x1D79D0C", VA = "0x1D79D0C")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x1D79DE8", Offset = "0x1D79DE8", VA = "0x1D79DE8")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x1D79EFC", Offset = "0x1D79EFC", VA = "0x1D79EFC")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x1D79F88", Offset = "0x1D79F88", VA = "0x1D79F88")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x1D7A01C", Offset = "0x1D7A01C", VA = "0x1D7A01C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x1D7A0A8", Offset = "0x1D7A0A8", VA = "0x1D7A0A8")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x1D7A134", Offset = "0x1D7A134", VA = "0x1D7A134")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000189")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170000C4")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0x1D7A1AC", Offset = "0x1D7A1AC", VA = "0x1D7A1AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		public string name
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x1D7A2A0", Offset = "0x1D7A2A0", VA = "0x1D7A2A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x1D7A2A8", Offset = "0x1D7A2A8", VA = "0x1D7A2A8")]
			set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		public int Length
		{
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0x1D7A2B0", Offset = "0x1D7A2B0", VA = "0x1D7A2B0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C7")]
		public bool IsValid
		{
			[Token(Token = "0x6000E96")]
			[Address(RVA = "0x1D7A2F8", Offset = "0x1D7A2F8", VA = "0x1D7A2F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x1D7A1DC", Offset = "0x1D7A1DC", VA = "0x1D7A1DC")]
		private void Init()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x1D7A330", Offset = "0x1D7A330", VA = "0x1D7A330")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x1D7A368", Offset = "0x1D7A368", VA = "0x1D7A368")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x1D7A3A8", Offset = "0x1D7A3A8", VA = "0x1D7A3A8")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x1D71BF0", Offset = "0x1D71BF0", VA = "0x1D71BF0")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x1D7A3F0", Offset = "0x1D7A3F0", VA = "0x1D7A3F0")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x1D7A430", Offset = "0x1D7A430", VA = "0x1D7A430")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x1D7A480", Offset = "0x1D7A480", VA = "0x1D7A480")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x1D7A4B8", Offset = "0x1D7A4B8", VA = "0x1D7A4B8")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x1D7A4F8", Offset = "0x1D7A4F8", VA = "0x1D7A4F8")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x1D7A530", Offset = "0x1D7A530", VA = "0x1D7A530")]
		public SoundFXRef()
		{
		}
	}
}
namespace WaveVR_Log
{
	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB710A8", Offset = "0xB710A8")]
	public class Log
	{
		[Token(Token = "0x200062B")]
		public class EnterAndExit : IDisposable
		{
			[Token(Token = "0x40025B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string tag;

			[Token(Token = "0x40025B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string message;

			[Token(Token = "0x40025B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string enter;

			[Token(Token = "0x40025B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string exit;

			[Token(Token = "0x40025B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool logInEditor;

			[Token(Token = "0x6002B51")]
			[Address(RVA = "0xFC8484", Offset = "0xFC8484", VA = "0xFC8484")]
			public EnterAndExit(string tag, string message, string postfixEnter, string postfixExit, bool logInEditor = false)
			{
			}

			[Token(Token = "0x6002B52")]
			[Address(RVA = "0xFC87D4", Offset = "0xFC87D4", VA = "0xFC87D4", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x200062C")]
		public class PeriodLog
		{
			[Token(Token = "0x20008EC")]
			public delegate string StringProcessDelegate();

			[Token(Token = "0x40025B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float interval;

			[Token(Token = "0x40025B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float lastTime;

			[Token(Token = "0x40025B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool print;

			[Token(Token = "0x6002B53")]
			[Address(RVA = "0xFC8794", Offset = "0xFC8794", VA = "0xFC8794")]
			public PeriodLog()
			{
			}

			[Token(Token = "0x6002B54")]
			[Address(RVA = "0xFC8858", Offset = "0xFC8858", VA = "0xFC8858")]
			public void check()
			{
			}

			[Token(Token = "0x6002B55")]
			[Address(RVA = "0xFC889C", Offset = "0xFC889C", VA = "0xFC889C")]
			public void d(string tag, string message, bool logInEditor = false)
			{
			}

			[Token(Token = "0x6002B56")]
			[Address(RVA = "0xFC8930", Offset = "0xFC8930", VA = "0xFC8930")]
			public void d(string tag, StringProcessDelegate strDelegate, bool logInEditor = false)
			{
			}
		}

		[Token(Token = "0x4000C85")]
		private const int ANDROID_LOG_VERBOSE = 2;

		[Token(Token = "0x4000C86")]
		private const int ANDROID_LOG_DEBUG = 3;

		[Token(Token = "0x4000C87")]
		private const int ANDROID_LOG_INFO = 4;

		[Token(Token = "0x4000C88")]
		private const int ANDROID_LOG_WARN = 5;

		[Token(Token = "0x4000C89")]
		private const int ANDROID_LOG_ERROR = 6;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PeriodLog gpl;

		[PreserveSig]
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xFC8110", Offset = "0xFC8110", VA = "0xFC8110")]
		internal static extern int __android_log_print(int prio, string tag, string fmt, IntPtr ptr);

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xFC8200", Offset = "0xFC8200", VA = "0xFC8200")]
		public static void d(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xFC827C", Offset = "0xFC827C", VA = "0xFC827C")]
		public static void i(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xFC82F8", Offset = "0xFC82F8", VA = "0xFC82F8")]
		public static void w(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xFC8374", Offset = "0xFC8374", VA = "0xFC8374")]
		public static void e(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xFC83F0", Offset = "0xFC83F0", VA = "0xFC83F0")]
		public static EnterAndExit ee(string message, bool logInEditor = false)
		{
			return null;
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xFC8550", Offset = "0xFC8550", VA = "0xFC8550")]
		public static EnterAndExit ee(string tag, string message, bool logInEditor = false)
		{
			return null;
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xFC85E0", Offset = "0xFC85E0", VA = "0xFC85E0")]
		public static EnterAndExit ee(string tag, string postfixEnter, string postfixExit, bool logInEditor = false)
		{
			return null;
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xFC8674", Offset = "0xFC8674", VA = "0xFC8674")]
		public static EnterAndExit ee(string tag, string message, string postfixEnter, string postfixExit, bool logInEditor = false)
		{
			return null;
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xFC8704", Offset = "0xFC8704", VA = "0xFC8704")]
		public Log()
		{
		}
	}
}
namespace WVR_Log
{
	[Token(Token = "0x200018B")]
	public class Log
	{
		[Token(Token = "0x200062D")]
		public class EnterAndExit : IDisposable
		{
			[Token(Token = "0x40025B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string tag;

			[Token(Token = "0x40025BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string message;

			[Token(Token = "0x40025BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string enter;

			[Token(Token = "0x40025BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string exit;

			[Token(Token = "0x40025BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool logInEditor;

			[Token(Token = "0x6002B57")]
			[Address(RVA = "0x1804AF0", Offset = "0x1804AF0", VA = "0x1804AF0")]
			public EnterAndExit(string tag, string message, string postfixEnter, string postfixExit, bool logInEditor = false)
			{
			}

			[Token(Token = "0x6002B58")]
			[Address(RVA = "0x1804E80", Offset = "0x1804E80", VA = "0x1804E80", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x200062E")]
		public class PeriodLog
		{
			[Token(Token = "0x20008ED")]
			public delegate string StringProcessDelegate();

			[Token(Token = "0x40025BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float interval;

			[Token(Token = "0x40025BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float lastTime;

			[Token(Token = "0x40025C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82CB0", Offset = "0xB82CB0")]
			private bool <Print>k__BackingField;

			[Token(Token = "0x170004B7")]
			public bool Print
			{
				[Token(Token = "0x6002B59")]
				[Address(RVA = "0x1804F04", Offset = "0x1804F04", VA = "0x1804F04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90810", Offset = "0xB90810")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002B5A")]
				[Address(RVA = "0x1804F0C", Offset = "0x1804F0C", VA = "0x1804F0C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90820", Offset = "0xB90820")]
				private set
				{
				}
			}

			[Token(Token = "0x6002B5B")]
			[Address(RVA = "0x1804E48", Offset = "0x1804E48", VA = "0x1804E48")]
			public PeriodLog()
			{
			}

			[Token(Token = "0x6002B5C")]
			[Address(RVA = "0x1804F18", Offset = "0x1804F18", VA = "0x1804F18")]
			public void check()
			{
			}

			[Token(Token = "0x6002B5D")]
			[Address(RVA = "0x1804F5C", Offset = "0x1804F5C", VA = "0x1804F5C")]
			public void d(string tag, string message, bool logInEditor = false)
			{
			}

			[Token(Token = "0x6002B5E")]
			[Address(RVA = "0x1804FF0", Offset = "0x1804FF0", VA = "0x1804FF0")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB90830", Offset = "0xB90830")]
			public void d(string tag, StringProcessDelegate strDelegate, bool logInEditor = false)
			{
			}
		}

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool EnableDebugLog;

		[Token(Token = "0x4000C8C")]
		private const int LOG_VERBOSE = 2;

		[Token(Token = "0x4000C8D")]
		private const int LOG_DEBUG = 3;

		[Token(Token = "0x4000C8E")]
		private const int LOG_INFO = 4;

		[Token(Token = "0x4000C8F")]
		private const int LOG_WARN = 5;

		[Token(Token = "0x4000C90")]
		private const int LOG_ERROR = 6;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int SBLength;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly StringBuilder SB;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static PeriodLog gpl;

		[Token(Token = "0x170000C8")]
		public static StringBuilder CSB
		{
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x1804714", Offset = "0x1804714", VA = "0x1804714")]
			get
			{
				return null;
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x1804788", Offset = "0x1804788", VA = "0x1804788")]
		internal static extern int __log_print(int prio, string tag, string fmt, IntPtr ptr);

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x1804878", Offset = "0x1804878", VA = "0x1804878")]
		public static void v(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x18048F4", Offset = "0x18048F4", VA = "0x18048F4")]
		public static void d(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x17FFB60", Offset = "0x17FFB60", VA = "0x17FFB60")]
		public static void i(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x1804970", Offset = "0x1804970", VA = "0x1804970")]
		public static void w(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x18049EC", Offset = "0x18049EC", VA = "0x18049EC")]
		public static void e(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x1804A68", Offset = "0x1804A68", VA = "0x1804A68")]
		public static EnterAndExit ee(string message)
		{
			return null;
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x1804BBC", Offset = "0x1804BBC", VA = "0x1804BBC")]
		public static EnterAndExit ee(string tag, string message)
		{
			return null;
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x1804C48", Offset = "0x1804C48", VA = "0x1804C48")]
		public static EnterAndExit ee(string tag, string postfixEnter, string postfixExit)
		{
			return null;
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x1804CD0", Offset = "0x1804CD0", VA = "0x1804CD0")]
		public static EnterAndExit ee(string tag, string message, string postfixEnter, string postfixExit)
		{
			return null;
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x1804D5C", Offset = "0x1804D5C", VA = "0x1804D5C")]
		public Log()
		{
		}
	}
}
namespace wvr
{
	[Token(Token = "0x200018C")]
	public enum WVR_AppType
	{
		[Token(Token = "0x4000C95")]
		WVR_AppType_VRContent = 1,
		[Token(Token = "0x4000C96")]
		WVR_AppType_NonVRContent
	}
	[Token(Token = "0x200018D")]
	public enum WVR_InitError
	{
		[Token(Token = "0x4000C98")]
		WVR_InitError_None,
		[Token(Token = "0x4000C99")]
		WVR_InitError_Unknown,
		[Token(Token = "0x4000C9A")]
		WVR_InitError_NotInitialized
	}
	[Token(Token = "0x200018E")]
	public enum WVR_EventType
	{
		[Token(Token = "0x4000C9C")]
		WVR_EventType_Quit = 1000,
		[Token(Token = "0x4000C9D")]
		WVR_EventType_SystemInteractionModeChanged = 1001,
		[Token(Token = "0x4000C9E")]
		WVR_EventType_SystemGazeTriggerTypeChanged = 1002,
		[Token(Token = "0x4000C9F")]
		WVR_EventType_TrackingModeChanged = 1003,
		[Token(Token = "0x4000CA0")]
		WVR_EventType_RecommendedQuality_Lower = 1004,
		[Token(Token = "0x4000CA1")]
		WVR_EventType_RecommendedQuality_Higher = 1005,
		[Token(Token = "0x4000CA2")]
		WVR_EventType_HandGesture_Changed = 1006,
		[Token(Token = "0x4000CA3")]
		WVR_EventType_HandGesture_Abnormal = 1007,
		[Token(Token = "0x4000CA4")]
		WVR_EventType_HandTracking_Abnormal = 1008,
		[Token(Token = "0x4000CA5")]
		WVR_EventType_DeviceConnected = 2000,
		[Token(Token = "0x4000CA6")]
		WVR_EventType_DeviceDisconnected = 2001,
		[Token(Token = "0x4000CA7")]
		WVR_EventType_DeviceStatusUpdate = 2002,
		[Token(Token = "0x4000CA8")]
		WVR_EventType_DeviceSuspend = 2003,
		[Token(Token = "0x4000CA9")]
		WVR_EventType_DeviceResume = 2004,
		[Token(Token = "0x4000CAA")]
		WVR_EventType_IpdChanged = 2005,
		[Token(Token = "0x4000CAB")]
		WVR_EventType_DeviceRoleChanged = 2006,
		[Token(Token = "0x4000CAC")]
		WVR_EventType_BatteryStatusUpdate = 2007,
		[Token(Token = "0x4000CAD")]
		WVR_EventType_ChargeStatusUpdate = 2008,
		[Token(Token = "0x4000CAE")]
		WVR_EventType_DeviceErrorStatusUpdate = 2009,
		[Token(Token = "0x4000CAF")]
		WVR_EventType_BatteryTemperatureStatusUpdate = 2010,
		[Token(Token = "0x4000CB0")]
		WVR_EventType_RecenterSuccess = 2011,
		[Token(Token = "0x4000CB1")]
		WVR_EventType_RecenterFail = 2012,
		[Token(Token = "0x4000CB2")]
		WVR_EventType_RecenterSuccess3DoF = 2013,
		[Token(Token = "0x4000CB3")]
		WVR_EventType_RecenterFail3DoF = 2014,
		[Token(Token = "0x4000CB4")]
		WVR_EventType_PassThroughOverlayShownBySystem = 2100,
		[Token(Token = "0x4000CB5")]
		WVR_EventType_PassThroughOverlayHiddenBySystem = 2101,
		[Token(Token = "0x4000CB6")]
		WVR_EventType_ButtonPressed = 3000,
		[Token(Token = "0x4000CB7")]
		WVR_EventType_ButtonUnpressed = 3001,
		[Token(Token = "0x4000CB8")]
		WVR_EventType_TouchTapped = 3002,
		[Token(Token = "0x4000CB9")]
		WVR_EventType_TouchUntapped = 3003,
		[Token(Token = "0x4000CBA")]
		WVR_EventType_LeftToRightSwipe = 3004,
		[Token(Token = "0x4000CBB")]
		WVR_EventType_RightToLeftSwipe = 3005,
		[Token(Token = "0x4000CBC")]
		WVR_EventType_DownToUpSwipe = 3006,
		[Token(Token = "0x4000CBD")]
		WVR_EventType_UpToDownSwipe = 3007
	}
	[Token(Token = "0x200018F")]
	public enum WVR_PeripheralQuality
	{
		[Token(Token = "0x4000CBF")]
		Low,
		[Token(Token = "0x4000CC0")]
		Middle,
		[Token(Token = "0x4000CC1")]
		High
	}
	[Token(Token = "0x2000190")]
	public enum WVR_DeviceType
	{
		[Token(Token = "0x4000CC3")]
		WVR_DeviceType_Invalid,
		[Token(Token = "0x4000CC4")]
		WVR_DeviceType_HMD,
		[Token(Token = "0x4000CC5")]
		WVR_DeviceType_Controller_Right,
		[Token(Token = "0x4000CC6")]
		WVR_DeviceType_Controller_Left
	}
	[Token(Token = "0x2000191")]
	public enum WVR_RecenterType
	{
		[Token(Token = "0x4000CC8")]
		WVR_RecenterType_Disabled,
		[Token(Token = "0x4000CC9")]
		WVR_RecenterType_YawOnly,
		[Token(Token = "0x4000CCA")]
		WVR_RecenterType_YawAndPosition,
		[Token(Token = "0x4000CCB")]
		WVR_RecenterType_RotationAndPosition
	}
	[Token(Token = "0x2000192")]
	public enum WVR_InputType
	{
		[Token(Token = "0x4000CCD")]
		WVR_InputType_Button = 1,
		[Token(Token = "0x4000CCE")]
		WVR_InputType_Touch = 2,
		[Token(Token = "0x4000CCF")]
		WVR_InputType_Analog = 4
	}
	[Token(Token = "0x2000193")]
	public enum WVR_BatteryStatus
	{
		[Token(Token = "0x4000CD1")]
		WVR_BatteryStatus_Unknown,
		[Token(Token = "0x4000CD2")]
		WVR_BatteryStatus_Normal,
		[Token(Token = "0x4000CD3")]
		WVR_BatteryStatus_Low,
		[Token(Token = "0x4000CD4")]
		WVR_BatteryStatus_UltraLow
	}
	[Token(Token = "0x2000194")]
	public enum WVR_ChargeStatus
	{
		[Token(Token = "0x4000CD6")]
		WVR_ChargeStatus_Unknown,
		[Token(Token = "0x4000CD7")]
		WVR_ChargeStatus_Discharging,
		[Token(Token = "0x4000CD8")]
		WVR_ChargeStatus_Charging,
		[Token(Token = "0x4000CD9")]
		WVR_ChargeStatus_Full
	}
	[Token(Token = "0x2000195")]
	public enum WVR_BatteryTemperatureStatus
	{
		[Token(Token = "0x4000CDB")]
		WVR_BatteryTemperature_Unknown,
		[Token(Token = "0x4000CDC")]
		WVR_BatteryTemperature_Normal,
		[Token(Token = "0x4000CDD")]
		WVR_BatteryTemperature_Overheat,
		[Token(Token = "0x4000CDE")]
		WVR_BatteryTemperature_UltraOverheat
	}
	[Token(Token = "0x2000196")]
	public enum WVR_DeviceErrorStatus
	{
		[Token(Token = "0x4000CE0")]
		WVR_DeviceErrorStatus_None = 0,
		[Token(Token = "0x4000CE1")]
		WVR_DeviceErrorStatus_BatteryOverheat = 1,
		[Token(Token = "0x4000CE2")]
		WVR_DeviceErrorStatus_BatteryOverheatRestore = 2,
		[Token(Token = "0x4000CE3")]
		WVR_DeviceErrorStatus_BatteryOvervoltage = 4,
		[Token(Token = "0x4000CE4")]
		WVR_DeviceErrorStatus_BatteryOvervoltageRestore = 8,
		[Token(Token = "0x4000CE5")]
		WVR_DeviceErrorStatus_DeviceConnectFail = 0x10,
		[Token(Token = "0x4000CE6")]
		WVR_DeviceErrorStatus_DeviceConnectRestore = 0x20,
		[Token(Token = "0x4000CE7")]
		WVR_DeviceErrorStatus_DeviceLostTracking = 0x40,
		[Token(Token = "0x4000CE8")]
		WVR_DeviceErrorStatus_DeviceLostTrackingRestore = 0x80,
		[Token(Token = "0x4000CE9")]
		WVR_DeviceErrorStatus_ChargeFail = 0x100,
		[Token(Token = "0x4000CEA")]
		WVR_DeviceErrorStatus_ChargeRestore = 0x200
	}
	[Token(Token = "0x2000197")]
	public enum WVR_DeviceErrorState
	{
		[Token(Token = "0x4000CEC")]
		WVR_DeviceErrorState_None,
		[Token(Token = "0x4000CED")]
		WVR_DeviceErrorState_BatteryOverheat,
		[Token(Token = "0x4000CEE")]
		WVR_DeviceErrorState_BatteryOvervoltage,
		[Token(Token = "0x4000CEF")]
		WVR_DeviceErrorState_DeviceConnectFail,
		[Token(Token = "0x4000CF0")]
		WVR_DeviceErrorState_DeviceLostTracking,
		[Token(Token = "0x4000CF1")]
		WVR_DeviceErrorState_ChargeFail
	}
	[Token(Token = "0x2000198")]
	public enum WVR_InputId
	{
		[Token(Token = "0x4000CF3")]
		WVR_InputId_0 = 0,
		[Token(Token = "0x4000CF4")]
		WVR_InputId_1 = 1,
		[Token(Token = "0x4000CF5")]
		WVR_InputId_2 = 2,
		[Token(Token = "0x4000CF6")]
		WVR_InputId_3 = 3,
		[Token(Token = "0x4000CF7")]
		WVR_InputId_4 = 4,
		[Token(Token = "0x4000CF8")]
		WVR_InputId_5 = 5,
		[Token(Token = "0x4000CF9")]
		WVR_InputId_6 = 6,
		[Token(Token = "0x4000CFA")]
		WVR_InputId_7 = 7,
		[Token(Token = "0x4000CFB")]
		WVR_InputId_8 = 8,
		[Token(Token = "0x4000CFC")]
		WVR_InputId_9 = 9,
		[Token(Token = "0x4000CFD")]
		WVR_InputId_14 = 14,
		[Token(Token = "0x4000CFE")]
		WVR_InputId_15 = 15,
		[Token(Token = "0x4000CFF")]
		WVR_InputId_16 = 16,
		[Token(Token = "0x4000D00")]
		WVR_InputId_17 = 17,
		[Token(Token = "0x4000D01")]
		WVR_InputId_18 = 18,
		[Token(Token = "0x4000D02")]
		WVR_InputId_Alias1_System = 0,
		[Token(Token = "0x4000D03")]
		WVR_InputId_Alias1_Menu = 1,
		[Token(Token = "0x4000D04")]
		WVR_InputId_Alias1_Grip = 2,
		[Token(Token = "0x4000D05")]
		WVR_InputId_Alias1_DPad_Left = 3,
		[Token(Token = "0x4000D06")]
		WVR_InputId_Alias1_DPad_Up = 4,
		[Token(Token = "0x4000D07")]
		WVR_InputId_Alias1_DPad_Right = 5,
		[Token(Token = "0x4000D08")]
		WVR_InputId_Alias1_DPad_Down = 6,
		[Token(Token = "0x4000D09")]
		WVR_InputId_Alias1_Volume_Up = 7,
		[Token(Token = "0x4000D0A")]
		WVR_InputId_Alias1_Volume_Down = 8,
		[Token(Token = "0x4000D0B")]
		WVR_InputId_Alias1_Digital_Trigger = 9,
		[Token(Token = "0x4000D0C")]
		WVR_InputId_Alias1_Back = 14,
		[Token(Token = "0x4000D0D")]
		WVR_InputId_Alias1_Enter = 15,
		[Token(Token = "0x4000D0E")]
		WVR_InputId_Alias1_Touchpad = 16,
		[Token(Token = "0x4000D0F")]
		WVR_InputId_Alias1_Trigger = 17,
		[Token(Token = "0x4000D10")]
		WVR_InputId_Alias1_Thumbstick = 18,
		[Token(Token = "0x4000D11")]
		WVR_InputId_Max = 32
	}
	[Token(Token = "0x2000199")]
	public enum WVR_AnalogType
	{
		[Token(Token = "0x4000D13")]
		WVR_AnalogType_None,
		[Token(Token = "0x4000D14")]
		WVR_AnalogType_2D,
		[Token(Token = "0x4000D15")]
		WVR_AnalogType_1D
	}
	[Token(Token = "0x200019A")]
	public enum WVR_Intensity
	{
		[Token(Token = "0x4000D17")]
		WVR_Intensity_Weak = 1,
		[Token(Token = "0x4000D18")]
		WVR_Intensity_Light,
		[Token(Token = "0x4000D19")]
		WVR_Intensity_Normal,
		[Token(Token = "0x4000D1A")]
		WVR_Intensity_Strong,
		[Token(Token = "0x4000D1B")]
		WVR_Intensity_Severe
	}
	[Token(Token = "0x200019B")]
	public enum WVR_PoseOriginModel
	{
		[Token(Token = "0x4000D1D")]
		WVR_PoseOriginModel_OriginOnHead,
		[Token(Token = "0x4000D1E")]
		WVR_PoseOriginModel_OriginOnGround,
		[Token(Token = "0x4000D1F")]
		WVR_PoseOriginModel_OriginOnTrackingObserver,
		[Token(Token = "0x4000D20")]
		WVR_PoseOriginModel_OriginOnHead_3DoF
	}
	[Token(Token = "0x200019C")]
	public enum WVR_ArenaVisible
	{
		[Token(Token = "0x4000D22")]
		WVR_ArenaVisible_Auto,
		[Token(Token = "0x4000D23")]
		WVR_ArenaVisible_ForceOn,
		[Token(Token = "0x4000D24")]
		WVR_ArenaVisible_ForceOff
	}
	[Token(Token = "0x200019D")]
	public enum WVR_GraphicsApiType
	{
		[Token(Token = "0x4000D26")]
		WVR_GraphicsApiType_OpenGL = 1
	}
	[Token(Token = "0x200019E")]
	public enum WVR_ScreenshotMode
	{
		[Token(Token = "0x4000D28")]
		WVR_ScreenshotMode_Default,
		[Token(Token = "0x4000D29")]
		WVR_ScreenshotMode_Raw,
		[Token(Token = "0x4000D2A")]
		WVR_ScreenshotMode_Distorted
	}
	[Token(Token = "0x200019F")]
	public enum WVR_SubmitError
	{
		[Token(Token = "0x4000D2C")]
		WVR_SubmitError_None = 0,
		[Token(Token = "0x4000D2D")]
		WVR_SubmitError_InvalidTexture = 400,
		[Token(Token = "0x4000D2E")]
		WVR_SubmitError_ThreadStop = 401,
		[Token(Token = "0x4000D2F")]
		WVR_SubmitError_BufferSubmitFailed = 402,
		[Token(Token = "0x4000D30")]
		WVR_SubmitError_Max = 65535
	}
	[Token(Token = "0x20001A0")]
	public enum WVR_SubmitExtend
	{
		[Token(Token = "0x4000D32")]
		WVR_SubmitExtend_Default = 0,
		[Token(Token = "0x4000D33")]
		WVR_SubmitExtend_DisableDistortion = 1,
		[Token(Token = "0x4000D34")]
		WVR_SubmitExtend_PartialTexture = 0x10
	}
	[Token(Token = "0x20001A1")]
	public enum WVR_Eye
	{
		[Token(Token = "0x4000D36")]
		WVR_Eye_Left,
		[Token(Token = "0x4000D37")]
		WVR_Eye_Right,
		[Token(Token = "0x4000D38")]
		WVR_Eye_Both,
		[Token(Token = "0x4000D39")]
		WVR_Eye_None
	}
	[Token(Token = "0x20001A2")]
	public enum WVR_TextureTarget
	{
		[Token(Token = "0x4000D3B")]
		WVR_TextureTarget_2D,
		[Token(Token = "0x4000D3C")]
		WVR_TextureTarget_2D_ARRAY
	}
	[Token(Token = "0x20001A3")]
	public enum WVR_TextureFormat
	{
		[Token(Token = "0x4000D3E")]
		WVR_TextureFormat_RGBA
	}
	[Token(Token = "0x20001A4")]
	public enum WVR_TextureType
	{
		[Token(Token = "0x4000D40")]
		WVR_TextureType_UnsignedByte
	}
	[Token(Token = "0x20001A5")]
	public enum WVR_RenderError
	{
		[Token(Token = "0x4000D42")]
		WVR_RenderError_None = 0,
		[Token(Token = "0x4000D43")]
		WVR_RenderError_RuntimeInitFailed = 410,
		[Token(Token = "0x4000D44")]
		WVR_RenderError_ContextSetupFailed = 411,
		[Token(Token = "0x4000D45")]
		WVR_RenderError_DisplaySetupFailed = 412,
		[Token(Token = "0x4000D46")]
		WVR_RenderError_LibNotSupported = 413,
		[Token(Token = "0x4000D47")]
		WVR_RenderError_NullPtr = 414,
		[Token(Token = "0x4000D48")]
		WVR_RenderError_Max = 65535
	}
	[Token(Token = "0x20001A6")]
	public enum WVR_RenderConfig
	{
		[Token(Token = "0x4000D4A")]
		WVR_RenderConfig_Default = 0,
		[Token(Token = "0x4000D4B")]
		WVR_RenderConfig_Disable_SingleBuffer = 1,
		[Token(Token = "0x4000D4C")]
		WVR_RenderConfig_Disable_Reprojection = 2,
		[Token(Token = "0x4000D4D")]
		WVR_RenderConfig_sRGB = 4
	}
	[Token(Token = "0x20001A7")]
	public enum WVR_CameraImageType
	{
		[Token(Token = "0x4000D4F")]
		WVR_CameraImageType_Invalid,
		[Token(Token = "0x4000D50")]
		WVR_CameraImageType_SingleEye,
		[Token(Token = "0x4000D51")]
		WVR_CameraImageType_DualEye
	}
	[Token(Token = "0x20001A8")]
	public enum WVR_CameraImageFormat
	{
		[Token(Token = "0x4000D53")]
		WVR_CameraImageFormat_Invalid,
		[Token(Token = "0x4000D54")]
		WVR_CameraImageFormat_YUV_420,
		[Token(Token = "0x4000D55")]
		WVR_CameraImageFormat_Grayscale
	}
	[Token(Token = "0x20001A9")]
	public enum WVR_CameraPosition
	{
		[Token(Token = "0x4000D57")]
		WVR_CameraPosition_Invalid,
		[Token(Token = "0x4000D58")]
		WVR_CameraPosition_left,
		[Token(Token = "0x4000D59")]
		WVR_CameraPosition_Right
	}
	[Token(Token = "0x20001AA")]
	public enum WVR_OverlayError
	{
		[Token(Token = "0x4000D5B")]
		WVR_OverlayError_None = 0,
		[Token(Token = "0x4000D5C")]
		WVR_OverlayError_UnknownOverlay = 10,
		[Token(Token = "0x4000D5D")]
		WVR_OverlayError_OverlayUnavailable = 11,
		[Token(Token = "0x4000D5E")]
		WVR_OverlayError_InvalidParameter = 20
	}
	[Token(Token = "0x20001AB")]
	public enum WVR_OverlayTransformType
	{
		[Token(Token = "0x4000D60")]
		WVR_OverlayTransformType_None,
		[Token(Token = "0x4000D61")]
		WVR_OverlayTransformType_Absolute,
		[Token(Token = "0x4000D62")]
		WVR_OverlayTransformType_Fixed
	}
	[Token(Token = "0x20001AC")]
	public enum WVR_NumDoF
	{
		[Token(Token = "0x4000D64")]
		WVR_NumDoF_3DoF,
		[Token(Token = "0x4000D65")]
		WVR_NumDoF_6DoF
	}
	[Token(Token = "0x20001AD")]
	public enum WVR_ArenaShape
	{
		[Token(Token = "0x4000D67")]
		WVR_ArenaShape_None,
		[Token(Token = "0x4000D68")]
		WVR_ArenaShape_Rectangle,
		[Token(Token = "0x4000D69")]
		WVR_ArenaShape_Round
	}
	[Token(Token = "0x20001AE")]
	public enum WVR_InteractionMode
	{
		[Token(Token = "0x4000D6B")]
		WVR_InteractionMode_SystemDefault = 1,
		[Token(Token = "0x4000D6C")]
		WVR_InteractionMode_Gaze,
		[Token(Token = "0x4000D6D")]
		WVR_InteractionMode_Controller
	}
	[Token(Token = "0x20001AF")]
	public enum WVR_GazeTriggerType
	{
		[Token(Token = "0x4000D6F")]
		WVR_GazeTriggerType_Timeout = 1,
		[Token(Token = "0x4000D70")]
		WVR_GazeTriggerType_Button,
		[Token(Token = "0x4000D71")]
		WVR_GazeTriggerType_TimeoutButton
	}
	[Token(Token = "0x20001B0")]
	public enum WVR_PerfLevel
	{
		[Token(Token = "0x4000D73")]
		WVR_PerfLevel_System,
		[Token(Token = "0x4000D74")]
		WVR_PerfLevel_Minimum,
		[Token(Token = "0x4000D75")]
		WVR_PerfLevel_Medium,
		[Token(Token = "0x4000D76")]
		WVR_PerfLevel_Maximum,
		[Token(Token = "0x4000D77")]
		WVR_PerfLevel_NumPerfLevels
	}
	[Token(Token = "0x20001B1")]
	public enum WVR_RenderQuality
	{
		[Token(Token = "0x4000D79")]
		WVR_RenderQuality_Low = 1,
		[Token(Token = "0x4000D7A")]
		WVR_RenderQuality_Medium,
		[Token(Token = "0x4000D7B")]
		WVR_RenderQuality_High,
		[Token(Token = "0x4000D7C")]
		WVR_RenderQuality_NumRenderQuality
	}
	[Token(Token = "0x20001B2")]
	public enum WVR_SimulationType
	{
		[Token(Token = "0x4000D7E")]
		WVR_SimulationType_Auto,
		[Token(Token = "0x4000D7F")]
		WVR_SimulationType_ForceOn,
		[Token(Token = "0x4000D80")]
		WVR_SimulationType_ForceOff
	}
	[Token(Token = "0x20001B3")]
	public enum WVR_EyePoseStatus
	{
		[Token(Token = "0x4000D82")]
		WVR_GazePointValid = 1,
		[Token(Token = "0x4000D83")]
		WVR_GazeVectorValid = 2,
		[Token(Token = "0x4000D84")]
		WVR_EyeOpennessValid = 4,
		[Token(Token = "0x4000D85")]
		WVR_EyePupilDilationValid = 8,
		[Token(Token = "0x4000D86")]
		WVR_EyePositionGuideValid = 0x10
	}
	[Token(Token = "0x20001B4")]
	public struct WVR_RenderInitParams_t
	{
		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_GraphicsApiType graphicsApi;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong renderConfig;
	}
	[Token(Token = "0x20001B5")]
	public struct WVR_Matrix4f_t
	{
		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x20001B6")]
	public struct WVR_Vector2f_t
	{
		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x20001B7")]
	public struct WVR_Vector3f_t
	{
		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x20001B8")]
	public struct WVR_CameraIntrinsic_t
	{
		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_Vector2f_t focalLength;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_Vector2f_t principalPoint;
	}
	[Token(Token = "0x20001B9")]
	public struct WVR_CameraInfo_t
	{
		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_CameraImageType imgType;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public WVR_CameraImageFormat imgFormat;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint width;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint height;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint size;
	}
	[Token(Token = "0x20001BA")]
	public struct WVR_Quatf_t
	{
		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float w;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float x;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float y;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float z;
	}
	[StructLayout(2)]
	[Token(Token = "0x20001BB")]
	public struct WVR_PoseState_t
	{
		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsValidPose;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public WVR_Matrix4f_t PoseMatrix;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public WVR_Vector3f_t Velocity;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public WVR_Vector3f_t AngularVelocity;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool Is6DoFPose;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public long PoseTimestamp_ns;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public WVR_Vector3f_t Acceleration;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public WVR_Vector3f_t AngularAcceleration;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float PredictedMilliSec;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public WVR_PoseOriginModel OriginModel;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public WVR_Pose_t RawPose;
	}
	[StructLayout(2)]
	[Token(Token = "0x20001BC")]
	public struct WVR_DevicePosePair_t
	{
		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_DeviceType type;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_PoseState_t pose;
	}
	[StructLayout(2)]
	[Token(Token = "0x20001BD")]
	public struct WVR_TextureLayout_t
	{
		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_Vector2f_t leftLowUVs;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_Vector2f_t rightUpUVs;
	}
	[StructLayout(2)]
	[Token(Token = "0x20001BE")]
	public struct WVR_TextureBound_t
	{
		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x20001BF")]
	public struct WVR_TextureParams_t
	{
		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr id;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_TextureTarget target;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_TextureLayout_t layout;
	}
	[Token(Token = "0x20001C0")]
	public struct WVR_RenderProps_t
	{
		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float refreshRate;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool hasExternal;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float ipdMeter;
	}
	[Token(Token = "0x20001C1")]
	public struct WVR_CommonEvent_t
	{
		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_EventType type;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public long timestamp;
	}
	[Token(Token = "0x20001C2")]
	public struct WVR_DeviceEvent_t
	{
		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_CommonEvent_t common;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WVR_DeviceType type;
	}
	[Token(Token = "0x20001C3")]
	public struct WVR_InputEvent_t
	{
		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_DeviceEvent_t device;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WVR_InputId inputId;
	}
	[StructLayout(2)]
	[Token(Token = "0x20001C4")]
	public struct WVR_Event_t
	{
		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_CommonEvent_t common;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_DeviceEvent_t device;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_InputEvent_t input;
	}
	[Token(Token = "0x20001C5")]
	public struct WVR_Axis_t
	{
		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[StructLayout(2)]
	[Token(Token = "0x20001C6")]
	public struct WVR_AnalogState_t
	{
		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_InputId id;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public WVR_AnalogType type;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_Axis_t axis;
	}
	[Token(Token = "0x20001C7")]
	public struct WVR_InputAttribute_t
	{
		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_InputId id;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint capability;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_AnalogType axis_type;
	}
	[Token(Token = "0x20001C8")]
	public struct WVR_InputMappingPair_t
	{
		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_InputAttribute_t destination;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_InputAttribute_t source;
	}
	[StructLayout(2)]
	[Token(Token = "0x20001C9")]
	public struct WVR_Pose_t
	{
		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_Vector3f_t position;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_Quatf_t rotation;
	}
	[Token(Token = "0x20001CA")]
	public struct WVR_OverlayPosition_t
	{
		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;
	}
	[Token(Token = "0x20001CB")]
	public struct WVR_OverlayBlendColor_t
	{
		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;
	}
	[Token(Token = "0x20001CC")]
	public struct WVR_OverlayTexture_t
	{
		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint textureId;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint width;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint height;
	}
	[Token(Token = "0x20001CD")]
	public struct WVR_ArenaRectangle_t
	{
		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float width;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float length;
	}
	[Token(Token = "0x20001CE")]
	public struct WVR_ArenaRound_t
	{
		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float diameter;
	}
	[StructLayout(2)]
	[Token(Token = "0x20001CF")]
	public struct WVR_ArenaArea_t
	{
		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_ArenaRectangle_t rectangle;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_ArenaRound_t round;
	}
	[Token(Token = "0x20001D0")]
	public struct WVR_Arena_t
	{
		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_ArenaShape shape;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public WVR_ArenaArea_t area;
	}
	[Token(Token = "0x20001D1")]
	public delegate void WVR_OverlayInputEventCallback(int overlayId, WVR_EventType type, WVR_InputId inputId);
	[Token(Token = "0x20001D2")]
	public struct WVR_OverlayInputEvent_t
	{
		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int overlayId;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr callback;
	}
	[Token(Token = "0x20001D3")]
	public struct WVR_RenderFoveationParams
	{
		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float focalX;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float focalY;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fovealFov;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_PeripheralQuality periQuality;
	}
	[Token(Token = "0x20001D4")]
	public struct FBXInfo_t
	{
		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_Matrix4f_t matrix;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public uint verticeCount;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public uint normalCount;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public uint uvCount;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public uint indiceCount;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr meshName;
	}
	[Token(Token = "0x20001D5")]
	public struct MeshInfo_t
	{
		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3[] _vectice;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3[] _normal;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2[] _uv;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] _indice;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _active;
	}
	[Token(Token = "0x20001D6")]
	public struct StencilMesh_t
	{
		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint vertCount;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr vertData;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint triCount;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr indexData;
	}
	[Token(Token = "0x20001D7")]
	public struct WVR_RequestResult
	{
		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mPermission;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool mGranted;
	}
	[Token(Token = "0x20001D8")]
	public struct WVR_EyeData_t
	{
		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyeDataStatus;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyeDataStatus;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyeDataStatus;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_Vector3f_t leftEyeGazePoint;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WVR_Vector3f_t rightEyeGazePoint;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public WVR_Vector3f_t combinedEyeGazePoint;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WVR_Vector3f_t leftEyeGazeVector;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public WVR_Vector3f_t rightEyeGazeVector;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public WVR_Vector3f_t combinedEyeGazeVector;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public WVR_Vector3f_t leftEyePositionGuide;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public WVR_Vector3f_t rightEyePositionGuide;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public long timestamp;
	}
	[Token(Token = "0x20001D9")]
	public enum WVR_EyeDataStatus
	{
		[Token(Token = "0x4000E0F")]
		WVR_GazePointValid = 1,
		[Token(Token = "0x4000E10")]
		WVR_GazeVectorValid = 2,
		[Token(Token = "0x4000E11")]
		WVR_EyeOpennessValid = 4,
		[Token(Token = "0x4000E12")]
		WVR_EyePupilDilationValid = 8,
		[Token(Token = "0x4000E13")]
		WVR_EyePositionGuideValid = 0x10
	}
	[Token(Token = "0x20001DA")]
	public enum WVR_QualityStrategy
	{
		[Token(Token = "0x4000E15")]
		WVR_QualityStrategy_Default = 1,
		[Token(Token = "0x4000E16")]
		WVR_QualityStrategy_SendQualityEvent = 2,
		[Token(Token = "0x4000E17")]
		WVR_QualityStrategy_AutoFoveation = 4,
		[Token(Token = "0x4000E18")]
		WVR_QualityStrategy_Reserved = 0x40000000
	}
	[Token(Token = "0x20001DB")]
	public enum WVR_Result
	{
		[Token(Token = "0x4000E1A")]
		WVR_Success,
		[Token(Token = "0x4000E1B")]
		WVR_Error_SystemInvalid,
		[Token(Token = "0x4000E1C")]
		WVR_Error_InvalidArgument,
		[Token(Token = "0x4000E1D")]
		WVR_Error_OutOfMemory,
		[Token(Token = "0x4000E1E")]
		WVR_Error_FeatureNotSupport,
		[Token(Token = "0x4000E1F")]
		WVR_Error_RuntimeVersionNotSupport
	}
	[Token(Token = "0x20001DC")]
	public enum WVR_HandGestureType
	{
		[Token(Token = "0x4000E21")]
		WVR_HandGestureType_Invalid,
		[Token(Token = "0x4000E22")]
		WVR_HandGestureType_Unknown,
		[Token(Token = "0x4000E23")]
		WVR_HandGestureType_Fist,
		[Token(Token = "0x4000E24")]
		WVR_HandGestureType_Five,
		[Token(Token = "0x4000E25")]
		WVR_HandGestureType_OK,
		[Token(Token = "0x4000E26")]
		WVR_HandGestureType_ThumbUp,
		[Token(Token = "0x4000E27")]
		WVR_HandGestureType_IndexUp,
		[Token(Token = "0x4000E28")]
		WVR_HandGestureType_Pinch
	}
	[Token(Token = "0x20001DD")]
	public struct WVR_HandGestureData_t
	{
		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long timestamp;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_HandGestureType right;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_HandGestureType left;
	}
	[Token(Token = "0x20001DE")]
	public struct WVR_SingleFinger_t
	{
		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_Vector3f_t joint1;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_Vector3f_t joint2;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WVR_Vector3f_t joint3;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public WVR_Vector3f_t tip;
	}
	[Token(Token = "0x20001DF")]
	public struct WVR_Fingers_t
	{
		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_SingleFinger_t thumb;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WVR_SingleFinger_t index;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public WVR_SingleFinger_t middle;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public WVR_SingleFinger_t ring;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public WVR_SingleFinger_t pinky;
	}
	[Token(Token = "0x20001E0")]
	public struct WVR_HandTrackingData_t
	{
		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_PoseState_t right;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public WVR_Fingers_t rightFinger;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public WVR_PoseState_t left;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public WVR_Fingers_t leftFinger;
	}
	[Token(Token = "0x20001E1")]
	public enum WVR_SupportedFeature
	{
		[Token(Token = "0x4000E3A")]
		WVR_SupportedFeature_PassthroughImage = 1,
		[Token(Token = "0x4000E3B")]
		WVR_SupportedFeature_PassthroughOverlay = 2,
		[Token(Token = "0x4000E3C")]
		WVR_SupportedFeature_HandTracking = 0x10,
		[Token(Token = "0x4000E3D")]
		WVR_SupportedFeature_HandGesture = 0x20
	}
	[Token(Token = "0x20001E2")]
	public delegate void WVR_RequestCompleteCallback(List<WVR_RequestResult> results);
	[Token(Token = "0x20001E3")]
	public delegate void WVR_RequestUsbCompleteCallback(bool result);
	[Token(Token = "0x20001E4")]
	public delegate void WVR_OnOEMConfigChanged();
	[Token(Token = "0x20001E5")]
	public class Interop
	{
		[Token(Token = "0x200062F")]
		public class WVR_Base
		{
			[Token(Token = "0x40025C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static WVR_Base instance;

			[Token(Token = "0x170004B8")]
			public static WVR_Base Instance
			{
				[Token(Token = "0x6002B5F")]
				[Address(RVA = "0x1F39D00", Offset = "0x1F39D00", VA = "0x1F39D00")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B60")]
			[Address(RVA = "0x1F3D894", Offset = "0x1F3D894", VA = "0x1F3D894", Slot = "4")]
			public virtual bool PollEventQueue(ref WVR_Event_t e)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B61")]
			[Address(RVA = "0x1F3D89C", Offset = "0x1F3D89C", VA = "0x1F3D89C", Slot = "5")]
			public virtual int GetInputDeviceCapability(WVR_DeviceType type, WVR_InputType inputType)
			{
				return default(int);
			}

			[Token(Token = "0x6002B62")]
			[Address(RVA = "0x1F3D8A4", Offset = "0x1F3D8A4", VA = "0x1F3D8A4", Slot = "6")]
			public virtual WVR_AnalogType GetInputDeviceAnalogType(WVR_DeviceType type, WVR_InputId id)
			{
				return default(WVR_AnalogType);
			}

			[Token(Token = "0x6002B63")]
			[Address(RVA = "0x1F3D8AC", Offset = "0x1F3D8AC", VA = "0x1F3D8AC", Slot = "7")]
			public virtual bool GetInputDeviceState(WVR_DeviceType type, uint inputMask, ref uint buttons, ref uint touches, [In][Out] WVR_AnalogState_t[] analogArray, uint analogArrayCount)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B64")]
			[Address(RVA = "0x1F3D8B4", Offset = "0x1F3D8B4", VA = "0x1F3D8B4", Slot = "8")]
			public virtual int GetInputTypeCount(WVR_DeviceType type, WVR_InputType inputType)
			{
				return default(int);
			}

			[Token(Token = "0x6002B65")]
			[Address(RVA = "0x1F3D8BC", Offset = "0x1F3D8BC", VA = "0x1F3D8BC", Slot = "9")]
			public virtual bool GetInputButtonState(WVR_DeviceType type, WVR_InputId id)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B66")]
			[Address(RVA = "0x1F3D8C4", Offset = "0x1F3D8C4", VA = "0x1F3D8C4", Slot = "10")]
			public virtual bool GetInputTouchState(WVR_DeviceType type, WVR_InputId id)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B67")]
			[Address(RVA = "0x1F3D8CC", Offset = "0x1F3D8CC", VA = "0x1F3D8CC", Slot = "11")]
			public virtual WVR_Axis_t GetInputAnalogAxis(WVR_DeviceType type, WVR_InputId id)
			{
				return default(WVR_Axis_t);
			}

			[Token(Token = "0x6002B68")]
			[Address(RVA = "0x1F3D8D8", Offset = "0x1F3D8D8", VA = "0x1F3D8D8", Slot = "12")]
			public virtual void SetTextureBounds([In][Out] WVR_TextureBound_t[] textureBounds)
			{
			}

			[Token(Token = "0x6002B69")]
			[Address(RVA = "0x1F3D8DC", Offset = "0x1F3D8DC", VA = "0x1F3D8DC", Slot = "13")]
			public virtual void GetPoseState(WVR_DeviceType type, WVR_PoseOriginModel originModel, uint predictedMilliSec, ref WVR_PoseState_t poseState)
			{
			}

			[Token(Token = "0x6002B6A")]
			[Address(RVA = "0x1F3D8E0", Offset = "0x1F3D8E0", VA = "0x1F3D8E0", Slot = "14")]
			public virtual void GetLastPoseIndex(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount, ref uint frameIndex)
			{
			}

			[Token(Token = "0x6002B6B")]
			[Address(RVA = "0x1F3D8E4", Offset = "0x1F3D8E4", VA = "0x1F3D8E4", Slot = "15")]
			public virtual void WaitGetPoseIndex(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount, ref uint frameIndex)
			{
			}

			[Token(Token = "0x6002B6C")]
			[Address(RVA = "0x1F3D8E8", Offset = "0x1F3D8E8", VA = "0x1F3D8E8", Slot = "16")]
			public virtual IntPtr StoreRenderTextures(IntPtr[] texturesIDs, int size, bool eEye, WVR_TextureTarget target)
			{
				return default(IntPtr);
			}

			[Token(Token = "0x6002B6D")]
			[Address(RVA = "0x1F3D928", Offset = "0x1F3D928", VA = "0x1F3D928", Slot = "17")]
			public virtual void GetSyncPose(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount)
			{
			}

			[Token(Token = "0x6002B6E")]
			[Address(RVA = "0x1F3D92C", Offset = "0x1F3D92C", VA = "0x1F3D92C", Slot = "18")]
			public virtual bool IsDeviceConnected(WVR_DeviceType type)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B6F")]
			[Address(RVA = "0x1F3D934", Offset = "0x1F3D934", VA = "0x1F3D934", Slot = "19")]
			public virtual void TriggerVibration(WVR_DeviceType type, WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity)
			{
			}

			[Token(Token = "0x6002B70")]
			[Address(RVA = "0x1F3D938", Offset = "0x1F3D938", VA = "0x1F3D938", Slot = "20")]
			public virtual void InAppRecenter(WVR_RecenterType recenterType)
			{
			}

			[Token(Token = "0x6002B71")]
			[Address(RVA = "0x1F3D93C", Offset = "0x1F3D93C", VA = "0x1F3D93C", Slot = "21")]
			public virtual void SetNeckModelEnabled(bool enabled)
			{
			}

			[Token(Token = "0x6002B72")]
			[Address(RVA = "0x1F3D940", Offset = "0x1F3D940", VA = "0x1F3D940", Slot = "22")]
			public virtual void SetNeckModel(WVR_SimulationType simulationType)
			{
			}

			[Token(Token = "0x6002B73")]
			[Address(RVA = "0x1F3D944", Offset = "0x1F3D944", VA = "0x1F3D944", Slot = "23")]
			public virtual void SetArmModel(WVR_SimulationType simulationType)
			{
			}

			[Token(Token = "0x6002B74")]
			[Address(RVA = "0x1F3D948", Offset = "0x1F3D948", VA = "0x1F3D948", Slot = "24")]
			public virtual void SetArmSticky(bool stickyArm)
			{
			}

			[Token(Token = "0x6002B75")]
			[Address(RVA = "0x1F3D94C", Offset = "0x1F3D94C", VA = "0x1F3D94C", Slot = "25")]
			public virtual bool SetInputRequest(WVR_DeviceType type, WVR_InputAttribute_t[] request, uint size)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B76")]
			[Address(RVA = "0x1F3D954", Offset = "0x1F3D954", VA = "0x1F3D954", Slot = "26")]
			public virtual bool GetInputMappingPair(WVR_DeviceType type, WVR_InputId destination, ref WVR_InputMappingPair_t pair)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B77")]
			[Address(RVA = "0x1F3D95C", Offset = "0x1F3D95C", VA = "0x1F3D95C", Slot = "27")]
			public virtual uint GetInputMappingTable(WVR_DeviceType type, [In][Out] WVR_InputMappingPair_t[] table, uint size)
			{
				return default(uint);
			}

			[Token(Token = "0x6002B78")]
			[Address(RVA = "0x1F3D964", Offset = "0x1F3D964", VA = "0x1F3D964", Slot = "28")]
			public virtual WVR_Arena_t GetArena()
			{
				return default(WVR_Arena_t);
			}

			[Token(Token = "0x6002B79")]
			[Address(RVA = "0x1F3D970", Offset = "0x1F3D970", VA = "0x1F3D970", Slot = "29")]
			public virtual bool SetArena(ref WVR_Arena_t arena)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B7A")]
			[Address(RVA = "0x1F3D978", Offset = "0x1F3D978", VA = "0x1F3D978", Slot = "30")]
			public virtual WVR_ArenaVisible GetArenaVisible()
			{
				return default(WVR_ArenaVisible);
			}

			[Token(Token = "0x6002B7B")]
			[Address(RVA = "0x1F3D980", Offset = "0x1F3D980", VA = "0x1F3D980", Slot = "31")]
			public virtual void SetArenaVisible(WVR_ArenaVisible config)
			{
			}

			[Token(Token = "0x6002B7C")]
			[Address(RVA = "0x1F3D984", Offset = "0x1F3D984", VA = "0x1F3D984", Slot = "32")]
			public virtual bool IsOverArenaRange()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B7D")]
			[Address(RVA = "0x1F3D98C", Offset = "0x1F3D98C", VA = "0x1F3D98C", Slot = "33")]
			public virtual float GetDeviceBatteryPercentage(WVR_DeviceType type)
			{
				return default(float);
			}

			[Token(Token = "0x6002B7E")]
			[Address(RVA = "0x1F3D994", Offset = "0x1F3D994", VA = "0x1F3D994", Slot = "34")]
			public virtual WVR_BatteryStatus GetBatteryStatus(WVR_DeviceType type)
			{
				return default(WVR_BatteryStatus);
			}

			[Token(Token = "0x6002B7F")]
			[Address(RVA = "0x1F3D99C", Offset = "0x1F3D99C", VA = "0x1F3D99C", Slot = "35")]
			public virtual WVR_ChargeStatus GetChargeStatus(WVR_DeviceType type)
			{
				return default(WVR_ChargeStatus);
			}

			[Token(Token = "0x6002B80")]
			[Address(RVA = "0x1F3D9A4", Offset = "0x1F3D9A4", VA = "0x1F3D9A4", Slot = "36")]
			public virtual WVR_BatteryTemperatureStatus GetBatteryTemperatureStatus(WVR_DeviceType type)
			{
				return default(WVR_BatteryTemperatureStatus);
			}

			[Token(Token = "0x6002B81")]
			[Address(RVA = "0x1F3D9AC", Offset = "0x1F3D9AC", VA = "0x1F3D9AC", Slot = "37")]
			public virtual float GetBatteryTemperature(WVR_DeviceType type)
			{
				return default(float);
			}

			[Token(Token = "0x6002B82")]
			[Address(RVA = "0x1F3D9B4", Offset = "0x1F3D9B4", VA = "0x1F3D9B4", Slot = "38")]
			public virtual WVR_Result StartHandGesture()
			{
				return default(WVR_Result);
			}

			[Token(Token = "0x6002B83")]
			[Address(RVA = "0x1F3D9BC", Offset = "0x1F3D9BC", VA = "0x1F3D9BC", Slot = "39")]
			public virtual void StopHandGesture()
			{
			}

			[Token(Token = "0x6002B84")]
			[Address(RVA = "0x1F3D9C0", Offset = "0x1F3D9C0", VA = "0x1F3D9C0", Slot = "40")]
			public virtual WVR_Result GetHandGestureData(ref WVR_HandGestureData_t data)
			{
				return default(WVR_Result);
			}

			[Token(Token = "0x6002B85")]
			[Address(RVA = "0x1F3D9CC", Offset = "0x1F3D9CC", VA = "0x1F3D9CC", Slot = "41")]
			public virtual WVR_Result StartHandTracking()
			{
				return default(WVR_Result);
			}

			[Token(Token = "0x6002B86")]
			[Address(RVA = "0x1F3D9D4", Offset = "0x1F3D9D4", VA = "0x1F3D9D4", Slot = "42")]
			public virtual void StopHandTracking()
			{
			}

			[Token(Token = "0x6002B87")]
			[Address(RVA = "0x1F3D9D8", Offset = "0x1F3D9D8", VA = "0x1F3D9D8", Slot = "43")]
			public virtual WVR_Result GetHandTrackingData(ref WVR_HandTrackingData_t data, WVR_PoseOriginModel originModel, uint predictedMilliSec)
			{
				return default(WVR_Result);
			}

			[Token(Token = "0x6002B88")]
			[Address(RVA = "0x1F3D9E0", Offset = "0x1F3D9E0", VA = "0x1F3D9E0", Slot = "44")]
			public virtual ulong GetSupportedFeatures()
			{
				return default(ulong);
			}

			[Token(Token = "0x6002B89")]
			[Address(RVA = "0x1F3D9E8", Offset = "0x1F3D9E8", VA = "0x1F3D9E8", Slot = "45")]
			public virtual WVR_InitError Init(WVR_AppType eType)
			{
				return default(WVR_InitError);
			}

			[Token(Token = "0x6002B8A")]
			[Address(RVA = "0x1F3D9F0", Offset = "0x1F3D9F0", VA = "0x1F3D9F0", Slot = "46")]
			public virtual void PostInit()
			{
			}

			[Token(Token = "0x6002B8B")]
			[Address(RVA = "0x1F3D9F4", Offset = "0x1F3D9F4", VA = "0x1F3D9F4", Slot = "47")]
			public virtual void Quit()
			{
			}

			[Token(Token = "0x6002B8C")]
			[Address(RVA = "0x1F3D9F8", Offset = "0x1F3D9F8", VA = "0x1F3D9F8", Slot = "48")]
			public virtual IntPtr GetInitErrorString(WVR_InitError error)
			{
				return default(IntPtr);
			}

			[Token(Token = "0x6002B8D")]
			[Address(RVA = "0x1F3DA00", Offset = "0x1F3DA00", VA = "0x1F3DA00", Slot = "49")]
			public virtual uint GetWaveRuntimeVersion()
			{
				return default(uint);
			}

			[Token(Token = "0x6002B8E")]
			[Address(RVA = "0x1F3DA08", Offset = "0x1F3DA08", VA = "0x1F3DA08", Slot = "50")]
			public virtual uint GetWaveSDKVersion()
			{
				return default(uint);
			}

			[Token(Token = "0x6002B8F")]
			[Address(RVA = "0x1F3DA10", Offset = "0x1F3DA10", VA = "0x1F3DA10", Slot = "51")]
			public virtual bool IsInputFocusCapturedBySystem()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B90")]
			[Address(RVA = "0x1F3DA18", Offset = "0x1F3DA18", VA = "0x1F3DA18", Slot = "52")]
			internal virtual WVR_RenderError RenderInit(ref WVR_RenderInitParams_t param)
			{
				return default(WVR_RenderError);
			}

			[Token(Token = "0x6002B91")]
			[Address(RVA = "0x1F3DA20", Offset = "0x1F3DA20", VA = "0x1F3DA20", Slot = "53")]
			internal virtual bool SetPerformanceLevels(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B92")]
			[Address(RVA = "0x1F3DA28", Offset = "0x1F3DA28", VA = "0x1F3DA28", Slot = "54")]
			internal virtual bool EnableAdaptiveQuality(bool enable, uint flags)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B93")]
			[Address(RVA = "0x1F3DA30", Offset = "0x1F3DA30", VA = "0x1F3DA30", Slot = "55")]
			internal virtual bool IsAdaptiveQualityEnabled()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B94")]
			[Address(RVA = "0x1F3DA38", Offset = "0x1F3DA38", VA = "0x1F3DA38", Slot = "56")]
			public virtual bool StartCamera(ref WVR_CameraInfo_t info)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B95")]
			[Address(RVA = "0x1F3DA40", Offset = "0x1F3DA40", VA = "0x1F3DA40", Slot = "57")]
			public virtual void StopCamera()
			{
			}

			[Token(Token = "0x6002B96")]
			[Address(RVA = "0x1F3DA44", Offset = "0x1F3DA44", VA = "0x1F3DA44", Slot = "58")]
			public virtual bool UpdateTexture(IntPtr textureid)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B97")]
			[Address(RVA = "0x1F3DA4C", Offset = "0x1F3DA4C", VA = "0x1F3DA4C", Slot = "59")]
			public virtual bool GetCameraIntrinsic(WVR_CameraPosition position, ref WVR_CameraIntrinsic_t intrinsic)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B98")]
			[Address(RVA = "0x1F3DA54", Offset = "0x1F3DA54", VA = "0x1F3DA54", Slot = "60")]
			public virtual bool GetCameraFrameBuffer(IntPtr pFramebuffer, uint frameBufferSize)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B99")]
			[Address(RVA = "0x1F3DA5C", Offset = "0x1F3DA5C", VA = "0x1F3DA5C", Slot = "61")]
			public virtual bool GetFrameBufferWithPoseState(IntPtr frameBuffer, uint frameBufferSize, WVR_PoseOriginModel origin, uint predictInMs, ref WVR_PoseState_t poseState)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B9A")]
			[Address(RVA = "0x1F3DA64", Offset = "0x1F3DA64", VA = "0x1F3DA64", Slot = "62")]
			public virtual bool DrawTextureWithBuffer(IntPtr textureId, WVR_CameraImageFormat imgFormat, IntPtr frameBuffer, uint size, uint width, uint height)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B9B")]
			[Address(RVA = "0x1F3DA6C", Offset = "0x1F3DA6C", VA = "0x1F3DA6C", Slot = "63")]
			public virtual void ReleaseCameraTexture()
			{
			}

			[Token(Token = "0x6002B9C")]
			[Address(RVA = "0x1F3DA70", Offset = "0x1F3DA70", VA = "0x1F3DA70", Slot = "64")]
			public virtual bool IsDeviceSuspend(WVR_DeviceType type)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B9D")]
			[Address(RVA = "0x1F3DA78", Offset = "0x1F3DA78", VA = "0x1F3DA78", Slot = "65")]
			public virtual void ConvertMatrixQuaternion(ref WVR_Matrix4f_t mat, ref WVR_Quatf_t quat, bool m2q)
			{
			}

			[Token(Token = "0x6002B9E")]
			[Address(RVA = "0x1F3DA7C", Offset = "0x1F3DA7C", VA = "0x1F3DA7C", Slot = "66")]
			public virtual WVR_NumDoF GetDegreeOfFreedom(WVR_DeviceType type)
			{
				return default(WVR_NumDoF);
			}

			[Token(Token = "0x6002B9F")]
			[Address(RVA = "0x1F3DA84", Offset = "0x1F3DA84", VA = "0x1F3DA84", Slot = "67")]
			public virtual void SetParameters(WVR_DeviceType type, IntPtr pchValue)
			{
			}

			[Token(Token = "0x6002BA0")]
			[Address(RVA = "0x1F3DA88", Offset = "0x1F3DA88", VA = "0x1F3DA88", Slot = "68")]
			public virtual uint GetParameters(WVR_DeviceType type, IntPtr pchValue, IntPtr retValue, uint unBufferSize)
			{
				return default(uint);
			}

			[Token(Token = "0x6002BA1")]
			[Address(RVA = "0x1F3DA90", Offset = "0x1F3DA90", VA = "0x1F3DA90", Slot = "69")]
			public virtual WVR_DeviceType GetDefaultControllerRole()
			{
				return default(WVR_DeviceType);
			}

			[Token(Token = "0x6002BA2")]
			[Address(RVA = "0x1F3DA98", Offset = "0x1F3DA98", VA = "0x1F3DA98", Slot = "70")]
			public virtual bool SetInteractionMode(WVR_InteractionMode mode)
			{
				return default(bool);
			}

			[Token(Token = "0x6002BA3")]
			[Address(RVA = "0x1F3DAA0", Offset = "0x1F3DAA0", VA = "0x1F3DAA0", Slot = "71")]
			public virtual WVR_InteractionMode GetInteractionMode()
			{
				return default(WVR_InteractionMode);
			}

			[Token(Token = "0x6002BA4")]
			[Address(RVA = "0x1F3DAA8", Offset = "0x1F3DAA8", VA = "0x1F3DAA8", Slot = "72")]
			public virtual bool SetGazeTriggerType(WVR_GazeTriggerType type)
			{
				return default(bool);
			}

			[Token(Token = "0x6002BA5")]
			[Address(RVA = "0x1F3DAB0", Offset = "0x1F3DAB0", VA = "0x1F3DAB0", Slot = "73")]
			public virtual WVR_GazeTriggerType GetGazeTriggerType()
			{
				return default(WVR_GazeTriggerType);
			}

			[Token(Token = "0x6002BA6")]
			[Address(RVA = "0x1F3DAB8", Offset = "0x1F3DAB8", VA = "0x1F3DAB8", Slot = "74")]
			public virtual bool GetDeviceErrorState(WVR_DeviceType dev_type, WVR_DeviceErrorState error_state)
			{
				return default(bool);
			}

			[Token(Token = "0x6002BA7")]
			[Address(RVA = "0x1F3DAC0", Offset = "0x1F3DAC0", VA = "0x1F3DAC0", Slot = "75")]
			public virtual void GetRenderTargetSize(ref uint width, ref uint height)
			{
			}

			[Token(Token = "0x6002BA8")]
			[Address(RVA = "0x1F3DAC4", Offset = "0x1F3DAC4", VA = "0x1F3DAC4", Slot = "76")]
			public virtual WVR_Matrix4f_t GetProjection(WVR_Eye eye, float near, float far)
			{
				return default(WVR_Matrix4f_t);
			}

			[Token(Token = "0x6002BA9")]
			[Address(RVA = "0x1F3DAD4", Offset = "0x1F3DAD4", VA = "0x1F3DAD4", Slot = "77")]
			public virtual void GetClippingPlaneBoundary(WVR_Eye eye, ref float left, ref float right, ref float top, ref float bottom)
			{
			}

			[Token(Token = "0x6002BAA")]
			[Address(RVA = "0x1F3DAD8", Offset = "0x1F3DAD8", VA = "0x1F3DAD8", Slot = "78")]
			public virtual void SetOverfillRatio(float ratioX, float ratioY)
			{
			}

			[Token(Token = "0x6002BAB")]
			[Address(RVA = "0x1F3DADC", Offset = "0x1F3DADC", VA = "0x1F3DADC", Slot = "79")]
			public virtual WVR_Matrix4f_t GetTransformFromEyeToHead(WVR_Eye eye, WVR_NumDoF dof)
			{
				return default(WVR_Matrix4f_t);
			}

			[Token(Token = "0x6002BAC")]
			[Address(RVA = "0x1F3DAEC", Offset = "0x1F3DAEC", VA = "0x1F3DAEC", Slot = "80")]
			public virtual WVR_SubmitError SubmitFrame(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod)
			{
				return default(WVR_SubmitError);
			}

			[Token(Token = "0x6002BAD")]
			[Address(RVA = "0x1F3DAF4", Offset = "0x1F3DAF4", VA = "0x1F3DAF4", Slot = "81")]
			public virtual void SetSubmitParams(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod)
			{
			}

			[Token(Token = "0x6002BAE")]
			[Address(RVA = "0x1F3DAF8", Offset = "0x1F3DAF8", VA = "0x1F3DAF8", Slot = "82")]
			public virtual void PreRenderEye(WVR_Eye eye, [Out] WVR_TextureParams_t[] param, [Out] WVR_RenderFoveationParams[] foveationParams)
			{
			}

			[Token(Token = "0x6002BAF")]
			[Address(RVA = "0x1F3DAFC", Offset = "0x1F3DAFC", VA = "0x1F3DAFC", Slot = "83")]
			public virtual bool RequestScreenshot(uint width, uint height, WVR_ScreenshotMode mode, IntPtr filename)
			{
				return default(bool);
			}

			[Token(Token = "0x6002BB0")]
			[Address(RVA = "0x1F3DB04", Offset = "0x1F3DB04", VA = "0x1F3DB04", Slot = "84")]
			public virtual void RenderMask(WVR_Eye eye)
			{
			}

			[Token(Token = "0x6002BB1")]
			[Address(RVA = "0x1F3DB08", Offset = "0x1F3DB08", VA = "0x1F3DB08", Slot = "85")]
			public virtual bool GetRenderProps(ref WVR_RenderProps_t props)
			{
				return default(bool);
			}

			[Token(Token = "0x6002BB2")]
			[Address(RVA = "0x1F3DB10", Offset = "0x1F3DB10", VA = "0x1F3DB10", Slot = "86")]
			public virtual IntPtr ObtainTextureQueue(WVR_TextureTarget target, WVR_TextureFormat format, WVR_TextureType type, uint width, uint height, int level)
			{
				return default(IntPtr);
			}

			[Token(Token = "0x6002BB3")]
			[Address(RVA = "0x1F3DB18", Offset = "0x1F3DB18", VA = "0x1F3DB18", Slot = "87")]
			public virtual uint GetTextureQueueLength(IntPtr handle)
			{
				return default(uint);
			}

			[Token(Token = "0x6002BB4")]
			[Address(RVA = "0x1F3DB20", Offset = "0x1F3DB20", VA = "0x1F3DB20", Slot = "88")]
			public virtual WVR_TextureParams_t GetTexture(IntPtr handle, int index)
			{
				return default(WVR_TextureParams_t);
			}

			[Token(Token = "0x6002BB5")]
			[Address(RVA = "0x1F3DB2C", Offset = "0x1F3DB2C", VA = "0x1F3DB2C", Slot = "89")]
			public virtual int GetAvailableTextureIndex(IntPtr handle)
			{
				return default(int);
			}

			[Token(Token = "0x6002BB6")]
			[Address(RVA = "0x1F3DB34", Offset = "0x1F3DB34", VA = "0x1F3DB34", Slot = "90")]
			public virtual void ReleaseTextureQueue(IntPtr handle)
			{
			}

			[Token(Token = "0x6002BB7")]
			[Address(RVA = "0x1F3DB38", Offset = "0x1F3DB38", VA = "0x1F3DB38", Slot = "91")]
			public virtual bool IsRenderFoveationSupport()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BB8")]
			[Address(RVA = "0x1F3DB40", Offset = "0x1F3DB40", VA = "0x1F3DB40", Slot = "92")]
			public virtual void RenderFoveation(bool enable)
			{
			}

			[Token(Token = "0x6002BB9")]
			[Address(RVA = "0x1F3DB44", Offset = "0x1F3DB44", VA = "0x1F3DB44", Slot = "93")]
			public virtual void SetPosePredictEnabled(WVR_DeviceType type, bool enabled_position_predict, bool enable_rotation_predict)
			{
			}

			[Token(Token = "0x6002BBA")]
			[Address(RVA = "0x1F3DB48", Offset = "0x1F3DB48", VA = "0x1F3DB48", Slot = "94")]
			public virtual bool ShowPassthroughOverlay(bool show)
			{
				return default(bool);
			}

			[Token(Token = "0x6002BBB")]
			[Address(RVA = "0x1F3DB50", Offset = "0x1F3DB50", VA = "0x1F3DB50", Slot = "95")]
			public virtual void EnableAutoPassthrough(bool enable)
			{
			}

			[Token(Token = "0x6002BBC")]
			[Address(RVA = "0x1F3DB54", Offset = "0x1F3DB54", VA = "0x1F3DB54", Slot = "96")]
			public virtual bool IsPassthroughOverlayVisible()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BBD")]
			[Address(RVA = "0x1F3DB5C", Offset = "0x1F3DB5C", VA = "0x1F3DB5C", Slot = "97")]
			public virtual string DeployRenderModelAssets(int deviceIndex, string renderModelName)
			{
				return null;
			}

			[Token(Token = "0x6002BBE")]
			[Address(RVA = "0x1F3DBA4", Offset = "0x1F3DBA4", VA = "0x1F3DBA4", Slot = "98")]
			public virtual void SetFocusedController(WVR_DeviceType focusController)
			{
			}

			[Token(Token = "0x6002BBF")]
			[Address(RVA = "0x1F3DBA8", Offset = "0x1F3DBA8", VA = "0x1F3DBA8", Slot = "99")]
			public virtual WVR_DeviceType GetFocusedController()
			{
				return default(WVR_DeviceType);
			}

			[Token(Token = "0x6002BC0")]
			[Address(RVA = "0x1F3DBB0", Offset = "0x1F3DBB0", VA = "0x1F3DBB0", Slot = "100")]
			public virtual bool OpenMesh(string filename, ref uint sessiionid, IntPtr errorCode, bool merge)
			{
				return default(bool);
			}

			[Token(Token = "0x6002BC1")]
			[Address(RVA = "0x1F3DBB8", Offset = "0x1F3DBB8", VA = "0x1F3DBB8", Slot = "101")]
			public virtual bool GetSectionCount(uint sessionid, ref uint sectionCount)
			{
				return default(bool);
			}

			[Token(Token = "0x6002BC2")]
			[Address(RVA = "0x1F3DBC0", Offset = "0x1F3DBC0", VA = "0x1F3DBC0", Slot = "102")]
			public virtual bool GetMeshData(uint sessionid, [In][Out] FBXInfo_t[] infoArray)
			{
				return default(bool);
			}

			[Token(Token = "0x6002BC3")]
			[Address(RVA = "0x1F3DBC8", Offset = "0x1F3DBC8", VA = "0x1F3DBC8", Slot = "103")]
			public virtual bool GetSectionData(uint sessionid, uint sectionIndiceIndex, [In][Out] Vector3[] vecticeArray, [In][Out] Vector3[] normalArray, [In][Out] Vector2[] uvArray, [In][Out] int[] indiceArray, ref bool active)
			{
				return default(bool);
			}

			[Token(Token = "0x6002BC4")]
			[Address(RVA = "0x1F3DBD0", Offset = "0x1F3DBD0", VA = "0x1F3DBD0", Slot = "104")]
			public virtual void ReleaseMesh(uint sessionid)
			{
			}

			[Token(Token = "0x6002BC5")]
			[Address(RVA = "0x1F3DBD4", Offset = "0x1F3DBD4", VA = "0x1F3DBD4", Slot = "105")]
			public virtual bool IsPermissionInitialed()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BC6")]
			[Address(RVA = "0x1F3DBDC", Offset = "0x1F3DBDC", VA = "0x1F3DBDC", Slot = "106")]
			public virtual bool ShowDialogOnScene()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BC7")]
			[Address(RVA = "0x1F3DBE4", Offset = "0x1F3DBE4", VA = "0x1F3DBE4", Slot = "107")]
			public virtual bool IsPermissionGranted(string permission)
			{
				return default(bool);
			}

			[Token(Token = "0x6002BC8")]
			[Address(RVA = "0x1F3DBEC", Offset = "0x1F3DBEC", VA = "0x1F3DBEC", Slot = "108")]
			public virtual bool ShouldGrantPermission(string permission)
			{
				return default(bool);
			}

			[Token(Token = "0x6002BC9")]
			[Address(RVA = "0x1F3DBF4", Offset = "0x1F3DBF4", VA = "0x1F3DBF4", Slot = "109")]
			public virtual void RequestPermissions(string[] permissions, WVR_RequestCompleteCallback cb)
			{
			}

			[Token(Token = "0x6002BCA")]
			[Address(RVA = "0x1F3E0A0", Offset = "0x1F3E0A0", VA = "0x1F3E0A0", Slot = "110")]
			public virtual void RequestUsbPermission(WVR_RequestUsbCompleteCallback cb)
			{
			}

			[Token(Token = "0x6002BCB")]
			[Address(RVA = "0x1F3E308", Offset = "0x1F3E308", VA = "0x1F3E308", Slot = "111")]
			public virtual string GetStringBySystemLanguage(string stringName)
			{
				return null;
			}

			[Token(Token = "0x6002BCC")]
			[Address(RVA = "0x1F3E310", Offset = "0x1F3E310", VA = "0x1F3E310", Slot = "112")]
			public virtual string GetStringByLanguage(string stringName, string lang, string country)
			{
				return null;
			}

			[Token(Token = "0x6002BCD")]
			[Address(RVA = "0x1F3E318", Offset = "0x1F3E318", VA = "0x1F3E318", Slot = "113")]
			public virtual string GetSystemLanguage()
			{
				return null;
			}

			[Token(Token = "0x6002BCE")]
			[Address(RVA = "0x1F3E360", Offset = "0x1F3E360", VA = "0x1F3E360", Slot = "114")]
			public virtual string GetSystemCountry()
			{
				return null;
			}

			[Token(Token = "0x6002BCF")]
			[Address(RVA = "0x1F3E3A8", Offset = "0x1F3E3A8", VA = "0x1F3E3A8", Slot = "115")]
			public virtual string GetOEMConfigByKey(string key)
			{
				return null;
			}

			[Token(Token = "0x6002BD0")]
			[Address(RVA = "0x1F3E3F0", Offset = "0x1F3E3F0", VA = "0x1F3E3F0", Slot = "116")]
			public virtual void SetOEMConfigChangedCallback(WVR_OnOEMConfigChanged cb)
			{
			}

			[Token(Token = "0x6002BD1")]
			[Address(RVA = "0x1F3E3F4", Offset = "0x1F3E3F4", VA = "0x1F3E3F4")]
			public WVR_Base()
			{
			}
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x1F39C88", Offset = "0x1F39C88", VA = "0x1F39C88")]
		public static bool WVR_PollEventQueue(ref WVR_Event_t e)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x1F39DD0", Offset = "0x1F39DD0", VA = "0x1F39DD0")]
		public static int WVR_GetInputDeviceCapability(WVR_DeviceType type, WVR_InputType inputType)
		{
			return default(int);
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x1F39E58", Offset = "0x1F39E58", VA = "0x1F39E58")]
		public static WVR_AnalogType WVR_GetInputDeviceAnalogType(WVR_DeviceType type, WVR_InputId id)
		{
			return default(WVR_AnalogType);
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x1F39EE0", Offset = "0x1F39EE0", VA = "0x1F39EE0")]
		public static bool WVR_GetInputDeviceState(WVR_DeviceType type, uint inputMask, ref uint buttons, ref uint touches, [In][Out] WVR_AnalogState_t[] analogArray, uint analogArrayCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x1F39F98", Offset = "0x1F39F98", VA = "0x1F39F98")]
		public static int WVR_GetInputTypeCount(WVR_DeviceType type, WVR_InputType inputType)
		{
			return default(int);
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x1F3A020", Offset = "0x1F3A020", VA = "0x1F3A020")]
		public static bool WVR_GetInputButtonState(WVR_DeviceType type, WVR_InputId id)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x1F3A0A8", Offset = "0x1F3A0A8", VA = "0x1F3A0A8")]
		public static bool WVR_GetInputTouchState(WVR_DeviceType type, WVR_InputId id)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x1F3A130", Offset = "0x1F3A130", VA = "0x1F3A130")]
		public static WVR_Axis_t WVR_GetInputAnalogAxis(WVR_DeviceType type, WVR_InputId id)
		{
			return default(WVR_Axis_t);
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x1F3A1B8", Offset = "0x1F3A1B8", VA = "0x1F3A1B8")]
		public static void WVR_GetPoseState(WVR_DeviceType type, WVR_PoseOriginModel originModel, uint predictedMilliSec, ref WVR_PoseState_t poseState)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x1F3A25C", Offset = "0x1F3A25C", VA = "0x1F3A25C")]
		public static void WVR_SetTextureBounds([In][Out] WVR_TextureBound_t[] textureBounds)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x1F3A2D4", Offset = "0x1F3A2D4", VA = "0x1F3A2D4")]
		public static void WVR_GetLastPoseIndex(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount, ref uint frameIndex)
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x1F3A378", Offset = "0x1F3A378", VA = "0x1F3A378")]
		public static void WVR_WaitGetPoseIndex(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount, ref uint frameIndex)
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x1F3A41C", Offset = "0x1F3A41C", VA = "0x1F3A41C")]
		public static IntPtr WVR_StoreRenderTextures(IntPtr[] texturesIDs, int size, bool eEye, WVR_TextureTarget target)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x1F3A4C0", Offset = "0x1F3A4C0", VA = "0x1F3A4C0")]
		public static void WVR_GetSyncPose(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount)
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x1F3A554", Offset = "0x1F3A554", VA = "0x1F3A554")]
		public static bool WVR_IsDeviceConnected(WVR_DeviceType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x1F3A5D0", Offset = "0x1F3A5D0", VA = "0x1F3A5D0")]
		public static void WVR_TriggerVibration(WVR_DeviceType type, WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity)
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x1F3A67C", Offset = "0x1F3A67C", VA = "0x1F3A67C")]
		public static void WVR_InAppRecenter(WVR_RecenterType recenterType)
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x1F3A6F8", Offset = "0x1F3A6F8", VA = "0x1F3A6F8")]
		public static void WVR_SetNeckModelEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x1F3A774", Offset = "0x1F3A774", VA = "0x1F3A774")]
		public static void WVR_SetNeckModel(WVR_SimulationType simulationType)
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x1F3A7F0", Offset = "0x1F3A7F0", VA = "0x1F3A7F0")]
		public static void WVR_SetArmModel(WVR_SimulationType simulationType)
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x1F3A86C", Offset = "0x1F3A86C", VA = "0x1F3A86C")]
		public static void WVR_SetArmSticky(bool stickyArm)
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x1F3A8E8", Offset = "0x1F3A8E8", VA = "0x1F3A8E8")]
		public static bool WVR_SetInputRequest(WVR_DeviceType type, WVR_InputAttribute_t[] request, uint size)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x1F3A97C", Offset = "0x1F3A97C", VA = "0x1F3A97C")]
		public static bool WVR_GetInputMappingPair(WVR_DeviceType type, WVR_InputId destination, ref WVR_InputMappingPair_t pair)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x1F3AA10", Offset = "0x1F3AA10", VA = "0x1F3AA10")]
		public static uint WVR_GetInputMappingTable(WVR_DeviceType type, [In][Out] WVR_InputMappingPair_t[] table, uint size)
		{
			return default(uint);
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x1F3AAA4", Offset = "0x1F3AAA4", VA = "0x1F3AAA4")]
		public static WVR_Arena_t WVR_GetArena()
		{
			return default(WVR_Arena_t);
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x1F3AB20", Offset = "0x1F3AB20", VA = "0x1F3AB20")]
		public static bool WVR_SetArena(ref WVR_Arena_t arena)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x1F3AB9C", Offset = "0x1F3AB9C", VA = "0x1F3AB9C")]
		public static WVR_ArenaVisible WVR_GetArenaVisible()
		{
			return default(WVR_ArenaVisible);
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x1F3AC10", Offset = "0x1F3AC10", VA = "0x1F3AC10")]
		public static void WVR_SetArenaVisible(WVR_ArenaVisible config)
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x1F3AC8C", Offset = "0x1F3AC8C", VA = "0x1F3AC8C")]
		public static bool WVR_IsOverArenaRange()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x1F3AD00", Offset = "0x1F3AD00", VA = "0x1F3AD00")]
		public static float WVR_GetDeviceBatteryPercentage(WVR_DeviceType type)
		{
			return default(float);
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x1F3AD7C", Offset = "0x1F3AD7C", VA = "0x1F3AD7C")]
		public static WVR_BatteryStatus WVR_GetBatteryStatus(WVR_DeviceType type)
		{
			return default(WVR_BatteryStatus);
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x1F3ADF8", Offset = "0x1F3ADF8", VA = "0x1F3ADF8")]
		public static WVR_ChargeStatus WVR_GetChargeStatus(WVR_DeviceType type)
		{
			return default(WVR_ChargeStatus);
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x1F3AE74", Offset = "0x1F3AE74", VA = "0x1F3AE74")]
		public static WVR_BatteryTemperatureStatus WVR_GetBatteryTemperatureStatus(WVR_DeviceType type)
		{
			return default(WVR_BatteryTemperatureStatus);
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x1F3AEF0", Offset = "0x1F3AEF0", VA = "0x1F3AEF0")]
		public static float WVR_GetBatteryTemperature(WVR_DeviceType type)
		{
			return default(float);
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x1F3AF6C", Offset = "0x1F3AF6C", VA = "0x1F3AF6C")]
		public static WVR_Result WVR_StartHandGesture()
		{
			return default(WVR_Result);
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x1F3AFE0", Offset = "0x1F3AFE0", VA = "0x1F3AFE0")]
		public static void WVR_StopHandGesture()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x1F3B054", Offset = "0x1F3B054", VA = "0x1F3B054")]
		public static WVR_Result WVR_GetHandGestureData(ref WVR_HandGestureData_t data)
		{
			return default(WVR_Result);
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x1F3B0D0", Offset = "0x1F3B0D0", VA = "0x1F3B0D0")]
		public static WVR_Result WVR_StartHandTracking()
		{
			return default(WVR_Result);
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x1F3B144", Offset = "0x1F3B144", VA = "0x1F3B144")]
		public static void WVR_StopHandTracking()
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x1F3B1B8", Offset = "0x1F3B1B8", VA = "0x1F3B1B8")]
		public static WVR_Result WVR_GetHandTrackingData(ref WVR_HandTrackingData_t data, WVR_PoseOriginModel originModel, uint predictedMilliSec)
		{
			return default(WVR_Result);
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x1F3B24C", Offset = "0x1F3B24C", VA = "0x1F3B24C")]
		public static ulong WVR_GetSupportedFeatures()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x1F3B2C0", Offset = "0x1F3B2C0", VA = "0x1F3B2C0")]
		public static WVR_InitError WVR_Init(WVR_AppType eType)
		{
			return default(WVR_InitError);
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x1F3B33C", Offset = "0x1F3B33C", VA = "0x1F3B33C")]
		public static void WVR_PostInit()
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x1F3B3B0", Offset = "0x1F3B3B0", VA = "0x1F3B3B0")]
		public static void WVR_Quit()
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x1F3B424", Offset = "0x1F3B424", VA = "0x1F3B424")]
		public static IntPtr WVR_GetInitErrorString(WVR_InitError error)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x1F3B4A0", Offset = "0x1F3B4A0", VA = "0x1F3B4A0")]
		public static uint WVR_GetWaveRuntimeVersion()
		{
			return default(uint);
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x1F3B514", Offset = "0x1F3B514", VA = "0x1F3B514")]
		public static uint WVR_GetWaveSDKVersion()
		{
			return default(uint);
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x1F3B588", Offset = "0x1F3B588", VA = "0x1F3B588")]
		public static bool WVR_IsInputFocusCapturedBySystem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x1F3B5FC", Offset = "0x1F3B5FC", VA = "0x1F3B5FC")]
		internal static WVR_RenderError WVR_RenderInit(ref WVR_RenderInitParams_t param)
		{
			return default(WVR_RenderError);
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x1F3B678", Offset = "0x1F3B678", VA = "0x1F3B678")]
		public static bool WVR_SetPerformanceLevels(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x1F3B704", Offset = "0x1F3B704", VA = "0x1F3B704")]
		public static bool WVR_EnableAdaptiveQuality(bool enable, uint flags)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x1F3B790", Offset = "0x1F3B790", VA = "0x1F3B790")]
		public static bool WVR_IsAdaptiveQualityEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x1F3B804", Offset = "0x1F3B804", VA = "0x1F3B804")]
		public static bool WVR_StartCamera(ref WVR_CameraInfo_t info)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x1F3B880", Offset = "0x1F3B880", VA = "0x1F3B880")]
		public static void WVR_StopCamera()
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x1F3B8F4", Offset = "0x1F3B8F4", VA = "0x1F3B8F4")]
		public static bool WVR_UpdateTexture(IntPtr textureid)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x1F3B970", Offset = "0x1F3B970", VA = "0x1F3B970")]
		public static bool WVR_GetCameraIntrinsic(WVR_CameraPosition position, ref WVR_CameraIntrinsic_t intrinsic)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x1F3B9FC", Offset = "0x1F3B9FC", VA = "0x1F3B9FC")]
		public static bool WVR_GetCameraFrameBuffer(IntPtr pFramebuffer, uint frameBufferSize)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x1F3BA88", Offset = "0x1F3BA88", VA = "0x1F3BA88")]
		public static bool WVR_GetFrameBufferWithPoseState(IntPtr frameBuffer, uint frameBufferSize, WVR_PoseOriginModel origin, uint predictInMs, ref WVR_PoseState_t poseState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x1F3BB34", Offset = "0x1F3BB34", VA = "0x1F3BB34")]
		public static bool WVR_DrawTextureWithBuffer(IntPtr textureId, WVR_CameraImageFormat imgFormat, IntPtr frameBuffer, uint size, uint width, uint height)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x1F3BBF0", Offset = "0x1F3BBF0", VA = "0x1F3BBF0")]
		public static void WVR_ReleaseCameraTexture()
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x1F3BC64", Offset = "0x1F3BC64", VA = "0x1F3BC64")]
		public static bool WVR_IsDeviceSuspend(WVR_DeviceType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x1F3BCE0", Offset = "0x1F3BCE0", VA = "0x1F3BCE0")]
		public static void WVR_ConvertMatrixQuaternion(ref WVR_Matrix4f_t mat, ref WVR_Quatf_t quat, bool m2q)
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x1F3BD74", Offset = "0x1F3BD74", VA = "0x1F3BD74")]
		public static WVR_NumDoF WVR_GetDegreeOfFreedom(WVR_DeviceType type)
		{
			return default(WVR_NumDoF);
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x1F3BDF0", Offset = "0x1F3BDF0", VA = "0x1F3BDF0")]
		public static void WVR_SetParameters(WVR_DeviceType type, IntPtr pchValue)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x1F3BE7C", Offset = "0x1F3BE7C", VA = "0x1F3BE7C")]
		public static uint WVR_GetParameters(WVR_DeviceType type, IntPtr pchValue, IntPtr retValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x1F3BF20", Offset = "0x1F3BF20", VA = "0x1F3BF20")]
		public static WVR_DeviceType WVR_GetDefaultControllerRole()
		{
			return default(WVR_DeviceType);
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x1F3BF94", Offset = "0x1F3BF94", VA = "0x1F3BF94")]
		public static bool WVR_SetInteractionMode(WVR_InteractionMode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x1F3C010", Offset = "0x1F3C010", VA = "0x1F3C010")]
		public static WVR_InteractionMode WVR_GetInteractionMode()
		{
			return default(WVR_InteractionMode);
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x1F3C084", Offset = "0x1F3C084", VA = "0x1F3C084")]
		public static bool WVR_SetGazeTriggerType(WVR_GazeTriggerType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x1F3C100", Offset = "0x1F3C100", VA = "0x1F3C100")]
		public static WVR_GazeTriggerType WVR_GetGazeTriggerType()
		{
			return default(WVR_GazeTriggerType);
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x1F3C174", Offset = "0x1F3C174", VA = "0x1F3C174")]
		public static bool WVR_GetDeviceErrorState(WVR_DeviceType dev_type, WVR_DeviceErrorState error_state)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x1F3C200", Offset = "0x1F3C200", VA = "0x1F3C200")]
		public static void WVR_GetRenderTargetSize(ref uint width, ref uint height)
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x1F3C28C", Offset = "0x1F3C28C", VA = "0x1F3C28C")]
		public static WVR_Matrix4f_t WVR_GetProjection(WVR_Eye eye, float near, float far)
		{
			return default(WVR_Matrix4f_t);
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x1F3C330", Offset = "0x1F3C330", VA = "0x1F3C330")]
		public static void WVR_GetClippingPlaneBoundary(WVR_Eye eye, ref float left, ref float right, ref float top, ref float bottom)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x1F3C3DC", Offset = "0x1F3C3DC", VA = "0x1F3C3DC")]
		public static void WVR_SetOverfillRatio(float ratioX, float ratioY)
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x1F3C468", Offset = "0x1F3C468", VA = "0x1F3C468")]
		public static WVR_Matrix4f_t WVR_GetTransformFromEyeToHead(WVR_Eye eye, WVR_NumDoF dof)
		{
			return default(WVR_Matrix4f_t);
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x1F3C4FC", Offset = "0x1F3C4FC", VA = "0x1F3C4FC")]
		public static WVR_SubmitError WVR_SubmitFrame(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod)
		{
			return default(WVR_SubmitError);
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x1F3C5A0", Offset = "0x1F3C5A0", VA = "0x1F3C5A0")]
		public static void WVR_SetSubmitParams(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x1F3C644", Offset = "0x1F3C644", VA = "0x1F3C644")]
		public static void WVR_PreRenderEye(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_RenderFoveationParams[] foveationParams)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x1F3C6D8", Offset = "0x1F3C6D8", VA = "0x1F3C6D8")]
		public static bool WVR_RequestScreenshot(uint width, uint height, WVR_ScreenshotMode mode, IntPtr filename)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x1F3C77C", Offset = "0x1F3C77C", VA = "0x1F3C77C")]
		public static void WVR_RenderMask(WVR_Eye eye)
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x1F3C7F8", Offset = "0x1F3C7F8", VA = "0x1F3C7F8")]
		public static bool WVR_GetRenderProps(ref WVR_RenderProps_t props)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x1F3C874", Offset = "0x1F3C874", VA = "0x1F3C874")]
		public static IntPtr WVR_ObtainTextureQueue(WVR_TextureTarget target, WVR_TextureFormat format, WVR_TextureType type, uint width, uint height, int level)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x1F3C930", Offset = "0x1F3C930", VA = "0x1F3C930")]
		public static uint WVR_GetTextureQueueLength(IntPtr handle)
		{
			return default(uint);
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x1F3C9AC", Offset = "0x1F3C9AC", VA = "0x1F3C9AC")]
		public static WVR_TextureParams_t WVR_GetTexture(IntPtr handle, int index)
		{
			return default(WVR_TextureParams_t);
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x1F3CA40", Offset = "0x1F3CA40", VA = "0x1F3CA40")]
		public static int WVR_GetAvailableTextureIndex(IntPtr handle)
		{
			return default(int);
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x1F3CABC", Offset = "0x1F3CABC", VA = "0x1F3CABC")]
		public static void WVR_ReleaseTextureQueue(IntPtr handle)
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x1F3CB38", Offset = "0x1F3CB38", VA = "0x1F3CB38")]
		public static bool WVR_IsRenderFoveationSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x1F3CBAC", Offset = "0x1F3CBAC", VA = "0x1F3CBAC")]
		public static void WVR_RenderFoveation(bool enable)
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x1F3CC28", Offset = "0x1F3CC28", VA = "0x1F3CC28")]
		public static bool WVR_IsPermissionInitialed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x1F3CC9C", Offset = "0x1F3CC9C", VA = "0x1F3CC9C")]
		public static bool WVR_ShowDialogOnScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x1F3CD10", Offset = "0x1F3CD10", VA = "0x1F3CD10")]
		public static bool WVR_IsPermissionGranted(string permission)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x1F3CD8C", Offset = "0x1F3CD8C", VA = "0x1F3CD8C")]
		public static bool WVR_ShouldGrantPermission(string permission)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x1F3CE08", Offset = "0x1F3CE08", VA = "0x1F3CE08")]
		public static void WVR_RequestPermissions(string[] permissions, WVR_RequestCompleteCallback cb)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x1F3CE94", Offset = "0x1F3CE94", VA = "0x1F3CE94")]
		public static void WVR_RequestUsbPermission(WVR_RequestUsbCompleteCallback cb)
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x1F3CF10", Offset = "0x1F3CF10", VA = "0x1F3CF10")]
		public static string WVR_GetStringBySystemLanguage(string stringName)
		{
			return null;
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x1F3CF8C", Offset = "0x1F3CF8C", VA = "0x1F3CF8C")]
		public static string WVR_GetStringByLanguage(string stringName, string lang, string country)
		{
			return null;
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x1F3D020", Offset = "0x1F3D020", VA = "0x1F3D020")]
		public static string WVR_GetSystemLanguage()
		{
			return null;
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x1F3D094", Offset = "0x1F3D094", VA = "0x1F3D094")]
		public static string WVR_GetSystemCountry()
		{
			return null;
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x1F3D108", Offset = "0x1F3D108", VA = "0x1F3D108")]
		public static void WVR_SetPosePredictEnabled(WVR_DeviceType type, bool enabled_position_predict, bool enable_rotation_predict)
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x1F3D19C", Offset = "0x1F3D19C", VA = "0x1F3D19C")]
		public static bool WVR_ShowPassthroughOverlay(bool show)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x1F3D218", Offset = "0x1F3D218", VA = "0x1F3D218")]
		public static void WVR_EnableAutoPassthrough(bool enable)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x1F3D294", Offset = "0x1F3D294", VA = "0x1F3D294")]
		public static bool WVR_IsPassthroughOverlayVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x1F3D308", Offset = "0x1F3D308", VA = "0x1F3D308")]
		public static string WVR_DeployRenderModelAssets(int deviceIndex, string renderModelName)
		{
			return null;
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x1F3D394", Offset = "0x1F3D394", VA = "0x1F3D394")]
		public static void WVR_SetFocusedController(WVR_DeviceType focusController)
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x1F3D410", Offset = "0x1F3D410", VA = "0x1F3D410")]
		public static WVR_DeviceType WVR_GetFocusedController()
		{
			return default(WVR_DeviceType);
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x1F3D484", Offset = "0x1F3D484", VA = "0x1F3D484")]
		public static bool WVR_OpenMesh(string filename, ref uint sessionid, IntPtr errorCode, bool merge)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x1F3D528", Offset = "0x1F3D528", VA = "0x1F3D528")]
		public static bool WVR_GetSectionCount(uint sessionid, ref uint sectionCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x1F3D5B4", Offset = "0x1F3D5B4", VA = "0x1F3D5B4")]
		public static bool WVR_GetMeshData(uint sessionid, [In][Out] FBXInfo_t[] infoArray)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x1F3D640", Offset = "0x1F3D640", VA = "0x1F3D640")]
		public static bool WVR_GetSectionData(uint sessionid, uint sectionIndiceIndex, [In][Out] Vector3[] vecticeArray, [In][Out] Vector3[] normalArray, [In][Out] Vector2[] uvArray, [In][Out] int[] indiceArray, ref bool active)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x1F3D718", Offset = "0x1F3D718", VA = "0x1F3D718")]
		public static void WVR_ReleaseMesh(uint sessiionid)
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x1F3D794", Offset = "0x1F3D794", VA = "0x1F3D794")]
		public static string WVR_GetOEMConfigByKey(string key)
		{
			return null;
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x1F3D810", Offset = "0x1F3D810", VA = "0x1F3D810")]
		public static void WVR_SetOEMConfigChangedCallback(WVR_OnOEMConfigChanged cb)
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x1F3D88C", Offset = "0x1F3D88C", VA = "0x1F3D88C")]
		public Interop()
		{
		}
	}
}
namespace wvr.TypeExtensions
{
	[Token(Token = "0x20001E6")]
	public static class ClassExtensions
	{
	}
	[Token(Token = "0x20001E7")]
	public static class EnumExtensions
	{
		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x1F3E400", Offset = "0x1F3E400", VA = "0x1F3E400")]
		public static string Name(this WVR_DeviceType e)
		{
			return null;
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x1F3E468", Offset = "0x1F3E468", VA = "0x1F3E468")]
		public static string Name(this WVR_InputId e)
		{
			return null;
		}
	}
}
namespace wvr.render
{
	[Token(Token = "0x20001E8")]
	public class WaveVR_FoveatedRendering : MonoBehaviour
	{
		[Token(Token = "0x2000630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72814", Offset = "0xB72814")]
		private sealed class <SetEnableCoroutine>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaveVR_FoveatedRendering <>4__this;

			[Token(Token = "0x170004B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BD6")]
				[Address(RVA = "0x1F4253C", Offset = "0x1F4253C", VA = "0x1F4253C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BD8")]
				[Address(RVA = "0x1F425A8", Offset = "0x1F425A8", VA = "0x1F425A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BD3")]
			[Address(RVA = "0x1F41824", Offset = "0x1F41824", VA = "0x1F41824")]
			[DebuggerHidden]
			public <SetEnableCoroutine>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6002BD4")]
			[Address(RVA = "0x1F421D0", Offset = "0x1F421D0", VA = "0x1F421D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BD5")]
			[Address(RVA = "0x1F421D4", Offset = "0x1F421D4", VA = "0x1F421D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BD7")]
			[Address(RVA = "0x1F42544", Offset = "0x1F42544", VA = "0x1F42544", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string TAG;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string StaticTrackedObjectName;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB776D0", Offset = "0xB776D0")]
		private static WaveVR_FoveatedRendering <Instance>k__BackingField;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool useValuesInInspector;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB776E0", Offset = "0xB776E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB776E0", Offset = "0xB776E0")]
		[SerializeField]
		private float leftClearVisionFOV;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77748", Offset = "0xB77748")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB77748", Offset = "0xB77748")]
		[SerializeField]
		private float rightClearVisionFOV;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB777B0", Offset = "0xB777B0")]
		[SerializeField]
		private WVR_PeripheralQuality leftPeripheralQuality;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB777FC", Offset = "0xB777FC")]
		[SerializeField]
		private WVR_PeripheralQuality rightPeripheralQuality;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77848", Offset = "0xB77848")]
		[SerializeField]
		private Vector3 staticFocalPoint;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private static bool isEnabled;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77894", Offset = "0xB77894")]
		[SerializeField]
		private GameObject trackedObject;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject staticTrackedObject;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB778E0", Offset = "0xB778E0")]
		private Vector2 <LeftNDCSpace>k__BackingField;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB778F0", Offset = "0xB778F0")]
		private Vector2 <RightNDCSpace>k__BackingField;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isDirty;

		[Token(Token = "0x170000C9")]
		public static WaveVR_FoveatedRendering Instance
		{
			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0x1F40D08", Offset = "0x1F40D08", VA = "0x1F40D08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB860BC", Offset = "0xB860BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0x1F40D70", Offset = "0x1F40D70", VA = "0x1F40D70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB860CC", Offset = "0xB860CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public float LeftClearVisionFOV
		{
			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0x1F40DDC", Offset = "0x1F40DDC", VA = "0x1F40DDC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F40")]
			[Address(RVA = "0x1F40DE4", Offset = "0x1F40DE4", VA = "0x1F40DE4")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public float RightClearVisionFOV
		{
			[Token(Token = "0x6000F41")]
			[Address(RVA = "0x1F40E74", Offset = "0x1F40E74", VA = "0x1F40E74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0x1F40E7C", Offset = "0x1F40E7C", VA = "0x1F40E7C")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public WVR_PeripheralQuality LeftPeripheralQuality
		{
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0x1F40F0C", Offset = "0x1F40F0C", VA = "0x1F40F0C")]
			get
			{
				return default(WVR_PeripheralQuality);
			}
			[Token(Token = "0x6000F44")]
			[Address(RVA = "0x1F40F14", Offset = "0x1F40F14", VA = "0x1F40F14")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public WVR_PeripheralQuality RightPeripheralQuality
		{
			[Token(Token = "0x6000F45")]
			[Address(RVA = "0x1F40F24", Offset = "0x1F40F24", VA = "0x1F40F24")]
			get
			{
				return default(WVR_PeripheralQuality);
			}
			[Token(Token = "0x6000F46")]
			[Address(RVA = "0x1F40F2C", Offset = "0x1F40F2C", VA = "0x1F40F2C")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public Vector3 StaticFocalPoint
		{
			[Token(Token = "0x6000F47")]
			[Address(RVA = "0x1F40F3C", Offset = "0x1F40F3C", VA = "0x1F40F3C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F48")]
			[Address(RVA = "0x1F40F48", Offset = "0x1F40F48", VA = "0x1F40F48")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public GameObject TrackedObject
		{
			[Token(Token = "0x6000F49")]
			[Address(RVA = "0x1F40F5C", Offset = "0x1F40F5C", VA = "0x1F40F5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F4A")]
			[Address(RVA = "0x1F40F64", Offset = "0x1F40F64", VA = "0x1F40F64")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public Vector2 LeftNDCSpace
		{
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0x1F40F74", Offset = "0x1F40F74", VA = "0x1F40F74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB860DC", Offset = "0xB860DC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0x1F40F7C", Offset = "0x1F40F7C", VA = "0x1F40F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB860EC", Offset = "0xB860EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		public Vector2 RightNDCSpace
		{
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0x1F40F84", Offset = "0x1F40F84", VA = "0x1F40F84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB860FC", Offset = "0xB860FC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0x1F40F8C", Offset = "0x1F40F8C", VA = "0x1F40F8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8610C", Offset = "0xB8610C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x1F40F94", Offset = "0x1F40F94", VA = "0x1F40F94")]
		public void Apply()
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x1F414F0", Offset = "0x1F414F0", VA = "0x1F414F0")]
		private void ValidateFOV(float fov)
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x1F41594", Offset = "0x1F41594", VA = "0x1F41594")]
		private void ValidateQuality(WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x1F4161C", Offset = "0x1F4161C", VA = "0x1F4161C")]
		public void Validate()
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x1F41654", Offset = "0x1F41654", VA = "0x1F41654")]
		public void Set(WVR_Eye eye, float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x1F41768", Offset = "0x1F41768", VA = "0x1F41768")]
		public void Set(float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x1F417B0", Offset = "0x1F417B0", VA = "0x1F417B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8611C", Offset = "0xB8611C")]
		private IEnumerator SetEnableCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x1F41850", Offset = "0x1F41850", VA = "0x1F41850")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x1F418E0", Offset = "0x1F418E0", VA = "0x1F418E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x1F41A90", Offset = "0x1F41A90", VA = "0x1F41A90")]
		private void CreateTrackedObject(WaveVR_Render render)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x1F41C7C", Offset = "0x1F41C7C", VA = "0x1F41C7C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x1F41008", Offset = "0x1F41008", VA = "0x1F41008")]
		private void doUpdate()
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x1F41C8C", Offset = "0x1F41C8C", VA = "0x1F41C8C")]
		public static Vector2 WorldToNDC_GL(Camera camera, Vector3 worldPoint)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x1F41E08", Offset = "0x1F41E08", VA = "0x1F41E08")]
		private static void SetFoveatedRenderingParameterCheck(WVR_Eye eye, float ndcFocalPointX, float ndcFocalPointY, float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x1F41F70", Offset = "0x1F41F70", VA = "0x1F41F70")]
		public static void SetFoveatedRenderingParameter(WVR_Eye eye, float ndcFocalPointX, float ndcFocalPointY, float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x1F4201C", Offset = "0x1F4201C", VA = "0x1F4201C")]
		public static void SetFoveatedRenderingParameter(WVR_Eye eye, Vector2 ndcSpace, float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x1F420D0", Offset = "0x1F420D0", VA = "0x1F420D0")]
		public WaveVR_FoveatedRendering()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public struct TextureConfig
	{
		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int w;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int h;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int depth;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public RenderTextureFormat format;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool useMipMap;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int anisoLevel;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FilterMode filterMode;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TextureWrapMode wrapMode;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int antiAliasing;

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xC671BC", Offset = "0xC671BC", VA = "0xC671BC", Slot = "0")]
		public override bool Equals(object a)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xC671C4", Offset = "0xC671C4", VA = "0xC671C4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x1F3EDDC", Offset = "0x1F3EDDC", VA = "0x1F3EDDC")]
		public static bool operator ==(TextureConfig a, TextureConfig b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x1F3EE20", Offset = "0x1F3EE20", VA = "0x1F3EE20")]
		public static bool operator !=(TextureConfig a, TextureConfig b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001EA")]
	public class EyeConfig
	{
		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77900", Offset = "0xB77900")]
		private bool <isBoth>k__BackingField;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77910", Offset = "0xB77910")]
		private bool <isLeft>k__BackingField;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77920", Offset = "0xB77920")]
		private bool <isRight>k__BackingField;

		[Token(Token = "0x170000D2")]
		public bool isBoth
		{
			[Token(Token = "0x6000F66")]
			[Address(RVA = "0x1F3ECE4", Offset = "0x1F3ECE4", VA = "0x1F3ECE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86180", Offset = "0xB86180")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F67")]
			[Address(RVA = "0x1F3ECEC", Offset = "0x1F3ECEC", VA = "0x1F3ECEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86190", Offset = "0xB86190")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public bool isLeft
		{
			[Token(Token = "0x6000F68")]
			[Address(RVA = "0x1F3ECF8", Offset = "0x1F3ECF8", VA = "0x1F3ECF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB861A0", Offset = "0xB861A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F69")]
			[Address(RVA = "0x1F3ED00", Offset = "0x1F3ED00", VA = "0x1F3ED00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB861B0", Offset = "0xB861B0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public bool isRight
		{
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0x1F3ED0C", Offset = "0x1F3ED0C", VA = "0x1F3ED0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB861C0", Offset = "0xB861C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0x1F3ED14", Offset = "0x1F3ED14", VA = "0x1F3ED14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB861D0", Offset = "0xB861D0")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x1F3EC8C", Offset = "0x1F3EC8C", VA = "0x1F3EC8C")]
		public EyeConfig(WVR_Eye eye)
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public abstract class TexturePool<T> : EyeConfig where T : class
	{
		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IntPtr queue;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<T> rts;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<int, T> textures;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<int, int> depthes;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<int, TextureConfig> cfgs;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TextureConfig cfg;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77930", Offset = "0xB77930")]
		private int <size>k__BackingField;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77940", Offset = "0xB77940")]
		private T <currentRt>k__BackingField;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77950", Offset = "0xB77950")]
		private int <currentPtr>k__BackingField;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77960", Offset = "0xB77960")]
		private int <currentDepthPtr>k__BackingField;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77970", Offset = "0xB77970")]
		private bool <isReleased>k__BackingField;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77980", Offset = "0xB77980")]
		private bool <isTextureChanged>k__BackingField;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int[] keyArray;

		[Token(Token = "0x170000D5")]
		public TextureConfig Config
		{
			[Token(Token = "0x6000F6C")]
			get
			{
				return default(TextureConfig);
			}
			[Token(Token = "0x6000F6D")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public int size
		{
			[Token(Token = "0x6000F6E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB861E0", Offset = "0xB861E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F6F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB861F0", Offset = "0xB861F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public T currentRt
		{
			[Token(Token = "0x6000F70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86200", Offset = "0xB86200")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F71")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86210", Offset = "0xB86210")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public int currentPtr
		{
			[Token(Token = "0x6000F72")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86220", Offset = "0xB86220")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F73")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86230", Offset = "0xB86230")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public int currentDepthPtr
		{
			[Token(Token = "0x6000F74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86240", Offset = "0xB86240")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F75")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86250", Offset = "0xB86250")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public bool isReleased
		{
			[Token(Token = "0x6000F76")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86260", Offset = "0xB86260")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F77")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86270", Offset = "0xB86270")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public bool isTextureChanged
		{
			[Token(Token = "0x6000F78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86280", Offset = "0xB86280")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F79")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86290", Offset = "0xB86290")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F7A")]
		protected abstract T CreateTexture(TextureConfig cfg);

		[Token(Token = "0x6000F7B")]
		protected abstract int GetNativePtr(T rt);

		[Token(Token = "0x6000F7C")]
		protected abstract int GetNativeDepthBufferPtr(T rt);

		[Token(Token = "0x6000F7D")]
		protected abstract void ReleaseTexture(T rt);

		[Token(Token = "0x6000F7E")]
		public TexturePool(TextureConfig cfg, int size, WVR_Eye eye)
		{
		}

		[Token(Token = "0x6000F7F")]
		~TexturePool()
		{
		}

		[Token(Token = "0x6000F80")]
		private T GetRenderTextureByPtr(int ptr)
		{
			return null;
		}

		[Token(Token = "0x6000F81")]
		private int GetDepthByPtr(int ptr)
		{
			return default(int);
		}

		[Token(Token = "0x6000F82")]
		public void next()
		{
		}

		[Token(Token = "0x6000F83")]
		private bool CfgValidate(int nativePtr)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F84")]
		private void ReplaceCurrentWithNewTexture()
		{
		}

		[Token(Token = "0x6000F85")]
		public void Release()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class TexturePool2DArray : TexturePool<Texture2DArray>
	{
		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x1F404DC", Offset = "0x1F404DC", VA = "0x1F404DC")]
		public TexturePool2DArray(TextureConfig cfg, int size)
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x1F4057C", Offset = "0x1F4057C", VA = "0x1F4057C", Slot = "4")]
		protected override Texture2DArray CreateTexture(TextureConfig cfg)
		{
			return null;
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x1F40640", Offset = "0x1F40640", VA = "0x1F40640", Slot = "5")]
		protected override int GetNativePtr(Texture2DArray rt)
		{
			return default(int);
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x1F406E0", Offset = "0x1F406E0", VA = "0x1F406E0", Slot = "6")]
		protected override int GetNativeDepthBufferPtr(Texture2DArray rt)
		{
			return default(int);
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x1F406E8", Offset = "0x1F406E8", VA = "0x1F406E8", Slot = "7")]
		protected override void ReleaseTexture(Texture2DArray rt)
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class TexturePoolRenderTexture2DArray : TexturePool<RenderTexture>
	{
		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x1F3FCAC", Offset = "0x1F3FCAC", VA = "0x1F3FCAC")]
		public TexturePoolRenderTexture2DArray(TextureConfig cfg, int size)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x1F409E0", Offset = "0x1F409E0", VA = "0x1F409E0", Slot = "4")]
		protected override RenderTexture CreateTexture(TextureConfig cfg)
		{
			return null;
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x1F40B10", Offset = "0x1F40B10", VA = "0x1F40B10", Slot = "5")]
		protected override int GetNativePtr(RenderTexture rt)
		{
			return default(int);
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x1F40BB0", Offset = "0x1F40BB0", VA = "0x1F40BB0", Slot = "6")]
		protected override int GetNativeDepthBufferPtr(RenderTexture rt)
		{
			return default(int);
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x1F40C50", Offset = "0x1F40C50", VA = "0x1F40C50", Slot = "7")]
		protected override void ReleaseTexture(RenderTexture rt)
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class TexturePoolRenderTexture : TexturePool<RenderTexture>
	{
		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x1F3FD4C", Offset = "0x1F3FD4C", VA = "0x1F3FD4C")]
		public TexturePoolRenderTexture(TextureConfig cfg, int size, WVR_Eye eye)
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x1F406EC", Offset = "0x1F406EC", VA = "0x1F406EC", Slot = "4")]
		protected override RenderTexture CreateTexture(TextureConfig cfg)
		{
			return null;
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x1F407E8", Offset = "0x1F407E8", VA = "0x1F407E8", Slot = "5")]
		protected override int GetNativePtr(RenderTexture rt)
		{
			return default(int);
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x1F40888", Offset = "0x1F40888", VA = "0x1F40888", Slot = "6")]
		protected override int GetNativeDepthBufferPtr(RenderTexture rt)
		{
			return default(int);
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x1F40928", Offset = "0x1F40928", VA = "0x1F40928", Slot = "7")]
		protected override void ReleaseTexture(RenderTexture rt)
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class TextureManager
	{
		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string TAG;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int poolSize;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77990", Offset = "0xB77990")]
		private bool <IsSinglePass>k__BackingField;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB779A0", Offset = "0xB779A0")]
		private bool <AllowAntiAliasing>k__BackingField;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB779B0", Offset = "0xB779B0")]
		private TexturePoolRenderTexture <left>k__BackingField;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB779C0", Offset = "0xB779C0")]
		private TexturePoolRenderTexture <right>k__BackingField;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB779D0", Offset = "0xB779D0")]
		private TexturePoolRenderTexture2DArray <both>k__BackingField;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int screenWidth;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int screenHeight;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly float pixelDensity;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float resolutionScale;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB779E0", Offset = "0xB779E0")]
		private bool <isTextureChanged>k__BackingField;

		[Token(Token = "0x170000DC")]
		public bool IsSinglePass
		{
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x1F3EE5C", Offset = "0x1F3EE5C", VA = "0x1F3EE5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB862A0", Offset = "0xB862A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F96")]
			[Address(RVA = "0x1F3EE64", Offset = "0x1F3EE64", VA = "0x1F3EE64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB862B0", Offset = "0xB862B0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public bool AllowAntiAliasing
		{
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x1F3EE70", Offset = "0x1F3EE70", VA = "0x1F3EE70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB862C0", Offset = "0xB862C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x1F3EE78", Offset = "0x1F3EE78", VA = "0x1F3EE78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB862D0", Offset = "0xB862D0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public TexturePoolRenderTexture left
		{
			[Token(Token = "0x6000F99")]
			[Address(RVA = "0x1F3EE84", Offset = "0x1F3EE84", VA = "0x1F3EE84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB862E0", Offset = "0xB862E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x1F3EE8C", Offset = "0x1F3EE8C", VA = "0x1F3EE8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB862F0", Offset = "0xB862F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public TexturePoolRenderTexture right
		{
			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0x1F3EE94", Offset = "0x1F3EE94", VA = "0x1F3EE94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86300", Offset = "0xB86300")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0x1F3EE9C", Offset = "0x1F3EE9C", VA = "0x1F3EE9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86310", Offset = "0xB86310")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public TexturePoolRenderTexture2DArray both
		{
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x1F3EEA4", Offset = "0x1F3EEA4", VA = "0x1F3EEA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86320", Offset = "0xB86320")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x1F3EEAC", Offset = "0x1F3EEAC", VA = "0x1F3EEAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86330", Offset = "0xB86330")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public float PixelDensity
		{
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0x1F3EEB4", Offset = "0x1F3EEB4", VA = "0x1F3EEB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E2")]
		public float ResolutionScale
		{
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x1F3EEBC", Offset = "0x1F3EEBC", VA = "0x1F3EEBC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E3")]
		public float FinalScale
		{
			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0x1F3EEC4", Offset = "0x1F3EEC4", VA = "0x1F3EEC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E4")]
		public bool isTextureChanged
		{
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0x1F3EED0", Offset = "0x1F3EED0", VA = "0x1F3EED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86340", Offset = "0xB86340")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x1F3EED8", Offset = "0x1F3EED8", VA = "0x1F3EED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86350", Offset = "0xB86350")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x1F3EEE4", Offset = "0x1F3EEE4", VA = "0x1F3EEE4")]
		public TextureManager(TextureManager oldTextureManager, bool isSinglePass, bool allowAntiAliasing, float pixelDensity = 1f, float resolutionScale = 1f)
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x1F3FA60", Offset = "0x1F3FA60", VA = "0x1F3FA60")]
		public void ReleaseTexturePools()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x1F3FC1C", Offset = "0x1F3FC1C", VA = "0x1F3FC1C")]
		private float GetPreviewImageRatio()
		{
			return default(float);
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x1F3FC24", Offset = "0x1F3FC24", VA = "0x1F3FC24")]
		private static int ToMultipleOfTwo(int value)
		{
			return default(int);
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x1F3F25C", Offset = "0x1F3F25C", VA = "0x1F3F25C")]
		public void reset()
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x1F3FC30", Offset = "0x1F3FC30", VA = "0x1F3FC30")]
		public bool validate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x1F3FDF8", Offset = "0x1F3FDF8", VA = "0x1F3FDF8")]
		public void Resize(float resolutionScale = 1f)
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x1F4011C", Offset = "0x1F4011C", VA = "0x1F4011C")]
		public void Next()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x1F401E0", Offset = "0x1F401E0", VA = "0x1F401E0")]
		public int GetNativePtr(WVR_Eye eye)
		{
			return default(int);
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x1F40270", Offset = "0x1F40270", VA = "0x1F40270")]
		public int GetNativePtrLR(bool isLeftEye)
		{
			return default(int);
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x1F402DC", Offset = "0x1F402DC", VA = "0x1F402DC")]
		public int GetNativePtrBoth()
		{
			return default(int);
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x1F40330", Offset = "0x1F40330", VA = "0x1F40330")]
		public Texture GetRenderTexture(WVR_Eye eye)
		{
			return null;
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x1F403C0", Offset = "0x1F403C0", VA = "0x1F403C0")]
		public RenderTexture GetRenderTextureBoth()
		{
			return null;
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x1F40414", Offset = "0x1F40414", VA = "0x1F40414")]
		public RenderTexture GetRenderTextureLR(bool isLeftEye)
		{
			return null;
		}
	}
}
namespace wvr.render.gl
{
	[Token(Token = "0x20001F0")]
	public static class UGL
	{
		[Token(Token = "0x2000631")]
		public enum GLenum2
		{
			[Token(Token = "0x40025C6")]
			GL_DEPTH_BUFFER_BIT = 256,
			[Token(Token = "0x40025C7")]
			GL_STENCIL_BUFFER_BIT = 1024,
			[Token(Token = "0x40025C8")]
			GL_COLOR_BUFFER_BIT = 16384,
			[Token(Token = "0x40025C9")]
			GL_FALSE = 0,
			[Token(Token = "0x40025CA")]
			GL_TRUE = 1,
			[Token(Token = "0x40025CB")]
			GL_POINTS = 0,
			[Token(Token = "0x40025CC")]
			GL_LINES = 1,
			[Token(Token = "0x40025CD")]
			GL_LINE_LOOP = 2,
			[Token(Token = "0x40025CE")]
			GL_LINE_STRIP = 3,
			[Token(Token = "0x40025CF")]
			GL_TRIANGLES = 4,
			[Token(Token = "0x40025D0")]
			GL_TRIANGLE_STRIP = 5,
			[Token(Token = "0x40025D1")]
			GL_TRIANGLE_FAN = 6,
			[Token(Token = "0x40025D2")]
			GL_ZERO = 0,
			[Token(Token = "0x40025D3")]
			GL_ONE = 1,
			[Token(Token = "0x40025D4")]
			GL_SRC_COLOR = 768,
			[Token(Token = "0x40025D5")]
			GL_ONE_MINUS_SRC_COLOR = 769,
			[Token(Token = "0x40025D6")]
			GL_SRC_ALPHA = 770,
			[Token(Token = "0x40025D7")]
			GL_ONE_MINUS_SRC_ALPHA = 771,
			[Token(Token = "0x40025D8")]
			GL_DST_ALPHA = 772,
			[Token(Token = "0x40025D9")]
			GL_ONE_MINUS_DST_ALPHA = 773,
			[Token(Token = "0x40025DA")]
			GL_DST_COLOR = 774,
			[Token(Token = "0x40025DB")]
			GL_ONE_MINUS_DST_COLOR = 775,
			[Token(Token = "0x40025DC")]
			GL_SRC_ALPHA_SATURATE = 776,
			[Token(Token = "0x40025DD")]
			GL_FUNC_ADD = 32774,
			[Token(Token = "0x40025DE")]
			GL_BLEND_EQUATION = 32777,
			[Token(Token = "0x40025DF")]
			GL_BLEND_EQUATION_RGB = 32777,
			[Token(Token = "0x40025E0")]
			GL_BLEND_EQUATION_ALPHA = 34877,
			[Token(Token = "0x40025E1")]
			GL_FUNC_SUBTRACT = 32778,
			[Token(Token = "0x40025E2")]
			GL_FUNC_REVERSE_SUBTRACT = 32779,
			[Token(Token = "0x40025E3")]
			GL_BLEND_DST_RGB = 32968,
			[Token(Token = "0x40025E4")]
			GL_BLEND_SRC_RGB = 32969,
			[Token(Token = "0x40025E5")]
			GL_BLEND_DST_ALPHA = 32970,
			[Token(Token = "0x40025E6")]
			GL_BLEND_SRC_ALPHA = 32971,
			[Token(Token = "0x40025E7")]
			GL_CONSTANT_COLOR = 32769,
			[Token(Token = "0x40025E8")]
			GL_ONE_MINUS_CONSTANT_COLOR = 32770,
			[Token(Token = "0x40025E9")]
			GL_CONSTANT_ALPHA = 32771,
			[Token(Token = "0x40025EA")]
			GL_ONE_MINUS_CONSTANT_ALPHA = 32772,
			[Token(Token = "0x40025EB")]
			GL_BLEND_COLOR = 32773,
			[Token(Token = "0x40025EC")]
			GL_ARRAY_BUFFER = 34962,
			[Token(Token = "0x40025ED")]
			GL_ELEMENT_ARRAY_BUFFER = 34963,
			[Token(Token = "0x40025EE")]
			GL_ARRAY_BUFFER_BINDING = 34964,
			[Token(Token = "0x40025EF")]
			GL_ELEMENT_ARRAY_BUFFER_BINDING = 34965,
			[Token(Token = "0x40025F0")]
			GL_STREAM_DRAW = 35040,
			[Token(Token = "0x40025F1")]
			GL_STATIC_DRAW = 35044,
			[Token(Token = "0x40025F2")]
			GL_DYNAMIC_DRAW = 35048,
			[Token(Token = "0x40025F3")]
			GL_BUFFER_SIZE = 34660,
			[Token(Token = "0x40025F4")]
			GL_BUFFER_USAGE = 34661,
			[Token(Token = "0x40025F5")]
			GL_CURRENT_VERTEX_ATTRIB = 34342,
			[Token(Token = "0x40025F6")]
			GL_FRONT = 1028,
			[Token(Token = "0x40025F7")]
			GL_BACK = 1029,
			[Token(Token = "0x40025F8")]
			GL_FRONT_AND_BACK = 1032,
			[Token(Token = "0x40025F9")]
			GL_TEXTURE_2D = 3553,
			[Token(Token = "0x40025FA")]
			GL_CULL_FACE = 2884,
			[Token(Token = "0x40025FB")]
			GL_BLEND = 3042,
			[Token(Token = "0x40025FC")]
			GL_DITHER = 3024,
			[Token(Token = "0x40025FD")]
			GL_STENCIL_TEST = 2960,
			[Token(Token = "0x40025FE")]
			GL_DEPTH_TEST = 2929,
			[Token(Token = "0x40025FF")]
			GL_SCISSOR_TEST = 3089,
			[Token(Token = "0x4002600")]
			GL_POLYGON_OFFSET_FILL = 32823,
			[Token(Token = "0x4002601")]
			GL_SAMPLE_ALPHA_TO_COVERAGE = 32926,
			[Token(Token = "0x4002602")]
			GL_SAMPLE_COVERAGE = 32928,
			[Token(Token = "0x4002603")]
			GL_NO_ERROR = 0,
			[Token(Token = "0x4002604")]
			GL_INVALID_ENUM = 1280,
			[Token(Token = "0x4002605")]
			GL_INVALID_VALUE = 1281,
			[Token(Token = "0x4002606")]
			GL_INVALID_OPERATION = 1282,
			[Token(Token = "0x4002607")]
			GL_OUT_OF_MEMORY = 1285,
			[Token(Token = "0x4002608")]
			GL_CW = 2304,
			[Token(Token = "0x4002609")]
			GL_CCW = 2305,
			[Token(Token = "0x400260A")]
			GL_LINE_WIDTH = 2849,
			[Token(Token = "0x400260B")]
			GL_ALIASED_POINT_SIZE_RANGE = 33901,
			[Token(Token = "0x400260C")]
			GL_ALIASED_LINE_WIDTH_RANGE = 33902,
			[Token(Token = "0x400260D")]
			GL_CULL_FACE_MODE = 2885,
			[Token(Token = "0x400260E")]
			GL_FRONT_FACE = 2886,
			[Token(Token = "0x400260F")]
			GL_DEPTH_RANGE = 2928,
			[Token(Token = "0x4002610")]
			GL_DEPTH_WRITEMASK = 2930,
			[Token(Token = "0x4002611")]
			GL_DEPTH_CLEAR_VALUE = 2931,
			[Token(Token = "0x4002612")]
			GL_DEPTH_FUNC = 2932,
			[Token(Token = "0x4002613")]
			GL_STENCIL_CLEAR_VALUE = 2961,
			[Token(Token = "0x4002614")]
			GL_STENCIL_FUNC = 2962,
			[Token(Token = "0x4002615")]
			GL_STENCIL_FAIL = 2964,
			[Token(Token = "0x4002616")]
			GL_STENCIL_PASS_DEPTH_FAIL = 2965,
			[Token(Token = "0x4002617")]
			GL_STENCIL_PASS_DEPTH_PASS = 2966,
			[Token(Token = "0x4002618")]
			GL_STENCIL_REF = 2967,
			[Token(Token = "0x4002619")]
			GL_STENCIL_VALUE_MASK = 2963,
			[Token(Token = "0x400261A")]
			GL_STENCIL_WRITEMASK = 2968,
			[Token(Token = "0x400261B")]
			GL_STENCIL_BACK_FUNC = 34816,
			[Token(Token = "0x400261C")]
			GL_STENCIL_BACK_FAIL = 34817,
			[Token(Token = "0x400261D")]
			GL_STENCIL_BACK_PASS_DEPTH_FAIL = 34818,
			[Token(Token = "0x400261E")]
			GL_STENCIL_BACK_PASS_DEPTH_PASS = 34819,
			[Token(Token = "0x400261F")]
			GL_STENCIL_BACK_REF = 36003,
			[Token(Token = "0x4002620")]
			GL_STENCIL_BACK_VALUE_MASK = 36004,
			[Token(Token = "0x4002621")]
			GL_STENCIL_BACK_WRITEMASK = 36005,
			[Token(Token = "0x4002622")]
			GL_VIEWPORT = 2978,
			[Token(Token = "0x4002623")]
			GL_SCISSOR_BOX = 3088,
			[Token(Token = "0x4002624")]
			GL_COLOR_CLEAR_VALUE = 3106,
			[Token(Token = "0x4002625")]
			GL_COLOR_WRITEMASK = 3107,
			[Token(Token = "0x4002626")]
			GL_UNPACK_ALIGNMENT = 3317,
			[Token(Token = "0x4002627")]
			GL_PACK_ALIGNMENT = 3333,
			[Token(Token = "0x4002628")]
			GL_MAX_TEXTURE_SIZE = 3379,
			[Token(Token = "0x4002629")]
			GL_MAX_VIEWPORT_DIMS = 3386,
			[Token(Token = "0x400262A")]
			GL_SUBPIXEL_BITS = 3408,
			[Token(Token = "0x400262B")]
			GL_RED_BITS = 3410,
			[Token(Token = "0x400262C")]
			GL_GREEN_BITS = 3411,
			[Token(Token = "0x400262D")]
			GL_BLUE_BITS = 3412,
			[Token(Token = "0x400262E")]
			GL_ALPHA_BITS = 3413,
			[Token(Token = "0x400262F")]
			GL_DEPTH_BITS = 3414,
			[Token(Token = "0x4002630")]
			GL_STENCIL_BITS = 3415,
			[Token(Token = "0x4002631")]
			GL_POLYGON_OFFSET_UNITS = 10752,
			[Token(Token = "0x4002632")]
			GL_POLYGON_OFFSET_FACTOR = 32824,
			[Token(Token = "0x4002633")]
			GL_TEXTURE_BINDING_2D = 32873,
			[Token(Token = "0x4002634")]
			GL_SAMPLE_BUFFERS = 32936,
			[Token(Token = "0x4002635")]
			GL_SAMPLES = 32937,
			[Token(Token = "0x4002636")]
			GL_SAMPLE_COVERAGE_VALUE = 32938,
			[Token(Token = "0x4002637")]
			GL_SAMPLE_COVERAGE_INVERT = 32939,
			[Token(Token = "0x4002638")]
			GL_NUM_COMPRESSED_TEXTURE_FORMATS = 34466,
			[Token(Token = "0x4002639")]
			GL_COMPRESSED_TEXTURE_FORMATS = 34467,
			[Token(Token = "0x400263A")]
			GL_DONT_CARE = 4352,
			[Token(Token = "0x400263B")]
			GL_FASTEST = 4353,
			[Token(Token = "0x400263C")]
			GL_NICEST = 4354,
			[Token(Token = "0x400263D")]
			GL_GENERATE_MIPMAP_HINT = 33170,
			[Token(Token = "0x400263E")]
			GL_BYTE = 5120,
			[Token(Token = "0x400263F")]
			GL_UNSIGNED_BYTE = 5121,
			[Token(Token = "0x4002640")]
			GL_SHORT = 5122,
			[Token(Token = "0x4002641")]
			GL_UNSIGNED_SHORT = 5123,
			[Token(Token = "0x4002642")]
			GL_INT = 5124,
			[Token(Token = "0x4002643")]
			GL_UNSIGNED_INT = 5125,
			[Token(Token = "0x4002644")]
			GL_FLOAT = 5126,
			[Token(Token = "0x4002645")]
			GL_FIXED = 5132,
			[Token(Token = "0x4002646")]
			GL_DEPTH_COMPONENT = 6402,
			[Token(Token = "0x4002647")]
			GL_ALPHA = 6406,
			[Token(Token = "0x4002648")]
			GL_RGB = 6407,
			[Token(Token = "0x4002649")]
			GL_RGBA = 6408,
			[Token(Token = "0x400264A")]
			GL_LUMINANCE = 6409,
			[Token(Token = "0x400264B")]
			GL_LUMINANCE_ALPHA = 6410,
			[Token(Token = "0x400264C")]
			GL_UNSIGNED_SHORT_4_4_4_4 = 32819,
			[Token(Token = "0x400264D")]
			GL_UNSIGNED_SHORT_5_5_5_1 = 32820,
			[Token(Token = "0x400264E")]
			GL_UNSIGNED_SHORT_5_6_5 = 33635,
			[Token(Token = "0x400264F")]
			GL_FRAGMENT_SHADER = 35632,
			[Token(Token = "0x4002650")]
			GL_VERTEX_SHADER = 35633,
			[Token(Token = "0x4002651")]
			GL_MAX_VERTEX_ATTRIBS = 34921,
			[Token(Token = "0x4002652")]
			GL_MAX_VERTEX_UNIFORM_VECTORS = 36347,
			[Token(Token = "0x4002653")]
			GL_MAX_VARYING_VECTORS = 36348,
			[Token(Token = "0x4002654")]
			GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661,
			[Token(Token = "0x4002655")]
			GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660,
			[Token(Token = "0x4002656")]
			GL_MAX_TEXTURE_IMAGE_UNITS = 34930,
			[Token(Token = "0x4002657")]
			GL_MAX_FRAGMENT_UNIFORM_VECTORS = 36349,
			[Token(Token = "0x4002658")]
			GL_SHADER_TYPE = 35663,
			[Token(Token = "0x4002659")]
			GL_DELETE_STATUS = 35712,
			[Token(Token = "0x400265A")]
			GL_LINK_STATUS = 35714,
			[Token(Token = "0x400265B")]
			GL_VALIDATE_STATUS = 35715,
			[Token(Token = "0x400265C")]
			GL_ATTACHED_SHADERS = 35717,
			[Token(Token = "0x400265D")]
			GL_ACTIVE_UNIFORMS = 35718,
			[Token(Token = "0x400265E")]
			GL_ACTIVE_UNIFORM_MAX_LENGTH = 35719,
			[Token(Token = "0x400265F")]
			GL_ACTIVE_ATTRIBUTES = 35721,
			[Token(Token = "0x4002660")]
			GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 35722,
			[Token(Token = "0x4002661")]
			GL_SHADING_LANGUAGE_VERSION = 35724,
			[Token(Token = "0x4002662")]
			GL_CURRENT_PROGRAM = 35725,
			[Token(Token = "0x4002663")]
			GL_NEVER = 512,
			[Token(Token = "0x4002664")]
			GL_LESS = 513,
			[Token(Token = "0x4002665")]
			GL_EQUAL = 514,
			[Token(Token = "0x4002666")]
			GL_LEQUAL = 515,
			[Token(Token = "0x4002667")]
			GL_GREATER = 516,
			[Token(Token = "0x4002668")]
			GL_NOTEQUAL = 517,
			[Token(Token = "0x4002669")]
			GL_GEQUAL = 518,
			[Token(Token = "0x400266A")]
			GL_ALWAYS = 519,
			[Token(Token = "0x400266B")]
			GL_KEEP = 7680,
			[Token(Token = "0x400266C")]
			GL_REPLACE = 7681,
			[Token(Token = "0x400266D")]
			GL_INCR = 7682,
			[Token(Token = "0x400266E")]
			GL_DECR = 7683,
			[Token(Token = "0x400266F")]
			GL_INVERT = 5386,
			[Token(Token = "0x4002670")]
			GL_INCR_WRAP = 34055,
			[Token(Token = "0x4002671")]
			GL_DECR_WRAP = 34056,
			[Token(Token = "0x4002672")]
			GL_VENDOR = 7936,
			[Token(Token = "0x4002673")]
			GL_RENDERER = 7937,
			[Token(Token = "0x4002674")]
			GL_VERSION = 7938,
			[Token(Token = "0x4002675")]
			GL_EXTENSIONS = 7939,
			[Token(Token = "0x4002676")]
			GL_NEAREST = 9728,
			[Token(Token = "0x4002677")]
			GL_LINEAR = 9729,
			[Token(Token = "0x4002678")]
			GL_NEAREST_MIPMAP_NEAREST = 9984,
			[Token(Token = "0x4002679")]
			GL_LINEAR_MIPMAP_NEAREST = 9985,
			[Token(Token = "0x400267A")]
			GL_NEAREST_MIPMAP_LINEAR = 9986,
			[Token(Token = "0x400267B")]
			GL_LINEAR_MIPMAP_LINEAR = 9987,
			[Token(Token = "0x400267C")]
			GL_TEXTURE_MAG_FILTER = 10240,
			[Token(Token = "0x400267D")]
			GL_TEXTURE_MIN_FILTER = 10241,
			[Token(Token = "0x400267E")]
			GL_TEXTURE_WRAP_S = 10242,
			[Token(Token = "0x400267F")]
			GL_TEXTURE_WRAP_T = 10243,
			[Token(Token = "0x4002680")]
			GL_TEXTURE = 5890,
			[Token(Token = "0x4002681")]
			GL_TEXTURE_CUBE_MAP = 34067,
			[Token(Token = "0x4002682")]
			GL_TEXTURE_BINDING_CUBE_MAP = 34068,
			[Token(Token = "0x4002683")]
			GL_TEXTURE_CUBE_MAP_POSITIVE_X = 34069,
			[Token(Token = "0x4002684")]
			GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 34070,
			[Token(Token = "0x4002685")]
			GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 34071,
			[Token(Token = "0x4002686")]
			GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072,
			[Token(Token = "0x4002687")]
			GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 34073,
			[Token(Token = "0x4002688")]
			GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074,
			[Token(Token = "0x4002689")]
			GL_MAX_CUBE_MAP_TEXTURE_SIZE = 34076,
			[Token(Token = "0x400268A")]
			GL_TEXTURE0 = 33984,
			[Token(Token = "0x400268B")]
			GL_TEXTURE1 = 33985,
			[Token(Token = "0x400268C")]
			GL_TEXTURE2 = 33986,
			[Token(Token = "0x400268D")]
			GL_TEXTURE3 = 33987,
			[Token(Token = "0x400268E")]
			GL_TEXTURE4 = 33988,
			[Token(Token = "0x400268F")]
			GL_TEXTURE5 = 33989,
			[Token(Token = "0x4002690")]
			GL_TEXTURE6 = 33990,
			[Token(Token = "0x4002691")]
			GL_TEXTURE7 = 33991,
			[Token(Token = "0x4002692")]
			GL_TEXTURE8 = 33992,
			[Token(Token = "0x4002693")]
			GL_TEXTURE9 = 33993,
			[Token(Token = "0x4002694")]
			GL_TEXTURE10 = 33994,
			[Token(Token = "0x4002695")]
			GL_TEXTURE11 = 33995,
			[Token(Token = "0x4002696")]
			GL_TEXTURE12 = 33996,
			[Token(Token = "0x4002697")]
			GL_TEXTURE13 = 33997,
			[Token(Token = "0x4002698")]
			GL_TEXTURE14 = 33998,
			[Token(Token = "0x4002699")]
			GL_TEXTURE15 = 33999,
			[Token(Token = "0x400269A")]
			GL_TEXTURE16 = 34000,
			[Token(Token = "0x400269B")]
			GL_TEXTURE17 = 34001,
			[Token(Token = "0x400269C")]
			GL_TEXTURE18 = 34002,
			[Token(Token = "0x400269D")]
			GL_TEXTURE19 = 34003,
			[Token(Token = "0x400269E")]
			GL_TEXTURE20 = 34004,
			[Token(Token = "0x400269F")]
			GL_TEXTURE21 = 34005,
			[Token(Token = "0x40026A0")]
			GL_TEXTURE22 = 34006,
			[Token(Token = "0x40026A1")]
			GL_TEXTURE23 = 34007,
			[Token(Token = "0x40026A2")]
			GL_TEXTURE24 = 34008,
			[Token(Token = "0x40026A3")]
			GL_TEXTURE25 = 34009,
			[Token(Token = "0x40026A4")]
			GL_TEXTURE26 = 34010,
			[Token(Token = "0x40026A5")]
			GL_TEXTURE27 = 34011,
			[Token(Token = "0x40026A6")]
			GL_TEXTURE28 = 34012,
			[Token(Token = "0x40026A7")]
			GL_TEXTURE29 = 34013,
			[Token(Token = "0x40026A8")]
			GL_TEXTURE30 = 34014,
			[Token(Token = "0x40026A9")]
			GL_TEXTURE31 = 34015,
			[Token(Token = "0x40026AA")]
			GL_ACTIVE_TEXTURE = 34016,
			[Token(Token = "0x40026AB")]
			GL_REPEAT = 10497,
			[Token(Token = "0x40026AC")]
			GL_CLAMP_TO_EDGE = 33071,
			[Token(Token = "0x40026AD")]
			GL_MIRRORED_REPEAT = 33648,
			[Token(Token = "0x40026AE")]
			GL_FLOAT_VEC2 = 35664,
			[Token(Token = "0x40026AF")]
			GL_FLOAT_VEC3 = 35665,
			[Token(Token = "0x40026B0")]
			GL_FLOAT_VEC4 = 35666,
			[Token(Token = "0x40026B1")]
			GL_INT_VEC2 = 35667,
			[Token(Token = "0x40026B2")]
			GL_INT_VEC3 = 35668,
			[Token(Token = "0x40026B3")]
			GL_INT_VEC4 = 35669,
			[Token(Token = "0x40026B4")]
			GL_BOOL = 35670,
			[Token(Token = "0x40026B5")]
			GL_BOOL_VEC2 = 35671,
			[Token(Token = "0x40026B6")]
			GL_BOOL_VEC3 = 35672,
			[Token(Token = "0x40026B7")]
			GL_BOOL_VEC4 = 35673,
			[Token(Token = "0x40026B8")]
			GL_FLOAT_MAT2 = 35674,
			[Token(Token = "0x40026B9")]
			GL_FLOAT_MAT3 = 35675,
			[Token(Token = "0x40026BA")]
			GL_FLOAT_MAT4 = 35676,
			[Token(Token = "0x40026BB")]
			GL_SAMPLER_2D = 35678,
			[Token(Token = "0x40026BC")]
			GL_SAMPLER_CUBE = 35680,
			[Token(Token = "0x40026BD")]
			GL_VERTEX_ATTRIB_ARRAY_ENABLED = 34338,
			[Token(Token = "0x40026BE")]
			GL_VERTEX_ATTRIB_ARRAY_SIZE = 34339,
			[Token(Token = "0x40026BF")]
			GL_VERTEX_ATTRIB_ARRAY_STRIDE = 34340,
			[Token(Token = "0x40026C0")]
			GL_VERTEX_ATTRIB_ARRAY_TYPE = 34341,
			[Token(Token = "0x40026C1")]
			GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922,
			[Token(Token = "0x40026C2")]
			GL_VERTEX_ATTRIB_ARRAY_POINTER = 34373,
			[Token(Token = "0x40026C3")]
			GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975,
			[Token(Token = "0x40026C4")]
			GL_IMPLEMENTATION_COLOR_READ_TYPE = 35738,
			[Token(Token = "0x40026C5")]
			GL_IMPLEMENTATION_COLOR_READ_FORMAT = 35739,
			[Token(Token = "0x40026C6")]
			GL_COMPILE_STATUS = 35713,
			[Token(Token = "0x40026C7")]
			GL_INFO_LOG_LENGTH = 35716,
			[Token(Token = "0x40026C8")]
			GL_SHADER_SOURCE_LENGTH = 35720,
			[Token(Token = "0x40026C9")]
			GL_SHADER_COMPILER = 36346,
			[Token(Token = "0x40026CA")]
			GL_SHADER_BINARY_FORMATS = 36344,
			[Token(Token = "0x40026CB")]
			GL_NUM_SHADER_BINARY_FORMATS = 36345,
			[Token(Token = "0x40026CC")]
			GL_LOW_FLOAT = 36336,
			[Token(Token = "0x40026CD")]
			GL_MEDIUM_FLOAT = 36337,
			[Token(Token = "0x40026CE")]
			GL_HIGH_FLOAT = 36338,
			[Token(Token = "0x40026CF")]
			GL_LOW_INT = 36339,
			[Token(Token = "0x40026D0")]
			GL_MEDIUM_INT = 36340,
			[Token(Token = "0x40026D1")]
			GL_HIGH_INT = 36341,
			[Token(Token = "0x40026D2")]
			GL_FRAMEBUFFER = 36160,
			[Token(Token = "0x40026D3")]
			GL_RENDERBUFFER = 36161,
			[Token(Token = "0x40026D4")]
			GL_RGBA4 = 32854,
			[Token(Token = "0x40026D5")]
			GL_RGB5_A1 = 32855,
			[Token(Token = "0x40026D6")]
			GL_RGB565 = 36194,
			[Token(Token = "0x40026D7")]
			GL_DEPTH_COMPONENT16 = 33189,
			[Token(Token = "0x40026D8")]
			GL_STENCIL_INDEX8 = 36168,
			[Token(Token = "0x40026D9")]
			GL_RENDERBUFFER_WIDTH = 36162,
			[Token(Token = "0x40026DA")]
			GL_RENDERBUFFER_HEIGHT = 36163,
			[Token(Token = "0x40026DB")]
			GL_RENDERBUFFER_INTERNAL_FORMAT = 36164,
			[Token(Token = "0x40026DC")]
			GL_RENDERBUFFER_RED_SIZE = 36176,
			[Token(Token = "0x40026DD")]
			GL_RENDERBUFFER_GREEN_SIZE = 36177,
			[Token(Token = "0x40026DE")]
			GL_RENDERBUFFER_BLUE_SIZE = 36178,
			[Token(Token = "0x40026DF")]
			GL_RENDERBUFFER_ALPHA_SIZE = 36179,
			[Token(Token = "0x40026E0")]
			GL_RENDERBUFFER_DEPTH_SIZE = 36180,
			[Token(Token = "0x40026E1")]
			GL_RENDERBUFFER_STENCIL_SIZE = 36181,
			[Token(Token = "0x40026E2")]
			GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048,
			[Token(Token = "0x40026E3")]
			GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049,
			[Token(Token = "0x40026E4")]
			GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050,
			[Token(Token = "0x40026E5")]
			GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051,
			[Token(Token = "0x40026E6")]
			GL_COLOR_ATTACHMENT0 = 36064,
			[Token(Token = "0x40026E7")]
			GL_DEPTH_ATTACHMENT = 36096,
			[Token(Token = "0x40026E8")]
			GL_STENCIL_ATTACHMENT = 36128,
			[Token(Token = "0x40026E9")]
			GL_NONE = 0,
			[Token(Token = "0x40026EA")]
			GL_FRAMEBUFFER_COMPLETE = 36053,
			[Token(Token = "0x40026EB")]
			GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054,
			[Token(Token = "0x40026EC")]
			GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055,
			[Token(Token = "0x40026ED")]
			GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057,
			[Token(Token = "0x40026EE")]
			GL_FRAMEBUFFER_UNSUPPORTED = 36061,
			[Token(Token = "0x40026EF")]
			GL_FRAMEBUFFER_BINDING = 36006,
			[Token(Token = "0x40026F0")]
			GL_RENDERBUFFER_BINDING = 36007,
			[Token(Token = "0x40026F1")]
			GL_MAX_RENDERBUFFER_SIZE = 34024,
			[Token(Token = "0x40026F2")]
			GL_INVALID_FRAMEBUFFER_OPERATION = 1286
		}

		[Token(Token = "0x2000632")]
		public enum GLenum3
		{
			[Token(Token = "0x40026F4")]
			GL_READ_BUFFER = 3074,
			[Token(Token = "0x40026F5")]
			GL_UNPACK_ROW_LENGTH = 3314,
			[Token(Token = "0x40026F6")]
			GL_UNPACK_SKIP_ROWS = 3315,
			[Token(Token = "0x40026F7")]
			GL_UNPACK_SKIP_PIXELS = 3316,
			[Token(Token = "0x40026F8")]
			GL_PACK_ROW_LENGTH = 3330,
			[Token(Token = "0x40026F9")]
			GL_PACK_SKIP_ROWS = 3331,
			[Token(Token = "0x40026FA")]
			GL_PACK_SKIP_PIXELS = 3332,
			[Token(Token = "0x40026FB")]
			GL_COLOR = 6144,
			[Token(Token = "0x40026FC")]
			GL_DEPTH = 6145,
			[Token(Token = "0x40026FD")]
			GL_STENCIL = 6146,
			[Token(Token = "0x40026FE")]
			GL_RED = 6403,
			[Token(Token = "0x40026FF")]
			GL_RGB8 = 32849,
			[Token(Token = "0x4002700")]
			GL_RGBA8 = 32856,
			[Token(Token = "0x4002701")]
			GL_RGB10_A2 = 32857,
			[Token(Token = "0x4002702")]
			GL_TEXTURE_BINDING_3D = 32874,
			[Token(Token = "0x4002703")]
			GL_UNPACK_SKIP_IMAGES = 32877,
			[Token(Token = "0x4002704")]
			GL_UNPACK_IMAGE_HEIGHT = 32878,
			[Token(Token = "0x4002705")]
			GL_TEXTURE_3D = 32879,
			[Token(Token = "0x4002706")]
			GL_TEXTURE_WRAP_R = 32882,
			[Token(Token = "0x4002707")]
			GL_MAX_3D_TEXTURE_SIZE = 32883,
			[Token(Token = "0x4002708")]
			GL_UNSIGNED_INT_2_10_10_10_REV = 33640,
			[Token(Token = "0x4002709")]
			GL_MAX_ELEMENTS_VERTICES = 33000,
			[Token(Token = "0x400270A")]
			GL_MAX_ELEMENTS_INDICES = 33001,
			[Token(Token = "0x400270B")]
			GL_TEXTURE_MIN_LOD = 33082,
			[Token(Token = "0x400270C")]
			GL_TEXTURE_MAX_LOD = 33083,
			[Token(Token = "0x400270D")]
			GL_TEXTURE_BASE_LEVEL = 33084,
			[Token(Token = "0x400270E")]
			GL_TEXTURE_MAX_LEVEL = 33085,
			[Token(Token = "0x400270F")]
			GL_MIN = 32775,
			[Token(Token = "0x4002710")]
			GL_MAX = 32776,
			[Token(Token = "0x4002711")]
			GL_DEPTH_COMPONENT24 = 33190,
			[Token(Token = "0x4002712")]
			GL_MAX_TEXTURE_LOD_BIAS = 34045,
			[Token(Token = "0x4002713")]
			GL_TEXTURE_COMPARE_MODE = 34892,
			[Token(Token = "0x4002714")]
			GL_TEXTURE_COMPARE_FUNC = 34893,
			[Token(Token = "0x4002715")]
			GL_CURRENT_QUERY = 34917,
			[Token(Token = "0x4002716")]
			GL_QUERY_RESULT = 34918,
			[Token(Token = "0x4002717")]
			GL_QUERY_RESULT_AVAILABLE = 34919,
			[Token(Token = "0x4002718")]
			GL_BUFFER_MAPPED = 35004,
			[Token(Token = "0x4002719")]
			GL_BUFFER_MAP_POINTER = 35005,
			[Token(Token = "0x400271A")]
			GL_STREAM_READ = 35041,
			[Token(Token = "0x400271B")]
			GL_STREAM_COPY = 35042,
			[Token(Token = "0x400271C")]
			GL_STATIC_READ = 35045,
			[Token(Token = "0x400271D")]
			GL_STATIC_COPY = 35046,
			[Token(Token = "0x400271E")]
			GL_DYNAMIC_READ = 35049,
			[Token(Token = "0x400271F")]
			GL_DYNAMIC_COPY = 35050,
			[Token(Token = "0x4002720")]
			GL_MAX_DRAW_BUFFERS = 34852,
			[Token(Token = "0x4002721")]
			GL_DRAW_BUFFER0 = 34853,
			[Token(Token = "0x4002722")]
			GL_DRAW_BUFFER1 = 34854,
			[Token(Token = "0x4002723")]
			GL_DRAW_BUFFER2 = 34855,
			[Token(Token = "0x4002724")]
			GL_DRAW_BUFFER3 = 34856,
			[Token(Token = "0x4002725")]
			GL_DRAW_BUFFER4 = 34857,
			[Token(Token = "0x4002726")]
			GL_DRAW_BUFFER5 = 34858,
			[Token(Token = "0x4002727")]
			GL_DRAW_BUFFER6 = 34859,
			[Token(Token = "0x4002728")]
			GL_DRAW_BUFFER7 = 34860,
			[Token(Token = "0x4002729")]
			GL_DRAW_BUFFER8 = 34861,
			[Token(Token = "0x400272A")]
			GL_DRAW_BUFFER9 = 34862,
			[Token(Token = "0x400272B")]
			GL_DRAW_BUFFER10 = 34863,
			[Token(Token = "0x400272C")]
			GL_DRAW_BUFFER11 = 34864,
			[Token(Token = "0x400272D")]
			GL_DRAW_BUFFER12 = 34865,
			[Token(Token = "0x400272E")]
			GL_DRAW_BUFFER13 = 34866,
			[Token(Token = "0x400272F")]
			GL_DRAW_BUFFER14 = 34867,
			[Token(Token = "0x4002730")]
			GL_DRAW_BUFFER15 = 34868,
			[Token(Token = "0x4002731")]
			GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 35657,
			[Token(Token = "0x4002732")]
			GL_MAX_VERTEX_UNIFORM_COMPONENTS = 35658,
			[Token(Token = "0x4002733")]
			GL_SAMPLER_3D = 35679,
			[Token(Token = "0x4002734")]
			GL_SAMPLER_2D_SHADOW = 35682,
			[Token(Token = "0x4002735")]
			GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 35723,
			[Token(Token = "0x4002736")]
			GL_PIXEL_PACK_BUFFER = 35051,
			[Token(Token = "0x4002737")]
			GL_PIXEL_UNPACK_BUFFER = 35052,
			[Token(Token = "0x4002738")]
			GL_PIXEL_PACK_BUFFER_BINDING = 35053,
			[Token(Token = "0x4002739")]
			GL_PIXEL_UNPACK_BUFFER_BINDING = 35055,
			[Token(Token = "0x400273A")]
			GL_FLOAT_MAT2x3 = 35685,
			[Token(Token = "0x400273B")]
			GL_FLOAT_MAT2x4 = 35686,
			[Token(Token = "0x400273C")]
			GL_FLOAT_MAT3x2 = 35687,
			[Token(Token = "0x400273D")]
			GL_FLOAT_MAT3x4 = 35688,
			[Token(Token = "0x400273E")]
			GL_FLOAT_MAT4x2 = 35689,
			[Token(Token = "0x400273F")]
			GL_FLOAT_MAT4x3 = 35690,
			[Token(Token = "0x4002740")]
			GL_SRGB = 35904,
			[Token(Token = "0x4002741")]
			GL_SRGB8 = 35905,
			[Token(Token = "0x4002742")]
			GL_SRGB8_ALPHA8 = 35907,
			[Token(Token = "0x4002743")]
			GL_COMPARE_REF_TO_TEXTURE = 34894,
			[Token(Token = "0x4002744")]
			GL_MAJOR_VERSION = 33307,
			[Token(Token = "0x4002745")]
			GL_MINOR_VERSION = 33308,
			[Token(Token = "0x4002746")]
			GL_NUM_EXTENSIONS = 33309,
			[Token(Token = "0x4002747")]
			GL_RGBA32F = 34836,
			[Token(Token = "0x4002748")]
			GL_RGB32F = 34837,
			[Token(Token = "0x4002749")]
			GL_RGBA16F = 34842,
			[Token(Token = "0x400274A")]
			GL_RGB16F = 34843,
			[Token(Token = "0x400274B")]
			GL_VERTEX_ATTRIB_ARRAY_INTEGER = 35069,
			[Token(Token = "0x400274C")]
			GL_MAX_ARRAY_TEXTURE_LAYERS = 35071,
			[Token(Token = "0x400274D")]
			GL_MIN_PROGRAM_TEXEL_OFFSET = 35076,
			[Token(Token = "0x400274E")]
			GL_MAX_PROGRAM_TEXEL_OFFSET = 35077,
			[Token(Token = "0x400274F")]
			GL_MAX_VARYING_COMPONENTS = 35659,
			[Token(Token = "0x4002750")]
			GL_TEXTURE_2D_ARRAY = 35866,
			[Token(Token = "0x4002751")]
			GL_TEXTURE_BINDING_2D_ARRAY = 35869,
			[Token(Token = "0x4002752")]
			GL_R11F_G11F_B10F = 35898,
			[Token(Token = "0x4002753")]
			GL_UNSIGNED_INT_10F_11F_11F_REV = 35899,
			[Token(Token = "0x4002754")]
			GL_RGB9_E5 = 35901,
			[Token(Token = "0x4002755")]
			GL_UNSIGNED_INT_5_9_9_9_REV = 35902,
			[Token(Token = "0x4002756")]
			GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 35958,
			[Token(Token = "0x4002757")]
			GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 35967,
			[Token(Token = "0x4002758")]
			GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 35968,
			[Token(Token = "0x4002759")]
			GL_TRANSFORM_FEEDBACK_VARYINGS = 35971,
			[Token(Token = "0x400275A")]
			GL_TRANSFORM_FEEDBACK_BUFFER_START = 35972,
			[Token(Token = "0x400275B")]
			GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 35973,
			[Token(Token = "0x400275C")]
			GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 35976,
			[Token(Token = "0x400275D")]
			GL_RASTERIZER_DISCARD = 35977,
			[Token(Token = "0x400275E")]
			GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 35978,
			[Token(Token = "0x400275F")]
			GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 35979,
			[Token(Token = "0x4002760")]
			GL_INTERLEAVED_ATTRIBS = 35980,
			[Token(Token = "0x4002761")]
			GL_SEPARATE_ATTRIBS = 35981,
			[Token(Token = "0x4002762")]
			GL_TRANSFORM_FEEDBACK_BUFFER = 35982,
			[Token(Token = "0x4002763")]
			GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 35983,
			[Token(Token = "0x4002764")]
			GL_RGBA32UI = 36208,
			[Token(Token = "0x4002765")]
			GL_RGB32UI = 36209,
			[Token(Token = "0x4002766")]
			GL_RGBA16UI = 36214,
			[Token(Token = "0x4002767")]
			GL_RGB16UI = 36215,
			[Token(Token = "0x4002768")]
			GL_RGBA8UI = 36220,
			[Token(Token = "0x4002769")]
			GL_RGB8UI = 36221,
			[Token(Token = "0x400276A")]
			GL_RGBA32I = 36226,
			[Token(Token = "0x400276B")]
			GL_RGB32I = 36227,
			[Token(Token = "0x400276C")]
			GL_RGBA16I = 36232,
			[Token(Token = "0x400276D")]
			GL_RGB16I = 36233,
			[Token(Token = "0x400276E")]
			GL_RGBA8I = 36238,
			[Token(Token = "0x400276F")]
			GL_RGB8I = 36239,
			[Token(Token = "0x4002770")]
			GL_RED_INTEGER = 36244,
			[Token(Token = "0x4002771")]
			GL_RGB_INTEGER = 36248,
			[Token(Token = "0x4002772")]
			GL_RGBA_INTEGER = 36249,
			[Token(Token = "0x4002773")]
			GL_SAMPLER_2D_ARRAY = 36289,
			[Token(Token = "0x4002774")]
			GL_SAMPLER_2D_ARRAY_SHADOW = 36292,
			[Token(Token = "0x4002775")]
			GL_SAMPLER_CUBE_SHADOW = 36293,
			[Token(Token = "0x4002776")]
			GL_UNSIGNED_INT_VEC2 = 36294,
			[Token(Token = "0x4002777")]
			GL_UNSIGNED_INT_VEC3 = 36295,
			[Token(Token = "0x4002778")]
			GL_UNSIGNED_INT_VEC4 = 36296,
			[Token(Token = "0x4002779")]
			GL_INT_SAMPLER_2D = 36298,
			[Token(Token = "0x400277A")]
			GL_INT_SAMPLER_3D = 36299,
			[Token(Token = "0x400277B")]
			GL_INT_SAMPLER_CUBE = 36300,
			[Token(Token = "0x400277C")]
			GL_INT_SAMPLER_2D_ARRAY = 36303,
			[Token(Token = "0x400277D")]
			GL_UNSIGNED_INT_SAMPLER_2D = 36306,
			[Token(Token = "0x400277E")]
			GL_UNSIGNED_INT_SAMPLER_3D = 36307,
			[Token(Token = "0x400277F")]
			GL_UNSIGNED_INT_SAMPLER_CUBE = 36308,
			[Token(Token = "0x4002780")]
			GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 36311,
			[Token(Token = "0x4002781")]
			GL_BUFFER_ACCESS_FLAGS = 37151,
			[Token(Token = "0x4002782")]
			GL_BUFFER_MAP_LENGTH = 37152,
			[Token(Token = "0x4002783")]
			GL_BUFFER_MAP_OFFSET = 37153,
			[Token(Token = "0x4002784")]
			GL_DEPTH_COMPONENT32F = 36012,
			[Token(Token = "0x4002785")]
			GL_DEPTH32F_STENCIL8 = 36013,
			[Token(Token = "0x4002786")]
			GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 36269,
			[Token(Token = "0x4002787")]
			GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 33296,
			[Token(Token = "0x4002788")]
			GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 33297,
			[Token(Token = "0x4002789")]
			GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 33298,
			[Token(Token = "0x400278A")]
			GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 33299,
			[Token(Token = "0x400278B")]
			GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 33300,
			[Token(Token = "0x400278C")]
			GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 33301,
			[Token(Token = "0x400278D")]
			GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 33302,
			[Token(Token = "0x400278E")]
			GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 33303,
			[Token(Token = "0x400278F")]
			GL_FRAMEBUFFER_DEFAULT = 33304,
			[Token(Token = "0x4002790")]
			GL_FRAMEBUFFER_UNDEFINED = 33305,
			[Token(Token = "0x4002791")]
			GL_DEPTH_STENCIL_ATTACHMENT = 33306,
			[Token(Token = "0x4002792")]
			GL_DEPTH_STENCIL = 34041,
			[Token(Token = "0x4002793")]
			GL_UNSIGNED_INT_24_8 = 34042,
			[Token(Token = "0x4002794")]
			GL_DEPTH24_STENCIL8 = 35056,
			[Token(Token = "0x4002795")]
			GL_UNSIGNED_NORMALIZED = 35863,
			[Token(Token = "0x4002796")]
			GL_DRAW_FRAMEBUFFER_BINDING = 36006,
			[Token(Token = "0x4002797")]
			GL_READ_FRAMEBUFFER = 36008,
			[Token(Token = "0x4002798")]
			GL_DRAW_FRAMEBUFFER = 36009,
			[Token(Token = "0x4002799")]
			GL_READ_FRAMEBUFFER_BINDING = 36010,
			[Token(Token = "0x400279A")]
			GL_RENDERBUFFER_SAMPLES = 36011,
			[Token(Token = "0x400279B")]
			GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 36052,
			[Token(Token = "0x400279C")]
			GL_MAX_COLOR_ATTACHMENTS = 36063,
			[Token(Token = "0x400279D")]
			GL_COLOR_ATTACHMENT1 = 36065,
			[Token(Token = "0x400279E")]
			GL_COLOR_ATTACHMENT2 = 36066,
			[Token(Token = "0x400279F")]
			GL_COLOR_ATTACHMENT3 = 36067,
			[Token(Token = "0x40027A0")]
			GL_COLOR_ATTACHMENT4 = 36068,
			[Token(Token = "0x40027A1")]
			GL_COLOR_ATTACHMENT5 = 36069,
			[Token(Token = "0x40027A2")]
			GL_COLOR_ATTACHMENT6 = 36070,
			[Token(Token = "0x40027A3")]
			GL_COLOR_ATTACHMENT7 = 36071,
			[Token(Token = "0x40027A4")]
			GL_COLOR_ATTACHMENT8 = 36072,
			[Token(Token = "0x40027A5")]
			GL_COLOR_ATTACHMENT9 = 36073,
			[Token(Token = "0x40027A6")]
			GL_COLOR_ATTACHMENT10 = 36074,
			[Token(Token = "0x40027A7")]
			GL_COLOR_ATTACHMENT11 = 36075,
			[Token(Token = "0x40027A8")]
			GL_COLOR_ATTACHMENT12 = 36076,
			[Token(Token = "0x40027A9")]
			GL_COLOR_ATTACHMENT13 = 36077,
			[Token(Token = "0x40027AA")]
			GL_COLOR_ATTACHMENT14 = 36078,
			[Token(Token = "0x40027AB")]
			GL_COLOR_ATTACHMENT15 = 36079,
			[Token(Token = "0x40027AC")]
			GL_COLOR_ATTACHMENT16 = 36080,
			[Token(Token = "0x40027AD")]
			GL_COLOR_ATTACHMENT17 = 36081,
			[Token(Token = "0x40027AE")]
			GL_COLOR_ATTACHMENT18 = 36082,
			[Token(Token = "0x40027AF")]
			GL_COLOR_ATTACHMENT19 = 36083,
			[Token(Token = "0x40027B0")]
			GL_COLOR_ATTACHMENT20 = 36084,
			[Token(Token = "0x40027B1")]
			GL_COLOR_ATTACHMENT21 = 36085,
			[Token(Token = "0x40027B2")]
			GL_COLOR_ATTACHMENT22 = 36086,
			[Token(Token = "0x40027B3")]
			GL_COLOR_ATTACHMENT23 = 36087,
			[Token(Token = "0x40027B4")]
			GL_COLOR_ATTACHMENT24 = 36088,
			[Token(Token = "0x40027B5")]
			GL_COLOR_ATTACHMENT25 = 36089,
			[Token(Token = "0x40027B6")]
			GL_COLOR_ATTACHMENT26 = 36090,
			[Token(Token = "0x40027B7")]
			GL_COLOR_ATTACHMENT27 = 36091,
			[Token(Token = "0x40027B8")]
			GL_COLOR_ATTACHMENT28 = 36092,
			[Token(Token = "0x40027B9")]
			GL_COLOR_ATTACHMENT29 = 36093,
			[Token(Token = "0x40027BA")]
			GL_COLOR_ATTACHMENT30 = 36094,
			[Token(Token = "0x40027BB")]
			GL_COLOR_ATTACHMENT31 = 36095,
			[Token(Token = "0x40027BC")]
			GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 36182,
			[Token(Token = "0x40027BD")]
			GL_MAX_SAMPLES = 36183,
			[Token(Token = "0x40027BE")]
			GL_HALF_FLOAT = 5131,
			[Token(Token = "0x40027BF")]
			GL_MAP_READ_BIT = 1,
			[Token(Token = "0x40027C0")]
			GL_MAP_WRITE_BIT = 2,
			[Token(Token = "0x40027C1")]
			GL_MAP_INVALIDATE_RANGE_BIT = 4,
			[Token(Token = "0x40027C2")]
			GL_MAP_INVALIDATE_BUFFER_BIT = 8,
			[Token(Token = "0x40027C3")]
			GL_MAP_FLUSH_EXPLICIT_BIT = 16,
			[Token(Token = "0x40027C4")]
			GL_MAP_UNSYNCHRONIZED_BIT = 32,
			[Token(Token = "0x40027C5")]
			GL_RG = 33319,
			[Token(Token = "0x40027C6")]
			GL_RG_INTEGER = 33320,
			[Token(Token = "0x40027C7")]
			GL_R8 = 33321,
			[Token(Token = "0x40027C8")]
			GL_RG8 = 33323,
			[Token(Token = "0x40027C9")]
			GL_R16F = 33325,
			[Token(Token = "0x40027CA")]
			GL_R32F = 33326,
			[Token(Token = "0x40027CB")]
			GL_RG16F = 33327,
			[Token(Token = "0x40027CC")]
			GL_RG32F = 33328,
			[Token(Token = "0x40027CD")]
			GL_R8I = 33329,
			[Token(Token = "0x40027CE")]
			GL_R8UI = 33330,
			[Token(Token = "0x40027CF")]
			GL_R16I = 33331,
			[Token(Token = "0x40027D0")]
			GL_R16UI = 33332,
			[Token(Token = "0x40027D1")]
			GL_R32I = 33333,
			[Token(Token = "0x40027D2")]
			GL_R32UI = 33334,
			[Token(Token = "0x40027D3")]
			GL_RG8I = 33335,
			[Token(Token = "0x40027D4")]
			GL_RG8UI = 33336,
			[Token(Token = "0x40027D5")]
			GL_RG16I = 33337,
			[Token(Token = "0x40027D6")]
			GL_RG16UI = 33338,
			[Token(Token = "0x40027D7")]
			GL_RG32I = 33339,
			[Token(Token = "0x40027D8")]
			GL_RG32UI = 33340,
			[Token(Token = "0x40027D9")]
			GL_VERTEX_ARRAY_BINDING = 34229,
			[Token(Token = "0x40027DA")]
			GL_R8_SNORM = 36756,
			[Token(Token = "0x40027DB")]
			GL_RG8_SNORM = 36757,
			[Token(Token = "0x40027DC")]
			GL_RGB8_SNORM = 36758,
			[Token(Token = "0x40027DD")]
			GL_RGBA8_SNORM = 36759,
			[Token(Token = "0x40027DE")]
			GL_SIGNED_NORMALIZED = 36764,
			[Token(Token = "0x40027DF")]
			GL_PRIMITIVE_RESTART_FIXED_INDEX = 36201,
			[Token(Token = "0x40027E0")]
			GL_COPY_READ_BUFFER = 36662,
			[Token(Token = "0x40027E1")]
			GL_COPY_WRITE_BUFFER = 36663,
			[Token(Token = "0x40027E2")]
			GL_COPY_READ_BUFFER_BINDING = 36662,
			[Token(Token = "0x40027E3")]
			GL_COPY_WRITE_BUFFER_BINDING = 36663,
			[Token(Token = "0x40027E4")]
			GL_UNIFORM_BUFFER = 35345,
			[Token(Token = "0x40027E5")]
			GL_UNIFORM_BUFFER_BINDING = 35368,
			[Token(Token = "0x40027E6")]
			GL_UNIFORM_BUFFER_START = 35369,
			[Token(Token = "0x40027E7")]
			GL_UNIFORM_BUFFER_SIZE = 35370,
			[Token(Token = "0x40027E8")]
			GL_MAX_VERTEX_UNIFORM_BLOCKS = 35371,
			[Token(Token = "0x40027E9")]
			GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 35373,
			[Token(Token = "0x40027EA")]
			GL_MAX_COMBINED_UNIFORM_BLOCKS = 35374,
			[Token(Token = "0x40027EB")]
			GL_MAX_UNIFORM_BUFFER_BINDINGS = 35375,
			[Token(Token = "0x40027EC")]
			GL_MAX_UNIFORM_BLOCK_SIZE = 35376,
			[Token(Token = "0x40027ED")]
			GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 35377,
			[Token(Token = "0x40027EE")]
			GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 35379,
			[Token(Token = "0x40027EF")]
			GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 35380,
			[Token(Token = "0x40027F0")]
			GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 35381,
			[Token(Token = "0x40027F1")]
			GL_ACTIVE_UNIFORM_BLOCKS = 35382,
			[Token(Token = "0x40027F2")]
			GL_UNIFORM_TYPE = 35383,
			[Token(Token = "0x40027F3")]
			GL_UNIFORM_SIZE = 35384,
			[Token(Token = "0x40027F4")]
			GL_UNIFORM_NAME_LENGTH = 35385,
			[Token(Token = "0x40027F5")]
			GL_UNIFORM_BLOCK_INDEX = 35386,
			[Token(Token = "0x40027F6")]
			GL_UNIFORM_OFFSET = 35387,
			[Token(Token = "0x40027F7")]
			GL_UNIFORM_ARRAY_STRIDE = 35388,
			[Token(Token = "0x40027F8")]
			GL_UNIFORM_MATRIX_STRIDE = 35389,
			[Token(Token = "0x40027F9")]
			GL_UNIFORM_IS_ROW_MAJOR = 35390,
			[Token(Token = "0x40027FA")]
			GL_UNIFORM_BLOCK_BINDING = 35391,
			[Token(Token = "0x40027FB")]
			GL_UNIFORM_BLOCK_DATA_SIZE = 35392,
			[Token(Token = "0x40027FC")]
			GL_UNIFORM_BLOCK_NAME_LENGTH = 35393,
			[Token(Token = "0x40027FD")]
			GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 35394,
			[Token(Token = "0x40027FE")]
			GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 35395,
			[Token(Token = "0x40027FF")]
			GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 35396,
			[Token(Token = "0x4002800")]
			GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 35398,
			[Token(Token = "0x4002801")]
			GL_MAX_VERTEX_OUTPUT_COMPONENTS = 37154,
			[Token(Token = "0x4002802")]
			GL_MAX_FRAGMENT_INPUT_COMPONENTS = 37157,
			[Token(Token = "0x4002803")]
			GL_MAX_SERVER_WAIT_TIMEOUT = 37137,
			[Token(Token = "0x4002804")]
			GL_OBJECT_TYPE = 37138,
			[Token(Token = "0x4002805")]
			GL_SYNC_CONDITION = 37139,
			[Token(Token = "0x4002806")]
			GL_SYNC_STATUS = 37140,
			[Token(Token = "0x4002807")]
			GL_SYNC_FLAGS = 37141,
			[Token(Token = "0x4002808")]
			GL_SYNC_FENCE = 37142,
			[Token(Token = "0x4002809")]
			GL_SYNC_GPU_COMMANDS_COMPLETE = 37143,
			[Token(Token = "0x400280A")]
			GL_UNSIGNALED = 37144,
			[Token(Token = "0x400280B")]
			GL_SIGNALED = 37145,
			[Token(Token = "0x400280C")]
			GL_ALREADY_SIGNALED = 37146,
			[Token(Token = "0x400280D")]
			GL_TIMEOUT_EXPIRED = 37147,
			[Token(Token = "0x400280E")]
			GL_CONDITION_SATISFIED = 37148,
			[Token(Token = "0x400280F")]
			GL_WAIT_FAILED = 37149,
			[Token(Token = "0x4002810")]
			GL_SYNC_FLUSH_COMMANDS_BIT = 1,
			[Token(Token = "0x4002811")]
			GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 35070,
			[Token(Token = "0x4002812")]
			GL_ANY_SAMPLES_PASSED = 35887,
			[Token(Token = "0x4002813")]
			GL_ANY_SAMPLES_PASSED_CONSERVATIVE = 36202,
			[Token(Token = "0x4002814")]
			GL_SAMPLER_BINDING = 35097,
			[Token(Token = "0x4002815")]
			GL_RGB10_A2UI = 36975,
			[Token(Token = "0x4002816")]
			GL_TEXTURE_SWIZZLE_R = 36418,
			[Token(Token = "0x4002817")]
			GL_TEXTURE_SWIZZLE_G = 36419,
			[Token(Token = "0x4002818")]
			GL_TEXTURE_SWIZZLE_B = 36420,
			[Token(Token = "0x4002819")]
			GL_TEXTURE_SWIZZLE_A = 36421,
			[Token(Token = "0x400281A")]
			GL_GREEN = 6404,
			[Token(Token = "0x400281B")]
			GL_BLUE = 6405,
			[Token(Token = "0x400281C")]
			GL_INT_2_10_10_10_REV = 36255,
			[Token(Token = "0x400281D")]
			GL_TRANSFORM_FEEDBACK = 36386,
			[Token(Token = "0x400281E")]
			GL_TRANSFORM_FEEDBACK_PAUSED = 36387,
			[Token(Token = "0x400281F")]
			GL_TRANSFORM_FEEDBACK_ACTIVE = 36388,
			[Token(Token = "0x4002820")]
			GL_TRANSFORM_FEEDBACK_BINDING = 36389,
			[Token(Token = "0x4002821")]
			GL_PROGRAM_BINARY_RETRIEVABLE_HINT = 33367,
			[Token(Token = "0x4002822")]
			GL_PROGRAM_BINARY_LENGTH = 34625,
			[Token(Token = "0x4002823")]
			GL_NUM_PROGRAM_BINARY_FORMATS = 34814,
			[Token(Token = "0x4002824")]
			GL_PROGRAM_BINARY_FORMATS = 34815,
			[Token(Token = "0x4002825")]
			GL_COMPRESSED_R11_EAC = 37488,
			[Token(Token = "0x4002826")]
			GL_COMPRESSED_SIGNED_R11_EAC = 37489,
			[Token(Token = "0x4002827")]
			GL_COMPRESSED_RG11_EAC = 37490,
			[Token(Token = "0x4002828")]
			GL_COMPRESSED_SIGNED_RG11_EAC = 37491,
			[Token(Token = "0x4002829")]
			GL_COMPRESSED_RGB8_ETC2 = 37492,
			[Token(Token = "0x400282A")]
			GL_COMPRESSED_SRGB8_ETC2 = 37493,
			[Token(Token = "0x400282B")]
			GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37494,
			[Token(Token = "0x400282C")]
			GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37495,
			[Token(Token = "0x400282D")]
			GL_COMPRESSED_RGBA8_ETC2_EAC = 37496,
			[Token(Token = "0x400282E")]
			GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 37497,
			[Token(Token = "0x400282F")]
			GL_TEXTURE_IMMUTABLE_FORMAT = 37167,
			[Token(Token = "0x4002830")]
			GL_MAX_ELEMENT_INDEX = 36203,
			[Token(Token = "0x4002831")]
			GL_NUM_SAMPLE_COUNTS = 37760,
			[Token(Token = "0x4002832")]
			GL_TEXTURE_IMMUTABLE_LEVELS = 33503
		}

		[PreserveSig]
		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x1F425B0", Offset = "0x1F425B0", VA = "0x1F425B0")]
		public static extern void GenTextures(int n, [Out] uint[] textures);

		[PreserveSig]
		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x1F426D8", Offset = "0x1F426D8", VA = "0x1F426D8")]
		public static extern void BindTexture(int target, uint texture);

		[PreserveSig]
		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x1F42784", Offset = "0x1F42784", VA = "0x1F42784")]
		public static extern void DeleteTextures(int n, [Out] uint[] textures);

		[PreserveSig]
		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x1F428AC", Offset = "0x1F428AC", VA = "0x1F428AC")]
		public static extern void TexStorage3D(int target, int levels, int internalformat, int width, int height, int depth);

		[PreserveSig]
		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x1F42988", Offset = "0x1F42988", VA = "0x1F42988")]
		public static extern void GetTexParameteriv(int target, uint pname, ref int params_k);

		[PreserveSig]
		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x1F42A3C", Offset = "0x1F42A3C", VA = "0x1F42A3C")]
		public static extern void FramebufferTexture2D(int target, int attachment, int textarget, uint texture, int level);

		[PreserveSig]
		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x1F42B08", Offset = "0x1F42B08", VA = "0x1F42B08")]
		public static extern void FramebufferRenderbuffer(int target, int attachment, int renderbuffertarget, uint renderbuffer);

		[PreserveSig]
		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x1F42BCC", Offset = "0x1F42BCC", VA = "0x1F42BCC")]
		public static extern void FramebufferTextureMultisampleMultiviewOVR(int target, int attachment, uint texture, int level, int samples, int baseViewIndex, int numViews);

		[PreserveSig]
		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x1F42CB0", Offset = "0x1F42CB0", VA = "0x1F42CB0")]
		public static extern void FramebufferTextureMultiviewOVR(int target, int attachment, uint texture, int level, int baseViewIndex, int numViews);

		[PreserveSig]
		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x1F42D8C", Offset = "0x1F42D8C", VA = "0x1F42D8C")]
		public static extern void Clear(uint mask);

		[PreserveSig]
		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x1F42E28", Offset = "0x1F42E28", VA = "0x1F42E28")]
		public static extern void TexParameteri(uint texture, int pname, int param);
	}
}
namespace wvr.render.thread
{
	[Token(Token = "0x20001F1")]
	public class RenderThreadSyncObject
	{
		[Token(Token = "0x2000633")]
		public delegate void RenderEventDelegate(int e);

		[Token(Token = "0x2000634")]
		public delegate void Receiver(PreAllocatedQueue dataQueue);

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly RenderEventDelegate handle;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly IntPtr handlePtr;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<RenderThreadSyncObject> CommandList;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly PreAllocatedQueue queue;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Receiver receiver;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int id;

		[Token(Token = "0x170000E5")]
		public PreAllocatedQueue Queue
		{
			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0x1F42FE0", Offset = "0x1F42FE0", VA = "0x1F42FE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x1F42F78", Offset = "0x1F42F78", VA = "0x1F42F78")]
		private static IntPtr GetFunctionPointerForDelegate(Delegate del)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x1F42FE8", Offset = "0x1F42FE8", VA = "0x1F42FE8")]
		public RenderThreadSyncObject(Receiver render)
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x1F431C0", Offset = "0x1F431C0", VA = "0x1F431C0", Slot = "1")]
		~RenderThreadSyncObject()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x1F43298", Offset = "0x1F43298", VA = "0x1F43298")]
		private void IssuePluginEvent(IntPtr callback, int eventID)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x1F432A8", Offset = "0x1F432A8", VA = "0x1F432A8")]
		private void IssuePluginEvent(CommandBuffer cmdBuf, IntPtr callback, int eventID)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x1F432D0", Offset = "0x1F432D0", VA = "0x1F432D0")]
		public void IssueEvent()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x1F43344", Offset = "0x1F43344", VA = "0x1F43344")]
		public void IssueInCommandBuffer(CommandBuffer cmdBuf)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x1F433D4", Offset = "0x1F433D4", VA = "0x1F433D4")]
		private void Receive()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x1F42EDC", Offset = "0x1F42EDC", VA = "0x1F42EDC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB86360", Offset = "0xB86360")]
		private static void RunSyncObjectInRenderThread(int id)
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class WaveVR_RenderThreadExample
	{
		[Token(Token = "0x2000635")]
		public class TestMessage : wvr.render.utils.Message
		{
			[Token(Token = "0x4002833")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int textureId;

			[Token(Token = "0x6002BE1")]
			[Address(RVA = "0x1F44074", Offset = "0x1F44074", VA = "0x1F44074")]
			public TestMessage()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000636")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72824", Offset = "0xB72824")]
		private sealed class <>c
		{
			[Token(Token = "0x4002834")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002835")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static RenderThreadSyncObject.Receiver <>9__1_0;

			[Token(Token = "0x6002BE3")]
			[Address(RVA = "0x1F43EA4", Offset = "0x1F43EA4", VA = "0x1F43EA4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002BE4")]
			[Address(RVA = "0x1F43EAC", Offset = "0x1F43EAC", VA = "0x1F43EAC")]
			internal void <Example1>b__1_0(PreAllocatedQueue queue)
			{
			}
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x1F43B9C", Offset = "0x1F43B9C", VA = "0x1F43B9C")]
		private static void Example1()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x1F43E38", Offset = "0x1F43E38", VA = "0x1F43E38")]
		public WaveVR_RenderThreadExample()
		{
		}
	}
}
namespace wvr.render.utils
{
	[Token(Token = "0x20001F3")]
	public class Message
	{
		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isFree;

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x1F44084", Offset = "0x1F44084", VA = "0x1F44084")]
		public Message()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class MessagePool
	{
		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<Message> pool;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int index;

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x1F44094", Offset = "0x1F44094", VA = "0x1F44094")]
		public MessagePool()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x1F44108", Offset = "0x1F44108", VA = "0x1F44108")]
		private int Next(int value)
		{
			return default(int);
		}

		[Token(Token = "0x6000FCE")]
		public T Obtain<T>() where T : Message, new()
		{
			return null;
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x1F44174", Offset = "0x1F44174", VA = "0x1F44174")]
		public void Lock(Message msg)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x1F44054", Offset = "0x1F44054", VA = "0x1F44054")]
		public void Release(Message msg)
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class PreAllocatedQueue : MessagePool
	{
		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<Message> list;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int queueBegin;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int queueEnd;

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x1F43114", Offset = "0x1F43114", VA = "0x1F43114")]
		public PreAllocatedQueue()
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x1F44190", Offset = "0x1F44190", VA = "0x1F44190")]
		private int Next(int value)
		{
			return default(int);
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x1F43D64", Offset = "0x1F43D64", VA = "0x1F43D64")]
		public void Enqueue(Message msg)
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x1F43FC8", Offset = "0x1F43FC8", VA = "0x1F43FC8")]
		public Message Dequeue()
		{
			return null;
		}
	}
}
namespace SimpleJSON
{
	[Token(Token = "0x20001F6")]
	public enum JSONNodeType
	{
		[Token(Token = "0x4000E7F")]
		Array = 1,
		[Token(Token = "0x4000E80")]
		Object = 2,
		[Token(Token = "0x4000E81")]
		String = 3,
		[Token(Token = "0x4000E82")]
		Number = 4,
		[Token(Token = "0x4000E83")]
		NullValue = 5,
		[Token(Token = "0x4000E84")]
		Boolean = 6,
		[Token(Token = "0x4000E85")]
		None = 7,
		[Token(Token = "0x4000E86")]
		Custom = 255
	}
	[Token(Token = "0x20001F7")]
	public enum JSONTextMode
	{
		[Token(Token = "0x4000E88")]
		Compact,
		[Token(Token = "0x4000E89")]
		Indent
	}
	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB710F0", Offset = "0xB710F0")]
	public abstract class JSONNode
	{
		[Token(Token = "0x2000637")]
		public struct Enumerator
		{
			[Token(Token = "0x20008EE")]
			private enum Type
			{
				[Token(Token = "0x4003033")]
				None,
				[Token(Token = "0x4003034")]
				Array,
				[Token(Token = "0x4003035")]
				Object
			}

			[Token(Token = "0x4002836")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Type type;

			[Token(Token = "0x4002837")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Dictionary<string, JSONNode>.Enumerator m_Object;

			[Token(Token = "0x4002838")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator m_Array;

			[Token(Token = "0x170004BB")]
			public bool IsValid
			{
				[Token(Token = "0x6002BE5")]
				[Address(RVA = "0xC35C94", Offset = "0xC35C94", VA = "0xC35C94")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004BC")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6002BE8")]
				[Address(RVA = "0xC35D28", Offset = "0xC35D28", VA = "0xC35D28")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x6002BE6")]
			[Address(RVA = "0xC35CA4", Offset = "0xC35CA4", VA = "0xC35CA4")]
			public Enumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6002BE7")]
			[Address(RVA = "0xC35CE4", Offset = "0xC35CE4", VA = "0xC35CE4")]
			public Enumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6002BE9")]
			[Address(RVA = "0xC35D30", Offset = "0xC35D30", VA = "0xC35D30")]
			public bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000638")]
		public struct ValueEnumerator
		{
			[Token(Token = "0x4002839")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170004BD")]
			public JSONNode Current
			{
				[Token(Token = "0x6002BED")]
				[Address(RVA = "0xC35F30", Offset = "0xC35F30", VA = "0xC35F30")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BEA")]
			[Address(RVA = "0xC35E88", Offset = "0xC35E88", VA = "0xC35E88")]
			public ValueEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6002BEB")]
			[Address(RVA = "0xC35ECC", Offset = "0xC35ECC", VA = "0xC35ECC")]
			public ValueEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6002BEC")]
			[Address(RVA = "0xC35F14", Offset = "0xC35F14", VA = "0xC35F14")]
			public ValueEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x6002BEE")]
			[Address(RVA = "0xC35F38", Offset = "0xC35F38", VA = "0xC35F38")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BEF")]
			[Address(RVA = "0xC35F40", Offset = "0xC35F40", VA = "0xC35F40")]
			public ValueEnumerator GetEnumerator()
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x2000639")]
		public struct KeyEnumerator
		{
			[Token(Token = "0x400283A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170004BE")]
			public JSONNode Current
			{
				[Token(Token = "0x6002BF3")]
				[Address(RVA = "0xC35E24", Offset = "0xC35E24", VA = "0xC35E24")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BF0")]
			[Address(RVA = "0xC35D7C", Offset = "0xC35D7C", VA = "0xC35D7C")]
			public KeyEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6002BF1")]
			[Address(RVA = "0xC35DC0", Offset = "0xC35DC0", VA = "0xC35DC0")]
			public KeyEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6002BF2")]
			[Address(RVA = "0xC35E08", Offset = "0xC35E08", VA = "0xC35E08")]
			public KeyEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x6002BF4")]
			[Address(RVA = "0xC35E2C", Offset = "0xC35E2C", VA = "0xC35E2C")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BF5")]
			[Address(RVA = "0xC35E34", Offset = "0xC35E34", VA = "0xC35E34")]
			public KeyEnumerator GetEnumerator()
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x200063A")]
		public class LinqEnumerator : IEnumerator<KeyValuePair<string, JSONNode>>, IEnumerator, IDisposable, IEnumerable<KeyValuePair<string, JSONNode>>, IEnumerable
		{
			[Token(Token = "0x400283B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private JSONNode m_Node;

			[Token(Token = "0x400283C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170004BF")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6002BF7")]
				[Address(RVA = "0x10E6228", Offset = "0x10E6228", VA = "0x10E6228", Slot = "4")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x170004C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BF8")]
				[Address(RVA = "0x10E6230", Offset = "0x10E6230", VA = "0x10E6230", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BF6")]
			[Address(RVA = "0x10E4658", Offset = "0x10E4658", VA = "0x10E4658")]
			internal LinqEnumerator(JSONNode aNode)
			{
			}

			[Token(Token = "0x6002BF9")]
			[Address(RVA = "0x10E629C", Offset = "0x10E629C", VA = "0x10E629C", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BFA")]
			[Address(RVA = "0x10E62A4", Offset = "0x10E62A4", VA = "0x10E62A4", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0x10E62C4", Offset = "0x10E62C4", VA = "0x10E62C4", Slot = "9")]
			public IEnumerator<KeyValuePair<string, JSONNode>> GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002BFC")]
			[Address(RVA = "0x10E6328", Offset = "0x10E6328", VA = "0x10E6328", Slot = "8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002BFD")]
			[Address(RVA = "0x10E63D4", Offset = "0x10E63D4", VA = "0x10E63D4", Slot = "10")]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200063B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72834", Offset = "0xB72834")]
		private sealed class <get_Children>d__39 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400283D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400283E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x400283F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x170004C1")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002C01")]
				[Address(RVA = "0x10E5724", Offset = "0x10E5724", VA = "0x10E5724", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C03")]
				[Address(RVA = "0x10E5790", Offset = "0x10E5790", VA = "0x10E5790", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BFE")]
			[Address(RVA = "0x10E43C8", Offset = "0x10E43C8", VA = "0x10E43C8")]
			[DebuggerHidden]
			public <get_Children>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6002BFF")]
			[Address(RVA = "0x10E5708", Offset = "0x10E5708", VA = "0x10E5708", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C00")]
			[Address(RVA = "0x10E570C", Offset = "0x10E570C", VA = "0x10E570C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C02")]
			[Address(RVA = "0x10E572C", Offset = "0x10E572C", VA = "0x10E572C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002C04")]
			[Address(RVA = "0x10E5798", Offset = "0x10E5798", VA = "0x10E5798", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002C05")]
			[Address(RVA = "0x10E5830", Offset = "0x10E5830", VA = "0x10E5830", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200063C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72844", Offset = "0xB72844")]
		private sealed class <get_DeepChildren>d__41 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002840")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002841")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002843")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4002844")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4002845")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x170004C3")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002C0B")]
				[Address(RVA = "0x10E5E50", Offset = "0x10E5E50", VA = "0x10E5E50", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C0D")]
				[Address(RVA = "0x10E5EBC", Offset = "0x10E5EBC", VA = "0x10E5EBC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C06")]
			[Address(RVA = "0x10E4484", Offset = "0x10E4484", VA = "0x10E4484")]
			[DebuggerHidden]
			public <get_DeepChildren>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6002C07")]
			[Address(RVA = "0x10E5834", Offset = "0x10E5834", VA = "0x10E5834", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C08")]
			[Address(RVA = "0x10E5A2C", Offset = "0x10E5A2C", VA = "0x10E5A2C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C09")]
			[Address(RVA = "0x10E596C", Offset = "0x10E596C", VA = "0x10E596C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002C0A")]
			[Address(RVA = "0x10E58AC", Offset = "0x10E58AC", VA = "0x10E58AC")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002C0C")]
			[Address(RVA = "0x10E5E58", Offset = "0x10E5E58", VA = "0x10E5E58", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002C0E")]
			[Address(RVA = "0x10E5EC4", Offset = "0x10E5EC4", VA = "0x10E5EC4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002C0F")]
			[Address(RVA = "0x10E5F74", Offset = "0x10E5F74", VA = "0x10E5F74", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool forceASCII;

		[Token(Token = "0x4000E8B")]
		[ThreadStatic]
		private static StringBuilder m_EscapeBuilder;

		[Token(Token = "0x170000E6")]
		public abstract JSONNodeType Tag
		{
			[Token(Token = "0x6000FD5")]
			get;
		}

		[Token(Token = "0x170000E7")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0x10E4228", Offset = "0x10E4228", VA = "0x10E4228", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0x10E4230", Offset = "0x10E4230", VA = "0x10E4230", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x10E4234", Offset = "0x10E4234", VA = "0x10E4234", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x10E423C", Offset = "0x10E423C", VA = "0x10E423C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public virtual string Value
		{
			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0x10E4240", Offset = "0x10E4240", VA = "0x10E4240", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0x10E4288", Offset = "0x10E4288", VA = "0x10E4288", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public virtual int Count
		{
			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0x10E428C", Offset = "0x10E428C", VA = "0x10E428C", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EB")]
		public virtual bool IsNumber
		{
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x10E4294", Offset = "0x10E4294", VA = "0x10E4294", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EC")]
		public virtual bool IsString
		{
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x10E429C", Offset = "0x10E429C", VA = "0x10E429C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000ED")]
		public virtual bool IsBoolean
		{
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x10E42A4", Offset = "0x10E42A4", VA = "0x10E42A4", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EE")]
		public virtual bool IsNull
		{
			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0x10E42AC", Offset = "0x10E42AC", VA = "0x10E42AC", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EF")]
		public virtual bool IsArray
		{
			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0x10E42B4", Offset = "0x10E42B4", VA = "0x10E42B4", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F0")]
		public virtual bool IsObject
		{
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0x10E42BC", Offset = "0x10E42BC", VA = "0x10E42BC", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F1")]
		public virtual bool Inline
		{
			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x10E42C4", Offset = "0x10E42C4", VA = "0x10E42C4", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x10E42CC", Offset = "0x10E42CC", VA = "0x10E42CC", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0x10E4358", Offset = "0x10E4358", VA = "0x10E4358", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB863C4", Offset = "0xB863C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0x10E4400", Offset = "0x10E4400", VA = "0x10E4400")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB86428", Offset = "0xB86428")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		public IEnumerable<KeyValuePair<string, JSONNode>> Linq
		{
			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0x10E45F8", Offset = "0x10E45F8", VA = "0x10E45F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		public KeyEnumerator Keys
		{
			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0x10E471C", Offset = "0x10E471C", VA = "0x10E471C")]
			get
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x170000F6")]
		public ValueEnumerator Values
		{
			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0x10E4764", Offset = "0x10E4764", VA = "0x10E4764")]
			get
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x170000F7")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0x10E47AC", Offset = "0x10E47AC", VA = "0x10E47AC", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0x10E4850", Offset = "0x10E4850", VA = "0x10E4850", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public virtual int AsInt
		{
			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0x10E4890", Offset = "0x10E4890", VA = "0x10E4890", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0x10E48B4", Offset = "0x10E48B4", VA = "0x10E48B4", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0x10E48CC", Offset = "0x10E48CC", VA = "0x10E48CC", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x10E48F0", Offset = "0x10E48F0", VA = "0x10E48F0", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0x10E4904", Offset = "0x10E4904", VA = "0x10E4904", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x10E49CC", Offset = "0x10E49CC", VA = "0x10E49CC", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0x10E4A4C", Offset = "0x10E4A4C", VA = "0x10E4A4C", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		public virtual JSONObject AsObject
		{
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x10E4ACC", Offset = "0x10E4ACC", VA = "0x10E4ACC", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		internal static StringBuilder EscapeBuilder
		{
			[Token(Token = "0x600100C")]
			[Address(RVA = "0x10E5198", Offset = "0x10E5198", VA = "0x10E5198")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x10E42D0", Offset = "0x10E42D0", VA = "0x10E42D0", Slot = "20")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x10E42D4", Offset = "0x10E42D4", VA = "0x10E42D4", Slot = "21")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x10E4340", Offset = "0x10E4340", VA = "0x10E4340", Slot = "22")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x10E4348", Offset = "0x10E4348", VA = "0x10E4348", Slot = "23")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x10E4350", Offset = "0x10E4350", VA = "0x10E4350", Slot = "24")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x10E44BC", Offset = "0x10E44BC", VA = "0x10E44BC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x10E4554", Offset = "0x10E4554", VA = "0x10E4554", Slot = "26")]
		public virtual string ToString(int aIndent)
		{
			return null;
		}

		[Token(Token = "0x6000FEE")]
		internal abstract void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode);

		[Token(Token = "0x6000FEF")]
		public abstract Enumerator GetEnumerator();

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x10E4B4C", Offset = "0x10E4B4C", VA = "0x10E4B4C")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x10E4C28", Offset = "0x10E4C28", VA = "0x10E4C28")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x10E4CC0", Offset = "0x10E4CC0", VA = "0x10E4CC0")]
		public static implicit operator JSONNode(double n)
		{
			return null;
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x10E4D28", Offset = "0x10E4D28", VA = "0x10E4D28")]
		public static implicit operator double(JSONNode d)
		{
			return default(double);
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x10E4DC4", Offset = "0x10E4DC4", VA = "0x10E4DC4")]
		public static implicit operator JSONNode(float n)
		{
			return null;
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x10E4E2C", Offset = "0x10E4E2C", VA = "0x10E4E2C")]
		public static implicit operator float(JSONNode d)
		{
			return default(float);
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x10E4EC8", Offset = "0x10E4EC8", VA = "0x10E4EC8")]
		public static implicit operator JSONNode(int n)
		{
			return null;
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x10E4F28", Offset = "0x10E4F28", VA = "0x10E4F28")]
		public static implicit operator int(JSONNode d)
		{
			return default(int);
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x10E4FC4", Offset = "0x10E4FC4", VA = "0x10E4FC4")]
		public static implicit operator JSONNode(bool b)
		{
			return null;
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x10E5024", Offset = "0x10E5024", VA = "0x10E5024")]
		public static implicit operator bool(JSONNode d)
		{
			return default(bool);
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x10E50C0", Offset = "0x10E50C0", VA = "0x10E50C0")]
		public static implicit operator JSONNode(KeyValuePair<string, JSONNode> aKeyValue)
		{
			return null;
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x10E29B8", Offset = "0x10E29B8", VA = "0x10E29B8")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x10E5104", Offset = "0x10E5104", VA = "0x10E5104")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x10E5184", Offset = "0x10E5184", VA = "0x10E5184", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x10E5190", Offset = "0x10E5190", VA = "0x10E5190", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x10E5268", Offset = "0x10E5268", VA = "0x10E5268")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x10E5514", Offset = "0x10E5514", VA = "0x10E5514")]
		private static void ParseElement(JSONNode ctx, string token, string tokenName, bool quoted)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x10E20CC", Offset = "0x10E20CC", VA = "0x10E20CC")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x10E3208", Offset = "0x10E3208", VA = "0x10E3208")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB71128", Offset = "0xB71128")]
	public class JSONArray : JSONNode
	{
		[Token(Token = "0x200063D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72854", Offset = "0xB72854")]
		private sealed class <get_Children>d__22 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002848")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x400284A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170004C5")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002C14")]
				[Address(RVA = "0x10E33DC", Offset = "0x10E33DC", VA = "0x10E33DC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C16")]
				[Address(RVA = "0x10E3448", Offset = "0x10E3448", VA = "0x10E3448", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C10")]
			[Address(RVA = "0x10E2FC0", Offset = "0x10E2FC0", VA = "0x10E2FC0")]
			[DebuggerHidden]
			public <get_Children>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002C11")]
			[Address(RVA = "0x10E3210", Offset = "0x10E3210", VA = "0x10E3210", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C12")]
			[Address(RVA = "0x10E3284", Offset = "0x10E3284", VA = "0x10E3284", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C13")]
			[Address(RVA = "0x10E322C", Offset = "0x10E322C", VA = "0x10E322C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002C15")]
			[Address(RVA = "0x10E33E4", Offset = "0x10E33E4", VA = "0x10E33E4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002C17")]
			[Address(RVA = "0x10E3450", Offset = "0x10E3450", VA = "0x10E3450", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002C18")]
			[Address(RVA = "0x10E3500", Offset = "0x10E3500", VA = "0x10E3500", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inline;

		[Token(Token = "0x170000FE")]
		public override bool Inline
		{
			[Token(Token = "0x6001012")]
			[Address(RVA = "0x10E26A8", Offset = "0x10E26A8", VA = "0x10E26A8", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001013")]
			[Address(RVA = "0x10E26B0", Offset = "0x10E26B0", VA = "0x10E26B0", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6001014")]
			[Address(RVA = "0x10E26BC", Offset = "0x10E26BC", VA = "0x10E26BC", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000100")]
		public override bool IsArray
		{
			[Token(Token = "0x6001015")]
			[Address(RVA = "0x10E26C4", Offset = "0x10E26C4", VA = "0x10E26C4", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000101")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0x10E2798", Offset = "0x10E2798", VA = "0x10E2798", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001018")]
			[Address(RVA = "0x10E28BC", Offset = "0x10E28BC", VA = "0x10E28BC", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001019")]
			[Address(RVA = "0x10E2BE8", Offset = "0x10E2BE8", VA = "0x10E2BE8", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x600101A")]
			[Address(RVA = "0x10E2C48", Offset = "0x10E2C48", VA = "0x10E2C48", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public override int Count
		{
			[Token(Token = "0x600101B")]
			[Address(RVA = "0x10E2D08", Offset = "0x10E2D08", VA = "0x10E2D08", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000104")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x600101F")]
			[Address(RVA = "0x10E2F3C", Offset = "0x10E2F3C", VA = "0x10E2F3C", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8648C", Offset = "0xB8648C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x10E26CC", Offset = "0x10E26CC", VA = "0x10E26CC", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x10E2D5C", Offset = "0x10E2D5C", VA = "0x10E2D5C", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x10E2E1C", Offset = "0x10E2E1C", VA = "0x10E2E1C", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x10E2ECC", Offset = "0x10E2ECC", VA = "0x10E2ECC", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x10E2FF8", Offset = "0x10E2FF8", VA = "0x10E2FF8", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x10E3178", Offset = "0x10E3178", VA = "0x10E3178")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB71160", Offset = "0xB71160")]
	public class JSONObject : JSONNode
	{
		[Token(Token = "0x200063E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72864", Offset = "0xB72864")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x400284B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x6002C19")]
			[Address(RVA = "0x10E74D0", Offset = "0x10E74D0", VA = "0x10E74D0")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002C1A")]
			[Address(RVA = "0x10E7878", Offset = "0x10E7878", VA = "0x10E7878")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200063F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72874", Offset = "0xB72874")]
		private sealed class <get_Children>d__23 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400284C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400284D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x400284E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400284F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONObject <>4__this;

			[Token(Token = "0x4002850")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170004C7")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002C1F")]
				[Address(RVA = "0x10E7AC8", Offset = "0x10E7AC8", VA = "0x10E7AC8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C21")]
				[Address(RVA = "0x10E7B34", Offset = "0x10E7B34", VA = "0x10E7B34", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C1B")]
			[Address(RVA = "0x10E755C", Offset = "0x10E755C", VA = "0x10E755C")]
			[DebuggerHidden]
			public <get_Children>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002C1C")]
			[Address(RVA = "0x10E78F0", Offset = "0x10E78F0", VA = "0x10E78F0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C1D")]
			[Address(RVA = "0x10E7964", Offset = "0x10E7964", VA = "0x10E7964", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C1E")]
			[Address(RVA = "0x10E790C", Offset = "0x10E790C", VA = "0x10E790C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002C20")]
			[Address(RVA = "0x10E7AD0", Offset = "0x10E7AD0", VA = "0x10E7AD0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002C22")]
			[Address(RVA = "0x10E7B3C", Offset = "0x10E7B3C", VA = "0x10E7B3C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002C23")]
			[Address(RVA = "0x10E7BEC", Offset = "0x10E7BEC", VA = "0x10E7BEC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inline;

		[Token(Token = "0x17000105")]
		public override bool Inline
		{
			[Token(Token = "0x6001022")]
			[Address(RVA = "0x10E6B9C", Offset = "0x10E6B9C", VA = "0x10E6B9C", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001023")]
			[Address(RVA = "0x10E6BA4", Offset = "0x10E6BA4", VA = "0x10E6BA4", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6001024")]
			[Address(RVA = "0x10E6BB0", Offset = "0x10E6BB0", VA = "0x10E6BB0", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000107")]
		public override bool IsObject
		{
			[Token(Token = "0x6001025")]
			[Address(RVA = "0x10E6BB8", Offset = "0x10E6BB8", VA = "0x10E6BB8", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000108")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001027")]
			[Address(RVA = "0x10E6C5C", Offset = "0x10E6C5C", VA = "0x10E6C5C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001028")]
			[Address(RVA = "0x10E6D18", Offset = "0x10E6D18", VA = "0x10E6D18", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001029")]
			[Address(RVA = "0x10E6E34", Offset = "0x10E6E34", VA = "0x10E6E34", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x600102A")]
			[Address(RVA = "0x10E6ECC", Offset = "0x10E6ECC", VA = "0x10E6ECC", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public override int Count
		{
			[Token(Token = "0x600102B")]
			[Address(RVA = "0x10E6FF0", Offset = "0x10E6FF0", VA = "0x10E6FF0", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700010B")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6001030")]
			[Address(RVA = "0x10E74D8", Offset = "0x10E74D8", VA = "0x10E74D8", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB864F0", Offset = "0xB864F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x10E6BC0", Offset = "0x10E6BC0", VA = "0x10E6BC0", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x10E7048", Offset = "0x10E7048", VA = "0x10E7048", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x10E71D0", Offset = "0x10E71D0", VA = "0x10E71D0", Slot = "22")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x10E7294", Offset = "0x10E7294", VA = "0x10E7294", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x10E7350", Offset = "0x10E7350", VA = "0x10E7350", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x10E7594", Offset = "0x10E7594", VA = "0x10E7594", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x10E3B04", Offset = "0x10E3B04", VA = "0x10E3B04")]
		public JSONObject()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class JSONString : JSONNode
	{
		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x1700010C")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6001033")]
			[Address(RVA = "0x10E7BF0", Offset = "0x10E7BF0", VA = "0x10E7BF0", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700010D")]
		public override bool IsString
		{
			[Token(Token = "0x6001034")]
			[Address(RVA = "0x10E7BF8", Offset = "0x10E7BF8", VA = "0x10E7BF8", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010E")]
		public override string Value
		{
			[Token(Token = "0x6001036")]
			[Address(RVA = "0x10E7C20", Offset = "0x10E7C20", VA = "0x10E7C20", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001037")]
			[Address(RVA = "0x10E7C28", Offset = "0x10E7C28", VA = "0x10E7C28", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x10E7C00", Offset = "0x10E7C00", VA = "0x10E7C00", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x10E4BAC", Offset = "0x10E4BAC", VA = "0x10E4BAC")]
		public JSONString(string aData)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x10E7C30", Offset = "0x10E7C30", VA = "0x10E7C30", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x10E7CEC", Offset = "0x10E7CEC", VA = "0x10E7CEC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x10E7E04", Offset = "0x10E7E04", VA = "0x10E7E04", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001FC")]
	public class JSONNumber : JSONNode
	{
		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double m_Data;

		[Token(Token = "0x1700010F")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600103C")]
			[Address(RVA = "0x10E67AC", Offset = "0x10E67AC", VA = "0x10E67AC", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000110")]
		public override bool IsNumber
		{
			[Token(Token = "0x600103D")]
			[Address(RVA = "0x10E67B4", Offset = "0x10E67B4", VA = "0x10E67B4", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000111")]
		public override string Value
		{
			[Token(Token = "0x600103F")]
			[Address(RVA = "0x10E67DC", Offset = "0x10E67DC", VA = "0x10E67DC", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001040")]
			[Address(RVA = "0x10E67E8", Offset = "0x10E67E8", VA = "0x10E67E8", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public override double AsDouble
		{
			[Token(Token = "0x6001041")]
			[Address(RVA = "0x10E6874", Offset = "0x10E6874", VA = "0x10E6874", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001042")]
			[Address(RVA = "0x10E687C", Offset = "0x10E687C", VA = "0x10E687C", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x10E67BC", Offset = "0x10E67BC", VA = "0x10E67BC", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x10E3D78", Offset = "0x10E3D78", VA = "0x10E3D78")]
		public JSONNumber(double aData)
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x10E6884", Offset = "0x10E6884", VA = "0x10E6884")]
		public JSONNumber(string aData)
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x10E690C", Offset = "0x10E690C", VA = "0x10E690C", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x10E6930", Offset = "0x10E6930", VA = "0x10E6930")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x10E6A60", Offset = "0x10E6A60", VA = "0x10E6A60", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x10E6B90", Offset = "0x10E6B90", VA = "0x10E6B90", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001FD")]
	public class JSONBool : JSONNode
	{
		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Data;

		[Token(Token = "0x17000113")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6001049")]
			[Address(RVA = "0x10E3504", Offset = "0x10E3504", VA = "0x10E3504", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000114")]
		public override bool IsBoolean
		{
			[Token(Token = "0x600104A")]
			[Address(RVA = "0x10E350C", Offset = "0x10E350C", VA = "0x10E350C", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000115")]
		public override string Value
		{
			[Token(Token = "0x600104C")]
			[Address(RVA = "0x10E3534", Offset = "0x10E3534", VA = "0x10E3534", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x600104D")]
			[Address(RVA = "0x10E3540", Offset = "0x10E3540", VA = "0x10E3540", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public override bool AsBool
		{
			[Token(Token = "0x600104E")]
			[Address(RVA = "0x10E35CC", Offset = "0x10E35CC", VA = "0x10E35CC", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600104F")]
			[Address(RVA = "0x10E35D4", Offset = "0x10E35D4", VA = "0x10E35D4", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x10E3514", Offset = "0x10E3514", VA = "0x10E3514", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x10E35E0", Offset = "0x10E35E0", VA = "0x10E35E0")]
		public JSONBool(bool aData)
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x10E3660", Offset = "0x10E3660", VA = "0x10E3660")]
		public JSONBool(string aData)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x10E36E8", Offset = "0x10E36E8", VA = "0x10E36E8", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x10E3768", Offset = "0x10E3768", VA = "0x10E3768", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x10E37F0", Offset = "0x10E37F0", VA = "0x10E37F0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001FE")]
	public class JSONNull : JSONNode
	{
		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JSONNull m_StaticInstance;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool reuseSameInstance;

		[Token(Token = "0x17000117")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6001057")]
			[Address(RVA = "0x10E65B0", Offset = "0x10E65B0", VA = "0x10E65B0", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000118")]
		public override bool IsNull
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0x10E65B8", Offset = "0x10E65B8", VA = "0x10E65B8", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000119")]
		public override string Value
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0x10E65E0", Offset = "0x10E65E0", VA = "0x10E65E0", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x600105B")]
			[Address(RVA = "0x10E6628", Offset = "0x10E6628", VA = "0x10E6628", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public override bool AsBool
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0x10E662C", Offset = "0x10E662C", VA = "0x10E662C", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600105D")]
			[Address(RVA = "0x10E6634", Offset = "0x10E6634", VA = "0x10E6634", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x10E2B48", Offset = "0x10E2B48", VA = "0x10E2B48")]
		public static JSONNull CreateOrGet()
		{
			return null;
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x10E6548", Offset = "0x10E6548", VA = "0x10E6548")]
		private JSONNull()
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x10E65C0", Offset = "0x10E65C0", VA = "0x10E65C0", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x10E6638", Offset = "0x10E6638", VA = "0x10E6638", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x10E66D4", Offset = "0x10E66D4", VA = "0x10E66D4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x10E66DC", Offset = "0x10E66DC", VA = "0x10E66DC", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x20001FF")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB71198", Offset = "0xB71198")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x1700011B")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6001062")]
			[Address(RVA = "0x10E37FC", Offset = "0x10E37FC", VA = "0x10E37FC", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700011C")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001067")]
			[Address(RVA = "0x10E390C", Offset = "0x10E390C", VA = "0x10E390C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001068")]
			[Address(RVA = "0x10E396C", Offset = "0x10E396C", VA = "0x10E396C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0x10E39FC", Offset = "0x10E39FC", VA = "0x10E39FC", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x600106A")]
			[Address(RVA = "0x10E3A6C", Offset = "0x10E3A6C", VA = "0x10E3A6C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public override int AsInt
		{
			[Token(Token = "0x6001071")]
			[Address(RVA = "0x10E3D0C", Offset = "0x10E3D0C", VA = "0x10E3D0C", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001072")]
			[Address(RVA = "0x10E3DF4", Offset = "0x10E3DF4", VA = "0x10E3DF4", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public override float AsFloat
		{
			[Token(Token = "0x6001073")]
			[Address(RVA = "0x10E3E64", Offset = "0x10E3E64", VA = "0x10E3E64", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001074")]
			[Address(RVA = "0x10E3ED0", Offset = "0x10E3ED0", VA = "0x10E3ED0", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public override double AsDouble
		{
			[Token(Token = "0x6001075")]
			[Address(RVA = "0x10E3F40", Offset = "0x10E3F40", VA = "0x10E3F40", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001076")]
			[Address(RVA = "0x10E3FAC", Offset = "0x10E3FAC", VA = "0x10E3FAC", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public override bool AsBool
		{
			[Token(Token = "0x6001077")]
			[Address(RVA = "0x10E401C", Offset = "0x10E401C", VA = "0x10E401C", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001078")]
			[Address(RVA = "0x10E4088", Offset = "0x10E4088", VA = "0x10E4088", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6001079")]
			[Address(RVA = "0x10E40F8", Offset = "0x10E40F8", VA = "0x10E40F8", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		public override JSONObject AsObject
		{
			[Token(Token = "0x600107A")]
			[Address(RVA = "0x10E4160", Offset = "0x10E4160", VA = "0x10E4160", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x10E3804", Offset = "0x10E3804", VA = "0x10E3804", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x10E2840", Offset = "0x10E2840", VA = "0x10E2840")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x10E3824", Offset = "0x10E3824", VA = "0x10E3824")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x10E38A4", Offset = "0x10E38A4", VA = "0x10E38A4")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x10E3B94", Offset = "0x10E3B94", VA = "0x10E3B94", Slot = "21")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x10E3C24", Offset = "0x10E3C24", VA = "0x10E3C24", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x10E3CBC", Offset = "0x10E3CBC", VA = "0x10E3CBC")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x10E3CD4", Offset = "0x10E3CD4", VA = "0x10E3CD4")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x10E3CEC", Offset = "0x10E3CEC", VA = "0x10E3CEC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x10E3D04", Offset = "0x10E3D04", VA = "0x10E3D04", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x10E41C8", Offset = "0x10E41C8", VA = "0x10E41C8", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x2000200")]
	public static class JSON
	{
		[Token(Token = "0x600107C")]
		[Address(RVA = "0x10E2068", Offset = "0x10E2068", VA = "0x10E2068")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x2000201")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xFFB188", Offset = "0xFFB188", VA = "0xFFB188")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xFFB210", Offset = "0xFFB210", VA = "0xFFB210")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xFFB73C", Offset = "0xFFB73C", VA = "0xFFB73C")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xFFB84C", Offset = "0xFFB84C", VA = "0xFFB84C")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x2000202")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x2000640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72884", Offset = "0xB72884")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002851")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x4002852")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator action;

			[Token(Token = "0x6002C24")]
			[Address(RVA = "0x17F2CA4", Offset = "0x17F2CA4", VA = "0x17F2CA4")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002C25")]
			[Address(RVA = "0x17F2CAC", Offset = "0x17F2CAC", VA = "0x17F2CAC")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x2000641")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72894", Offset = "0xB72894")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002853")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002854")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002855")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x170004C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C29")]
				[Address(RVA = "0x17F2D64", Offset = "0x17F2D64", VA = "0x17F2D64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C2B")]
				[Address(RVA = "0x17F2DD0", Offset = "0x17F2DD0", VA = "0x17F2DD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C26")]
			[Address(RVA = "0x17F2CD0", Offset = "0x17F2CD0", VA = "0x17F2CD0")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002C27")]
			[Address(RVA = "0x17F2CFC", Offset = "0x17F2CFC", VA = "0x17F2CFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C28")]
			[Address(RVA = "0x17F2D00", Offset = "0x17F2D00", VA = "0x17F2D00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C2A")]
			[Address(RVA = "0x17F2D6C", Offset = "0x17F2D6C", VA = "0x17F2D6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000642")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB728A4", Offset = "0xB728A4")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002856")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002857")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002858")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x4002859")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x170004CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C2F")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C31")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C2C")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002C2D")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C2E")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C30")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000643")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB728B4", Offset = "0xB728B4")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400285A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x400285B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x400285C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x400285D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x400285E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x170004CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C35")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C37")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C32")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002C33")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C34")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C36")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB728C4", Offset = "0xB728C4")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400285F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002860")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x4002862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4002863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4002864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x170004CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C3B")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C3D")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C38")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002C39")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C3A")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C3C")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000645")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB728D4", Offset = "0xB728D4")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x4002868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4002869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x400286A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x400286B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x170004D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C41")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C43")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C3E")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002C3F")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C40")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C42")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> actions;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MainThreadDispatcher instance;

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x18C75F0", Offset = "0x18C75F0", VA = "0x18C75F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x18C7704", Offset = "0x18C7704", VA = "0x18C7704")]
		public void Update()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x18C788C", Offset = "0x18C788C", VA = "0x18C788C")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x18C7990", Offset = "0x18C7990", VA = "0x18C7990")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x18C79F8", Offset = "0x18C79F8", VA = "0x18C79F8")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x18C7B94", Offset = "0x18C7B94", VA = "0x18C7B94")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x6001088")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x6001089")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x600108A")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x600108B")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x18C7BBC", Offset = "0x18C7BBC", VA = "0x18C7BBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB86554", Offset = "0xB86554")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x600108D")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB865B8", Offset = "0xB865B8")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x600108E")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8661C", Offset = "0xB8661C")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x600108F")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB86680", Offset = "0xB86680")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x6001090")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB866E4", Offset = "0xB866E4")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x18C7C30", Offset = "0x18C7C30", VA = "0x18C7C30")]
		public MainThreadDispatcher()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public enum Locale
	{
		[Token(Token = "0x4000E9B")]
		US,
		[Token(Token = "0x4000E9C")]
		DE,
		[Token(Token = "0x4000E9D")]
		JP,
		[Token(Token = "0x4000E9E")]
		KR,
		[Token(Token = "0x4000E9F")]
		RU,
		[Token(Token = "0x4000EA0")]
		CN,
		[Token(Token = "0x4000EA1")]
		TW,
		[Token(Token = "0x4000EA2")]
		FR
	}
	[Token(Token = "0x2000204")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x2000205")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x2000206")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x2000207")]
	public class Leaderboard
	{
		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77A00", Offset = "0xB77A00")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77A10", Offset = "0xB77A10")]
		private int <Score>k__BackingField;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77A20", Offset = "0xB77A20")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x17000124")]
		public int Rank
		{
			[Token(Token = "0x600109F")]
			[Address(RVA = "0x18C75C0", Offset = "0x18C75C0", VA = "0x18C75C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86748", Offset = "0xB86748")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010A0")]
			[Address(RVA = "0x18C75C8", Offset = "0x18C75C8", VA = "0x18C75C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86758", Offset = "0xB86758")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public int Score
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0x18C75D0", Offset = "0x18C75D0", VA = "0x18C75D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86768", Offset = "0xB86768")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010A2")]
			[Address(RVA = "0x18C75D8", Offset = "0x18C75D8", VA = "0x18C75D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86778", Offset = "0xB86778")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public string UserName
		{
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0x18C75E0", Offset = "0x18C75E0", VA = "0x18C75E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86788", Offset = "0xB86788")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010A4")]
			[Address(RVA = "0x18C75E8", Offset = "0x18C75E8", VA = "0x18C75E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86798", Offset = "0xB86798")]
			set
			{
			}
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x18C72B0", Offset = "0x18C72B0", VA = "0x18C72B0")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class SubscriptionStatus
	{
		[Token(Token = "0x2000646")]
		public enum Platform
		{
			[Token(Token = "0x400286D")]
			Windows,
			[Token(Token = "0x400286E")]
			Android
		}

		[Token(Token = "0x2000647")]
		public enum TransactionType
		{
			[Token(Token = "0x4002870")]
			Unknown,
			[Token(Token = "0x4002871")]
			Paid,
			[Token(Token = "0x4002872")]
			Redeem,
			[Token(Token = "0x4002873")]
			FreeTrial
		}

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77A30", Offset = "0xB77A30")]
		private List<Platform> <Platforms>k__BackingField;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77A40", Offset = "0xB77A40")]
		private TransactionType <Type>k__BackingField;

		[Token(Token = "0x17000127")]
		public List<Platform> Platforms
		{
			[Token(Token = "0x60010A6")]
			[Address(RVA = "0x17F3A54", Offset = "0x17F3A54", VA = "0x17F3A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB867A8", Offset = "0xB867A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010A7")]
			[Address(RVA = "0x17F3A5C", Offset = "0x17F3A5C", VA = "0x17F3A5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB867B8", Offset = "0xB867B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public TransactionType Type
		{
			[Token(Token = "0x60010A8")]
			[Address(RVA = "0x17F3A64", Offset = "0x17F3A64", VA = "0x17F3A64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB867C8", Offset = "0xB867C8")]
			get
			{
				return default(TransactionType);
			}
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0x17F3A6C", Offset = "0x17F3A6C", VA = "0x17F3A6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB867D8", Offset = "0xB867D8")]
			set
			{
			}
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x17F39D4", Offset = "0x17F39D4", VA = "0x17F39D4")]
		public SubscriptionStatus()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class Api
	{
		[Token(Token = "0x2000648")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x6002C44")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x6002C45")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x6002C46")]
			[Address(RVA = "0x18BADAC", Offset = "0x18BADAC", VA = "0x18BADAC")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Viveport.Internal.StatusCallback initIl2cppCallback;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Viveport.Internal.StatusCallback shutdownIl2cppCallback;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string VERSION;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string _appId;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string _appKey;

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x18BA0E8", Offset = "0x18BA0E8", VA = "0x18BA0E8")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x18B9FF8", Offset = "0x18B9FF8", VA = "0x18B9FF8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB867E8", Offset = "0xB867E8")]
		private static void InitIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x18BA59C", Offset = "0x18BA59C", VA = "0x18BA59C")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x18BA070", Offset = "0x18BA070", VA = "0x18BA070")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB8684C", Offset = "0xB8684C")]
		private static void ShutdownIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x18BA868", Offset = "0x18BA868", VA = "0x18BA868")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x18BAAAC", Offset = "0x18BAAAC", VA = "0x18BAAAC")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x18BAC40", Offset = "0x18BAC40", VA = "0x18BAC40")]
		public Api()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class User
	{
		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x17F3A7C", Offset = "0x17F3A7C", VA = "0x17F3A7C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB868B0", Offset = "0xB868B0")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x17F3AE0", Offset = "0x17F3AE0", VA = "0x17F3AE0")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x17F3C44", Offset = "0x17F3C44", VA = "0x17F3C44")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x17F3C6C", Offset = "0x17F3C6C", VA = "0x17F3C6C")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x17F3C94", Offset = "0x17F3C94", VA = "0x17F3C94")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x17F3CBC", Offset = "0x17F3CBC", VA = "0x17F3CBC")]
		public User()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class UserStats
	{
		[Token(Token = "0x2000649")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x4002875")]
			GlobalData,
			[Token(Token = "0x4002876")]
			GlobalDataAroundUser,
			[Token(Token = "0x4002877")]
			LocalData,
			[Token(Token = "0x4002878")]
			LocalDataAroundUser
		}

		[Token(Token = "0x200064A")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x400287A")]
			AllTime,
			[Token(Token = "0x400287B")]
			Daily,
			[Token(Token = "0x400287C")]
			Weekly,
			[Token(Token = "0x400287D")]
			Monthly
		}

		[Token(Token = "0x200064B")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x400287F")]
			None,
			[Token(Token = "0x4002880")]
			Ascending,
			[Token(Token = "0x4002881")]
			Descending
		}

		[Token(Token = "0x200064C")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x4002883")]
			None,
			[Token(Token = "0x4002884")]
			Numeric,
			[Token(Token = "0x4002885")]
			TimeSeconds,
			[Token(Token = "0x4002886")]
			TimeMilliSeconds
		}

		[Token(Token = "0x200064D")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x4002888")]
			None,
			[Token(Token = "0x4002889")]
			KeepBest,
			[Token(Token = "0x400288A")]
			ForceUpdate
		}

		[Token(Token = "0x200064E")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x400288C")]
			Name,
			[Token(Token = "0x400288D")]
			Desc,
			[Token(Token = "0x400288E")]
			Hidden
		}

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback downloadStatsIl2cppCallback;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback uploadStatsIl2cppCallback;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback;

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x17F3CC4", Offset = "0x17F3CC4", VA = "0x17F3CC4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB86914", Offset = "0xB86914")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x17F3EB8", Offset = "0x17F3EB8", VA = "0x17F3EB8")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x17F3D28", Offset = "0x17F3D28", VA = "0x17F3D28")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB86978", Offset = "0xB86978")]
		private static void DownloadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x17F401C", Offset = "0x17F401C", VA = "0x17F401C")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x17F4180", Offset = "0x17F4180", VA = "0x17F4180")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x17F4188", Offset = "0x17F4188", VA = "0x17F4188")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x17F4190", Offset = "0x17F4190", VA = "0x17F4190")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x17F4198", Offset = "0x17F4198", VA = "0x17F4198")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x17F3D8C", Offset = "0x17F3D8C", VA = "0x17F3D8C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB869DC", Offset = "0xB869DC")]
		private static void UploadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x17F41A0", Offset = "0x17F41A0", VA = "0x17F41A0")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x17F4304", Offset = "0x17F4304", VA = "0x17F4304")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x17F430C", Offset = "0x17F430C", VA = "0x17F430C")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x17F4314", Offset = "0x17F4314", VA = "0x17F4314")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x17F431C", Offset = "0x17F431C", VA = "0x17F431C")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x17F4324", Offset = "0x17F4324", VA = "0x17F4324")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x17F432C", Offset = "0x17F432C", VA = "0x17F432C")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x17F4334", Offset = "0x17F4334", VA = "0x17F4334")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x17F3DF0", Offset = "0x17F3DF0", VA = "0x17F3DF0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB86A40", Offset = "0xB86A40")]
		private static void DownloadLeaderboardScoresIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x17F433C", Offset = "0x17F433C", VA = "0x17F433C")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x17F3E54", Offset = "0x17F3E54", VA = "0x17F3E54")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB86AA4", Offset = "0xB86AA4")]
		private static void UploadLeaderboardScoreIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x17F44E0", Offset = "0x17F44E0", VA = "0x17F44E0")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x17F465C", Offset = "0x17F465C", VA = "0x17F465C")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x17F4664", Offset = "0x17F4664", VA = "0x17F4664")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x17F466C", Offset = "0x17F466C", VA = "0x17F466C")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x17F4674", Offset = "0x17F4674", VA = "0x17F4674")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x17F467C", Offset = "0x17F467C", VA = "0x17F467C")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x18BADBC", Offset = "0x18BADBC", VA = "0x18BADBC")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class IAPurchase
	{
		[Token(Token = "0x200064F")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x400288F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x6002C47")]
			[Address(RVA = "0x18BC7B4", Offset = "0x18BC7B4", VA = "0x18BC7B4")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x6002C48")]
			[Address(RVA = "0x18BC820", Offset = "0x18BC820", VA = "0x18BC820")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x6002C49")]
			[Address(RVA = "0x18BE87C", Offset = "0x18BE87C", VA = "0x18BE87C", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002C4A")]
			[Address(RVA = "0x18BCAAC", Offset = "0x18BCAAC", VA = "0x18BCAAC")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x6002C4B")]
			[Address(RVA = "0x18BED4C", Offset = "0x18BED4C", VA = "0x18BED4C", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002C4C")]
			[Address(RVA = "0x18BCF68", Offset = "0x18BCF68", VA = "0x18BCF68")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x6002C4D")]
			[Address(RVA = "0x18BF21C", Offset = "0x18BF21C", VA = "0x18BF21C", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002C4E")]
			[Address(RVA = "0x18BD1E4", Offset = "0x18BD1E4", VA = "0x18BD1E4")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x6002C4F")]
			[Address(RVA = "0x18BF804", Offset = "0x18BF804", VA = "0x18BF804", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002C50")]
			[Address(RVA = "0x18BD450", Offset = "0x18BD450", VA = "0x18BD450")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x6002C51")]
			[Address(RVA = "0x18C0110", Offset = "0x18C0110", VA = "0x18C0110", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002C52")]
			[Address(RVA = "0x18BD688", Offset = "0x18BD688", VA = "0x18BD688")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x6002C53")]
			[Address(RVA = "0x18C1040", Offset = "0x18C1040", VA = "0x18C1040", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002C54")]
			[Address(RVA = "0x18BD918", Offset = "0x18BD918", VA = "0x18BD918")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6002C55")]
			[Address(RVA = "0x18C162C", Offset = "0x18C162C", VA = "0x18C162C", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002C56")]
			[Address(RVA = "0x18BDD00", Offset = "0x18BDD00", VA = "0x18BDD00")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x6002C57")]
			[Address(RVA = "0x18C1AE0", Offset = "0x18C1AE0", VA = "0x18C1AE0", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002C58")]
			[Address(RVA = "0x18BDF7C", Offset = "0x18BDF7C", VA = "0x18BDF7C")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x6002C59")]
			[Address(RVA = "0x18C1F94", Offset = "0x18C1F94", VA = "0x18C1F94", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002C5A")]
			[Address(RVA = "0x18BE1F8", Offset = "0x18BE1F8", VA = "0x18BE1F8")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6002C5B")]
			[Address(RVA = "0x18C25FC", Offset = "0x18C25FC", VA = "0x18C25FC", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002C5C")]
			[Address(RVA = "0x18BE464", Offset = "0x18BE464", VA = "0x18BE464")]
			public IAPurchaseCallback getQuerySubscriptionListHandler()
			{
				return null;
			}

			[Token(Token = "0x6002C5D")]
			[Address(RVA = "0x18C2AD0", Offset = "0x18C2AD0", VA = "0x18C2AD0", Slot = "14")]
			protected override void QuerySubscriptionListHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002C5E")]
			[Address(RVA = "0x18BE6AC", Offset = "0x18BE6AC", VA = "0x18BE6AC")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6002C5F")]
			[Address(RVA = "0x18C2FA4", Offset = "0x18C2FA4", VA = "0x18C2FA4", Slot = "15")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x2000650")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x6002C60")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x6002C61")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x6002C62")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x6002C63")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x6002C64")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x6002C65")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x6002C66")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x6002C67")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x6002C68")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x6002C69")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x6002C6A")]
			protected abstract void QuerySubscriptionListHandler(int code, string message);

			[Token(Token = "0x6002C6B")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x6002C6C")]
			[Address(RVA = "0x18BE874", Offset = "0x18BE874", VA = "0x18BE874")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x2000651")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x6002C6D")]
			[Address(RVA = "0x18C33A8", Offset = "0x18C33A8", VA = "0x18C33A8", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x6002C6E")]
			[Address(RVA = "0x18C33AC", Offset = "0x18C33AC", VA = "0x18C33AC", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x6002C6F")]
			[Address(RVA = "0x18C33B0", Offset = "0x18C33B0", VA = "0x18C33B0", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x6002C70")]
			[Address(RVA = "0x18C33B4", Offset = "0x18C33B4", VA = "0x18C33B4", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x6002C71")]
			[Address(RVA = "0x18C33B8", Offset = "0x18C33B8", VA = "0x18C33B8", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x6002C72")]
			[Address(RVA = "0x18C33BC", Offset = "0x18C33BC", VA = "0x18C33BC", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x6002C73")]
			[Address(RVA = "0x18C33C0", Offset = "0x18C33C0", VA = "0x18C33C0", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x6002C74")]
			[Address(RVA = "0x18C33C4", Offset = "0x18C33C4", VA = "0x18C33C4", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6002C75")]
			[Address(RVA = "0x18C33C8", Offset = "0x18C33C8", VA = "0x18C33C8", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6002C76")]
			[Address(RVA = "0x18C33CC", Offset = "0x18C33CC", VA = "0x18C33CC", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6002C77")]
			[Address(RVA = "0x18C33D0", Offset = "0x18C33D0", VA = "0x18C33D0", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6002C78")]
			[Address(RVA = "0x18C33D4", Offset = "0x18C33D4", VA = "0x18C33D4", Slot = "15")]
			public virtual void OnQuerySubscriptionListSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6002C79")]
			[Address(RVA = "0x18C33D8", Offset = "0x18C33D8", VA = "0x18C33D8", Slot = "16")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x6002C7A")]
			[Address(RVA = "0x18C33DC", Offset = "0x18C33DC", VA = "0x18C33DC")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x2000652")]
		public class QueryResponse
		{
			[Token(Token = "0x4002890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82CC0", Offset = "0xB82CC0")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4002891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82CD0", Offset = "0xB82CD0")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4002892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82CE0", Offset = "0xB82CE0")]
			private string <status>k__BackingField;

			[Token(Token = "0x4002893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82CF0", Offset = "0xB82CF0")]
			private string <price>k__BackingField;

			[Token(Token = "0x4002894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82D00", Offset = "0xB82D00")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4002895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82D10", Offset = "0xB82D10")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x170004D3")]
			public string order_id
			{
				[Token(Token = "0x6002C7B")]
				[Address(RVA = "0x18C3414", Offset = "0x18C3414", VA = "0x18C3414")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90C08", Offset = "0xB90C08")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002C7C")]
				[Address(RVA = "0x18C341C", Offset = "0x18C341C", VA = "0x18C341C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90C18", Offset = "0xB90C18")]
				set
				{
				}
			}

			[Token(Token = "0x170004D4")]
			public string purchase_id
			{
				[Token(Token = "0x6002C7D")]
				[Address(RVA = "0x18C3424", Offset = "0x18C3424", VA = "0x18C3424")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90C28", Offset = "0xB90C28")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002C7E")]
				[Address(RVA = "0x18C342C", Offset = "0x18C342C", VA = "0x18C342C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90C38", Offset = "0xB90C38")]
				set
				{
				}
			}

			[Token(Token = "0x170004D5")]
			public string status
			{
				[Token(Token = "0x6002C7F")]
				[Address(RVA = "0x18C3434", Offset = "0x18C3434", VA = "0x18C3434")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90C48", Offset = "0xB90C48")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002C80")]
				[Address(RVA = "0x18C343C", Offset = "0x18C343C", VA = "0x18C343C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90C58", Offset = "0xB90C58")]
				set
				{
				}
			}

			[Token(Token = "0x170004D6")]
			public string price
			{
				[Token(Token = "0x6002C81")]
				[Address(RVA = "0x18C3444", Offset = "0x18C3444", VA = "0x18C3444")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90C68", Offset = "0xB90C68")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002C82")]
				[Address(RVA = "0x18C344C", Offset = "0x18C344C", VA = "0x18C344C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90C78", Offset = "0xB90C78")]
				set
				{
				}
			}

			[Token(Token = "0x170004D7")]
			public string currency
			{
				[Token(Token = "0x6002C83")]
				[Address(RVA = "0x18C3454", Offset = "0x18C3454", VA = "0x18C3454")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90C88", Offset = "0xB90C88")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002C84")]
				[Address(RVA = "0x18C345C", Offset = "0x18C345C", VA = "0x18C345C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90C98", Offset = "0xB90C98")]
				set
				{
				}
			}

			[Token(Token = "0x170004D8")]
			public long paid_timestamp
			{
				[Token(Token = "0x6002C85")]
				[Address(RVA = "0x18C3464", Offset = "0x18C3464", VA = "0x18C3464")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90CA8", Offset = "0xB90CA8")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6002C86")]
				[Address(RVA = "0x18C346C", Offset = "0x18C346C", VA = "0x18C346C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90CB8", Offset = "0xB90CB8")]
				set
				{
				}
			}

			[Token(Token = "0x6002C87")]
			[Address(RVA = "0x18C0108", Offset = "0x18C0108", VA = "0x18C0108")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x2000653")]
		public class QueryResponse2
		{
			[Token(Token = "0x4002896")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82D20", Offset = "0xB82D20")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4002897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82D30", Offset = "0xB82D30")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4002898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82D40", Offset = "0xB82D40")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4002899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82D50", Offset = "0xB82D50")]
			private string <user_data>k__BackingField;

			[Token(Token = "0x400289A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82D60", Offset = "0xB82D60")]
			private string <price>k__BackingField;

			[Token(Token = "0x400289B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82D70", Offset = "0xB82D70")]
			private string <currency>k__BackingField;

			[Token(Token = "0x400289C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82D80", Offset = "0xB82D80")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x170004D9")]
			public string order_id
			{
				[Token(Token = "0x6002C88")]
				[Address(RVA = "0x18C3474", Offset = "0x18C3474", VA = "0x18C3474")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90CC8", Offset = "0xB90CC8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002C89")]
				[Address(RVA = "0x18C347C", Offset = "0x18C347C", VA = "0x18C347C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90CD8", Offset = "0xB90CD8")]
				set
				{
				}
			}

			[Token(Token = "0x170004DA")]
			public string app_id
			{
				[Token(Token = "0x6002C8A")]
				[Address(RVA = "0x18C3484", Offset = "0x18C3484", VA = "0x18C3484")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90CE8", Offset = "0xB90CE8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002C8B")]
				[Address(RVA = "0x18C348C", Offset = "0x18C348C", VA = "0x18C348C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90CF8", Offset = "0xB90CF8")]
				set
				{
				}
			}

			[Token(Token = "0x170004DB")]
			public string purchase_id
			{
				[Token(Token = "0x6002C8C")]
				[Address(RVA = "0x18C3494", Offset = "0x18C3494", VA = "0x18C3494")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90D08", Offset = "0xB90D08")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002C8D")]
				[Address(RVA = "0x18C349C", Offset = "0x18C349C", VA = "0x18C349C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90D18", Offset = "0xB90D18")]
				set
				{
				}
			}

			[Token(Token = "0x170004DC")]
			public string user_data
			{
				[Token(Token = "0x6002C8E")]
				[Address(RVA = "0x18C34A4", Offset = "0x18C34A4", VA = "0x18C34A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90D28", Offset = "0xB90D28")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002C8F")]
				[Address(RVA = "0x18C34AC", Offset = "0x18C34AC", VA = "0x18C34AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90D38", Offset = "0xB90D38")]
				set
				{
				}
			}

			[Token(Token = "0x170004DD")]
			public string price
			{
				[Token(Token = "0x6002C90")]
				[Address(RVA = "0x18C34B4", Offset = "0x18C34B4", VA = "0x18C34B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90D48", Offset = "0xB90D48")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002C91")]
				[Address(RVA = "0x18C34BC", Offset = "0x18C34BC", VA = "0x18C34BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90D58", Offset = "0xB90D58")]
				set
				{
				}
			}

			[Token(Token = "0x170004DE")]
			public string currency
			{
				[Token(Token = "0x6002C92")]
				[Address(RVA = "0x18C34C4", Offset = "0x18C34C4", VA = "0x18C34C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90D68", Offset = "0xB90D68")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002C93")]
				[Address(RVA = "0x18C34CC", Offset = "0x18C34CC", VA = "0x18C34CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90D78", Offset = "0xB90D78")]
				set
				{
				}
			}

			[Token(Token = "0x170004DF")]
			public long paid_timestamp
			{
				[Token(Token = "0x6002C94")]
				[Address(RVA = "0x18C34D4", Offset = "0x18C34D4", VA = "0x18C34D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90D88", Offset = "0xB90D88")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6002C95")]
				[Address(RVA = "0x18C34DC", Offset = "0x18C34DC", VA = "0x18C34DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90D98", Offset = "0xB90D98")]
				set
				{
				}
			}

			[Token(Token = "0x6002C96")]
			[Address(RVA = "0x18C1030", Offset = "0x18C1030", VA = "0x18C1030")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x2000654")]
		public class QueryListResponse
		{
			[Token(Token = "0x400289D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82D90", Offset = "0xB82D90")]
			private int <total>k__BackingField;

			[Token(Token = "0x400289E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82DA0", Offset = "0xB82DA0")]
			private int <from>k__BackingField;

			[Token(Token = "0x400289F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82DB0", Offset = "0xB82DB0")]
			private int <to>k__BackingField;

			[Token(Token = "0x40028A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x170004E0")]
			public int total
			{
				[Token(Token = "0x6002C97")]
				[Address(RVA = "0x18C33E4", Offset = "0x18C33E4", VA = "0x18C33E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90DA8", Offset = "0xB90DA8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002C98")]
				[Address(RVA = "0x18C33EC", Offset = "0x18C33EC", VA = "0x18C33EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90DB8", Offset = "0xB90DB8")]
				set
				{
				}
			}

			[Token(Token = "0x170004E1")]
			public int from
			{
				[Token(Token = "0x6002C99")]
				[Address(RVA = "0x18C33F4", Offset = "0x18C33F4", VA = "0x18C33F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90DC8", Offset = "0xB90DC8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002C9A")]
				[Address(RVA = "0x18C33FC", Offset = "0x18C33FC", VA = "0x18C33FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90DD8", Offset = "0xB90DD8")]
				set
				{
				}
			}

			[Token(Token = "0x170004E2")]
			public int to
			{
				[Token(Token = "0x6002C9B")]
				[Address(RVA = "0x18C3404", Offset = "0x18C3404", VA = "0x18C3404")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90DE8", Offset = "0xB90DE8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002C9C")]
				[Address(RVA = "0x18C340C", Offset = "0x18C340C", VA = "0x18C340C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90DF8", Offset = "0xB90DF8")]
				set
				{
				}
			}

			[Token(Token = "0x6002C9D")]
			[Address(RVA = "0x18C1038", Offset = "0x18C1038", VA = "0x18C1038")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x2000655")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x40028A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82DC0", Offset = "0xB82DC0")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x40028A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82DD0", Offset = "0xB82DD0")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x40028A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82DE0", Offset = "0xB82DE0")]
			private string <status>k__BackingField;

			[Token(Token = "0x170004E3")]
			public long create_time
			{
				[Token(Token = "0x6002C9E")]
				[Address(RVA = "0x18C3554", Offset = "0x18C3554", VA = "0x18C3554")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90E08", Offset = "0xB90E08")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6002C9F")]
				[Address(RVA = "0x18C355C", Offset = "0x18C355C", VA = "0x18C355C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90E18", Offset = "0xB90E18")]
				set
				{
				}
			}

			[Token(Token = "0x170004E4")]
			public string payment_method
			{
				[Token(Token = "0x6002CA0")]
				[Address(RVA = "0x18C3564", Offset = "0x18C3564", VA = "0x18C3564")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90E28", Offset = "0xB90E28")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002CA1")]
				[Address(RVA = "0x18C356C", Offset = "0x18C356C", VA = "0x18C356C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90E38", Offset = "0xB90E38")]
				set
				{
				}
			}

			[Token(Token = "0x170004E5")]
			public string status
			{
				[Token(Token = "0x6002CA2")]
				[Address(RVA = "0x18C3574", Offset = "0x18C3574", VA = "0x18C3574")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90E48", Offset = "0xB90E48")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002CA3")]
				[Address(RVA = "0x18C357C", Offset = "0x18C357C", VA = "0x18C357C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90E58", Offset = "0xB90E58")]
				set
				{
				}
			}

			[Token(Token = "0x6002CA4")]
			[Address(RVA = "0x18C3584", Offset = "0x18C3584", VA = "0x18C3584")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x2000656")]
		public class StatusDetail
		{
			[Token(Token = "0x40028A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82DF0", Offset = "0xB82DF0")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x40028A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82E00", Offset = "0xB82E00")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x40028A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82E10", Offset = "0xB82E10")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x170004E6")]
			public long date_next_charge
			{
				[Token(Token = "0x6002CA5")]
				[Address(RVA = "0x18C351C", Offset = "0x18C351C", VA = "0x18C351C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90E68", Offset = "0xB90E68")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6002CA6")]
				[Address(RVA = "0x18C3524", Offset = "0x18C3524", VA = "0x18C3524")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90E78", Offset = "0xB90E78")]
				set
				{
				}
			}

			[Token(Token = "0x170004E7")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x6002CA7")]
				[Address(RVA = "0x18C352C", Offset = "0x18C352C", VA = "0x18C352C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90E88", Offset = "0xB90E88")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002CA8")]
				[Address(RVA = "0x18C3534", Offset = "0x18C3534", VA = "0x18C3534")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90E98", Offset = "0xB90E98")]
				set
				{
				}
			}

			[Token(Token = "0x170004E8")]
			public string cancel_reason
			{
				[Token(Token = "0x6002CA9")]
				[Address(RVA = "0x18C353C", Offset = "0x18C353C", VA = "0x18C353C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90EA8", Offset = "0xB90EA8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002CAA")]
				[Address(RVA = "0x18C3544", Offset = "0x18C3544", VA = "0x18C3544")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90EB8", Offset = "0xB90EB8")]
				set
				{
				}
			}

			[Token(Token = "0x6002CAB")]
			[Address(RVA = "0x18C354C", Offset = "0x18C354C", VA = "0x18C354C")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x2000657")]
		public class TimePeriod
		{
			[Token(Token = "0x40028A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82E20", Offset = "0xB82E20")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x40028A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82E30", Offset = "0xB82E30")]
			private int <value>k__BackingField;

			[Token(Token = "0x170004E9")]
			public string time_type
			{
				[Token(Token = "0x6002CAC")]
				[Address(RVA = "0x18C3664", Offset = "0x18C3664", VA = "0x18C3664")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90EC8", Offset = "0xB90EC8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002CAD")]
				[Address(RVA = "0x18C366C", Offset = "0x18C366C", VA = "0x18C366C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90ED8", Offset = "0xB90ED8")]
				set
				{
				}
			}

			[Token(Token = "0x170004EA")]
			public int value
			{
				[Token(Token = "0x6002CAE")]
				[Address(RVA = "0x18C3674", Offset = "0x18C3674", VA = "0x18C3674")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90EE8", Offset = "0xB90EE8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002CAF")]
				[Address(RVA = "0x18C367C", Offset = "0x18C367C", VA = "0x18C367C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90EF8", Offset = "0xB90EF8")]
				set
				{
				}
			}

			[Token(Token = "0x6002CB0")]
			[Address(RVA = "0x18C3684", Offset = "0x18C3684", VA = "0x18C3684")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x2000658")]
		public class Subscription
		{
			[Token(Token = "0x40028A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82E40", Offset = "0xB82E40")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x40028AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82E50", Offset = "0xB82E50")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x40028AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82E60", Offset = "0xB82E60")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x40028AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82E70", Offset = "0xB82E70")]
			private string <price>k__BackingField;

			[Token(Token = "0x40028AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82E80", Offset = "0xB82E80")]
			private string <currency>k__BackingField;

			[Token(Token = "0x40028AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82E90", Offset = "0xB82E90")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x40028AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82EA0", Offset = "0xB82EA0")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x40028B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82EB0", Offset = "0xB82EB0")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x40028B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82EC0", Offset = "0xB82EC0")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x40028B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82ED0", Offset = "0xB82ED0")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x40028B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82EE0", Offset = "0xB82EE0")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x40028B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82EF0", Offset = "0xB82EF0")]
			private string <status>k__BackingField;

			[Token(Token = "0x40028B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82F00", Offset = "0xB82F00")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x170004EB")]
			public string app_id
			{
				[Token(Token = "0x6002CB1")]
				[Address(RVA = "0x18C358C", Offset = "0x18C358C", VA = "0x18C358C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90F08", Offset = "0xB90F08")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002CB2")]
				[Address(RVA = "0x18C3594", Offset = "0x18C3594", VA = "0x18C3594")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90F18", Offset = "0xB90F18")]
				set
				{
				}
			}

			[Token(Token = "0x170004EC")]
			public string order_id
			{
				[Token(Token = "0x6002CB3")]
				[Address(RVA = "0x18C359C", Offset = "0x18C359C", VA = "0x18C359C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90F28", Offset = "0xB90F28")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002CB4")]
				[Address(RVA = "0x18C35A4", Offset = "0x18C35A4", VA = "0x18C35A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90F38", Offset = "0xB90F38")]
				set
				{
				}
			}

			[Token(Token = "0x170004ED")]
			public string subscription_id
			{
				[Token(Token = "0x6002CB5")]
				[Address(RVA = "0x18C35AC", Offset = "0x18C35AC", VA = "0x18C35AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90F48", Offset = "0xB90F48")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002CB6")]
				[Address(RVA = "0x18C35B4", Offset = "0x18C35B4", VA = "0x18C35B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90F58", Offset = "0xB90F58")]
				set
				{
				}
			}

			[Token(Token = "0x170004EE")]
			public string price
			{
				[Token(Token = "0x6002CB7")]
				[Address(RVA = "0x18C35BC", Offset = "0x18C35BC", VA = "0x18C35BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90F68", Offset = "0xB90F68")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002CB8")]
				[Address(RVA = "0x18C35C4", Offset = "0x18C35C4", VA = "0x18C35C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90F78", Offset = "0xB90F78")]
				set
				{
				}
			}

			[Token(Token = "0x170004EF")]
			public string currency
			{
				[Token(Token = "0x6002CB9")]
				[Address(RVA = "0x18C35CC", Offset = "0x18C35CC", VA = "0x18C35CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90F88", Offset = "0xB90F88")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002CBA")]
				[Address(RVA = "0x18C35D4", Offset = "0x18C35D4", VA = "0x18C35D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90F98", Offset = "0xB90F98")]
				set
				{
				}
			}

			[Token(Token = "0x170004F0")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x6002CBB")]
				[Address(RVA = "0x18C35DC", Offset = "0x18C35DC", VA = "0x18C35DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90FA8", Offset = "0xB90FA8")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6002CBC")]
				[Address(RVA = "0x18C35E4", Offset = "0x18C35E4", VA = "0x18C35E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90FB8", Offset = "0xB90FB8")]
				set
				{
				}
			}

			[Token(Token = "0x170004F1")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x6002CBD")]
				[Address(RVA = "0x18C35EC", Offset = "0x18C35EC", VA = "0x18C35EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90FC8", Offset = "0xB90FC8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002CBE")]
				[Address(RVA = "0x18C35F4", Offset = "0x18C35F4", VA = "0x18C35F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90FD8", Offset = "0xB90FD8")]
				set
				{
				}
			}

			[Token(Token = "0x170004F2")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x6002CBF")]
				[Address(RVA = "0x18C35FC", Offset = "0x18C35FC", VA = "0x18C35FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90FE8", Offset = "0xB90FE8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002CC0")]
				[Address(RVA = "0x18C3604", Offset = "0x18C3604", VA = "0x18C3604")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB90FF8", Offset = "0xB90FF8")]
				set
				{
				}
			}

			[Token(Token = "0x170004F3")]
			public int number_of_charge_period
			{
				[Token(Token = "0x6002CC1")]
				[Address(RVA = "0x18C360C", Offset = "0x18C360C", VA = "0x18C360C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB91008", Offset = "0xB91008")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002CC2")]
				[Address(RVA = "0x18C3614", Offset = "0x18C3614", VA = "0x18C3614")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB91018", Offset = "0xB91018")]
				set
				{
				}
			}

			[Token(Token = "0x170004F4")]
			public string plan_id
			{
				[Token(Token = "0x6002CC3")]
				[Address(RVA = "0x18C361C", Offset = "0x18C361C", VA = "0x18C361C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB91028", Offset = "0xB91028")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002CC4")]
				[Address(RVA = "0x18C3624", Offset = "0x18C3624", VA = "0x18C3624")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB91038", Offset = "0xB91038")]
				set
				{
				}
			}

			[Token(Token = "0x170004F5")]
			public string plan_name
			{
				[Token(Token = "0x6002CC5")]
				[Address(RVA = "0x18C362C", Offset = "0x18C362C", VA = "0x18C362C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB91048", Offset = "0xB91048")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002CC6")]
				[Address(RVA = "0x18C3634", Offset = "0x18C3634", VA = "0x18C3634")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB91058", Offset = "0xB91058")]
				set
				{
				}
			}

			[Token(Token = "0x170004F6")]
			public string status
			{
				[Token(Token = "0x6002CC7")]
				[Address(RVA = "0x18C363C", Offset = "0x18C363C", VA = "0x18C363C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB91068", Offset = "0xB91068")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002CC8")]
				[Address(RVA = "0x18C3644", Offset = "0x18C3644", VA = "0x18C3644")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB91078", Offset = "0xB91078")]
				set
				{
				}
			}

			[Token(Token = "0x170004F7")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x6002CC9")]
				[Address(RVA = "0x18C364C", Offset = "0x18C364C", VA = "0x18C364C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB91088", Offset = "0xB91088")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002CCA")]
				[Address(RVA = "0x18C3654", Offset = "0x18C3654", VA = "0x18C3654")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB91098", Offset = "0xB91098")]
				set
				{
				}
			}

			[Token(Token = "0x6002CCB")]
			[Address(RVA = "0x18C365C", Offset = "0x18C365C", VA = "0x18C365C")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x2000659")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x40028B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82F10", Offset = "0xB82F10")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x40028B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82F20", Offset = "0xB82F20")]
			private string <message>k__BackingField;

			[Token(Token = "0x40028B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82F30", Offset = "0xB82F30")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x170004F8")]
			public int statusCode
			{
				[Token(Token = "0x6002CCC")]
				[Address(RVA = "0x18C34E4", Offset = "0x18C34E4", VA = "0x18C34E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB910A8", Offset = "0xB910A8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002CCD")]
				[Address(RVA = "0x18C34EC", Offset = "0x18C34EC", VA = "0x18C34EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB910B8", Offset = "0xB910B8")]
				set
				{
				}
			}

			[Token(Token = "0x170004F9")]
			public string message
			{
				[Token(Token = "0x6002CCE")]
				[Address(RVA = "0x18C34F4", Offset = "0x18C34F4", VA = "0x18C34F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB910C8", Offset = "0xB910C8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002CCF")]
				[Address(RVA = "0x18C34FC", Offset = "0x18C34FC", VA = "0x18C34FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB910D8", Offset = "0xB910D8")]
				set
				{
				}
			}

			[Token(Token = "0x170004FA")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x6002CD0")]
				[Address(RVA = "0x18C3504", Offset = "0x18C3504", VA = "0x18C3504")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB910E8", Offset = "0xB910E8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002CD1")]
				[Address(RVA = "0x18C350C", Offset = "0x18C350C", VA = "0x18C350C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB910F8", Offset = "0xB910F8")]
				set
				{
				}
			}

			[Token(Token = "0x6002CD2")]
			[Address(RVA = "0x18C3514", Offset = "0x18C3514", VA = "0x18C3514")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IAPurchaseCallback isReadyIl2cppCallback;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IAPurchaseCallback request01Il2cppCallback;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IAPurchaseCallback request02Il2cppCallback;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IAPurchaseCallback purchaseIl2cppCallback;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IAPurchaseCallback query01Il2cppCallback;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IAPurchaseCallback query02Il2cppCallback;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IAPurchaseCallback getBalanceIl2cppCallback;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static IAPurchaseCallback requestSubscriptionIl2cppCallback;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static IAPurchaseCallback subscribeIl2cppCallback;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IAPurchaseCallback querySubscriptionIl2cppCallback;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static IAPurchaseCallback querySubscriptionListIl2cppCallback;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IAPurchaseCallback cancelSubscriptionIl2cppCallback;

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x18BBEEC", Offset = "0x18BBEEC", VA = "0x18BBEEC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB86B08", Offset = "0xB86B08")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x18BC6F8", Offset = "0x18BC6F8", VA = "0x18BC6F8")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x18BBF5C", Offset = "0x18BBF5C", VA = "0x18BBF5C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB86B6C", Offset = "0xB86B6C")]
		private static void Request01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x18BC9F0", Offset = "0x18BC9F0", VA = "0x18BC9F0")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x18BBFCC", Offset = "0x18BBFCC", VA = "0x18BBFCC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB86BD0", Offset = "0xB86BD0")]
		private static void Request02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x18BCC6C", Offset = "0x18BCC6C", VA = "0x18BCC6C")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x18BC03C", Offset = "0x18BC03C", VA = "0x18BC03C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB86C34", Offset = "0xB86C34")]
		private static void PurchaseIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x18BCEAC", Offset = "0x18BCEAC", VA = "0x18BCEAC")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x18BC0AC", Offset = "0x18BC0AC", VA = "0x18BC0AC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB86C98", Offset = "0xB86C98")]
		private static void Query01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x18BD128", Offset = "0x18BD128", VA = "0x18BD128")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x18BC11C", Offset = "0x18BC11C", VA = "0x18BC11C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB86CFC", Offset = "0xB86CFC")]
		private static void Query02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x18BD3A4", Offset = "0x18BD3A4", VA = "0x18BD3A4")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x18BC18C", Offset = "0x18BC18C", VA = "0x18BC18C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB86D60", Offset = "0xB86D60")]
		private static void GetBalanceIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x18BD5DC", Offset = "0x18BD5DC", VA = "0x18BD5DC")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x18BC1FC", Offset = "0x18BC1FC", VA = "0x18BC1FC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB86DC4", Offset = "0xB86DC4")]
		private static void RequestSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x18BD814", Offset = "0x18BD814", VA = "0x18BD814")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x18BC26C", Offset = "0x18BC26C", VA = "0x18BC26C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB86E28", Offset = "0xB86E28")]
		private static void RequestSubscriptionWithPlanIDIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x18BDC44", Offset = "0x18BDC44", VA = "0x18BDC44")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x18BC2DC", Offset = "0x18BC2DC", VA = "0x18BC2DC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB86E8C", Offset = "0xB86E8C")]
		private static void SubscribeIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x18BDEC0", Offset = "0x18BDEC0", VA = "0x18BDEC0")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x18BC34C", Offset = "0x18BC34C", VA = "0x18BC34C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB86EF0", Offset = "0xB86EF0")]
		private static void QuerySubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x18BE13C", Offset = "0x18BE13C", VA = "0x18BE13C")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x18BC3BC", Offset = "0x18BC3BC", VA = "0x18BC3BC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB86F54", Offset = "0xB86F54")]
		private static void QuerySubscriptionListIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x18BE3B8", Offset = "0x18BE3B8", VA = "0x18BE3B8")]
		public static void QuerySubscriptionList(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x18BC42C", Offset = "0x18BC42C", VA = "0x18BC42C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB86FB8", Offset = "0xB86FB8")]
		private static void CancelSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x18BE5F0", Offset = "0x18BE5F0", VA = "0x18BE5F0")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x18BE86C", Offset = "0x18BE86C", VA = "0x18BE86C")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class DLC
	{
		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x18BB430", Offset = "0x18BB430", VA = "0x18BB430")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class Subscription
	{
		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback2 isReadyIl2cppCallback;

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x17F36EC", Offset = "0x17F36EC", VA = "0x17F36EC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB8701C", Offset = "0xB8701C")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x17F3760", Offset = "0x17F3760", VA = "0x17F3760")]
		public static void IsReady(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x17F38C4", Offset = "0x17F38C4", VA = "0x17F38C4")]
		public static SubscriptionStatus GetUserStatus()
		{
			return null;
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x17F3A4C", Offset = "0x17F3A4C", VA = "0x17F3A4C")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class Deeplink
	{
		[Token(Token = "0x200065A")]
		public abstract class DeeplinkChecker
		{
			[Token(Token = "0x6002CD3")]
			public abstract void OnSuccess();

			[Token(Token = "0x6002CD4")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x6002CD5")]
			[Address(RVA = "0x18BBEE4", Offset = "0x18BBEE4", VA = "0x18BBEE4")]
			protected DeeplinkChecker()
			{
			}
		}

		[Token(Token = "0x4000EC7")]
		private const int MaxIdLength = 256;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 goToAppIl2cppCallback;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback;

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x18BB438", Offset = "0x18BB438", VA = "0x18BB438")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB87080", Offset = "0xB87080")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x18BB498", Offset = "0x18BB498", VA = "0x18BB498")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x18BB6DC", Offset = "0x18BB6DC", VA = "0x18BB6DC")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x18BB918", Offset = "0x18BB918", VA = "0x18BB918")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData, string branchName)
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x18BB9D8", Offset = "0x18BB9D8", VA = "0x18BB9D8")]
		public static void GoToStore(DeeplinkChecker checker, string appId = "")
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x18BBBC0", Offset = "0x18BBBC0", VA = "0x18BBBC0")]
		public static void GoToAppOrGoToStore(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x18BBDFC", Offset = "0x18BBDFC", VA = "0x18BBDFC")]
		public static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x18BBEDC", Offset = "0x18BBEDC", VA = "0x18BBEDC")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x2000211")]
	internal class Token
	{
		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x17F3A74", Offset = "0x17F3A74", VA = "0x17F3A74")]
		public Token()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x2000212")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB711D0", Offset = "0xB711D0")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x2000213")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB711E4", Offset = "0xB711E4")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x2000214")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB711F8", Offset = "0xB711F8")]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x2000215")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB7120C", Offset = "0xB7120C")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x2000216")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x4000ECE")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x4000ECF")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x4000ED0")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x4000ED1")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x2000217")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x4000ED3")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x4000ED4")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x4000ED5")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x4000ED6")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x2000218")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x4000ED8")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x4000ED9")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x4000EDA")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x2000219")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x4000EDC")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x4000EDD")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x4000EDE")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x4000EDF")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x200021A")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x4000EE1")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x4000EE2")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x4000EE3")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x200021B")]
	internal enum ESubscriptionTransactionType
	{
		[Token(Token = "0x4000EE5")]
		UNKNOWN,
		[Token(Token = "0x4000EE6")]
		PAID,
		[Token(Token = "0x4000EE7")]
		REDEEM,
		[Token(Token = "0x4000EE8")]
		FREEE_TRIAL
	}
	[Token(Token = "0x200021C")]
	internal enum ELocale
	{
		[Token(Token = "0x4000EEA")]
		k_ELocaleUS,
		[Token(Token = "0x4000EEB")]
		k_ELocaleDE,
		[Token(Token = "0x4000EEC")]
		k_ELocaleJP,
		[Token(Token = "0x4000EED")]
		k_ELocaleKR,
		[Token(Token = "0x4000EEE")]
		k_ELocaleRU,
		[Token(Token = "0x4000EEF")]
		k_ELocaleCN,
		[Token(Token = "0x4000EF0")]
		k_ELocaleTW,
		[Token(Token = "0x4000EF1")]
		k_ELocaleFR
	}
	[Token(Token = "0x200021D")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x4000EF3")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x4000EF4")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x4000EF5")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x200021E")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB71220", Offset = "0xB71220")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x2000220")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x2000221")]
	internal class Api
	{
		[Token(Token = "0x200065B")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x40028B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x6002CD6")]
			[Address(RVA = "0x18C4444", Offset = "0x18C4444", VA = "0x18C4444")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x6002CD7")]
			[Address(RVA = "0x18C44D4", Offset = "0x18C44D4", VA = "0x18C44D4")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x6002CD8")]
			[Address(RVA = "0x18C46B8", Offset = "0x18C46B8", VA = "0x18C46B8")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x18BA710", Offset = "0x18BA710", VA = "0x18BA710")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x18BA9B4", Offset = "0x18BA9B4", VA = "0x18BA9B4")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x18BAB40", Offset = "0x18BAB40", VA = "0x18BAB40")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x18BA1DC", Offset = "0x18BA1DC", VA = "0x18BA1DC")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x18C44CC", Offset = "0x18C44CC", VA = "0x18C44CC")]
		public Api()
		{
		}
	}
	[Token(Token = "0x2000222")]
	internal class User
	{
		[Token(Token = "0x6001116")]
		[Address(RVA = "0x18C5968", Offset = "0x18C5968", VA = "0x18C5968")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x18C5A8C", Offset = "0x18C5A8C", VA = "0x18C5A8C")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x18C5B68", Offset = "0x18C5B68", VA = "0x18C5B68")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x18C5C44", Offset = "0x18C5C44", VA = "0x18C5C44")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x18C5D20", Offset = "0x18C5D20", VA = "0x18C5D20")]
		public User()
		{
		}
	}
	[Token(Token = "0x2000223")]
	internal class UserStats
	{
		[Token(Token = "0x600111B")]
		[Address(RVA = "0x18C5D28", Offset = "0x18C5D28", VA = "0x18C5D28")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x18C5E4C", Offset = "0x18C5E4C", VA = "0x18C5E4C")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x18C5F70", Offset = "0x18C5F70", VA = "0x18C5F70")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x18C6094", Offset = "0x18C6094", VA = "0x18C6094")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x18C61C4", Offset = "0x18C61C4", VA = "0x18C61C4")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x18C62FC", Offset = "0x18C62FC", VA = "0x18C62FC")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x18C642C", Offset = "0x18C642C", VA = "0x18C642C")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x18C6564", Offset = "0x18C6564", VA = "0x18C6564")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x18C6640", Offset = "0x18C6640", VA = "0x18C6640")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x18C671C", Offset = "0x18C671C", VA = "0x18C671C")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x18C67F8", Offset = "0x18C67F8", VA = "0x18C67F8")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x18C68D4", Offset = "0x18C68D4", VA = "0x18C68D4")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x18C6A04", Offset = "0x18C6A04", VA = "0x18C6A04")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x18C6B74", Offset = "0x18C6B74", VA = "0x18C6B74")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x18C6C50", Offset = "0x18C6C50", VA = "0x18C6C50")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x18C6ECC", Offset = "0x18C6ECC", VA = "0x18C6ECC")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x18C7078", Offset = "0x18C7078", VA = "0x18C7078")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x18C72B8", Offset = "0x18C72B8", VA = "0x18C72B8")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x18C73B8", Offset = "0x18C73B8", VA = "0x18C73B8")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x18C74B8", Offset = "0x18C74B8", VA = "0x18C74B8")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x18C75B8", Offset = "0x18C75B8", VA = "0x18C75B8")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x2000224")]
	internal class Deeplink
	{
		[Token(Token = "0x200065C")]
		internal class AndroidDeeplinkChecker : AndroidJavaProxy
		{
			[Token(Token = "0x40028BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Deeplink.DeeplinkChecker checker;

			[Token(Token = "0x6002CD9")]
			[Address(RVA = "0x18C4870", Offset = "0x18C4870", VA = "0x18C4870")]
			internal AndroidDeeplinkChecker(Viveport.Deeplink.DeeplinkChecker checker)
			{
			}

			[Token(Token = "0x6002CDA")]
			[Address(RVA = "0x18C4900", Offset = "0x18C4900", VA = "0x18C4900")]
			internal void onSuccess()
			{
			}

			[Token(Token = "0x6002CDB")]
			[Address(RVA = "0x18C498C", Offset = "0x18C498C", VA = "0x18C498C")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x18BB5EC", Offset = "0x18BB5EC", VA = "0x18BB5EC")]
		internal static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x18BB79C", Offset = "0x18BB79C", VA = "0x18BB79C")]
		internal static void GoToApp(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x18BBA70", Offset = "0x18BBA70", VA = "0x18BBA70")]
		internal static void GoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x18BBC80", Offset = "0x18BBC80", VA = "0x18BBC80")]
		internal static void GoToAppOrGoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x18BBE00", Offset = "0x18BBE00", VA = "0x18BBE00")]
		internal static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x18C48F8", Offset = "0x18C48F8", VA = "0x18C48F8")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x2000225")]
	internal class IAPurchase
	{
		[Token(Token = "0x6001136")]
		[Address(RVA = "0x18BC8A0", Offset = "0x18BC8A0", VA = "0x18BC8A0")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x18BCB1C", Offset = "0x18BCB1C", VA = "0x18BCB1C")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x18BCD30", Offset = "0x18BCD30", VA = "0x18BCD30")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x18BCFD8", Offset = "0x18BCFD8", VA = "0x18BCFD8")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x18BD254", Offset = "0x18BD254", VA = "0x18BD254")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x18BD4C0", Offset = "0x18BD4C0", VA = "0x18BD4C0")]
		internal static void Query(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x18BD6F8", Offset = "0x18BD6F8", VA = "0x18BD6F8")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x18BD988", Offset = "0x18BD988", VA = "0x18BD988")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x18BDD70", Offset = "0x18BDD70", VA = "0x18BDD70")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x18BDFEC", Offset = "0x18BDFEC", VA = "0x18BDFEC")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x18BE268", Offset = "0x18BE268", VA = "0x18BE268")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x18BE4D4", Offset = "0x18BE4D4", VA = "0x18BE4D4")]
		internal static void QuerySubscriptionList(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x18BE71C", Offset = "0x18BE71C", VA = "0x18BE71C")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x18C4F70", Offset = "0x18C4F70", VA = "0x18C4F70")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x2000226")]
	internal class Subscription
	{
		[Token(Token = "0x6001144")]
		[Address(RVA = "0x18C5480", Offset = "0x18C5480", VA = "0x18C5480")]
		internal static int IsReady(StatusCallback2 callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x18C55A4", Offset = "0x18C55A4", VA = "0x18C55A4")]
		internal static bool IsWindowsSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x18C56A4", Offset = "0x18C56A4", VA = "0x18C56A4")]
		internal static bool IsAndroidSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x18C57A4", Offset = "0x18C57A4", VA = "0x18C57A4")]
		internal static ESubscriptionTransactionType GetTransactionType()
		{
			return default(ESubscriptionTransactionType);
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x18C5960", Offset = "0x18C5960", VA = "0x18C5960")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x2000227")]
	internal class Android
	{
		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject _subscription;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject _deeplink;

		[Token(Token = "0x17000129")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x600114F")]
			[Address(RVA = "0x18C3D80", Offset = "0x18C3D80", VA = "0x18C3D80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x6001150")]
			[Address(RVA = "0x18C3E10", Offset = "0x18C3E10", VA = "0x18C3E10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x6001151")]
			[Address(RVA = "0x18C3E70", Offset = "0x18C3E70", VA = "0x18C3E70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x18C368C", Offset = "0x18C368C", VA = "0x18C368C")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x18C37B8", Offset = "0x18C37B8", VA = "0x18C37B8")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x18C38E0", Offset = "0x18C38E0", VA = "0x18C38E0")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x18C3A08", Offset = "0x18C3A08", VA = "0x18C3A08")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x18C3B30", Offset = "0x18C3B30", VA = "0x18C3B30")]
		internal static AndroidJavaObject GetJavaSubscription()
		{
			return null;
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x18C3C58", Offset = "0x18C3C58", VA = "0x18C3C58")]
		internal static AndroidJavaObject GetDeeplink()
		{
			return null;
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x18C3E74", Offset = "0x18C3E74", VA = "0x18C3E74")]
		public Android()
		{
		}
	}
	[Token(Token = "0x2000228")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatusCallback statusCallback;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StatusCallback2 statusCallback2;

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x18C3E7C", Offset = "0x18C3E7C", VA = "0x18C3E7C")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x18C3F04", Offset = "0x18C3F04", VA = "0x18C3F04")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x18C3F8C", Offset = "0x18C3F8C", VA = "0x18C3F8C")]
		internal AndroidPluginCallback(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x18C4014", Offset = "0x18C4014", VA = "0x18C4014")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x2000229")]
	internal class Session
	{
		[Token(Token = "0x6001157")]
		[Address(RVA = "0x18BADB4", Offset = "0x18BADB4", VA = "0x18BADB4")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x200022A")]
	public class Logger
	{
		[Token(Token = "0x4000F05")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type _unityLogType;

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x18BADC4", Offset = "0x18BADC4", VA = "0x18BADC4")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x18BB1D8", Offset = "0x18BB1D8", VA = "0x18BB1D8")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x18BAE94", Offset = "0x18BAE94", VA = "0x18BAE94")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x18BB274", Offset = "0x18BB274", VA = "0x18BB274")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x18BB3D4", Offset = "0x18BB3D4", VA = "0x18BB3D4")]
		public Logger()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x200022B")]
	public enum JsonType
	{
		[Token(Token = "0x4000F0A")]
		None,
		[Token(Token = "0x4000F0B")]
		Object,
		[Token(Token = "0x4000F0C")]
		Array,
		[Token(Token = "0x4000F0D")]
		String,
		[Token(Token = "0x4000F0E")]
		Int,
		[Token(Token = "0x4000F0F")]
		Long,
		[Token(Token = "0x4000F10")]
		Double,
		[Token(Token = "0x4000F11")]
		Boolean
	}
	[Token(Token = "0x200022C")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x1700012C")]
		bool IsArray
		{
			[Token(Token = "0x600115E")]
			get;
		}

		[Token(Token = "0x1700012D")]
		bool IsBoolean
		{
			[Token(Token = "0x600115F")]
			get;
		}

		[Token(Token = "0x1700012E")]
		bool IsDouble
		{
			[Token(Token = "0x6001160")]
			get;
		}

		[Token(Token = "0x1700012F")]
		bool IsInt
		{
			[Token(Token = "0x6001161")]
			get;
		}

		[Token(Token = "0x17000130")]
		bool IsLong
		{
			[Token(Token = "0x6001162")]
			get;
		}

		[Token(Token = "0x17000131")]
		bool IsObject
		{
			[Token(Token = "0x6001163")]
			get;
		}

		[Token(Token = "0x17000132")]
		bool IsString
		{
			[Token(Token = "0x6001164")]
			get;
		}

		[Token(Token = "0x6001165")]
		bool GetBoolean();

		[Token(Token = "0x6001166")]
		double GetDouble();

		[Token(Token = "0x6001167")]
		int GetInt();

		[Token(Token = "0x6001168")]
		JsonType GetJsonType();

		[Token(Token = "0x6001169")]
		long GetLong();

		[Token(Token = "0x600116A")]
		string GetString();

		[Token(Token = "0x600116B")]
		void SetBoolean(bool val);

		[Token(Token = "0x600116C")]
		void SetDouble(double val);

		[Token(Token = "0x600116D")]
		void SetInt(int val);

		[Token(Token = "0x600116E")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x600116F")]
		void SetLong(long val);

		[Token(Token = "0x6001170")]
		void SetString(string val);

		[Token(Token = "0x6001171")]
		string ToJson();

		[Token(Token = "0x6001172")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x200022D")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB71234", Offset = "0xB71234")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inst_boolean;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double inst_double;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int inst_int;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long inst_long;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string inst_string;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string json;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonType type;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x17000133")]
		public int Count
		{
			[Token(Token = "0x6001173")]
			[Address(RVA = "0x13266FC", Offset = "0x13266FC", VA = "0x13266FC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000134")]
		public bool IsArray
		{
			[Token(Token = "0x6001174")]
			[Address(RVA = "0x132688C", Offset = "0x132688C", VA = "0x132688C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000135")]
		public bool IsBoolean
		{
			[Token(Token = "0x6001175")]
			[Address(RVA = "0x132689C", Offset = "0x132689C", VA = "0x132689C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000136")]
		public bool IsDouble
		{
			[Token(Token = "0x6001176")]
			[Address(RVA = "0x13268AC", Offset = "0x13268AC", VA = "0x13268AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000137")]
		public bool IsInt
		{
			[Token(Token = "0x6001177")]
			[Address(RVA = "0x13268BC", Offset = "0x13268BC", VA = "0x13268BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000138")]
		public bool IsLong
		{
			[Token(Token = "0x6001178")]
			[Address(RVA = "0x13268CC", Offset = "0x13268CC", VA = "0x13268CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000139")]
		public bool IsObject
		{
			[Token(Token = "0x6001179")]
			[Address(RVA = "0x13268DC", Offset = "0x13268DC", VA = "0x13268DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013A")]
		public bool IsString
		{
			[Token(Token = "0x600117A")]
			[Address(RVA = "0x13268EC", Offset = "0x13268EC", VA = "0x13268EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013B")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x600117B")]
			[Address(RVA = "0x13268FC", Offset = "0x13268FC", VA = "0x13268FC", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700013C")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x600117C")]
			[Address(RVA = "0x1326900", Offset = "0x1326900", VA = "0x1326900", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013D")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x600117D")]
			[Address(RVA = "0x13269BC", Offset = "0x13269BC", VA = "0x13269BC", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x600117E")]
			[Address(RVA = "0x1326A78", Offset = "0x1326A78", VA = "0x1326A78", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013F")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x600117F")]
			[Address(RVA = "0x1326C64", Offset = "0x1326C64", VA = "0x1326C64", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000140")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x6001180")]
			[Address(RVA = "0x1326D20", Offset = "0x1326D20", VA = "0x1326D20", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x6001181")]
			[Address(RVA = "0x1327070", Offset = "0x1327070", VA = "0x1327070", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x6001182")]
			[Address(RVA = "0x13273C0", Offset = "0x13273C0", VA = "0x13273C0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000143")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x6001183")]
			[Address(RVA = "0x13273D0", Offset = "0x13273D0", VA = "0x13273D0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000144")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x6001184")]
			[Address(RVA = "0x13273E0", Offset = "0x13273E0", VA = "0x13273E0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000145")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x6001185")]
			[Address(RVA = "0x13273F0", Offset = "0x13273F0", VA = "0x13273F0", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000146")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x6001186")]
			[Address(RVA = "0x1327400", Offset = "0x1327400", VA = "0x1327400", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000147")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x6001187")]
			[Address(RVA = "0x1327410", Offset = "0x1327410", VA = "0x1327410", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000148")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x6001188")]
			[Address(RVA = "0x1327420", Offset = "0x1327420", VA = "0x1327420", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000149")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x6001189")]
			[Address(RVA = "0x1327430", Offset = "0x1327430", VA = "0x1327430", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014A")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x600118A")]
			[Address(RVA = "0x13275E4", Offset = "0x13275E4", VA = "0x13275E4", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014B")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x600118B")]
			[Address(RVA = "0x13276A0", Offset = "0x13276A0", VA = "0x13276A0", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x600118C")]
			[Address(RVA = "0x1327768", Offset = "0x1327768", VA = "0x1327768", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x600118D")]
			[Address(RVA = "0x1327C7C", Offset = "0x1327C7C", VA = "0x1327C7C", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x600118E")]
			[Address(RVA = "0x1327D50", Offset = "0x1327D50", VA = "0x1327D50", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x600118F")]
			[Address(RVA = "0x1327F5C", Offset = "0x1327F5C", VA = "0x1327F5C", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001190")]
			[Address(RVA = "0x1328024", Offset = "0x1328024", VA = "0x1328024", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public JsonData Item
		{
			[Token(Token = "0x6001191")]
			[Address(RVA = "0x1328300", Offset = "0x1328300", VA = "0x1328300")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001192")]
			[Address(RVA = "0x13278DC", Offset = "0x13278DC", VA = "0x13278DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public JsonData Item
		{
			[Token(Token = "0x6001193")]
			[Address(RVA = "0x13283CC", Offset = "0x13283CC", VA = "0x13283CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001194")]
			[Address(RVA = "0x1328068", Offset = "0x1328068", VA = "0x1328068")]
			set
			{
			}
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x132852C", Offset = "0x132852C", VA = "0x132852C")]
		public JsonData()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x1328534", Offset = "0x1328534", VA = "0x1328534")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x132856C", Offset = "0x132856C", VA = "0x132856C")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x13285A8", Offset = "0x13285A8", VA = "0x13285A8")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x13285DC", Offset = "0x13285DC", VA = "0x13285DC")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x1328610", Offset = "0x1328610", VA = "0x1328610")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x13287FC", Offset = "0x13287FC", VA = "0x13287FC")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x1328830", Offset = "0x1328830", VA = "0x1328830")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x13288A0", Offset = "0x13288A0", VA = "0x13288A0")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x1328914", Offset = "0x1328914", VA = "0x1328914")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x1328980", Offset = "0x1328980", VA = "0x1328980")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x13289EC", Offset = "0x13289EC", VA = "0x13289EC")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x1328A58", Offset = "0x1328A58", VA = "0x1328A58")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x1328AF4", Offset = "0x1328AF4", VA = "0x1328AF4")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x1328B90", Offset = "0x1328B90", VA = "0x1328B90")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x1328C2C", Offset = "0x1328C2C", VA = "0x1328C2C")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x1328CC8", Offset = "0x1328CC8", VA = "0x1328CC8")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x1328D64", Offset = "0x1328D64", VA = "0x1328D64", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x1328E34", Offset = "0x1328E34", VA = "0x1328E34", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x1328FF0", Offset = "0x1328FF0", VA = "0x1328FF0", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x1329130", Offset = "0x1329130", VA = "0x1329130", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x13291FC", Offset = "0x13291FC", VA = "0x13291FC", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x13292A4", Offset = "0x13292A4", VA = "0x13292A4", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x132953C", Offset = "0x132953C", VA = "0x132953C", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x13295F4", Offset = "0x13295F4", VA = "0x13295F4", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x1329684", Offset = "0x1329684", VA = "0x1329684", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x1329714", Offset = "0x1329714", VA = "0x1329714", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x13297A4", Offset = "0x13297A4", VA = "0x13297A4", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x1329834", Offset = "0x1329834", VA = "0x1329834", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x13298C4", Offset = "0x13298C4", VA = "0x13298C4", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x13298DC", Offset = "0x13298DC", VA = "0x13298DC", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x13298F0", Offset = "0x13298F0", VA = "0x13298F0", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x1329904", Offset = "0x1329904", VA = "0x1329904", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x1329918", Offset = "0x1329918", VA = "0x1329918", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x1329928", Offset = "0x1329928", VA = "0x1329928", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x13299E8", Offset = "0x13299E8", VA = "0x13299E8", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x1329A28", Offset = "0x1329A28", VA = "0x1329A28", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x1329B08", Offset = "0x1329B08", VA = "0x1329B08", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x1329BCC", Offset = "0x1329BCC", VA = "0x1329BCC", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x1329C98", Offset = "0x1329C98", VA = "0x1329C98", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x1329D64", Offset = "0x1329D64", VA = "0x1329D64", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x1329E40", Offset = "0x1329E40", VA = "0x1329E40", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x1329F14", Offset = "0x1329F14", VA = "0x1329F14", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x1329FE8", Offset = "0x1329FE8", VA = "0x1329FE8", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x132A100", Offset = "0x132A100", VA = "0x132A100", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x132A250", Offset = "0x132A250", VA = "0x132A250", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x13267B8", Offset = "0x13267B8", VA = "0x13267B8")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x1326B34", Offset = "0x1326B34", VA = "0x1326B34")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x13274EC", Offset = "0x13274EC", VA = "0x13274EC")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x1327840", Offset = "0x1327840", VA = "0x1327840")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x132A410", Offset = "0x132A410", VA = "0x132A410")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x1329A2C", Offset = "0x1329A2C", VA = "0x1329A2C")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x132B85C", Offset = "0x132B85C", VA = "0x132B85C")]
		public void Clear()
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x132B978", Offset = "0x132B978", VA = "0x132B978", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x132BA64", Offset = "0x132BA64", VA = "0x132BA64", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x132BA6C", Offset = "0x132BA6C", VA = "0x132BA6C", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x132992C", Offset = "0x132992C", VA = "0x132992C")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x13299EC", Offset = "0x13299EC", VA = "0x13299EC")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x132BC30", Offset = "0x132BC30", VA = "0x132BC30", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200022E")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x17000150")]
		public object Current
		{
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x1338A3C", Offset = "0x1338A3C", VA = "0x1338A3C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x1338AA8", Offset = "0x1338AA8", VA = "0x1338AA8", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x17000152")]
		public object Key
		{
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x1338B8C", Offset = "0x1338B8C", VA = "0x1338B8C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		public object Value
		{
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x1338C40", Offset = "0x1338C40", VA = "0x1338C40", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x132A0D4", Offset = "0x132A0D4", VA = "0x132A0D4")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x1338CFC", Offset = "0x1338CFC", VA = "0x1338CFC", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x1338DB0", Offset = "0x1338DB0", VA = "0x1338DB0", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x132BD10", Offset = "0x132BD10", VA = "0x132BD10")]
		public JsonException()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x132BD18", Offset = "0x132BD18", VA = "0x132BD18")]
		internal JsonException(ParserToken token)
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x132BDA8", Offset = "0x132BDA8", VA = "0x132BDA8")]
		internal JsonException(ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x132BE48", Offset = "0x132BE48", VA = "0x132BE48")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x132BED8", Offset = "0x132BED8", VA = "0x132BED8")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x132BF78", Offset = "0x132BF78", VA = "0x132BF78")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x132BF80", Offset = "0x132BF80", VA = "0x132BF80")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x2000230")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsField;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Type;
	}
	[Token(Token = "0x2000231")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_array;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool is_list;

		[Token(Token = "0x17000154")]
		public Type ElementType
		{
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0xC3D850", Offset = "0xC3D850", VA = "0xC3D850")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011DF")]
			[Address(RVA = "0xC3D858", Offset = "0xC3D858", VA = "0xC3D858")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public bool IsArray
		{
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0xC3D860", Offset = "0xC3D860", VA = "0xC3D860")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E1")]
			[Address(RVA = "0xC3D868", Offset = "0xC3D868", VA = "0xC3D868")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public bool IsList
		{
			[Token(Token = "0x60011E2")]
			[Address(RVA = "0xC3D874", Offset = "0xC3D874", VA = "0xC3D874")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E3")]
			[Address(RVA = "0xC3D87C", Offset = "0xC3D87C", VA = "0xC3D87C")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000232")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_dictionary;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, PropertyMetadata> properties;

		[Token(Token = "0x17000157")]
		public Type ElementType
		{
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0xC3D8CC", Offset = "0xC3D8CC", VA = "0xC3D8CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E5")]
			[Address(RVA = "0xC3D8D4", Offset = "0xC3D8D4", VA = "0xC3D8D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public bool IsDictionary
		{
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0xC3D8DC", Offset = "0xC3D8DC", VA = "0xC3D8DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E7")]
			[Address(RVA = "0xC3D8E4", Offset = "0xC3D8E4", VA = "0xC3D8E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public IDictionary<string, PropertyMetadata> Properties
		{
			[Token(Token = "0x60011E8")]
			[Address(RVA = "0xC3D8F0", Offset = "0xC3D8F0", VA = "0xC3D8F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E9")]
			[Address(RVA = "0xC3D8F8", Offset = "0xC3D8F8", VA = "0xC3D8F8")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000233")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x2000234")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x2000235")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x2000236")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x2000237")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x2000238")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x200065D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB728E4", Offset = "0xB728E4")]
		private sealed class <>c
		{
			[Token(Token = "0x40028BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40028BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExporterFunc <>9__23_0;

			[Token(Token = "0x40028BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExporterFunc <>9__23_1;

			[Token(Token = "0x40028BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ExporterFunc <>9__23_2;

			[Token(Token = "0x40028BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ExporterFunc <>9__23_3;

			[Token(Token = "0x40028C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ExporterFunc <>9__23_4;

			[Token(Token = "0x40028C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ExporterFunc <>9__23_5;

			[Token(Token = "0x40028C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ExporterFunc <>9__23_6;

			[Token(Token = "0x40028C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ExporterFunc <>9__23_7;

			[Token(Token = "0x40028C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ExporterFunc <>9__23_8;

			[Token(Token = "0x40028C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ExporterFunc <>9__23_9;

			[Token(Token = "0x40028C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ImporterFunc <>9__24_0;

			[Token(Token = "0x40028C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static ImporterFunc <>9__24_1;

			[Token(Token = "0x40028C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static ImporterFunc <>9__24_2;

			[Token(Token = "0x40028C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static ImporterFunc <>9__24_3;

			[Token(Token = "0x40028CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static ImporterFunc <>9__24_4;

			[Token(Token = "0x40028CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static ImporterFunc <>9__24_5;

			[Token(Token = "0x40028CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static ImporterFunc <>9__24_6;

			[Token(Token = "0x40028CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static ImporterFunc <>9__24_7;

			[Token(Token = "0x40028CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static ImporterFunc <>9__24_8;

			[Token(Token = "0x40028CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static ImporterFunc <>9__24_9;

			[Token(Token = "0x40028D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static ImporterFunc <>9__24_10;

			[Token(Token = "0x40028D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static ImporterFunc <>9__24_11;

			[Token(Token = "0x40028D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static ImporterFunc <>9__24_12;

			[Token(Token = "0x40028D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static WrapperFactory <>9__29_0;

			[Token(Token = "0x40028D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x40028D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x6002CDD")]
			[Address(RVA = "0x133382C", Offset = "0x133382C", VA = "0x133382C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002CDE")]
			[Address(RVA = "0x1333834", Offset = "0x1333834", VA = "0x1333834")]
			internal void <RegisterBaseExporters>b__23_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002CDF")]
			[Address(RVA = "0x13338F0", Offset = "0x13338F0", VA = "0x13338F0")]
			internal void <RegisterBaseExporters>b__23_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002CE0")]
			[Address(RVA = "0x13339AC", Offset = "0x13339AC", VA = "0x13339AC")]
			internal void <RegisterBaseExporters>b__23_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002CE1")]
			[Address(RVA = "0x1333A9C", Offset = "0x1333A9C", VA = "0x1333A9C")]
			internal void <RegisterBaseExporters>b__23_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002CE2")]
			[Address(RVA = "0x1333C18", Offset = "0x1333C18", VA = "0x1333C18")]
			internal void <RegisterBaseExporters>b__23_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002CE3")]
			[Address(RVA = "0x1333CD4", Offset = "0x1333CD4", VA = "0x1333CD4")]
			internal void <RegisterBaseExporters>b__23_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002CE4")]
			[Address(RVA = "0x1333D90", Offset = "0x1333D90", VA = "0x1333D90")]
			internal void <RegisterBaseExporters>b__23_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002CE5")]
			[Address(RVA = "0x1333E4C", Offset = "0x1333E4C", VA = "0x1333E4C")]
			internal void <RegisterBaseExporters>b__23_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002CE6")]
			[Address(RVA = "0x1333F08", Offset = "0x1333F08", VA = "0x1333F08")]
			internal void <RegisterBaseExporters>b__23_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002CE7")]
			[Address(RVA = "0x1333F98", Offset = "0x1333F98", VA = "0x1333F98")]
			internal void <RegisterBaseExporters>b__23_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002CE8")]
			[Address(RVA = "0x133402C", Offset = "0x133402C", VA = "0x133402C")]
			internal object <RegisterBaseImporters>b__24_0(object input)
			{
				return null;
			}

			[Token(Token = "0x6002CE9")]
			[Address(RVA = "0x13340F4", Offset = "0x13340F4", VA = "0x13340F4")]
			internal object <RegisterBaseImporters>b__24_1(object input)
			{
				return null;
			}

			[Token(Token = "0x6002CEA")]
			[Address(RVA = "0x13341BC", Offset = "0x13341BC", VA = "0x13341BC")]
			internal object <RegisterBaseImporters>b__24_2(object input)
			{
				return null;
			}

			[Token(Token = "0x6002CEB")]
			[Address(RVA = "0x1334284", Offset = "0x1334284", VA = "0x1334284")]
			internal object <RegisterBaseImporters>b__24_3(object input)
			{
				return null;
			}

			[Token(Token = "0x6002CEC")]
			[Address(RVA = "0x133434C", Offset = "0x133434C", VA = "0x133434C")]
			internal object <RegisterBaseImporters>b__24_4(object input)
			{
				return null;
			}

			[Token(Token = "0x6002CED")]
			[Address(RVA = "0x1334414", Offset = "0x1334414", VA = "0x1334414")]
			internal object <RegisterBaseImporters>b__24_5(object input)
			{
				return null;
			}

			[Token(Token = "0x6002CEE")]
			[Address(RVA = "0x13344DC", Offset = "0x13344DC", VA = "0x13344DC")]
			internal object <RegisterBaseImporters>b__24_6(object input)
			{
				return null;
			}

			[Token(Token = "0x6002CEF")]
			[Address(RVA = "0x13345A0", Offset = "0x13345A0", VA = "0x13345A0")]
			internal object <RegisterBaseImporters>b__24_7(object input)
			{
				return null;
			}

			[Token(Token = "0x6002CF0")]
			[Address(RVA = "0x1334668", Offset = "0x1334668", VA = "0x1334668")]
			internal object <RegisterBaseImporters>b__24_8(object input)
			{
				return null;
			}

			[Token(Token = "0x6002CF1")]
			[Address(RVA = "0x133472C", Offset = "0x133472C", VA = "0x133472C")]
			internal object <RegisterBaseImporters>b__24_9(object input)
			{
				return null;
			}

			[Token(Token = "0x6002CF2")]
			[Address(RVA = "0x13347F4", Offset = "0x13347F4", VA = "0x13347F4")]
			internal object <RegisterBaseImporters>b__24_10(object input)
			{
				return null;
			}

			[Token(Token = "0x6002CF3")]
			[Address(RVA = "0x13348BC", Offset = "0x13348BC", VA = "0x13348BC")]
			internal object <RegisterBaseImporters>b__24_11(object input)
			{
				return null;
			}

			[Token(Token = "0x6002CF4")]
			[Address(RVA = "0x1334978", Offset = "0x1334978", VA = "0x1334978")]
			internal object <RegisterBaseImporters>b__24_12(object input)
			{
				return null;
			}

			[Token(Token = "0x6002CF5")]
			[Address(RVA = "0x1334A68", Offset = "0x1334A68", VA = "0x1334A68")]
			internal IJsonWrapper <ToObject>b__29_0()
			{
				return null;
			}

			[Token(Token = "0x6002CF6")]
			[Address(RVA = "0x1334AC4", Offset = "0x1334AC4", VA = "0x1334AC4")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x6002CF7")]
			[Address(RVA = "0x1334B20", Offset = "0x1334B20", VA = "0x1334B20")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}
		}

		[Token(Token = "0x200065E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB728F4", Offset = "0xB728F4")]
		private sealed class <>c__DisplayClass37_0<T>
		{
			[Token(Token = "0x40028D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x6002CF8")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6002CF9")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x200065F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72904", Offset = "0xB72904")]
		private sealed class <>c__DisplayClass38_0<TJson, TValue>
		{
			[Token(Token = "0x40028D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x6002CFA")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6002CFB")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, ExporterFunc> base_exporters_table;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, ExporterFunc> custom_exporters_table;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> base_importers_table;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> custom_importers_table;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, ArrayMetadata> array_metadata;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IDictionary<Type, ObjectMetadata> object_metadata;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IDictionary<Type, IList<PropertyMetadata>> type_properties;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static JsonWriter static_writer;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x132BF88", Offset = "0x132BF88", VA = "0x132BF88")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x132DDBC", Offset = "0x132DDBC", VA = "0x132DDBC")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x132E268", Offset = "0x132E268", VA = "0x132E268")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x132E9BC", Offset = "0x132E9BC", VA = "0x132E9BC")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x132EF08", Offset = "0x132EF08", VA = "0x132EF08")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x132F7DC", Offset = "0x132F7DC", VA = "0x132F7DC")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x1330CBC", Offset = "0x1330CBC", VA = "0x1330CBC")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x132C2E0", Offset = "0x132C2E0", VA = "0x132C2E0")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x132D078", Offset = "0x132D078", VA = "0x132D078")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x1331580", Offset = "0x1331580", VA = "0x1331580")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer)
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x13317C8", Offset = "0x13317C8", VA = "0x13317C8")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x1332DF4", Offset = "0x1332DF4", VA = "0x1332DF4")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x1333030", Offset = "0x1333030", VA = "0x1333030")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x13330AC", Offset = "0x13330AC", VA = "0x13330AC")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x1333268", Offset = "0x1333268", VA = "0x1333268")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x13333C8", Offset = "0x13333C8", VA = "0x13333C8")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x600120E")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x600120F")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6001210")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x13331F4", Offset = "0x13331F4", VA = "0x13331F4")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x1333500", Offset = "0x1333500", VA = "0x1333500")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x6001213")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x6001214")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x1333608", Offset = "0x1333608", VA = "0x1333608")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x13336E4", Offset = "0x13336E4", VA = "0x13336E4")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x13337C0", Offset = "0x13337C0", VA = "0x13337C0")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public enum JsonToken
	{
		[Token(Token = "0x4000F37")]
		None,
		[Token(Token = "0x4000F38")]
		ObjectStart,
		[Token(Token = "0x4000F39")]
		PropertyName,
		[Token(Token = "0x4000F3A")]
		ObjectEnd,
		[Token(Token = "0x4000F3B")]
		ArrayStart,
		[Token(Token = "0x4000F3C")]
		ArrayEnd,
		[Token(Token = "0x4000F3D")]
		Int,
		[Token(Token = "0x4000F3E")]
		Long,
		[Token(Token = "0x4000F3F")]
		Double,
		[Token(Token = "0x4000F40")]
		String,
		[Token(Token = "0x4000F41")]
		Boolean,
		[Token(Token = "0x4000F42")]
		Null
	}
	[Token(Token = "0x200023A")]
	public class JsonReader
	{
		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_input;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int current_symbol;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool end_of_json;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool end_of_input;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Lexer lexer;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool parser_in_string;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool parser_return;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool read_started;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextReader reader;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool reader_is_owned;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object token_value;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonToken token;

		[Token(Token = "0x1700015A")]
		public bool AllowComments
		{
			[Token(Token = "0x6001218")]
			[Address(RVA = "0x1334B7C", Offset = "0x1334B7C", VA = "0x1334B7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001219")]
			[Address(RVA = "0x1334B9C", Offset = "0x1334B9C", VA = "0x1334B9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x600121A")]
			[Address(RVA = "0x1334BC0", Offset = "0x1334BC0", VA = "0x1334BC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600121B")]
			[Address(RVA = "0x1334BE0", Offset = "0x1334BE0", VA = "0x1334BE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public bool EndOfInput
		{
			[Token(Token = "0x600121C")]
			[Address(RVA = "0x1334C04", Offset = "0x1334C04", VA = "0x1334C04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015D")]
		public bool EndOfJson
		{
			[Token(Token = "0x600121D")]
			[Address(RVA = "0x1334C0C", Offset = "0x1334C0C", VA = "0x1334C0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015E")]
		public JsonToken Token
		{
			[Token(Token = "0x600121E")]
			[Address(RVA = "0x1334C14", Offset = "0x1334C14", VA = "0x1334C14")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x1700015F")]
		public object Value
		{
			[Token(Token = "0x600121F")]
			[Address(RVA = "0x1334C1C", Offset = "0x1334C1C", VA = "0x1334C1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x1334C24", Offset = "0x1334C24", VA = "0x1334C24")]
		static JsonReader()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x1333590", Offset = "0x1333590", VA = "0x1333590")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x13333C0", Offset = "0x13333C0", VA = "0x13333C0")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x13352DC", Offset = "0x13352DC", VA = "0x13352DC")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x1334C28", Offset = "0x1334C28", VA = "0x1334C28")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x1335604", Offset = "0x1335604", VA = "0x1335604")]
		private static void TableAddCol(ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x13354F0", Offset = "0x13354F0", VA = "0x13354F0")]
		private static void TableAddRow(ParserToken rule)
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x1335770", Offset = "0x1335770", VA = "0x1335770")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x13358F4", Offset = "0x13358F4", VA = "0x13358F4")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x1335A9C", Offset = "0x1335A9C", VA = "0x1335A9C")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x1335CE8", Offset = "0x1335CE8", VA = "0x1335CE8")]
		public void Close()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x13307B0", Offset = "0x13307B0", VA = "0x13307B0")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200023B")]
	internal enum Condition
	{
		[Token(Token = "0x4000F52")]
		InArray,
		[Token(Token = "0x4000F53")]
		InObject,
		[Token(Token = "0x4000F54")]
		NotAProperty,
		[Token(Token = "0x4000F55")]
		Property,
		[Token(Token = "0x4000F56")]
		Value
	}
	[Token(Token = "0x200023C")]
	internal class WriterContext
	{
		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool InArray;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool InObject;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool ExpectingValue;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Padding;

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x1336100", Offset = "0x1336100", VA = "0x1336100")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class JsonWriter
	{
		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WriterContext context;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<WriterContext> ctx_stack;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool has_reached_end;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] hex_seq;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int indentation;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int indent_value;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool pretty_print;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool validate;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextWriter writer;

		[Token(Token = "0x17000160")]
		public int IndentValue
		{
			[Token(Token = "0x600122D")]
			[Address(RVA = "0x1335D38", Offset = "0x1335D38", VA = "0x1335D38")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600122E")]
			[Address(RVA = "0x1335D40", Offset = "0x1335D40", VA = "0x1335D40")]
			set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public bool PrettyPrint
		{
			[Token(Token = "0x600122F")]
			[Address(RVA = "0x1335D54", Offset = "0x1335D54", VA = "0x1335D54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001230")]
			[Address(RVA = "0x1335D5C", Offset = "0x1335D5C", VA = "0x1335D5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000162")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x6001231")]
			[Address(RVA = "0x1335D68", Offset = "0x1335D68", VA = "0x1335D68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		public bool Validate
		{
			[Token(Token = "0x6001232")]
			[Address(RVA = "0x1335D70", Offset = "0x1335D70", VA = "0x1335D70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001233")]
			[Address(RVA = "0x1335D78", Offset = "0x1335D78", VA = "0x1335D78")]
			set
			{
			}
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x1335D84", Offset = "0x1335D84", VA = "0x1335D84")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x132C244", Offset = "0x132C244", VA = "0x132C244")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x1335EA8", Offset = "0x1335EA8", VA = "0x1335EA8")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x132BB8C", Offset = "0x132BB8C", VA = "0x132BB8C")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x1335F1C", Offset = "0x1335F1C", VA = "0x1335F1C")]
		private void DoValidation(Condition cond)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x1335DDC", Offset = "0x1335DDC", VA = "0x1335DDC")]
		private void Init()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x1336108", Offset = "0x1336108", VA = "0x1336108")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x1336198", Offset = "0x1336198", VA = "0x1336198")]
		private void Indent()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x13361B0", Offset = "0x13361B0", VA = "0x13361B0")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x133624C", Offset = "0x133624C", VA = "0x133624C")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x1336254", Offset = "0x1336254", VA = "0x1336254")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x13362F0", Offset = "0x13362F0", VA = "0x13362F0")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x13365B4", Offset = "0x13365B4", VA = "0x13365B4")]
		private void Unindent()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x13365CC", Offset = "0x13365CC", VA = "0x13365CC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x1332F64", Offset = "0x1332F64", VA = "0x1332F64")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x132B02C", Offset = "0x132B02C", VA = "0x132B02C")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x1333B2C", Offset = "0x1333B2C", VA = "0x1333B2C")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x132B0CC", Offset = "0x132B0CC", VA = "0x132B0CC")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x132B20C", Offset = "0x132B20C", VA = "0x132B20C")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x132B2F0", Offset = "0x132B2F0", VA = "0x132B2F0")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x132AF8C", Offset = "0x132AF8C", VA = "0x132AF8C")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x1332D10", Offset = "0x1332D10", VA = "0x1332D10")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x132B4AC", Offset = "0x132B4AC", VA = "0x132B4AC")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x132B3D4", Offset = "0x132B3D4", VA = "0x132B3D4")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x132B78C", Offset = "0x132B78C", VA = "0x132B78C")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x132B57C", Offset = "0x132B57C", VA = "0x132B57C")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x132B654", Offset = "0x132B654", VA = "0x132B654")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x200023E")]
	internal class FsmContext
	{
		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Return;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextState;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Lexer L;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int StateStack;

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x13262F8", Offset = "0x13262F8", VA = "0x13262F8")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x200023F")]
	internal class Lexer
	{
		[Token(Token = "0x2000660")]
		private delegate bool StateHandler(FsmContext ctx);

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool allow_comments;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool end_of_input;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FsmContext fsm_context;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int input_buffer;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int input_char;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextReader reader;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int state;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder string_buffer;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string string_value;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int token;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int unichar;

		[Token(Token = "0x17000164")]
		public bool AllowComments
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0x133663C", Offset = "0x133663C", VA = "0x133663C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001251")]
			[Address(RVA = "0x1336644", Offset = "0x1336644", VA = "0x1336644")]
			set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0x1336650", Offset = "0x1336650", VA = "0x1336650")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001253")]
			[Address(RVA = "0x1336658", Offset = "0x1336658", VA = "0x1336658")]
			set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public bool EndOfInput
		{
			[Token(Token = "0x6001254")]
			[Address(RVA = "0x1336664", Offset = "0x1336664", VA = "0x1336664")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000167")]
		public int Token
		{
			[Token(Token = "0x6001255")]
			[Address(RVA = "0x133666C", Offset = "0x133666C", VA = "0x133666C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000168")]
		public string StringValue
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0x1336674", Offset = "0x1336674", VA = "0x1336674")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x133667C", Offset = "0x133667C", VA = "0x133667C")]
		static Lexer()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x1335428", Offset = "0x1335428", VA = "0x1335428")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x1336FBC", Offset = "0x1336FBC", VA = "0x1336FBC")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x1336680", Offset = "0x1336680", VA = "0x1336680")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x1337048", Offset = "0x1337048", VA = "0x1337048")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x1337148", Offset = "0x1337148", VA = "0x1337148")]
		private static bool State1(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x133736C", Offset = "0x133736C", VA = "0x133736C")]
		private static bool State2(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x133741C", Offset = "0x133741C", VA = "0x133741C")]
		private static bool State3(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x1337560", Offset = "0x1337560", VA = "0x1337560")]
		private static bool State4(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x1337670", Offset = "0x1337670", VA = "0x1337670")]
		private static bool State5(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x13376FC", Offset = "0x13376FC", VA = "0x13376FC")]
		private static bool State6(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x1337810", Offset = "0x1337810", VA = "0x1337810")]
		private static bool State7(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x13378AC", Offset = "0x13378AC", VA = "0x13378AC")]
		private static bool State8(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x1337984", Offset = "0x1337984", VA = "0x1337984")]
		private static bool State9(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x13379FC", Offset = "0x13379FC", VA = "0x13379FC")]
		private static bool State10(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x1337A74", Offset = "0x1337A74", VA = "0x1337A74")]
		private static bool State11(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x1337AEC", Offset = "0x1337AEC", VA = "0x1337AEC")]
		private static bool State12(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x1337B64", Offset = "0x1337B64", VA = "0x1337B64")]
		private static bool State13(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x1337BDC", Offset = "0x1337BDC", VA = "0x1337BDC")]
		private static bool State14(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x1337C54", Offset = "0x1337C54", VA = "0x1337C54")]
		private static bool State15(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x1337CCC", Offset = "0x1337CCC", VA = "0x1337CCC")]
		private static bool State16(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x1337D44", Offset = "0x1337D44", VA = "0x1337D44")]
		private static bool State17(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x1337DBC", Offset = "0x1337DBC", VA = "0x1337DBC")]
		private static bool State18(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x1337E34", Offset = "0x1337E34", VA = "0x1337E34")]
		private static bool State19(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x1337EE8", Offset = "0x1337EE8", VA = "0x1337EE8")]
		private static bool State20(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x1337F60", Offset = "0x1337F60", VA = "0x1337F60")]
		private static bool State21(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x13380B0", Offset = "0x13380B0", VA = "0x13380B0")]
		private static bool State22(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x13382A4", Offset = "0x13382A4", VA = "0x13382A4")]
		private static bool State23(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x1338358", Offset = "0x1338358", VA = "0x1338358")]
		private static bool State24(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x13383D8", Offset = "0x13383D8", VA = "0x13383D8")]
		private static bool State25(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x1338460", Offset = "0x1338460", VA = "0x1338460")]
		private static bool State26(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x13384D4", Offset = "0x13384D4", VA = "0x13384D4")]
		private static bool State27(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x1338548", Offset = "0x1338548", VA = "0x1338548")]
		private static bool State28(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x1337334", Offset = "0x1337334", VA = "0x1337334")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x13385CC", Offset = "0x13385CC", VA = "0x13385CC")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x1335B04", Offset = "0x1335B04", VA = "0x1335B04")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x1337554", Offset = "0x1337554", VA = "0x1337554")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x2000240")]
	internal enum ParserToken
	{
		[Token(Token = "0x4000F7A")]
		None = 65536,
		[Token(Token = "0x4000F7B")]
		Number,
		[Token(Token = "0x4000F7C")]
		True,
		[Token(Token = "0x4000F7D")]
		False,
		[Token(Token = "0x4000F7E")]
		Null,
		[Token(Token = "0x4000F7F")]
		CharSeq,
		[Token(Token = "0x4000F80")]
		Char,
		[Token(Token = "0x4000F81")]
		Text,
		[Token(Token = "0x4000F82")]
		Object,
		[Token(Token = "0x4000F83")]
		ObjectPrime,
		[Token(Token = "0x4000F84")]
		Pair,
		[Token(Token = "0x4000F85")]
		PairRest,
		[Token(Token = "0x4000F86")]
		Array,
		[Token(Token = "0x4000F87")]
		ArrayPrime,
		[Token(Token = "0x4000F88")]
		Value,
		[Token(Token = "0x4000F89")]
		ValueRest,
		[Token(Token = "0x4000F8A")]
		String,
		[Token(Token = "0x4000F8B")]
		End,
		[Token(Token = "0x4000F8C")]
		Epsilon
	}
}
namespace UnityIME
{
	[Token(Token = "0x2000241")]
	public class EventButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
	{
		[Token(Token = "0x600127C")]
		[Address(RVA = "0x18B1A80", Offset = "0x18B1A80", VA = "0x18B1A80", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x18B1B74", Offset = "0x18B1B74", VA = "0x18B1B74", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x18B1C68", Offset = "0x18B1C68", VA = "0x18B1C68", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x18B1DC4", Offset = "0x18B1DC4", VA = "0x18B1DC4")]
		public EventButton()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public static class EnumUtil
	{
		[Token(Token = "0x6001280")]
		public static IEnumerable<T> GetValues<T>()
		{
			return null;
		}
	}
	[Token(Token = "0x2000243")]
	public enum KeyboardLanguage
	{
		[Token(Token = "0x4000F8E")]
		English,
		[Token(Token = "0x4000F8F")]
		TraditionalChinese,
		[Token(Token = "0x4000F90")]
		Symbol
	}
	[Token(Token = "0x2000244")]
	public class KeyboardManager
	{
		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string LOG_TAG;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Hashtable KeyboardsTable;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static KeyboardManager instance;

		[Token(Token = "0x17000169")]
		public static KeyboardManager Instance
		{
			[Token(Token = "0x6001281")]
			[Address(RVA = "0x18B2648", Offset = "0x18B2648", VA = "0x18B2648")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x18B3384", Offset = "0x18B3384", VA = "0x18B3384")]
		private KeyboardManager()
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x18B36B8", Offset = "0x18B36B8", VA = "0x18B36B8", Slot = "1")]
		~KeyboardManager()
		{
		}

		[Token(Token = "0x6001284")]
		public void RegisterKeyboard<TEnum>(KeyboardLanguage lang, TEnum type, GameObject keyboard) where TEnum : struct, IComparable, IFormattable, IConvertible
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x18B2704", Offset = "0x18B2704", VA = "0x18B2704")]
		public bool IsLocaleRegistered(KeyboardLanguage lang)
		{
			return default(bool);
		}

		[Token(Token = "0x6001286")]
		public GameObject GetKeyboard<TEnum>(KeyboardLanguage lang, TEnum type) where TEnum : struct, IComparable, IFormattable, IConvertible
		{
			return null;
		}

		[Token(Token = "0x6001287")]
		public List<CKeyboard<TEnum>> GetLocaleKeyboards<TEnum>(KeyboardLanguage lang) where TEnum : struct, IComparable, IFormattable, IConvertible
		{
			return null;
		}

		[Token(Token = "0x6001288")]
		public bool IsKeyboardActive<TEnum>(KeyboardLanguage lang, TEnum type) where TEnum : struct, IComparable, IFormattable, IConvertible
		{
			return default(bool);
		}

		[Token(Token = "0x6001289")]
		public void ActivateKeyboard<TEnum>(KeyboardLanguage lang, TEnum type, bool active) where TEnum : struct, IComparable, IFormattable, IConvertible
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x18B227C", Offset = "0x18B227C", VA = "0x18B227C")]
		public void DeactivateAllKeyboards()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class CKeyboard<T>
	{
		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T Type;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject Keyboard;

		[Token(Token = "0x600128C")]
		public CKeyboard(T type, GameObject go)
		{
		}

		[Token(Token = "0x600128D")]
		~CKeyboard()
		{
		}

		[Token(Token = "0x600128E")]
		public static bool ValidateKeyboard(CKeyboard<T> kb)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000246")]
	public abstract class AbstractKeyboard<TEnum> where TEnum : struct, IComparable, IFormattable, IConvertible
	{
		[Token(Token = "0x600128F")]
		protected AbstractKeyboard()
		{
		}

		[Token(Token = "0x6001290")]
		public abstract void RegisterKeyboard(TEnum type, GameObject keyboard);

		[Token(Token = "0x6001291")]
		public abstract GameObject GetKeyboard(TEnum type);

		[Token(Token = "0x6001292")]
		public abstract List<CKeyboard<TEnum>> GetKeyboardList();

		[Token(Token = "0x6001293")]
		public abstract void ActivateKeyboard(TEnum type, bool active);

		[Token(Token = "0x6001294")]
		public abstract bool IsKeyboardActive(TEnum type);
	}
	[Token(Token = "0x2000247")]
	public enum Type_ENG
	{
		[Token(Token = "0x4000F97")]
		AlphabetKeyboard,
		[Token(Token = "0x4000F98")]
		AlphabetKeyboardCapital
	}
	[Token(Token = "0x2000248")]
	public sealed class EnglishKeyboard : AbstractKeyboard<Type_ENG>
	{
		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<CKeyboard<Type_ENG>> KeyboardList;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static EnglishKeyboard instance;

		[Token(Token = "0x1700016A")]
		public static EnglishKeyboard Instance
		{
			[Token(Token = "0x6001297")]
			[Address(RVA = "0x18B14AC", Offset = "0x18B14AC", VA = "0x18B14AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x18B1424", Offset = "0x18B1424", VA = "0x18B1424")]
		public EnglishKeyboard()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x18B14A0", Offset = "0x18B14A0", VA = "0x18B14A0", Slot = "1")]
		~EnglishKeyboard()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x18B156C", Offset = "0x18B156C", VA = "0x18B156C", Slot = "4")]
		public override void RegisterKeyboard(Type_ENG type, GameObject keyboard)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x18B1604", Offset = "0x18B1604", VA = "0x18B1604", Slot = "5")]
		public override GameObject GetKeyboard(Type_ENG type)
		{
			return null;
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x18B1720", Offset = "0x18B1720", VA = "0x18B1720", Slot = "6")]
		public override List<CKeyboard<Type_ENG>> GetKeyboardList()
		{
			return null;
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x18B177C", Offset = "0x18B177C", VA = "0x18B177C", Slot = "7")]
		public override void ActivateKeyboard(Type_ENG type, bool active)
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x18B1844", Offset = "0x18B1844", VA = "0x18B1844", Slot = "8")]
		public override bool IsKeyboardActive(Type_ENG type)
		{
			return default(bool);
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x18B1908", Offset = "0x18B1908", VA = "0x18B1908")]
		public bool HasKeyboardRegistered()
		{
			return default(bool);
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x18B1964", Offset = "0x18B1964", VA = "0x18B1964")]
		public void DeactivateAllKeyboard()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public enum Type_SYM
	{
		[Token(Token = "0x4000F9C")]
		PunctuationKeyboard,
		[Token(Token = "0x4000F9D")]
		PunctuationKeyboardShift
	}
	[Token(Token = "0x200024A")]
	public sealed class SymbolKeyboard : AbstractKeyboard<Type_SYM>
	{
		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<CKeyboard<Type_SYM>> KeyboardList;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SymbolKeyboard instance;

		[Token(Token = "0x1700016B")]
		public static SymbolKeyboard Instance
		{
			[Token(Token = "0x60012A2")]
			[Address(RVA = "0x18B35F8", Offset = "0x18B35F8", VA = "0x18B35F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x18B4F90", Offset = "0x18B4F90", VA = "0x18B4F90")]
		public SymbolKeyboard()
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x18B500C", Offset = "0x18B500C", VA = "0x18B500C", Slot = "1")]
		~SymbolKeyboard()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x18B5018", Offset = "0x18B5018", VA = "0x18B5018", Slot = "4")]
		public override void RegisterKeyboard(Type_SYM type, GameObject keyboard)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x18B50B0", Offset = "0x18B50B0", VA = "0x18B50B0", Slot = "5")]
		public override GameObject GetKeyboard(Type_SYM type)
		{
			return null;
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x18B51CC", Offset = "0x18B51CC", VA = "0x18B51CC", Slot = "6")]
		public override List<CKeyboard<Type_SYM>> GetKeyboardList()
		{
			return null;
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x18B5228", Offset = "0x18B5228", VA = "0x18B5228", Slot = "7")]
		public override void ActivateKeyboard(Type_SYM type, bool active)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x18B52F0", Offset = "0x18B52F0", VA = "0x18B52F0", Slot = "8")]
		public override bool IsKeyboardActive(Type_SYM type)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x18B3798", Offset = "0x18B3798", VA = "0x18B3798")]
		public bool HasKeyboardRegistered()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x18B390C", Offset = "0x18B390C", VA = "0x18B390C")]
		public void DeactivateAllKeyboard()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public enum Type_CHT
	{
		[Token(Token = "0x4000FA1")]
		PhoneticKeyboard
	}
	[Token(Token = "0x200024C")]
	public sealed class TraditionalChineseKeyboard : AbstractKeyboard<Type_CHT>
	{
		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<CKeyboard<Type_CHT>> KeyboardList;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TraditionalChineseKeyboard instance;

		[Token(Token = "0x1700016C")]
		public static TraditionalChineseKeyboard Instance
		{
			[Token(Token = "0x60012AD")]
			[Address(RVA = "0x18B3538", Offset = "0x18B3538", VA = "0x18B3538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x18B53B8", Offset = "0x18B53B8", VA = "0x18B53B8")]
		public TraditionalChineseKeyboard()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x18B5434", Offset = "0x18B5434", VA = "0x18B5434", Slot = "1")]
		~TraditionalChineseKeyboard()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x18B5440", Offset = "0x18B5440", VA = "0x18B5440", Slot = "4")]
		public override void RegisterKeyboard(Type_CHT type, GameObject keyboard)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x18B54D8", Offset = "0x18B54D8", VA = "0x18B54D8", Slot = "5")]
		public override GameObject GetKeyboard(Type_CHT type)
		{
			return null;
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x18B55F4", Offset = "0x18B55F4", VA = "0x18B55F4", Slot = "6")]
		public override List<CKeyboard<Type_CHT>> GetKeyboardList()
		{
			return null;
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x18B5650", Offset = "0x18B5650", VA = "0x18B5650", Slot = "7")]
		public override void ActivateKeyboard(Type_CHT type, bool active)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x18B5718", Offset = "0x18B5718", VA = "0x18B5718", Slot = "8")]
		public override bool IsKeyboardActive(Type_CHT type)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x18B373C", Offset = "0x18B373C", VA = "0x18B373C")]
		public bool HasKeyboardRegistered()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x18B37F4", Offset = "0x18B37F4", VA = "0x18B37F4")]
		public void DeactivateAllKeyboard()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200024D")]
	public class KeyboardScript : MonoBehaviour
	{
		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyboardLanguage KBLan;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Type_ENG EngType;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Type_CHT ChtType;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Type_SYM SymType;

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x18B3A8C", Offset = "0x18B3A8C", VA = "0x18B3A8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x18B3BC0", Offset = "0x18B3BC0", VA = "0x18B3BC0")]
		public KeyboardScript()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public sealed class English : Locale
	{
		[Token(Token = "0x2000661")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72914", Offset = "0xB72914")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40028D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string s;

			[Token(Token = "0x40028D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public English <>4__this;

			[Token(Token = "0x6002D00")]
			[Address(RVA = "0x18B1050", Offset = "0x18B1050", VA = "0x18B1050")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002D01")]
			[Address(RVA = "0x18B13D4", Offset = "0x18B13D4", VA = "0x18B13D4")]
			internal void <SetAlphabetKeyboard>b__1()
			{
			}
		}

		[Token(Token = "0x2000662")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72924", Offset = "0xB72924")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40028DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string s;

			[Token(Token = "0x40028DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public English <>4__this;

			[Token(Token = "0x6002D02")]
			[Address(RVA = "0x18B1058", Offset = "0x18B1058", VA = "0x18B1058")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002D03")]
			[Address(RVA = "0x18B13FC", Offset = "0x18B13FC", VA = "0x18B13FC")]
			internal void <SetCapitalAlphabetKeyboard>b__1()
			{
			}
		}

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string LOG_TAG;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<CKeyboard<Type_ENG>> Locale_Keyboards;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Type_ENG curKeyboard;

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x18B015C", Offset = "0x18B015C", VA = "0x18B015C")]
		public English(InputFieldManager ifm, bool ispw)
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x18B0670", Offset = "0x18B0670", VA = "0x18B0670", Slot = "1")]
		~English()
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x18B0690", Offset = "0x18B0690", VA = "0x18B0690", Slot = "7")]
		public override void SetupKeyboards()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x18B07B8", Offset = "0x18B07B8", VA = "0x18B07B8")]
		private void SetAlphabetKeyboard(GameObject keyboard)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x18B0C04", Offset = "0x18B0C04", VA = "0x18B0C04")]
		private void SetCapitalAlphabetKeyboard(GameObject keyboard)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x18B1060", Offset = "0x18B1060", VA = "0x18B1060")]
		private void ActivateKeyboard(Type_ENG kb)
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x18B10D8", Offset = "0x18B10D8", VA = "0x18B10D8")]
		private void DeactivateKeyboard(Type_ENG kb)
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x18B1148", Offset = "0x18B1148", VA = "0x18B1148", Slot = "6")]
		public override void ActivateCurrentKeyboard()
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x18B115C", Offset = "0x18B115C", VA = "0x18B115C", Slot = "5")]
		public override void OnShiftKeyboard()
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x18B1324", Offset = "0x18B1324", VA = "0x18B1324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB870E4", Offset = "0xB870E4")]
		private void <SetAlphabetKeyboard>b__6_0()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x18B137C", Offset = "0x18B137C", VA = "0x18B137C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB870F4", Offset = "0xB870F4")]
		private void <SetCapitalAlphabetKeyboard>b__7_0()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class InputFieldManager : MonoBehaviour, ISubmitHandler, IEventSystemHandler, IPointerClickHandler
	{
		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string LOG_TAG;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyboardLanguage[] LocaleArray;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IsPassword;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text Target;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public string storedPasswd;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private KeyboardManager KMInstance;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MyInputField myIF;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Hashtable htLocaleArray;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool initialized;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private KeyboardLanguage curLocale;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private KeyboardLanguage originLocale;

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x18B1DCC", Offset = "0x18B1DCC", VA = "0x18B1DCC")]
		public void UpdateTargetText(string str)
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x18B1E54", Offset = "0x18B1E54", VA = "0x18B1E54")]
		private bool ValidateInputField()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x18B1EF8", Offset = "0x18B1EF8", VA = "0x18B1EF8")]
		private void EnableLocale(KeyboardLanguage kl)
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x18B1FCC", Offset = "0x18B1FCC", VA = "0x18B1FCC")]
		public void AlterKeyboard()
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x18B233C", Offset = "0x18B233C", VA = "0x18B233C")]
		private void Start()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x18B2340", Offset = "0x18B2340", VA = "0x18B2340")]
		private void Update()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x18B2344", Offset = "0x18B2344", VA = "0x18B2344")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x18B2348", Offset = "0x18B2348", VA = "0x18B2348")]
		private void SetupKeyboards()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x18B2498", Offset = "0x18B2498", VA = "0x18B2498")]
		private void InitializeKeyboards()
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x18B2C30", Offset = "0x18B2C30", VA = "0x18B2C30", Slot = "4")]
		public void OnSubmit(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x18B2F78", Offset = "0x18B2F78", VA = "0x18B2F78", Slot = "5")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x18B32C0", Offset = "0x18B32C0", VA = "0x18B32C0")]
		public InputFieldManager()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class Locale
	{
		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string LOG_TAG;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected KeyboardManager KMInstance;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected InputFieldManager Parent;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool isPassword;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected MyInputField myInputField;

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x18B0590", Offset = "0x18B0590", VA = "0x18B0590")]
		public Locale(InputFieldManager ifm, bool ispw)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x18B0680", Offset = "0x18B0680", VA = "0x18B0680", Slot = "1")]
		~Locale()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x18B3BC8", Offset = "0x18B3BC8", VA = "0x18B3BC8")]
		private void FocusOnInputField()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x18B3CA8", Offset = "0x18B3CA8", VA = "0x18B3CA8", Slot = "4")]
		public virtual void OnInputText(string s)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x18B3DA8", Offset = "0x18B3DA8", VA = "0x18B3DA8")]
		public void OnBackspaceText()
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x18B3EA4", Offset = "0x18B3EA4", VA = "0x18B3EA4")]
		public void OnClearText()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x18B3F6C", Offset = "0x18B3F6C", VA = "0x18B3F6C")]
		public void OnSubmitText()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x18B4030", Offset = "0x18B4030", VA = "0x18B4030")]
		public void OnAlterKeyboard()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x18B40C0", Offset = "0x18B40C0", VA = "0x18B40C0")]
		public void OnCloseKeyboard()
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x18B40DC", Offset = "0x18B40DC", VA = "0x18B40DC", Slot = "5")]
		public virtual void OnShiftKeyboard()
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x18B40E0", Offset = "0x18B40E0", VA = "0x18B40E0", Slot = "6")]
		public virtual void ActivateCurrentKeyboard()
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x18B40E4", Offset = "0x18B40E4", VA = "0x18B40E4", Slot = "7")]
		public virtual void SetupKeyboards()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public sealed class Symbol : Locale
	{
		[Token(Token = "0x2000663")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72934", Offset = "0xB72934")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40028DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string s;

			[Token(Token = "0x40028DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Symbol <>4__this;

			[Token(Token = "0x6002D04")]
			[Address(RVA = "0x18B4BBC", Offset = "0x18B4BBC", VA = "0x18B4BBC")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002D05")]
			[Address(RVA = "0x18B4F40", Offset = "0x18B4F40", VA = "0x18B4F40")]
			internal void <SetAlphabetKeyboard>b__1()
			{
			}
		}

		[Token(Token = "0x2000664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72944", Offset = "0xB72944")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40028DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string s;

			[Token(Token = "0x40028DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Symbol <>4__this;

			[Token(Token = "0x6002D06")]
			[Address(RVA = "0x18B4BC4", Offset = "0x18B4BC4", VA = "0x18B4BC4")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002D07")]
			[Address(RVA = "0x18B4F68", Offset = "0x18B4F68", VA = "0x18B4F68")]
			internal void <SetCapitalAlphabetKeyboard>b__1()
			{
			}
		}

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string LOG_TAG;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<CKeyboard<Type_SYM>> Locale_Keyboards;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Type_SYM curKeyboard;

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x18B27FC", Offset = "0x18B27FC", VA = "0x18B27FC")]
		public Symbol(InputFieldManager ifm, bool ispw)
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x18B41EC", Offset = "0x18B41EC", VA = "0x18B41EC", Slot = "1")]
		~Symbol()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x18B41FC", Offset = "0x18B41FC", VA = "0x18B41FC", Slot = "7")]
		public override void SetupKeyboards()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x18B4324", Offset = "0x18B4324", VA = "0x18B4324")]
		private void SetAlphabetKeyboard(GameObject keyboard)
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x18B4770", Offset = "0x18B4770", VA = "0x18B4770")]
		private void SetCapitalAlphabetKeyboard(GameObject keyboard)
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x18B4BCC", Offset = "0x18B4BCC", VA = "0x18B4BCC")]
		private void ActivateKeyboard(Type_SYM kb)
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x18B4C44", Offset = "0x18B4C44", VA = "0x18B4C44")]
		private void DeactivateKeyboard(Type_SYM kb)
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x18B4CB4", Offset = "0x18B4CB4", VA = "0x18B4CB4", Slot = "6")]
		public override void ActivateCurrentKeyboard()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x18B4CC8", Offset = "0x18B4CC8", VA = "0x18B4CC8", Slot = "5")]
		public override void OnShiftKeyboard()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x18B4E90", Offset = "0x18B4E90", VA = "0x18B4E90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87104", Offset = "0xB87104")]
		private void <SetAlphabetKeyboard>b__6_0()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x18B4EE8", Offset = "0x18B4EE8", VA = "0x18B4EE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87114", Offset = "0xB87114")]
		private void <SetCapitalAlphabetKeyboard>b__7_0()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class MyInputField : InputField
	{
		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public bool Activated;

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x18B3C98", Offset = "0x18B3C98", VA = "0x18B3C98")]
		public new void ActivateInputField()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x18B4144", Offset = "0x18B4144", VA = "0x18B4144", Slot = "59")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x18B4184", Offset = "0x18B4184", VA = "0x18B4184")]
		public MyInputField()
		{
		}
	}
}
namespace AWSSDK.Examples
{
	[Token(Token = "0x2000253")]
	public class KinesisExample : MonoBehaviour
	{
		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string IdentityPoolId;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string CognitoIdentityRegion;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string KinesisRegion;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InputField StreamNameField;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InputField RecordField;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button PutRecordButton;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button ListStreamsButton;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Button DescribeStreamButton;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text ResultText;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IAmazonKinesis _kinesisClient;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AWSCredentials _credentials;

		[Token(Token = "0x1700016D")]
		private RegionEndpoint _CognitoIdentityRegion
		{
			[Token(Token = "0x60012ED")]
			[Address(RVA = "0xEF4D90", Offset = "0xEF4D90", VA = "0xEF4D90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		private RegionEndpoint _KinesisRegion
		{
			[Token(Token = "0x60012EE")]
			[Address(RVA = "0xEF4DFC", Offset = "0xEF4DFC", VA = "0xEF4DFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		private AWSCredentials Credentials
		{
			[Token(Token = "0x60012F0")]
			[Address(RVA = "0xEF4FC8", Offset = "0xEF4FC8", VA = "0xEF4FC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		private IAmazonKinesis Client
		{
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0xEF5058", Offset = "0xEF5058", VA = "0xEF5058")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xEF4E68", Offset = "0xEF4E68", VA = "0xEF4E68")]
		private void Start()
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xEF50F0", Offset = "0xEF50F0", VA = "0xEF50F0")]
		public void PutRecord()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xEF54F8", Offset = "0xEF54F8", VA = "0xEF54F8")]
		public void ListStreams()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xEF5648", Offset = "0xEF5648", VA = "0xEF5648")]
		public void DescribeStream()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xEF57CC", Offset = "0xEF57CC", VA = "0xEF57CC")]
		public KinesisExample()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xEF5878", Offset = "0xEF5878", VA = "0xEF5878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87124", Offset = "0xB87124")]
		private void <Start>b__13_0()
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xEF587C", Offset = "0xEF587C", VA = "0xEF587C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87134", Offset = "0xB87134")]
		private void <Start>b__13_1()
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xEF5880", Offset = "0xEF5880", VA = "0xEF5880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87144", Offset = "0xB87144")]
		private void <Start>b__13_2()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xEF5884", Offset = "0xEF5884", VA = "0xEF5884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87154", Offset = "0xB87154")]
		private void <PutRecord>b__20_0(AmazonServiceResult<PutRecordRequest, PutRecordResponse> responseObject)
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xEF59BC", Offset = "0xEF59BC", VA = "0xEF59BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87164", Offset = "0xB87164")]
		private void <ListStreams>b__21_0(AmazonServiceResult<ListStreamsRequest, ListStreamsResponse> responseObject)
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xEF5C2C", Offset = "0xEF5C2C", VA = "0xEF5C2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87174", Offset = "0xB87174")]
		private void <DescribeStream>b__22_0(AmazonServiceResult<DescribeStreamRequest, DescribeStreamResponse> responseObject)
		{
		}
	}
}
namespace UnityEngine.UI.Extensions
{
	[Token(Token = "0x2000254")]
	public class BezierPath
	{
		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int SegmentsPerCurve;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float MINIMUM_SQR_DISTANCE;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float DIVISION_THRESHOLD;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vector2> controlPoints;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int curveCount;

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x10EA948", Offset = "0x10EA948", VA = "0x10EA948")]
		public BezierPath()
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x10EA9D8", Offset = "0x10EA9D8", VA = "0x10EA9D8")]
		public void SetControlPoints(List<Vector2> newControlPoints)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x10EAA90", Offset = "0x10EAA90", VA = "0x10EAA90")]
		public void SetControlPoints(Vector2[] newControlPoints)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x10EAB48", Offset = "0x10EAB48", VA = "0x10EAB48")]
		public List<Vector2> GetControlPoints()
		{
			return null;
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x10EAB50", Offset = "0x10EAB50", VA = "0x10EAB50")]
		public void Interpolate(List<Vector2> segmentPoints, float scale)
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x10EAFD4", Offset = "0x10EAFD4", VA = "0x10EAFD4")]
		public void SamplePoints(List<Vector2> sourcePoints, float minSqrDistance, float maxSqrDistance, float scale)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x10EB3A4", Offset = "0x10EB3A4", VA = "0x10EB3A4")]
		public Vector2 CalculateBezierPoint(int curveIndex, float t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x10EB680", Offset = "0x10EB680", VA = "0x10EB680")]
		public List<Vector2> GetDrawingPoints0()
		{
			return null;
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x10EB794", Offset = "0x10EB794", VA = "0x10EB794")]
		public List<Vector2> GetDrawingPoints1()
		{
			return null;
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x10EB9B4", Offset = "0x10EB9B4", VA = "0x10EB9B4")]
		public List<Vector2> GetDrawingPoints2()
		{
			return null;
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x10EBAA0", Offset = "0x10EBAA0", VA = "0x10EBAA0")]
		private List<Vector2> FindDrawingPoints(int curveIndex)
		{
			return null;
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x10EBBAC", Offset = "0x10EBBAC", VA = "0x10EBBAC")]
		private int FindDrawingPoints(int curveIndex, float t0, float t1, List<Vector2> pointList, int insertionIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x10EB50C", Offset = "0x10EB50C", VA = "0x10EB50C")]
		private Vector2 CalculateBezierPoint(float t, Vector2 p0, Vector2 p1, Vector2 p2, Vector2 p3)
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x2000255")]
	public class CableCurve
	{
		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Vector2 m_start;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector2 m_end;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_slack;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int m_steps;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_regen;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2[] emptyCurve;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector2[] points;

		[Token(Token = "0x17000171")]
		public bool regenPoints
		{
			[Token(Token = "0x6001309")]
			[Address(RVA = "0x18AC544", Offset = "0x18AC544", VA = "0x18AC544")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600130A")]
			[Address(RVA = "0x18AC54C", Offset = "0x18AC54C", VA = "0x18AC54C")]
			set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public Vector2 start
		{
			[Token(Token = "0x600130B")]
			[Address(RVA = "0x18AC558", Offset = "0x18AC558", VA = "0x18AC558")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600130C")]
			[Address(RVA = "0x18AC560", Offset = "0x18AC560", VA = "0x18AC560")]
			set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public Vector2 end
		{
			[Token(Token = "0x600130D")]
			[Address(RVA = "0x18AC604", Offset = "0x18AC604", VA = "0x18AC604")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600130E")]
			[Address(RVA = "0x18AC60C", Offset = "0x18AC60C", VA = "0x18AC60C")]
			set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public float slack
		{
			[Token(Token = "0x600130F")]
			[Address(RVA = "0x18AC6B0", Offset = "0x18AC6B0", VA = "0x18AC6B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001310")]
			[Address(RVA = "0x18AC6B8", Offset = "0x18AC6B8", VA = "0x18AC6B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public int steps
		{
			[Token(Token = "0x6001311")]
			[Address(RVA = "0x18AC74C", Offset = "0x18AC74C", VA = "0x18AC74C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001312")]
			[Address(RVA = "0x18AC754", Offset = "0x18AC754", VA = "0x18AC754")]
			set
			{
			}
		}

		[Token(Token = "0x17000176")]
		public Vector2 midPoint
		{
			[Token(Token = "0x6001313")]
			[Address(RVA = "0x18AC7E8", Offset = "0x18AC7E8", VA = "0x18AC7E8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x18AC968", Offset = "0x18AC968", VA = "0x18AC968")]
		public CableCurve()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x18ACA60", Offset = "0x18ACA60", VA = "0x18ACA60")]
		public CableCurve(Vector2[] inputPoints)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x18ACAE0", Offset = "0x18ACAE0", VA = "0x18ACAE0")]
		public CableCurve(CableCurve v)
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x18ACB48", Offset = "0x18ACB48", VA = "0x18ACB48")]
		public Vector2[] Points()
		{
			return null;
		}
	}
	[Token(Token = "0x2000256")]
	internal static class SetPropertyUtility
	{
		[Token(Token = "0x6001319")]
		[Address(RVA = "0x18AD064", Offset = "0x18AD064", VA = "0x18AD064")]
		public static bool SetColor(ref Color currentValue, Color newValue)
		{
			return default(bool);
		}

		[Token(Token = "0x600131A")]
		public static bool SetStruct<T>(ref T currentValue, T newValue) where T : struct
		{
			return default(bool);
		}

		[Token(Token = "0x600131B")]
		public static bool SetClass<T>(ref T currentValue, T newValue) where T : class
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000257")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB7126C", Offset = "0xB7126C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB7126C", Offset = "0xB7126C")]
	public class UILineRenderer : UIPrimitiveBase
	{
		[Token(Token = "0x2000665")]
		private enum SegmentType
		{
			[Token(Token = "0x40028E1")]
			Start,
			[Token(Token = "0x40028E2")]
			Middle,
			[Token(Token = "0x40028E3")]
			End,
			[Token(Token = "0x40028E4")]
			Full
		}

		[Token(Token = "0x2000666")]
		public enum JoinType
		{
			[Token(Token = "0x40028E6")]
			Bevel,
			[Token(Token = "0x40028E7")]
			Miter
		}

		[Token(Token = "0x2000667")]
		public enum BezierType
		{
			[Token(Token = "0x40028E9")]
			None,
			[Token(Token = "0x40028EA")]
			Quick,
			[Token(Token = "0x40028EB")]
			Basic,
			[Token(Token = "0x40028EC")]
			Improved,
			[Token(Token = "0x40028ED")]
			Catenary
		}

		[Token(Token = "0x4000FD6")]
		private const float MIN_MITER_JOIN = (float)Math.PI / 12f;

		[Token(Token = "0x4000FD7")]
		private const float MIN_BEVEL_NICE_JOIN = (float)Math.PI / 6f;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2 UV_TOP_LEFT;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector2 UV_BOTTOM_LEFT;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Vector2 UV_TOP_CENTER_LEFT;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Vector2 UV_TOP_CENTER_RIGHT;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Vector2 UV_BOTTOM_CENTER_LEFT;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Vector2 UV_BOTTOM_CENTER_RIGHT;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Vector2 UV_TOP_RIGHT;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Vector2 UV_BOTTOM_RIGHT;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Vector2[] startUvs;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Vector2[] middleUvs;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Vector2[] endUvs;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static Vector2[] fullUvs;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77AC0", Offset = "0xB77AC0")]
		internal Vector2[] m_points;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77B0C", Offset = "0xB77B0C")]
		internal float lineThickness;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77B58", Offset = "0xB77B58")]
		internal bool relativeSize;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77BA4", Offset = "0xB77BA4")]
		internal bool lineList;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEE")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77BF0", Offset = "0xB77BF0")]
		internal bool lineCaps;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77C3C", Offset = "0xB77C3C")]
		internal int bezierSegmentsPerCurve;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77C88", Offset = "0xB77C88")]
		public JoinType LineJoins;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB77CC0", Offset = "0xB77CC0")]
		public BezierType BezierMode;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[HideInInspector]
		public bool drivenExternally;

		[Token(Token = "0x17000177")]
		public float LineThickness
		{
			[Token(Token = "0x600131C")]
			[Address(RVA = "0x18AD0AC", Offset = "0x18AD0AC", VA = "0x18AD0AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600131D")]
			[Address(RVA = "0x18AD0B4", Offset = "0x18AD0B4", VA = "0x18AD0B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000178")]
		public bool RelativeSize
		{
			[Token(Token = "0x600131E")]
			[Address(RVA = "0x18AD0C8", Offset = "0x18AD0C8", VA = "0x18AD0C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600131F")]
			[Address(RVA = "0x18AD0D0", Offset = "0x18AD0D0", VA = "0x18AD0D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000179")]
		public bool LineList
		{
			[Token(Token = "0x6001320")]
			[Address(RVA = "0x18AD0E8", Offset = "0x18AD0E8", VA = "0x18AD0E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001321")]
			[Address(RVA = "0x18AD0F0", Offset = "0x18AD0F0", VA = "0x18AD0F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		public bool LineCaps
		{
			[Token(Token = "0x6001322")]
			[Address(RVA = "0x18AD108", Offset = "0x18AD108", VA = "0x18AD108")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001323")]
			[Address(RVA = "0x18AD110", Offset = "0x18AD110", VA = "0x18AD110")]
			set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public int BezierSegmentsPerCurve
		{
			[Token(Token = "0x6001324")]
			[Address(RVA = "0x18AD128", Offset = "0x18AD128", VA = "0x18AD128")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001325")]
			[Address(RVA = "0x18AD130", Offset = "0x18AD130", VA = "0x18AD130")]
			set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		public Vector2[] Points
		{
			[Token(Token = "0x6001326")]
			[Address(RVA = "0x18AD138", Offset = "0x18AD138", VA = "0x18AD138")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001327")]
			[Address(RVA = "0x18AD140", Offset = "0x18AD140", VA = "0x18AD140")]
			set
			{
			}
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x18AD164", Offset = "0x18AD164", VA = "0x18AD164", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x18AE348", Offset = "0x18AE348", VA = "0x18AE348")]
		private UIVertex[] CreateLineCap(Vector2 start, Vector2 end, SegmentType type)
		{
			return null;
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x18AE504", Offset = "0x18AE504", VA = "0x18AE504")]
		private UIVertex[] CreateLineSegment(Vector2 start, Vector2 end, SegmentType type)
		{
			return null;
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x18AEAB8", Offset = "0x18AEAB8", VA = "0x18AEAB8", Slot = "73")]
		protected override void GeneratedUVs()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x18AF0DC", Offset = "0x18AF0DC", VA = "0x18AF0DC", Slot = "74")]
		protected override void ResolutionToNativeSize(float distance)
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x18AF2B0", Offset = "0x18AF2B0", VA = "0x18AF2B0")]
		public UILineRenderer()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public enum ResolutionMode
	{
		[Token(Token = "0x4000FEE")]
		None,
		[Token(Token = "0x4000FEF")]
		PerSegment,
		[Token(Token = "0x4000FF0")]
		PerLine
	}
	[Token(Token = "0x2000259")]
	public class UIPrimitiveBase : MaskableGraphic, ILayoutElement, ICanvasRaycastFilter
	{
		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Material s_ETC1DefaultUI;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Sprite m_Sprite;

		[NonSerialized]
		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Sprite m_OverrideSprite;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal float m_EventAlphaThreshold;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private ResolutionMode m_improveResolution;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		protected float m_Resolution;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_useNativeSize;

		[Token(Token = "0x1700017D")]
		public Sprite sprite
		{
			[Token(Token = "0x600132E")]
			[Address(RVA = "0x18AF368", Offset = "0x18AF368", VA = "0x18AF368")]
			get
			{
				return null;
			}
			[Token(Token = "0x600132F")]
			[Address(RVA = "0x18AF370", Offset = "0x18AF370", VA = "0x18AF370")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public Sprite overrideSprite
		{
			[Token(Token = "0x6001330")]
			[Address(RVA = "0x18AF3FC", Offset = "0x18AF3FC", VA = "0x18AF3FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001331")]
			[Address(RVA = "0x18AF400", Offset = "0x18AF400", VA = "0x18AF400")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		protected Sprite activeSprite
		{
			[Token(Token = "0x6001332")]
			[Address(RVA = "0x18AF04C", Offset = "0x18AF04C", VA = "0x18AF04C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		public float eventAlphaThreshold
		{
			[Token(Token = "0x6001333")]
			[Address(RVA = "0x18AF48C", Offset = "0x18AF48C", VA = "0x18AF48C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001334")]
			[Address(RVA = "0x18AF494", Offset = "0x18AF494", VA = "0x18AF494")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public ResolutionMode ImproveResolution
		{
			[Token(Token = "0x6001335")]
			[Address(RVA = "0x18AF49C", Offset = "0x18AF49C", VA = "0x18AF49C")]
			get
			{
				return default(ResolutionMode);
			}
			[Token(Token = "0x6001336")]
			[Address(RVA = "0x18AF4A4", Offset = "0x18AF4A4", VA = "0x18AF4A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public float Resoloution
		{
			[Token(Token = "0x6001337")]
			[Address(RVA = "0x18AF4B8", Offset = "0x18AF4B8", VA = "0x18AF4B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001338")]
			[Address(RVA = "0x18AF4C0", Offset = "0x18AF4C0", VA = "0x18AF4C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public bool UseNativeSize
		{
			[Token(Token = "0x6001339")]
			[Address(RVA = "0x18AF4D4", Offset = "0x18AF4D4", VA = "0x18AF4D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600133A")]
			[Address(RVA = "0x18AF4DC", Offset = "0x18AF4DC", VA = "0x18AF4DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public static Material defaultETC1GraphicMaterial
		{
			[Token(Token = "0x600133C")]
			[Address(RVA = "0x18AF4F4", Offset = "0x18AF4F4", VA = "0x18AF4F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		public override Texture mainTexture
		{
			[Token(Token = "0x600133D")]
			[Address(RVA = "0x18AF5EC", Offset = "0x18AF5EC", VA = "0x18AF5EC", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		public bool hasBorder
		{
			[Token(Token = "0x600133E")]
			[Address(RVA = "0x18AF788", Offset = "0x18AF788", VA = "0x18AF788")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000187")]
		public float pixelsPerUnit
		{
			[Token(Token = "0x600133F")]
			[Address(RVA = "0x18AF198", Offset = "0x18AF198", VA = "0x18AF198")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000188")]
		public override Material material
		{
			[Token(Token = "0x6001340")]
			[Address(RVA = "0x18AF854", Offset = "0x18AF854", VA = "0x18AF854", Slot = "32")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001341")]
			[Address(RVA = "0x18AF9AC", Offset = "0x18AF9AC", VA = "0x18AF9AC", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public virtual float minWidth
		{
			[Token(Token = "0x6001348")]
			[Address(RVA = "0x18AF9C4", Offset = "0x18AF9C4", VA = "0x18AF9C4", Slot = "77")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018A")]
		public virtual float preferredWidth
		{
			[Token(Token = "0x6001349")]
			[Address(RVA = "0x18AF9CC", Offset = "0x18AF9CC", VA = "0x18AF9CC", Slot = "78")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018B")]
		public virtual float flexibleWidth
		{
			[Token(Token = "0x600134A")]
			[Address(RVA = "0x18AFAA4", Offset = "0x18AFAA4", VA = "0x18AFAA4", Slot = "79")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018C")]
		public virtual float minHeight
		{
			[Token(Token = "0x600134B")]
			[Address(RVA = "0x18AFAAC", Offset = "0x18AFAAC", VA = "0x18AFAAC", Slot = "80")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018D")]
		public virtual float preferredHeight
		{
			[Token(Token = "0x600134C")]
			[Address(RVA = "0x18AFAB4", Offset = "0x18AFAB4", VA = "0x18AFAB4", Slot = "81")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018E")]
		public virtual float flexibleHeight
		{
			[Token(Token = "0x600134D")]
			[Address(RVA = "0x18AFB8C", Offset = "0x18AFB8C", VA = "0x18AFB8C", Slot = "82")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018F")]
		public virtual int layoutPriority
		{
			[Token(Token = "0x600134E")]
			[Address(RVA = "0x18AFB94", Offset = "0x18AFB94", VA = "0x18AFB94", Slot = "83")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x18AF338", Offset = "0x18AF338", VA = "0x18AF338")]
		protected UIPrimitiveBase()
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x18AE87C", Offset = "0x18AE87C", VA = "0x18AE87C")]
		protected UIVertex[] SetVbo(Vector2[] vertices, Vector2[] uvs)
		{
			return null;
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x18ADF44", Offset = "0x18ADF44", VA = "0x18ADF44")]
		protected Vector2[] IncreaseResolution(Vector2[] input)
		{
			return null;
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x18AF9B4", Offset = "0x18AF9B4", VA = "0x18AF9B4", Slot = "73")]
		protected virtual void GeneratedUVs()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x18AF9B8", Offset = "0x18AF9B8", VA = "0x18AF9B8", Slot = "74")]
		protected virtual void ResolutionToNativeSize(float distance)
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x18AF9BC", Offset = "0x18AF9BC", VA = "0x18AF9BC", Slot = "75")]
		public virtual void CalculateLayoutInputHorizontal()
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x18AF9C0", Offset = "0x18AF9C0", VA = "0x18AF9C0", Slot = "76")]
		public virtual void CalculateLayoutInputVertical()
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x18AFB9C", Offset = "0x18AFB9C", VA = "0x18AFB9C", Slot = "84")]
		public virtual bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x18AFF80", Offset = "0x18AFF80", VA = "0x18AFF80")]
		private Vector2 MapCoordinate(Vector2 local, Rect rect)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x18B0008", Offset = "0x18B0008", VA = "0x18B0008")]
		private Vector4 GetAdjustedBorders(Vector4 border, Rect rect)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x18B0124", Offset = "0x18B0124", VA = "0x18B0124", Slot = "5")]
		protected override void OnEnable()
		{
		}
	}
}
namespace AttentionLab
{
	[Token(Token = "0x200025A")]
	public class PointerCrosshair : MonoBehaviour
	{
		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB77D48", Offset = "0xB77D48")]
		public MeshRenderer _meshRenderer;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB77D80", Offset = "0xB77D80")]
		public float _scaleFactor;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _hitPointOffsetZ;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _scaleVector;

		[Token(Token = "0x17000190")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001354")]
			[Address(RVA = "0x10BEBF4", Offset = "0x10BEBF4", VA = "0x10BEBF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x10BEBFC", Offset = "0x10BEBFC", VA = "0x10BEBFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x10BEC50", Offset = "0x10BEC50", VA = "0x10BEC50")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x10BEC84", Offset = "0x10BEC84", VA = "0x10BEC84")]
		public void MoveToTarget(Vector3 hitPoint, Camera camera)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x10BEE9C", Offset = "0x10BEE9C", VA = "0x10BEE9C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x10BEF2C", Offset = "0x10BEF2C", VA = "0x10BEF2C")]
		public Vector3 GetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x10BEF58", Offset = "0x10BEF58", VA = "0x10BEF58")]
		public PointerCrosshair()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class PointerHitable : MonoBehaviour
	{
		[Token(Token = "0x2000668")]
		public delegate void OnHoverEnter(PointerHitable sender);

		[Token(Token = "0x2000669")]
		public delegate void OnHoverExit(PointerHitable sender);

		[Token(Token = "0x200066A")]
		public delegate void OnClick(PointerHitable sender);

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB77DB8", Offset = "0xB77DB8")]
		public PointerHitType _type;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnHoverEnter HoverEntered;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnHoverExit HoverExited;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OnClick Clicked;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77DF0", Offset = "0xB77DF0")]
		private bool <HoverEnabled>k__BackingField;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77E00", Offset = "0xB77E00")]
		private bool <ClickEnabled>k__BackingField;

		[Token(Token = "0x17000191")]
		public PointerHitType Type
		{
			[Token(Token = "0x600135B")]
			[Address(RVA = "0x10BEF70", Offset = "0x10BEF70", VA = "0x10BEF70")]
			get
			{
				return default(PointerHitType);
			}
		}

		[Token(Token = "0x17000192")]
		public bool HoverEnabled
		{
			[Token(Token = "0x600135C")]
			[Address(RVA = "0x10BEF78", Offset = "0x10BEF78", VA = "0x10BEF78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87184", Offset = "0xB87184")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600135D")]
			[Address(RVA = "0x10BEF80", Offset = "0x10BEF80", VA = "0x10BEF80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87194", Offset = "0xB87194")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public bool ClickEnabled
		{
			[Token(Token = "0x600135E")]
			[Address(RVA = "0x10BEF8C", Offset = "0x10BEF8C", VA = "0x10BEF8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB871A4", Offset = "0xB871A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600135F")]
			[Address(RVA = "0x10BEF94", Offset = "0x10BEF94", VA = "0x10BEF94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB871B4", Offset = "0xB871B4")]
			set
			{
			}
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x10BEFA0", Offset = "0x10BEFA0", VA = "0x10BEFA0")]
		public void HoverEnter()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x10BF36C", Offset = "0x10BF36C", VA = "0x10BF36C")]
		public void HoverExit()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x10BF738", Offset = "0x10BF738", VA = "0x10BF738")]
		public void Click()
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x10BFB04", Offset = "0x10BFB04", VA = "0x10BFB04")]
		public PointerHitable()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public enum PointerHitType
	{
		[Token(Token = "0x4001003")]
		Default,
		[Token(Token = "0x4001004")]
		Interactable,
		[Token(Token = "0x4001005")]
		UI
	}
	[Token(Token = "0x200025D")]
	public class PointerLine : MonoBehaviour
	{
		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB77E10", Offset = "0xB77E10")]
		public LineRenderer _lineRenderer;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB77E48", Offset = "0xB77E48")]
		public float _offsetZ;

		[Token(Token = "0x17000194")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001364")]
			[Address(RVA = "0x10BFBD4", Offset = "0x10BFBD4", VA = "0x10BFBD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x10BFBF8", Offset = "0x10BFBF8", VA = "0x10BFBF8")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x10BFC2C", Offset = "0x10BFC2C", VA = "0x10BFC2C")]
		public void UpdateTarget(Vector3 direction)
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x10BFCD4", Offset = "0x10BFCD4", VA = "0x10BFCD4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x10BFD58", Offset = "0x10BFD58", VA = "0x10BFD58")]
		public PointerLine()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class AppConfig : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200066B")]
		public class LocalGameConfig
		{
			[Token(Token = "0x40028EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB82F40", Offset = "0xB82F40")]
			[SerializeField]
			private AttentionLab.Enums.GameType _gameType;

			[Token(Token = "0x40028EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			private bool _override;

			[Token(Token = "0x40028F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB82F9C", Offset = "0xB82F9C")]
			[SerializeField]
			private int _startLevel;

			[Token(Token = "0x40028F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private int _timesPlayed;

			[Token(Token = "0x40028F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private bool _playTutorial;

			[Token(Token = "0x40028F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB83008", Offset = "0xB83008")]
			[SerializeField]
			private bool _featureInGameLibrary;

			[Token(Token = "0x170004FB")]
			public AttentionLab.Enums.GameType GameType
			{
				[Token(Token = "0x6002D14")]
				[Address(RVA = "0xEF9A80", Offset = "0xEF9A80", VA = "0xEF9A80")]
				get
				{
					return default(AttentionLab.Enums.GameType);
				}
			}

			[Token(Token = "0x170004FC")]
			public bool OverrideGameProperties
			{
				[Token(Token = "0x6002D15")]
				[Address(RVA = "0xEF9A88", Offset = "0xEF9A88", VA = "0xEF9A88")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004FD")]
			public int StartLevel
			{
				[Token(Token = "0x6002D16")]
				[Address(RVA = "0xEF9A90", Offset = "0xEF9A90", VA = "0xEF9A90")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170004FE")]
			public bool PlayTutorial
			{
				[Token(Token = "0x6002D17")]
				[Address(RVA = "0xEF9A98", Offset = "0xEF9A98", VA = "0xEF9A98")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004FF")]
			public int TimesPlayed
			{
				[Token(Token = "0x6002D18")]
				[Address(RVA = "0xEF9AA0", Offset = "0xEF9AA0", VA = "0xEF9AA0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000500")]
			public bool FeatureInGameLibrary
			{
				[Token(Token = "0x6002D19")]
				[Address(RVA = "0xEF9AA8", Offset = "0xEF9AA8", VA = "0xEF9AA8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002D1A")]
			[Address(RVA = "0xEF9AB0", Offset = "0xEF9AB0", VA = "0xEF9AB0")]
			public LocalGameConfig()
			{
			}
		}

		[Token(Token = "0x200066C")]
		public enum BuildType
		{
			[Token(Token = "0x40028F5")]
			Debug,
			[Token(Token = "0x40028F6")]
			Staging,
			[Token(Token = "0x40028F7")]
			Production
		}

		[Token(Token = "0x200066D")]
		public enum GameListFillType
		{
			[Token(Token = "0x40028F9")]
			LocalGameConfig,
			[Token(Token = "0x40028FA")]
			JSON
		}

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB77E80", Offset = "0xB77E80")]
		[SerializeField]
		private BuildType _buildType;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool _isLocal;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		private bool _allowQuit;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB77EEC", Offset = "0xB77EEC")]
		[SerializeField]
		private GameListFillType _gameListFillType;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB77F38", Offset = "0xB77F38")]
		[SerializeField]
		private LocalGameConfig[] _availableGames;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77F84", Offset = "0xB77F84")]
		private static bool <AllowQuit>k__BackingField;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77F94", Offset = "0xB77F94")]
		private static LocalGameConfig[] <AvailableGames>k__BackingField;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static BuildType _selectedBuildType;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB77FA4", Offset = "0xB77FA4")]
		private static AppConfig <Instance>k__BackingField;

		[Token(Token = "0x17000195")]
		public static bool IsDebugBuild
		{
			[Token(Token = "0x6001369")]
			[Address(RVA = "0xEF95B8", Offset = "0xEF95B8", VA = "0xEF95B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000196")]
		public static bool IsStagingBuild
		{
			[Token(Token = "0x600136A")]
			[Address(RVA = "0xEF9618", Offset = "0xEF9618", VA = "0xEF9618")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000197")]
		public bool IsLocal
		{
			[Token(Token = "0x600136B")]
			[Address(RVA = "0xEF9670", Offset = "0xEF9670", VA = "0xEF9670")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600136C")]
			[Address(RVA = "0xEF9678", Offset = "0xEF9678", VA = "0xEF9678")]
			private set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public bool PopulateWithJson
		{
			[Token(Token = "0x600136D")]
			[Address(RVA = "0xEF9684", Offset = "0xEF9684", VA = "0xEF9684")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600136E")]
			[Address(RVA = "0xEF9694", Offset = "0xEF9694", VA = "0xEF9694")]
			private set
			{
			}
		}

		[Token(Token = "0x17000199")]
		private bool ShowAvailableGameConfig
		{
			[Token(Token = "0x600136F")]
			[Address(RVA = "0xEF96B0", Offset = "0xEF96B0", VA = "0xEF96B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019A")]
		public static bool AllowQuit
		{
			[Token(Token = "0x6001370")]
			[Address(RVA = "0xEF96D4", Offset = "0xEF96D4", VA = "0xEF96D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB871C4", Offset = "0xB871C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001371")]
			[Address(RVA = "0xEF9724", Offset = "0xEF9724", VA = "0xEF9724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB871D4", Offset = "0xB871D4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public static LocalGameConfig[] AvailableGames
		{
			[Token(Token = "0x6001372")]
			[Address(RVA = "0xEF977C", Offset = "0xEF977C", VA = "0xEF977C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB871E4", Offset = "0xB871E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001373")]
			[Address(RVA = "0xEF97CC", Offset = "0xEF97CC", VA = "0xEF97CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB871F4", Offset = "0xB871F4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		public static AppConfig Instance
		{
			[Token(Token = "0x6001374")]
			[Address(RVA = "0xEF9820", Offset = "0xEF9820", VA = "0xEF9820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87204", Offset = "0xB87204")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001375")]
			[Address(RVA = "0xEF9870", Offset = "0xEF9870", VA = "0xEF9870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87214", Offset = "0xB87214")]
			private set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public static BuildType SelectedBuildType
		{
			[Token(Token = "0x6001376")]
			[Address(RVA = "0xEF98C4", Offset = "0xEF98C4", VA = "0xEF98C4")]
			get
			{
				return default(BuildType);
			}
			[Token(Token = "0x6001377")]
			[Address(RVA = "0xEF9914", Offset = "0xEF9914", VA = "0xEF9914")]
			set
			{
			}
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xEF9968", Offset = "0xEF9968", VA = "0xEF9968")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xEF9A78", Offset = "0xEF9A78", VA = "0xEF9A78")]
		public AppConfig()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class AppDebug : MonoBehaviour
	{
		[Token(Token = "0x600137A")]
		[Address(RVA = "0xEF9AB8", Offset = "0xEF9AB8", VA = "0xEF9AB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xEF9B18", Offset = "0xEF9B18", VA = "0xEF9B18")]
		private void Enable(bool enable)
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xEF9C4C", Offset = "0xEF9C4C", VA = "0xEF9C4C")]
		public AppDebug()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public static class AppGlobals
	{
		[Token(Token = "0x4001011")]
		public const string OCULUS_APP_ID = "3258667917506550";

		[Token(Token = "0x4001012")]
		public const string VIVEPORT_ID = "1bfbf7c4-0846-4268-bc4a-b58203de152a";

		[Token(Token = "0x4001013")]
		public const string VIVEPORT_KEY = "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCfQBF6XWCHCWyjs/bB7di1BaYO3E3/0u7XGdbEqT9e87fAdRDFVzKrjXiNsuwHHtNXFYsN5I9uDr02hvWa4plevJClMvfWLMXYGZ+y9+MkkeyhyaenZ/IOvh+Bb3uVdBYZQmAszYbU2BO2QV1SoY1W2r4ZArWjenxvMcI0Sh0OQwIDAQAB";

		[Token(Token = "0x4001014")]
		public const string PICO_APP_ID = "f71c6e81594df0b62ebc8cc2df345611";
	}
	[Token(Token = "0x2000261")]
	public class AppManager : MonoBehaviour
	{
		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool _isPaused;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _isFocused;

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xEF6654", Offset = "0xEF6654", VA = "0xEF6654", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xEF9C5C", Offset = "0xEF9C5C", VA = "0xEF9C5C")]
		private void Start()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xEF9EA0", Offset = "0xEF9EA0", VA = "0xEF9EA0")]
		private void EntitlementChecker_EntitlementChecked(EntitlementChecker sender, bool userEntitled)
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xEF9D9C", Offset = "0xEF9D9C", VA = "0xEF9D9C")]
		private void Init()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xEF9EB0", Offset = "0xEF9EB0", VA = "0xEF9EB0")]
		private void ClearOldPrefs()
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xEF9F2C", Offset = "0xEF9F2C", VA = "0xEF9F2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xEFA018", Offset = "0xEFA018", VA = "0xEFA018")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xEFA028", Offset = "0xEFA028", VA = "0xEFA028")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xEF6A64", Offset = "0xEF6A64", VA = "0xEF6A64", Slot = "5")]
		public virtual void StartSession()
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xEFA078", Offset = "0xEFA078", VA = "0xEFA078", Slot = "6")]
		protected virtual void Pause(bool pause)
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xEFA084", Offset = "0xEFA084", VA = "0xEFA084", Slot = "7")]
		protected virtual void Focus(bool focus)
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xEFA18C", Offset = "0xEFA18C", VA = "0xEFA18C")]
		public static void EnableUI(bool enable)
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xEF76BC", Offset = "0xEF76BC", VA = "0xEF76BC")]
		protected static void EnablePlayerInteraction(bool enable)
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xEFA1E8", Offset = "0xEFA1E8", VA = "0xEFA1E8")]
		private void InputSystem_MenuPressed(InputSystem sender)
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xEFA200", Offset = "0xEFA200", VA = "0xEFA200")]
		private void InputSystem_SystemPressed(InputSystem sender)
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xEF9C54", Offset = "0xEF9C54", VA = "0xEF9C54")]
		private void RegisterToPlatformSpecificEvents()
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xEF9F98", Offset = "0xEF9F98", VA = "0xEF9F98")]
		private bool HasPlatformFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xEF7734", Offset = "0xEF7734", VA = "0xEF7734")]
		public AppManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000262")]
	public class SubtitledAudio
	{
		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip audioClip;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x1052D30", Offset = "0x1052D30", VA = "0x1052D30")]
		public SubtitledAudio(string sub, AudioClip dub)
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x1052D68", Offset = "0x1052D68", VA = "0x1052D68")]
		public SubtitledAudio(SubtitledAudio toClone)
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class SubtitledAudioPlayer : MonoBehaviour
	{
		[Token(Token = "0x200066E")]
		public delegate void AudioCompleted();

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB77FB4", Offset = "0xB77FB4")]
		[SerializeField]
		private AudioSource _robotAudioSource;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TutorialSubtitles _subtitles;

		[Token(Token = "0x400101B")]
		private const float Delay = 1f;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SubtitledAudio _subtitledAudio;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioCompleted _callback;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float _startTime;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float _endTime;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _subtitlesEnbaled;

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x1052DAC", Offset = "0x1052DAC", VA = "0x1052DAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x1052F38", Offset = "0x1052F38", VA = "0x1052F38")]
		public void Play(SubtitledAudio audio, AudioCompleted callback)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x105320C", Offset = "0x105320C", VA = "0x105320C")]
		public void Pause(bool paused)
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x105325C", Offset = "0x105325C", VA = "0x105325C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x1052F04", Offset = "0x1052F04", VA = "0x1052F04")]
		private void ExecuteCallback()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x1053598", Offset = "0x1053598", VA = "0x1053598")]
		public static bool RobotIsSpeaking()
		{
			return default(bool);
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x10535F8", Offset = "0x10535F8", VA = "0x10535F8")]
		public SubtitledAudioPlayer()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class ControllerVibrationManager : MonoBehaviour
	{
		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ControllerVibrationManager singleton;

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xF03B48", Offset = "0xF03B48", VA = "0xF03B48")]
		private void Start()
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xF03C48", Offset = "0xF03C48", VA = "0xF03C48")]
		public void TriggerVibration(int iteration, int frequency, int strength, OVRInput.Controller controller)
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xF03D90", Offset = "0xF03D90", VA = "0xF03D90")]
		public ControllerVibrationManager()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class DeviceController : MonoBehaviour
	{
		[Token(Token = "0x200066F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72954", Offset = "0xB72954")]
		private sealed class <OVRFade>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4 startScale;

			[Token(Token = "0x40028FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector4 endScale;

			[Token(Token = "0x40028FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float startTime;

			[Token(Token = "0x4002900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float duration;

			[Token(Token = "0x17000501")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D22")]
				[Address(RVA = "0xF05ADC", Offset = "0xF05ADC", VA = "0xF05ADC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000502")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D24")]
				[Address(RVA = "0xF05B48", Offset = "0xF05B48", VA = "0xF05B48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D1F")]
			[Address(RVA = "0xF056C0", Offset = "0xF056C0", VA = "0xF056C0")]
			[DebuggerHidden]
			public <OVRFade>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002D20")]
			[Address(RVA = "0xF0586C", Offset = "0xF0586C", VA = "0xF0586C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D21")]
			[Address(RVA = "0xF05870", Offset = "0xF05870", VA = "0xF05870", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D23")]
			[Address(RVA = "0xF05AE4", Offset = "0xF05AE4", VA = "0xF05AE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72964", Offset = "0xB72964")]
		private sealed class <>c
		{
			[Token(Token = "0x4002901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__8_0;

			[Token(Token = "0x6002D26")]
			[Address(RVA = "0xF057A0", Offset = "0xF057A0", VA = "0xF057A0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002D27")]
			[Address(RVA = "0xF057A8", Offset = "0xF057A8", VA = "0xF057A8")]
			internal bool <SetMaximumFrequency>b__8_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000671")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72974", Offset = "0xB72974")]
		private sealed class <SetMaximumFrequency>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000503")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D2B")]
				[Address(RVA = "0xF05F00", Offset = "0xF05F00", VA = "0xF05F00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000504")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D2D")]
				[Address(RVA = "0xF05F6C", Offset = "0xF05F6C", VA = "0xF05F6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D28")]
			[Address(RVA = "0xF056EC", Offset = "0xF056EC", VA = "0xF056EC")]
			[DebuggerHidden]
			public <SetMaximumFrequency>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002D29")]
			[Address(RVA = "0xF05B50", Offset = "0xF05B50", VA = "0xF05B50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D2A")]
			[Address(RVA = "0xF05B54", Offset = "0xF05B54", VA = "0xF05B54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D2C")]
			[Address(RVA = "0xF05F08", Offset = "0xF05F08", VA = "0xF05F08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeTextureResolutionScale;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public OVRManager.FixedFoveatedRenderingLevel tiledMultiResLevel;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fadeIn;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fadeTime;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int gpuLevel;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int cpuLevel;

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xF05520", Offset = "0xF05520", VA = "0xF05520")]
		private void Start()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xF05608", Offset = "0xF05608", VA = "0xF05608")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB87224", Offset = "0xB87224")]
		private IEnumerator OVRFade(float startTime, float duration, Vector4 startScale, Vector4 endScale)
		{
			return null;
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xF055A8", Offset = "0xF055A8", VA = "0xF055A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB87288", Offset = "0xB87288")]
		private IEnumerator SetMaximumFrequency()
		{
			return null;
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xF05718", Offset = "0xF05718", VA = "0xF05718")]
		public DeviceController()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class HandController : MonoBehaviour
	{
		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78010", Offset = "0xB78010")]
		[SerializeField]
		public HandControllerAttacher _attacher;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UiHandControllerPointer _pointer;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Camera _interactionCamera;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7807C", Offset = "0xB7807C")]
		[SerializeField]
		private ControllerType _controllerType;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB780C8", Offset = "0xB780C8")]
		[SerializeField]
		private GameObject _uiPointerCosmeticPrefab;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78114", Offset = "0xB78114")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78124", Offset = "0xB78124")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78134", Offset = "0xB78134")]
		private bool <IsPointerVisible>k__BackingField;

		[Token(Token = "0x1700019E")]
		public ControllerType ControllerType
		{
			[Token(Token = "0x600139F")]
			[Address(RVA = "0x146A1EC", Offset = "0x146A1EC", VA = "0x146A1EC")]
			get
			{
				return default(ControllerType);
			}
		}

		[Token(Token = "0x1700019F")]
		public HandControllerAttacher Attacher
		{
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0x146A1F4", Offset = "0x146A1F4", VA = "0x146A1F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		public HandControllerAttachment Attachment
		{
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0x146A1FC", Offset = "0x146A1FC", VA = "0x146A1FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		public UiHandControllerPointer Pointer
		{
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0x146A27C", Offset = "0x146A27C", VA = "0x146A27C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		public Camera InteractionCamera
		{
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0x146A284", Offset = "0x146A284", VA = "0x146A284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		public bool IsActive
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x146A28C", Offset = "0x146A28C", VA = "0x146A28C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB872EC", Offset = "0xB872EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0x146A294", Offset = "0x146A294", VA = "0x146A294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB872FC", Offset = "0xB872FC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public bool IsPaused
		{
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0x146A2A0", Offset = "0x146A2A0", VA = "0x146A2A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8730C", Offset = "0xB8730C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0x146A2A8", Offset = "0x146A2A8", VA = "0x146A2A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8731C", Offset = "0xB8731C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public bool IsPointerVisible
		{
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0x146A2B4", Offset = "0x146A2B4", VA = "0x146A2B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8732C", Offset = "0xB8732C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A9")]
			[Address(RVA = "0x146A2BC", Offset = "0x146A2BC", VA = "0x146A2BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8733C", Offset = "0xB8733C")]
			set
			{
			}
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x146A2C8", Offset = "0x146A2C8", VA = "0x146A2C8")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x146A358", Offset = "0x146A358", VA = "0x146A358")]
		protected void Start()
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x146A35C", Offset = "0x146A35C", VA = "0x146A35C")]
		private void InstantiateCosmeticPrefabToPointer()
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x146A528", Offset = "0x146A528", VA = "0x146A528")]
		public void Show(bool enable)
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x146A55C", Offset = "0x146A55C", VA = "0x146A55C")]
		public void SetActiveState(bool activate)
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x146A6D4", Offset = "0x146A6D4", VA = "0x146A6D4")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x146A700", Offset = "0x146A700", VA = "0x146A700")]
		public HandController()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class HandControllerAttacher : MonoBehaviour
	{
		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78144", Offset = "0xB78144")]
		[SerializeField]
		private Transform _attachRoot;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ControllerType _controllerType;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<HandControllerAttachment> _attachments;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78190", Offset = "0xB78190")]
		private bool <IsEnabled>k__BackingField;

		[Token(Token = "0x170001A6")]
		public bool HasAttachments
		{
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0x146A710", Offset = "0x146A710", VA = "0x146A710")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A7")]
		public Transform Root
		{
			[Token(Token = "0x60013B2")]
			[Address(RVA = "0x146A76C", Offset = "0x146A76C", VA = "0x146A76C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		public HandControllerAttachment Attachment
		{
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x146A214", Offset = "0x146A214", VA = "0x146A214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		public bool IsEnabled
		{
			[Token(Token = "0x60013B4")]
			[Address(RVA = "0x146A774", Offset = "0x146A774", VA = "0x146A774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8734C", Offset = "0xB8734C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x146A77C", Offset = "0x146A77C", VA = "0x146A77C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8735C", Offset = "0xB8735C")]
			private set
			{
			}
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x146A5B0", Offset = "0x146A5B0", VA = "0x146A5B0")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x146AAC4", Offset = "0x146AAC4", VA = "0x146AAC4")]
		public void SetControllerType(ControllerType controllerType)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x146AACC", Offset = "0x146AACC", VA = "0x146AACC")]
		public void Attach(HandControllerAttachment attachment)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x146AD88", Offset = "0x146AD88", VA = "0x146AD88")]
		public void Detach(HandControllerAttachment attachment)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x146AEE8", Offset = "0x146AEE8", VA = "0x146AEE8")]
		public void ReassignAttachments(HandControllerAttacher attacher)
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x146AFB4", Offset = "0x146AFB4", VA = "0x146AFB4")]
		public void DetachAll()
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x146B064", Offset = "0x146B064", VA = "0x146B064")]
		public bool HasAttachment(HandControllerAttachment attachment)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x146B0EC", Offset = "0x146B0EC", VA = "0x146B0EC")]
		private void Attachment_EnableStatusChanged(HandControllerAttachment sender, bool enabled)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x146B0F8", Offset = "0x146B0F8", VA = "0x146B0F8")]
		public HandControllerAttacher()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class HandControllerAttachment : MonoBehaviour
	{
		[Token(Token = "0x2000672")]
		public delegate void OnEnableStatusChanged(HandControllerAttachment sender, bool enabled);

		[Token(Token = "0x2000673")]
		public delegate void OnInteractionStatusChanged(HandControllerAttachment sender, bool enabled);

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OnEnableStatusChanged EnableStatusChanged;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnInteractionStatusChanged InteractionStatusChanged;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<GameObject> _disableObjects;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB781B0", Offset = "0xB781B0")]
		private bool <IsAttached>k__BackingField;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB781C0", Offset = "0xB781C0")]
		private bool <InteractionIsEnabled>k__BackingField;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB781D0", Offset = "0xB781D0")]
		private ControllerType? <CurrentController>k__BackingField;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _initialParent;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _initialPosition;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion _initialRotation;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Renderer> _controllerRenderers;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB781E0", Offset = "0xB781E0")]
		private List<GameObject> <DisableExternalObjects>k__BackingField;

		[Token(Token = "0x170001AA")]
		public bool IsEnabled
		{
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0x146B100", Offset = "0x146B100", VA = "0x146B100")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AB")]
		public bool IsAttached
		{
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x146B124", Offset = "0x146B124", VA = "0x146B124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8736C", Offset = "0xB8736C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0x146B12C", Offset = "0x146B12C", VA = "0x146B12C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8737C", Offset = "0xB8737C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public bool InteractionIsEnabled
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0x146B138", Offset = "0x146B138", VA = "0x146B138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8738C", Offset = "0xB8738C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0x146B140", Offset = "0x146B140", VA = "0x146B140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8739C", Offset = "0xB8739C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public ControllerType? CurrentController
		{
			[Token(Token = "0x60013C4")]
			[Address(RVA = "0x146B14C", Offset = "0x146B14C", VA = "0x146B14C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB873AC", Offset = "0xB873AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013C5")]
			[Address(RVA = "0x146B154", Offset = "0x146B154", VA = "0x146B154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB873BC", Offset = "0xB873BC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public List<GameObject> DisableExternalObjects
		{
			[Token(Token = "0x60013C6")]
			[Address(RVA = "0x146B15C", Offset = "0x146B15C", VA = "0x146B15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB873CC", Offset = "0xB873CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013C7")]
			[Address(RVA = "0x146B164", Offset = "0x146B164", VA = "0x146B164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB873DC", Offset = "0xB873DC")]
			set
			{
			}
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x146A788", Offset = "0x146A788", VA = "0x146A788")]
		public void Enable(bool enable, bool forceEnabledPaused = false)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x146B684", Offset = "0x146B684", VA = "0x146B684")]
		public void EnableInteraction(bool enable)
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x146ABE0", Offset = "0x146ABE0", VA = "0x146ABE0")]
		public void Attached(Transform parent, ControllerType controllerType)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x146AE6C", Offset = "0x146AE6C", VA = "0x146AE6C")]
		public void Released()
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x146B16C", Offset = "0x146B16C", VA = "0x146B16C")]
		private void GetAllControllerRendererReferences()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x146BA84", Offset = "0x146BA84", VA = "0x146BA84")]
		public HandControllerAttachment()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class HandControllerManager : MonoBehaviour
	{
		[Token(Token = "0x2000674")]
		public delegate void OnActiveControllerChanged(HandControllerManager sender, HandController lastController, HandController currentController);

		[Token(Token = "0x2000675")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72984", Offset = "0xB72984")]
		private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandControllerManager <>4__this;

			[Token(Token = "0x17000505")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D3D")]
				[Address(RVA = "0x146D4FC", Offset = "0x146D4FC", VA = "0x146D4FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000506")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D3F")]
				[Address(RVA = "0x146D568", Offset = "0x146D568", VA = "0x146D568", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D3A")]
			[Address(RVA = "0x146BF5C", Offset = "0x146BF5C", VA = "0x146BF5C")]
			[DebuggerHidden]
			public <Start>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002D3B")]
			[Address(RVA = "0x146D03C", Offset = "0x146D03C", VA = "0x146D03C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D3C")]
			[Address(RVA = "0x146D040", Offset = "0x146D040", VA = "0x146D040", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D3E")]
			[Address(RVA = "0x146D504", Offset = "0x146D504", VA = "0x146D504", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB781F0", Offset = "0xB781F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB781F0", Offset = "0xB781F0")]
		[SerializeField]
		private HandController[] _controllers;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputModule _inputModule;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78270", Offset = "0xB78270")]
		[SerializeField]
		private DeviceFamily _deviceFamily;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IControllerHelper _controllerHelper;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ControllerActivationType _activationType;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private ControllerActivationType _lastActivationType;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HandController _activeController;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isPaused;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HandControllerManager _instance;

		[Token(Token = "0x170001AF")]
		public HandController[] Controllers
		{
			[Token(Token = "0x60013D0")]
			[Address(RVA = "0x146BDA4", Offset = "0x146BDA4", VA = "0x146BDA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		public static HandControllerManager Instance
		{
			[Token(Token = "0x60013D1")]
			[Address(RVA = "0x146BDAC", Offset = "0x146BDAC", VA = "0x146BDAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400002E")]
		public event OnActiveControllerChanged ActiveControllerChanged
		{
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0x146BC5C", Offset = "0x146BC5C", VA = "0x146BC5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB873EC", Offset = "0xB873EC")]
			add
			{
			}
			[Token(Token = "0x60013CF")]
			[Address(RVA = "0x146BD00", Offset = "0x146BD00", VA = "0x146BD00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB873FC", Offset = "0xB873FC")]
			remove
			{
			}
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x146BEE8", Offset = "0x146BEE8", VA = "0x146BEE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8740C", Offset = "0xB8740C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x146BF88", Offset = "0x146BF88", VA = "0x146BF88")]
		private bool AreControllersReady()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x146C1D8", Offset = "0x146C1D8", VA = "0x146C1D8")]
		public void ShowController(bool enable, ControllerType controllerType)
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x146C338", Offset = "0x146C338", VA = "0x146C338")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x146C568", Offset = "0x146C568", VA = "0x146C568")]
		public void EnablePointer(bool enable)
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x146C6C4", Offset = "0x146C6C4", VA = "0x146C6C4")]
		public HandController GetActiveController()
		{
			return null;
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x146C294", Offset = "0x146C294", VA = "0x146C294")]
		public HandController GetController(ControllerType controllerType)
		{
			return null;
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x146C74C", Offset = "0x146C74C", VA = "0x146C74C")]
		public ControllerActivationType GetActivationType()
		{
			return default(ControllerActivationType);
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x146C434", Offset = "0x146C434", VA = "0x146C434")]
		public void SetActivationType(ControllerActivationType activationType)
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x146C9F8", Offset = "0x146C9F8", VA = "0x146C9F8")]
		public void ChangeActiveController(ControllerType controllerType)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x146C80C", Offset = "0x146C80C", VA = "0x146C80C")]
		private void SetActiveController(ControllerType controllerType)
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x146C754", Offset = "0x146C754", VA = "0x146C754")]
		private void ActivateControllers(bool isActive)
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x146C914", Offset = "0x146C914", VA = "0x146C914")]
		private void DisableControllers()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x146C158", Offset = "0x146C158", VA = "0x146C158")]
		private IControllerHelper GetHelper()
		{
			return null;
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x146D008", Offset = "0x146D008", VA = "0x146D008")]
		public Vector3 GetCrosshairPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x146D034", Offset = "0x146D034", VA = "0x146D034")]
		public HandControllerManager()
		{
		}
	}
	[Token(Token = "0x200026A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB712F4", Offset = "0xB712F4")]
	public class HandControllerRaycaster : MonoBehaviour
	{
		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CanvasRaycaster _canvasRaycaster;

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x146D5BC", Offset = "0x146D5BC", VA = "0x146D5BC")]
		private void Start()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x146D7C4", Offset = "0x146D7C4", VA = "0x146D7C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x146D8D4", Offset = "0x146D8D4", VA = "0x146D8D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x146DA40", Offset = "0x146DA40", VA = "0x146DA40")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x146DB00", Offset = "0x146DB00", VA = "0x146DB00")]
		private void ControllerManager_ActiveControllerChanged(HandControllerManager sender, HandController lastController, HandController currentController)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x146D714", Offset = "0x146D714", VA = "0x146D714")]
		private void SetEmitter(HandController controller)
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x146D9E0", Offset = "0x146D9E0", VA = "0x146D9E0")]
		private CanvasRaycaster GetRaycaster()
		{
			return null;
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x146DB08", Offset = "0x146DB08", VA = "0x146DB08")]
		public HandControllerRaycaster()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class ControllerVive : HandController
	{
		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xF03D98", Offset = "0xF03D98", VA = "0xF03D98")]
		public ControllerVive()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public interface IControllerHelper
	{
		[Token(Token = "0x60013EB")]
		ControllerType GetActive();

		[Token(Token = "0x60013EC")]
		bool HasControllers();

		[Token(Token = "0x60013ED")]
		bool IsConnected(ControllerType controllerType);
	}
	[Token(Token = "0x200026D")]
	public class ControllerOculusHelper : IControllerHelper
	{
		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xF037EC", Offset = "0xF037EC", VA = "0xF037EC", Slot = "4")]
		public ControllerType GetActive()
		{
			return default(ControllerType);
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xF03988", Offset = "0xF03988", VA = "0xF03988", Slot = "5")]
		public bool HasControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xF03A34", Offset = "0xF03A34", VA = "0xF03A34", Slot = "6")]
		public bool IsConnected(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xF038E4", Offset = "0xF038E4", VA = "0xF038E4")]
		private ControllerType GetDefaultHand()
		{
			return default(ControllerType);
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xF03B40", Offset = "0xF03B40", VA = "0xF03B40")]
		public ControllerOculusHelper()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class SteamVelocityEstimatorFocusHandler : MonoBehaviour
	{
		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VelocityEstimator _velocityEstimator;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isFocused;

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x1052C04", Offset = "0x1052C04", VA = "0x1052C04")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x1052CB0", Offset = "0x1052CB0", VA = "0x1052CB0")]
		private void Update()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x1052D28", Offset = "0x1052D28", VA = "0x1052D28")]
		public SteamVelocityEstimatorFocusHandler()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class UiHandControllerPointer : MonoBehaviour
	{
		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB782CC", Offset = "0xB782CC")]
		[SerializeField]
		private PointerCrosshair _crosshair;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PointerLine _lineA;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _lineB;

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xD30A54", Offset = "0xD30A54", VA = "0xD30A54")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xD30B80", Offset = "0xD30B80", VA = "0xD30B80")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xD30BB4", Offset = "0xD30BB4", VA = "0xD30BB4")]
		public void SetPosition(Vector3 position, Camera camera)
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xD30C4C", Offset = "0xD30C4C", VA = "0xD30C4C")]
		public Vector3 GetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xD30C68", Offset = "0xD30C68", VA = "0xD30C68")]
		public void Reset()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xD30CCC", Offset = "0xD30CCC", VA = "0xD30CCC")]
		private void CanvasRaycaster_HitDetected(CanvasRaycaster sender, Camera camera, Vector3 position)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xD30CD4", Offset = "0xD30CD4", VA = "0xD30CD4")]
		private void CanvasRaycaster_HitLost(CanvasRaycaster sender, Camera camera)
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xD30CD8", Offset = "0xD30CD8", VA = "0xD30CD8")]
		private void Update()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xD30D48", Offset = "0xD30D48", VA = "0xD30D48")]
		public UiHandControllerPointer()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class ControllerXRSpace : HandController
	{
		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xF03DA0", Offset = "0xF03DA0", VA = "0xF03DA0")]
		public ControllerXRSpace()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public enum ResumeActionType
	{
		[Token(Token = "0x4001050")]
		Resume,
		[Token(Token = "0x4001051")]
		Restart,
		[Token(Token = "0x4001052")]
		HowToPlay,
		[Token(Token = "0x4001053")]
		SkipHowToPlay,
		[Token(Token = "0x4001054")]
		Exit
	}
	[Token(Token = "0x2000272")]
	public class VoidController : MonoBehaviour
	{
		[Token(Token = "0x4001055")]
		private const string _SHOW_FLOOR_ANIMATION = "FloorUp";

		[Token(Token = "0x4001056")]
		private const string _HIDE_FLOOR_ANIMATION = "FloorDown";

		[Token(Token = "0x4001057")]
		private const string _SHOW_FRONT_BUILDINGS_ANIMATION = "ShowFrontBuildings";

		[Token(Token = "0x4001058")]
		private const string _HIDE_FRONT_BUILDINGS_ANIMATION = "HideFrontBuildings";

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78338", Offset = "0xB78338")]
		[SerializeField]
		public GameObject[] _disableForPerformanceObjects;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78384", Offset = "0xB78384")]
		private static VoidController <Instance>k__BackingField;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator _animator;

		[Token(Token = "0x170001B1")]
		public static VoidController Instance
		{
			[Token(Token = "0x6001400")]
			[Address(RVA = "0xD34134", Offset = "0xD34134", VA = "0xD34134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87470", Offset = "0xB87470")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001401")]
			[Address(RVA = "0xD34184", Offset = "0xD34184", VA = "0xD34184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87480", Offset = "0xB87480")]
			private set
			{
			}
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xD341D8", Offset = "0xD341D8", VA = "0xD341D8")]
		private VoidController()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xD341E0", Offset = "0xD341E0", VA = "0xD341E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xD3428C", Offset = "0xD3428C", VA = "0xD3428C")]
		public void EnableHigherPerformance(bool value)
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xD34318", Offset = "0xD34318", VA = "0xD34318")]
		public void ToggleFrontBuildings(bool enable)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xD34390", Offset = "0xD34390", VA = "0xD34390")]
		public void ToggleFloorVisibility(bool isVisible)
		{
		}
	}
	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB71358", Offset = "0xB71358")]
	public class CanvasRaycaster : MonoBehaviour
	{
		[Token(Token = "0x2000676")]
		public delegate void OnHitDetected(CanvasRaycaster sender, Camera camera, Vector3 position);

		[Token(Token = "0x2000677")]
		public delegate void OnHitLost(CanvasRaycaster sender, Camera camera);

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78394", Offset = "0xB78394")]
		[SerializeField]
		private Camera _camera;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OnHitDetected HitDetected;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static OnHitLost HitLost;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HandControllerRaycaster _controllerRaycaster;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GraphicRaycaster _raycaster;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PointerEventData _eventData;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<RaycastResult> _results;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _hitDetected;

		[Token(Token = "0x170001B2")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0xEFE29C", Offset = "0xEFE29C", VA = "0xEFE29C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xEFE2A4", Offset = "0xEFE2A4", VA = "0xEFE2A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xEFE2FC", Offset = "0xEFE2FC", VA = "0xEFE2FC")]
		private void Start()
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xEFE37C", Offset = "0xEFE37C", VA = "0xEFE37C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xEFE414", Offset = "0xEFE414", VA = "0xEFE414")]
		private void Update()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xEFF188", Offset = "0xEFF188", VA = "0xEFF188")]
		public void SetCamera(Camera camera)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xEFF24C", Offset = "0xEFF24C", VA = "0xEFF24C")]
		private void Toggle()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xEFE718", Offset = "0xEFE718", VA = "0xEFE718")]
		private Vector3 GetIntersectionPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xEFE88C", Offset = "0xEFE88C", VA = "0xEFE88C")]
		private GraphicRaycaster GetRaycaster()
		{
			return null;
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xEFF334", Offset = "0xEFF334", VA = "0xEFF334")]
		public CanvasRaycaster()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class InputModule : MonoBehaviour
	{
		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EventSystem _eventSystem;

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x146F314", Offset = "0x146F314", VA = "0x146F314")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x146F36C", Offset = "0x146F36C", VA = "0x146F36C", Slot = "4")]
		public virtual void Enable(bool enable)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x146F38C", Offset = "0x146F38C", VA = "0x146F38C")]
		public InputModule()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class InputOculus : InputPlatform
	{
		[Token(Token = "0x6001414")]
		[Address(RVA = "0x146F394", Offset = "0x146F394", VA = "0x146F394", Slot = "4")]
		public override bool ButtonPausePressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x146F438", Offset = "0x146F438", VA = "0x146F438", Slot = "6")]
		public override Vector2 GetInput2d(ControllerType controllerType)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x146F51C", Offset = "0x146F51C", VA = "0x146F51C", Slot = "8")]
		public override bool TriggerIndexDown(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x146F5B4", Offset = "0x146F5B4", VA = "0x146F5B4", Slot = "9")]
		public override bool TriggerIndexHold(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x146F63C", Offset = "0x146F63C", VA = "0x146F63C", Slot = "10")]
		public override bool TriggerIndexUp(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x146F6C4", Offset = "0x146F6C4", VA = "0x146F6C4", Slot = "11")]
		public override bool TriggerHandDown(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x146F75C", Offset = "0x146F75C", VA = "0x146F75C", Slot = "12")]
		public override bool TriggerHandUp(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x146F7E4", Offset = "0x146F7E4", VA = "0x146F7E4", Slot = "13")]
		public override bool IsControllerConnected(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x146F890", Offset = "0x146F890", VA = "0x146F890", Slot = "14")]
		public override float GetValue(ControllerType controllerType, InputType inputType)
		{
			return default(float);
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x146F928", Offset = "0x146F928", VA = "0x146F928", Slot = "15")]
		public override Vector3 GetControllerAngularVelocity(ControllerType controllerType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x146F99C", Offset = "0x146F99C", VA = "0x146F99C", Slot = "16")]
		public override Vector3 GetControllerVelocity(ControllerType controllerType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x146F5A4", Offset = "0x146F5A4", VA = "0x146F5A4")]
		private OVRInput.Button GetIndexTrigger(ControllerType controllerType)
		{
			return default(OVRInput.Button);
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x146F4BC", Offset = "0x146F4BC", VA = "0x146F4BC")]
		private OVRInput.Axis2D GetAxis2D(ControllerType controllerType)
		{
			return default(OVRInput.Axis2D);
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x146F74C", Offset = "0x146F74C", VA = "0x146F74C")]
		private OVRInput.Button GetHandTrigger(ControllerType controllerType)
		{
			return default(OVRInput.Button);
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x146F4C8", Offset = "0x146F4C8", VA = "0x146F4C8")]
		private OVRInput.Controller GetController(ControllerType controllerType)
		{
			return default(OVRInput.Controller);
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x146FA10", Offset = "0x146FA10", VA = "0x146FA10")]
		public InputOculus()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class InputPico : InputPlatform
	{
		[Token(Token = "0x4001065")]
		private const int _LEFT_HAND = 0;

		[Token(Token = "0x4001066")]
		private const int _RIGHT_HAND = 1;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Pvr_KeyCode _MENU_ACTION;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Pvr_KeyCode _INDEX_TRIGGER_ACTION;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Pvr_KeyCode _TOUCH_PAD_ACTION;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Pvr_KeyCode _LEFT_HAND_TRIGGER_ACTION;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Pvr_KeyCode _RIGHT_HAND_TRIGGER_ACTION;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _enhanceTriggerValueRange;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _picoTriggerValueRange;

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x146FA20", Offset = "0x146FA20", VA = "0x146FA20", Slot = "4")]
		public override bool ButtonPausePressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x146FA6C", Offset = "0x146FA6C", VA = "0x146FA6C", Slot = "6")]
		public override Vector2 GetInput2d(ControllerType controllerType)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x146FA7C", Offset = "0x146FA7C", VA = "0x146FA7C", Slot = "8")]
		public override bool TriggerIndexDown(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x146FAAC", Offset = "0x146FAAC", VA = "0x146FAAC", Slot = "9")]
		public override bool TriggerIndexHold(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x146FADC", Offset = "0x146FADC", VA = "0x146FADC", Slot = "10")]
		public override bool TriggerIndexUp(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x146FB0C", Offset = "0x146FB0C", VA = "0x146FB0C", Slot = "11")]
		public override bool TriggerHandDown(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x146FB40", Offset = "0x146FB40", VA = "0x146FB40", Slot = "12")]
		public override bool TriggerHandUp(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x146FB74", Offset = "0x146FB74", VA = "0x146FB74", Slot = "13")]
		public override bool IsControllerConnected(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x146FBB0", Offset = "0x146FBB0", VA = "0x146FBB0", Slot = "14")]
		public override float GetValue(ControllerType controllerType, InputType inputType)
		{
			return default(float);
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x146FC1C", Offset = "0x146FC1C", VA = "0x146FC1C", Slot = "15")]
		public override Vector3 GetControllerAngularVelocity(ControllerType controllerType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x146FCBC", Offset = "0x146FCBC", VA = "0x146FCBC", Slot = "16")]
		public override Vector3 GetControllerVelocity(ControllerType controllerType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x146FD60", Offset = "0x146FD60", VA = "0x146FD60")]
		public InputPico()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class InputPlatform
	{
		[Token(Token = "0x6001430")]
		[Address(RVA = "0x146FD88", Offset = "0x146FD88", VA = "0x146FD88", Slot = "4")]
		public virtual bool ButtonPausePressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x146FD90", Offset = "0x146FD90", VA = "0x146FD90", Slot = "5")]
		public virtual bool ButtonSystemPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x146FD98", Offset = "0x146FD98", VA = "0x146FD98", Slot = "6")]
		public virtual Vector2 GetInput2d(ControllerType controllerType)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x146FDF8", Offset = "0x146FDF8", VA = "0x146FDF8", Slot = "7")]
		public virtual bool HasInput2d(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x146FEA4", Offset = "0x146FEA4", VA = "0x146FEA4", Slot = "8")]
		public virtual bool TriggerIndexDown(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x146FEAC", Offset = "0x146FEAC", VA = "0x146FEAC", Slot = "9")]
		public virtual bool TriggerIndexHold(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x146FEB4", Offset = "0x146FEB4", VA = "0x146FEB4", Slot = "10")]
		public virtual bool TriggerIndexUp(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x146FEBC", Offset = "0x146FEBC", VA = "0x146FEBC", Slot = "11")]
		public virtual bool TriggerHandDown(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x146FEC4", Offset = "0x146FEC4", VA = "0x146FEC4", Slot = "12")]
		public virtual bool TriggerHandUp(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x146FECC", Offset = "0x146FECC", VA = "0x146FECC", Slot = "13")]
		public virtual bool IsControllerConnected(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x146FED4", Offset = "0x146FED4", VA = "0x146FED4", Slot = "14")]
		public virtual float GetValue(ControllerType controllerType, InputType inputType)
		{
			return default(float);
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x146FEDC", Offset = "0x146FEDC", VA = "0x146FEDC", Slot = "15")]
		public virtual Vector3 GetControllerAngularVelocity(ControllerType controllerType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x146FF3C", Offset = "0x146FF3C", VA = "0x146FF3C", Slot = "16")]
		public virtual Vector3 GetControllerVelocity(ControllerType controllerType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x146FA18", Offset = "0x146FA18", VA = "0x146FA18")]
		public InputPlatform()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class InputSteam : InputPlatform
	{
		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SteamVR_Action_Boolean menuAction;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SteamVR_Action_Boolean grabPinchAction;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_Action_Boolean grabGripAction;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SteamVR_Action_Single indexTriggerSqueezeAction;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SteamVR_Action_Single handTriggerSqueezeAction;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SteamVR_Action_Vector2 scrollAction;

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x146FF9C", Offset = "0x146FF9C", VA = "0x146FF9C", Slot = "4")]
		public override bool ButtonPausePressed()
		{
			return default(bool);
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x146FFBC", Offset = "0x146FFBC", VA = "0x146FFBC", Slot = "6")]
		public override Vector2 GetInput2d(ControllerType controllerType)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x146FFE4", Offset = "0x146FFE4", VA = "0x146FFE4", Slot = "8")]
		public override bool TriggerIndexDown(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x1470030", Offset = "0x1470030", VA = "0x1470030", Slot = "9")]
		public override bool TriggerIndexHold(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x147007C", Offset = "0x147007C", VA = "0x147007C", Slot = "10")]
		public override bool TriggerIndexUp(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x14700C8", Offset = "0x14700C8", VA = "0x14700C8", Slot = "11")]
		public override bool TriggerHandDown(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x1470114", Offset = "0x1470114", VA = "0x1470114", Slot = "12")]
		public override bool TriggerHandUp(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x1470160", Offset = "0x1470160", VA = "0x1470160", Slot = "13")]
		public override bool IsControllerConnected(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x1470258", Offset = "0x1470258", VA = "0x1470258", Slot = "14")]
		public override float GetValue(ControllerType controllerType, InputType inputType)
		{
			return default(float);
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x14702D8", Offset = "0x14702D8", VA = "0x14702D8", Slot = "15")]
		public override Vector3 GetControllerAngularVelocity(ControllerType controllerType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x147049C", Offset = "0x147049C", VA = "0x147049C", Slot = "16")]
		public override Vector3 GetControllerVelocity(ControllerType controllerType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x1470660", Offset = "0x1470660", VA = "0x1470660")]
		public InputSteam()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class InputSystem : MonoBehaviour
	{
		[Token(Token = "0x2000678")]
		private enum InteractionType
		{
			[Token(Token = "0x4002909")]
			Down,
			[Token(Token = "0x400290A")]
			Hold,
			[Token(Token = "0x400290B")]
			Up
		}

		[Token(Token = "0x2000679")]
		public delegate void OnIndividualTriggerPressed(InputSystem sender, InputType inputType);

		[Token(Token = "0x200067A")]
		public delegate void OnIndividualTriggerReleased(InputSystem sender, InputType inputType);

		[Token(Token = "0x200067B")]
		public delegate void OnTriggerPressed(InputSystem sender, InputType inputType, ControllerType controllerType);

		[Token(Token = "0x200067C")]
		public delegate void OnTriggerReleased(InputSystem sender, InputType inputType, ControllerType controllerType);

		[Token(Token = "0x200067D")]
		public delegate void OnTriggerDown(InputSystem sender, InputType inputType);

		[Token(Token = "0x200067E")]
		public delegate void OnTriggerHold(InputSystem sender, InputType inputType);

		[Token(Token = "0x200067F")]
		public delegate void OnTriggerUp(InputSystem sender, InputType inputType);

		[Token(Token = "0x2000680")]
		public delegate void OnMenuPressed(InputSystem sender);

		[Token(Token = "0x2000681")]
		public delegate void OnSystemPressed(InputSystem sender);

		[Token(Token = "0x2000682")]
		public delegate void OnInput2d(InputSystem sender, Vector2 vector, InputType inputType);

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB783E0", Offset = "0xB783E0")]
		public HandControllerManager controllerManager;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static InputPlatform InputPlatformInstance;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _controllerLeftIsConnected;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _controllerRightIsConnected;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool _hasSwitched;

		[Token(Token = "0x1400002F")]
		public static event OnIndividualTriggerPressed IndividualTriggerPressed
		{
			[Token(Token = "0x600144A")]
			[Address(RVA = "0x1470788", Offset = "0x1470788", VA = "0x1470788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87490", Offset = "0xB87490")]
			add
			{
			}
			[Token(Token = "0x600144B")]
			[Address(RVA = "0x1470840", Offset = "0x1470840", VA = "0x1470840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB874A0", Offset = "0xB874A0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public static event OnIndividualTriggerReleased IndividualTriggerReleased
		{
			[Token(Token = "0x600144C")]
			[Address(RVA = "0x14708F8", Offset = "0x14708F8", VA = "0x14708F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB874B0", Offset = "0xB874B0")]
			add
			{
			}
			[Token(Token = "0x600144D")]
			[Address(RVA = "0x14709B0", Offset = "0x14709B0", VA = "0x14709B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB874C0", Offset = "0xB874C0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public static event OnTriggerPressed TriggerPressed
		{
			[Token(Token = "0x600144E")]
			[Address(RVA = "0x146DE4C", Offset = "0x146DE4C", VA = "0x146DE4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB874D0", Offset = "0xB874D0")]
			add
			{
			}
			[Token(Token = "0x600144F")]
			[Address(RVA = "0x146E06C", Offset = "0x146E06C", VA = "0x146E06C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB874E0", Offset = "0xB874E0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public static event OnTriggerReleased TriggerReleased
		{
			[Token(Token = "0x6001450")]
			[Address(RVA = "0x146DF14", Offset = "0x146DF14", VA = "0x146DF14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB874F0", Offset = "0xB874F0")]
			add
			{
			}
			[Token(Token = "0x6001451")]
			[Address(RVA = "0x146E124", Offset = "0x146E124", VA = "0x146E124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87500", Offset = "0xB87500")]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public static event OnTriggerDown TriggerDown
		{
			[Token(Token = "0x6001452")]
			[Address(RVA = "0x1470A68", Offset = "0x1470A68", VA = "0x1470A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87510", Offset = "0xB87510")]
			add
			{
			}
			[Token(Token = "0x6001453")]
			[Address(RVA = "0x1470B20", Offset = "0x1470B20", VA = "0x1470B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87520", Offset = "0xB87520")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public static event OnTriggerHold TriggerHold
		{
			[Token(Token = "0x6001454")]
			[Address(RVA = "0x1470BD8", Offset = "0x1470BD8", VA = "0x1470BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87530", Offset = "0xB87530")]
			add
			{
			}
			[Token(Token = "0x6001455")]
			[Address(RVA = "0x1470C90", Offset = "0x1470C90", VA = "0x1470C90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87540", Offset = "0xB87540")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public static event OnTriggerUp TriggerUp
		{
			[Token(Token = "0x6001456")]
			[Address(RVA = "0x1470D48", Offset = "0x1470D48", VA = "0x1470D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87550", Offset = "0xB87550")]
			add
			{
			}
			[Token(Token = "0x6001457")]
			[Address(RVA = "0x1470E00", Offset = "0x1470E00", VA = "0x1470E00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87560", Offset = "0xB87560")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public static event OnMenuPressed MenuPressed
		{
			[Token(Token = "0x6001458")]
			[Address(RVA = "0x1470EB8", Offset = "0x1470EB8", VA = "0x1470EB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87570", Offset = "0xB87570")]
			add
			{
			}
			[Token(Token = "0x6001459")]
			[Address(RVA = "0x1470F70", Offset = "0x1470F70", VA = "0x1470F70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87580", Offset = "0xB87580")]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public static event OnSystemPressed SystemPressed
		{
			[Token(Token = "0x600145A")]
			[Address(RVA = "0x1471028", Offset = "0x1471028", VA = "0x1471028")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87590", Offset = "0xB87590")]
			add
			{
			}
			[Token(Token = "0x600145B")]
			[Address(RVA = "0x14710E0", Offset = "0x14710E0", VA = "0x14710E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB875A0", Offset = "0xB875A0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public static event OnInput2d Input2d
		{
			[Token(Token = "0x600145C")]
			[Address(RVA = "0x1471198", Offset = "0x1471198", VA = "0x1471198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB875B0", Offset = "0xB875B0")]
			add
			{
			}
			[Token(Token = "0x600145D")]
			[Address(RVA = "0x1471250", Offset = "0x1471250", VA = "0x1471250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB875C0", Offset = "0xB875C0")]
			remove
			{
			}
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x1471308", Offset = "0x1471308", VA = "0x1471308")]
		private void Awake()
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x14713D8", Offset = "0x14713D8", VA = "0x14713D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x1472820", Offset = "0x1472820", VA = "0x1472820")]
		public static float LeftIndexTriggerHoldValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x147288C", Offset = "0x147288C", VA = "0x147288C")]
		public static float RightIndexTriggerHoldValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x14728F8", Offset = "0x14728F8", VA = "0x14728F8")]
		public static float LeftHandTriggerHoldValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x1472964", Offset = "0x1472964", VA = "0x1472964")]
		public static float RightHandTriggerHoldValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x14717F0", Offset = "0x14717F0", VA = "0x14717F0")]
		private void InvokeInputInteraction(ControllerType controllerType, InputType inputType, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x1472AA0", Offset = "0x1472AA0", VA = "0x1472AA0")]
		private void InvokeInteraction(InputType inputType, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x1471C5C", Offset = "0x1471C5C", VA = "0x1471C5C")]
		private void InvokeTriggerPressed(ControllerType controllerType, bool isHand = false)
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x1471D8C", Offset = "0x1471D8C", VA = "0x1471D8C")]
		private void InvokeTriggerReleased(ControllerType controllerType, bool isHand = false)
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x1472624", Offset = "0x1472624", VA = "0x1472624")]
		private void InvokeInput2d(ControllerType controllerType, InputType inputType)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x14726EC", Offset = "0x14726EC", VA = "0x14726EC")]
		private void UpdateControllerConnections()
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x14729D0", Offset = "0x14729D0", VA = "0x14729D0")]
		private bool AreBothControllersConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x1472B94", Offset = "0x1472B94", VA = "0x1472B94")]
		private void ChangeActiveController(ControllerType controllerType)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x14729F0", Offset = "0x14729F0", VA = "0x14729F0")]
		private bool IsControllerActive(ControllerType controllerType)
		{
			return default(bool);
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x1474780", Offset = "0x1474780", VA = "0x1474780")]
		public InputSystem()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class InputVive : InputPlatform
	{
		[Token(Token = "0x600146E")]
		[Address(RVA = "0x1474E08", Offset = "0x1474E08", VA = "0x1474E08")]
		public InputVive()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class InputXRSpace : InputPlatform
	{
		[Token(Token = "0x600146F")]
		[Address(RVA = "0x1474E10", Offset = "0x1474E10", VA = "0x1474E10")]
		public InputXRSpace()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class SteamInputModule : InputModule
	{
		[Token(Token = "0x6001470")]
		[Address(RVA = "0x1052BFC", Offset = "0x1052BFC", VA = "0x1052BFC")]
		public SteamInputModule()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class ViveInputModule : InputModule
	{
		[Token(Token = "0x6001471")]
		[Address(RVA = "0xD3412C", Offset = "0xD3412C", VA = "0xD3412C")]
		public ViveInputModule()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class XRInputModule : BaseInputModule
	{
		[Token(Token = "0x2000683")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72994", Offset = "0xB72994")]
		private sealed class <PointerDownCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400290C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400290D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400290E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public XRInputModule <>4__this;

			[Token(Token = "0x400290F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject current;

			[Token(Token = "0x17000507")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D73")]
				[Address(RVA = "0xD35CB0", Offset = "0xD35CB0", VA = "0xD35CB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000508")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D75")]
				[Address(RVA = "0xD35D1C", Offset = "0xD35D1C", VA = "0xD35D1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D70")]
			[Address(RVA = "0xD35184", Offset = "0xD35184", VA = "0xD35184")]
			[DebuggerHidden]
			public <PointerDownCoroutine>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002D71")]
			[Address(RVA = "0xD35C08", Offset = "0xD35C08", VA = "0xD35C08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D72")]
			[Address(RVA = "0xD35C0C", Offset = "0xD35C0C", VA = "0xD35C0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D74")]
			[Address(RVA = "0xD35CB8", Offset = "0xD35CB8", VA = "0xD35CB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PointerEventData _pointerEventData;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject _downObject;

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xD34D08", Offset = "0xD34D08", VA = "0xD34D08", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xD3503C", Offset = "0xD3503C", VA = "0xD3503C")]
		public void PointerDown()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xD35104", Offset = "0xD35104", VA = "0xD35104")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB875D0", Offset = "0xB875D0")]
		private IEnumerator PointerDownCoroutine(GameObject current)
		{
			return null;
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xD351B0", Offset = "0xD351B0", VA = "0xD351B0")]
		public void PointerHold()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xD35418", Offset = "0xD35418", VA = "0xD35418")]
		public void PointerUp()
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xD35420", Offset = "0xD35420", VA = "0xD35420")]
		public void Input2d(Vector2 vector)
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xD358B4", Offset = "0xD358B4", VA = "0xD358B4")]
		private void ExecuteDefaultEvents(GameObject current)
		{
		}

		[Token(Token = "0x6001479")]
		private bool ExecuteEvent<T>(ExecuteEvents.EventFunction<T> ev) where T : IEventSystemHandler
		{
			return default(bool);
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xD3525C", Offset = "0xD3525C", VA = "0xD3525C")]
		private void ExecuteDragEvent(GameObject current)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xD354D8", Offset = "0xD354D8", VA = "0xD354D8")]
		private void ExecuteMoveEvent(GameObject current, Vector2 vector)
		{
		}

		[Token(Token = "0x600147C")]
		private void ExecuteScrollviewEvent<T>(ScrollRect scrollRect, BaseEventData eventData, ExecuteEvents.EventFunction<T> ev) where T : IEventSystemHandler
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xD34EA4", Offset = "0xD34EA4", VA = "0xD34EA4")]
		private PointerEventData GetPointerEventData()
		{
			return null;
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xD350EC", Offset = "0xD350EC", VA = "0xD350EC")]
		private GameObject GetPointerEventGameObject()
		{
			return null;
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xD34D4C", Offset = "0xD34D4C", VA = "0xD34D4C")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xD35C00", Offset = "0xD35C00", VA = "0xD35C00")]
		public XRInputModule()
		{
		}
	}
	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB713BC", Offset = "0xB713BC")]
	public class XRInputModuleController : MonoBehaviour
	{
		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private XRInputModule _inputModule;

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xD35D24", Offset = "0xD35D24", VA = "0xD35D24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xD35E9C", Offset = "0xD35E9C", VA = "0xD35E9C")]
		private void InputSystem_TriggerDown(InputSystem sender, InputType inputType)
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xD35EC8", Offset = "0xD35EC8", VA = "0xD35EC8")]
		private void InputSystem_TriggerHold(InputSystem sender, InputType inputType)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xD35EE8", Offset = "0xD35EE8", VA = "0xD35EE8")]
		private void InputSystem_TriggerUp(InputSystem sender, InputType inputType)
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xD35F10", Offset = "0xD35F10", VA = "0xD35F10")]
		private void InputSystem_Input2d(InputSystem sender, Vector2 vector, InputType inputType)
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xD35F28", Offset = "0xD35F28", VA = "0xD35F28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xD35F9C", Offset = "0xD35F9C", VA = "0xD35F9C")]
		private void InputSystem_TriggerPressed(InputSystem sender, InputType inputType, ControllerType controllerType)
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xD35EBC", Offset = "0xD35EBC", VA = "0xD35EBC")]
		private bool IsCorrectInput(InputType inputType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xD35FBC", Offset = "0xD35FBC", VA = "0xD35FBC")]
		public XRInputModuleController()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class XRSpaceInputModule : InputModule
	{
		[Token(Token = "0x600148A")]
		[Address(RVA = "0xD35FCC", Offset = "0xD35FCC", VA = "0xD35FCC")]
		public XRSpaceInputModule()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class LocalizationKeys
	{
		[Token(Token = "0x4001086")]
		public const string ACCESSIBILITY_AROUND_PLAYER = "ACCESSIBILITY_AROUND_PLAYER";

		[Token(Token = "0x4001087")]
		public const string ACCESSIBILITY_COLOR_PERCEPTION = "ACCESSIBILITY_COLOR_PERCEPTION";

		[Token(Token = "0x4001088")]
		public const string ACCESSIBILITY_HEADPHONES = "ACCESSIBILITY_HEADPHONES";

		[Token(Token = "0x4001089")]
		public const string ACCESSIBILITY_HIGH_MOVEMENT_INTENSITY = "ACCESSIBILITY_HIGH_MOVEMENT_INTENSITY";

		[Token(Token = "0x400108A")]
		public const string ACCESSIBILITY_TWO_HANDS = "ACCESSIBILITY_TWO_HANDS";

		[Token(Token = "0x400108B")]
		public const string BODY_HEALTH_SAFETY = "BODY_HEALTH_SAFETY";

		[Token(Token = "0x400108C")]
		public const string BODY_PASSWORD_RESET = "BODY_PASSWORD_RESET";

		[Token(Token = "0x400108D")]
		public const string BUTTON_30_SESSIONS = "BUTTON_30_SESSIONS";

		[Token(Token = "0x400108E")]
		public const string BUTTON_7_SESSIONS = "BUTTON_7_SESSIONS";

		[Token(Token = "0x400108F")]
		public const string BUTTON_ACCESSIBILITY = "BUTTON_ACCESSIBILITY";

		[Token(Token = "0x4001090")]
		public const string BUTTON_CALIBRATE = "BUTTON_CALIBRATE";

		[Token(Token = "0x4001091")]
		public const string BUTTON_CANCEL = "BUTTON_CANCEL";

		[Token(Token = "0x4001092")]
		public const string BUTTON_CATEGORY = "BUTTON_CATEGORY";

		[Token(Token = "0x4001093")]
		public const string BUTTON_CLEAR = "BUTTON_CLEAR";

		[Token(Token = "0x4001094")]
		public const string BUTTON_CLEAR_ALL = "BUTTON_CLEAR_ALL";

		[Token(Token = "0x4001095")]
		public const string BUTTON_COMPARE = "BUTTON_COMPARE";

		[Token(Token = "0x4001096")]
		public const string BUTTON_CONFIRM = "BUTTON_CONFIRM";

		[Token(Token = "0x4001097")]
		public const string BUTTON_CONTINUE = "BUTTON_CONTINUE";

		[Token(Token = "0x4001098")]
		public const string BUTTON_EDIT_PROFILE = "BUTTON_EDIT_PROFILE";

		[Token(Token = "0x4001099")]
		public const string BUTTON_FORGOT_PASSWORD = "BUTTON_FORGOT_PASSWORD";

		[Token(Token = "0x400109A")]
		public const string BUTTON_GENERAL = "BUTTON_GENERAL";

		[Token(Token = "0x400109B")]
		public const string BUTTON_JOIN = "BUTTON_JOIN";

		[Token(Token = "0x400109C")]
		public const string BUTTON_LIFETIME = "BUTTON_LIFETIME";

		[Token(Token = "0x400109D")]
		public const string BUTTON_LOGIN = "BUTTON_LOGIN";

		[Token(Token = "0x400109E")]
		public const string BUTTON_LOGOUT = "BUTTON_LOGOUT";

		[Token(Token = "0x400109F")]
		public const string BUTTON_METRICS = "BUTTON_METRICS";

		[Token(Token = "0x40010A0")]
		public const string BUTTON_MORE_STATS = "BUTTON_MORE_STATS";

		[Token(Token = "0x40010A1")]
		public const string BUTTON_NEXT_GAME = "BUTTON_NEXT_GAME";

		[Token(Token = "0x40010A2")]
		public const string BUTTON_OK = "BUTTON_OK";

		[Token(Token = "0x40010A3")]
		public const string BUTTON_PLAY = "BUTTON_PLAY";

		[Token(Token = "0x40010A4")]
		public const string BUTTON_PRIVACY_POLICY = "BUTTON_PRIVACY_POLICY";

		[Token(Token = "0x40010A5")]
		public const string BUTTON_QUIT = "BUTTON_QUIT";

		[Token(Token = "0x40010A6")]
		public const string BUTTON_RESTART = "BUTTON_RESTART";

		[Token(Token = "0x40010A7")]
		public const string BUTTON_RESTORE_OPTIONS = "BUTTON_RESTORE_OPTIONS";

		[Token(Token = "0x40010A8")]
		public const string BUTTON_RESUME = "BUTTON_RESUME";

		[Token(Token = "0x40010A9")]
		public const string BUTTON_RETRY = "BUTTON_RETRY";

		[Token(Token = "0x40010AA")]
		public const string BUTTON_SCORE = "BUTTON_SCORE";

		[Token(Token = "0x40010AB")]
		public const string BUTTON_SIGN_UP = "BUTTON_SIGN_UP";

		[Token(Token = "0x40010AC")]
		public const string BUTTON_SOUND = "BUTTON_SOUND";

		[Token(Token = "0x40010AD")]
		public const string BUTTON_START = "BUTTON_START";

		[Token(Token = "0x40010AE")]
		public const string BUTTON_SUBMIT = "BUTTON_SUBMIT";

		[Token(Token = "0x40010AF")]
		public const string BUTTON_TUTORIAL = "BUTTON_TUTORIAL";

		[Token(Token = "0x40010B0")]
		public const string BUTTON_TUTORIAL_SKIP = "BUTTON_TUTORIAL_SKIP";

		[Token(Token = "0x40010B1")]
		public const string BUTTON_USER_AGREEMENT = "BUTTON_USER_AGREEMENT";

		[Token(Token = "0x40010B2")]
		public const string CATEGORY_ACCURACY = "CATEGORY_ACCURACY";

		[Token(Token = "0x40010B3")]
		public const string CATEGORY_ATTENTION = "CATEGORY_ATTENTION";

		[Token(Token = "0x40010B4")]
		public const string CATEGORY_AUDIO_ORIENTATION = "CATEGORY_AUDIO_ORIENTATION";

		[Token(Token = "0x40010B5")]
		public const string CATEGORY_DIVIDED_ATTENTION = "CATEGORY_DIVIDED_ATTENTION";

		[Token(Token = "0x40010B6")]
		public const string CATEGORY_EXPLICIT_MEMORY = "CATEGORY_EXPLICIT_MEMORY";

		[Token(Token = "0x40010B7")]
		public const string CATEGORY_FLEXIBILITY = "CATEGORY_FLEXIBILITY";

		[Token(Token = "0x40010B8")]
		public const string CATEGORY_IMPLICIT_MEMORY = "CATEGORY_IMPLICIT_MEMORY";

		[Token(Token = "0x40010B9")]
		public const string CATEGORY_LOGICAL_REASONING = "CATEGORY_LOGICAL_REASONING";

		[Token(Token = "0x40010BA")]
		public const string CATEGORY_LONG_TERM_MEMORY = "CATEGORY_LONG_TERM_MEMORY";

		[Token(Token = "0x40010BB")]
		public const string CATEGORY_MEMORY = "CATEGORY_MEMORY";

		[Token(Token = "0x40010BC")]
		public const string CATEGORY_MOTOR_CONTROL = "CATEGORY_MOTOR_CONTROL";

		[Token(Token = "0x40010BD")]
		public const string CATEGORY_MOTOR_SKILLS = "CATEGORY_MOTOR_SKILLS";

		[Token(Token = "0x40010BE")]
		public const string CATEGORY_PLANNING = "CATEGORY_PLANNING";

		[Token(Token = "0x40010BF")]
		public const string CATEGORY_PROBLEM_SOLVING = "CATEGORY_PROBLEM_SOLVING";

		[Token(Token = "0x40010C0")]
		public const string CATEGORY_PROCESSING = "CATEGORY_PROCESSING";

		[Token(Token = "0x40010C1")]
		public const string CATEGORY_PROCESSING_SPEED = "CATEGORY_PROCESSING_SPEED";

		[Token(Token = "0x40010C2")]
		public const string CATEGORY_RESPONSE_INHIBITION = "CATEGORY_RESPONSE_INHIBITION";

		[Token(Token = "0x40010C3")]
		public const string CATEGORY_SELECTIVE_ATTENTION = "CATEGORY_SELECTIVE_ATTENTION";

		[Token(Token = "0x40010C4")]
		public const string CATEGORY_SHORT_TERM_MEMORY = "CATEGORY_SHORT_TERM_MEMORY";

		[Token(Token = "0x40010C5")]
		public const string CATEGORY_SPATIAL_ORIENTATION = "CATEGORY_SPATIAL_ORIENTATION";

		[Token(Token = "0x40010C6")]
		public const string CATEGORY_SPEED = "CATEGORY_SPEED";

		[Token(Token = "0x40010C7")]
		public const string CATEGORY_SUSTAINED_ATTENTION = "CATEGORY_SUSTAINED_ATTENTION";

		[Token(Token = "0x40010C8")]
		public const string CATEGORY_TASK_SWITCHING = "CATEGORY_TASK_SWITCHING";

		[Token(Token = "0x40010C9")]
		public const string CATEGORY_VISUOSPATIAL_ORIENTATION = "CATEGORY_VISUOSPATIAL_ORIENTATION";

		[Token(Token = "0x40010CA")]
		public const string CATEGORY_WORKING_MEMORY = "CATEGORY_WORKING_MEMORY";

		[Token(Token = "0x40010CB")]
		public const string CHART_DATE = "CHART_DATE";

		[Token(Token = "0x40010CC")]
		public const string COUNTDOWN_START = "COUNTDOWN_START";

		[Token(Token = "0x40010CD")]
		public const string DIALOG_MESSAGE_EDIT_PROFILE = "DIALOG_MESSAGE_EDIT_PROFILE";

		[Token(Token = "0x40010CE")]
		public const string DIALOG_MESSAGE_LOGOUT = "DIALOG_MESSAGE_LOGOUT";

		[Token(Token = "0x40010CF")]
		public const string DIALOG_MESSAGE_QUIT_CONFIRM = "DIALOG_MESSAGE_QUIT_CONFIRM";

		[Token(Token = "0x40010D0")]
		public const string DIALOG_MESSAGE_RESTART_CONFIRM = "DIALOG_MESSAGE_RESTART_CONFIRM";

		[Token(Token = "0x40010D1")]
		public const string DIALOG_MESSAGE_SKIP_TUTORIAL_CONFIRM = "DIALOG_MESSAGE_SKIP_TUTORIAL_CONFIRM";

		[Token(Token = "0x40010D2")]
		public const string EDUCATION_OPTION_BACHELOR = "EDUCATION_OPTION_BACHELOR";

		[Token(Token = "0x40010D3")]
		public const string EDUCATION_OPTION_DOCTORATE = "EDUCATION_OPTION_DOCTORATE";

		[Token(Token = "0x40010D4")]
		public const string EDUCATION_OPTION_MASTER = "EDUCATION_OPTION_MASTER";

		[Token(Token = "0x40010D5")]
		public const string EDUCATION_OPTION_NO_FORMAL = "EDUCATION_OPTION_NO_FORMAL";

		[Token(Token = "0x40010D6")]
		public const string EDUCATION_OPTION_PRIMARY = "EDUCATION_OPTION_PRIMARY";

		[Token(Token = "0x40010D7")]
		public const string EDUCATION_OPTION_SECONDARY = "EDUCATION_OPTION_SECONDARY";

		[Token(Token = "0x40010D8")]
		public const string ERROR_DEFAULT = "ERROR_DEFAULT";

		[Token(Token = "0x40010D9")]
		public const string ERROR_SERVER = "ERROR_SERVER";

		[Token(Token = "0x40010DA")]
		public const string FORM_ERROR_AUTH_NOT_VALID = "FORM_ERROR_AUTH_NOT_VALID";

		[Token(Token = "0x40010DB")]
		public const string FORM_ERROR_BIRTHDAY_NOT_VALID = "FORM_ERROR_BIRTHDAY_NOT_VALID";

		[Token(Token = "0x40010DC")]
		public const string FORM_ERROR_EMAIL_EXISTS = "FORM_ERROR_EMAIL_EXISTS";

		[Token(Token = "0x40010DD")]
		public const string FORM_ERROR_EMAIL_NOT_VALID = "FORM_ERROR_EMAIL_NOT_VALID";

		[Token(Token = "0x40010DE")]
		public const string FORM_ERROR_NAME_FIRST_MIN_CHARS = "FORM_ERROR_NAME_FIRST_MIN_CHARS";

		[Token(Token = "0x40010DF")]
		public const string FORM_ERROR_NAME_LAST_MIN_CHARS = "FORM_ERROR_NAME_LAST_MIN_CHARS";

		[Token(Token = "0x40010E0")]
		public const string FORM_ERROR_PASSWORD_NO_MATCH = "FORM_ERROR_PASSWORD_NO_MATCH";

		[Token(Token = "0x40010E1")]
		public const string FORM_ERROR_PASSWORD_NOT_VALID = "FORM_ERROR_PASSWORD_NOT_VALID";

		[Token(Token = "0x40010E2")]
		public const string FORM_ERROR_USER_AGREEMENT = "FORM_ERROR_USER_AGREEMENT";

		[Token(Token = "0x40010E3")]
		public const string GAME_BALANCE = "GAME_BALANCE";

		[Token(Token = "0x40010E4")]
		public const string GAME_HIDE_AND_SEEK = "GAME_HIDE_AND_SEEK";

		[Token(Token = "0x40010E5")]
		public const string GAME_MAGIC_DECK = "GAME_MAGIC_DECK";

		[Token(Token = "0x40010E6")]
		public const string GAME_MEMORY_WALL = "GAME_MEMORY_WALL";

		[Token(Token = "0x40010E7")]
		public const string GAME_PIZZA = "GAME_PIZZA";

		[Token(Token = "0x40010E8")]
		public const string GAME_REACT = "GAME_REACT";

		[Token(Token = "0x40010E9")]
		public const string GRAPH_HOVER_AVERAGE = "GRAPH_HOVER_AVERAGE";

		[Token(Token = "0x40010EA")]
		public const string GRAPH_HOVER_SCORE = "GRAPH_HOVER_SCORE";

		[Token(Token = "0x40010EB")]
		public const string HEADER_BAR_AVATAR = "HEADER_BAR_AVATAR";

		[Token(Token = "0x40010EC")]
		public const string HEADER_BAR_CATEGORIES_STATS = "HEADER_BAR_CATEGORIES_STATS";

		[Token(Token = "0x40010ED")]
		public const string HEADER_BAR_EPI_INFO = "HEADER_BAR_EPI_INFO";

		[Token(Token = "0x40010EE")]
		public const string HEADER_BAR_FORGOT_PASSWORD = "HEADER_BAR_FORGOT_PASSWORD";

		[Token(Token = "0x40010EF")]
		public const string HEADER_BAR_GAME_DETAILS = "HEADER_BAR_GAME_DETAILS";

		[Token(Token = "0x40010F0")]
		public const string HEADER_BAR_GAME_SCORE_STATS = "HEADER_BAR_GAME_SCORE_STATS";

		[Token(Token = "0x40010F1")]
		public const string HEADER_BAR_GAMES_STATS = "HEADER_BAR_GAMES_STATS";

		[Token(Token = "0x40010F2")]
		public const string HEADER_BAR_PAUSE_MENU = "HEADER_BAR_PAUSE_MENU";

		[Token(Token = "0x40010F3")]
		public const string HEADER_BAR_PRIVACY_POLICY = "HEADER_BAR_PRIVACY_POLICY";

		[Token(Token = "0x40010F4")]
		public const string HEADER_BAR_SESSION_STATS = "HEADER_BAR_SESSION_STATS";

		[Token(Token = "0x40010F5")]
		public const string HEADER_BAR_SIGN_UP = "HEADER_BAR_SIGN_UP";

		[Token(Token = "0x40010F6")]
		public const string HEADER_BAR_STATS_FORMAT = "HEADER_BAR_STATS_FORMAT";

		[Token(Token = "0x40010F7")]
		public const string HEADER_BAR_USER_AGREEMENT = "HEADER_BAR_USER_AGREEMENT";

		[Token(Token = "0x40010F8")]
		public const string HEADER_BAR_WELCOME_BACK = "HEADER_BAR_WELCOME_BACK";

		[Token(Token = "0x40010F9")]
		public const string HEADER_BAR_WOD_STATS = "HEADER_BAR_WOD_STATS";

		[Token(Token = "0x40010FA")]
		public const string HEADER_BAR_WORKOUT_STATS = "HEADER_BAR_WORKOUT_STATS";

		[Token(Token = "0x40010FB")]
		public const string ICON_LABEL_FEMALE = "ICON_LABEL_FEMALE";

		[Token(Token = "0x40010FC")]
		public const string ICON_LABEL_MALE = "ICON_LABEL_MALE";

		[Token(Token = "0x40010FD")]
		public const string ICON_LABEL_OTHER = "ICON_LABEL_OTHER";

		[Token(Token = "0x40010FE")]
		public const string ICON_LABEL_RATHER_NOT_SAY = "ICON_LABEL_RATHER_NOT_SAY";

		[Token(Token = "0x40010FF")]
		public const string INPUT_DATE_DAY = "INPUT_DATE_DAY";

		[Token(Token = "0x4001100")]
		public const string INPUT_DATE_MONTH = "INPUT_DATE_MONTH";

		[Token(Token = "0x4001101")]
		public const string INPUT_DATE_YEAR = "INPUT_DATE_YEAR";

		[Token(Token = "0x4001102")]
		public const string INPUT_EMAIIL = "INPUT_EMAIIL";

		[Token(Token = "0x4001103")]
		public const string INPUT_NAME_FIRST = "INPUT_NAME_FIRST";

		[Token(Token = "0x4001104")]
		public const string INPUT_NAME_LAST = "INPUT_NAME_LAST";

		[Token(Token = "0x4001105")]
		public const string INPUT_PASSWORD = "INPUT_PASSWORD";

		[Token(Token = "0x4001106")]
		public const string INPUT_PASSWORD_CONFIRM = "INPUT_PASSWORD_CONFIRM";

		[Token(Token = "0x4001107")]
		public const string INPUT_USERNAME = "INPUT_USERNAME";

		[Token(Token = "0x4001108")]
		public const string JOB_OPTION_ART_DESIGN = "JOB_OPTION_ART_DESIGN";

		[Token(Token = "0x4001109")]
		public const string JOB_OPTION_EDUCATION = "JOB_OPTION_EDUCATION";

		[Token(Token = "0x400110A")]
		public const string JOB_OPTION_ENGINEERING = "JOB_OPTION_ENGINEERING";

		[Token(Token = "0x400110B")]
		public const string JOB_OPTION_FINANCE = "JOB_OPTION_FINANCE";

		[Token(Token = "0x400110C")]
		public const string JOB_OPTION_HEALTH = "JOB_OPTION_HEALTH";

		[Token(Token = "0x400110D")]
		public const string JOB_OPTION_LAW = "JOB_OPTION_LAW";

		[Token(Token = "0x400110E")]
		public const string JOB_OPTION_MANAGEMENT = "JOB_OPTION_MANAGEMENT";

		[Token(Token = "0x400110F")]
		public const string JOB_OPTION_MEDIA = "JOB_OPTION_MEDIA";

		[Token(Token = "0x4001110")]
		public const string JOB_OPTION_MILITARY = "JOB_OPTION_MILITARY";

		[Token(Token = "0x4001111")]
		public const string JOB_OPTION_OTHER = "JOB_OPTION_OTHER";

		[Token(Token = "0x4001112")]
		public const string JOB_OPTION_RESEARCH = "JOB_OPTION_RESEARCH";

		[Token(Token = "0x4001113")]
		public const string JOB_OPTION_TECH = "JOB_OPTION_TECH";

		[Token(Token = "0x4001114")]
		public const string KEYBOARD_TAB_ALL = "KEYBOARD_TAB_ALL";

		[Token(Token = "0x4001115")]
		public const string KEYBOARD_TAB_STROKES = "KEYBOARD_TAB_STROKES";

		[Token(Token = "0x4001116")]
		public const string LABEL_30_SESSIONS = "LABEL_30_SESSIONS";

		[Token(Token = "0x4001117")]
		public const string LABEL_7_SESSIONS = "LABEL_7_SESSIONS";

		[Token(Token = "0x4001118")]
		public const string LABEL_7_WOD_SCORES = "LABEL_7_WOD_SCORES";

		[Token(Token = "0x4001119")]
		public const string LABEL_ACCESSIBILITY = "LABEL_ACCESSIBILITY";

		[Token(Token = "0x400111A")]
		public const string LABEL_ACHROMATOMALY = "LABEL_ACHROMATOMALY";

		[Token(Token = "0x400111B")]
		public const string LABEL_ACHROMATOPSIA = "LABEL_ACHROMATOPSIA";

		[Token(Token = "0x400111C")]
		public const string LABEL_ALL_GAMES = "LABEL_ALL_GAMES";

		[Token(Token = "0x400111D")]
		public const string LABEL_ALL_TIME = "LABEL_ALL_TIME";

		[Token(Token = "0x400111E")]
		public const string LABEL_ALPHABETICAL = "LABEL_ALPHABETICAL";

		[Token(Token = "0x400111F")]
		public const string LABEL_AUTOMATIC_PLAYER_HEIGHT = "LABEL_AUTOMATIC_PLAYER_HEIGHT";

		[Token(Token = "0x4001120")]
		public const string LABEL_BLOOM = "LABEL_BLOOM";

		[Token(Token = "0x4001121")]
		public const string LABEL_CALORIES = "LABEL_CALORIES";

		[Token(Token = "0x4001122")]
		public const string LABEL_CATEGORY = "LABEL_CATEGORY";

		[Token(Token = "0x4001123")]
		public const string LABEL_COLOR_BLIND_MODE = "LABEL_COLOR_BLIND_MODE";

		[Token(Token = "0x4001124")]
		public const string LABEL_COMPLETED_WORKOUTS = "LABEL_COMPLETED_WORKOUTS";

		[Token(Token = "0x4001125")]
		public const string LABEL_CURRENT_SCORE = "LABEL_CURRENT_SCORE";

		[Token(Token = "0x4001126")]
		public const string LABEL_DEUTERANOMALY = "LABEL_DEUTERANOMALY";

		[Token(Token = "0x4001127")]
		public const string LABEL_DEUTERANOPIA = "LABEL_DEUTERANOPIA";

		[Token(Token = "0x4001128")]
		public const string LABEL_FILTERS = "LABEL_FILTERS";

		[Token(Token = "0x4001129")]
		public const string LABEL_FORGOT_PASSWORD = "LABEL_FORGOT_PASSWORD";

		[Token(Token = "0x400112A")]
		public const string LABEL_GAME_EPI_STATS = "LABEL_GAME_EPI_STATS";

		[Token(Token = "0x400112B")]
		public const string LABEL_GAMES = "LABEL_GAMES";

		[Token(Token = "0x400112C")]
		public const string LABEL_GAMES_PLAYED = "LABEL_GAMES_PLAYED";

		[Token(Token = "0x400112D")]
		public const string LABEL_GENERAL = "LABEL_GENERAL";

		[Token(Token = "0x400112E")]
		public const string LABEL_GENERAL_STATISTICS = "LABEL_GENERAL_STATISTICS";

		[Token(Token = "0x400112F")]
		public const string LABEL_GLOBAL_WOD_SCORE = "LABEL_GLOBAL_WOD_SCORE";

		[Token(Token = "0x4001130")]
		public const string LABEL_GREETING_USER = "LABEL_GREETING_USER";

		[Token(Token = "0x4001131")]
		public const string LABEL_HEALTH_SAFETY = "LABEL_HEALTH_SAFETY";

		[Token(Token = "0x4001132")]
		public const string LABEL_HEIGHT = "LABEL_HEIGHT";

		[Token(Token = "0x4001133")]
		public const string LABEL_HIGHSCORE = "LABEL_HIGHSCORE";

		[Token(Token = "0x4001134")]
		public const string LABEL_HURRY_UP = "LABEL_HURRY_UP";

		[Token(Token = "0x4001135")]
		public const string LABEL_IMMEDIATELY = "LABEL_IMMEDIATELY";

		[Token(Token = "0x4001136")]
		public const string LABEL_IMPERIAL = "LABEL_IMPERIAL";

		[Token(Token = "0x4001137")]
		public const string LABEL_INTRO_MESSAGE = "LABEL_INTRO_MESSAGE";

		[Token(Token = "0x4001138")]
		public const string LABEL_LANGUAGE = "LABEL_LANGUAGE";

		[Token(Token = "0x4001139")]
		public const string LABEL_LANGUAGE_CHINESE = "LABEL_LANGUAGE_CHINESE";

		[Token(Token = "0x400113A")]
		public const string LABEL_LANGUAGE_ENGLISH = "LABEL_LANGUAGE_ENGLISH";

		[Token(Token = "0x400113B")]
		public const string LABEL_LEFT_HANDED = "LABEL_LEFT_HANDED";

		[Token(Token = "0x400113C")]
		public const string LABEL_LEVEL = "LABEL_LEVEL";

		[Token(Token = "0x400113D")]
		public const string LABEL_METRIC = "LABEL_METRIC";

		[Token(Token = "0x400113E")]
		public const string LABEL_MOOD = "LABEL_MOOD";

		[Token(Token = "0x400113F")]
		public const string LABEL_MUSIC = "LABEL_MUSIC";

		[Token(Token = "0x4001140")]
		public const string LABEL_NEW_RELEASES = "LABEL_NEW_RELEASES";

		[Token(Token = "0x4001141")]
		public const string LABEL_NEWEST = "LABEL_NEWEST";

		[Token(Token = "0x4001142")]
		public const string LABEL_NEWS = "LABEL_NEWS";

		[Token(Token = "0x4001143")]
		public const string LABEL_OLDEST_FIRST = "LABEL_OLDEST_FIRST";

		[Token(Token = "0x4001144")]
		public const string LABEL_OPTIONS = "LABEL_OPTIONS";

		[Token(Token = "0x4001145")]
		public const string LABEL_PASSWORD_RESET = "LABEL_PASSWORD_RESET";

		[Token(Token = "0x4001146")]
		public const string LABEL_PROTANOMALY = "LABEL_PROTANOMALY";

		[Token(Token = "0x4001147")]
		public const string LABEL_PROTANOPIA = "LABEL_PROTANOPIA";

		[Token(Token = "0x4001148")]
		public const string LABEL_RECOMMENDED = "LABEL_RECOMMENDED";

		[Token(Token = "0x4001149")]
		public const string LABEL_REGISTER_BIRTHDAY = "LABEL_REGISTER_BIRTHDAY";

		[Token(Token = "0x400114A")]
		public const string LABEL_REGISTER_EDUCATION = "LABEL_REGISTER_EDUCATION";

		[Token(Token = "0x400114B")]
		public const string LABEL_REGISTER_EMAIL = "LABEL_REGISTER_EMAIL";

		[Token(Token = "0x400114C")]
		public const string LABEL_REGISTER_GENDER = "LABEL_REGISTER_GENDER";

		[Token(Token = "0x400114D")]
		public const string LABEL_REGISTER_JOB = "LABEL_REGISTER_JOB";

		[Token(Token = "0x400114E")]
		public const string LABEL_REGISTER_JOIN = "LABEL_REGISTER_JOIN";

		[Token(Token = "0x400114F")]
		public const string LABEL_REGISTER_NAME_FIRST = "LABEL_REGISTER_NAME_FIRST";

		[Token(Token = "0x4001150")]
		public const string LABEL_REGISTER_NAME_LAST = "LABEL_REGISTER_NAME_LAST";

		[Token(Token = "0x4001151")]
		public const string LABEL_REGISTER_PASSWORD = "LABEL_REGISTER_PASSWORD";

		[Token(Token = "0x4001152")]
		public const string LABEL_SESSIONS_COMPLETED = "LABEL_SESSIONS_COMPLETED";

		[Token(Token = "0x4001153")]
		public const string LABEL_SFX = "LABEL_SFX";

		[Token(Token = "0x4001154")]
		public const string LABEL_SIGN_IN = "LABEL_SIGN_IN";

		[Token(Token = "0x4001155")]
		public const string LABEL_SLEEP = "LABEL_SLEEP";

		[Token(Token = "0x4001156")]
		public const string LABEL_SMOOTH = "LABEL_SMOOTH";

		[Token(Token = "0x4001157")]
		public const string LABEL_SORT_BY = "LABEL_SORT_BY";

		[Token(Token = "0x4001158")]
		public const string LABEL_STATS = "LABEL_STATS";

		[Token(Token = "0x4001159")]
		public const string LABEL_SUBTITLES = "LABEL_SUBTITLES";

		[Token(Token = "0x400115A")]
		public const string LABEL_SUBTITLES_COLOR = "LABEL_SUBTITLES_COLOR";

		[Token(Token = "0x400115B")]
		public const string LABEL_SUBTITLES_SIZE = "LABEL_SUBTITLES_SIZE";

		[Token(Token = "0x400115C")]
		public const string LABEL_TILES = "LABEL_TILES";

		[Token(Token = "0x400115D")]
		public const string LABEL_TIMES_PLAYED = "LABEL_TIMES_PLAYED";

		[Token(Token = "0x400115E")]
		public const string LABEL_TOTAL_WOD = "LABEL_TOTAL_WOD";

		[Token(Token = "0x400115F")]
		public const string LABEL_TRITANOMALY = "LABEL_TRITANOMALY";

		[Token(Token = "0x4001160")]
		public const string LABEL_TRITANOPIA = "LABEL_TRITANOPIA";

		[Token(Token = "0x4001161")]
		public const string LABEL_TURN = "LABEL_TURN";

		[Token(Token = "0x4001162")]
		public const string LABEL_UNIT_SYSTEM = "LABEL_UNIT_SYSTEM";

		[Token(Token = "0x4001163")]
		public const string LABEL_UPCOMING = "LABEL_UPCOMING";

		[Token(Token = "0x4001164")]
		public const string LABEL_VOICE = "LABEL_VOICE";

		[Token(Token = "0x4001165")]
		public const string LABEL_VOICE_LANGUAGE = "LABEL_VOICE_LANGUAGE";

		[Token(Token = "0x4001166")]
		public const string LABEL_WEIGHT = "LABEL_WEIGHT";

		[Token(Token = "0x4001167")]
		public const string LABEL_WELCOME = "LABEL_WELCOME";

		[Token(Token = "0x4001168")]
		public const string LABEL_WELCOME_FORMAT = "LABEL_WELCOME_FORMAT";

		[Token(Token = "0x4001169")]
		public const string LABEL_WOD = "LABEL_WOD";

		[Token(Token = "0x400116A")]
		public const string LABEL_WOD_HIGHSCORE = "LABEL_WOD_HIGHSCORE";

		[Token(Token = "0x400116B")]
		public const string LABEL_WOD_SCORE = "LABEL_WOD_SCORE";

		[Token(Token = "0x400116C")]
		public const string MOOD_HAPPY = "MOOD_HAPPY";

		[Token(Token = "0x400116D")]
		public const string MOOD_NORMAL = "MOOD_NORMAL";

		[Token(Token = "0x400116E")]
		public const string MOOD_SAD = "MOOD_SAD";

		[Token(Token = "0x400116F")]
		public const string MOOD_VERY_HAPPY = "MOOD_VERY_HAPPY";

		[Token(Token = "0x4001170")]
		public const string MOOD_VERY_SAD = "MOOD_VERY_SAD";

		[Token(Token = "0x4001171")]
		public const string TAB_GAMES = "TAB_GAMES";

		[Token(Token = "0x4001172")]
		public const string TAB_OPTIONS = "TAB_OPTIONS";

		[Token(Token = "0x4001173")]
		public const string TAB_STATS = "TAB_STATS";

		[Token(Token = "0x4001174")]
		public const string TAB_WOD = "TAB_WOD";

		[Token(Token = "0x4001175")]
		public const string TOGGLE_PRIVACY = "TOGGLE_PRIVACY";

		[Token(Token = "0x4001176")]
		public const string TOGGLE_PROMOTIONS = "TOGGLE_PROMOTIONS";

		[Token(Token = "0x4001177")]
		public const string LABEL_STATS_MOOD = "LABEL_STATS_MOOD";

		[Token(Token = "0x4001178")]
		public const string LABEL_STATS_SLEEP = "LABEL_STATS_SLEEP";

		[Token(Token = "0x4001179")]
		public const string LABEL_WORKOUT_COMPLETED = "LABEL_WORKOUT_COMPLETED";

		[Token(Token = "0x400117A")]
		public const string LABEL_COME_BACK_TOMORROW = "LABEL_COME_BACK_TOMORROW";

		[Token(Token = "0x400117B")]
		public const string LABEL_CHANGE_AVATAR = "LABEL_CHANGE_AVATAR";

		[Token(Token = "0x400117C")]
		public const string LABEL_MIN_SESSIONS_EPI = "LABEL_MIN_SESSIONS_EPI";

		[Token(Token = "0x400117D")]
		public const string HEADER_ERROR_VERSION_NOT_VALID = "HEADER_ERROR_VERSION_NOT_VALID";

		[Token(Token = "0x400117E")]
		public const string ERROR_VERSION_NOT_VALID = "ERROR_VERSION_NOT_VALID";

		[Token(Token = "0x400117F")]
		public const string HEADER_ERROR_DISCONNECT = "HEADER_ERROR_DISCONNECT";

		[Token(Token = "0x4001180")]
		public const string ERROR_DISCONNECT = "ERROR_DISCONNECT";

		[Token(Token = "0x4001181")]
		public const string ERROR_NEW_VERSION_AVAILABLE = "ERROR_NEW_VERSION_AVAILABLE";

		[Token(Token = "0x4001182")]
		public const string HEADER_ERROR_NEW_VERSION_AVAILABLE = "HEADER_ERROR_NEW_VERSION_AVAILABLE";

		[Token(Token = "0x4001183")]
		public const string HEADER_BAR_CREDITS = "HEADER_BAR_CREDITS";

		[Token(Token = "0x4001184")]
		public const string LABEL_NO_DATA = "LABEL_NO_DATA";

		[Token(Token = "0x4001185")]
		public const string LABEL_WORKOUT_UNAVAILABLE = "LABEL_WORKOUT_UNAVAILABLE";

		[Token(Token = "0x4001186")]
		public const string LABEL_COME_BACK_LATER = "LABEL_COME_BACK_LATER";

		[Token(Token = "0x4001187")]
		public const string LABEL_VERIFICATION_EMAIL_SENT = "LABEL_VERIFICATION_EMAIL_SENT";

		[Token(Token = "0x4001188")]
		public const string BODY_VERIFICATION_EMAIL_SENT = "BODY_VERIFICATION_EMAIL_SENT";

		[Token(Token = "0x4001189")]
		public const string BUTTON_RESEND_EMAIL = "BUTTON_RESEND_EMAIL";

		[Token(Token = "0x400118A")]
		public const string BUTTON_DONE_EMAIL_VERIFIED = "BUTTON_DONE_EMAIL_VERIFIED";

		[Token(Token = "0x400118B")]
		public const string LABEL_NEW_EMAIL_SENT = "LABEL_NEW_EMAIL_SENT";

		[Token(Token = "0x400118C")]
		public const string BODY_NEW_EMAIL_SENT = "BODY_NEW_EMAIL_SENT";

		[Token(Token = "0x400118D")]
		public const string LABEL_FAULTY_CONTROLLERS = "LABEL_FAULTY_CONTROLLERS";

		[Token(Token = "0x400118E")]
		public const string BODY_FAULTY_CONTOLLERS = "BODY_FAULTY_CONTOLLERS";

		[Token(Token = "0x400118F")]
		public const string LABEL_SESSION_SCORE = "LABEL_SESSION_SCORE";

		[Token(Token = "0x4001190")]
		public const string BODY_FIRST_SESSION = "BODY_FIRST_SESSION";

		[Token(Token = "0x4001191")]
		public const string TITLE_FIRST_SESSION = "TITLE_FIRST_SESSION";

		[Token(Token = "0x4001192")]
		public const string GAME_ODD_EGG = "GAME_ODD_EGG";

		[Token(Token = "0x4001193")]
		public const string GAME_WHACK_A_MOLE = "GAME_WHACK_A_MOLE";

		[Token(Token = "0x4001194")]
		public const string GAME_ASSEMBLY = "GAME_ASSEMBLY";

		[Token(Token = "0x4001195")]
		public const string LABEL_SUBTITLES_LANGUAGE = "LABEL_SUBTITLES_LANGUAGE";

		[Token(Token = "0x4001196")]
		public const string LABEL_LOADING_MESSAGE_1 = "LABEL_LOADING_MESSAGE_1";

		[Token(Token = "0x4001197")]
		public const string LABEL_LOADING_MESSAGE_2 = "LABEL_LOADING_MESSAGE_2";

		[Token(Token = "0x4001198")]
		public const string LABEL_LOADING_MESSAGE_3 = "LABEL_LOADING_MESSAGE_3";

		[Token(Token = "0x4001199")]
		public const string LABEL_LOADING_MESSAGE_4 = "LABEL_LOADING_MESSAGE_4";

		[Token(Token = "0x400119A")]
		public const string LABEL_LOADING_MESSAGE_5 = "LABEL_LOADING_MESSAGE_5";

		[Token(Token = "0x400119B")]
		public const string LABEL_LOADING_MESSAGE_6 = "LABEL_LOADING_MESSAGE_6";

		[Token(Token = "0x400119C")]
		public const string LABEL_LOADING_MESSAGE_7 = "LABEL_LOADING_MESSAGE_7";

		[Token(Token = "0x400119D")]
		public const string LABEL_LOADING_MESSAGE_8 = "LABEL_LOADING_MESSAGE_8";

		[Token(Token = "0x400119E")]
		public const string LABEL_LOADING_MESSAGE_9 = "LABEL_LOADING_MESSAGE_9";

		[Token(Token = "0x400119F")]
		public const string LABEL_LOADING_MESSAGE_10 = "LABEL_LOADING_MESSAGE_10";

		[Token(Token = "0x40011A0")]
		public const string LABEL_LOADING_MESSAGE_11 = "LABEL_LOADING_MESSAGE_11";

		[Token(Token = "0x40011A1")]
		public const string LABEL_LOADING_MESSAGE_12 = "LABEL_LOADING_MESSAGE_12";

		[Token(Token = "0x40011A2")]
		public const string LABEL_LOADING_MESSAGE_13 = "LABEL_LOADING_MESSAGE_13";

		[Token(Token = "0x40011A3")]
		public const string TITLE_SERVER_UNAVAILABLE = "TITLE_SERVER_UNAVAILABLE";

		[Token(Token = "0x40011A4")]
		public const string BODY_SERVER_UNAVAILABLE = "BODY_SERVER_UNAVAILABLE";

		[Token(Token = "0x40011A5")]
		public const string GAME_HARMONIZE = "GAME_HARMONIZE";

		[Token(Token = "0x40011A6")]
		public const string GAME_MAESTRO = "GAME_MAESTRO";

		[Token(Token = "0x40011A7")]
		public const string LABEL_LOADING = "LABEL_LOADING";

		[Token(Token = "0x40011A8")]
		public const string BODY_REGISTRATION_DISCLAIMER = "BODY_REGISTRATION_DISCLAIMER";

		[Token(Token = "0x40011A9")]
		public const string LABEL_LOADING_PREFIX = "LABEL_LOADING_PREFIX";

		[Token(Token = "0x40011AA")]
		public const string GAME_SHOOTER = "GAME_SHOOTER";

		[Token(Token = "0x40011AB")]
		public const string INPUT_EMAIL_CONFIRM = "INPUT_EMAIL_CONFIRM";

		[Token(Token = "0x40011AC")]
		public const string FORM_ERROR_EMAIL_NO_MATCH = "FORM_ERROR_EMAIL_NO_MATCH";

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x1479608", Offset = "0x1479608", VA = "0x1479608")]
		public LocalizationKeys()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class DataManager : MonoBehaviour
	{
		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB784B8", Offset = "0xB784B8")]
		[SerializeField]
		private bool _bypassRemoteConfigUpdate;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78504", Offset = "0xB78504")]
		private static DataManager <Instance>k__BackingField;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IDataService _dataService;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameDetailsManager _gameDetailsManager;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StatisticsManager _statisticsManager;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RemoteConfigManager _remoteConfigManager;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MomentDataManager _momentDataManager;

		[Token(Token = "0x170001B3")]
		public static DataManager Instance
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0xF04E48", Offset = "0xF04E48", VA = "0xF04E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87634", Offset = "0xB87634")]
			get
			{
				return null;
			}
			[Token(Token = "0x600148D")]
			[Address(RVA = "0xF04E98", Offset = "0xF04E98", VA = "0xF04E98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87644", Offset = "0xB87644")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public IDataService DataService
		{
			[Token(Token = "0x600148F")]
			[Address(RVA = "0xEF7978", Offset = "0xEF7978", VA = "0xEF7978")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		public GameDetailsManager GameDetailsManager
		{
			[Token(Token = "0x6001490")]
			[Address(RVA = "0xEF72E0", Offset = "0xEF72E0", VA = "0xEF72E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		public StatisticsManager StatisticsManager
		{
			[Token(Token = "0x6001491")]
			[Address(RVA = "0xF05148", Offset = "0xF05148", VA = "0xF05148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		public RemoteConfigManager RemoteConfigManager
		{
			[Token(Token = "0x6001492")]
			[Address(RVA = "0xF051F4", Offset = "0xF051F4", VA = "0xF051F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B8")]
		public MomentDataManager MomentDataManager
		{
			[Token(Token = "0x6001493")]
			[Address(RVA = "0xF052A8", Offset = "0xF052A8", VA = "0xF052A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xF04EEC", Offset = "0xF04EEC", VA = "0xF04EEC")]
		private DataManager()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xF053E8", Offset = "0xF053E8", VA = "0xF053E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xF05440", Offset = "0xF05440", VA = "0xF05440")]
		private void Start()
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xF04EF4", Offset = "0xF04EF4", VA = "0xF04EF4")]
		private IDataService GetDataService()
		{
			return null;
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xF050A0", Offset = "0xF050A0", VA = "0xF050A0")]
		private GameDetailsManager GetGameDetailsManager()
		{
			return null;
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xF0514C", Offset = "0xF0514C", VA = "0xF0514C")]
		private StatisticsManager GetStatisticsManager()
		{
			return null;
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xF051F8", Offset = "0xF051F8", VA = "0xF051F8")]
		private RemoteConfigManager GetRemoteConfigManager()
		{
			return null;
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xF054B8", Offset = "0xF054B8", VA = "0xF054B8")]
		private void StartGameplayDataTracking()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xF052AC", Offset = "0xF052AC", VA = "0xF052AC")]
		private MomentDataManager GetMomentDataManager()
		{
			return null;
		}
	}
	[Token(Token = "0x2000283")]
	public class DeviceDataManager : GameplayDataManager
	{
		[Token(Token = "0x40011B4")]
		private const string _LIST_OF_FRAMES_KEY = "F";

		[Token(Token = "0x40011B5")]
		private const float _TRANSFER_DATA_INTERVAL = 1f;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _nextTransferTimeLeft;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Player _player;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _leftControllerTransform;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _rightControllerTransform;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _headsetTransform;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _leftControllerPosition;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _rightControllerPosition;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 _headsetPosition;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 _leftControllerRotation;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _rightControllerRotation;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 _headsetRotation;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<string> _trackedData;

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xF05F74", Offset = "0xF05F74", VA = "0xF05F74")]
		protected new void Awake()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xF05FE8", Offset = "0xF05FE8", VA = "0xF05FE8")]
		protected new void Start()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xF060F4", Offset = "0xF060F4", VA = "0xF060F4")]
		private void Update()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xF0610C", Offset = "0xF0610C", VA = "0xF0610C", Slot = "9")]
		protected override void StopTracking()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xF061A8", Offset = "0xF061A8", VA = "0xF061A8", Slot = "10")]
		protected override void TrackData()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xF062D4", Offset = "0xF062D4", VA = "0xF062D4", Slot = "11")]
		protected override void ClearTrackedData()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xF06334", Offset = "0xF06334", VA = "0xF06334", Slot = "12")]
		protected override void TransferData()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xF064F0", Offset = "0xF064F0", VA = "0xF064F0")]
		public DeviceDataManager()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class EnhanceManager : AppManager
	{
		[Serializable]
		[Token(Token = "0x2000684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB729A4", Offset = "0xB729A4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static GameDetailsManager.OnGameDetailsFetched <>9__20_0;

			[Token(Token = "0x4002912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static GeneralDialog.OnDialogButton <>9__21_4;

			[Token(Token = "0x4002913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static GeneralDialog.OnDialogButton <>9__26_1;

			[Token(Token = "0x6002D77")]
			[Address(RVA = "0xF08D2C", Offset = "0xF08D2C", VA = "0xF08D2C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002D78")]
			[Address(RVA = "0xF08D34", Offset = "0xF08D34", VA = "0xF08D34")]
			internal void <StartSession>b__20_0()
			{
			}

			[Token(Token = "0x6002D79")]
			[Address(RVA = "0xF08D7C", Offset = "0xF08D7C", VA = "0xF08D7C")]
			internal void <ConnectToServer>b__21_4()
			{
			}

			[Token(Token = "0x6002D7A")]
			[Address(RVA = "0xF08D84", Offset = "0xF08D84", VA = "0xF08D84")]
			internal void <SessionManager_AuthSuccess>b__26_1()
			{
			}
		}

		[Token(Token = "0x2000685")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB729B4", Offset = "0xB729B4")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4002914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool> action;

			[Token(Token = "0x6002D7B")]
			[Address(RVA = "0xF07218", Offset = "0xF07218", VA = "0xF07218")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002D7C")]
			[Address(RVA = "0xF08D8C", Offset = "0xF08D8C", VA = "0xF08D8C")]
			internal void <CheckInternetConnection>b__0(bool isConnected)
			{
			}
		}

		[Token(Token = "0x2000686")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB729C4", Offset = "0xB729C4")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4002915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool> action;

			[Token(Token = "0x6002D7D")]
			[Address(RVA = "0xF073E4", Offset = "0xF073E4", VA = "0xF073E4")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6002D7E")]
			[Address(RVA = "0xF08DF4", Offset = "0xF08DF4", VA = "0xF08DF4")]
			internal void <CheckServerConnection>b__0(bool isConnected)
			{
			}
		}

		[Token(Token = "0x2000687")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB729D4", Offset = "0xB729D4")]
		private sealed class <CheckURL_Coroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002918")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4002919")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<bool> action;

			[Token(Token = "0x400291A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WWW <www>5__2;

			[Token(Token = "0x17000509")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D82")]
				[Address(RVA = "0xF09738", Offset = "0xF09738", VA = "0xF09738", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D84")]
				[Address(RVA = "0xF097A4", Offset = "0xF097A4", VA = "0xF097A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D7F")]
			[Address(RVA = "0xF073EC", Offset = "0xF073EC", VA = "0xF073EC")]
			[DebuggerHidden]
			public <CheckURL_Coroutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002D80")]
			[Address(RVA = "0xF09644", Offset = "0xF09644", VA = "0xF09644", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D81")]
			[Address(RVA = "0xF09648", Offset = "0xF09648", VA = "0xF09648", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D83")]
			[Address(RVA = "0xF09740", Offset = "0xF09740", VA = "0xF09740", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB729E4", Offset = "0xB729E4")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x400291B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EnhanceManager <>4__this;

			[Token(Token = "0x400291C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool success;

			[Token(Token = "0x400291D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GeneralDialog.OnDialogButton <>9__2;

			[Token(Token = "0x6002D85")]
			[Address(RVA = "0xF075B4", Offset = "0xF075B4", VA = "0xF075B4")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6002D86")]
			[Address(RVA = "0xF08E5C", Offset = "0xF08E5C", VA = "0xF08E5C")]
			internal void <SessionManager_AuthSuccess>b__0(AttentionLab.REST.Request request, EnhanceVersion version)
			{
			}

			[Token(Token = "0x6002D87")]
			[Address(RVA = "0xF0911C", Offset = "0xF0911C", VA = "0xF0911C")]
			internal void <SessionManager_AuthSuccess>b__2()
			{
			}
		}

		[Token(Token = "0x2000689")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB729F4", Offset = "0xB729F4")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x400291E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EnhanceManager <>4__this;

			[Token(Token = "0x400291F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float interval;

			[Token(Token = "0x4002920")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int errorCount;

			[Token(Token = "0x4002921")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GeneralDialog.OnDialogButton <>9__1;

			[Token(Token = "0x6002D88")]
			[Address(RVA = "0xF09140", Offset = "0xF09140", VA = "0xF09140")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6002D89")]
			[Address(RVA = "0xF09148", Offset = "0xF09148", VA = "0xF09148")]
			internal void <CheckConnection_Coroutine>b__0(bool connected)
			{
			}

			[Token(Token = "0x6002D8A")]
			[Address(RVA = "0xF09308", Offset = "0xF09308", VA = "0xF09308")]
			internal void <CheckConnection_Coroutine>b__1()
			{
			}
		}

		[Token(Token = "0x200068A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72A04", Offset = "0xB72A04")]
		private sealed class <CheckConnection_Coroutine>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002922")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EnhanceManager <>4__this;

			[Token(Token = "0x4002925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float interval;

			[Token(Token = "0x4002926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int errorCount;

			[Token(Token = "0x4002927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass32_0 <>8__1;

			[Token(Token = "0x1700050B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D8E")]
				[Address(RVA = "0xF095D0", Offset = "0xF095D0", VA = "0xF095D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D90")]
				[Address(RVA = "0xF0963C", Offset = "0xF0963C", VA = "0xF0963C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D8B")]
			[Address(RVA = "0xF07A6C", Offset = "0xF07A6C", VA = "0xF07A6C")]
			[DebuggerHidden]
			public <CheckConnection_Coroutine>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6002D8C")]
			[Address(RVA = "0xF0947C", Offset = "0xF0947C", VA = "0xF0947C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D8D")]
			[Address(RVA = "0xF09480", Offset = "0xF09480", VA = "0xF09480", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D8F")]
			[Address(RVA = "0xF095D8", Offset = "0xF095D8", VA = "0xF095D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200068B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72A14", Offset = "0xB72A14")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4002928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EnhanceManager <>4__this;

			[Token(Token = "0x4002929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool playTutorial;

			[Token(Token = "0x400292A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Wod wod;

			[Token(Token = "0x6002D91")]
			[Address(RVA = "0xF07DBC", Offset = "0xF07DBC", VA = "0xF07DBC")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6002D92")]
			[Address(RVA = "0xF09320", Offset = "0xF09320", VA = "0xF09320")]
			internal void <StartGameSession>b__0(int level, int timesPlayed)
			{
			}
		}

		[Token(Token = "0x200068C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72A24", Offset = "0xB72A24")]
		private sealed class <>c__DisplayClass34_1
		{
			[Token(Token = "0x400292B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int level;

			[Token(Token = "0x400292C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int timesPlayed;

			[Token(Token = "0x400292D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass34_0 CS$<>8__locals1;

			[Token(Token = "0x6002D93")]
			[Address(RVA = "0xF0941C", Offset = "0xF0941C", VA = "0xF0941C")]
			public <>c__DisplayClass34_1()
			{
			}

			[Token(Token = "0x6002D94")]
			[Address(RVA = "0xF09424", Offset = "0xF09424", VA = "0xF09424")]
			internal void <StartGameSession>b__1()
			{
			}
		}

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78514", Offset = "0xB78514")]
		[SerializeField]
		private PauseMenu _pauseMenu;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UserSession _session;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AttentionLab.Enums.GameType _gameType;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _playTutorial;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Wod _wod;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SceneDataFromGame _failedSessionData;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78560", Offset = "0xB78560")]
		private Game <GameData>k__BackingField;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78570", Offset = "0xB78570")]
		private GameSessionController <GameSessionController>k__BackingField;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static EnhanceManager _instance;

		[Token(Token = "0x170001B9")]
		public Game GameData
		{
			[Token(Token = "0x60014A4")]
			[Address(RVA = "0xF06500", Offset = "0xF06500", VA = "0xF06500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87654", Offset = "0xB87654")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014A5")]
			[Address(RVA = "0xF06508", Offset = "0xF06508", VA = "0xF06508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87664", Offset = "0xB87664")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public GameSessionController GameSessionController
		{
			[Token(Token = "0x60014A6")]
			[Address(RVA = "0xF06510", Offset = "0xF06510", VA = "0xF06510")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87674", Offset = "0xB87674")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014A7")]
			[Address(RVA = "0xF06518", Offset = "0xF06518", VA = "0xF06518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87684", Offset = "0xB87684")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public static EnhanceManager Instance
		{
			[Token(Token = "0x60014A8")]
			[Address(RVA = "0xF06520", Offset = "0xF06520", VA = "0xF06520")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xF0665C", Offset = "0xF0665C", VA = "0xF0665C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xF06894", Offset = "0xF06894", VA = "0xF06894", Slot = "6")]
		protected override void Pause(bool pause)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xF069BC", Offset = "0xF069BC", VA = "0xF069BC")]
		private void PauseMenu_ActionPressed(PauseMenu sender, ResumeActionType actionType)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xF06A14", Offset = "0xF06A14", VA = "0xF06A14", Slot = "5")]
		public override void StartSession()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xF07064", Offset = "0xF07064", VA = "0xF07064")]
		private void ConnectToServer()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xF070E0", Offset = "0xF070E0", VA = "0xF070E0")]
		private void CheckInternetConnection(Action<bool> action)
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xF072A0", Offset = "0xF072A0", VA = "0xF072A0")]
		private void CheckServerConnection(Action<bool> action)
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xF07220", Offset = "0xF07220", VA = "0xF07220")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB87694", Offset = "0xB87694")]
		private IEnumerator CheckURL_Coroutine(string url, Action<bool> action)
		{
			return null;
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xF07418", Offset = "0xF07418", VA = "0xF07418")]
		private void InitAuth()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xF074AC", Offset = "0xF074AC", VA = "0xF074AC")]
		private void SessionManager_AuthSuccess(UserSession sender, bool success)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xF075BC", Offset = "0xF075BC", VA = "0xF075BC")]
		private bool HasLatestVersion(EnhanceVersion version)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xF07678", Offset = "0xF07678", VA = "0xF07678")]
		private void ApplyUserOptions()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xF077F8", Offset = "0xF077F8", VA = "0xF077F8")]
		private void ApplyDefaultOptions()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xF078EC", Offset = "0xF078EC", VA = "0xF078EC")]
		private void StartUIFlow(bool authSuccess)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xF07948", Offset = "0xF07948", VA = "0xF07948")]
		private void CheckConnectionForever()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xF079D8", Offset = "0xF079D8", VA = "0xF079D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB876F8", Offset = "0xB876F8")]
		private IEnumerator CheckConnection_Coroutine(float interval, int errorCount)
		{
			return null;
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xF07A98", Offset = "0xF07A98", VA = "0xF07A98")]
		private void SessionManager_SessionEnded(UserSession sender)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xF07C48", Offset = "0xF07C48", VA = "0xF07C48")]
		public void StartGameSession(AttentionLab.Enums.GameType gameType, bool playTutorial, Wod wod)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xF07DC4", Offset = "0xF07DC4", VA = "0xF07DC4")]
		private void GameSessionController_SessionStarted(GameSessionController sender, Game game, Session session)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xF07DC8", Offset = "0xF07DC8", VA = "0xF07DC8")]
		private void GameSessionController_SessionStartFailed(GameSessionController sender, string error)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xF07F30", Offset = "0xF07F30", VA = "0xF07F30")]
		private void GameSessionController_SessionWillEnd(GameSessionController sender, Game game, SessionData session, SceneDataFromGame data)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xF07F34", Offset = "0xF07F34", VA = "0xF07F34")]
		private void GameSessionController_SessionEnded(GameSessionController sender, Game game, SessionData sessionData, SceneDataFromGame data)
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xF08324", Offset = "0xF08324", VA = "0xF08324")]
		private void GameSessionController_SessionEndFailed(GameSessionController sender, SceneDataFromGame data, string error)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xF084AC", Offset = "0xF084AC", VA = "0xF084AC")]
		private void SceneLoader_LoadEnd(SceneLoader sender, string currentSceneName, string lastSceneName)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xF08304", Offset = "0xF08304", VA = "0xF08304")]
		private void ResetGameSession()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xF086D0", Offset = "0xF086D0", VA = "0xF086D0")]
		public void Login(string username, string password, Action<bool, ResponseCodeType, string, Mood> callback)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xF086EC", Offset = "0xF086EC", VA = "0xF086EC")]
		public void Login(Action<bool, ResponseCodeType, string, Mood> callback)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xF08708", Offset = "0xF08708", VA = "0xF08708")]
		public void EndSession()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xF08724", Offset = "0xF08724", VA = "0xF08724")]
		public EnhanceManager()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xF0872C", Offset = "0xF0872C", VA = "0xF0872C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8775C", Offset = "0xB8775C")]
		private void <ConnectToServer>b__21_0(bool internet)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xF088F8", Offset = "0xF088F8", VA = "0xF088F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8776C", Offset = "0xB8776C")]
		private void <ConnectToServer>b__21_1(AttentionLab.REST.Request request)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xF08B0C", Offset = "0xF08B0C", VA = "0xF08B0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8777C", Offset = "0xB8777C")]
		private void <ConnectToServer>b__21_3(bool server)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xF08C50", Offset = "0xF08C50", VA = "0xF08C50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8778C", Offset = "0xB8778C")]
		private void <ConnectToServer>b__21_5()
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xF08C54", Offset = "0xF08C54", VA = "0xF08C54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8779C", Offset = "0xB8779C")]
		private void <ConnectToServer>b__21_2()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xF08C58", Offset = "0xF08C58", VA = "0xF08C58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB877AC", Offset = "0xB877AC")]
		private void <GameSessionController_SessionStartFailed>b__36_0()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xF08C68", Offset = "0xF08C68", VA = "0xF08C68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB877BC", Offset = "0xB877BC")]
		private void <GameSessionController_SessionStartFailed>b__36_1()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xF08C84", Offset = "0xF08C84", VA = "0xF08C84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB877CC", Offset = "0xB877CC")]
		private void <SceneLoader_LoadEnd>b__40_0()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xF08CAC", Offset = "0xF08CAC", VA = "0xF08CAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB877DC", Offset = "0xB877DC")]
		private void <SceneLoader_LoadEnd>b__40_1()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class GameDetailsManager : MonoBehaviour
	{
		[Token(Token = "0x200068D")]
		public delegate void OnGetGameSessionStartStatsReturned(int level, int timesPlayed);

		[Token(Token = "0x200068E")]
		public delegate void OnGameDetailsFetched();

		[Token(Token = "0x200068F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72A34", Offset = "0xB72A34")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x400292E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameDetailsManager <>4__this;

			[Token(Token = "0x400292F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OnGameDetailsFetched callback;

			[Token(Token = "0x6002D9D")]
			[Address(RVA = "0xF0B864", Offset = "0xF0B864", VA = "0xF0B864")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6002D9E")]
			[Address(RVA = "0xF0BD60", Offset = "0xF0BD60", VA = "0xF0BD60")]
			internal void <FetchGameDetails>b__0(AttentionLab.REST.Request request, List<Game> games)
			{
			}
		}

		[Token(Token = "0x2000690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72A44", Offset = "0xB72A44")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4002930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnGetGameSessionStartStatsReturned callback;

			[Token(Token = "0x6002D9F")]
			[Address(RVA = "0xF0BA88", Offset = "0xF0BA88", VA = "0xF0BA88")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6002DA0")]
			[Address(RVA = "0xF0BF14", Offset = "0xF0BF14", VA = "0xF0BF14")]
			internal void <GetGameSessionStartStats>b__0(AttentionLab.Enums.GameType gametype, GameStats stat)
			{
			}
		}

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<AttentionLab.Enums.GameType, Game> _gamesData;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _gameDetailsLocalJson;

		[Token(Token = "0x170001BC")]
		public Dictionary<AttentionLab.Enums.GameType, Game> GamesData
		{
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0xF0B638", Offset = "0xF0B638", VA = "0xF0B638")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0xF0B640", Offset = "0xF0B640", VA = "0xF0B640")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public bool IsReady
		{
			[Token(Token = "0x60014D3")]
			[Address(RVA = "0xF0B790", Offset = "0xF0B790", VA = "0xF0B790")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000039")]
		public event OnGameDetailsFetched GameDetailsFetched
		{
			[Token(Token = "0x60014D1")]
			[Address(RVA = "0xF0B648", Offset = "0xF0B648", VA = "0xF0B648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB877EC", Offset = "0xB877EC")]
			add
			{
			}
			[Token(Token = "0x60014D2")]
			[Address(RVA = "0xF0B6EC", Offset = "0xF0B6EC", VA = "0xF0B6EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB877FC", Offset = "0xB877FC")]
			remove
			{
			}
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xF0B7F4", Offset = "0xF0B7F4", VA = "0xF0B7F4")]
		private GameDetailsManager()
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xF06C98", Offset = "0xF06C98", VA = "0xF06C98")]
		public void FetchGameDetails(OnGameDetailsFetched callback)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xEF72E4", Offset = "0xEF72E4", VA = "0xEF72E4")]
		public Game GetGameData(AttentionLab.Enums.GameType gameType)
		{
			return null;
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xEF7388", Offset = "0xEF7388", VA = "0xEF7388")]
		public void GetGameSessionStartStats(AttentionLab.Enums.GameType gameType, OnGetGameSessionStartStatsReturned callback)
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xF0BCEC", Offset = "0xF0BCEC", VA = "0xF0BCEC")]
		public bool IsGameAvailable(AttentionLab.Enums.GameType gameType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000286")]
	public class GameplayDataManager : MonoBehaviour
	{
		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool _isTrackingData;

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xF05FE0", Offset = "0xF05FE0", VA = "0xF05FE0")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xF060F0", Offset = "0xF060F0", VA = "0xF060F0")]
		protected void Start()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xF0CAC0", Offset = "0xF0CAC0", VA = "0xF0CAC0")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xF0CB84", Offset = "0xF0CB84", VA = "0xF0CB84")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xF0CC48", Offset = "0xF0CC48", VA = "0xF0CC48", Slot = "4")]
		protected virtual void SceneManager_SceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xF0CF24", Offset = "0xF0CF24", VA = "0xF0CF24", Slot = "5")]
		protected virtual void SceneManager_SceneUnloaded(Scene scene)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xF0D210", Offset = "0xF0D210", VA = "0xF0D210", Slot = "6")]
		protected virtual void GameController_GameStart(GameController sender, int startLevel, bool isFirstTime)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xF0D21C", Offset = "0xF0D21C", VA = "0xF0D21C")]
		private void GameController_GameStop(GameController sender)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xF0D228", Offset = "0xF0D228", VA = "0xF0D228")]
		private void GameController_GameEnd(GameController sender)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xF0D234", Offset = "0xF0D234", VA = "0xF0D234", Slot = "7")]
		protected virtual void GameController_GamePaused(GameController sender, bool isPaused, SceneStatusType statusType)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xF0D24C", Offset = "0xF0D24C", VA = "0xF0D24C", Slot = "8")]
		protected virtual void StartTracking()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xF06138", Offset = "0xF06138", VA = "0xF06138", Slot = "9")]
		protected virtual void StopTracking()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xF0D2C0", Offset = "0xF0D2C0", VA = "0xF0D2C0", Slot = "10")]
		protected virtual void TrackData()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xF0D2C4", Offset = "0xF0D2C4", VA = "0xF0D2C4", Slot = "11")]
		protected virtual void ClearTrackedData()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xF0D2C8", Offset = "0xF0D2C8", VA = "0xF0D2C8", Slot = "12")]
		protected virtual void TransferData()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xF064EC", Offset = "0xF064EC", VA = "0xF064EC")]
		protected void AddStreamRecord(string partitionKey, string data)
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xF064F8", Offset = "0xF064F8", VA = "0xF064F8")]
		public GameplayDataManager()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class InputDataManager : GameplayDataManager
	{
		[Token(Token = "0x40011CF")]
		private const string _PRESS_BUTTON_KEY_ = "P";

		[Token(Token = "0x40011D0")]
		private const string _PAUSE_GAME_KEY_ = "PG";

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<ControllerType, string> _CONTROLLER_LABEL;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<InputType, string> _BUTTON_LABEL;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _pauseInputTrackedData;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<ControllerType, Dictionary<InputType, string>> _controllerButtonsTrackedData;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<ControllerType, Dictionary<InputType, bool>> _controllerTrackingButtons;

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x146DB10", Offset = "0x146DB10", VA = "0x146DB10")]
		protected new void Awake()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x146DD9C", Offset = "0x146DD9C", VA = "0x146DD9C")]
		protected new void OnEnable()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x146DFCC", Offset = "0x146DFCC", VA = "0x146DFCC")]
		protected new void OnDisable()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x146E1DC", Offset = "0x146E1DC", VA = "0x146E1DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x146E1F4", Offset = "0x146E1F4", VA = "0x146E1F4", Slot = "7")]
		protected override void GameController_GamePaused(GameController sender, bool isPaused, SceneStatusType statusType)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x146E454", Offset = "0x146E454", VA = "0x146E454")]
		private void InputSystem_TriggerPressed(InputSystem sender, InputType inputType, ControllerType controllerType)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x146E744", Offset = "0x146E744", VA = "0x146E744")]
		private void InputSystem_TriggerReleased(InputSystem sender, InputType inputType, ControllerType controllerType)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x146E9D4", Offset = "0x146E9D4", VA = "0x146E9D4", Slot = "9")]
		protected override void StopTracking()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x146EB28", Offset = "0x146EB28", VA = "0x146EB28", Slot = "10")]
		protected override void TrackData()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x146EB2C", Offset = "0x146EB2C", VA = "0x146EB2C", Slot = "11")]
		protected override void ClearTrackedData()
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x146E7F4", Offset = "0x146E7F4", VA = "0x146E7F4")]
		private void StopTrackingButton(ControllerType controllerType, InputType inputType)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x146ECFC", Offset = "0x146ECFC", VA = "0x146ECFC")]
		private void TransferButtonData(ControllerType controllerType, InputType inputType)
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x146F114", Offset = "0x146F114", VA = "0x146F114")]
		private void ClearButtonData(ControllerType controllerType, InputType inputType)
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x146E324", Offset = "0x146E324", VA = "0x146E324")]
		private void TransferAndClearPauseData()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x146F1E4", Offset = "0x146F1E4", VA = "0x146F1E4")]
		public InputDataManager()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class MomentDataManager : GameplayDataManager
	{
		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AttentionLab.MiniGames.GameMomentData _loggedMomentData;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _trackedData;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<AttentionLab.MiniGames.GameMomentData> LoggedMomentsData;

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x10BCE98", Offset = "0x10BCE98", VA = "0x10BCE98")]
		protected new void Awake()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x10BCF24", Offset = "0x10BCF24", VA = "0x10BCF24", Slot = "6")]
		protected override void GameController_GameStart(GameController sender, int startLevel, bool isFirstTime)
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x10BCF78", Offset = "0x10BCF78", VA = "0x10BCF78")]
		public void LogMoment(AttentionLab.MiniGames.GameMoment gameMoment)
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x10BD114", Offset = "0x10BD114", VA = "0x10BD114", Slot = "11")]
		protected override void ClearTrackedData()
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x10BD184", Offset = "0x10BD184", VA = "0x10BD184")]
		public MomentDataManager()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DeviceInfo _deviceInfo;

		[Token(Token = "0x170001BE")]
		public static DeviceFamily Family
		{
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x10BD2A0", Offset = "0x10BD2A0", VA = "0x10BD2A0")]
			get
			{
				return default(DeviceFamily);
			}
		}

		[Token(Token = "0x170001BF")]
		public static DeviceModel Model
		{
			[Token(Token = "0x60014FF")]
			[Address(RVA = "0x10BD340", Offset = "0x10BD340", VA = "0x10BD340")]
			get
			{
				return default(DeviceModel);
			}
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x10BD360", Offset = "0x10BD360", VA = "0x10BD360")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x10BD2C0", Offset = "0x10BD2C0", VA = "0x10BD2C0")]
		public static DeviceInfo GetDeviceInfo()
		{
			return null;
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x10BD364", Offset = "0x10BD364", VA = "0x10BD364")]
		private void ApplyPerformanceSettings()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x10BD474", Offset = "0x10BD474", VA = "0x10BD474")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class StatisticsManager : MonoBehaviour
	{
		[Token(Token = "0x2000691")]
		public delegate void OnGameCategoryStatsReturned(CategoryType categoryTpe, CategoryStats stat);

		[Token(Token = "0x2000692")]
		public delegate void OnGameCategoriesStatsReturned(CategoriesStats stat);

		[Token(Token = "0x2000693")]
		public delegate void OnGameStatsReturned(AttentionLab.Enums.GameType gameType, GameStats stat);

		[Token(Token = "0x2000694")]
		public delegate void OnGamesStatsReturned(GamesStats stat);

		[Token(Token = "0x2000695")]
		public delegate void OnUserEPIReturned(UserEpi stat);

		[Token(Token = "0x2000696")]
		public delegate void OnUserStatsReturned(AttentionLab.REST.Data.UserStats stat);

		[Token(Token = "0x2000697")]
		public delegate void OnWodsStatsReturned(WodStats stat);

		[Token(Token = "0x2000698")]
		public delegate void OnFailure();

		[Token(Token = "0x2000699")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72A54", Offset = "0xB72A54")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4002931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StatisticsManager <>4__this;

			[Token(Token = "0x4002932")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CategoryType categoryType;

			[Token(Token = "0x4002933")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OnGameCategoryStatsReturned successCallback;

			[Token(Token = "0x4002934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OnFailure failureCallback;

			[Token(Token = "0x6002DC1")]
			[Address(RVA = "0x1050278", Offset = "0x1050278", VA = "0x1050278")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6002DC2")]
			[Address(RVA = "0x105221C", Offset = "0x105221C", VA = "0x105221C")]
			internal void <GetGameCategoryStats>b__0(AttentionLab.REST.Request request, CategoryStats stats)
			{
			}
		}

		[Token(Token = "0x200069A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72A64", Offset = "0xB72A64")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4002935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StatisticsManager <>4__this;

			[Token(Token = "0x4002936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AttentionLab.Enums.GameType gameType;

			[Token(Token = "0x4002937")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OnGameStatsReturned successCallback;

			[Token(Token = "0x4002938")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OnFailure failureCallback;

			[Token(Token = "0x6002DC3")]
			[Address(RVA = "0x10506CC", Offset = "0x10506CC", VA = "0x10506CC")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002DC4")]
			[Address(RVA = "0x1052534", Offset = "0x1052534", VA = "0x1052534")]
			internal void <GetGameStats>b__0(AttentionLab.REST.Request request, GameStats stats)
			{
			}
		}

		[Token(Token = "0x200069B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72A74", Offset = "0xB72A74")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4002939")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StatisticsManager <>4__this;

			[Token(Token = "0x400293A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OnGameCategoriesStatsReturned successCallback;

			[Token(Token = "0x400293B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OnFailure failureCallback;

			[Token(Token = "0x6002DC5")]
			[Address(RVA = "0x1050A70", Offset = "0x1050A70", VA = "0x1050A70")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002DC6")]
			[Address(RVA = "0x105267C", Offset = "0x105267C", VA = "0x105267C")]
			internal void <GetGameCategoriesStats>b__0(AttentionLab.REST.Request request, CategoriesStats stats)
			{
			}
		}

		[Token(Token = "0x200069C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72A84", Offset = "0xB72A84")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x400293C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StatisticsManager <>4__this;

			[Token(Token = "0x400293D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OnGamesStatsReturned successCallback;

			[Token(Token = "0x400293E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OnFailure failureCallback;

			[Token(Token = "0x6002DC7")]
			[Address(RVA = "0x1050F6C", Offset = "0x1050F6C", VA = "0x1050F6C")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6002DC8")]
			[Address(RVA = "0x10526FC", Offset = "0x10526FC", VA = "0x10526FC")]
			internal void <GetGamesStats>b__0(AttentionLab.REST.Request request, GamesStats stats)
			{
			}
		}

		[Token(Token = "0x200069D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72A94", Offset = "0xB72A94")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x400293F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StatisticsManager <>4__this;

			[Token(Token = "0x4002940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OnUserEPIReturned successCallback;

			[Token(Token = "0x4002941")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OnFailure failureCallback;

			[Token(Token = "0x6002DC9")]
			[Address(RVA = "0x1051468", Offset = "0x1051468", VA = "0x1051468")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002DCA")]
			[Address(RVA = "0x105277C", Offset = "0x105277C", VA = "0x105277C")]
			internal void <GetUserEPI>b__0(AttentionLab.REST.Request request, UserEpi stats)
			{
			}
		}

		[Token(Token = "0x200069E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72AA4", Offset = "0xB72AA4")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4002942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StatisticsManager <>4__this;

			[Token(Token = "0x4002943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OnUserStatsReturned successCallback;

			[Token(Token = "0x4002944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OnFailure failureCallback;

			[Token(Token = "0x6002DCB")]
			[Address(RVA = "0x1051964", Offset = "0x1051964", VA = "0x1051964")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002DCC")]
			[Address(RVA = "0x10527FC", Offset = "0x10527FC", VA = "0x10527FC")]
			internal void <GetUserStats>b__0(AttentionLab.REST.Request request, AttentionLab.REST.Data.UserStats stats)
			{
			}
		}

		[Token(Token = "0x200069F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72AB4", Offset = "0xB72AB4")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4002945")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StatisticsManager <>4__this;

			[Token(Token = "0x4002946")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OnWodsStatsReturned successCallback;

			[Token(Token = "0x4002947")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OnFailure failureCallback;

			[Token(Token = "0x6002DCD")]
			[Address(RVA = "0x1051E60", Offset = "0x1051E60", VA = "0x1051E60")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6002DCE")]
			[Address(RVA = "0x105287C", Offset = "0x105287C", VA = "0x105287C")]
			internal void <GetWodsStats>b__0(AttentionLab.REST.Request request, WodStats stats)
			{
			}
		}

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<CategoryType, CategoryStats> _categoryStatsDic;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<AttentionLab.Enums.GameType, GameStats> _gameStatsDic;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CategoriesStats _categoriesStats;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GamesStats _gamesStats;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UserEpi _userEPI;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AttentionLab.REST.Data.UserStats _userStats;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WodStats _wodStats;

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x104FFF0", Offset = "0x104FFF0", VA = "0x104FFF0")]
		private StatisticsManager()
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x104FFF8", Offset = "0x104FFF8", VA = "0x104FFF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x1050088", Offset = "0x1050088", VA = "0x1050088")]
		public void GetGameCategoryStats(CategoryType categoryType, OnGameCategoryStatsReturned successCallback, [Optional] OnFailure failureCallback)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x10504DC", Offset = "0x10504DC", VA = "0x10504DC")]
		public void GetGameStats(AttentionLab.Enums.GameType gameType, OnGameStatsReturned successCallback, [Optional] OnFailure failureCallback)
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x1050930", Offset = "0x1050930", VA = "0x1050930")]
		public void GetGameCategoriesStats(OnGameCategoriesStatsReturned successCallback, [Optional] OnFailure failureCallback)
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x1050E2C", Offset = "0x1050E2C", VA = "0x1050E2C")]
		public void GetGamesStats(OnGamesStatsReturned successCallback, [Optional] OnFailure failureCallback)
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x1051328", Offset = "0x1051328", VA = "0x1051328")]
		public void GetUserEPI(OnUserEPIReturned successCallback, [Optional] OnFailure failureCallback)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x1051824", Offset = "0x1051824", VA = "0x1051824")]
		public void GetUserStats(OnUserStatsReturned successCallback, [Optional] OnFailure failureCallback)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x1051D20", Offset = "0x1051D20", VA = "0x1051D20")]
		public void GetWodsStats(OnWodsStatsReturned successCallback, [Optional] OnFailure failureCallback)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x10499EC", Offset = "0x10499EC", VA = "0x10499EC")]
		public void InvalidateCache()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class ThemeManager
	{
		[Token(Token = "0x20006A0")]
		public delegate void OnThemeChanged(Theme current, int updateNumber);

		[Token(Token = "0x40011E1")]
		private const string THEME_RESOURCES_PATH_FORMAT = "Themes/{0}";

		[Token(Token = "0x40011E2")]
		private const string THEME_TEXT_STYLES_RESOURCES_PATH_FORMAT = "Themes/TextStyles/{0}";

		[Token(Token = "0x40011E3")]
		private const string THEME_DEFAULT_NAME = "default";

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OnThemeChanged ThemeChanged;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78590", Offset = "0xB78590")]
		private static int <UpdateNumber>k__BackingField;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Theme _currentTheme;

		[Token(Token = "0x170001C0")]
		public static Theme Current
		{
			[Token(Token = "0x600150E")]
			[Address(RVA = "0x1053650", Offset = "0x1053650", VA = "0x1053650")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		public static int UpdateNumber
		{
			[Token(Token = "0x600150F")]
			[Address(RVA = "0x105379C", Offset = "0x105379C", VA = "0x105379C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8780C", Offset = "0xB8780C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001510")]
			[Address(RVA = "0x1053804", Offset = "0x1053804", VA = "0x1053804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8781C", Offset = "0xB8781C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x1053870", Offset = "0x1053870", VA = "0x1053870")]
		public static void SetTheme(Theme theme)
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x1053A94", Offset = "0x1053A94", VA = "0x1053A94")]
		public static void SetTheme(string name)
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x1053730", Offset = "0x1053730", VA = "0x1053730")]
		public static void SetDefaultTheme()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x1053CEC", Offset = "0x1053CEC", VA = "0x1053CEC")]
		public static void SetTextStyles(string name)
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x10541F8", Offset = "0x10541F8", VA = "0x10541F8")]
		public static void SetDefaultTextStyles()
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x10538D4", Offset = "0x10538D4", VA = "0x10538D4")]
		private static void UpdateTheme(Theme theme)
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x1053FD4", Offset = "0x1053FD4", VA = "0x1053FD4")]
		private static void UpdateTextStyles(ThemeTextStyles textStyles)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x1053AFC", Offset = "0x1053AFC", VA = "0x1053AFC")]
		private static Theme GetTheme(string name)
		{
			return null;
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x1053D54", Offset = "0x1053D54", VA = "0x1053D54")]
		private static ThemeTextStyles GetTextStyles(string name)
		{
			return null;
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x1054644", Offset = "0x1054644", VA = "0x1054644")]
		public ThemeManager()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class OculusCamera : PlayerCamera
	{
		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB785A0", Offset = "0xB785A0")]
		[SerializeField]
		private OVRCameraRig ovrCameraRig;

		[Token(Token = "0x170001C2")]
		public OVRCameraRig CameraRig
		{
			[Token(Token = "0x600151C")]
			[Address(RVA = "0x10BD18C", Offset = "0x10BD18C", VA = "0x10BD18C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x10BD194", Offset = "0x10BD194", VA = "0x10BD194")]
		private void Start()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x10BD288", Offset = "0x10BD288", VA = "0x10BD288")]
		public OculusCamera()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class PicoCamera : PlayerCamera
	{
		[Token(Token = "0x600151F")]
		[Address(RVA = "0x10BD298", Offset = "0x10BD298", VA = "0x10BD298")]
		public PicoCamera()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class PlayerCamera : MonoBehaviour
	{
		[Token(Token = "0x20006A1")]
		public delegate void OnDeviceRecentered(PlayerCamera sender, float playerHeight);

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB785EC", Offset = "0xB785EC")]
		[SerializeField]
		protected Camera _mainCamera;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected GameObject _pauseQuad;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected LayerMask _alwaysVisibleLayer;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected LayerMask _uiLayer;

		[Token(Token = "0x170001C3")]
		public Camera MainCamera
		{
			[Token(Token = "0x6001522")]
			[Address(RVA = "0x10BE100", Offset = "0x10BE100", VA = "0x10BE100")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		public Vector3 Position
		{
			[Token(Token = "0x6001523")]
			[Address(RVA = "0x10BD560", Offset = "0x10BD560", VA = "0x10BD560")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1400003A")]
		public event OnDeviceRecentered DeviceRecentered
		{
			[Token(Token = "0x6001520")]
			[Address(RVA = "0x10BDC60", Offset = "0x10BDC60", VA = "0x10BDC60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8782C", Offset = "0xB8782C")]
			add
			{
			}
			[Token(Token = "0x6001521")]
			[Address(RVA = "0x10BDF00", Offset = "0x10BDF00", VA = "0x10BDF00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8783C", Offset = "0xB8783C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x10BE108", Offset = "0x10BE108", VA = "0x10BE108")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x10BE114", Offset = "0x10BE114", VA = "0x10BE114", Slot = "4")]
		protected virtual void DoAwake()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x10BE26C", Offset = "0x10BE26C", VA = "0x10BE26C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x10BE278", Offset = "0x10BE278", VA = "0x10BE278", Slot = "5")]
		protected virtual void DoStart()
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x10BE27C", Offset = "0x10BE27C", VA = "0x10BE27C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x10BE288", Offset = "0x10BE288", VA = "0x10BE288", Slot = "6")]
		protected virtual void DoUpdate()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x10BE398", Offset = "0x10BE398", VA = "0x10BE398", Slot = "7")]
		public virtual void Pause(bool pause)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x10BE440", Offset = "0x10BE440", VA = "0x10BE440")]
		public void ForceRecenter()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x10BE310", Offset = "0x10BE310", VA = "0x10BE310")]
		public void Display_RecenteredPose()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x10BD290", Offset = "0x10BD290", VA = "0x10BD290")]
		public PlayerCamera()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class SteamCamera : PlayerCamera
	{
		[Token(Token = "0x600152E")]
		[Address(RVA = "0x1052BF4", Offset = "0x1052BF4", VA = "0x1052BF4")]
		public SteamCamera()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class ViveCamera : PlayerCamera
	{
		[Token(Token = "0x600152F")]
		[Address(RVA = "0xD34124", Offset = "0xD34124", VA = "0xD34124")]
		public ViveCamera()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class XRSpaceCamera : PlayerCamera
	{
		[Token(Token = "0x6001530")]
		[Address(RVA = "0xD35FC4", Offset = "0xD35FC4", VA = "0xD35FC4")]
		public XRSpaceCamera()
		{
		}
	}
	[Token(Token = "0x2000292")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB71420", Offset = "0xB71420")]
	public class Player : MonoBehaviour
	{
		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78658", Offset = "0xB78658")]
		[SerializeField]
		private PlayerCamera _playerCamera;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputModule _inputModule;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB786B4", Offset = "0xB786B4")]
		[SerializeField]
		private float _bellyHeightPercent;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78700", Offset = "0xB78700")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78710", Offset = "0xB78710")]
		private HandControllerManager <ControllerManager>k__BackingField;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78720", Offset = "0xB78720")]
		private static Player <Instance>k__BackingField;

		[Token(Token = "0x170001C5")]
		public PlayerCamera Camera
		{
			[Token(Token = "0x6001531")]
			[Address(RVA = "0x10BD47C", Offset = "0x10BD47C", VA = "0x10BD47C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		public float Height
		{
			[Token(Token = "0x6001532")]
			[Address(RVA = "0x10BD484", Offset = "0x10BD484", VA = "0x10BD484")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C7")]
		public float BellyHeight
		{
			[Token(Token = "0x6001533")]
			[Address(RVA = "0x10BD58C", Offset = "0x10BD58C", VA = "0x10BD58C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C8")]
		public Vector3 Forward
		{
			[Token(Token = "0x6001534")]
			[Address(RVA = "0x10BD5B4", Offset = "0x10BD5B4", VA = "0x10BD5B4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001C9")]
		public bool IsPaused
		{
			[Token(Token = "0x6001535")]
			[Address(RVA = "0x10BD5D8", Offset = "0x10BD5D8", VA = "0x10BD5D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8784C", Offset = "0xB8784C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001536")]
			[Address(RVA = "0x10BD5E0", Offset = "0x10BD5E0", VA = "0x10BD5E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8785C", Offset = "0xB8785C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public HandControllerManager ControllerManager
		{
			[Token(Token = "0x6001538")]
			[Address(RVA = "0x10BD5F4", Offset = "0x10BD5F4", VA = "0x10BD5F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8787C", Offset = "0xB8787C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001537")]
			[Address(RVA = "0x10BD5EC", Offset = "0x10BD5EC", VA = "0x10BD5EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8786C", Offset = "0xB8786C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public static Player Instance
		{
			[Token(Token = "0x6001539")]
			[Address(RVA = "0x10BD5FC", Offset = "0x10BD5FC", VA = "0x10BD5FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8788C", Offset = "0xB8788C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600153A")]
			[Address(RVA = "0x10BD64C", Offset = "0x10BD64C", VA = "0x10BD64C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8789C", Offset = "0xB8789C")]
			private set
			{
			}
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x10BD6A0", Offset = "0x10BD6A0", VA = "0x10BD6A0")]
		private Player()
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x10BD6A8", Offset = "0x10BD6A8", VA = "0x10BD6A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x10BD814", Offset = "0x10BD814", VA = "0x10BD814")]
		public static Player ToInstance(DeviceFamily deviceFamily)
		{
			return null;
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x10BD9FC", Offset = "0x10BD9FC", VA = "0x10BD9FC")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x10BDA70", Offset = "0x10BDA70", VA = "0x10BDA70")]
		public void Pause(bool pause)
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class PlayerAlignedTransform : MonoBehaviour
	{
		[Token(Token = "0x20006A2")]
		public enum AlignmentType
		{
			[Token(Token = "0x4002949")]
			Head,
			[Token(Token = "0x400294A")]
			Belly
		}

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78730", Offset = "0xB78730")]
		[SerializeField]
		private AlignmentType _alignmentType;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _offset;

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x10BDAC0", Offset = "0x10BDAC0", VA = "0x10BDAC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x10BDDC8", Offset = "0x10BDDC8", VA = "0x10BDDC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x10BDD04", Offset = "0x10BDD04", VA = "0x10BDD04")]
		private void UpdateTransform()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x10BE0F4", Offset = "0x10BE0F4", VA = "0x10BE0F4")]
		private void PlayerInstance_Recentered(PlayerCamera sender, float playerHeight)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x10BDFA4", Offset = "0x10BDFA4", VA = "0x10BDFA4")]
		private float GetHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x10BE0F8", Offset = "0x10BE0F8", VA = "0x10BE0F8")]
		public PlayerAlignedTransform()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class PlayerSpawner : MonoBehaviour
	{
		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7878C", Offset = "0xB7878C")]
		public GameObject rightUiPointerCosmeticPrefab;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject leftUiPointerCosmeticPrefab;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB787C4", Offset = "0xB787C4")]
		private static PlayerSpawner <Instance>k__BackingField;

		[Token(Token = "0x170001CC")]
		public static PlayerSpawner Instance
		{
			[Token(Token = "0x6001546")]
			[Address(RVA = "0x10BEACC", Offset = "0x10BEACC", VA = "0x10BEACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB878AC", Offset = "0xB878AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001547")]
			[Address(RVA = "0x10BEB1C", Offset = "0x10BEB1C", VA = "0x10BEB1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB878BC", Offset = "0xB878BC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x10BEB70", Offset = "0x10BEB70", VA = "0x10BEB70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x10BEBC4", Offset = "0x10BEBC4", VA = "0x10BEBC4")]
		private void Start()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x10BEBD8", Offset = "0x10BEBD8", VA = "0x10BEBD8")]
		private Player Spawn()
		{
			return null;
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x10BEBEC", Offset = "0x10BEBEC", VA = "0x10BEBEC")]
		public PlayerSpawner()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class PlayerSpawnPoint : MonoBehaviour
	{
		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB787D4", Offset = "0xB787D4")]
		[SerializeField]
		private SceneController _sceneController;

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x10BE9A0", Offset = "0x10BE9A0", VA = "0x10BE9A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x10BEA30", Offset = "0x10BEA30", VA = "0x10BEA30")]
		private void SceneController_ActiveStatusChanged(SceneController sender, bool active, SceneData sceneData)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x10BEAC4", Offset = "0x10BEAC4", VA = "0x10BEAC4")]
		public PlayerSpawnPoint()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class SceneController : MonoBehaviour
	{
		[Token(Token = "0x20006A3")]
		public delegate void OnLoaded(SceneController sender);

		[Token(Token = "0x20006A4")]
		public delegate void OnWillUnload(SceneController sender);

		[Token(Token = "0x20006A5")]
		public delegate void OnPaused(SceneController sender);

		[Token(Token = "0x20006A6")]
		public delegate void OnResumed(SceneController sender, ResumeActionType actionType);

		[Token(Token = "0x20006A7")]
		public delegate void OnActiveStatusChanged(SceneController sender, bool active, [Optional] SceneData sceneData);

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78870", Offset = "0xB78870")]
		private string <Name>k__BackingField;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78880", Offset = "0xB78880")]
		private int <BuildIndex>k__BackingField;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78890", Offset = "0xB78890")]
		private bool <IsLoaded>k__BackingField;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB788A0", Offset = "0xB788A0")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB788B0", Offset = "0xB788B0")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB788C0", Offset = "0xB788C0")]
		private SceneStatusType <Status>k__BackingField;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB788D0", Offset = "0xB788D0")]
		private SceneData <DataInput>k__BackingField;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB788E0", Offset = "0xB788E0")]
		private SceneData <DataOutput>k__BackingField;

		[Token(Token = "0x170001CD")]
		public string Name
		{
			[Token(Token = "0x6001559")]
			[Address(RVA = "0x104AE1C", Offset = "0x104AE1C", VA = "0x104AE1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8796C", Offset = "0xB8796C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600155A")]
			[Address(RVA = "0x104AE24", Offset = "0x104AE24", VA = "0x104AE24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8797C", Offset = "0xB8797C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public int BuildIndex
		{
			[Token(Token = "0x600155B")]
			[Address(RVA = "0x104AE2C", Offset = "0x104AE2C", VA = "0x104AE2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8798C", Offset = "0xB8798C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600155C")]
			[Address(RVA = "0x104AE34", Offset = "0x104AE34", VA = "0x104AE34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8799C", Offset = "0xB8799C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public bool IsLoaded
		{
			[Token(Token = "0x600155D")]
			[Address(RVA = "0x104AE3C", Offset = "0x104AE3C", VA = "0x104AE3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB879AC", Offset = "0xB879AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600155E")]
			[Address(RVA = "0x104AE44", Offset = "0x104AE44", VA = "0x104AE44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB879BC", Offset = "0xB879BC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public bool IsActive
		{
			[Token(Token = "0x600155F")]
			[Address(RVA = "0x104AE50", Offset = "0x104AE50", VA = "0x104AE50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB879CC", Offset = "0xB879CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001560")]
			[Address(RVA = "0x104AE58", Offset = "0x104AE58", VA = "0x104AE58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB879DC", Offset = "0xB879DC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public bool IsPaused
		{
			[Token(Token = "0x6001561")]
			[Address(RVA = "0x104AE64", Offset = "0x104AE64", VA = "0x104AE64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB879EC", Offset = "0xB879EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001562")]
			[Address(RVA = "0x104AE6C", Offset = "0x104AE6C", VA = "0x104AE6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB879FC", Offset = "0xB879FC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public SceneStatusType Status
		{
			[Token(Token = "0x6001563")]
			[Address(RVA = "0x104AE78", Offset = "0x104AE78", VA = "0x104AE78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87A0C", Offset = "0xB87A0C")]
			get
			{
				return default(SceneStatusType);
			}
			[Token(Token = "0x6001564")]
			[Address(RVA = "0x104AE80", Offset = "0x104AE80", VA = "0x104AE80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87A1C", Offset = "0xB87A1C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public SceneData DataInput
		{
			[Token(Token = "0x6001565")]
			[Address(RVA = "0x104AE88", Offset = "0x104AE88", VA = "0x104AE88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87A2C", Offset = "0xB87A2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001566")]
			[Address(RVA = "0x104AE90", Offset = "0x104AE90", VA = "0x104AE90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87A3C", Offset = "0xB87A3C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public SceneData DataOutput
		{
			[Token(Token = "0x6001567")]
			[Address(RVA = "0x104AE98", Offset = "0x104AE98", VA = "0x104AE98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87A4C", Offset = "0xB87A4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001568")]
			[Address(RVA = "0x104AEA0", Offset = "0x104AEA0", VA = "0x104AEA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87A5C", Offset = "0xB87A5C")]
			set
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event OnLoaded Loaded
		{
			[Token(Token = "0x600154F")]
			[Address(RVA = "0x104A7B4", Offset = "0x104A7B4", VA = "0x104A7B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB878CC", Offset = "0xB878CC")]
			add
			{
			}
			[Token(Token = "0x6001550")]
			[Address(RVA = "0x104A858", Offset = "0x104A858", VA = "0x104A858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB878DC", Offset = "0xB878DC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event OnWillUnload WillUnload
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0x104A8FC", Offset = "0x104A8FC", VA = "0x104A8FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB878EC", Offset = "0xB878EC")]
			add
			{
			}
			[Token(Token = "0x6001552")]
			[Address(RVA = "0x104A9A0", Offset = "0x104A9A0", VA = "0x104A9A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB878FC", Offset = "0xB878FC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public event OnPaused Paused
		{
			[Token(Token = "0x6001553")]
			[Address(RVA = "0x104AA44", Offset = "0x104AA44", VA = "0x104AA44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8790C", Offset = "0xB8790C")]
			add
			{
			}
			[Token(Token = "0x6001554")]
			[Address(RVA = "0x104AAE8", Offset = "0x104AAE8", VA = "0x104AAE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8791C", Offset = "0xB8791C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public event OnResumed Resumed
		{
			[Token(Token = "0x6001555")]
			[Address(RVA = "0x104AB8C", Offset = "0x104AB8C", VA = "0x104AB8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8792C", Offset = "0xB8792C")]
			add
			{
			}
			[Token(Token = "0x6001556")]
			[Address(RVA = "0x104AC30", Offset = "0x104AC30", VA = "0x104AC30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8793C", Offset = "0xB8793C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public event OnActiveStatusChanged ActiveStatusChanged
		{
			[Token(Token = "0x6001557")]
			[Address(RVA = "0x104ACD4", Offset = "0x104ACD4", VA = "0x104ACD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8794C", Offset = "0xB8794C")]
			add
			{
			}
			[Token(Token = "0x6001558")]
			[Address(RVA = "0x104AD78", Offset = "0x104AD78", VA = "0x104AD78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8795C", Offset = "0xB8795C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x104AEA8", Offset = "0x104AEA8", VA = "0x104AEA8")]
		public void Awake()
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x104AF6C", Offset = "0x104AF6C", VA = "0x104AF6C")]
		public void SceneLoaded(SceneData sceneData)
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x104B344", Offset = "0x104B344", VA = "0x104B344")]
		public void SceneWillUnload()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x104B714", Offset = "0x104B714", VA = "0x104B714")]
		public void ScenePaused()
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x104BAE8", Offset = "0x104BAE8", VA = "0x104BAE8")]
		public void SceneResumed(ResumeActionType actionType)
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x104BEEC", Offset = "0x104BEEC", VA = "0x104BEEC")]
		public void SceneActiveStatusChanged(bool active, SceneData sceneData)
		{
		}

		[Token(Token = "0x600156F")]
		public T GetOutputData<T>() where T : SceneData
		{
			return null;
		}

		[Token(Token = "0x6001570")]
		public T GetInputData<T>() where T : SceneData
		{
			return null;
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x104C31C", Offset = "0x104C31C", VA = "0x104C31C")]
		public SceneController()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class SceneData
	{
		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB788F0", Offset = "0xB788F0")]
		private string <FromSceneName>k__BackingField;

		[Token(Token = "0x170001D5")]
		public string FromSceneName
		{
			[Token(Token = "0x6001572")]
			[Address(RVA = "0x104C55C", Offset = "0x104C55C", VA = "0x104C55C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87A6C", Offset = "0xB87A6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001573")]
			[Address(RVA = "0x104C564", Offset = "0x104C564", VA = "0x104C564")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87A7C", Offset = "0xB87A7C")]
			set
			{
			}
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x104C56C", Offset = "0x104C56C", VA = "0x104C56C")]
		public SceneData(string fromScene)
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class SceneDataFromGame : SceneData
	{
		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78900", Offset = "0xB78900")]
		private DateTime <TimestampStart>k__BackingField;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78910", Offset = "0xB78910")]
		private DateTime <TimestampEnd>k__BackingField;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78920", Offset = "0xB78920")]
		private bool <GameCompleted>k__BackingField;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78930", Offset = "0xB78930")]
		private int <GameRetries>k__BackingField;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78940", Offset = "0xB78940")]
		private int <TutorialPlayCount>k__BackingField;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78950", Offset = "0xB78950")]
		private int <TutorialFinishCount>k__BackingField;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78960", Offset = "0xB78960")]
		private float <CurrentPoints>k__BackingField;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _currentLevel;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _maxLevelReached;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _ended;

		[Token(Token = "0x170001D6")]
		public DateTime TimestampStart
		{
			[Token(Token = "0x6001575")]
			[Address(RVA = "0x104C598", Offset = "0x104C598", VA = "0x104C598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87A8C", Offset = "0xB87A8C")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6001576")]
			[Address(RVA = "0x104C5A0", Offset = "0x104C5A0", VA = "0x104C5A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87A9C", Offset = "0xB87A9C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public DateTime TimestampEnd
		{
			[Token(Token = "0x6001577")]
			[Address(RVA = "0x104C5A8", Offset = "0x104C5A8", VA = "0x104C5A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87AAC", Offset = "0xB87AAC")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6001578")]
			[Address(RVA = "0x104C5B0", Offset = "0x104C5B0", VA = "0x104C5B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87ABC", Offset = "0xB87ABC")]
			set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public bool GameCompleted
		{
			[Token(Token = "0x6001579")]
			[Address(RVA = "0x104C5B8", Offset = "0x104C5B8", VA = "0x104C5B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87ACC", Offset = "0xB87ACC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600157A")]
			[Address(RVA = "0x104C5C0", Offset = "0x104C5C0", VA = "0x104C5C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87ADC", Offset = "0xB87ADC")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public int GameRetries
		{
			[Token(Token = "0x600157B")]
			[Address(RVA = "0x104C5CC", Offset = "0x104C5CC", VA = "0x104C5CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87AEC", Offset = "0xB87AEC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600157C")]
			[Address(RVA = "0x104C5D4", Offset = "0x104C5D4", VA = "0x104C5D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87AFC", Offset = "0xB87AFC")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public int TutorialPlayCount
		{
			[Token(Token = "0x600157D")]
			[Address(RVA = "0x104C5DC", Offset = "0x104C5DC", VA = "0x104C5DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87B0C", Offset = "0xB87B0C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600157E")]
			[Address(RVA = "0x104C5E4", Offset = "0x104C5E4", VA = "0x104C5E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87B1C", Offset = "0xB87B1C")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public int TutorialFinishCount
		{
			[Token(Token = "0x600157F")]
			[Address(RVA = "0x104C5EC", Offset = "0x104C5EC", VA = "0x104C5EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87B2C", Offset = "0xB87B2C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001580")]
			[Address(RVA = "0x104C5F4", Offset = "0x104C5F4", VA = "0x104C5F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87B3C", Offset = "0xB87B3C")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public bool TutorialFinished
		{
			[Token(Token = "0x6001581")]
			[Address(RVA = "0x104C5FC", Offset = "0x104C5FC", VA = "0x104C5FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DD")]
		public TimeSpan PlayTime
		{
			[Token(Token = "0x6001582")]
			[Address(RVA = "0x104C60C", Offset = "0x104C60C", VA = "0x104C60C")]
			get
			{
				return default(TimeSpan);
			}
		}

		[Token(Token = "0x170001DE")]
		public float CurrentPoints
		{
			[Token(Token = "0x6001583")]
			[Address(RVA = "0x104C660", Offset = "0x104C660", VA = "0x104C660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87B4C", Offset = "0xB87B4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001584")]
			[Address(RVA = "0x104C668", Offset = "0x104C668", VA = "0x104C668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87B5C", Offset = "0xB87B5C")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public int MaxLevelReached
		{
			[Token(Token = "0x6001585")]
			[Address(RVA = "0x104C670", Offset = "0x104C670", VA = "0x104C670")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001586")]
			[Address(RVA = "0x104C67C", Offset = "0x104C67C", VA = "0x104C67C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public int CurrentLevel
		{
			[Token(Token = "0x6001587")]
			[Address(RVA = "0x104C684", Offset = "0x104C684", VA = "0x104C684")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001588")]
			[Address(RVA = "0x104C690", Offset = "0x104C690", VA = "0x104C690")]
			set
			{
			}
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x104C698", Offset = "0x104C698", VA = "0x104C698")]
		public SceneDataFromGame()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x104C718", Offset = "0x104C718", VA = "0x104C718")]
		public void End()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class SceneDataToGame : SceneData
	{
		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78970", Offset = "0xB78970")]
		private string <GameSceneName>k__BackingField;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78980", Offset = "0xB78980")]
		private int <LevelStart>k__BackingField;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78990", Offset = "0xB78990")]
		private int <TimesPlayed>k__BackingField;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB789A0", Offset = "0xB789A0")]
		private bool <TutorialFinished>k__BackingField;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB789B0", Offset = "0xB789B0")]
		private bool <InWOD>k__BackingField;

		[Token(Token = "0x170001E1")]
		public string GameSceneName
		{
			[Token(Token = "0x600158B")]
			[Address(RVA = "0x104C78C", Offset = "0x104C78C", VA = "0x104C78C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87B6C", Offset = "0xB87B6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600158C")]
			[Address(RVA = "0x104C794", Offset = "0x104C794", VA = "0x104C794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87B7C", Offset = "0xB87B7C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public int LevelStart
		{
			[Token(Token = "0x600158D")]
			[Address(RVA = "0x104C79C", Offset = "0x104C79C", VA = "0x104C79C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87B8C", Offset = "0xB87B8C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600158E")]
			[Address(RVA = "0x104C7A4", Offset = "0x104C7A4", VA = "0x104C7A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87B9C", Offset = "0xB87B9C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public int TimesPlayed
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0x104C7AC", Offset = "0x104C7AC", VA = "0x104C7AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87BAC", Offset = "0xB87BAC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001590")]
			[Address(RVA = "0x104C7B4", Offset = "0x104C7B4", VA = "0x104C7B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87BBC", Offset = "0xB87BBC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public bool TutorialFinished
		{
			[Token(Token = "0x6001591")]
			[Address(RVA = "0x104C7BC", Offset = "0x104C7BC", VA = "0x104C7BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87BCC", Offset = "0xB87BCC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001592")]
			[Address(RVA = "0x104C7C4", Offset = "0x104C7C4", VA = "0x104C7C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87BDC", Offset = "0xB87BDC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public bool InWOD
		{
			[Token(Token = "0x6001593")]
			[Address(RVA = "0x104C7D0", Offset = "0x104C7D0", VA = "0x104C7D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87BEC", Offset = "0xB87BEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001594")]
			[Address(RVA = "0x104C7D8", Offset = "0x104C7D8", VA = "0x104C7D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87BFC", Offset = "0xB87BFC")]
			set
			{
			}
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x104C7E4", Offset = "0x104C7E4", VA = "0x104C7E4")]
		public SceneDataToGame(string gameSceneName, string fromScene)
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class SceneLabelEffect : MonoBehaviour
	{
		[Token(Token = "0x20006A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72AC4", Offset = "0xB72AC4")]
		private sealed class <FadeBackground>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400294B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400294C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400294D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLabelEffect <>4__this;

			[Token(Token = "0x400294E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callback;

			[Token(Token = "0x1700050D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DEE")]
				[Address(RVA = "0x104CD78", Offset = "0x104CD78", VA = "0x104CD78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DF0")]
				[Address(RVA = "0x104CDE4", Offset = "0x104CDE4", VA = "0x104CDE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DEB")]
			[Address(RVA = "0x104CB44", Offset = "0x104CB44", VA = "0x104CB44")]
			[DebuggerHidden]
			public <FadeBackground>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002DEC")]
			[Address(RVA = "0x104CC0C", Offset = "0x104CC0C", VA = "0x104CC0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DED")]
			[Address(RVA = "0x104CC10", Offset = "0x104CC10", VA = "0x104CC10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DEF")]
			[Address(RVA = "0x104CD80", Offset = "0x104CD80", VA = "0x104CD80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator _animatorA;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _animatorB;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _labelA;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text labelB;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image background;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int textFontSize;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int numberFontSize;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB78A10", Offset = "0xB78A10")]
		public float opacity;

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x104C81C", Offset = "0x104C81C", VA = "0x104C81C")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x104C8E8", Offset = "0x104C8E8", VA = "0x104C8E8")]
		public void SetText(string text, bool a)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x104C980", Offset = "0x104C980", VA = "0x104C980")]
		public void SetNumber(int number, bool a)
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x104C8F4", Offset = "0x104C8F4", VA = "0x104C8F4")]
		private void SetText(string text, bool isNumber, bool a)
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x104C9CC", Offset = "0x104C9CC", VA = "0x104C9CC")]
		public void Play(bool a)
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x104CA40", Offset = "0x104CA40", VA = "0x104CA40")]
		public void SelfDesctruct()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x104CAC4", Offset = "0x104CAC4", VA = "0x104CAC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB87C0C", Offset = "0xB87C0C")]
		private IEnumerator FadeBackground(Action callback)
		{
			return null;
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x104CB70", Offset = "0x104CB70", VA = "0x104CB70")]
		public SceneLabelEffect()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x104CB90", Offset = "0x104CB90", VA = "0x104CB90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87C70", Offset = "0xB87C70")]
		private void <SelfDesctruct>b__13_0()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class SceneLoader : MonoBehaviour
	{
		[Token(Token = "0x20006A9")]
		public delegate void OnLoadStart(SceneLoader sender, string currentSceneName, string nextSceneName);

		[Token(Token = "0x20006AA")]
		public delegate void OnLoadEnd(SceneLoader sender, string currentSceneName, string lastSceneName);

		[Token(Token = "0x20006AB")]
		public class LoadingScreenFX
		{
			[Token(Token = "0x400294F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Canvas canvas;

			[Token(Token = "0x6002DF9")]
			[Address(RVA = "0x104ED64", Offset = "0x104ED64", VA = "0x104ED64")]
			public LoadingScreenFX(Image overlay)
			{
			}
		}

		[Token(Token = "0x20006AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72AD4", Offset = "0xB72AD4")]
		private sealed class <BackToHome_Coroutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4002953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool waitForCompleteTransitionCall;

			[Token(Token = "0x4002954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float delay;

			[Token(Token = "0x4002955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SceneData sceneData;

			[Token(Token = "0x4002956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <sceneName>5__2;

			[Token(Token = "0x1700050F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DFD")]
				[Address(RVA = "0x104E9EC", Offset = "0x104E9EC", VA = "0x104E9EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000510")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DFF")]
				[Address(RVA = "0x104EA58", Offset = "0x104EA58", VA = "0x104EA58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DFA")]
			[Address(RVA = "0x104D748", Offset = "0x104D748", VA = "0x104D748")]
			[DebuggerHidden]
			public <BackToHome_Coroutine>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6002DFB")]
			[Address(RVA = "0x104E8C4", Offset = "0x104E8C4", VA = "0x104E8C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DFC")]
			[Address(RVA = "0x104E8C8", Offset = "0x104E8C8", VA = "0x104E8C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DFE")]
			[Address(RVA = "0x104E9F4", Offset = "0x104E9F4", VA = "0x104E9F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72AE4", Offset = "0xB72AE4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__31_0;

			[Token(Token = "0x4002959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__32_2;

			[Token(Token = "0x6002E01")]
			[Address(RVA = "0x104E044", Offset = "0x104E044", VA = "0x104E044")]
			public <>c()
			{
			}

			[Token(Token = "0x6002E02")]
			[Address(RVA = "0x104E04C", Offset = "0x104E04C", VA = "0x104E04C")]
			internal void <LoadScene>b__31_0()
			{
			}

			[Token(Token = "0x6002E03")]
			[Address(RVA = "0x104E0B4", Offset = "0x104E0B4", VA = "0x104E0B4")]
			internal void <LoadAsync>b__32_2()
			{
			}
		}

		[Token(Token = "0x20006AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72AF4", Offset = "0xB72AF4")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x400295A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SceneLoader <>4__this;

			[Token(Token = "0x400295B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string sceneName;

			[Token(Token = "0x400295C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool unloading;

			[Token(Token = "0x400295D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string lastSceneName;

			[Token(Token = "0x400295E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SceneData sceneData;

			[Token(Token = "0x400295F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action callback;

			[Token(Token = "0x4002960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action <>9__3;

			[Token(Token = "0x4002961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action <>9__1;

			[Token(Token = "0x6002E04")]
			[Address(RVA = "0x104D9F0", Offset = "0x104D9F0", VA = "0x104D9F0")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6002E05")]
			[Address(RVA = "0x104E0B8", Offset = "0x104E0B8", VA = "0x104E0B8")]
			internal void <LoadAsync>b__0()
			{
			}

			[Token(Token = "0x6002E06")]
			[Address(RVA = "0x104E208", Offset = "0x104E208", VA = "0x104E208")]
			internal void <LoadAsync>b__1()
			{
			}

			[Token(Token = "0x6002E07")]
			[Address(RVA = "0x104E864", Offset = "0x104E864", VA = "0x104E864")]
			internal void <LoadAsync>b__3()
			{
			}
		}

		[Token(Token = "0x20006AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72B04", Offset = "0xB72B04")]
		private sealed class <LoadAsync_Coroutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4002965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string lastSceneName;

			[Token(Token = "0x4002966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string sceneName;

			[Token(Token = "0x4002967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool unloading;

			[Token(Token = "0x4002968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action callback;

			[Token(Token = "0x4002969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <timer>5__2;

			[Token(Token = "0x400296A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private AsyncOperation <loadScene>5__3;

			[Token(Token = "0x17000511")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E0B")]
				[Address(RVA = "0x104F79C", Offset = "0x104F79C", VA = "0x104F79C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000512")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E0D")]
				[Address(RVA = "0x104F808", Offset = "0x104F808", VA = "0x104F808", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E08")]
			[Address(RVA = "0x104DBE4", Offset = "0x104DBE4", VA = "0x104DBE4")]
			[DebuggerHidden]
			public <LoadAsync_Coroutine>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6002E09")]
			[Address(RVA = "0x104EF24", Offset = "0x104EF24", VA = "0x104EF24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E0A")]
			[Address(RVA = "0x104EF28", Offset = "0x104EF28", VA = "0x104EF28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E0C")]
			[Address(RVA = "0x104F7A4", Offset = "0x104F7A4", VA = "0x104F7A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72B14", Offset = "0xB72B14")]
		private sealed class <BlackFade_Coroutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400296B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400296C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400296D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x400296E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float speed;

			[Token(Token = "0x400296F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool fadeToBlack;

			[Token(Token = "0x4002970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action callBack;

			[Token(Token = "0x17000513")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E11")]
				[Address(RVA = "0x104EEB0", Offset = "0x104EEB0", VA = "0x104EEB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000514")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E13")]
				[Address(RVA = "0x104EF1C", Offset = "0x104EF1C", VA = "0x104EF1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E0E")]
			[Address(RVA = "0x104DCB0", Offset = "0x104DCB0", VA = "0x104DCB0")]
			[DebuggerHidden]
			public <BlackFade_Coroutine>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6002E0F")]
			[Address(RVA = "0x104EA60", Offset = "0x104EA60", VA = "0x104EA60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E10")]
			[Address(RVA = "0x104EA64", Offset = "0x104EA64", VA = "0x104EA64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E12")]
			[Address(RVA = "0x104EEB8", Offset = "0x104EEB8", VA = "0x104EEB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image blackOverlay;

		[Token(Token = "0x4001221")]
		public const string SCENE_NAME_HOME = "Home";

		[Token(Token = "0x4001222")]
		public const string SCENE_NAME_LOADING = "LoadingScene";

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool _isLoading;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool canTransition;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78A58", Offset = "0xB78A58")]
		private static SceneLoader <Instance>k__BackingField;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, SceneController> _loadedScenes;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SceneData _sceneData;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LoadingScreenFX loadingScreenFX;

		[Token(Token = "0x170001E6")]
		public static SceneLoader Instance
		{
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0x104D07C", Offset = "0x104D07C", VA = "0x104D07C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87CC0", Offset = "0xB87CC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015A4")]
			[Address(RVA = "0x104D0E4", Offset = "0x104D0E4", VA = "0x104D0E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87CD0", Offset = "0xB87CD0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public SceneController CurrentScene
		{
			[Token(Token = "0x60015A6")]
			[Address(RVA = "0x104D158", Offset = "0x104D158", VA = "0x104D158")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000040")]
		public event OnLoadStart LoadStart
		{
			[Token(Token = "0x600159F")]
			[Address(RVA = "0x104CDEC", Offset = "0x104CDEC", VA = "0x104CDEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87C80", Offset = "0xB87C80")]
			add
			{
			}
			[Token(Token = "0x60015A0")]
			[Address(RVA = "0x104CE90", Offset = "0x104CE90", VA = "0x104CE90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87C90", Offset = "0xB87C90")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event OnLoadEnd LoadEnd
		{
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0x104CF34", Offset = "0x104CF34", VA = "0x104CF34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87CA0", Offset = "0xB87CA0")]
			add
			{
			}
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0x104CFD8", Offset = "0x104CFD8", VA = "0x104CFD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87CB0", Offset = "0xB87CB0")]
			remove
			{
			}
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x104D150", Offset = "0x104D150", VA = "0x104D150")]
		private SceneLoader()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x104D234", Offset = "0x104D234", VA = "0x104D234")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x104D3A0", Offset = "0x104D3A0", VA = "0x104D3A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x104D45C", Offset = "0x104D45C", VA = "0x104D45C")]
		public void Load(string sceneName)
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x104D464", Offset = "0x104D464", VA = "0x104D464")]
		public void Load(string sceneName, SceneData sceneData)
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x104D5EC", Offset = "0x104D5EC", VA = "0x104D5EC")]
		public bool BackToHome(SceneData sceneData, bool waitForCompleteTransitionCall = false, float delay = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x104D6A8", Offset = "0x104D6A8", VA = "0x104D6A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB87CE0", Offset = "0xB87CE0")]
		private IEnumerator BackToHome_Coroutine(SceneData sceneData, bool waitForCompleteTransitionCall, float delay)
		{
			return null;
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x104D774", Offset = "0x104D774", VA = "0x104D774")]
		public void CompleteSceneTransition()
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x104D468", Offset = "0x104D468", VA = "0x104D468")]
		private void LoadScene(string sceneName, SceneData sceneData)
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x104D890", Offset = "0x104D890", VA = "0x104D890")]
		private void LoadAsync(string sceneName, SceneController sceneController, SceneData sceneData, Action callback)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x104DB40", Offset = "0x104DB40", VA = "0x104DB40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB87D44", Offset = "0xB87D44")]
		private IEnumerator LoadAsync_Coroutine(string sceneName, bool unloading, string lastSceneName, Action callback)
		{
			return null;
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x104D9F8", Offset = "0x104D9F8", VA = "0x104D9F8")]
		public static void BlackFade(bool fadeToBlack, float speed, Action callback)
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x104DC10", Offset = "0x104DC10", VA = "0x104DC10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB87DA8", Offset = "0xB87DA8")]
		private IEnumerator BlackFade_Coroutine(bool fadeToBlack, float speed, Action callBack)
		{
			return null;
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x104DCDC", Offset = "0x104DCDC", VA = "0x104DCDC")]
		private void SceneManager_SceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x104DED0", Offset = "0x104DED0", VA = "0x104DED0")]
		private void SceneManager_SceneUnloaded(Scene scene)
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x104DF80", Offset = "0x104DF80", VA = "0x104DF80")]
		private void SceneManager_ActiveSceneChanged(Scene last, Scene current)
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x104D7E0", Offset = "0x104D7E0", VA = "0x104D7E0")]
		private SceneController GetLoadedScene(string name)
		{
			return null;
		}
	}
	[Token(Token = "0x200029C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB71484", Offset = "0xB71484")]
	public class SceneMusicSource : MonoBehaviour
	{
		[Token(Token = "0x20006B1")]
		public delegate void OnFadeEnd(SceneMusicSource sender);

		[Token(Token = "0x4001229")]
		private const float MAX_VOLUME = 0.5f;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78A68", Offset = "0xB78A68")]
		private float <FadeDuration>k__BackingField;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OnFadeEnd _callback;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource _audioSource;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _targetVolume;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _delta;

		[Token(Token = "0x170001E8")]
		public AudioClip Clip
		{
			[Token(Token = "0x60015B8")]
			[Address(RVA = "0x104F8A8", Offset = "0x104F8A8", VA = "0x104F8A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B9")]
			[Address(RVA = "0x104F8C4", Offset = "0x104F8C4", VA = "0x104F8C4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public AudioMixerGroup OutputChannel
		{
			[Token(Token = "0x60015BA")]
			[Address(RVA = "0x104F8E0", Offset = "0x104F8E0", VA = "0x104F8E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015BB")]
			[Address(RVA = "0x104F8FC", Offset = "0x104F8FC", VA = "0x104F8FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public AudioSource Source
		{
			[Token(Token = "0x60015BC")]
			[Address(RVA = "0x104F918", Offset = "0x104F918", VA = "0x104F918")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		public float FadeDuration
		{
			[Token(Token = "0x60015BD")]
			[Address(RVA = "0x104F920", Offset = "0x104F920", VA = "0x104F920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87E0C", Offset = "0xB87E0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015BE")]
			[Address(RVA = "0x104F928", Offset = "0x104F928", VA = "0x104F928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87E1C", Offset = "0xB87E1C")]
			set
			{
			}
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x104F930", Offset = "0x104F930", VA = "0x104F930")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x104F998", Offset = "0x104F998", VA = "0x104F998")]
		private void Update()
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x104FE70", Offset = "0x104FE70", VA = "0x104FE70")]
		public void FadeIn(OnFadeEnd callback)
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x104FF9C", Offset = "0x104FF9C", VA = "0x104FF9C")]
		public void FadeOut(OnFadeEnd callback)
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x104FEAC", Offset = "0x104FEAC", VA = "0x104FEAC")]
		public void Fade(float targetVolume)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x104FFA8", Offset = "0x104FFA8", VA = "0x104FFA8")]
		public SceneMusicSource()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class Waiter : MonoBehaviour
	{
		[Token(Token = "0x20006B2")]
		public delegate void OnDone(Waiter sender);

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Waiter> _waiters;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _waitersRunningCount;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OnDone Done;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OnDone _callback;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _startTime;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _duration;

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xD34408", Offset = "0xD34408", VA = "0xD34408")]
		public static Waiter GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xD345B8", Offset = "0xD345B8", VA = "0xD345B8")]
		public static void Release(Waiter waiter)
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xD3465C", Offset = "0xD3465C", VA = "0xD3465C")]
		public static void KillAll()
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xD34848", Offset = "0xD34848", VA = "0xD34848")]
		private void Update()
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xD34C50", Offset = "0xD34C50", VA = "0xD34C50")]
		public void Wait(float duration, OnDone callback)
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xD34798", Offset = "0xD34798", VA = "0xD34798")]
		public void ReleaseInstance()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xD34CC0", Offset = "0xD34CC0", VA = "0xD34CC0")]
		public Waiter()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class Countdown : MonoBehaviour
	{
		[Token(Token = "0x20006B3")]
		public delegate void OnCountdownEnd(Countdown sender);

		[Token(Token = "0x20006B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72B24", Offset = "0xB72B24")]
		private sealed class <StartCountdownCoroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Countdown <>4__this;

			[Token(Token = "0x4002974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <length>5__2;

			[Token(Token = "0x4002975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x17000515")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E23")]
				[Address(RVA = "0xF046CC", Offset = "0xF046CC", VA = "0xF046CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000516")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E25")]
				[Address(RVA = "0xF04738", Offset = "0xF04738", VA = "0xF04738", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E20")]
			[Address(RVA = "0xF04014", Offset = "0xF04014", VA = "0xF04014")]
			[DebuggerHidden]
			public <StartCountdownCoroutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002E21")]
			[Address(RVA = "0xF04050", Offset = "0xF04050", VA = "0xF04050", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E22")]
			[Address(RVA = "0xF04054", Offset = "0xF04054", VA = "0xF04054", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E24")]
			[Address(RVA = "0xF046D4", Offset = "0xF046D4", VA = "0xF046D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78A78", Offset = "0xB78A78")]
		[SerializeField]
		private Transform _effectRoot;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SceneLabelEffect _effectPrefab;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78AD4", Offset = "0xB78AD4")]
		[SerializeField]
		private int _seconds;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OnCountdownEnd _callback;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SceneLabelEffect _effect;

		[Token(Token = "0x170001EC")]
		public bool IsRunning
		{
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0xF03DA8", Offset = "0xF03DA8", VA = "0xF03DA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001ED")]
		private SceneLabelEffect Effect
		{
			[Token(Token = "0x60015CD")]
			[Address(RVA = "0xF03DCC", Offset = "0xF03DCC", VA = "0xF03DCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xF03F20", Offset = "0xF03F20", VA = "0xF03F20")]
		public void StartCountdown(OnCountdownEnd callback)
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xF03FE4", Offset = "0xF03FE4", VA = "0xF03FE4")]
		public void Cancel()
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xF03F70", Offset = "0xF03F70", VA = "0xF03F70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB87E2C", Offset = "0xB87E2C")]
		private IEnumerator StartCountdownCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xF04010", Offset = "0xF04010", VA = "0xF04010")]
		private void Reset()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xF03DF0", Offset = "0xF03DF0", VA = "0xF03DF0")]
		private void InstantiateEffect()
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xF04040", Offset = "0xF04040", VA = "0xF04040")]
		public Countdown()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class GameOptions : MonoBehaviour
	{
		[Token(Token = "0x20006B5")]
		public class Parameters
		{
			[Token(Token = "0x20008EF")]
			public enum General
			{
				[Token(Token = "0x4003037")]
				UnitSystem,
				[Token(Token = "0x4003038")]
				PlayerWeight,
				[Token(Token = "0x4003039")]
				PlayerHeight
			}

			[Token(Token = "0x20008F0")]
			public enum Sound
			{
				[Token(Token = "0x400303B")]
				Music,
				[Token(Token = "0x400303C")]
				SFX,
				[Token(Token = "0x400303D")]
				Language,
				[Token(Token = "0x400303E")]
				VoiceLanguage,
				[Token(Token = "0x400303F")]
				SubtitleLanguage
			}

			[Token(Token = "0x20008F1")]
			public enum Accessibility
			{
				[Token(Token = "0x4003041")]
				CameraTurn,
				[Token(Token = "0x4003042")]
				Bloom,
				[Token(Token = "0x4003043")]
				PlayerIsLeftHanded,
				[Token(Token = "0x4003044")]
				Subtitles,
				[Token(Token = "0x4003045")]
				SubtitleSize,
				[Token(Token = "0x4003046")]
				SubtitleColor
			}

			[Token(Token = "0x6002E26")]
			[Address(RVA = "0xF0CAB8", Offset = "0xF0CAB8", VA = "0xF0CAB8")]
			public Parameters()
			{
			}
		}

		[Token(Token = "0x60015D4")]
		public static T GetParameter<T>(Parameters.General parameter)
		{
			return (T)null;
		}

		[Token(Token = "0x60015D5")]
		public static T GetParameter<T>(Parameters.Sound parameter)
		{
			return (T)null;
		}

		[Token(Token = "0x60015D6")]
		public static T GetParameter<T>(Parameters.Accessibility parameter)
		{
			return (T)null;
		}

		[Token(Token = "0x60015D7")]
		public static T GetParameter<T>(Parameters.General parameter, T defaultValue)
		{
			return (T)null;
		}

		[Token(Token = "0x60015D8")]
		public static T GetParameter<T>(Parameters.Sound parameter, T defaultValue)
		{
			return (T)null;
		}

		[Token(Token = "0x60015D9")]
		public static T GetParameter<T>(Parameters.Accessibility parameter, T defaultValue)
		{
			return (T)null;
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xF0C0B8", Offset = "0xF0C0B8", VA = "0xF0C0B8")]
		public static void SetParameter(Parameters.General parameter, int value)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xF0C210", Offset = "0xF0C210", VA = "0xF0C210")]
		public static void SetParameter(Parameters.General parameter, string value)
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xF0C2F8", Offset = "0xF0C2F8", VA = "0xF0C2F8")]
		public static void SetParameter(Parameters.General parameter, bool value)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xF0C3F8", Offset = "0xF0C3F8", VA = "0xF0C3F8")]
		public static void SetParameter(Parameters.General parameter, float value)
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xF0C4F0", Offset = "0xF0C4F0", VA = "0xF0C4F0")]
		public static void SetParameter(Parameters.Sound parameter, int value)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xF0C5AC", Offset = "0xF0C5AC", VA = "0xF0C5AC")]
		public static void SetParameter(Parameters.Sound parameter, string value)
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xF0C64C", Offset = "0xF0C64C", VA = "0xF0C64C")]
		public static void SetParameter(Parameters.Sound parameter, bool value)
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xF0C70C", Offset = "0xF0C70C", VA = "0xF0C70C")]
		public static void SetParameter(Parameters.Sound parameter, float value)
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xF0C7C8", Offset = "0xF0C7C8", VA = "0xF0C7C8")]
		public static void SetParameter(Parameters.Accessibility parameter, int value)
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xF0C884", Offset = "0xF0C884", VA = "0xF0C884")]
		public static void SetParameter(Parameters.Accessibility parameter, string value)
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xF0C924", Offset = "0xF0C924", VA = "0xF0C924")]
		public static void SetParameter(Parameters.Accessibility parameter, bool value)
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xF0C9E4", Offset = "0xF0C9E4", VA = "0xF0C9E4")]
		public static void SetParameter(Parameters.Accessibility parameter, float value)
		{
		}

		[Token(Token = "0x60015E6")]
		private static T GetParameter<T>(string keyword)
		{
			return (T)null;
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xF0CAA0", Offset = "0xF0CAA0", VA = "0xF0CAA0")]
		private static bool HasKey(string keyword)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xF0CAA8", Offset = "0xF0CAA8", VA = "0xF0CAA8")]
		private static object GetKey(string keyword)
		{
			return null;
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xF0C3B8", Offset = "0xF0C3B8", VA = "0xF0C3B8")]
		private static void SetBool(string keyword, bool value)
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xF0C1D4", Offset = "0xF0C1D4", VA = "0xF0C1D4")]
		private static void SetInt(string keyword, int value)
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xF0C4B4", Offset = "0xF0C4B4", VA = "0xF0C4B4")]
		private static void SetFloat(string keyword, float value)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xF0C2B0", Offset = "0xF0C2B0", VA = "0xF0C2B0")]
		private static void SetString(string keyword, string value)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xF0C174", Offset = "0xF0C174", VA = "0xF0C174")]
		private static string FullParameterString(string parameter)
		{
			return null;
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xF0CAB0", Offset = "0xF0CAB0", VA = "0xF0CAB0")]
		public GameOptions()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class UserRegistration : MonoBehaviour
	{
		[Token(Token = "0x20006B6")]
		public class UserData
		{
			[Token(Token = "0x20008F2")]
			public enum Account
			{
				[Token(Token = "0x4003048")]
				Email,
				[Token(Token = "0x4003049")]
				Password,
				[Token(Token = "0x400304A")]
				SubscribedNewsletter,
				[Token(Token = "0x400304B")]
				AcceptedTermsOfServiceAndPrivacuPolicy
			}

			[Token(Token = "0x20008F3")]
			public enum Meta
			{
				[Token(Token = "0x400304D")]
				FirstName,
				[Token(Token = "0x400304E")]
				LastName,
				[Token(Token = "0x400304F")]
				Job,
				[Token(Token = "0x4003050")]
				Education,
				[Token(Token = "0x4003051")]
				Gender,
				[Token(Token = "0x4003052")]
				DateOfBirth
			}

			[Token(Token = "0x6002E27")]
			[Address(RVA = "0xD313D8", Offset = "0xD313D8", VA = "0xD313D8")]
			public UserData()
			{
			}
		}

		[Token(Token = "0x60015EF")]
		public static T GetData<T>(UserData.Account data)
		{
			return (T)null;
		}

		[Token(Token = "0x60015F0")]
		public static T GetData<T>(UserData.Meta data)
		{
			return (T)null;
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xD30D50", Offset = "0xD30D50", VA = "0xD30D50")]
		public static void SetData(UserData.Account data, int value)
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xD30E38", Offset = "0xD30E38", VA = "0xD30E38")]
		public static void SetData(UserData.Account data, string value)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xD30F1C", Offset = "0xD30F1C", VA = "0xD30F1C")]
		public static void SetData(UserData.Account data, bool value)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xD31010", Offset = "0xD31010", VA = "0xD31010")]
		public static void SetData(UserData.Account data, float value)
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xD310FC", Offset = "0xD310FC", VA = "0xD310FC")]
		public static void SetData(UserData.Meta data, int value)
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xD311A8", Offset = "0xD311A8", VA = "0xD311A8")]
		public static void SetData(UserData.Meta data, string value)
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xD31244", Offset = "0xD31244", VA = "0xD31244")]
		public static void SetData(UserData.Meta data, bool value)
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xD312F8", Offset = "0xD312F8", VA = "0xD312F8")]
		public static void SetData(UserData.Meta data, float value)
		{
		}

		[Token(Token = "0x60015F9")]
		private static T GetData<T>(string keyword)
		{
			return (T)null;
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xD313A8", Offset = "0xD313A8", VA = "0xD313A8")]
		private static bool HasKey(string keyword)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xD313B8", Offset = "0xD313B8", VA = "0xD313B8")]
		private static object GetKey(string keyword)
		{
			return null;
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xD30FD0", Offset = "0xD30FD0", VA = "0xD30FD0")]
		private static void SetBool(string keyword, bool value)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xD30DFC", Offset = "0xD30DFC", VA = "0xD30DFC")]
		private static void SetInt(string keyword, int value)
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xD310C0", Offset = "0xD310C0", VA = "0xD310C0")]
		private static void SetFloat(string keyword, float value)
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xD30ED4", Offset = "0xD30ED4", VA = "0xD30ED4")]
		private static void SetString(string keyword, string value)
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xD313D0", Offset = "0xD313D0", VA = "0xD313D0")]
		public UserRegistration()
		{
		}
	}
}
namespace AttentionLab.Tools.ProjectRecovery
{
	[Token(Token = "0x20002A1")]
	public class MeshRecovery : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006B7")]
		public class MeshToRecover
		{
			[Token(Token = "0x4002976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string _name;

			[Token(Token = "0x4002977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private long _localIdentifierInFile;

			[Token(Token = "0x17000517")]
			public string Name
			{
				[Token(Token = "0x6002E28")]
				[Address(RVA = "0x10547DC", Offset = "0x10547DC", VA = "0x10547DC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000518")]
			public long LocalIdentifierInFile
			{
				[Token(Token = "0x6002E29")]
				[Address(RVA = "0x10547E4", Offset = "0x10547E4", VA = "0x10547E4")]
				get
				{
					return default(long);
				}
			}

			[Token(Token = "0x6002E2A")]
			[Address(RVA = "0x10547EC", Offset = "0x10547EC", VA = "0x10547EC")]
			public MeshToRecover(string name, long id)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006B8")]
		public class GameObjectToRecover
		{
			[Token(Token = "0x4002978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string _filePath;

			[Token(Token = "0x4002979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private string _fileId;

			[Token(Token = "0x400297A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private string _guid;

			[Token(Token = "0x400297B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private List<MeshToRecover> _meshes;

			[Token(Token = "0x17000519")]
			public string FilePath
			{
				[Token(Token = "0x6002E2B")]
				[Address(RVA = "0x1054724", Offset = "0x1054724", VA = "0x1054724")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051A")]
			public string FileId
			{
				[Token(Token = "0x6002E2C")]
				[Address(RVA = "0x105472C", Offset = "0x105472C", VA = "0x105472C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051B")]
			public string Guid
			{
				[Token(Token = "0x6002E2D")]
				[Address(RVA = "0x1054734", Offset = "0x1054734", VA = "0x1054734")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051C")]
			public List<MeshToRecover> Meshes
			{
				[Token(Token = "0x6002E2E")]
				[Address(RVA = "0x105473C", Offset = "0x105473C", VA = "0x105473C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E2F")]
			[Address(RVA = "0x1054744", Offset = "0x1054744", VA = "0x1054744")]
			public GameObjectToRecover(string filePath, string fileId, string guid)
			{
			}
		}

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _filePath;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<GameObjectToRecover> _objectsToRecover;

		[Token(Token = "0x170001EE")]
		public string FilePath
		{
			[Token(Token = "0x6001601")]
			[Address(RVA = "0x1054708", Offset = "0x1054708", VA = "0x1054708")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		public List<GameObjectToRecover> ObjectsToRecover
		{
			[Token(Token = "0x6001602")]
			[Address(RVA = "0x1054710", Offset = "0x1054710", VA = "0x1054710")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x1054718", Offset = "0x1054718", VA = "0x1054718")]
		public void Serialize()
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x105471C", Offset = "0x105471C", VA = "0x105471C")]
		public MeshRecovery()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class RecoveryComponent : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006B9")]
		public class ComponentToRecover
		{
			[Token(Token = "0x400297C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string _componentName;

			[Token(Token = "0x400297D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private long _localIdentifierInFile;

			[Token(Token = "0x400297E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB830D4", Offset = "0xB830D4")]
			private bool <NeedsRecover>k__BackingField;

			[Token(Token = "0x1700051D")]
			public long LocalIdentifierInFile
			{
				[Token(Token = "0x6002E30")]
				[Address(RVA = "0x1054A98", Offset = "0x1054A98", VA = "0x1054A98")]
				get
				{
					return default(long);
				}
			}

			[Token(Token = "0x1700051E")]
			public string ComponentName
			{
				[Token(Token = "0x6002E31")]
				[Address(RVA = "0x1054AA0", Offset = "0x1054AA0", VA = "0x1054AA0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051F")]
			public bool NeedsRecover
			{
				[Token(Token = "0x6002E32")]
				[Address(RVA = "0x1054AA8", Offset = "0x1054AA8", VA = "0x1054AA8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB91478", Offset = "0xB91478")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002E33")]
				[Address(RVA = "0x1054AB0", Offset = "0x1054AB0", VA = "0x1054AB0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB91488", Offset = "0xB91488")]
				private set
				{
				}
			}

			[Token(Token = "0x6002E34")]
			[Address(RVA = "0x1054ABC", Offset = "0x1054ABC", VA = "0x1054ABC")]
			public ComponentToRecover(Component component)
			{
			}

			[Token(Token = "0x6002E35")]
			[Address(RVA = "0x105495C", Offset = "0x105495C", VA = "0x105495C")]
			public void MarkToRecover()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006BA")]
		public class GameObjectToRecover
		{
			[Serializable]
			[Token(Token = "0x20008F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73DF4", Offset = "0xB73DF4")]
			private sealed class <>c
			{
				[Token(Token = "0x4003053")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x4003054")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Func<ComponentToRecover, bool> <>9__10_0;

				[Token(Token = "0x60035A2")]
				[Address(RVA = "0x1054D34", Offset = "0x1054D34", VA = "0x1054D34")]
				public <>c()
				{
				}

				[Token(Token = "0x60035A3")]
				[Address(RVA = "0x1054D3C", Offset = "0x1054D3C", VA = "0x1054D3C")]
				internal bool <get_ComponentsToRecover>b__10_0(ComponentToRecover x)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x400297F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Type _fileType;

			[Token(Token = "0x4002980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private string _filePath;

			[Token(Token = "0x4002981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private ComponentToRecover[] _components;

			[Token(Token = "0x17000520")]
			public Type FileType
			{
				[Token(Token = "0x6002E36")]
				[Address(RVA = "0x1054B28", Offset = "0x1054B28", VA = "0x1054B28")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000521")]
			public string FilePath
			{
				[Token(Token = "0x6002E37")]
				[Address(RVA = "0x1054B30", Offset = "0x1054B30", VA = "0x1054B30")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000522")]
			public ComponentToRecover[] Components
			{
				[Token(Token = "0x6002E38")]
				[Address(RVA = "0x1054B38", Offset = "0x1054B38", VA = "0x1054B38")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000523")]
			public ComponentToRecover[] ComponentsToRecover
			{
				[Token(Token = "0x6002E39")]
				[Address(RVA = "0x1054B40", Offset = "0x1054B40", VA = "0x1054B40")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E3A")]
			[Address(RVA = "0x1054C40", Offset = "0x1054C40", VA = "0x1054C40")]
			public GameObjectToRecover(Type fileType, string filePath, List<ComponentToRecover> components)
			{
			}
		}

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObjectToRecover _recoverData;

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x1054824", Offset = "0x1054824", VA = "0x1054824")]
		public void Serialize()
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x1054828", Offset = "0x1054828", VA = "0x1054828")]
		public GameObjectToRecover GetRecoveryData()
		{
			return null;
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x1054968", Offset = "0x1054968", VA = "0x1054968")]
		public static bool ShouldSaveToRecovery(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x1054A90", Offset = "0x1054A90", VA = "0x1054A90")]
		public RecoveryComponent()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public static class RecoveryUtils
	{
		[Token(Token = "0x6001609")]
		[Address(RVA = "0x1054B18", Offset = "0x1054B18", VA = "0x1054B18")]
		public static long GetLocalIdentifierInFile(UnityEngine.Object unityObject)
		{
			return default(long);
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x1054B20", Offset = "0x1054B20", VA = "0x1054B20")]
		public static string SanitizeName(string component)
		{
			return null;
		}
	}
}
namespace AttentionLab.DRM
{
	[Token(Token = "0x20002A4")]
	public class EntitlementChecker : MonoBehaviour
	{
		[Token(Token = "0x20006BB")]
		public delegate void OnEntitlementCheck(EntitlementChecker sender, bool userEntitled);

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OnEntitlementCheck EntitlementChecked;

		[Token(Token = "0x170001F0")]
		public static bool NeedsEntitlementCheck
		{
			[Token(Token = "0x600160B")]
			[Address(RVA = "0xEF9D34", Offset = "0xEF9D34", VA = "0xEF9D34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xEF9E08", Offset = "0xEF9E08", VA = "0xEF9E08")]
		public static EntitlementChecker GetChecker(DeviceFamily deviceFamily)
		{
			return null;
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xF04780", Offset = "0xF04780", VA = "0xF04780")]
		public EntitlementChecker()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class OculusEntitlementCheck : EntitlementChecker
	{
		[Token(Token = "0x600160E")]
		[Address(RVA = "0xF04C14", Offset = "0xF04C14", VA = "0xF04C14")]
		private void Start()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xF04D7C", Offset = "0xF04D7C", VA = "0xF04D7C")]
		private void EntitlementCallback(Oculus.Platform.Message msg)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xF04E40", Offset = "0xF04E40", VA = "0xF04E40")]
		public OculusEntitlementCheck()
		{
		}
	}
}
namespace AttentionLab.Charts
{
	[Token(Token = "0x20002A6")]
	public class AxisCategory
	{
		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78B50", Offset = "0xB78B50")]
		private string <Label>k__BackingField;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78B60", Offset = "0xB78B60")]
		private List<string> <Categories>k__BackingField;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78B70", Offset = "0xB78B70")]
		private List<string> <Colors>k__BackingField;

		[Token(Token = "0x170001F1")]
		public string Label
		{
			[Token(Token = "0x6001611")]
			[Address(RVA = "0xEFF448", Offset = "0xEFF448", VA = "0xEFF448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87E90", Offset = "0xB87E90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001612")]
			[Address(RVA = "0xEFF450", Offset = "0xEFF450", VA = "0xEFF450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87EA0", Offset = "0xB87EA0")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public List<string> Categories
		{
			[Token(Token = "0x6001613")]
			[Address(RVA = "0xEFF458", Offset = "0xEFF458", VA = "0xEFF458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87EB0", Offset = "0xB87EB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001614")]
			[Address(RVA = "0xEFF460", Offset = "0xEFF460", VA = "0xEFF460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87EC0", Offset = "0xB87EC0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public List<string> Colors
		{
			[Token(Token = "0x6001615")]
			[Address(RVA = "0xEFF468", Offset = "0xEFF468", VA = "0xEFF468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87ED0", Offset = "0xB87ED0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001616")]
			[Address(RVA = "0xEFF470", Offset = "0xEFF470", VA = "0xEFF470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87EE0", Offset = "0xB87EE0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xEFF478", Offset = "0xEFF478", VA = "0xEFF478")]
		public void AddCategory(string name, [Optional] string color)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xEFF588", Offset = "0xEFF588", VA = "0xEFF588")]
		public AxisCategory()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class AxisQuantity
	{
		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78B80", Offset = "0xB78B80")]
		private string <Label>k__BackingField;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78B90", Offset = "0xB78B90")]
		private int <DividersCount>k__BackingField;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78BA0", Offset = "0xB78BA0")]
		private float <Max>k__BackingField;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78BB0", Offset = "0xB78BB0")]
		private float <Min>k__BackingField;

		[Token(Token = "0x170001F4")]
		public string Label
		{
			[Token(Token = "0x6001619")]
			[Address(RVA = "0xEFF590", Offset = "0xEFF590", VA = "0xEFF590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87EF0", Offset = "0xB87EF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600161A")]
			[Address(RVA = "0xEFF598", Offset = "0xEFF598", VA = "0xEFF598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87F00", Offset = "0xB87F00")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public int DividersCount
		{
			[Token(Token = "0x600161B")]
			[Address(RVA = "0xEFF5A0", Offset = "0xEFF5A0", VA = "0xEFF5A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87F10", Offset = "0xB87F10")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600161C")]
			[Address(RVA = "0xEFF5A8", Offset = "0xEFF5A8", VA = "0xEFF5A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87F20", Offset = "0xB87F20")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public float Max
		{
			[Token(Token = "0x600161D")]
			[Address(RVA = "0xEFF5B0", Offset = "0xEFF5B0", VA = "0xEFF5B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87F30", Offset = "0xB87F30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600161E")]
			[Address(RVA = "0xEFF5B8", Offset = "0xEFF5B8", VA = "0xEFF5B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87F40", Offset = "0xB87F40")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public float Min
		{
			[Token(Token = "0x600161F")]
			[Address(RVA = "0xEFF5C0", Offset = "0xEFF5C0", VA = "0xEFF5C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87F50", Offset = "0xB87F50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001620")]
			[Address(RVA = "0xEFF5C8", Offset = "0xEFF5C8", VA = "0xEFF5C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87F60", Offset = "0xB87F60")]
			set
			{
			}
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xEFF5D0", Offset = "0xEFF5D0", VA = "0xEFF5D0")]
		public void CalculateMaxMin(float dataMin, float dataMax)
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xEFF624", Offset = "0xEFF624", VA = "0xEFF624")]
		private int CeilValueToNearest(int value)
		{
			return default(int);
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xEFF744", Offset = "0xEFF744", VA = "0xEFF744")]
		public AxisQuantity()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class ChartConfig
	{
		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78BC0", Offset = "0xB78BC0")]
		private List<DataSeries> <DataSeries>k__BackingField;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78BD0", Offset = "0xB78BD0")]
		private AxisQuantity <QuantityAxis>k__BackingField;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78BE0", Offset = "0xB78BE0")]
		private AxisCategory <CategoryAxis>k__BackingField;

		[Token(Token = "0x170001F8")]
		public List<DataSeries> DataSeries
		{
			[Token(Token = "0x6001624")]
			[Address(RVA = "0xEFF74C", Offset = "0xEFF74C", VA = "0xEFF74C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87F70", Offset = "0xB87F70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001625")]
			[Address(RVA = "0xEFF754", Offset = "0xEFF754", VA = "0xEFF754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87F80", Offset = "0xB87F80")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public AxisQuantity QuantityAxis
		{
			[Token(Token = "0x6001626")]
			[Address(RVA = "0xEFF75C", Offset = "0xEFF75C", VA = "0xEFF75C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87F90", Offset = "0xB87F90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001627")]
			[Address(RVA = "0xEFF764", Offset = "0xEFF764", VA = "0xEFF764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87FA0", Offset = "0xB87FA0")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public AxisCategory CategoryAxis
		{
			[Token(Token = "0x6001628")]
			[Address(RVA = "0xEFF76C", Offset = "0xEFF76C", VA = "0xEFF76C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87FB0", Offset = "0xB87FB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001629")]
			[Address(RVA = "0xEFF774", Offset = "0xEFF774", VA = "0xEFF774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87FC0", Offset = "0xB87FC0")]
			set
			{
			}
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xEFF77C", Offset = "0xEFF77C", VA = "0xEFF77C")]
		public void AddDataSeries(DataSeries dataSeries)
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xEFF818", Offset = "0xEFF818", VA = "0xEFF818")]
		public Color GetSeriesColor(int index)
		{
			return default(Color);
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xEFF914", Offset = "0xEFF914", VA = "0xEFF914")]
		public int GetCategoriesCount()
		{
			return default(int);
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xEFF998", Offset = "0xEFF998", VA = "0xEFF998")]
		public string GetCategory(int index)
		{
			return null;
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xEFFA48", Offset = "0xEFFA48", VA = "0xEFFA48")]
		public ChartConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A9")]
	public class DataPoint
	{
		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78BF0", Offset = "0xB78BF0")]
		private string <Label>k__BackingField;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78C00", Offset = "0xB78C00")]
		private float <Value>k__BackingField;

		[Token(Token = "0x170001FB")]
		public string Label
		{
			[Token(Token = "0x600162F")]
			[Address(RVA = "0xEFFA50", Offset = "0xEFFA50", VA = "0xEFFA50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87FD0", Offset = "0xB87FD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001630")]
			[Address(RVA = "0xEFFA58", Offset = "0xEFFA58", VA = "0xEFFA58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87FE0", Offset = "0xB87FE0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FC")]
		public float Value
		{
			[Token(Token = "0x6001631")]
			[Address(RVA = "0xEFFA60", Offset = "0xEFFA60", VA = "0xEFFA60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87FF0", Offset = "0xB87FF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001632")]
			[Address(RVA = "0xEFFA68", Offset = "0xEFFA68", VA = "0xEFFA68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88000", Offset = "0xB88000")]
			private set
			{
			}
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xEFFA70", Offset = "0xEFFA70", VA = "0xEFFA70")]
		public DataPoint(float value)
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xEFFAA4", Offset = "0xEFFAA4", VA = "0xEFFAA4")]
		public DataPoint(string label, float value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AA")]
	public class DataSeries
	{
		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78C10", Offset = "0xB78C10")]
		private string <Name>k__BackingField;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78C20", Offset = "0xB78C20")]
		private string <ColorHex>k__BackingField;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78C30", Offset = "0xB78C30")]
		private List<DataPoint> <DataPoints>k__BackingField;

		[Token(Token = "0x170001FD")]
		public string Name
		{
			[Token(Token = "0x6001635")]
			[Address(RVA = "0xEFFAE0", Offset = "0xEFFAE0", VA = "0xEFFAE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88010", Offset = "0xB88010")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001636")]
			[Address(RVA = "0xEFFAE8", Offset = "0xEFFAE8", VA = "0xEFFAE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88020", Offset = "0xB88020")]
			set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public string ColorHex
		{
			[Token(Token = "0x6001637")]
			[Address(RVA = "0xEFFAF0", Offset = "0xEFFAF0", VA = "0xEFFAF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88030", Offset = "0xB88030")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001638")]
			[Address(RVA = "0xEFFAF8", Offset = "0xEFFAF8", VA = "0xEFFAF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88040", Offset = "0xB88040")]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public Color Color
		{
			[Token(Token = "0x6001639")]
			[Address(RVA = "0xEFF8C8", Offset = "0xEFF8C8", VA = "0xEFF8C8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000200")]
		public int DataPointsCount
		{
			[Token(Token = "0x600163A")]
			[Address(RVA = "0xEFFB00", Offset = "0xEFFB00", VA = "0xEFFB00")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000201")]
		public List<DataPoint> DataPoints
		{
			[Token(Token = "0x600163B")]
			[Address(RVA = "0xEFFB54", Offset = "0xEFFB54", VA = "0xEFFB54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88050", Offset = "0xB88050")]
			get
			{
				return null;
			}
			[Token(Token = "0x600163C")]
			[Address(RVA = "0xEFFB5C", Offset = "0xEFFB5C", VA = "0xEFFB5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88060", Offset = "0xB88060")]
			private set
			{
			}
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xEFFB64", Offset = "0xEFFB64", VA = "0xEFFB64")]
		public DataSeries()
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xEFFBD8", Offset = "0xEFFBD8", VA = "0xEFFBD8")]
		public void AddDataPoint(DataPoint dataPoint)
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public static class SessionsChartLoader
	{
		[Token(Token = "0x400124D")]
		private const string DATE_FORMAT = "MM/dd";

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xEF8390", Offset = "0xEF8390", VA = "0xEF8390")]
		public static void LoadChart(ChartLines chart, Game gameData, [Optional] Session currentSession)
		{
		}
	}
}
namespace AttentionLab.Charts.UI
{
	[Token(Token = "0x20002AC")]
	public class Axis : MonoBehaviour
	{
		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78C40", Offset = "0xB78C40")]
		public RectTransform _rectTransform;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text _label;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image _border;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform _dividersRoot;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AxisDivider _dividerPrefab;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78C78", Offset = "0xB78C78")]
		public bool _showLabel;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool _showDividers;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool _showBorders;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<AxisDivider> _dividers;

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xEFFC40", Offset = "0xEFFC40", VA = "0xEFFC40")]
		public void SetAxisData(AxisQuantity axis, DataContainer container)
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xEFFFDC", Offset = "0xEFFFDC", VA = "0xEFFFDC")]
		public void SetAxisData(AxisCategory axis)
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xF00038", Offset = "0xF00038", VA = "0xF00038")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xEFFCD0", Offset = "0xEFFCD0", VA = "0xEFFCD0")]
		private void ShowLabel(string label, bool show)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xEFFDD8", Offset = "0xEFFDD8", VA = "0xEFFDD8")]
		private void ShowBorders(bool show)
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xEFFE8C", Offset = "0xEFFE8C", VA = "0xEFFE8C")]
		private void ShowDividers(AxisQuantity axis, DataContainer container)
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xF00248", Offset = "0xF00248", VA = "0xF00248")]
		private void GenerateSectionDividers(AxisQuantity axisData, Vector2 containerSize)
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xF00458", Offset = "0xF00458", VA = "0xF00458")]
		private void GenerateSliceDividers(AxisQuantity axisData, Vector2 containerSize)
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xF006EC", Offset = "0xF006EC", VA = "0xF006EC")]
		public Axis()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class AxisDivider : MonoBehaviour
	{
		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78CB0", Offset = "0xB78CB0")]
		public RectTransform _rect;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image _background;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text _label;

		[Token(Token = "0x17000202")]
		public bool Enabled
		{
			[Token(Token = "0x6001649")]
			[Address(RVA = "0xF006F4", Offset = "0xF006F4", VA = "0xF006F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600164A")]
			[Address(RVA = "0xF006B8", Offset = "0xF006B8", VA = "0xF006B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000203")]
		public string Label
		{
			[Token(Token = "0x600164B")]
			[Address(RVA = "0xF00718", Offset = "0xF00718", VA = "0xF00718")]
			get
			{
				return null;
			}
			[Token(Token = "0x600164C")]
			[Address(RVA = "0xF00694", Offset = "0xF00694", VA = "0xF00694")]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public bool LabelEnabled
		{
			[Token(Token = "0x600164D")]
			[Address(RVA = "0xF0073C", Offset = "0xF0073C", VA = "0xF0073C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600164E")]
			[Address(RVA = "0xF00768", Offset = "0xF00768", VA = "0xF00768")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public Color BackgroundColor
		{
			[Token(Token = "0x600164F")]
			[Address(RVA = "0xF007A4", Offset = "0xF007A4", VA = "0xF007A4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001650")]
			[Address(RVA = "0xF007C8", Offset = "0xF007C8", VA = "0xF007C8")]
			set
			{
			}
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xF0065C", Offset = "0xF0065C", VA = "0xF0065C")]
		public void SetTransform(Vector2 position)
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xF00678", Offset = "0xF00678", VA = "0xF00678")]
		public void SetSize(Vector2 size)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xF007EC", Offset = "0xF007EC", VA = "0xF007EC")]
		public AxisDivider()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class ChartBase : MonoBehaviour
	{
		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78CE8", Offset = "0xB78CE8")]
		public DataContainer _dataContainer;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SeriesLabelContainer _containerLabels;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Axis _quantityAxis;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Axis _categoryAxis;

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xF007F4", Offset = "0xF007F4", VA = "0xF007F4", Slot = "4")]
		public virtual void CreateChart(ChartConfig chartConfig)
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xF00AD8", Offset = "0xF00AD8", VA = "0xF00AD8", Slot = "5")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xF00E1C", Offset = "0xF00E1C", VA = "0xF00E1C")]
		public ChartBase()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class ChartLinePoint : MonoBehaviour
	{
		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78D20", Offset = "0xB78D20")]
		public RectTransform _rect;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image _dot;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image _line;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform _value;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text _valueLabel;

		[Token(Token = "0x17000206")]
		public Color DotColor
		{
			[Token(Token = "0x6001657")]
			[Address(RVA = "0xF00E24", Offset = "0xF00E24", VA = "0xF00E24")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001658")]
			[Address(RVA = "0xF00E48", Offset = "0xF00E48", VA = "0xF00E48")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public int Value
		{
			[Token(Token = "0x6001659")]
			[Address(RVA = "0xF00E6C", Offset = "0xF00E6C", VA = "0xF00E6C")]
			set
			{
			}
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xF00F20", Offset = "0xF00F20", VA = "0xF00F20")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xF00F54", Offset = "0xF00F54", VA = "0xF00F54")]
		public void SetTransform(Vector2 position, Vector2 size)
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xF00FA8", Offset = "0xF00FA8", VA = "0xF00FA8")]
		public void Connect(Vector2 dotPosition)
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xF011C0", Offset = "0xF011C0", VA = "0xF011C0")]
		public void ReleaseLabels()
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xF0131C", Offset = "0xF0131C", VA = "0xF0131C")]
		public void Clear()
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xF013E8", Offset = "0xF013E8", VA = "0xF013E8")]
		public ChartLinePoint()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class ChartLines : ChartBase
	{
		[Token(Token = "0x20006BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72B34", Offset = "0xB72B34")]
		private sealed class <CreateChartCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChartLines <>4__this;

			[Token(Token = "0x17000524")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E42")]
				[Address(RVA = "0xF01B14", Offset = "0xF01B14", VA = "0xF01B14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000525")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E44")]
				[Address(RVA = "0xF01B80", Offset = "0xF01B80", VA = "0xF01B80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E3F")]
			[Address(RVA = "0xF0188C", Offset = "0xF0188C", VA = "0xF0188C")]
			[DebuggerHidden]
			public <CreateChartCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002E40")]
			[Address(RVA = "0xF01A08", Offset = "0xF01A08", VA = "0xF01A08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E41")]
			[Address(RVA = "0xF01A0C", Offset = "0xF01A0C", VA = "0xF01A0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E43")]
			[Address(RVA = "0xF01B1C", Offset = "0xF01B1C", VA = "0xF01B1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78D58", Offset = "0xB78D58")]
		public ChartLinePoint _prefabPoint;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material _lineMaterial;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78D90", Offset = "0xB78D90")]
		public float _dotSize;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool _connectDots;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<ChartLinePoint> _dataPoints;

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xF013F0", Offset = "0xF013F0", VA = "0xF013F0", Slot = "4")]
		public override void CreateChart(ChartConfig chartConfig)
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xF01818", Offset = "0xF01818", VA = "0xF01818")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88070", Offset = "0xB88070")]
		private IEnumerator CreateChartCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xF018B8", Offset = "0xF018B8", VA = "0xF018B8", Slot = "5")]
		public override void Clear()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xF01A00", Offset = "0xF01A00", VA = "0xF01A00")]
		public ChartLines()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class DataContainer : MonoBehaviour
	{
		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78DC8", Offset = "0xB78DC8")]
		public RectTransform _rectTransform;

		[Token(Token = "0x17000208")]
		public Vector2 Size
		{
			[Token(Token = "0x6001664")]
			[Address(RVA = "0xF00170", Offset = "0xF00170", VA = "0xF00170")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000209")]
		public Vector2 Center
		{
			[Token(Token = "0x6001665")]
			[Address(RVA = "0xF01B88", Offset = "0xF01B88", VA = "0xF01B88")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xF01C68", Offset = "0xF01C68", VA = "0xF01C68", Slot = "4")]
		public virtual void ShowData(ChartConfig chartConfig)
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xF01C6C", Offset = "0xF01C6C", VA = "0xF01C6C", Slot = "5")]
		public virtual void ClearData()
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xF01C70", Offset = "0xF01C70", VA = "0xF01C70")]
		public DataContainer()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB714E8", Offset = "0xB714E8")]
	public class DataSection : MonoBehaviour
	{
		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78E00", Offset = "0xB78E00")]
		public RectTransform _rect;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image _background;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text _label;

		[Token(Token = "0x1700020A")]
		public Vector2 Position
		{
			[Token(Token = "0x6001669")]
			[Address(RVA = "0xF01C78", Offset = "0xF01C78", VA = "0xF01C78")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700020B")]
		public Vector2 Size
		{
			[Token(Token = "0x600166A")]
			[Address(RVA = "0xF01C94", Offset = "0xF01C94", VA = "0xF01C94")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700020C")]
		public Vector2 Center
		{
			[Token(Token = "0x600166B")]
			[Address(RVA = "0xF01794", Offset = "0xF01794", VA = "0xF01794")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700020D")]
		public Vector2 TopLeft
		{
			[Token(Token = "0x600166C")]
			[Address(RVA = "0xF01CB0", Offset = "0xF01CB0", VA = "0xF01CB0")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700020E")]
		public Vector2 TopRight
		{
			[Token(Token = "0x600166D")]
			[Address(RVA = "0xF01D0C", Offset = "0xF01D0C", VA = "0xF01D0C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700020F")]
		public Vector2 BottomLeft
		{
			[Token(Token = "0x600166E")]
			[Address(RVA = "0xF01D84", Offset = "0xF01D84", VA = "0xF01D84")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000210")]
		public Vector2 BottomRight
		{
			[Token(Token = "0x600166F")]
			[Address(RVA = "0xF01DD8", Offset = "0xF01DD8", VA = "0xF01DD8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000211")]
		public bool Enabled
		{
			[Token(Token = "0x6001670")]
			[Address(RVA = "0xF01E38", Offset = "0xF01E38", VA = "0xF01E38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001671")]
			[Address(RVA = "0xF01E5C", Offset = "0xF01E5C", VA = "0xF01E5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public string Label
		{
			[Token(Token = "0x6001672")]
			[Address(RVA = "0xF01E90", Offset = "0xF01E90", VA = "0xF01E90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001673")]
			[Address(RVA = "0xF01EB4", Offset = "0xF01EB4", VA = "0xF01EB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public bool LabelEnabled
		{
			[Token(Token = "0x6001674")]
			[Address(RVA = "0xF01ED8", Offset = "0xF01ED8", VA = "0xF01ED8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001675")]
			[Address(RVA = "0xF01F04", Offset = "0xF01F04", VA = "0xF01F04")]
			set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public Color BackgroundColor
		{
			[Token(Token = "0x6001676")]
			[Address(RVA = "0xF01F40", Offset = "0xF01F40", VA = "0xF01F40")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001677")]
			[Address(RVA = "0xF01F64", Offset = "0xF01F64", VA = "0xF01F64")]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public bool BackgroundEnabled
		{
			[Token(Token = "0x6001678")]
			[Address(RVA = "0xF01F88", Offset = "0xF01F88", VA = "0xF01F88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001679")]
			[Address(RVA = "0xF01FB4", Offset = "0xF01FB4", VA = "0xF01FB4")]
			set
			{
			}
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xF01FF0", Offset = "0xF01FF0", VA = "0xF01FF0")]
		public void SetTransform(Vector2 position, Vector2 size)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xF02044", Offset = "0xF02044", VA = "0xF02044")]
		public DataSection()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class DataSections : DataContainer
	{
		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78E38", Offset = "0xB78E38")]
		public DataSection _sectionPrefab;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78E70", Offset = "0xB78E70")]
		private DataSection[] <Sections>k__BackingField;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78E80", Offset = "0xB78E80")]
		private Vector2 <SectionSize>k__BackingField;

		[Token(Token = "0x17000216")]
		public DataSection[] Sections
		{
			[Token(Token = "0x600167C")]
			[Address(RVA = "0xF0204C", Offset = "0xF0204C", VA = "0xF0204C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB880D4", Offset = "0xB880D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600167D")]
			[Address(RVA = "0xF02054", Offset = "0xF02054", VA = "0xF02054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB880E4", Offset = "0xB880E4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public Vector2 SectionSize
		{
			[Token(Token = "0x600167E")]
			[Address(RVA = "0xF0205C", Offset = "0xF0205C", VA = "0xF0205C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB880F4", Offset = "0xB880F4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600167F")]
			[Address(RVA = "0xF02064", Offset = "0xF02064", VA = "0xF02064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88104", Offset = "0xB88104")]
			private set
			{
			}
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xF0206C", Offset = "0xF0206C", VA = "0xF0206C", Slot = "4")]
		public override void ShowData(ChartConfig chartConfig)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xF02290", Offset = "0xF02290", VA = "0xF02290", Slot = "5")]
		public override void ClearData()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xF02380", Offset = "0xF02380", VA = "0xF02380")]
		public DataSections()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB7154C", Offset = "0xB7154C")]
	public class DataSlice : MonoBehaviour
	{
		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78E90", Offset = "0xB78E90")]
		public RectTransform _rect;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text _label;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text _labelValue;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image _icon;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image _line;

		[Token(Token = "0x4001274")]
		private const int LABEL_OFFSET = 28;

		[Token(Token = "0x17000218")]
		public bool Enabled
		{
			[Token(Token = "0x6001683")]
			[Address(RVA = "0xF02388", Offset = "0xF02388", VA = "0xF02388")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001684")]
			[Address(RVA = "0xF023AC", Offset = "0xF023AC", VA = "0xF023AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public bool LabelEnabled
		{
			[Token(Token = "0x6001685")]
			[Address(RVA = "0xF023E0", Offset = "0xF023E0", VA = "0xF023E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001686")]
			[Address(RVA = "0xF0240C", Offset = "0xF0240C", VA = "0xF0240C")]
			set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public bool ValueLabelEnabled
		{
			[Token(Token = "0x6001687")]
			[Address(RVA = "0xF02448", Offset = "0xF02448", VA = "0xF02448")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001688")]
			[Address(RVA = "0xF02474", Offset = "0xF02474", VA = "0xF02474")]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public bool IconEnabled
		{
			[Token(Token = "0x6001689")]
			[Address(RVA = "0xF024B0", Offset = "0xF024B0", VA = "0xF024B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600168A")]
			[Address(RVA = "0xF024DC", Offset = "0xF024DC", VA = "0xF024DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public Vector2 Position
		{
			[Token(Token = "0x600168B")]
			[Address(RVA = "0xF02518", Offset = "0xF02518", VA = "0xF02518")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700021D")]
		public string Label
		{
			[Token(Token = "0x600168C")]
			[Address(RVA = "0xF02534", Offset = "0xF02534", VA = "0xF02534")]
			get
			{
				return null;
			}
			[Token(Token = "0x600168D")]
			[Address(RVA = "0xF02558", Offset = "0xF02558", VA = "0xF02558")]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		public string ValueLabel
		{
			[Token(Token = "0x600168E")]
			[Address(RVA = "0xF025B0", Offset = "0xF025B0", VA = "0xF025B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600168F")]
			[Address(RVA = "0xF025D4", Offset = "0xF025D4", VA = "0xF025D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		public Color IconColor
		{
			[Token(Token = "0x6001690")]
			[Address(RVA = "0xF0262C", Offset = "0xF0262C", VA = "0xF0262C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001691")]
			[Address(RVA = "0xF02650", Offset = "0xF02650", VA = "0xF02650")]
			set
			{
			}
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xF02674", Offset = "0xF02674", VA = "0xF02674")]
		public void SetTransform(float angle, Vector3 position, Vector3 origin)
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xF02778", Offset = "0xF02778", VA = "0xF02778")]
		private void AdjustLine(float angle, Vector3 position, Vector3 origin)
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xF02908", Offset = "0xF02908", VA = "0xF02908")]
		private void AdjustLabel(float angle, Vector3 position, Vector3 origin)
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xF02A68", Offset = "0xF02A68", VA = "0xF02A68")]
		public void SetColor(string hexColor)
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xF02B8C", Offset = "0xF02B8C", VA = "0xF02B8C")]
		public DataSlice()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class DataSlices : DataContainer
	{
		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78EC8", Offset = "0xB78EC8")]
		public DataSlice _prefab;

		[Token(Token = "0x4001276")]
		public const float SCALE_FACTOR = 0.3f;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78F00", Offset = "0xB78F00")]
		private DataSlice[] <Slices>k__BackingField;

		[Token(Token = "0x17000220")]
		public DataSlice[] Slices
		{
			[Token(Token = "0x6001697")]
			[Address(RVA = "0xF02B94", Offset = "0xF02B94", VA = "0xF02B94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88114", Offset = "0xB88114")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001698")]
			[Address(RVA = "0xF02B9C", Offset = "0xF02B9C", VA = "0xF02B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88124", Offset = "0xB88124")]
			private set
			{
			}
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xF02BA4", Offset = "0xF02BA4", VA = "0xF02BA4", Slot = "4")]
		public override void ShowData(ChartConfig chartConfig)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xF02E7C", Offset = "0xF02E7C", VA = "0xF02E7C")]
		private float GetAngleInCircle(int totalTiles, int index)
		{
			return default(float);
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xF02EA4", Offset = "0xF02EA4", VA = "0xF02EA4")]
		private Vector3 GetPositionInCircle(float angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xF02FE0", Offset = "0xF02FE0", VA = "0xF02FE0", Slot = "5")]
		public override void ClearData()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xF030D0", Offset = "0xF030D0", VA = "0xF030D0")]
		public DataSlices()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class SeriesLabel : MonoBehaviour
	{
		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78F10", Offset = "0xB78F10")]
		public Image _icon;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text _label;

		[Token(Token = "0x17000221")]
		public bool Enabled
		{
			[Token(Token = "0x600169E")]
			[Address(RVA = "0xF030D8", Offset = "0xF030D8", VA = "0xF030D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600169F")]
			[Address(RVA = "0xF030FC", Offset = "0xF030FC", VA = "0xF030FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public string Label
		{
			[Token(Token = "0x60016A0")]
			[Address(RVA = "0xF03130", Offset = "0xF03130", VA = "0xF03130")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016A1")]
			[Address(RVA = "0xF03154", Offset = "0xF03154", VA = "0xF03154")]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public Color LabelColor
		{
			[Token(Token = "0x60016A2")]
			[Address(RVA = "0xF031F8", Offset = "0xF031F8", VA = "0xF031F8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60016A3")]
			[Address(RVA = "0xF0321C", Offset = "0xF0321C", VA = "0xF0321C")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public Color IconColor
		{
			[Token(Token = "0x60016A4")]
			[Address(RVA = "0xF03240", Offset = "0xF03240", VA = "0xF03240")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60016A5")]
			[Address(RVA = "0xF03264", Offset = "0xF03264", VA = "0xF03264")]
			set
			{
			}
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xF03288", Offset = "0xF03288", VA = "0xF03288")]
		public SeriesLabel()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class SeriesLabelContainer : MonoBehaviour
	{
		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78F48", Offset = "0xB78F48")]
		public VerticalLayoutGroup _layout;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SeriesLabel _prefabLabel;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78F80", Offset = "0xB78F80")]
		public bool _showLabels;

		[Token(Token = "0x17000225")]
		public bool ShowLabels
		{
			[Token(Token = "0x60016A7")]
			[Address(RVA = "0xF03290", Offset = "0xF03290", VA = "0xF03290")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xF00988", Offset = "0xF00988", VA = "0xF00988")]
		public void AddLabel(string label, Color color)
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xF00B34", Offset = "0xF00B34", VA = "0xF00B34")]
		public void Clear()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xF03298", Offset = "0xF03298", VA = "0xF03298")]
		public SeriesLabelContainer()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class ShapeCreator
	{
		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject _instance;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshFilter _meshFilter;

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xF032A0", Offset = "0xF032A0", VA = "0xF032A0")]
		public ShapeCreator(Transform parent, Vector3 origin, Material material)
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xF0345C", Offset = "0xF0345C", VA = "0xF0345C")]
		public void AddPoints(Vector2[] points)
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xF03644", Offset = "0xF03644", VA = "0xF03644")]
		public void Clear()
		{
		}
	}
}
namespace AttentionLab.Alcove
{
	[Token(Token = "0x20002B9")]
	public class AlcoveManager : AppManager
	{
		[Token(Token = "0x20006BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72B44", Offset = "0xB72B44")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4002985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AlcoveManager <>4__this;

			[Token(Token = "0x4002986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Game gameData;

			[Token(Token = "0x6002E45")]
			[Address(RVA = "0xEF72D8", Offset = "0xEF72D8", VA = "0xEF72D8")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6002E46")]
			[Address(RVA = "0xEF77AC", Offset = "0xEF77AC", VA = "0xEF77AC")]
			internal void <StartGameSession>b__0(int level, int timesPlayed)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72B54", Offset = "0xB72B54")]
		private sealed class <>c
		{
			[Token(Token = "0x4002987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static IDataService.OnTutorialComplete <>9__20_1;

			[Token(Token = "0x6002E48")]
			[Address(RVA = "0xEF77A0", Offset = "0xEF77A0", VA = "0xEF77A0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002E49")]
			[Address(RVA = "0xEF77A8", Offset = "0xEF77A8", VA = "0xEF77A8")]
			internal void <StartGameSession>b__20_1(AttentionLab.REST.Request response)
			{
			}
		}

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB78FB8", Offset = "0xB78FB8")]
		[SerializeField]
		private GameCanvas _canvas;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ScreenMain _screenMain;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ScreenTutorial _screenTutorial;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ScreenStats _screenStats;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ScreenPause _screenPause;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AlcoveQuitter _quitter;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private AlcoveGameConfig _gameConfig;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameSessionController _gameSessionController;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Game _game;

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xEF6488", Offset = "0xEF6488", VA = "0xEF6488", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xEF6748", Offset = "0xEF6748", VA = "0xEF6748", Slot = "6")]
		protected override void Pause(bool pause)
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xEF67A4", Offset = "0xEF67A4", VA = "0xEF67A4")]
		private void PauseGame(bool pause, ResumeActionType actionType)
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xEF69C8", Offset = "0xEF69C8", VA = "0xEF69C8", Slot = "5")]
		public override void StartSession()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xEF6CE4", Offset = "0xEF6CE4", VA = "0xEF6CE4")]
		private void QuitSession()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xEF6D04", Offset = "0xEF6D04", VA = "0xEF6D04")]
		private void ScreenMain_Action(ScreenMain sender, ScreenMain.ActionType actionType)
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xEF7140", Offset = "0xEF7140", VA = "0xEF7140")]
		private void ScreenTutorial_Action(ScreenTutorial sender, ScreenTutorial.ActionType actionType)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xEF7170", Offset = "0xEF7170", VA = "0xEF7170")]
		private void ScreenStats_Action(ScreenStats sender, ScreenStats.ActionType actionType)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xEF71A0", Offset = "0xEF71A0", VA = "0xEF71A0")]
		private void ScreenPause_Action(ScreenPause sender, ScreenPause.ActionType actionType)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xEF71BC", Offset = "0xEF71BC", VA = "0xEF71BC")]
		private void GameSessionController_SessionWillEnd(GameSessionController sender, Game game, SessionData session, SceneDataFromGame data)
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xEF71C0", Offset = "0xEF71C0", VA = "0xEF71C0")]
		private void GameSessionController_SessionEnded(GameSessionController sender, Game game, SessionData session, SceneDataFromGame data)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xEF6E20", Offset = "0xEF6E20", VA = "0xEF6E20")]
		private void StartGameSession()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xEF71D0", Offset = "0xEF71D0", VA = "0xEF71D0")]
		private void EndGameSession(Game game, SessionData session, SceneDataFromGame data)
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xEF772C", Offset = "0xEF772C", VA = "0xEF772C")]
		public AlcoveManager()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class AlcoveQuitter : MonoBehaviour
	{
		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xEF6D00", Offset = "0xEF6D00", VA = "0xEF6D00")]
		public void Quit()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xEF797C", Offset = "0xEF797C", VA = "0xEF797C")]
		public AlcoveQuitter()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class GameCanvas : MonoBehaviour
	{
		[Token(Token = "0x20006BF")]
		public enum ScreenType
		{
			[Token(Token = "0x400298A")]
			Main,
			[Token(Token = "0x400298B")]
			Tutorial,
			[Token(Token = "0x400298C")]
			Statistics,
			[Token(Token = "0x400298D")]
			Pause
		}

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7908C", Offset = "0xB7908C")]
		[SerializeField]
		private ScreenBase[] _screens;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _currentScreenIndex;

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xEF6868", Offset = "0xEF6868", VA = "0xEF6868")]
		public void EnableScreen(ScreenType screenType)
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xEF6910", Offset = "0xEF6910", VA = "0xEF6910")]
		public void Disable()
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xEF7984", Offset = "0xEF7984", VA = "0xEF7984")]
		public GameCanvas()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class ScreenBase : MonoBehaviour
	{
		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xEF7994", Offset = "0xEF7994", VA = "0xEF7994", Slot = "4")]
		public virtual void Enable(bool enable)
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xEF79C8", Offset = "0xEF79C8", VA = "0xEF79C8")]
		public ScreenBase()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class ScreenMain : ScreenBase
	{
		[Token(Token = "0x20006C0")]
		public enum ActionType
		{
			[Token(Token = "0x400298F")]
			Game,
			[Token(Token = "0x4002990")]
			Tutorial,
			[Token(Token = "0x4002991")]
			Profile,
			[Token(Token = "0x4002992")]
			Close
		}

		[Token(Token = "0x20006C1")]
		public delegate void OnAction(ScreenMain sender, ActionType actionType);

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB790D8", Offset = "0xB790D8")]
		[SerializeField]
		private Text _labelTitle;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button _buttonTutorial;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button _buttonStatistics;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OnAction Action;

		[Token(Token = "0x17000226")]
		public string Title
		{
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0xEF79D0", Offset = "0xEF79D0", VA = "0xEF79D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016C4")]
			[Address(RVA = "0xEF6AEC", Offset = "0xEF6AEC", VA = "0xEF6AEC")]
			set
			{
			}
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xEF6CA8", Offset = "0xEF6CA8", VA = "0xEF6CA8")]
		public void EnableTutorialButton(bool enable)
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xEF79F4", Offset = "0xEF79F4", VA = "0xEF79F4")]
		public void EnableStatisticsButton(bool enable)
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xEF7A30", Offset = "0xEF7A30", VA = "0xEF7A30")]
		public void UI_Button_Click(int action)
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xEF7E30", Offset = "0xEF7E30", VA = "0xEF7E30")]
		public ScreenMain()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class ScreenPause : ScreenBase
	{
		[Token(Token = "0x20006C2")]
		public enum ActionType
		{
			[Token(Token = "0x4002994")]
			Resume,
			[Token(Token = "0x4002995")]
			Quit
		}

		[Token(Token = "0x20006C3")]
		public delegate void OnAction(ScreenPause sender, ActionType actionType);

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OnAction Action;

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xEF7EE0", Offset = "0xEF7EE0", VA = "0xEF7EE0")]
		public void UI_Button_Click(int action)
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xEF82E0", Offset = "0xEF82E0", VA = "0xEF82E0")]
		public ScreenPause()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class ScreenStats : ScreenBase
	{
		[Token(Token = "0x20006C4")]
		public enum ActionType
		{
			[Token(Token = "0x4002997")]
			Game,
			[Token(Token = "0x4002998")]
			Close
		}

		[Token(Token = "0x20006C5")]
		public delegate void OnAction(ScreenStats sender, ActionType actionType);

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB79144", Offset = "0xB79144")]
		[SerializeField]
		private ChartLines _chart;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _labelScore;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _labelHighscore;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text _labelTimesPlayed;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text _labelNoData;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public OnAction Action;

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xEF6F78", Offset = "0xEF6F78", VA = "0xEF6F78")]
		public void SetData(Game gameData, Session session)
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xEF88A4", Offset = "0xEF88A4", VA = "0xEF88A4")]
		public void UI_Button_Click(int action)
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xEF8CA4", Offset = "0xEF8CA4", VA = "0xEF8CA4")]
		public ScreenStats()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class ScreenTutorial : ScreenBase
	{
		[Token(Token = "0x20006C6")]
		public enum ActionType
		{
			[Token(Token = "0x400299A")]
			Game,
			[Token(Token = "0x400299B")]
			Close
		}

		[Token(Token = "0x20006C7")]
		public delegate void OnAction(ScreenTutorial sender, ActionType actionType);

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB791D0", Offset = "0xB791D0")]
		[SerializeField]
		private Button _buttonNext;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button _buttonGame;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button _buttonClose;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text _menuTitleLabel;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text _gameTitleLabel;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text _slideTitleLabel;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text _instructionLabel;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Image _imageStep;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image _stepBulletPrefab;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OnAction Action;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AlcoveGameConfig.Step[] _steps;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Image[] _stepBullets;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _currentStep;

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xEF8D54", Offset = "0xEF8D54", VA = "0xEF8D54", Slot = "4")]
		public override void Enable(bool enable)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xEF6B10", Offset = "0xEF6B10", VA = "0xEF6B10")]
		public void Setup(AlcoveGameConfig gameConfig)
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xEF8D98", Offset = "0xEF8D98", VA = "0xEF8D98")]
		private void SetStep(int step)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xEF9028", Offset = "0xEF9028", VA = "0xEF9028")]
		public void UI_ButtonBack_Click()
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xEF907C", Offset = "0xEF907C", VA = "0xEF907C")]
		public void UI_ButtonNext_Click()
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xEF905C", Offset = "0xEF905C", VA = "0xEF905C")]
		public void UI_Button_Click(int action)
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xEF9508", Offset = "0xEF9508", VA = "0xEF9508")]
		public ScreenTutorial()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB715B0", Offset = "0xB715B0")]
	public class AlcoveGameConfig : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20006C8")]
		public class Step
		{
			[Token(Token = "0x400299C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB83114", Offset = "0xB83114")]
			[SerializeField]
			private Sprite _image;

			[Token(Token = "0x400299D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private string _slideTitle;

			[Token(Token = "0x400299E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private string _instruction;

			[Token(Token = "0x17000526")]
			public Sprite Image
			{
				[Token(Token = "0x6002E5A")]
				[Address(RVA = "0xEF6468", Offset = "0xEF6468", VA = "0xEF6468")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000527")]
			public string SlideTitle
			{
				[Token(Token = "0x6002E5B")]
				[Address(RVA = "0xEF6470", Offset = "0xEF6470", VA = "0xEF6470")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000528")]
			public string Instruction
			{
				[Token(Token = "0x6002E5C")]
				[Address(RVA = "0xEF6478", Offset = "0xEF6478", VA = "0xEF6478")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E5D")]
			[Address(RVA = "0xEF6480", Offset = "0xEF6480", VA = "0xEF6480")]
			public Step()
			{
			}
		}

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7929C", Offset = "0xB7929C")]
		[SerializeField]
		private AttentionLab.Enums.GameType _gameType;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Step[] _tutorialSteps;

		[Token(Token = "0x40012A4")]
		public const string PREFAB_NAME_FORMAT = "{0}_Prefab";

		[Token(Token = "0x40012A5")]
		private const string _GAME_PATH_FORMAT = "Assets/_AttentionLab/_Games/{0}/Export/{1}";

		[Token(Token = "0x40012A6")]
		private const string _SFX_NAME_FORMAT = "{0}_Audio";

		[Token(Token = "0x17000227")]
		public AttentionLab.Enums.GameType GameType
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0xEF605C", Offset = "0xEF605C", VA = "0xEF605C")]
			get
			{
				return default(AttentionLab.Enums.GameType);
			}
		}

		[Token(Token = "0x17000228")]
		public string GameTitle
		{
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0xEF6064", Offset = "0xEF6064", VA = "0xEF6064")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		public Step[] TutorialSteps
		{
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0xEF63FC", Offset = "0xEF63FC", VA = "0xEF63FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		public bool HasTutorial
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0xEF6404", Offset = "0xEF6404", VA = "0xEF6404")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xEF6460", Offset = "0xEF6460", VA = "0xEF6460")]
		public AlcoveGameConfig()
		{
		}
	}
}
namespace AttentionLab.Utils
{
	[Token(Token = "0x20002C2")]
	public class CompressionUtils
	{
		[Token(Token = "0x20006C9")]
		public delegate void ProgressDelegate(string sMessage);

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xD31840", Offset = "0xD31840", VA = "0xD31840")]
		public static void CompressFile(string sDir, string sRelativePath, GZipStream zipStream)
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xD31A34", Offset = "0xD31A34", VA = "0xD31A34")]
		public static bool DecompressFile(string sDir, GZipStream zipStream, ProgressDelegate progress)
		{
			return default(bool);
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xD321A0", Offset = "0xD321A0", VA = "0xD321A0")]
		public static void CompressDirectory(string sInDir, string sOutFile, ProgressDelegate progress)
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xD324E0", Offset = "0xD324E0", VA = "0xD324E0")]
		public static void DecompressToDirectory(string sCompressedFile, string sDir, ProgressDelegate progress)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xD3272C", Offset = "0xD3272C", VA = "0xD3272C")]
		public CompressionUtils()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class CSVReader
	{
		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string LINE_SPLIT_RE;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static char[] TRIM_CHARS;

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xD313E0", Offset = "0xD313E0", VA = "0xD313E0")]
		public static List<Dictionary<string, object>> Read(string file)
		{
			return null;
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xD31794", Offset = "0xD31794", VA = "0xD31794")]
		public CSVReader()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public static class DebugLogger
	{
		[Token(Token = "0x40012A9")]
		private const string TAG = "EnhanceLOG";

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xD327A8", Offset = "0xD327A8", VA = "0xD327A8")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xD32818", Offset = "0xD32818", VA = "0xD32818")]
		public static void Warning(string message)
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xD32874", Offset = "0xD32874", VA = "0xD32874")]
		public static void Error(string message)
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xD328D0", Offset = "0xD328D0", VA = "0xD328D0")]
		public static void Log(DebugLoggerRealm realm, string message)
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xD32A1C", Offset = "0xD32A1C", VA = "0xD32A1C")]
		public static void Warning(DebugLoggerRealm realm, string message)
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xD32AC0", Offset = "0xD32AC0", VA = "0xD32AC0")]
		public static void Error(DebugLoggerRealm realm, string message)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xD32814", Offset = "0xD32814", VA = "0xD32814")]
		private static void LogMessage(string message, LogType logType)
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public enum DebugLoggerRealm
	{
		[Token(Token = "0x40012AB")]
		None = 0,
		[Token(Token = "0x40012AC")]
		Game = 1,
		[Token(Token = "0x40012AD")]
		Moments = 2,
		[Token(Token = "0x40012AE")]
		ServerCommunication = 4,
		[Token(Token = "0x40012AF")]
		Audio = 8,
		[Token(Token = "0x40012B0")]
		SubtitledAudioPlayer = 0x10,
		[Token(Token = "0x40012B1")]
		HandControllers = 0x20,
		[Token(Token = "0x40012B2")]
		Locale = 0x40,
		[Token(Token = "0x40012B3")]
		Player = 0x80,
		[Token(Token = "0x40012B4")]
		RemoteConfig = 0x100,
		[Token(Token = "0x40012B5")]
		SceneTransition = 0x200,
		[Token(Token = "0x40012B6")]
		DeviceInfo = 0x400,
		[Token(Token = "0x40012B7")]
		Theme = 0x800,
		[Token(Token = "0x40012B8")]
		DeviceData = 0x1000,
		[Token(Token = "0x40012B9")]
		InputData = 0x2000,
		[Token(Token = "0x40012BA")]
		EyeTrackingData = 0x4000,
		[Token(Token = "0x40012BB")]
		KinesisDataStream = 0x8000
	}
	[Token(Token = "0x20002C6")]
	public class DebugLoggerRealmManager : MonoBehaviour
	{
		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[EnumFlagsAttribute]
		private DebugLoggerRealm _activeRealms;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DebugLoggerRealmManager Instance;

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xD32B64", Offset = "0xD32B64", VA = "0xD32B64")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xD32974", Offset = "0xD32974", VA = "0xD32974")]
		public bool IsActiveRealm(DebugLoggerRealm realm)
		{
			return default(bool);
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xD32804", Offset = "0xD32804", VA = "0xD32804")]
		public bool IsLoggingActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xD32BB8", Offset = "0xD32BB8", VA = "0xD32BB8")]
		public DebugLoggerRealmManager()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	[ExecuteInEditMode]
	public class DeviceInfo
	{
		[Token(Token = "0x40012BE")]
		private const string TO_STRING_FORMAT = "{0} : {1}\n";

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79330", Offset = "0xB79330")]
		private readonly DeviceType <Type>k__BackingField;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79340", Offset = "0xB79340")]
		private readonly DeviceFamily <Family>k__BackingField;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79350", Offset = "0xB79350")]
		private readonly DeviceModel <Model>k__BackingField;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79360", Offset = "0xB79360")]
		private readonly string <UniqueIdentifier>k__BackingField;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79370", Offset = "0xB79370")]
		private readonly string <Name>k__BackingField;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79380", Offset = "0xB79380")]
		private readonly string <DeviceModel>k__BackingField;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79390", Offset = "0xB79390")]
		private readonly string <XRFamilyName>k__BackingField;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB793A0", Offset = "0xB793A0")]
		private readonly string <XRModelName>k__BackingField;

		[Token(Token = "0x1700022B")]
		public DeviceType Type
		{
			[Token(Token = "0x60016ED")]
			[Address(RVA = "0xD32BC0", Offset = "0xD32BC0", VA = "0xD32BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88134", Offset = "0xB88134")]
			get
			{
				return default(DeviceType);
			}
		}

		[Token(Token = "0x1700022C")]
		public DeviceFamily Family
		{
			[Token(Token = "0x60016EE")]
			[Address(RVA = "0xD32BC8", Offset = "0xD32BC8", VA = "0xD32BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88144", Offset = "0xB88144")]
			get
			{
				return default(DeviceFamily);
			}
		}

		[Token(Token = "0x1700022D")]
		public DeviceModel Model
		{
			[Token(Token = "0x60016EF")]
			[Address(RVA = "0xD32BD0", Offset = "0xD32BD0", VA = "0xD32BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88154", Offset = "0xB88154")]
			get
			{
				return default(DeviceModel);
			}
		}

		[Token(Token = "0x1700022E")]
		public string UniqueIdentifier
		{
			[Token(Token = "0x60016F0")]
			[Address(RVA = "0xD32BD8", Offset = "0xD32BD8", VA = "0xD32BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88164", Offset = "0xB88164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		public string Name
		{
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0xD32BE0", Offset = "0xD32BE0", VA = "0xD32BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88174", Offset = "0xB88174")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000230")]
		public string DeviceModel
		{
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0xD32BE8", Offset = "0xD32BE8", VA = "0xD32BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88184", Offset = "0xB88184")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		public string XRFamilyName
		{
			[Token(Token = "0x60016F3")]
			[Address(RVA = "0xD32BF0", Offset = "0xD32BF0", VA = "0xD32BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88194", Offset = "0xB88194")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		public string XRModelName
		{
			[Token(Token = "0x60016F4")]
			[Address(RVA = "0xD32BF8", Offset = "0xD32BF8", VA = "0xD32BF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB881A4", Offset = "0xB881A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		public bool IsMobile
		{
			[Token(Token = "0x60016F5")]
			[Address(RVA = "0xD32C00", Offset = "0xD32C00", VA = "0xD32C00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xD32C10", Offset = "0xD32C10", VA = "0xD32C10")]
		public DeviceInfo()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xD32D14", Offset = "0xD32D14", VA = "0xD32D14", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002C8")]
	public static class EnumUtils
	{
		[Token(Token = "0x60016F8")]
		public static string ToString<T>(T value)
		{
			return null;
		}

		[Token(Token = "0x60016F9")]
		public static string ToLowerString<T>(T value)
		{
			return null;
		}

		[Token(Token = "0x60016FA")]
		public static string ToUpperString<T>(T value)
		{
			return null;
		}

		[Token(Token = "0x60016FB")]
		public static TEnum FromString<TEnum>(string text, TEnum defaultValue, bool caseInsensitive = true)
		{
			return (TEnum)null;
		}
	}
	[Token(Token = "0x20002C9")]
	public static class FormFieldValidator
	{
		[Token(Token = "0x20006CA")]
		public static class PasswordSettings
		{
			[Token(Token = "0x400299F")]
			public const int CharsMinCount = 8;

			[Token(Token = "0x40029A0")]
			public const int CharsMaxCount = -1;

			[Token(Token = "0x40029A1")]
			public const int CharsUpperCount = -1;

			[Token(Token = "0x40029A2")]
			public const int CharsLowerCount = -1;

			[Token(Token = "0x40029A3")]
			public const int CharsSpecialCount = -1;

			[Token(Token = "0x40029A4")]
			public const int DigitsCount = -1;

			[Token(Token = "0x40029A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static bool HasMinChars;

			[Token(Token = "0x40029A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public static bool HasMaxChars;

			[Token(Token = "0x40029A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public static bool RequireUpperChars;

			[Token(Token = "0x40029A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
			public static bool RequireLowerChars;

			[Token(Token = "0x40029A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static bool RequireSpecialChars;

			[Token(Token = "0x40029AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public static bool RequireDigits;
		}

		[Token(Token = "0x40012C7")]
		public const string MatchEmailPattern = "^([\\w\\.\\-]+)@([\\w\\-]+)((\\.(\\w){2,3})+)$";

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xD330A8", Offset = "0xD330A8", VA = "0xD330A8")]
		public static bool IsValidEmail(InputField email)
		{
			return default(bool);
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xD330C0", Offset = "0xD330C0", VA = "0xD330C0")]
		public static bool IsValidEmail(string email)
		{
			return default(bool);
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xD33154", Offset = "0xD33154", VA = "0xD33154")]
		public static bool IsValidPassword(InputField password)
		{
			return default(bool);
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xD3316C", Offset = "0xD3316C", VA = "0xD3316C")]
		public static bool IsValidPassword(string password)
		{
			return default(bool);
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xD333EC", Offset = "0xD333EC", VA = "0xD333EC")]
		public static bool isValidName(string name)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002CA")]
	public class JsonUtils
	{
		[Token(Token = "0x20006CB")]
		public class Vector2Data
		{
			[Token(Token = "0x40029AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB83180", Offset = "0xB83180")]
			public float x;

			[Token(Token = "0x40029AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB831E4", Offset = "0xB831E4")]
			public float y;

			[Token(Token = "0x6002E63")]
			[Address(RVA = "0xD33530", Offset = "0xD33530", VA = "0xD33530")]
			public Vector2Data(float x, float y)
			{
			}

			[Token(Token = "0x6002E64")]
			[Address(RVA = "0xD33568", Offset = "0xD33568", VA = "0xD33568")]
			public Vector2Data(Vector2 vector)
			{
			}
		}

		[Token(Token = "0x20006CC")]
		public class Vector3Data
		{
			[Token(Token = "0x40029AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB83248", Offset = "0xB83248")]
			public float x;

			[Token(Token = "0x40029AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB832AC", Offset = "0xB832AC")]
			public float y;

			[Token(Token = "0x40029AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB83310", Offset = "0xB83310")]
			public float z;

			[Token(Token = "0x6002E65")]
			[Address(RVA = "0xD33620", Offset = "0xD33620", VA = "0xD33620")]
			public Vector3Data(float x, float y, float z)
			{
			}

			[Token(Token = "0x6002E66")]
			[Address(RVA = "0xD33668", Offset = "0xD33668", VA = "0xD33668")]
			public Vector3Data(Vector3 vector)
			{
			}
		}

		[Token(Token = "0x20006CD")]
		public class Vector2IntData
		{
			[Token(Token = "0x40029B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int x;

			[Token(Token = "0x40029B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int y;

			[Token(Token = "0x6002E67")]
			[Address(RVA = "0xD335A0", Offset = "0xD335A0", VA = "0xD335A0")]
			public Vector2IntData(int x, int y)
			{
			}

			[Token(Token = "0x6002E68")]
			[Address(RVA = "0xD335D8", Offset = "0xD335D8", VA = "0xD335D8")]
			public Vector2IntData(Vector2Int vector)
			{
			}
		}

		[Token(Token = "0x20006CE")]
		public class Vector3IntData
		{
			[Token(Token = "0x40029B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int x;

			[Token(Token = "0x40029B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int y;

			[Token(Token = "0x40029B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int z;

			[Token(Token = "0x6002E69")]
			[Address(RVA = "0xD336B0", Offset = "0xD336B0", VA = "0xD336B0")]
			public Vector3IntData(int x, int y, int z)
			{
			}

			[Token(Token = "0x6002E6A")]
			[Address(RVA = "0xD336F0", Offset = "0xD336F0", VA = "0xD336F0")]
			public Vector3IntData(Vector3Int vector)
			{
			}
		}

		[Token(Token = "0x40012C8")]
		public const string DATE_FORMAT = "yyyy-MM-dd HH:mm:ss.fff";

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xD33528", Offset = "0xD33528", VA = "0xD33528")]
		public JsonUtils()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class FloatFormatConverter : JsonConverter
	{
		[Token(Token = "0x6001702")]
		[Address(RVA = "0xD32F04", Offset = "0xD32F04", VA = "0xD32F04", Slot = "6")]
		public override bool CanConvert(Type objectType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xD32F88", Offset = "0xD32F88", VA = "0xD32F88", Slot = "5")]
		public override object ReadJson(Newtonsoft.Json.JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
		{
			return null;
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xD32FB0", Offset = "0xD32FB0", VA = "0xD32FB0", Slot = "4")]
		public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, JsonSerializer serializer)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xD330A0", Offset = "0xD330A0", VA = "0xD330A0")]
		public FloatFormatConverter()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class DateFormatConverter : IsoDateTimeConverter
	{
		[Token(Token = "0x6001706")]
		[Address(RVA = "0xD32774", Offset = "0xD32774", VA = "0xD32774")]
		public DateFormatConverter(string format)
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class PlainJsonStringConverter : JsonConverter
	{
		[Token(Token = "0x6001707")]
		[Address(RVA = "0xD33898", Offset = "0xD33898", VA = "0xD33898", Slot = "6")]
		public override bool CanConvert(Type objectType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xD3391C", Offset = "0xD3391C", VA = "0xD3391C", Slot = "5")]
		public override object ReadJson(Newtonsoft.Json.JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
		{
			return null;
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xD33944", Offset = "0xD33944", VA = "0xD33944", Slot = "4")]
		public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, JsonSerializer serializer)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xD339D4", Offset = "0xD339D4", VA = "0xD339D4")]
		public PlainJsonStringConverter()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class PlainJsonObjectConverter : JsonConverter
	{
		[Token(Token = "0x600170B")]
		[Address(RVA = "0xD33754", Offset = "0xD33754", VA = "0xD33754", Slot = "6")]
		public override bool CanConvert(Type objectType)
		{
			return default(bool);
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xD337D8", Offset = "0xD337D8", VA = "0xD337D8", Slot = "5")]
		public override object ReadJson(Newtonsoft.Json.JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
		{
			return null;
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xD33800", Offset = "0xD33800", VA = "0xD33800", Slot = "4")]
		public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, JsonSerializer serializer)
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xD33890", Offset = "0xD33890", VA = "0xD33890")]
		public PlainJsonObjectConverter()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class Triangulator
	{
		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vector2> m_points;

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xD339DC", Offset = "0xD339DC", VA = "0xD339DC")]
		public Triangulator(Vector2[] points)
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xD33A80", Offset = "0xD33A80", VA = "0xD33A80")]
		public int[] Triangulate()
		{
			return null;
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xD33D2C", Offset = "0xD33D2C", VA = "0xD33D2C")]
		private float Area()
		{
			return default(float);
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xD33E4C", Offset = "0xD33E4C", VA = "0xD33E4C")]
		private bool Snip(int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xD340A8", Offset = "0xD340A8", VA = "0xD340A8")]
		private bool InsideTriangle(Vector2 A, Vector2 B, Vector2 C, Vector2 P)
		{
			return default(bool);
		}
	}
}
namespace AttentionLab.UI
{
	[Token(Token = "0x20002D0")]
	public class FloatingUI : MonoBehaviour
	{
		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB793B0", Offset = "0xB793B0")]
		public bool _trackHeadMovement;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float _offsetY;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _distanceToCamera;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _trackingVelocity;

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x100F48C", Offset = "0x100F48C", VA = "0x100F48C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x100F800", Offset = "0x100F800", VA = "0x100F800")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x100F948", Offset = "0x100F948", VA = "0x100F948")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x100FA84", Offset = "0x100FA84", VA = "0x100FA84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x100F494", Offset = "0x100F494", VA = "0x100F494")]
		private void UpdateTransform(bool immediate)
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x100FA98", Offset = "0x100FA98", VA = "0x100FA98")]
		private void PlayerInstance_Recentered(PlayerCamera sender, float playerHeight)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x100FAA0", Offset = "0x100FAA0", VA = "0x100FAA0")]
		public FloatingUI()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class LoadingMessage : MonoBehaviour
	{
		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _loadingMessage;

		[Token(Token = "0x40012CF")]
		private const string LoadingMessagePrefix = "LABEL_LOADING_MESSAGE_";

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _numberOfMessages;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _updatedNumberOfMessages;

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x101F76C", Offset = "0x101F76C", VA = "0x101F76C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x101F8E0", Offset = "0x101F8E0", VA = "0x101F8E0")]
		private void UpdateNumberOfMessages()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x101FA04", Offset = "0x101FA04", VA = "0x101FA04")]
		public LoadingMessage()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class AccessibilityIcon : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AccessibilityType _type;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _hover;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _description;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Image _image;

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x1054D58", Offset = "0x1054D58", VA = "0x1054D58")]
		public void Start()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x1054FFC", Offset = "0x1054FFC", VA = "0x1054FFC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x105501C", Offset = "0x105501C", VA = "0x105501C")]
		public void SetType(AccessibilityType type)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x1054D90", Offset = "0x1054D90", VA = "0x1054D90")]
		private void ApplyIconVisual()
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x1055024", Offset = "0x1055024", VA = "0x1055024", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x10551A0", Offset = "0x10551A0", VA = "0x10551A0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x10551C0", Offset = "0x10551C0", VA = "0x10551C0")]
		public AccessibilityIcon()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class ArrowButtonSelectionBarValue : MonoBehaviour
	{
		[Token(Token = "0x20006CF")]
		public delegate void OnValueChange(float value);

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _increment;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _barImage;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnValueChange ValueChange;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float _currentValue;

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x10551C8", Offset = "0x10551C8", VA = "0x10551C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x1055270", Offset = "0x1055270", VA = "0x1055270")]
		public void SetValue(float value)
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x1055278", Offset = "0x1055278", VA = "0x1055278")]
		private void UpdateBarFill()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x1055554", Offset = "0x1055554", VA = "0x1055554")]
		public void PreviousValue()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x10556DC", Offset = "0x10556DC", VA = "0x10556DC")]
		public void NextValue()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x1055868", Offset = "0x1055868", VA = "0x1055868")]
		public ArrowButtonSelectionBarValue()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class ArrowButtonSelectionColor : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006D0")]
		public struct SelectionEntry
		{
			[Token(Token = "0x40029B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int id;

			[Token(Token = "0x40029B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Color value;
		}

		[Token(Token = "0x20006D1")]
		public delegate void OnValueChange(int id);

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<SelectionEntry> _entries;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _selectedColorImage;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnValueChange ValueChange;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _currentSelectionIndex;

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x1055918", Offset = "0x1055918", VA = "0x1055918")]
		public void ClearEntries()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x1055970", Offset = "0x1055970", VA = "0x1055970")]
		public void AddEntry(int id, Color value)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x1055A20", Offset = "0x1055A20", VA = "0x1055A20")]
		private bool ContainsEntryId(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x1055B40", Offset = "0x1055B40", VA = "0x1055B40")]
		public void SetValue(int id)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x1055BF4", Offset = "0x1055BF4", VA = "0x1055BF4")]
		private void UpdateSelectedColor()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x1055F28", Offset = "0x1055F28", VA = "0x1055F28")]
		public void PreviousValue()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x105610C", Offset = "0x105610C", VA = "0x105610C")]
		public void NextValue()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x10562F4", Offset = "0x10562F4", VA = "0x10562F4")]
		public ArrowButtonSelectionColor()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class ArrowButtonSelectionList : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006D2")]
		public struct SelectionEntry
		{
			[Token(Token = "0x40029B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int id;

			[Token(Token = "0x40029B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string value;
		}

		[Token(Token = "0x20006D3")]
		public delegate void OnValueChange(int id);

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<SelectionEntry> _entries;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _selectedLabel;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnValueChange ValueChange;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool _localize;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _currentSelectionIndex;

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x105640C", Offset = "0x105640C", VA = "0x105640C")]
		public void ClearEntries()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x1056464", Offset = "0x1056464", VA = "0x1056464")]
		public void AddEntry(int id, string value)
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x10564F4", Offset = "0x10564F4", VA = "0x10564F4")]
		private bool ContainsEntryId(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x1056604", Offset = "0x1056604", VA = "0x1056604")]
		public void SetValue(int id)
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x10566A8", Offset = "0x10566A8", VA = "0x10566A8")]
		private void UpdateSelectedLabel()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x1056A24", Offset = "0x1056A24", VA = "0x1056A24")]
		public void PreviousValue()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x1056C08", Offset = "0x1056C08", VA = "0x1056C08")]
		public void NextValue()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x1056DF0", Offset = "0x1056DF0", VA = "0x1056DF0")]
		public ArrowButtonSelectionList()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class ArrowButtonSelectionPlayerMeasurements : MonoBehaviour
	{
		[Token(Token = "0x20006D4")]
		public enum ValueType
		{
			[Token(Token = "0x40029BA")]
			Height,
			[Token(Token = "0x40029BB")]
			Weight
		}

		[Token(Token = "0x20006D5")]
		public delegate void OnValueChange(int value);

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ValueType _valueType;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _selectedLabel;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _defaultMetricValue;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int _minMetricValue;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _maxMetricValue;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _minImperialValue;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _maxImperialValue;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _metricValue;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _imperialValue;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _showImperial;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public OnValueChange ValueChange;

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x1056F08", Offset = "0x1056F08", VA = "0x1056F08")]
		private void Start()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x1057068", Offset = "0x1057068", VA = "0x1057068")]
		public void SetMetricValue(int value)
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x10572EC", Offset = "0x10572EC", VA = "0x10572EC")]
		public void SetImperialMode(bool value)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x10570BC", Offset = "0x10570BC", VA = "0x10570BC")]
		private void UpdateSelectedLabel()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x105753C", Offset = "0x105753C", VA = "0x105753C")]
		public void PreviousValue()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x1057874", Offset = "0x1057874", VA = "0x1057874")]
		public void NextValue()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x105777C", Offset = "0x105777C", VA = "0x105777C")]
		private void UpdateMetricValue()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x1057094", Offset = "0x1057094", VA = "0x1057094")]
		private void UpdateImperialValue()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x1057AB4", Offset = "0x1057AB4", VA = "0x1057AB4")]
		private int ConvertToMetricValue(float imperialValue)
		{
			return default(int);
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x1056F40", Offset = "0x1056F40", VA = "0x1056F40")]
		private float ConvertToImperialValue(int metricValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x1057AEC", Offset = "0x1057AEC", VA = "0x1057AEC")]
		public ArrowButtonSelectionPlayerMeasurements()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class Avatar : MonoBehaviour
	{
		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image _avatarImage;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AvatarImageMenu _avatarMenu;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Button _button;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _id;

		[Token(Token = "0x17000234")]
		public Button Button
		{
			[Token(Token = "0x6001746")]
			[Address(RVA = "0x1057B9C", Offset = "0x1057B9C", VA = "0x1057B9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001747")]
			[Address(RVA = "0x1057BA4", Offset = "0x1057BA4", VA = "0x1057BA4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x1057BAC", Offset = "0x1057BAC", VA = "0x1057BAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x1057C6C", Offset = "0x1057C6C", VA = "0x1057C6C")]
		public void SetupAvatarProfileMenu(int id)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x1057CF0", Offset = "0x1057CF0", VA = "0x1057CF0")]
		public void SetupAvatarChangeButton(int id, AvatarImageMenu menu)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x1057D7C", Offset = "0x1057D7C", VA = "0x1057D7C")]
		public void OnSelected()
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x1057F34", Offset = "0x1057F34", VA = "0x1057F34")]
		public Avatar()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class Crosshair : MonoBehaviour
	{
		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB794D8", Offset = "0xB794D8")]
		public MeshRenderer _mesh;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LineRenderer _line;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _initialScale;

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x1059528", Offset = "0x1059528", VA = "0x1059528")]
		private void Start()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x105956C", Offset = "0x105956C", VA = "0x105956C")]
		private void Update()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x105986C", Offset = "0x105986C", VA = "0x105986C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x10598F0", Offset = "0x10598F0", VA = "0x10598F0")]
		public Crosshair()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class DateValueInputField : MonoBehaviour
	{
		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InteractiveTextField _inputField;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x105C3C4", Offset = "0x105C3C4", VA = "0x105C3C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x105C438", Offset = "0x105C438", VA = "0x105C438")]
		private bool ShouldForceSelectedState()
		{
			return default(bool);
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x105C570", Offset = "0x105C570", VA = "0x105C570")]
		public DateValueInputField()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class EPIProgressionCircle : ValueProgressionCircle
	{
		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image _lockedIcon;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private HoverHandler _hoverHandler;

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x105C7E0", Offset = "0x105C7E0", VA = "0x105C7E0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x105C818", Offset = "0x105C818", VA = "0x105C818")]
		public void SetLocked(bool value, int minSessions = 0)
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x105CA00", Offset = "0x105CA00", VA = "0x105CA00", Slot = "5")]
		public override void SetValue(int value, int maxValue, bool startEmpty = false)
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x105CA50", Offset = "0x105CA50", VA = "0x105CA50")]
		public EPIProgressionCircle()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class ErrorMessage : MonoBehaviour
	{
		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _message;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isShowing;

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x105CA58", Offset = "0x105CA58", VA = "0x105CA58")]
		public void SetMessage(string message)
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x105CA7C", Offset = "0x105CA7C", VA = "0x105CA7C")]
		public void Show()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x105CAF4", Offset = "0x105CAF4", VA = "0x105CAF4")]
		public void Hide()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x105CB68", Offset = "0x105CB68", VA = "0x105CB68")]
		public ErrorMessage()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class FocusInputField : InputField
	{
		[Token(Token = "0x600175C")]
		[Address(RVA = "0x100FAC0", Offset = "0x100FAC0", VA = "0x100FAC0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x100FAC8", Offset = "0x100FAC8", VA = "0x100FAC8")]
		private void Update()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x100FACC", Offset = "0x100FACC", VA = "0x100FACC", Slot = "36")]
		public override void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x100FAD0", Offset = "0x100FAD0", VA = "0x100FAD0", Slot = "37")]
		public override void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x100FAD4", Offset = "0x100FAD4", VA = "0x100FAD4")]
		public FocusInputField()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class GenericButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler
	{
		[Token(Token = "0x20006D6")]
		public delegate void OnHovered(GenericButton sender, bool hovered);

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB79570", Offset = "0xB79570")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _icon;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _label;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OnHovered Hovered;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB795DC", Offset = "0xB795DC")]
		private bool <IsHovered>k__BackingField;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _selected;

		[Token(Token = "0x17000235")]
		public Button Component
		{
			[Token(Token = "0x6001761")]
			[Address(RVA = "0x1014C14", Offset = "0x1014C14", VA = "0x1014C14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		public Sprite Icon
		{
			[Token(Token = "0x6001762")]
			[Address(RVA = "0x1014C1C", Offset = "0x1014C1C", VA = "0x1014C1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001763")]
			[Address(RVA = "0x1014C3C", Offset = "0x1014C3C", VA = "0x1014C3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public string Label
		{
			[Token(Token = "0x6001764")]
			[Address(RVA = "0x1014D00", Offset = "0x1014D00", VA = "0x1014D00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001765")]
			[Address(RVA = "0x1014D24", Offset = "0x1014D24", VA = "0x1014D24")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public bool IsHovered
		{
			[Token(Token = "0x6001766")]
			[Address(RVA = "0x1014DA0", Offset = "0x1014DA0", VA = "0x1014DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB881B4", Offset = "0xB881B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001767")]
			[Address(RVA = "0x1014DA8", Offset = "0x1014DA8", VA = "0x1014DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB881C4", Offset = "0xB881C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public bool IsSelected
		{
			[Token(Token = "0x6001768")]
			[Address(RVA = "0x1014DB4", Offset = "0x1014DB4", VA = "0x1014DB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001769")]
			[Address(RVA = "0x1014DBC", Offset = "0x1014DBC", VA = "0x1014DBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public bool IsEnabled
		{
			[Token(Token = "0x600176A")]
			[Address(RVA = "0x1014EC4", Offset = "0x1014EC4", VA = "0x1014EC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x1014EE8", Offset = "0x1014EE8", VA = "0x1014EE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x1014FEC", Offset = "0x1014FEC", VA = "0x1014FEC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x1014EEC", Offset = "0x1014EEC", VA = "0x1014EEC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x10155D8", Offset = "0x10155D8", VA = "0x10155D8", Slot = "6")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x10157D0", Offset = "0x10157D0", VA = "0x10157D0", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x10158BC", Offset = "0x10158BC", VA = "0x10158BC")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x10158F0", Offset = "0x10158F0", VA = "0x10158F0")]
		public void EnableInteraction(bool enable)
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x1015910", Offset = "0x1015910", VA = "0x1015910")]
		public GenericButton()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class GenericLayout : MonoBehaviour
	{
		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB795EC", Offset = "0xB795EC")]
		public HorizontalOrVerticalLayoutGroup _layout;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform _prefab;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB79624", Offset = "0xB79624")]
		public bool _prefabIsChildOfLayout;

		[Token(Token = "0x6001773")]
		public List<T> Populate<T>(int count)
		{
			return null;
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x10159D4", Offset = "0x10159D4", VA = "0x10159D4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x1015AC8", Offset = "0x1015AC8", VA = "0x1015AC8")]
		public GenericLayout()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class InputLayoutItem : MonoBehaviour
	{
		[Token(Token = "0x6001776")]
		[Address(RVA = "0x1019220", Offset = "0x1019220", VA = "0x1019220")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x1018FC4", Offset = "0x1018FC4", VA = "0x1018FC4")]
		public InputLayoutItem()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class InteractiveTextField : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerDownHandler
	{
		[Token(Token = "0x20006D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72B64", Offset = "0xB72B64")]
		private sealed class <ResumeBlinkCaret>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InteractiveTextField <>4__this;

			[Token(Token = "0x17000529")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E82")]
				[Address(RVA = "0x101BAB0", Offset = "0x101BAB0", VA = "0x101BAB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E84")]
				[Address(RVA = "0x101BB1C", Offset = "0x101BB1C", VA = "0x101BB1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E7F")]
			[Address(RVA = "0x101B9B4", Offset = "0x101B9B4", VA = "0x101B9B4")]
			[DebuggerHidden]
			public <ResumeBlinkCaret>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6002E80")]
			[Address(RVA = "0x101B9F0", Offset = "0x101B9F0", VA = "0x101B9F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E81")]
			[Address(RVA = "0x101B9F4", Offset = "0x101B9F4", VA = "0x101B9F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E83")]
			[Address(RVA = "0x101BAB8", Offset = "0x101BAB8", VA = "0x101BAB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7965C", Offset = "0xB7965C")]
		[SerializeField]
		private bool _notEmpty;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool _ignoreKeyboardExtension;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool _isPassword;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _minChars;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _maxChars;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Toggle _passwordVisibilityToggle;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _defaultBlinkRate;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine _resumeBlinkCoroutine;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private KeyboardManager _keyboardManager;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputField _inputField;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text _placeholder;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _placeholderText;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LocalizedLabel _placeholderLabel;

		[Token(Token = "0x1700023B")]
		public Keyboard.KeyboardType KeyboardType
		{
			[Token(Token = "0x6001778")]
			[Address(RVA = "0x101A32C", Offset = "0x101A32C", VA = "0x101A32C")]
			get
			{
				return default(Keyboard.KeyboardType);
			}
		}

		[Token(Token = "0x1700023C")]
		public InputField InputField
		{
			[Token(Token = "0x6001779")]
			[Address(RVA = "0x101A354", Offset = "0x101A354", VA = "0x101A354")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		public Text Placeholder
		{
			[Token(Token = "0x600177A")]
			[Address(RVA = "0x101A3FC", Offset = "0x101A3FC", VA = "0x101A3FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		public string Text
		{
			[Token(Token = "0x600177B")]
			[Address(RVA = "0x101A4A8", Offset = "0x101A4A8", VA = "0x101A4A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600177C")]
			[Address(RVA = "0x101A4C4", Offset = "0x101A4C4", VA = "0x101A4C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public bool IsValid
		{
			[Token(Token = "0x600177D")]
			[Address(RVA = "0x101A57C", Offset = "0x101A57C", VA = "0x101A57C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000240")]
		public bool IsKeyboardExtensionAllowed
		{
			[Token(Token = "0x600177E")]
			[Address(RVA = "0x101A644", Offset = "0x101A644", VA = "0x101A644")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x101A654", Offset = "0x101A654", VA = "0x101A654")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x101AB30", Offset = "0x101AB30", VA = "0x101AB30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x101AC4C", Offset = "0x101AC4C", VA = "0x101AC4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x101AD28", Offset = "0x101AD28", VA = "0x101AD28")]
		private void LocaleManager_LocaleChanged(LocaleConfig current, int updateNumber)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x101AD64", Offset = "0x101AD64", VA = "0x101AD64", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x101AEC4", Offset = "0x101AEC4", VA = "0x101AEC4", Slot = "5")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x101B09C", Offset = "0x101B09C", VA = "0x101B09C")]
		public void InputField_OnEndEdit(string text)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x101AEC8", Offset = "0x101AEC8", VA = "0x101AEC8")]
		public void Select()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x101B2C8", Offset = "0x101B2C8", VA = "0x101B2C8")]
		public void AddText(KeyboardKey key)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x101B468", Offset = "0x101B468", VA = "0x101B468")]
		public void AddText(string text)
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x101B5A4", Offset = "0x101B5A4", VA = "0x101B5A4")]
		public void RemoveChar()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x101A93C", Offset = "0x101A93C", VA = "0x101A93C")]
		public void TogglePasswordReveal(bool value)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x101B78C", Offset = "0x101B78C", VA = "0x101B78C")]
		public void HideInput()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x101B7D0", Offset = "0x101B7D0", VA = "0x101B7D0")]
		public void ShiftFocus(int shiftValue)
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x101B940", Offset = "0x101B940", VA = "0x101B940")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB881D4", Offset = "0xB881D4")]
		private IEnumerator ResumeBlinkCaret()
		{
			return null;
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x101B9E0", Offset = "0x101B9E0", VA = "0x101B9E0")]
		public InteractiveTextField()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class LanguageSelector : MonoBehaviour
	{
		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB796F8", Offset = "0xB796F8")]
		[SerializeField]
		private HorizontalLayoutGroup _layout;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LanguageSelectorItem _prefab;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<LanguageSelectorItem> _items;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _selectedIndex;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SwitchButtonsPanel _buttonsPanel;

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x101E988", Offset = "0x101E988", VA = "0x101E988")]
		private void Start()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x101E98C", Offset = "0x101E98C", VA = "0x101E98C")]
		public void SetLocales()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x101EDF4", Offset = "0x101EDF4", VA = "0x101EDF4")]
		private void LanguageSelectorItem_Selected(Button button, AttentionLab.Localization.Locale locale)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x101EE84", Offset = "0x101EE84", VA = "0x101EE84")]
		public LanguageSelector()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class LanguageSelectorItem : MonoBehaviour
	{
		[Token(Token = "0x20006D8")]
		public delegate void OnSelected(Button button, AttentionLab.Localization.Locale locale);

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB79764", Offset = "0xB79764")]
		[SerializeField]
		private ThemedLabel _label;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnSelected Selected;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB797C0", Offset = "0xB797C0")]
		private AttentionLab.Localization.Locale <Locale>k__BackingField;

		[Token(Token = "0x17000241")]
		public AttentionLab.Localization.Locale Locale
		{
			[Token(Token = "0x6001793")]
			[Address(RVA = "0x101EE94", Offset = "0x101EE94", VA = "0x101EE94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88238", Offset = "0xB88238")]
			get
			{
				return default(AttentionLab.Localization.Locale);
			}
			[Token(Token = "0x6001794")]
			[Address(RVA = "0x101EE9C", Offset = "0x101EE9C", VA = "0x101EE9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88248", Offset = "0xB88248")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public string Label
		{
			[Token(Token = "0x6001795")]
			[Address(RVA = "0x101EEA4", Offset = "0x101EEA4", VA = "0x101EEA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001796")]
			[Address(RVA = "0x101ED50", Offset = "0x101ED50", VA = "0x101ED50")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public Button Button
		{
			[Token(Token = "0x6001797")]
			[Address(RVA = "0x101EED8", Offset = "0x101EED8", VA = "0x101EED8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x101EDA4", Offset = "0x101EDA4", VA = "0x101EDA4")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x101EDD8", Offset = "0x101EDD8", VA = "0x101EDD8")]
		public void UI_Button_Click()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x101F2C0", Offset = "0x101F2C0", VA = "0x101F2C0")]
		public LanguageSelectorItem()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class MoodValuePieChart : ValuePieChart
	{
		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Image _moodIcon;

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x1022BC4", Offset = "0x1022BC4", VA = "0x1022BC4", Slot = "4")]
		public override void SetValue(string value, float percentage)
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x1022E24", Offset = "0x1022E24", VA = "0x1022E24", Slot = "5")]
		protected override void SetModeValue()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x1023020", Offset = "0x1023020", VA = "0x1023020")]
		public MoodValuePieChart()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class SleepValuePieChart : ValuePieChart
	{
		[Token(Token = "0x600179E")]
		[Address(RVA = "0x11261F0", Offset = "0x11261F0", VA = "0x11261F0", Slot = "4")]
		public override void SetValue(string value, float percentage)
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x1126304", Offset = "0x1126304", VA = "0x1126304", Slot = "5")]
		protected override void SetModeValue()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x1126420", Offset = "0x1126420", VA = "0x1126420")]
		public SleepValuePieChart()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	[ExecuteInEditMode]
	public class UIBackgroundSelector : MonoBehaviour
	{
		[Token(Token = "0x20006D9")]
		public enum BackgroundType
		{
			[Token(Token = "0x40029C0")]
			Full,
			[Token(Token = "0x40029C1")]
			Short,
			[Token(Token = "0x40029C2")]
			ShortWithHeader,
			[Token(Token = "0x40029C3")]
			Dialog,
			[Token(Token = "0x40029C4")]
			Half,
			[Token(Token = "0x40029C5")]
			MenuBackground,
			[Token(Token = "0x40029C6")]
			MenuOutline
		}

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BackgroundType _backgroundType;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _backgroundImage;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _headerTitle;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB79810", Offset = "0xB79810")]
		[SerializeField]
		private Vector2 _fullHexTiling;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7985C", Offset = "0xB7985C")]
		[SerializeField]
		private Vector2 _shortHexTiling;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB798A8", Offset = "0xB798A8")]
		[SerializeField]
		private Vector2 _headerHexTiling;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB798F4", Offset = "0xB798F4")]
		[SerializeField]
		private Vector2 _dialogHexTiling;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB79940", Offset = "0xB79940")]
		[SerializeField]
		private Vector2 _halfHexTiling;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7998C", Offset = "0xB7998C")]
		[SerializeField]
		private Vector2 _menuBackgroundHexTiling;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB799D8", Offset = "0xB799D8")]
		[SerializeField]
		private Vector2 _menuOutlineHexTiling;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BackgroundType _previousBackgroundType;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool _materialInstantiated;

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x112F648", Offset = "0x112F648", VA = "0x112F648")]
		private void Start()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x112FCDC", Offset = "0x112FCDC", VA = "0x112FCDC")]
		private void Update()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x112F654", Offset = "0x112F654", VA = "0x112F654")]
		private void ApplyBackgroundVisuals()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x112FCF8", Offset = "0x112FCF8", VA = "0x112FCF8")]
		public UIBackgroundSelector()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class UIButton : UIElement
	{
		[Token(Token = "0x20006DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72B74", Offset = "0xB72B74")]
		private sealed class <AnimateClick_Coroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIButton <>4__this;

			[Token(Token = "0x40029CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x1700052B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E8C")]
				[Address(RVA = "0x1130F98", Offset = "0x1130F98", VA = "0x1130F98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E8E")]
				[Address(RVA = "0x1131004", Offset = "0x1131004", VA = "0x1131004", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E89")]
			[Address(RVA = "0x1130D44", Offset = "0x1130D44", VA = "0x1130D44")]
			[DebuggerHidden]
			public <AnimateClick_Coroutine>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6002E8A")]
			[Address(RVA = "0x1130E34", Offset = "0x1130E34", VA = "0x1130E34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E8B")]
			[Address(RVA = "0x1130E38", Offset = "0x1130E38", VA = "0x1130E38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E8D")]
			[Address(RVA = "0x1130FA0", Offset = "0x1130FA0", VA = "0x1130FA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72B84", Offset = "0xB72B84")]
		private sealed class <OnHoverEnter_Coroutine>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIButton <>4__this;

			[Token(Token = "0x40029CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <totalTime>5__2;

			[Token(Token = "0x40029CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x1700052D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E92")]
				[Address(RVA = "0x113123C", Offset = "0x113123C", VA = "0x113123C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E94")]
				[Address(RVA = "0x11312A8", Offset = "0x11312A8", VA = "0x11312A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E8F")]
			[Address(RVA = "0x1130DC4", Offset = "0x1130DC4", VA = "0x1130DC4")]
			[DebuggerHidden]
			public <OnHoverEnter_Coroutine>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6002E90")]
			[Address(RVA = "0x113100C", Offset = "0x113100C", VA = "0x113100C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E91")]
			[Address(RVA = "0x1131010", Offset = "0x1131010", VA = "0x1131010", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E93")]
			[Address(RVA = "0x1131244", Offset = "0x1131244", VA = "0x1131244", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72B94", Offset = "0xB72B94")]
		private sealed class <OnHoverExit_Coroutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIButton <>4__this;

			[Token(Token = "0x40029D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <totalTime>5__2;

			[Token(Token = "0x40029D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x1700052F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E98")]
				[Address(RVA = "0x11314D8", Offset = "0x11314D8", VA = "0x11314D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000530")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E9A")]
				[Address(RVA = "0x1131544", Offset = "0x1131544", VA = "0x1131544", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E95")]
			[Address(RVA = "0x1130DF0", Offset = "0x1130DF0", VA = "0x1130DF0")]
			[DebuggerHidden]
			public <OnHoverExit_Coroutine>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6002E96")]
			[Address(RVA = "0x11312B0", Offset = "0x11312B0", VA = "0x11312B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E97")]
			[Address(RVA = "0x11312B4", Offset = "0x11312B4", VA = "0x11312B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E99")]
			[Address(RVA = "0x11314E0", Offset = "0x11314E0", VA = "0x11314E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB79A24", Offset = "0xB79A24")]
		[SerializeField]
		private Text _label;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _hoverEffectTotalTime;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve _clickAnimation;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _clickAnimationTotalTime;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Button _button;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Image _image;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ThemedColorBlock _labelColorBlock;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79AA0", Offset = "0xB79AA0")]
		private bool <IsHovered>k__BackingField;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _selected;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool _isHovered;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		private bool _previousInteractable;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private AudioAssets.UI _hoverSound;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioAssets.UI _clickedSound;

		[Token(Token = "0x17000244")]
		public Button Component
		{
			[Token(Token = "0x60017A5")]
			[Address(RVA = "0x112FD00", Offset = "0x112FD00", VA = "0x112FD00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000245")]
		public bool IsHovered
		{
			[Token(Token = "0x60017A6")]
			[Address(RVA = "0x112FD08", Offset = "0x112FD08", VA = "0x112FD08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88258", Offset = "0xB88258")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017A7")]
			[Address(RVA = "0x112FD10", Offset = "0x112FD10", VA = "0x112FD10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88268", Offset = "0xB88268")]
			private set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public bool IsSelected
		{
			[Token(Token = "0x60017A8")]
			[Address(RVA = "0x112FD1C", Offset = "0x112FD1C", VA = "0x112FD1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017A9")]
			[Address(RVA = "0x112FD24", Offset = "0x112FD24", VA = "0x112FD24")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public bool IsEnabled
		{
			[Token(Token = "0x60017AA")]
			[Address(RVA = "0x112FE2C", Offset = "0x112FE2C", VA = "0x112FE2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x112FE50", Offset = "0x112FE50", VA = "0x112FE50")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x112FF78", Offset = "0x112FF78", VA = "0x112FF78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x11300B8", Offset = "0x11300B8", VA = "0x11300B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x1130368", Offset = "0x1130368", VA = "0x1130368")]
		private void Update()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x113049C", Offset = "0x113049C", VA = "0x113049C", Slot = "8")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x113084C", Offset = "0x113084C", VA = "0x113084C", Slot = "9")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x1130AB4", Offset = "0x1130AB4", VA = "0x1130AB4")]
		private void OnClick()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x11302F4", Offset = "0x11302F4", VA = "0x11302F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88278", Offset = "0xB88278")]
		private IEnumerator AnimateClick_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x112F414", Offset = "0x112F414", VA = "0x112F414")]
		public void SetColors(ColorStyleType firstColorStyle, float firstColorAlpha, ColorStyleType secondColorStyle, float secondColorAlpha, ThemedColorBlock labelColorBlock)
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x1130D70", Offset = "0x1130D70", VA = "0x1130D70")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x1130DA4", Offset = "0x1130DA4", VA = "0x1130DA4", Slot = "12")]
		public override void EnableInteraction(bool enable)
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x11303D4", Offset = "0x11303D4", VA = "0x11303D4")]
		private void ChangeLabelEnabledVisuals(bool enable)
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x1130770", Offset = "0x1130770", VA = "0x1130770")]
		private void ChangeLabelColor(ColorStyleType colorType, float alpha)
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x113020C", Offset = "0x113020C", VA = "0x113020C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB882DC", Offset = "0xB882DC")]
		private IEnumerator OnHoverEnter_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x1130280", Offset = "0x1130280", VA = "0x1130280")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88340", Offset = "0xB88340")]
		private IEnumerator OnHoverExit_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x1130E1C", Offset = "0x1130E1C", VA = "0x1130E1C")]
		public UIButton()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class UIElement : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler
	{
		[Token(Token = "0x20006DD")]
		public delegate void OnHovered(UIElement sender, bool hovered);

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OnHovered Hovered;

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x1130754", Offset = "0x1130754", VA = "0x1130754", Slot = "8")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x1130A98", Offset = "0x1130A98", VA = "0x1130A98", Slot = "9")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x113192C", Offset = "0x113192C", VA = "0x113192C", Slot = "10")]
		public virtual void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x1131930", Offset = "0x1131930", VA = "0x1131930", Slot = "11")]
		public virtual void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x1131934", Offset = "0x1131934", VA = "0x1131934", Slot = "12")]
		public virtual void EnableInteraction(bool enable)
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x1130E2C", Offset = "0x1130E2C", VA = "0x1130E2C")]
		public UIElement()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class UIKeyboardButton : UIElement
	{
		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB79AD0", Offset = "0xB79AD0")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _icon;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text _label;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79B3C", Offset = "0xB79B3C")]
		private bool <IsHovered>k__BackingField;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _selected;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool _lastInteractableValue;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ThemedColorBlock _labelColorBlock;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ThemedColorBlock _iconColorBlock;

		[Token(Token = "0x17000248")]
		[HideInInspector]
		public ThemedColorBlock LabelColorBlock
		{
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0x11319F4", Offset = "0x11319F4", VA = "0x11319F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017C2")]
			[Address(RVA = "0x112E8A0", Offset = "0x112E8A0", VA = "0x112E8A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public ThemedColorBlock IconColorBlock
		{
			[Token(Token = "0x60017C3")]
			[Address(RVA = "0x11319FC", Offset = "0x11319FC", VA = "0x11319FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017C4")]
			[Address(RVA = "0x112E8F0", Offset = "0x112E8F0", VA = "0x112E8F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public Button Component
		{
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0x1131A04", Offset = "0x1131A04", VA = "0x1131A04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		public Sprite Icon
		{
			[Token(Token = "0x60017C6")]
			[Address(RVA = "0x1131A0C", Offset = "0x1131A0C", VA = "0x1131A0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0x1131A2C", Offset = "0x1131A2C", VA = "0x1131A2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public string Label
		{
			[Token(Token = "0x60017C8")]
			[Address(RVA = "0x1131AF0", Offset = "0x1131AF0", VA = "0x1131AF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017C9")]
			[Address(RVA = "0x1131B14", Offset = "0x1131B14", VA = "0x1131B14")]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public bool IsHovered
		{
			[Token(Token = "0x60017CA")]
			[Address(RVA = "0x1131B90", Offset = "0x1131B90", VA = "0x1131B90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB883A4", Offset = "0xB883A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017CB")]
			[Address(RVA = "0x1131B98", Offset = "0x1131B98", VA = "0x1131B98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB883B4", Offset = "0xB883B4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public bool IsSelected
		{
			[Token(Token = "0x60017CC")]
			[Address(RVA = "0x1131BA4", Offset = "0x1131BA4", VA = "0x1131BA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017CD")]
			[Address(RVA = "0x1131BAC", Offset = "0x1131BAC", VA = "0x1131BAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public bool IsEnabled
		{
			[Token(Token = "0x60017CE")]
			[Address(RVA = "0x1131CB4", Offset = "0x1131CB4", VA = "0x1131CB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x1131CD8", Offset = "0x1131CD8", VA = "0x1131CD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x1131D08", Offset = "0x1131D08", VA = "0x1131D08")]
		private void Update()
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x1131FC0", Offset = "0x1131FC0", VA = "0x1131FC0", Slot = "8")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x11321B0", Offset = "0x11321B0", VA = "0x11321B0", Slot = "9")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x11323A0", Offset = "0x11323A0", VA = "0x11323A0", Slot = "10")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x113257C", Offset = "0x113257C", VA = "0x113257C", Slot = "11")]
		public override void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x1132758", Offset = "0x1132758", VA = "0x1132758")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x113278C", Offset = "0x113278C", VA = "0x113278C", Slot = "12")]
		public override void EnableInteraction(bool enable)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x1131D50", Offset = "0x1131D50", VA = "0x1131D50")]
		private void ChangeElementsToDisabledColor(bool enable)
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x11327CC", Offset = "0x11327CC", VA = "0x11327CC")]
		public UIKeyboardButton()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class UILabelButton : UIElement
	{
		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB79B4C", Offset = "0xB79B4C")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _label;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextStyleType _defaultTextStyle;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private TextStyleType _hoverTextStyle;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextStyleType _pressedTextStyle;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private TextStyleType _selectedTextStyle;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextStyleType _disabledTextStyle;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool _forceBold;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[SerializeField]
		private bool _underline;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioAssets.UI _hoverSFX;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private AudioAssets.UI _clickedSFX;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79C38", Offset = "0xB79C38")]
		private bool <IsHovered>k__BackingField;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _selected;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool _interacting;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		private bool _interactable;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Underline _underlineComponent;

		[Token(Token = "0x17000250")]
		public string Label
		{
			[Token(Token = "0x60017D9")]
			[Address(RVA = "0x11327D4", Offset = "0x11327D4", VA = "0x11327D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017DA")]
			[Address(RVA = "0x11327F8", Offset = "0x11327F8", VA = "0x11327F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public bool IsHovered
		{
			[Token(Token = "0x60017DB")]
			[Address(RVA = "0x1132874", Offset = "0x1132874", VA = "0x1132874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB883C4", Offset = "0xB883C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017DC")]
			[Address(RVA = "0x113287C", Offset = "0x113287C", VA = "0x113287C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB883D4", Offset = "0xB883D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public bool IsSelected
		{
			[Token(Token = "0x60017DD")]
			[Address(RVA = "0x1132888", Offset = "0x1132888", VA = "0x1132888")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017DE")]
			[Address(RVA = "0x1132890", Offset = "0x1132890", VA = "0x1132890")]
			set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public bool IsEnabled
		{
			[Token(Token = "0x60017DF")]
			[Address(RVA = "0x1132A30", Offset = "0x1132A30", VA = "0x1132A30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x1132A54", Offset = "0x1132A54", VA = "0x1132A54")]
		private void Start()
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x1132AF0", Offset = "0x1132AF0", VA = "0x1132AF0")]
		private void Update()
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x1132C48", Offset = "0x1132C48", VA = "0x1132C48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x1132D00", Offset = "0x1132D00", VA = "0x1132D00")]
		private void OnClick()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x1132EC0", Offset = "0x1132EC0", VA = "0x1132EC0", Slot = "8")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x113311C", Offset = "0x113311C", VA = "0x113311C", Slot = "9")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x1133260", Offset = "0x1133260", VA = "0x1133260", Slot = "10")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x11333A0", Offset = "0x11333A0", VA = "0x11333A0", Slot = "11")]
		public override void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x11333B4", Offset = "0x11333B4", VA = "0x11333B4")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x11333D4", Offset = "0x11333D4", VA = "0x11333D4")]
		public void Click()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x1132934", Offset = "0x1132934", VA = "0x1132934")]
		private void ApplyTextStyle(TextStyleType styleType)
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x1133400", Offset = "0x1133400", VA = "0x1133400")]
		private bool IsBoldFont(Font font)
		{
			return default(bool);
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x11334CC", Offset = "0x11334CC", VA = "0x11334CC")]
		public UILabelButton()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class UINavigationButton : UIElement
	{
		[Token(Token = "0x20006DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72BA4", Offset = "0xB72BA4")]
		private sealed class <OnHoverEnter_Coroutine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UINavigationButton <>4__this;

			[Token(Token = "0x40029D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <totalTime>5__2;

			[Token(Token = "0x40029D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x17000531")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EA2")]
				[Address(RVA = "0xD2672C", Offset = "0xD2672C", VA = "0xD2672C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000532")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EA4")]
				[Address(RVA = "0xD26798", Offset = "0xD26798", VA = "0xD26798", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E9F")]
			[Address(RVA = "0xD264D0", Offset = "0xD264D0", VA = "0xD264D0")]
			[DebuggerHidden]
			public <OnHoverEnter_Coroutine>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6002EA0")]
			[Address(RVA = "0xD264FC", Offset = "0xD264FC", VA = "0xD264FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EA1")]
			[Address(RVA = "0xD26500", Offset = "0xD26500", VA = "0xD26500", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EA3")]
			[Address(RVA = "0xD26734", Offset = "0xD26734", VA = "0xD26734", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72BB4", Offset = "0xB72BB4")]
		private sealed class <OnHoverExit_Coroutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UINavigationButton <>4__this;

			[Token(Token = "0x40029DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <totalTime>5__2;

			[Token(Token = "0x40029DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x17000533")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EA8")]
				[Address(RVA = "0xD269F4", Offset = "0xD269F4", VA = "0xD269F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000534")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EAA")]
				[Address(RVA = "0xD26A60", Offset = "0xD26A60", VA = "0xD26A60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EA5")]
			[Address(RVA = "0xD267A0", Offset = "0xD267A0", VA = "0xD267A0")]
			[DebuggerHidden]
			public <OnHoverExit_Coroutine>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6002EA6")]
			[Address(RVA = "0xD267CC", Offset = "0xD267CC", VA = "0xD267CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EA7")]
			[Address(RVA = "0xD267D0", Offset = "0xD267D0", VA = "0xD267D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EA9")]
			[Address(RVA = "0xD269FC", Offset = "0xD269FC", VA = "0xD269FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB79C48", Offset = "0xB79C48")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _buttonImage;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image _icon;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _hoverEffectTotalTime;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool _isHovered;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79CC4", Offset = "0xB79CC4")]
		private bool <IsHovered>k__BackingField;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		private bool _selected;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ThemedColorBlock _iconColorBlock;

		[Token(Token = "0x17000254")]
		[HideInInspector]
		public ThemedColorBlock IconColorBlock
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0x1134C20", Offset = "0x1134C20", VA = "0x1134C20")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x112ED84", Offset = "0x112ED84", VA = "0x112ED84")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public Button Component
		{
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0x1134C28", Offset = "0x1134C28", VA = "0x1134C28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		public Sprite Icon
		{
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0x1134C30", Offset = "0x1134C30", VA = "0x1134C30")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0x1134C50", Offset = "0x1134C50", VA = "0x1134C50")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public bool IsHovered
		{
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0x1134D14", Offset = "0x1134D14", VA = "0x1134D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB883E4", Offset = "0xB883E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0x1134D1C", Offset = "0x1134D1C", VA = "0x1134D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB883F4", Offset = "0xB883F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public bool IsSelected
		{
			[Token(Token = "0x60017F4")]
			[Address(RVA = "0x1134D28", Offset = "0x1134D28", VA = "0x1134D28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017F5")]
			[Address(RVA = "0x1134D30", Offset = "0x1134D30", VA = "0x1134D30")]
			set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public bool IsEnabled
		{
			[Token(Token = "0x60017F6")]
			[Address(RVA = "0x1134E38", Offset = "0x1134E38", VA = "0x1134E38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x1134E5C", Offset = "0x1134E5C", VA = "0x1134E5C")]
		private void Start()
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x1134F48", Offset = "0x1134F48", VA = "0x1134F48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x1135060", Offset = "0x1135060", VA = "0x1135060")]
		private void OnClick()
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x11351C8", Offset = "0x11351C8", VA = "0x11351C8", Slot = "8")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x113559C", Offset = "0x113559C", VA = "0x113559C", Slot = "9")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x113582C", Offset = "0x113582C", VA = "0x113582C", Slot = "10")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x113596C", Offset = "0x113596C", VA = "0x113596C", Slot = "11")]
		public override void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x1135AAC", Offset = "0x1135AAC", VA = "0x1135AAC")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x1135AE0", Offset = "0x1135AE0", VA = "0x1135AE0", Slot = "12")]
		public override void EnableInteraction(bool enable)
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x1135B40", Offset = "0x1135B40", VA = "0x1135B40")]
		private void ChangeIconToDisabledColor(bool enable)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x1135528", Offset = "0x1135528", VA = "0x1135528")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88404", Offset = "0xB88404")]
		private IEnumerator OnHoverEnter_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x11354B4", Offset = "0x11354B4", VA = "0x11354B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88468", Offset = "0xB88468")]
		private IEnumerator OnHoverExit_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x1135CB0", Offset = "0x1135CB0", VA = "0x1135CB0")]
		public UINavigationButton()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class UIProgressBar : MonoBehaviour
	{
		[Token(Token = "0x20006E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72BC4", Offset = "0xB72BC4")]
		private sealed class <AnimateFill_Coroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIProgressBar <>4__this;

			[Token(Token = "0x40029E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float finalFill;

			[Token(Token = "0x40029E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <initialFill>5__2;

			[Token(Token = "0x40029E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <totalTime>5__3;

			[Token(Token = "0x40029E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timer>5__4;

			[Token(Token = "0x17000535")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EAE")]
				[Address(RVA = "0xD29438", Offset = "0xD29438", VA = "0xD29438", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000536")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EB0")]
				[Address(RVA = "0xD294A4", Offset = "0xD294A4", VA = "0xD294A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EAB")]
			[Address(RVA = "0xD29170", Offset = "0xD29170", VA = "0xD29170")]
			[DebuggerHidden]
			public <AnimateFill_Coroutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002EAC")]
			[Address(RVA = "0xD29254", Offset = "0xD29254", VA = "0xD29254", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EAD")]
			[Address(RVA = "0xD29258", Offset = "0xD29258", VA = "0xD29258", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EAF")]
			[Address(RVA = "0xD29440", Offset = "0xD29440", VA = "0xD29440", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image _barImage;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected float _fullFillDuration;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine _fillCoroutine;

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xD29008", Offset = "0xD29008", VA = "0xD29008")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xD2907C", Offset = "0xD2907C", VA = "0xD2907C")]
		public void SetFill(float amount)
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xD290EC", Offset = "0xD290EC", VA = "0xD290EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB884CC", Offset = "0xB884CC")]
		protected IEnumerator AnimateFill_Coroutine(float finalFill)
		{
			return null;
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xD2919C", Offset = "0xD2919C", VA = "0xD2919C")]
		public void SendToFront()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xD291E0", Offset = "0xD291E0", VA = "0xD291E0")]
		public void StayBehind(int currentSiblingIndex)
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xD2924C", Offset = "0xD2924C", VA = "0xD2924C")]
		public UIProgressBar()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class UIScrollButton : UIElement
	{
		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB79CF4", Offset = "0xB79CF4")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _icon;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _scrollbar;

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xD294AC", Offset = "0xD294AC", VA = "0xD294AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xD29588", Offset = "0xD29588", VA = "0xD29588")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xD29598", Offset = "0xD29598", VA = "0xD29598")]
		private void Update()
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xD29638", Offset = "0xD29638", VA = "0xD29638", Slot = "8")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xD297F4", Offset = "0xD297F4", VA = "0xD297F4", Slot = "9")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xD298A8", Offset = "0xD298A8", VA = "0xD298A8", Slot = "12")]
		public override void EnableInteraction(bool enable)
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xD298E8", Offset = "0xD298E8", VA = "0xD298E8")]
		private void ChangeIconToDisabledColor(bool enable)
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xD299BC", Offset = "0xD299BC", VA = "0xD299BC")]
		public UIScrollButton()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class ValuePieChart : MonoBehaviour
	{
		[Token(Token = "0x20006E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72BD4", Offset = "0xB72BD4")]
		private sealed class <AnimateFill_Coroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValuePieChart <>4__this;

			[Token(Token = "0x40029E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <percentageIndexTarget>5__2;

			[Token(Token = "0x40029EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timer>5__3;

			[Token(Token = "0x17000537")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EB4")]
				[Address(RVA = "0xD2EC1C", Offset = "0xD2EC1C", VA = "0xD2EC1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000538")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EB6")]
				[Address(RVA = "0xD2EC88", Offset = "0xD2EC88", VA = "0xD2EC88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EB1")]
			[Address(RVA = "0xD2E77C", Offset = "0xD2E77C", VA = "0xD2E77C")]
			[DebuggerHidden]
			public <AnimateFill_Coroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002EB2")]
			[Address(RVA = "0xD2E840", Offset = "0xD2E840", VA = "0xD2E840", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EB3")]
			[Address(RVA = "0xD2E844", Offset = "0xD2E844", VA = "0xD2E844", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EB5")]
			[Address(RVA = "0xD2EC24", Offset = "0xD2EC24", VA = "0xD2EC24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Text _modeValue;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected float _fullFillDuration;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<string, float> _entries;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<float> _animationPercentages;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Image _pieChartGraphic;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Coroutine _fillCoroutine;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected HoverHandler _hover;

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xD2DEE0", Offset = "0xD2DEE0", VA = "0xD2DEE0")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xD2DFB8", Offset = "0xD2DFB8", VA = "0xD2DFB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xD2E028", Offset = "0xD2E028", VA = "0xD2E028")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xD2E0F4", Offset = "0xD2E0F4", VA = "0xD2E0F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xD2E194", Offset = "0xD2E194", VA = "0xD2E194")]
		public void ShowMock()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xD2E4B4", Offset = "0xD2E4B4", VA = "0xD2E4B4", Slot = "4")]
		public virtual void SetValue(string value, float percentage)
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xD2E5FC", Offset = "0xD2E5FC", VA = "0xD2E5FC", Slot = "5")]
		protected virtual void SetModeValue()
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xD2E3AC", Offset = "0xD2E3AC", VA = "0xD2E3AC")]
		public void Animate(int numberOfValues)
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xD2E120", Offset = "0xD2E120", VA = "0xD2E120")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88530", Offset = "0xB88530")]
		protected IEnumerator AnimateFill_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xD2E738", Offset = "0xD2E738", VA = "0xD2E738")]
		private void RefreshImage()
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xD2E7A8", Offset = "0xD2E7A8", VA = "0xD2E7A8")]
		public ValuePieChart()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class ValueProgression : MonoBehaviour
	{
		[Token(Token = "0x20006E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72BE4", Offset = "0xB72BE4")]
		private sealed class <AnimateFill_Coroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int finalValue;

			[Token(Token = "0x40029EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ValueProgression <>4__this;

			[Token(Token = "0x40029EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <totalTime>5__2;

			[Token(Token = "0x40029F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <initialValue>5__3;

			[Token(Token = "0x40029F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <timer>5__4;

			[Token(Token = "0x17000539")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EBA")]
				[Address(RVA = "0xD2EFE4", Offset = "0xD2EFE4", VA = "0xD2EFE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EBC")]
				[Address(RVA = "0xD2F050", Offset = "0xD2F050", VA = "0xD2F050", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EB7")]
			[Address(RVA = "0xD2ED6C", Offset = "0xD2ED6C", VA = "0xD2ED6C")]
			[DebuggerHidden]
			public <AnimateFill_Coroutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002EB8")]
			[Address(RVA = "0xD2EE04", Offset = "0xD2EE04", VA = "0xD2EE04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EB9")]
			[Address(RVA = "0xD2EE08", Offset = "0xD2EE08", VA = "0xD2EE08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EBB")]
			[Address(RVA = "0xD2EFEC", Offset = "0xD2EFEC", VA = "0xD2EFEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _value;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _fillDurationFor100;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _currentValue;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine _fillCoroutine;

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xD2EC90", Offset = "0xD2EC90", VA = "0xD2EC90")]
		public void SetValue(int value)
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xD2ECE8", Offset = "0xD2ECE8", VA = "0xD2ECE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88594", Offset = "0xB88594")]
		private IEnumerator AnimateFill_Coroutine(int finalValue)
		{
			return null;
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xD2ED98", Offset = "0xD2ED98", VA = "0xD2ED98")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xD2EDFC", Offset = "0xD2EDFC", VA = "0xD2EDFC")]
		public ValueProgression()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class ValueProgressionCircle : MonoBehaviour
	{
		[Token(Token = "0x20006E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72BF4", Offset = "0xB72BF4")]
		private sealed class <AnimateFill_Coroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float finalFill;

			[Token(Token = "0x40029F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ValueProgressionCircle <>4__this;

			[Token(Token = "0x40029F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int finalValue;

			[Token(Token = "0x40029F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <totalTime>5__2;

			[Token(Token = "0x40029F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <initialValue>5__3;

			[Token(Token = "0x40029F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <initialFill>5__4;

			[Token(Token = "0x40029FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <timer>5__5;

			[Token(Token = "0x1700053B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EC0")]
				[Address(RVA = "0xD2F994", Offset = "0xD2F994", VA = "0xD2F994", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EC2")]
				[Address(RVA = "0xD2FA00", Offset = "0xD2FA00", VA = "0xD2FA00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EBD")]
			[Address(RVA = "0xD2F3EC", Offset = "0xD2F3EC", VA = "0xD2F3EC")]
			[DebuggerHidden]
			public <AnimateFill_Coroutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002EBE")]
			[Address(RVA = "0xD2F578", Offset = "0xD2F578", VA = "0xD2F578", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EBF")]
			[Address(RVA = "0xD2F57C", Offset = "0xD2F57C", VA = "0xD2F57C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EC1")]
			[Address(RVA = "0xD2F99C", Offset = "0xD2F99C", VA = "0xD2F99C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Text _value;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected float _fullFillDuration;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Image _circleProgressionBar;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float _currentValue;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Material _circleProgressionBarMaterial;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Coroutine _fillCoroutine;

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xD2F058", Offset = "0xD2F058", VA = "0xD2F058", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xD2F198", Offset = "0xD2F198", VA = "0xD2F198")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xD2F224", Offset = "0xD2F224", VA = "0xD2F224", Slot = "5")]
		public virtual void SetValue(int value, int maxValue, bool startEmpty = false)
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xD2F358", Offset = "0xD2F358", VA = "0xD2F358")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB885F8", Offset = "0xB885F8")]
		protected IEnumerator AnimateFill_Coroutine(float finalFill, int finalValue)
		{
			return null;
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xD2F154", Offset = "0xD2F154", VA = "0xD2F154")]
		private void RefreshImage()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xD2F418", Offset = "0xD2F418", VA = "0xD2F418")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xD2F4C4", Offset = "0xD2F4C4", VA = "0xD2F4C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xD2F570", Offset = "0xD2F570", VA = "0xD2F570")]
		public ValueProgressionCircle()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class WODProgressBar : MonoBehaviour
	{
		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image _firstGameImage;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _secondGameImage;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _thirdGameImage;

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xD2FA08", Offset = "0xD2FA08", VA = "0xD2FA08")]
		public void Setup(int currentGameIndex)
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xD2FA0C", Offset = "0xD2FA0C", VA = "0xD2FA0C")]
		public WODProgressBar()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class HoverHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _hover;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _message;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isEnabled;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RectTransform _hoverRectTransform;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioAssets.UI _hoverSound;

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x10182BC", Offset = "0x10182BC", VA = "0x10182BC")]
		public void Start()
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x1018340", Offset = "0x1018340", VA = "0x1018340")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x1018360", Offset = "0x1018360", VA = "0x1018360", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x1018568", Offset = "0x1018568", VA = "0x1018568", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x1018594", Offset = "0x1018594", VA = "0x1018594")]
		public void SetMessageText(string text)
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x10185B8", Offset = "0x10185B8", VA = "0x10185B8")]
		public void ClearMessageText()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x101861C", Offset = "0x101861C", VA = "0x101861C")]
		public void AddToMessageText(string text)
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x101867C", Offset = "0x101867C", VA = "0x101867C")]
		public void Enable()
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x1018688", Offset = "0x1018688", VA = "0x1018688")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x10186B0", Offset = "0x10186B0", VA = "0x10186B0")]
		public HoverHandler()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class ImageToggle : MonoBehaviour
	{
		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Sprite _firstSprite;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite _secondSprite;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB79E40", Offset = "0xB79E40")]
		[SerializeField]
		private int _startingSpriteIndex;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Image _image;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _currentSpriteIndex;

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x10186C0", Offset = "0x10186C0", VA = "0x10186C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x1018718", Offset = "0x1018718", VA = "0x1018718")]
		private void Start()
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x1018768", Offset = "0x1018768", VA = "0x1018768")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x10187D0", Offset = "0x10187D0", VA = "0x10187D0")]
		public ImageToggle()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class ParallaxEffect : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x20006E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72C04", Offset = "0xB72C04")]
		private sealed class <OnPointerHover>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ParallaxEffect <>4__this;

			[Token(Token = "0x40029FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <currentPositionX>5__2;

			[Token(Token = "0x40029FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <currentPositionY>5__3;

			[Token(Token = "0x1700053D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EC6")]
				[Address(RVA = "0x10265C8", Offset = "0x10265C8", VA = "0x10265C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EC8")]
				[Address(RVA = "0x1026634", Offset = "0x1026634", VA = "0x1026634", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EC3")]
			[Address(RVA = "0x10260FC", Offset = "0x10260FC", VA = "0x10260FC")]
			[DebuggerHidden]
			public <OnPointerHover>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002EC4")]
			[Address(RVA = "0x1026144", Offset = "0x1026144", VA = "0x1026144", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EC5")]
			[Address(RVA = "0x1026148", Offset = "0x1026148", VA = "0x1026148", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EC7")]
			[Address(RVA = "0x10265D0", Offset = "0x10265D0", VA = "0x10265D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _hoverSpeed;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _offsetXFactor;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _offsetYFactor;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Graphic _image;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 _rectTransformHalf;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isHovered;

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x1025D6C", Offset = "0x1025D6C", VA = "0x1025D6C")]
		private void Start()
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x1025E84", Offset = "0x1025E84", VA = "0x1025E84")]
		private void Update()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x1025F2C", Offset = "0x1025F2C", VA = "0x1025F2C", Slot = "6")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x102605C", Offset = "0x102605C", VA = "0x102605C", Slot = "7")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x1025FE8", Offset = "0x1025FE8", VA = "0x1025FE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8865C", Offset = "0xB8865C")]
		public IEnumerator OnPointerHover()
		{
			return null;
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x1026128", Offset = "0x1026128", VA = "0x1026128")]
		public ParallaxEffect()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	[ExecuteInEditMode]
	public class PrefabComponentDisabler : MonoBehaviour
	{
		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MonoBehaviour[] _componentsToDisable;

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x111DE1C", Offset = "0x111DE1C", VA = "0x111DE1C")]
		public PrefabComponentDisabler()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class ScrollBarButtonHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UIScrollButton _upButton;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UIScrollButton _downButton;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _buttonStep;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ScrollRect _scrollRect;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _scrollContentHeight;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _lastScrollBarValue;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Scrollbar _scrollbar;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _joystickEnabled;

		[Token(Token = "0x1700025A")]
		public bool JoystickEnabled
		{
			[Token(Token = "0x6001840")]
			[Address(RVA = "0x1124B70", Offset = "0x1124B70", VA = "0x1124B70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001841")]
			[Address(RVA = "0x1124B78", Offset = "0x1124B78", VA = "0x1124B78")]
			set
			{
			}
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x1124B84", Offset = "0x1124B84", VA = "0x1124B84")]
		private void Start()
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x1124C98", Offset = "0x1124C98", VA = "0x1124C98")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x1124CA0", Offset = "0x1124CA0", VA = "0x1124CA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x1124F04", Offset = "0x1124F04", VA = "0x1124F04")]
		public void IncrementWithButton()
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x11250D4", Offset = "0x11250D4", VA = "0x11250D4")]
		public void DecrementWithButton()
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x1124E5C", Offset = "0x1124E5C", VA = "0x1124E5C")]
		private void Increment(float step)
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x11252A8", Offset = "0x11252A8", VA = "0x11252A8")]
		public void ScrollValueChanged()
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x11252AC", Offset = "0x11252AC", VA = "0x11252AC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x1125414", Offset = "0x1125414", VA = "0x1125414")]
		public ScrollBarButtonHandler()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class ScrollHoverHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollBarButtonHandler _scrollBarButtonHandler;

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x1125428", Offset = "0x1125428", VA = "0x1125428", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x112554C", Offset = "0x112554C", VA = "0x112554C")]
		public ScrollHoverHandler()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class ChineseKeyboardExtension : MonoBehaviour
	{
		[Token(Token = "0x20006E5")]
		public delegate void OnCharSelected(ChineseKeyboardExtension sender, ZhChar character);

		[Token(Token = "0x20006E6")]
		public delegate void OnExpandPressed(bool value);

		[Token(Token = "0x20006E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72C14", Offset = "0xB72C14")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4002A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public char character;

			[Token(Token = "0x6002ED1")]
			[Address(RVA = "0x105889C", Offset = "0x105889C", VA = "0x105889C")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002ED2")]
			[Address(RVA = "0x1059118", Offset = "0x1059118", VA = "0x1059118")]
			internal bool <UpdateChars>b__0(ZhChar z)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72C24", Offset = "0xB72C24")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4002A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string character;

			[Token(Token = "0x6002ED3")]
			[Address(RVA = "0x1058A9C", Offset = "0x1058A9C", VA = "0x1058A9C")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6002ED4")]
			[Address(RVA = "0x1059140", Offset = "0x1059140", VA = "0x1059140")]
			internal bool <InputLayout_CharSelected>b__0(ZhChar c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB79F10", Offset = "0xB79F10")]
		[SerializeField]
		private InputLayout _layoutHorz;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputLayout _layoutVertAll;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InputLayoutRows _layoutRows;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InputTabBar _tabBar;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public OnCharSelected CharSelected;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public OnExpandPressed ExpandPressed;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<ZhChar> _chars;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _expanded;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string _content;

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x10582C0", Offset = "0x10582C0", VA = "0x10582C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x10583A0", Offset = "0x10583A0", VA = "0x10583A0")]
		private void Start()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x10583D0", Offset = "0x10583D0", VA = "0x10583D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x1058658", Offset = "0x1058658", VA = "0x1058658")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x1058760", Offset = "0x1058760", VA = "0x1058760")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x105883C", Offset = "0x105883C", VA = "0x105883C")]
		public void RemoveChar()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x10583DC", Offset = "0x10583DC", VA = "0x10583DC")]
		private void UpdateChars(string content)
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x10588A4", Offset = "0x10588A4", VA = "0x10588A4")]
		private void SetChars(List<ZhChar> chars)
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x1058980", Offset = "0x1058980", VA = "0x1058980")]
		private void InputLayout_CharSelected(InputLayout sender, string character)
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x105869C", Offset = "0x105869C", VA = "0x105869C")]
		private void Expand(bool expand)
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x10590C8", Offset = "0x10590C8", VA = "0x10590C8")]
		public void UI_ButtonExpand_Click()
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x1059110", Offset = "0x1059110", VA = "0x1059110")]
		public ChineseKeyboardExtension()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class InputChar : InputLayoutItem, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x20006E9")]
		public delegate void OnSelected(InputChar sender, string text);

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB79F9C", Offset = "0xB79F9C")]
		[SerializeField]
		private Text _label;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnSelected Selected;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform _rectTransform;

		[Token(Token = "0x1700025B")]
		public string Label
		{
			[Token(Token = "0x6001859")]
			[Address(RVA = "0x10187D8", Offset = "0x10187D8", VA = "0x10187D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600185A")]
			[Address(RVA = "0x10187FC", Offset = "0x10187FC", VA = "0x10187FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public Vector2 Size
		{
			[Token(Token = "0x600185B")]
			[Address(RVA = "0x1018820", Offset = "0x1018820", VA = "0x1018820")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x10188EC", Offset = "0x10188EC", VA = "0x10188EC")]
		public void Button_Click()
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x1018E5C", Offset = "0x1018E5C", VA = "0x1018E5C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x1018FBC", Offset = "0x1018FBC", VA = "0x1018FBC")]
		public InputChar()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class InputCharRow : InputLayoutItem
	{
		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB79FE8", Offset = "0xB79FE8")]
		[SerializeField]
		private Text _label;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputLayout _layout;

		[Token(Token = "0x1700025D")]
		public string Header
		{
			[Token(Token = "0x600185F")]
			[Address(RVA = "0x1019018", Offset = "0x1019018", VA = "0x1019018")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001860")]
			[Address(RVA = "0x101903C", Offset = "0x101903C", VA = "0x101903C")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public InputLayout Layout
		{
			[Token(Token = "0x6001861")]
			[Address(RVA = "0x1019060", Offset = "0x1019060", VA = "0x1019060")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x1019068", Offset = "0x1019068", VA = "0x1019068")]
		public InputCharRow()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class InputLayout : MonoBehaviour
	{
		[Token(Token = "0x20006EA")]
		public delegate void OnCharSelected(InputLayout sender, string text);

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7A044", Offset = "0xB7A044")]
		[SerializeField]
		private ScrollRect _scrollRect;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected LayoutGroup _layout;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected InputLayoutItem _prefab;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OnCharSelected CharSelected;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InputLayoutItem> _items;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _availableChars;

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x1019070", Offset = "0x1019070", VA = "0x1019070")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x10190F0", Offset = "0x10190F0", VA = "0x10190F0", Slot = "4")]
		public virtual void SetChars(List<ZhChar> chars)
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x1019164", Offset = "0x1019164", VA = "0x1019164")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x1019254", Offset = "0x1019254", VA = "0x1019254")]
		protected InputLayoutItem GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x10193D0", Offset = "0x10193D0", VA = "0x10193D0")]
		public InputLayout()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class InputLayoutChars : InputLayout
	{
		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Scrollbar _scrollbar;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float _scrollSpeed;

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x1019804", Offset = "0x1019804", VA = "0x1019804")]
		private void Start()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x1019868", Offset = "0x1019868", VA = "0x1019868")]
		private void Update()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x1019958", Offset = "0x1019958", VA = "0x1019958", Slot = "4")]
		public override void SetChars(List<ZhChar> chars)
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x1019ABC", Offset = "0x1019ABC", VA = "0x1019ABC")]
		private void InputChar_Selected(InputChar sender, string text)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x1019AD4", Offset = "0x1019AD4", VA = "0x1019AD4")]
		public InputLayoutChars()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class InputLayoutGrid : InputLayoutChars
	{
		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool calculateColumnCount;

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x1019AE8", Offset = "0x1019AE8", VA = "0x1019AE8")]
		private void Start()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x1019CFC", Offset = "0x1019CFC", VA = "0x1019CFC")]
		public InputLayoutGrid()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class InputLayoutRows : InputLayout
	{
		[Token(Token = "0x600186F")]
		[Address(RVA = "0x1019D18", Offset = "0x1019D18", VA = "0x1019D18", Slot = "4")]
		public override void SetChars(List<ZhChar> chars)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x101A074", Offset = "0x101A074", VA = "0x101A074")]
		public InputLayoutRows()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public class InputTabBar : MonoBehaviour
	{
		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7A0D0", Offset = "0xB7A0D0")]
		[SerializeField]
		private TabBarButton[] _buttons;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputLayout[] _layouts;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _currentTab;

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x101A07C", Offset = "0x101A07C", VA = "0x101A07C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x101A194", Offset = "0x101A194", VA = "0x101A194")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x101A240", Offset = "0x101A240", VA = "0x101A240")]
		public void OpenTab(int index)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x101A28C", Offset = "0x101A28C", VA = "0x101A28C")]
		private void CloseTab()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x101A2A4", Offset = "0x101A2A4", VA = "0x101A2A4")]
		private void EnableTab(int index, bool enable)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x101A2F4", Offset = "0x101A2F4", VA = "0x101A2F4")]
		private void TabBarButton_Pressed(TabBarButton sender)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x101A31C", Offset = "0x101A31C", VA = "0x101A31C")]
		public InputTabBar()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class Keyboard : MonoBehaviour
	{
		[Token(Token = "0x20006EB")]
		public enum KeyboardType
		{
			[Token(Token = "0x4002A03")]
			Full,
			[Token(Token = "0x4002A04")]
			Numeric
		}

		[Token(Token = "0x20006EC")]
		public delegate void OnKeyPressed(Keyboard sender, KeyboardKey key);

		[Token(Token = "0x20006ED")]
		public delegate void OnKeyReleased(Keyboard sender, KeyboardKey key);

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7A12C", Offset = "0xB7A12C")]
		[SerializeField]
		private KeyboardType _type;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnKeyPressed KeyPressed;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnKeyReleased KeyReleased;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private KeyboardKey[] _keys;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isLowerCase;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _isShowingSpecial;

		[Token(Token = "0x1700025F")]
		public KeyboardType Type
		{
			[Token(Token = "0x6001878")]
			[Address(RVA = "0x101BB24", Offset = "0x101BB24", VA = "0x101BB24")]
			get
			{
				return default(KeyboardType);
			}
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x101BB2C", Offset = "0x101BB2C", VA = "0x101BB2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x101BCA0", Offset = "0x101BCA0", VA = "0x101BCA0")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x101BEF8", Offset = "0x101BEF8", VA = "0x101BEF8")]
		private void KeyboardKey_Pressed(KeyboardKey sender)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x101C360", Offset = "0x101C360", VA = "0x101C360")]
		private void KeyboardKey_Released(KeyboardKey sender)
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x101BD00", Offset = "0x101BD00", VA = "0x101BD00")]
		private void SetLowerCase(bool isLower)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x101BDA0", Offset = "0x101BDA0", VA = "0x101BDA0")]
		private void ShowSpecialKeys(bool showSpecial)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x101C8A0", Offset = "0x101C8A0", VA = "0x101C8A0")]
		public Keyboard()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class KeyboardKey : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IPointerEnterHandler
	{
		[Token(Token = "0x20006EE")]
		public enum KeyType
		{
			[Token(Token = "0x4002A06")]
			Default,
			[Token(Token = "0x4002A07")]
			Backspace,
			[Token(Token = "0x4002A08")]
			Shift,
			[Token(Token = "0x4002A09")]
			Enter,
			[Token(Token = "0x4002A0A")]
			SpecialChars,
			[Token(Token = "0x4002A0B")]
			Close,
			[Token(Token = "0x4002A0C")]
			LeftArrow,
			[Token(Token = "0x4002A0D")]
			RightArrow
		}

		[Token(Token = "0x20006EF")]
		public delegate void OnPressed(KeyboardKey sender);

		[Token(Token = "0x20006F0")]
		public delegate void OnReleased(KeyboardKey sender);

		[Token(Token = "0x20006F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72C34", Offset = "0xB72C34")]
		private sealed class <ButtonPressed_Coroutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KeyboardKey <>4__this;

			[Token(Token = "0x1700053F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EF0")]
				[Address(RVA = "0x101D70C", Offset = "0x101D70C", VA = "0x101D70C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000540")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EF2")]
				[Address(RVA = "0x101D778", Offset = "0x101D778", VA = "0x101D778", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EED")]
			[Address(RVA = "0x101CADC", Offset = "0x101CADC", VA = "0x101CADC")]
			[DebuggerHidden]
			public <ButtonPressed_Coroutine>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002EEE")]
			[Address(RVA = "0x101D64C", Offset = "0x101D64C", VA = "0x101D64C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EEF")]
			[Address(RVA = "0x101D650", Offset = "0x101D650", VA = "0x101D650", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EF1")]
			[Address(RVA = "0x101D714", Offset = "0x101D714", VA = "0x101D714", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7A178", Offset = "0xB7A178")]
		[SerializeField]
		private Image _buttonImage;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7A1C4", Offset = "0xB7A1C4")]
		[SerializeField]
		private KeyType _type;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB7A210", Offset = "0xB7A210")]
		[SerializeField]
		private bool _isUnique;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[SerializeField]
		private bool _isSpecial;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnPressed Pressed;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OnReleased Released;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A26C", Offset = "0xB7A26C")]
		private Text <Label>k__BackingField;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Button _button;

		[Token(Token = "0x17000260")]
		public KeyType Type
		{
			[Token(Token = "0x6001880")]
			[Address(RVA = "0x101C940", Offset = "0x101C940", VA = "0x101C940")]
			get
			{
				return default(KeyType);
			}
		}

		[Token(Token = "0x17000261")]
		public bool IsUnique
		{
			[Token(Token = "0x6001881")]
			[Address(RVA = "0x101C948", Offset = "0x101C948", VA = "0x101C948")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000262")]
		public bool IsSpecial
		{
			[Token(Token = "0x6001882")]
			[Address(RVA = "0x101C950", Offset = "0x101C950", VA = "0x101C950")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000263")]
		public Text Label
		{
			[Token(Token = "0x6001883")]
			[Address(RVA = "0x101C958", Offset = "0x101C958", VA = "0x101C958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB886C0", Offset = "0xB886C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001884")]
			[Address(RVA = "0x101C960", Offset = "0x101C960", VA = "0x101C960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB886D0", Offset = "0xB886D0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x101C968", Offset = "0x101C968", VA = "0x101C968")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x101CA34", Offset = "0x101CA34", VA = "0x101CA34")]
		private void Start()
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x101CA3C", Offset = "0x101CA3C", VA = "0x101CA3C")]
		private void ButtonPressed()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x101CA68", Offset = "0x101CA68", VA = "0x101CA68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB886E0", Offset = "0xB886E0")]
		private IEnumerator ButtonPressed_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x101CB08", Offset = "0x101CB08", VA = "0x101CB08", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x101D02C", Offset = "0x101D02C", VA = "0x101D02C", Slot = "5")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x101D3F8", Offset = "0x101D3F8", VA = "0x101D3F8", Slot = "6")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x101C86C", Offset = "0x101C86C", VA = "0x101C86C")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x101C760", Offset = "0x101C760", VA = "0x101C760")]
		public void ToggleCase(bool isLower)
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x101D5AC", Offset = "0x101D5AC", VA = "0x101D5AC")]
		private Image GetButtonImage()
		{
			return null;
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x101D644", Offset = "0x101D644", VA = "0x101D644")]
		public KeyboardKey()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class KeyboardManager : MonoBehaviour
	{
		[Token(Token = "0x20006F2")]
		public delegate void OnSubmit(KeyboardManager sender);

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7A27C", Offset = "0xB7A27C")]
		[SerializeField]
		private UIBackgroundSelector _background;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Keyboard _fullKeyboard;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Keyboard _numericKeyboard;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ChineseKeyboardExtension _chineseExtension;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public OnSubmit Submit;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A2F8", Offset = "0xB7A2F8")]
		private InteractiveTextField <ActiveInput>k__BackingField;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Keyboard _activeKeyboard;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _caretPosition;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _selectionStart;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _selectionEnd;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _eraseStartTime;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _eraseRate;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InteractiveTextField LastActiveInput;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string LastActiveInputText;

		[Token(Token = "0x17000264")]
		public InteractiveTextField ActiveInput
		{
			[Token(Token = "0x6001890")]
			[Address(RVA = "0x101D7E0", Offset = "0x101D7E0", VA = "0x101D7E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88744", Offset = "0xB88744")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001891")]
			[Address(RVA = "0x101D7E8", Offset = "0x101D7E8", VA = "0x101D7E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88754", Offset = "0xB88754")]
			private set
			{
			}
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x101D7F0", Offset = "0x101D7F0", VA = "0x101D7F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x101D9C8", Offset = "0x101D9C8", VA = "0x101D9C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x101DB08", Offset = "0x101DB08", VA = "0x101DB08")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x101B16C", Offset = "0x101B16C", VA = "0x101B16C")]
		public void Open(InteractiveTextField textField)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x101DBBC", Offset = "0x101DBBC", VA = "0x101DBBC")]
		public void CloseKeyboard()
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x101DEA8", Offset = "0x101DEA8", VA = "0x101DEA8")]
		private void Keyboard_KeyPressed(Keyboard sender, KeyboardKey key)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x101E6E0", Offset = "0x101E6E0", VA = "0x101E6E0")]
		private void Keyboard_KeyReleased(Keyboard sender, KeyboardKey key)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x101E75C", Offset = "0x101E75C", VA = "0x101E75C")]
		private void ChineseKeyboardExtension_CharSelected(ChineseKeyboardExtension sender, ZhChar character)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x101E854", Offset = "0x101E854", VA = "0x101E854")]
		private void ChineseKeyboardExtension_ExpandPressed(bool value)
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x101DCDC", Offset = "0x101DCDC", VA = "0x101DCDC")]
		private void SetActiveInput(InteractiveTextField textField)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x101E2CC", Offset = "0x101E2CC", VA = "0x101E2CC")]
		private void StartEraser()
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x101E874", Offset = "0x101E874", VA = "0x101E874")]
		private void EraseChar()
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x101E708", Offset = "0x101E708", VA = "0x101E708")]
		private void StopEraser()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x101E924", Offset = "0x101E924", VA = "0x101E924")]
		public KeyboardManager()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class ZhChar
	{
		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A308", Offset = "0xB7A308")]
		private string <Pinyin>k__BackingField;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A318", Offset = "0xB7A318")]
		private char <Char>k__BackingField;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A328", Offset = "0xB7A328")]
		private int <Stroke>k__BackingField;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A338", Offset = "0xB7A338")]
		private string <Radical>k__BackingField;

		[Token(Token = "0x17000265")]
		public string Pinyin
		{
			[Token(Token = "0x60018A0")]
			[Address(RVA = "0xD30994", Offset = "0xD30994", VA = "0xD30994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88764", Offset = "0xB88764")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A1")]
			[Address(RVA = "0xD3099C", Offset = "0xD3099C", VA = "0xD3099C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88774", Offset = "0xB88774")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public char Char
		{
			[Token(Token = "0x60018A2")]
			[Address(RVA = "0xD309A4", Offset = "0xD309A4", VA = "0xD309A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88784", Offset = "0xB88784")]
			get
			{
				return default(char);
			}
			[Token(Token = "0x60018A3")]
			[Address(RVA = "0xD309AC", Offset = "0xD309AC", VA = "0xD309AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88794", Offset = "0xB88794")]
			set
			{
			}
		}

		[Token(Token = "0x17000267")]
		public int Stroke
		{
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0xD309B4", Offset = "0xD309B4", VA = "0xD309B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB887A4", Offset = "0xB887A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0xD309BC", Offset = "0xD309BC", VA = "0xD309BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB887B4", Offset = "0xB887B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public string Radical
		{
			[Token(Token = "0x60018A6")]
			[Address(RVA = "0xD309C4", Offset = "0xD309C4", VA = "0xD309C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB887C4", Offset = "0xB887C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0xD309CC", Offset = "0xD309CC", VA = "0xD309CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB887D4", Offset = "0xB887D4")]
			set
			{
			}
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xD309D4", Offset = "0xD309D4", VA = "0xD309D4")]
		public ZhChar(string pinyin, char ch)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xD30A10", Offset = "0xD30A10", VA = "0xD30A10")]
		public ZhChar(string pinyin, char ch, int stroke)
		{
		}
	}
	[Token(Token = "0x2000303")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB71634", Offset = "0xB71634")]
	[ExecuteInEditMode]
	public class LocalizedLabel : MonoBehaviour
	{
		[Token(Token = "0x20006F3")]
		public delegate void OnTextUpdated(LocalizedLabel sender, string text);

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7A348", Offset = "0xB7A348")]
		[SerializeField]
		private bool _useCaps;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private string _localizationKey;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Text _label;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _updateNumber;

		[Token(Token = "0x14000042")]
		public event OnTextUpdated TextUpdated
		{
			[Token(Token = "0x60018AA")]
			[Address(RVA = "0x101FA0C", Offset = "0x101FA0C", VA = "0x101FA0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB887E4", Offset = "0xB887E4")]
			add
			{
			}
			[Token(Token = "0x60018AB")]
			[Address(RVA = "0x101FAB0", Offset = "0x101FAB0", VA = "0x101FAB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB887F4", Offset = "0xB887F4")]
			remove
			{
			}
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x101FB54", Offset = "0x101FB54", VA = "0x101FB54")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x101FBF4", Offset = "0x101FBF4", VA = "0x101FBF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x101FD84", Offset = "0x101FD84", VA = "0x101FD84")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x101FE60", Offset = "0x101FE60", VA = "0x101FE60")]
		private void LocaleManager_LocaleChanged(LocaleConfig current, int updateNumber)
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x1010F6C", Offset = "0x1010F6C", VA = "0x1010F6C")]
		public void SetLocalizationKey(string key)
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x101A7F0", Offset = "0x101A7F0", VA = "0x101A7F0")]
		public void UpdateLabel()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x1020248", Offset = "0x1020248", VA = "0x1020248")]
		public void ClearLabel()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x1020270", Offset = "0x1020270", VA = "0x1020270")]
		public LocalizedLabel()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class GeneralDialog : MonoBehaviour
	{
		[Token(Token = "0x20006F4")]
		public enum DialogMode
		{
			[Token(Token = "0x4002A12")]
			OneButton,
			[Token(Token = "0x4002A13")]
			TwoButtons
		}

		[Token(Token = "0x20006F5")]
		public enum DismissMode
		{
			[Token(Token = "0x4002A15")]
			Hide,
			[Token(Token = "0x4002A16")]
			Destroy
		}

		[Token(Token = "0x20006F6")]
		public delegate void OnDialogButton();

		[Token(Token = "0x20006F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72C44", Offset = "0xB72C44")]
		private sealed class <Dismiss_Coroutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GeneralDialog <>4__this;

			[Token(Token = "0x17000541")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F02")]
				[Address(RVA = "0x1014B50", Offset = "0x1014B50", VA = "0x1014B50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000542")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F04")]
				[Address(RVA = "0x1014BBC", Offset = "0x1014BBC", VA = "0x1014BBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EFF")]
			[Address(RVA = "0x1014890", Offset = "0x1014890", VA = "0x1014890")]
			[DebuggerHidden]
			public <Dismiss_Coroutine>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002F00")]
			[Address(RVA = "0x10149F8", Offset = "0x10149F8", VA = "0x10149F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F01")]
			[Address(RVA = "0x10149FC", Offset = "0x10149FC", VA = "0x10149FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F03")]
			[Address(RVA = "0x1014B58", Offset = "0x1014B58", VA = "0x1014B58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string _showAnimationTrigger;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string _hideAnimationTrigger;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _title;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _description;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _positiveButtonLabel;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text _negativeButtonLabel;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UIButton _positiveButton;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UIButton _negativeButton;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private DismissMode _dismissMode;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private OnDialogButton _positiveButtonCallback;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private OnDialogButton _negativeButtonCallback;

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x10141AC", Offset = "0x10141AC", VA = "0x10141AC")]
		private void Start()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x10141D4", Offset = "0x10141D4", VA = "0x10141D4")]
		public void SetupWithTwoButtons(string title, string description, string positiveButtonText, string negativeButtonText, [Optional] OnDialogButton positiveCallback, [Optional] OnDialogButton negativeCallback)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x1014300", Offset = "0x1014300", VA = "0x1014300")]
		public void SetupWithOneButton(string title, string description, string buttonText, [Optional] OnDialogButton callback)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x1014420", Offset = "0x1014420", VA = "0x1014420")]
		public void SetupWithNoButtons(string title, string description)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x1014530", Offset = "0x1014530", VA = "0x1014530")]
		public void PositiveButtonPressed()
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x10147F0", Offset = "0x10147F0", VA = "0x10147F0")]
		public void NegativeButtonPressed()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x101481C", Offset = "0x101481C", VA = "0x101481C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88804", Offset = "0xB88804")]
		private IEnumerator Dismiss_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x10148BC", Offset = "0x10148BC", VA = "0x10148BC")]
		public void DismissInstantly()
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x1014778", Offset = "0x1014778", VA = "0x1014778")]
		public void Dismiss()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x101497C", Offset = "0x101497C", VA = "0x101497C")]
		public GeneralDialog()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class MenuBar : UIMenu
	{
		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SwitchButtonsPanel _buttons;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button _workoutButton;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button _gamesButton;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button _statsButton;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button _optionsButton;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Image _workoutButtonIcon;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Image _gamesButtonIcon;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Image _statsButtonIcon;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Image _optionsButtonIcon;

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x1022500", Offset = "0x1022500", VA = "0x1022500", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x1022530", Offset = "0x1022530", VA = "0x1022530")]
		private void SetupButtonImages()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x10227B8", Offset = "0x10227B8", VA = "0x10227B8")]
		public void WorkoutButtonCallback()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x10229B8", Offset = "0x10229B8", VA = "0x10229B8")]
		public void GamesButtonCallback()
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x1022A48", Offset = "0x1022A48", VA = "0x1022A48")]
		public void StatsButtonCallback()
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x1022A88", Offset = "0x1022A88", VA = "0x1022A88")]
		public void OptionsButtonCallback()
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x1022794", Offset = "0x1022794", VA = "0x1022794")]
		public void SelectWorkout()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x1013324", Offset = "0x1013324", VA = "0x1013324")]
		public void SelectGames()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x1022B18", Offset = "0x1022B18", VA = "0x1022B18")]
		public void SelectStats()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x1022B3C", Offset = "0x1022B3C", VA = "0x1022B3C")]
		public void SelectOptions()
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x10227F8", Offset = "0x10227F8", VA = "0x10227F8")]
		private void PlaySFX()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x1022B60", Offset = "0x1022B60", VA = "0x1022B60")]
		public void AdaptToLocalBuild()
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x1022BBC", Offset = "0x1022BBC", VA = "0x1022BBC")]
		public MenuBar()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class PauseMenu : MonoBehaviour
	{
		[Token(Token = "0x20006F8")]
		public delegate void OnActionPressed(PauseMenu sender, ResumeActionType actionType);

		[Token(Token = "0x20006F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72C54", Offset = "0xB72C54")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4002A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PauseMenu <>4__this;

			[Token(Token = "0x4002A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int actionType;

			[Token(Token = "0x6002F09")]
			[Address(RVA = "0x111D88C", Offset = "0x111D88C", VA = "0x111D88C")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002F0A")]
			[Address(RVA = "0x111D894", Offset = "0x111D894", VA = "0x111D894")]
			internal void <ActionSelected>b__0()
			{
			}

			[Token(Token = "0x6002F0B")]
			[Address(RVA = "0x111DCE4", Offset = "0x111DCE4", VA = "0x111DCE4")]
			internal void <ActionSelected>b__1()
			{
			}
		}

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OnActionPressed ActionPressed;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7A4EC", Offset = "0xB7A4EC")]
		[SerializeField]
		private Button _tutorialButton;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button _skipTutorialButton;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text _labelGame;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text _labelScore;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _container;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GeneralDialog _dialog;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _dialogOverlay;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CanvasRaycaster _raycaster;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7A5A8", Offset = "0xB7A5A8")]
		[SerializeField]
		private float _distanceToPlayer;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float _headTrackingSpeed;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform playerCameraTransform;

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x102663C", Offset = "0x102663C", VA = "0x102663C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x1026B2C", Offset = "0x1026B2C", VA = "0x1026B2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x1026854", Offset = "0x1026854", VA = "0x1026854")]
		private void UpdateTransform(float height)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x1026C68", Offset = "0x1026C68", VA = "0x1026C68")]
		private void PlayerInstance_Recentered(PlayerCamera sender, float playerHeight)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x1026C6C", Offset = "0x1026C6C", VA = "0x1026C6C")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x1026E60", Offset = "0x1026E60", VA = "0x1026E60")]
		public void Enable(bool enable, AttentionLab.Enums.GameType gameType, SceneStatusType status)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x1026FA4", Offset = "0x1026FA4", VA = "0x1026FA4")]
		public void ActionSelected(int actionType)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x1027270", Offset = "0x1027270", VA = "0x1027270")]
		public PauseMenu()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class CreditsMenu : UIMenu
	{
		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Text _bodyText;

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x10592C0", Offset = "0x10592C0", VA = "0x10592C0", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x10593E0", Offset = "0x10593E0", VA = "0x10593E0")]
		public CreditsMenu()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x10593E8", Offset = "0x10593E8", VA = "0x10593E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88868", Offset = "0xB88868")]
		private void <Start>b__1_0(AttentionLab.REST.Request request, Page page)
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class HealthAndSafetyMenu : UIMenu
	{
		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _continueButton;

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x1018288", Offset = "0x1018288", VA = "0x1018288")]
		public void ContinueButtonCallback()
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x10182B4", Offset = "0x10182B4", VA = "0x10182B4")]
		public HealthAndSafetyMenu()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class PrivacyPolicyMenu : UIMenu
	{
		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Text _bodyText;

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x111DE24", Offset = "0x111DE24", VA = "0x111DE24", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x111E0FC", Offset = "0x111E0FC", VA = "0x111E0FC")]
		public PrivacyPolicyMenu()
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x111E10C", Offset = "0x111E10C", VA = "0x111E10C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88878", Offset = "0xB88878")]
		private void <Start>b__1_0(AttentionLab.REST.Request request, Page page)
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class UserAgreementMenu : UIMenu
	{
		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Text _bodyText;

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xD299CC", Offset = "0xD299CC", VA = "0xD299CC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xD29AEC", Offset = "0xD29AEC", VA = "0xD29AEC")]
		public UserAgreementMenu()
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xD29AF4", Offset = "0xD29AF4", VA = "0xD29AF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88888", Offset = "0xB88888")]
		private void <Start>b__1_0(AttentionLab.REST.Request request, Page page)
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class LoadingMenu : UIMenu
	{
		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x101F764", Offset = "0x101F764", VA = "0x101F764")]
		public LoadingMenu()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class LoginCredentialsMenu : UIMenu
	{
		[Token(Token = "0x20006FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72C64", Offset = "0xB72C64")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 menuPosition;

			[Token(Token = "0x4002A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoginCredentialsMenu <>4__this;

			[Token(Token = "0x6002F0C")]
			[Address(RVA = "0x10208E4", Offset = "0x10208E4", VA = "0x10208E4")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002F0D")]
			[Address(RVA = "0x1020B98", Offset = "0x1020B98", VA = "0x1020B98")]
			internal void <LoginButtonCallback>b__0(bool success, ResponseCodeType responseCode, string avatarID, Mood mood)
			{
			}
		}

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UIButton _loginButton;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private InteractiveTextField _inputUsername;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private InteractiveTextField _inputPassword;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _validUsernameEmail;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _validPassword;

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x1020504", Offset = "0x1020504", VA = "0x1020504", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x10205A8", Offset = "0x10205A8", VA = "0x10205A8", Slot = "7")]
		protected override void KeyboardManager_Submit(KeyboardManager sender)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x1020834", Offset = "0x1020834", VA = "0x1020834", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x10206E0", Offset = "0x10206E0", VA = "0x10206E0")]
		public void LoginButtonCallback()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x10208EC", Offset = "0x10208EC", VA = "0x10208EC")]
		private void ApplyUserOptions()
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x1020A74", Offset = "0x1020A74", VA = "0x1020A74")]
		public void ForgotPasswordButtonCallback()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x1020AA0", Offset = "0x1020AA0", VA = "0x1020AA0")]
		public void ValidateUsernameEmail(string usernameEmail)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x1020B5C", Offset = "0x1020B5C", VA = "0x1020B5C")]
		public void ValidatePassword(string password)
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x102052C", Offset = "0x102052C", VA = "0x102052C")]
		private void CheckFormValidity()
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x1020B90", Offset = "0x1020B90", VA = "0x1020B90")]
		public LoginCredentialsMenu()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class LoginForgotPasswordFinishMenu : UIMenu
	{
		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x1021038", Offset = "0x1021038", VA = "0x1021038")]
		public void ContinueButtonCallback()
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x1021064", Offset = "0x1021064", VA = "0x1021064")]
		public LoginForgotPasswordFinishMenu()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class LoginForgotPasswordMenu : UIMenu
	{
		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UIButton _submitButton;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private InteractiveTextField _emailInputField;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string _email;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _validEmail;

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x102106C", Offset = "0x102106C", VA = "0x102106C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x10210EC", Offset = "0x10210EC", VA = "0x10210EC", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x1021128", Offset = "0x1021128", VA = "0x1021128", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x102118C", Offset = "0x102118C", VA = "0x102118C", Slot = "8")]
		public override void BackButtonCallback()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x10211A0", Offset = "0x10211A0", VA = "0x10211A0", Slot = "7")]
		protected override void KeyboardManager_Submit(KeyboardManager sender)
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x10212F8", Offset = "0x10212F8", VA = "0x10212F8")]
		public void ValidateEmail(string email)
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x10211E4", Offset = "0x10211E4", VA = "0x10211E4")]
		public void SubmitButtonCallback()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x1021094", Offset = "0x1021094", VA = "0x1021094")]
		private void CheckFormValidity()
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x1021334", Offset = "0x1021334", VA = "0x1021334")]
		public LoginForgotPasswordMenu()
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x102133C", Offset = "0x102133C", VA = "0x102133C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88898", Offset = "0xB88898")]
		private void <SubmitButtonCallback>b__10_0(AttentionLab.REST.Request request)
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class LoginMoodSleepMenu : UIMenu
	{
		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UIButton _continueButton;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image _verySadIcon;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image _sadIcon;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Image _normalIcon;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Image _happyIcon;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Image _veryHappyIcon;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _moodSelected;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool _sleepSelected;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private EMoodType _moodId;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ServerRequestsEnums.ESleepType _sleepId;

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x1021564", Offset = "0x1021564", VA = "0x1021564", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x10218E0", Offset = "0x10218E0", VA = "0x10218E0", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x1021594", Offset = "0x1021594", VA = "0x1021594")]
		private void SetupIcons()
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x102191C", Offset = "0x102191C", VA = "0x102191C")]
		public void SubmitButtonCallback()
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x1021A34", Offset = "0x1021A34", VA = "0x1021A34")]
		public void MoodSelected(int id)
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x1021A44", Offset = "0x1021A44", VA = "0x1021A44")]
		public void SleepSelected(int id)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x1021878", Offset = "0x1021878", VA = "0x1021878")]
		private void CheckFormValidity()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x1021A54", Offset = "0x1021A54", VA = "0x1021A54")]
		public LoginMoodSleepMenu()
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x1021A5C", Offset = "0x1021A5C", VA = "0x1021A5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB888A8", Offset = "0xB888A8")]
		private void <SubmitButtonCallback>b__13_0(AttentionLab.REST.Request request)
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class LoginWelcomeBackMenu : UIMenu
	{
		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Text _welcomeBackLabel;

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x1021D94", Offset = "0x1021D94", VA = "0x1021D94", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x1021FA4", Offset = "0x1021FA4", VA = "0x1021FA4", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x1021E84", Offset = "0x1021E84", VA = "0x1021E84")]
		private void SetupWelcomeMessage(LocaleConfig current, int updateNumber)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x102208C", Offset = "0x102208C", VA = "0x102208C")]
		public void ContinueButtonCallback()
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x102214C", Offset = "0x102214C", VA = "0x102214C")]
		public void LogoutButtonCallback()
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x1022170", Offset = "0x1022170", VA = "0x1022170")]
		public LoginWelcomeBackMenu()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x1022178", Offset = "0x1022178", VA = "0x1022178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB888B8", Offset = "0xB888B8")]
		private void <ContinueButtonCallback>b__4_0(bool success, ResponseCodeType responseCode, string avatarID, Mood mood)
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class LoginAndRegistrationMenu : UIMenu
	{
		[Serializable]
		[Token(Token = "0x20006FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72C74", Offset = "0xB72C74")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static GeneralDialog.OnDialogButton <>9__2_0;

			[Token(Token = "0x6002F0F")]
			[Address(RVA = "0x10204D0", Offset = "0x10204D0", VA = "0x10204D0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F10")]
			[Address(RVA = "0x10204D8", Offset = "0x10204D8", VA = "0x10204D8")]
			internal void <SignUpButtonCallback>b__2_0()
			{
			}
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x10202C4", Offset = "0x10202C4", VA = "0x10202C4", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x10202CC", Offset = "0x10202CC", VA = "0x10202CC")]
		public void LoginButtonCallback()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x10202F8", Offset = "0x10202F8", VA = "0x10202F8")]
		public void SignUpButtonCallback()
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x1020464", Offset = "0x1020464", VA = "0x1020464")]
		public LoginAndRegistrationMenu()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class DashboardMenu : UIMenu
	{
		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private DashboardWODGameImage _gameImage;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ValueProgression _totalWorkouts;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ValueProgressionCircle _wodScore;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ValueProgressionCircle _globalWodScore;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private WODProgressBar _wodProgressBar;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private List<Image> _last7WodScoreBars;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Button _startButton;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7A774", Offset = "0xB7A774")]
		[SerializeField]
		private Image _game1;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Image _game2;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Image _game3;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Image _progressBar;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int _fetchCount;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private AttentionLab.Enums.GameType _nextGameType;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private WodData _currentWodData;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool _finishedSetup;

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x10598F8", Offset = "0x10598F8", VA = "0x10598F8", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x1059AD4", Offset = "0x1059AD4", VA = "0x1059AD4", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x1059920", Offset = "0x1059920", VA = "0x1059920")]
		private void Setup()
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x1059B38", Offset = "0x1059B38", VA = "0x1059B38")]
		private void SetupLast7WodScores(WodStats stats)
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x1059E0C", Offset = "0x1059E0C", VA = "0x1059E0C")]
		private void MaybeHideSkeletonScreen()
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x1059E34", Offset = "0x1059E34", VA = "0x1059E34")]
		private void OnGameDetailsReady()
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x1059F54", Offset = "0x1059F54", VA = "0x1059F54")]
		private void SetupDailyWod(WodData wod)
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x105A014", Offset = "0x105A014", VA = "0x105A014")]
		private void SetupProgressBarCategories(WodData wod)
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x105AA04", Offset = "0x105AA04", VA = "0x105AA04")]
		private void SetupProgressBarCategory(int shaderIndex, Image categoryIcon, AttentionLab.Enums.GameType gameType, CategoryType categoryType)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x105A564", Offset = "0x105A564", VA = "0x105A564")]
		private void SetupOngoingWodView(WodData wod)
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x105A364", Offset = "0x105A364", VA = "0x105A364")]
		private void SetupCompletedWodView(WodData wod)
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x105B034", Offset = "0x105B034", VA = "0x105B034")]
		private void SetupUnavailableWodView()
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x105B2FC", Offset = "0x105B2FC", VA = "0x105B2FC")]
		public void StartButtonCallback()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x105B488", Offset = "0x105B488", VA = "0x105B488")]
		public DashboardMenu()
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x105B490", Offset = "0x105B490", VA = "0x105B490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB888C8", Offset = "0xB888C8")]
		private void <Setup>b__17_0(AttentionLab.REST.Request request, WodData wod)
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x105B6EC", Offset = "0x105B6EC", VA = "0x105B6EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB888D8", Offset = "0xB888D8")]
		private void <Setup>b__17_1(WodStats stats)
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class DashboardWODGameImage : MonoBehaviour
	{
		[Token(Token = "0x20006FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72C84", Offset = "0xB72C84")]
		private sealed class <AnimateOut>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CategoryType categoryType;

			[Token(Token = "0x4002A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public CategoryType nextCategoryType;

			[Token(Token = "0x4002A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DashboardWODGameImage <>4__this;

			[Token(Token = "0x4002A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AttentionLab.Enums.GameType gameType;

			[Token(Token = "0x4002A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public AttentionLab.Enums.GameType nextGameType;

			[Token(Token = "0x4002A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Gradient <gradient>5__2;

			[Token(Token = "0x4002A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startTime>5__3;

			[Token(Token = "0x4002A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <currentTime>5__4;

			[Token(Token = "0x17000543")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F14")]
				[Address(RVA = "0x105C350", Offset = "0x105C350", VA = "0x105C350", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000544")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F16")]
				[Address(RVA = "0x105C3BC", Offset = "0x105C3BC", VA = "0x105C3BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F11")]
			[Address(RVA = "0x105BA10", Offset = "0x105BA10", VA = "0x105BA10")]
			[DebuggerHidden]
			public <AnimateOut>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002F12")]
			[Address(RVA = "0x105BDD4", Offset = "0x105BDD4", VA = "0x105BDD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F13")]
			[Address(RVA = "0x105BDD8", Offset = "0x105BDD8", VA = "0x105BDD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F15")]
			[Address(RVA = "0x105C358", Offset = "0x105C358", VA = "0x105C358", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72C94", Offset = "0xB72C94")]
		private sealed class <AnimateIn>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DashboardWODGameImage <>4__this;

			[Token(Token = "0x4002A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CategoryType categoryType;

			[Token(Token = "0x4002A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public AttentionLab.Enums.GameType gameType;

			[Token(Token = "0x4002A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startTime>5__2;

			[Token(Token = "0x4002A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <currentTime>5__3;

			[Token(Token = "0x17000545")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F1A")]
				[Address(RVA = "0x105BD60", Offset = "0x105BD60", VA = "0x105BD60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000546")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F1C")]
				[Address(RVA = "0x105BDCC", Offset = "0x105BDCC", VA = "0x105BDCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F17")]
			[Address(RVA = "0x105BA3C", Offset = "0x105BA3C", VA = "0x105BA3C")]
			[DebuggerHidden]
			public <AnimateIn>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002F18")]
			[Address(RVA = "0x105BA70", Offset = "0x105BA70", VA = "0x105BA70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F19")]
			[Address(RVA = "0x105BA74", Offset = "0x105BA74", VA = "0x105BA74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F1B")]
			[Address(RVA = "0x105BD68", Offset = "0x105BD68", VA = "0x105BD68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _gameName;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _workoutCompleteMessage;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _workoutUnavailableMessage;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _inAnimationTime;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _inAnimationStartValue;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _inAnimationEndValue;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _outAnimationTime;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _outAnimationStartValue;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _outAnimationEndValue;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image _image;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _hasAnimation;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private AttentionLab.Enums.GameType _gameType;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CategoryType _categoryType;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private AttentionLab.Enums.GameType _previousGameType;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CategoryType _previousCategoryType;

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x105B82C", Offset = "0x105B82C", VA = "0x105B82C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x105B8D4", Offset = "0x105B8D4", VA = "0x105B8D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x105AC50", Offset = "0x105AC50", VA = "0x105AC50")]
		public void Setup(AttentionLab.Enums.GameType gameType, CategoryType categoryType, AttentionLab.Enums.GameType previousGameType = AttentionLab.Enums.GameType.NotDefined, CategoryType previousCategoryType = CategoryType.NotDefined)
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x105ADAC", Offset = "0x105ADAC", VA = "0x105ADAC")]
		public void SetupWODComplete(AttentionLab.Enums.GameType fistGameType, AttentionLab.Enums.GameType secondGameType, AttentionLab.Enums.GameType thirdGameType)
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x105B09C", Offset = "0x105B09C", VA = "0x105B09C")]
		public void SetupWODUnavailable()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x105B8EC", Offset = "0x105B8EC", VA = "0x105B8EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB888E8", Offset = "0xB888E8")]
		public IEnumerator AnimateOut(AttentionLab.Enums.GameType gameType, CategoryType categoryType, AttentionLab.Enums.GameType nextGameType, CategoryType nextCategoryType)
		{
			return null;
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x105B988", Offset = "0x105B988", VA = "0x105B988")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8894C", Offset = "0xB8894C")]
		private IEnumerator AnimateIn(AttentionLab.Enums.GameType gameType, CategoryType categoryType)
		{
			return null;
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x105BA68", Offset = "0x105BA68", VA = "0x105BA68")]
		public DashboardWODGameImage()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class GameDetailsMenu : UIMenu
	{
		[Token(Token = "0x20006FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72CA4", Offset = "0xB72CA4")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4002A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameDetailsMenu <>4__this;

			[Token(Token = "0x4002A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool accessibilityCointainerActive;

			[Token(Token = "0x6002F1D")]
			[Address(RVA = "0x10106F4", Offset = "0x10106F4", VA = "0x10106F4")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002F1E")]
			[Address(RVA = "0x10108EC", Offset = "0x10108EC", VA = "0x10108EC")]
			internal void <SetupStats>b__0(AttentionLab.Enums.GameType gameType, GameStats stats)
			{
			}
		}

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string GameTypeParameter;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Text _nameLabel;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image _gameImage;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image _categoryIcon;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text _categoryLabel;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Text _subcategoryLabel;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Text _descriptionLabel;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ValueProgression _timesPlayed;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ValueProgressionCircle _level;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ValueProgressionCircle _score;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject _accessibilityContainer;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private HorizontalLayoutGroup _accessibilityIconHolder;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AccessibilityIcon _accessibilityIconPrefab;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private AttentionLab.Enums.GameType _gameType;

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x100FB3C", Offset = "0x100FB3C", VA = "0x100FB3C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x100FB6C", Offset = "0x100FB6C", VA = "0x100FB6C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x100FB84", Offset = "0x100FB84", VA = "0x100FB84", Slot = "9")]
		public override void Refresh()
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x100FD24", Offset = "0x100FD24", VA = "0x100FD24")]
		private void SetupGameInfo()
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x10105B4", Offset = "0x10105B4", VA = "0x10105B4")]
		private void SetupStats()
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x10106FC", Offset = "0x10106FC", VA = "0x10106FC")]
		public void PlayButtonCallback()
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x1010888", Offset = "0x1010888", VA = "0x1010888")]
		public GameDetailsMenu()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class GameLibraryEntryButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _name;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _category;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LocalizedLabel _nameLocalized;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LocalizedLabel _categoryLocalized;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _playButton;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _releaseVersion;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Image _image;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isComingSoon;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private AttentionLab.Enums.GameType _gameType;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<string> _accessibilityTypes;

		[Token(Token = "0x17000269")]
		public string Name
		{
			[Token(Token = "0x600192A")]
			[Address(RVA = "0x1010B04", Offset = "0x1010B04", VA = "0x1010B04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026A")]
		public string ReleaseVersion
		{
			[Token(Token = "0x600192B")]
			[Address(RVA = "0x1010B28", Offset = "0x1010B28", VA = "0x1010B28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		public string Category
		{
			[Token(Token = "0x600192C")]
			[Address(RVA = "0x100D7CC", Offset = "0x100D7CC", VA = "0x100D7CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026C")]
		public List<string> AccessibilityTypes
		{
			[Token(Token = "0x600192D")]
			[Address(RVA = "0x1010B30", Offset = "0x1010B30", VA = "0x1010B30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026D")]
		public bool ComingSoon
		{
			[Token(Token = "0x600192E")]
			[Address(RVA = "0x1010B38", Offset = "0x1010B38", VA = "0x1010B38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x1010B40", Offset = "0x1010B40", VA = "0x1010B40")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x1010C20", Offset = "0x1010C20", VA = "0x1010C20")]
		public void Setup(Game gameData)
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x1010F74", Offset = "0x1010F74", VA = "0x1010F74")]
		public void SetupComingSoon(string name, CategoryType category)
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x10111BC", Offset = "0x10111BC", VA = "0x10111BC")]
		public void BigButtonCallback()
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x1011390", Offset = "0x1011390", VA = "0x1011390")]
		public void PlayButtonCallback()
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x1011510", Offset = "0x1011510", VA = "0x1011510", Slot = "6")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x10116CC", Offset = "0x10116CC", VA = "0x10116CC", Slot = "7")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x1011888", Offset = "0x1011888", VA = "0x1011888")]
		public GameLibraryEntryButton()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class GameLibraryList : MonoBehaviour
	{
		[Token(Token = "0x20006FF")]
		public enum SortingType
		{
			[Token(Token = "0x4002A34")]
			Alphabetical,
			[Token(Token = "0x4002A35")]
			NewestFirst,
			[Token(Token = "0x4002A36")]
			OldestFirst,
			[Token(Token = "0x4002A37")]
			Category
		}

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameLibraryEntryButton _gameButtonPrefab;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button _defaultSortingButton;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _selectedSortingLabel;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SwitchButtonsPanel _sortingList;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GridLayoutGroup _gameList;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isShowingSortingList;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RectTransform _rectTransform;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RectTransform _gameListRectTransform;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<GameLibraryEntryButton> _buttons;

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x10118F8", Offset = "0x10118F8", VA = "0x10118F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x1011970", Offset = "0x1011970", VA = "0x1011970")]
		private void Update()
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x1011A54", Offset = "0x1011A54", VA = "0x1011A54")]
		public void Setup()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x1011BB4", Offset = "0x1011BB4", VA = "0x1011BB4")]
		public void AddGameEntry(Game gameData)
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x1011C84", Offset = "0x1011C84", VA = "0x1011C84")]
		public void AddComingSoonEntry(string name, CategoryType categoryType)
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x1011D64", Offset = "0x1011D64", VA = "0x1011D64")]
		public void ToggleSortingList()
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x1011A9C", Offset = "0x1011A9C", VA = "0x1011A9C")]
		private void ShowSortingList(bool value)
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x1011AE4", Offset = "0x1011AE4", VA = "0x1011AE4")]
		public void ChangeSorting(int type)
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x1011EEC", Offset = "0x1011EEC", VA = "0x1011EEC")]
		private void SortAlphabetically()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x101217C", Offset = "0x101217C", VA = "0x101217C")]
		private void SortNewestFirst()
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x1012574", Offset = "0x1012574", VA = "0x1012574")]
		private void SortOldestFirst()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x101296C", Offset = "0x101296C", VA = "0x101296C")]
		private void SortCategory()
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x1011D74", Offset = "0x1011D74", VA = "0x1011D74")]
		private string SortingTypeToText(SortingType type)
		{
			return null;
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x1012E1C", Offset = "0x1012E1C", VA = "0x1012E1C")]
		public List<GameLibraryEntryButton> GetGameButtons()
		{
			return null;
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x1012E24", Offset = "0x1012E24", VA = "0x1012E24")]
		public void DisableButtons(List<GameLibraryEntryButton> buttonsToDisable)
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x1012F98", Offset = "0x1012F98", VA = "0x1012F98")]
		public GameLibraryList()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class GameLibraryMenu : UIMenu
	{
		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameLibraryRecommended _recommended;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameLibraryList _gameList;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _recommendedSection;

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x1013008", Offset = "0x1013008", VA = "0x1013008", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x10132F4", Offset = "0x10132F4", VA = "0x10132F4", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x1013030", Offset = "0x1013030", VA = "0x1013030")]
		private void FetchGameLibrary()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x10134FC", Offset = "0x10134FC", VA = "0x10134FC")]
		public GameLibraryMenu()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class GameLibraryRecommended : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocalizedLabel _nameLocalized;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Image _image;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AttentionLab.Enums.GameType _gameType;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool isSetup;

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x1013348", Offset = "0x1013348", VA = "0x1013348")]
		public void Setup(Game gameData)
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x1013504", Offset = "0x1013504", VA = "0x1013504")]
		public void BigButtonCallback()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x101378C", Offset = "0x101378C", VA = "0x101378C")]
		public void PlayButtonCallback()
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x1013914", Offset = "0x1013914", VA = "0x1013914", Slot = "6")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x1013AD8", Offset = "0x1013AD8", VA = "0x1013AD8", Slot = "7")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x1013C9C", Offset = "0x1013C9C", VA = "0x1013C9C")]
		public GameLibraryRecommended()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class OptionsAccessibilityMenu : OptionsMenuBase
	{
		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle _turnToggle;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Toggle _bloomToggle;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle _leftHandedToggle;

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x10238FC", Offset = "0x10238FC", VA = "0x10238FC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x1023A30", Offset = "0x1023A30", VA = "0x1023A30", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x1023964", Offset = "0x1023964", VA = "0x1023964")]
		private new void Setup()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x1023A6C", Offset = "0x1023A6C", VA = "0x1023A6C")]
		public void ToggleTurn(bool value)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x1023A7C", Offset = "0x1023A7C", VA = "0x1023A7C")]
		public void ToggleBloom(bool value)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x1023A8C", Offset = "0x1023A8C", VA = "0x1023A8C")]
		public void ToggleLeftHanded(bool value)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x1023A9C", Offset = "0x1023A9C", VA = "0x1023A9C", Slot = "11")]
		public override void RestoreOptionsButtonCallback()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x1023AD8", Offset = "0x1023AD8", VA = "0x1023AD8")]
		public OptionsAccessibilityMenu()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class OptionsGeneralMenu : OptionsMenuBase
	{
		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ArrowButtonSelectionPlayerMeasurements _height;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ArrowButtonSelectionPlayerMeasurements _weight;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ArrowButtonSelectionList _unitSystem;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RectTransform _playerImage;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _calibrateButton;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int MetricUnitSystem;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int ImperialUnitSystem;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int DefaultHeightValue;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int DefaultWeightValue;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _defaultPlayerImageHeight;

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x1023AE8", Offset = "0x1023AE8", VA = "0x1023AE8", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x1023C08", Offset = "0x1023C08", VA = "0x1023C08", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x1023C4C", Offset = "0x1023C4C", VA = "0x1023C4C", Slot = "10")]
		protected override void Setup()
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x1023F98", Offset = "0x1023F98", VA = "0x1023F98")]
		private void OnUnitSystemChange(int id)
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x1024064", Offset = "0x1024064", VA = "0x1024064")]
		private void OnHeightChange(int value)
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x1024148", Offset = "0x1024148", VA = "0x1024148")]
		private void OnWeightChange(int value)
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x1024154", Offset = "0x1024154", VA = "0x1024154")]
		public void CalibrateButtonCallback()
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x1024304", Offset = "0x1024304", VA = "0x1024304", Slot = "11")]
		public override void RestoreOptionsButtonCallback()
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x10243B8", Offset = "0x10243B8", VA = "0x10243B8")]
		public OptionsGeneralMenu()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class OptionsMainMenu : OptionsMenuBase
	{
		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string HasCreditsParameter;

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x102443C", Offset = "0x102443C", VA = "0x102443C", Slot = "11")]
		public override void RestoreOptionsButtonCallback()
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x1024440", Offset = "0x1024440", VA = "0x1024440")]
		public OptionsMainMenu()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public class OptionsMenuBase : UIMenu
	{
		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _creditsButton;

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x1023934", Offset = "0x1023934", VA = "0x1023934", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x1023DAC", Offset = "0x1023DAC", VA = "0x1023DAC", Slot = "10")]
		protected virtual void Setup()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x10244A4", Offset = "0x10244A4", VA = "0x10244A4")]
		public void GeneralButtonCallback()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x1024528", Offset = "0x1024528", VA = "0x1024528")]
		public void SoundButtonCallback()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x10245AC", Offset = "0x10245AC", VA = "0x10245AC")]
		public void AccessibilityButtonCallback()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x1024730", Offset = "0x1024730", VA = "0x1024730", Slot = "11")]
		public virtual void RestoreOptionsButtonCallback()
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x1024898", Offset = "0x1024898", VA = "0x1024898")]
		public void UserAgreementButtonCallback()
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x1024A1C", Offset = "0x1024A1C", VA = "0x1024A1C")]
		public void PrivacyPolicyButtonCallback()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x1024BA0", Offset = "0x1024BA0", VA = "0x1024BA0")]
		public void CreditsButtonCallback()
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x1023AE0", Offset = "0x1023AE0", VA = "0x1023AE0")]
		public OptionsMenuBase()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x1024D24", Offset = "0x1024D24", VA = "0x1024D24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB889B0", Offset = "0xB889B0")]
		private void <Setup>b__2_0(AttentionLab.REST.Request request, Page page)
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class OptionsSoundMenu : OptionsMenuBase
	{
		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ArrowButtonSelectionBarValue _music;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ArrowButtonSelectionBarValue _sfx;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ArrowButtonSelectionList _voiceLanguage;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ArrowButtonSelectionList _subtitlesLanguage;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Toggle _subtitleToggle;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ArrowButtonSelectionColor _subtitleColor;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7AB20", Offset = "0xB7AB20")]
		[SerializeField]
		private SwitchButtonsPanel _subtitleSizePanel;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Button _smallSubtitlesButton;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Button _mediumSubtitlesButton;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Button _bigSubtitlesButton;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float DefaultMusicVolume;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float DefaultSFXVolume;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AttentionLab.Localization.Locale DefaultLanguage;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static bool DefaultSubtitles;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int DefaultSubtitleSize;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int DefaultSubtitleColor;

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x1024EC8", Offset = "0x1024EC8", VA = "0x1024EC8", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x102503C", Offset = "0x102503C", VA = "0x102503C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x1025080", Offset = "0x1025080", VA = "0x1025080", Slot = "10")]
		protected override void Setup()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x10258D0", Offset = "0x10258D0", VA = "0x10258D0")]
		private void OnMusicValueChange(float value)
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x102594C", Offset = "0x102594C", VA = "0x102594C")]
		private void OnSFXValueChange(float value)
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x10259C8", Offset = "0x10259C8", VA = "0x10259C8")]
		private void OnLanguageValueChange(int id)
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x1025ABC", Offset = "0x1025ABC", VA = "0x1025ABC")]
		private void OnVoiceLanguageValueChange(int id)
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x1025AC8", Offset = "0x1025AC8", VA = "0x1025AC8")]
		private void OnSubtitleLanguageValueChange(int id)
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x1025AD4", Offset = "0x1025AD4", VA = "0x1025AD4")]
		private void OnSubtitleColorChange(int id)
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x1025AE0", Offset = "0x1025AE0", VA = "0x1025AE0")]
		public void OnSubtitleSizeChanged(int id)
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x1025AEC", Offset = "0x1025AEC", VA = "0x1025AEC")]
		public void OnSubtitleEnabled(bool value)
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x102527C", Offset = "0x102527C", VA = "0x102527C")]
		private void SetupLanguageSelectors()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x10254C8", Offset = "0x10254C8", VA = "0x10254C8")]
		private void SetupMusicValueSelector()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x1025540", Offset = "0x1025540", VA = "0x1025540")]
		private void SetupSFXValueSelector()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x10257D0", Offset = "0x10257D0", VA = "0x10257D0")]
		private void SetupSubtitlesToggle()
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x10255B8", Offset = "0x10255B8", VA = "0x10255B8")]
		private void SetupSubtitleSizeSelector()
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x102568C", Offset = "0x102568C", VA = "0x102568C")]
		private void SetupSubtitlesColorSelector()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x1025B7C", Offset = "0x1025B7C", VA = "0x1025B7C", Slot = "11")]
		public override void RestoreOptionsButtonCallback()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x1025CDC", Offset = "0x1025CDC", VA = "0x1025CDC")]
		public OptionsSoundMenu()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class AvatarImageMenu : UIMenu
	{
		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int _avatarCount;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Avatar _avatarPrefab;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GridLayoutGroup _avatarGrid;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SwitchButtonsPanel _switchPanel;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _selectedAvatarId;

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x1057F3C", Offset = "0x1057F3C", VA = "0x1057F3C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x10580BC", Offset = "0x10580BC", VA = "0x10580BC", Slot = "8")]
		public override void BackButtonCallback()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x1057F64", Offset = "0x1057F64", VA = "0x1057F64")]
		private void PopulateAvatarGrid()
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x1057EF8", Offset = "0x1057EF8", VA = "0x1057EF8")]
		public void SelectAvatar(int id, Button button)
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x10581C8", Offset = "0x10581C8", VA = "0x10581C8")]
		public AvatarImageMenu()
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x10581D8", Offset = "0x10581D8", VA = "0x10581D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB889C0", Offset = "0xB889C0")]
		private void <BackButtonCallback>b__6_0(AttentionLab.REST.Request request)
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class EPIInfoMenu : UIMenu
	{
		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Text _bodyText;

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x105C578", Offset = "0x105C578", VA = "0x105C578", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x105C698", Offset = "0x105C698", VA = "0x105C698")]
		public EPIInfoMenu()
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x105C6A0", Offset = "0x105C6A0", VA = "0x105C6A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB889D0", Offset = "0xB889D0")]
		private void <Start>b__1_0(AttentionLab.REST.Request request, Page page)
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class RegisterBirthdayMenu : UIMenu
	{
		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UINavigationButton _forwardButton;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private InteractiveTextField _inputDay;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private InteractiveTextField _inputMonth;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private InteractiveTextField _inputYear;

		[Token(Token = "0x4001472")]
		private const int MIN_AGE = 10;

		[Token(Token = "0x4001473")]
		private const int MAX_AGE = 120;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _validDay;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _validMonth;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool _validYear;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UIProgressBar _progressBar;

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x1120BE8", Offset = "0x1120BE8", VA = "0x1120BE8", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x1120D3C", Offset = "0x1120D3C", VA = "0x1120D3C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x1120D7C", Offset = "0x1120D7C", VA = "0x1120D7C", Slot = "7")]
		protected override void KeyboardManager_Submit(KeyboardManager sender)
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x11213B4", Offset = "0x11213B4", VA = "0x11213B4")]
		private void GoToMonthField()
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x1121438", Offset = "0x1121438", VA = "0x1121438")]
		private void GoToYearField()
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x1120C84", Offset = "0x1120C84", VA = "0x1120C84")]
		private void SetupProgressBar()
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x1120FF0", Offset = "0x1120FF0", VA = "0x1120FF0")]
		public void ValidateDay()
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x1121128", Offset = "0x1121128", VA = "0x1121128")]
		public void ValidateMonth()
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x112118C", Offset = "0x112118C", VA = "0x112118C")]
		public void ValidateYear()
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x1120EF4", Offset = "0x1120EF4", VA = "0x1120EF4")]
		private void ClampDay()
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x1121054", Offset = "0x1121054", VA = "0x1121054")]
		private void ClampMonth()
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x11214BC", Offset = "0x11214BC", VA = "0x11214BC")]
		private void ClampYear()
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x1121674", Offset = "0x1121674", VA = "0x1121674")]
		private int GetMaxDay()
		{
			return default(int);
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x1121614", Offset = "0x1121614", VA = "0x1121614")]
		private int GetDay()
		{
			return default(int);
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x1121730", Offset = "0x1121730", VA = "0x1121730")]
		private int GetMonth()
		{
			return default(int);
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x1121790", Offset = "0x1121790", VA = "0x1121790")]
		private int GetYear()
		{
			return default(int);
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x11211E8", Offset = "0x11211E8", VA = "0x11211E8")]
		public void ForwardButtonCallback()
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x1120C14", Offset = "0x1120C14", VA = "0x1120C14")]
		private void CheckFormValidity()
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x11217F0", Offset = "0x11217F0", VA = "0x11217F0")]
		public RegisterBirthdayMenu()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class RegisterEducationMenu : UIMenu
	{
		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UINavigationButton _forwardButton;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _secondsToLockChoice;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _selectedEducationId;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UIProgressBar _progressBar;

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x11217F8", Offset = "0x11217F8", VA = "0x11217F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x1121804", Offset = "0x1121804", VA = "0x1121804", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x11218FC", Offset = "0x11218FC", VA = "0x11218FC", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x1121934", Offset = "0x1121934", VA = "0x1121934", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x1121844", Offset = "0x1121844", VA = "0x1121844")]
		private void SetupProgressBar()
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x1121A34", Offset = "0x1121A34", VA = "0x1121A34")]
		public void EducationSelected(int id)
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x1121AC8", Offset = "0x1121AC8", VA = "0x1121AC8")]
		public void ForwardButtonCallback()
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x1121B04", Offset = "0x1121B04", VA = "0x1121B04")]
		public RegisterEducationMenu()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class RegisterEmailMenu : UIMenu
	{
		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UINavigationButton _forwardButton;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private InteractiveTextField _inputEmail;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private InteractiveTextField _inputConfirmEmail;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _validEmail;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _validConfirmEmail;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string _email;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string _confirmEmail;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private UIProgressBar _progressBar;

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x1121B0C", Offset = "0x1121B0C", VA = "0x1121B0C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x1121B38", Offset = "0x1121B38", VA = "0x1121B38")]
		private void SetupProgressBar()
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x1121C58", Offset = "0x1121C58", VA = "0x1121C58", Slot = "7")]
		protected override void KeyboardManager_Submit(KeyboardManager sender)
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x1121F04", Offset = "0x1121F04", VA = "0x1121F04", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x1121F44", Offset = "0x1121F44", VA = "0x1121F44", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x1121FFC", Offset = "0x1121FFC", VA = "0x1121FFC")]
		public void ValidateEmail(string email)
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x112203C", Offset = "0x112203C", VA = "0x112203C")]
		public void ValidateConfirmEmail(string email)
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x1121D90", Offset = "0x1121D90", VA = "0x1121D90")]
		public void ForwardButtonCallback()
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x1121BF0", Offset = "0x1121BF0", VA = "0x1121BF0")]
		private void CheckFormValidity()
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x1122194", Offset = "0x1122194", VA = "0x1122194")]
		public RegisterEmailMenu()
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x112219C", Offset = "0x112219C", VA = "0x112219C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB889E0", Offset = "0xB889E0")]
		private void <ForwardButtonCallback>b__15_0(AttentionLab.REST.Request request)
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class RegisterFinalMenu : UIMenu
	{
		[Token(Token = "0x2000700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72CB4", Offset = "0xB72CB4")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RegisterFinalMenu <>4__this;

			[Token(Token = "0x4002A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string email;

			[Token(Token = "0x4002A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string password;

			[Token(Token = "0x4002A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<bool, ResponseCodeType, string, Mood> <>9__1;

			[Token(Token = "0x6002F1F")]
			[Address(RVA = "0x11229D4", Offset = "0x11229D4", VA = "0x11229D4")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002F20")]
			[Address(RVA = "0x1122EE4", Offset = "0x1122EE4", VA = "0x1122EE4")]
			internal void <JoinButtonCallback>b__0(AttentionLab.REST.Request request, AttentionLab.REST.Data.User user)
			{
			}

			[Token(Token = "0x6002F21")]
			[Address(RVA = "0x1123208", Offset = "0x1123208", VA = "0x1123208")]
			internal void <JoinButtonCallback>b__1(bool success, ResponseCodeType responseCode, string avatarID, Mood mood)
			{
			}
		}

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UIButton _joinButton;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _acceptedLegalDocuments;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _subscribeEmail;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UIProgressBar _progressBar;

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x1122328", Offset = "0x1122328", VA = "0x1122328", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x1122440", Offset = "0x1122440", VA = "0x1122440", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x1122494", Offset = "0x1122494", VA = "0x1122494", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x1122378", Offset = "0x1122378", VA = "0x1122378")]
		private void SetupProgressBar()
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x11224B8", Offset = "0x11224B8", VA = "0x11224B8")]
		public void ToggleLegalDocumentsRead(bool value)
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x112264C", Offset = "0x112264C", VA = "0x112264C")]
		public void ToggleEmailSubscription(bool value)
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x11227C4", Offset = "0x11227C4", VA = "0x11227C4")]
		public void JoinButtonCallback()
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x1122AC4", Offset = "0x1122AC4", VA = "0x1122AC4")]
		private void DestroyRegisterMenus()
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x1122E64", Offset = "0x1122E64", VA = "0x1122E64")]
		public void UAButtonCallback()
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x1122EA0", Offset = "0x1122EA0", VA = "0x1122EA0")]
		public void PPButtonCallback()
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x1122EDC", Offset = "0x1122EDC", VA = "0x1122EDC")]
		public RegisterFinalMenu()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class RegisterFirstNameMenu : UIMenu
	{
		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UINavigationButton _forwardButton;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UIProgressBar _progressBarPrefab;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _validName;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string _name;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private UIProgressBar _progressBar;

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x11235BC", Offset = "0x11235BC", VA = "0x11235BC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x11235E8", Offset = "0x11235E8", VA = "0x11235E8")]
		private void SetupProgressBar()
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x1123754", Offset = "0x1123754", VA = "0x1123754", Slot = "7")]
		protected override void KeyboardManager_Submit(KeyboardManager sender)
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x11237D8", Offset = "0x11237D8", VA = "0x11237D8", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x1123818", Offset = "0x1123818", VA = "0x1123818")]
		public void ValidateName(string name)
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x112379C", Offset = "0x112379C", VA = "0x112379C")]
		public void ForwardButtonCallback()
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x1123850", Offset = "0x1123850", VA = "0x1123850", Slot = "8")]
		public override void BackButtonCallback()
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x11236FC", Offset = "0x11236FC", VA = "0x11236FC")]
		private void CheckFormValidity()
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x1123AC4", Offset = "0x1123AC4", VA = "0x1123AC4")]
		public RegisterFirstNameMenu()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class RegisterGenderMenu : UIMenu
	{
		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UINavigationButton _forwardButton;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _secondsToLockChoice;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _genderId;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _genderSelected;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UIProgressBar _progressBar;

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x1123ACC", Offset = "0x1123ACC", VA = "0x1123ACC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x1123C08", Offset = "0x1123C08", VA = "0x1123C08", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x1123C48", Offset = "0x1123C48", VA = "0x1123C48", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x1123B50", Offset = "0x1123B50", VA = "0x1123B50")]
		private void SetupProgressBar()
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x1123CA4", Offset = "0x1123CA4", VA = "0x1123CA4")]
		public void GenderSelected(int id)
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x1123D2C", Offset = "0x1123D2C", VA = "0x1123D2C")]
		public void ForwardButtonCallback()
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x1123AF8", Offset = "0x1123AF8", VA = "0x1123AF8")]
		private void CheckFormValidity()
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x1123D68", Offset = "0x1123D68", VA = "0x1123D68")]
		public RegisterGenderMenu()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class RegisterJobMenu : UIMenu
	{
		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UINavigationButton _forwardButton;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _secondsToLockChoice;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _selectedJobId;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UIProgressBar _progressBar;

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x1123D70", Offset = "0x1123D70", VA = "0x1123D70")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x1123D7C", Offset = "0x1123D7C", VA = "0x1123D7C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x1123E74", Offset = "0x1123E74", VA = "0x1123E74", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x1123EAC", Offset = "0x1123EAC", VA = "0x1123EAC", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x1123DBC", Offset = "0x1123DBC", VA = "0x1123DBC")]
		private void SetupProgressBar()
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x1123F08", Offset = "0x1123F08", VA = "0x1123F08")]
		public void JobSelected(int id)
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x1123F9C", Offset = "0x1123F9C", VA = "0x1123F9C")]
		public void ForwardButtonCallback()
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x1123FD8", Offset = "0x1123FD8", VA = "0x1123FD8")]
		public RegisterJobMenu()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class RegisterLastNameMenu : UIMenu
	{
		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UINavigationButton _forwardButton;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _validName;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string _lastName;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UIProgressBar _progressBar;

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x1123FE0", Offset = "0x1123FE0", VA = "0x1123FE0", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x112400C", Offset = "0x112400C", VA = "0x112400C")]
		private void SetupProgressBar()
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x112411C", Offset = "0x112411C", VA = "0x112411C", Slot = "7")]
		protected override void KeyboardManager_Submit(KeyboardManager sender)
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x11241A0", Offset = "0x11241A0", VA = "0x11241A0", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x11241E0", Offset = "0x11241E0", VA = "0x11241E0")]
		public void ValidateName(string name)
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x1124164", Offset = "0x1124164", VA = "0x1124164")]
		public void ForwardButtonCallback()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x11240C4", Offset = "0x11240C4", VA = "0x11240C4")]
		private void CheckFormValidity()
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x1124218", Offset = "0x1124218", VA = "0x1124218")]
		public RegisterLastNameMenu()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class RegisterPasswordMenu : UIMenu
	{
		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UINavigationButton _forwardButton;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private InteractiveTextField _inputPassword;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private InteractiveTextField _inputConfirmPassword;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _passwordsMatch;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _validPassword;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool _validConfirmPassword;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private UIProgressBar _progressBar;

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x1124220", Offset = "0x1124220", VA = "0x1124220", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x11243D8", Offset = "0x11243D8", VA = "0x11243D8", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x1124474", Offset = "0x1124474", VA = "0x1124474", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x1124320", Offset = "0x1124320", VA = "0x1124320")]
		private void SetupProgressBar()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x1124508", Offset = "0x1124508", VA = "0x1124508", Slot = "7")]
		protected override void KeyboardManager_Submit(KeyboardManager sender)
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x112470C", Offset = "0x112470C", VA = "0x112470C")]
		public void ValidatePassword(string password)
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x1124774", Offset = "0x1124774", VA = "0x1124774")]
		public void ValidateConfirmPassword(string password)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x1124640", Offset = "0x1124640", VA = "0x1124640")]
		public void ForwardButtonCallback()
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x1124278", Offset = "0x1124278", VA = "0x1124278")]
		private void CheckFormValidity()
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x11247B4", Offset = "0x11247B4", VA = "0x11247B4")]
		public RegisterPasswordMenu()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class SessionStatisticsMenu : UIMenu
	{
		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string GameTypeParameter;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SessionParameter;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Text _nameLabel;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image _gameImage;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image _categoryIcon;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GraphHolderDataSetter _graphHolderData;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ValueProgressionCircle _level;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ValueProgressionCircle _score;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _accessibilityContainer;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private HorizontalLayoutGroup _accessibilityIconHolder;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AccessibilityIcon _accessibilityIconPrefab;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private AttentionLab.Enums.GameType _gameType;

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x1125554", Offset = "0x1125554", VA = "0x1125554", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x1125580", Offset = "0x1125580", VA = "0x1125580", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x1125598", Offset = "0x1125598", VA = "0x1125598", Slot = "9")]
		public override void Refresh()
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x1125798", Offset = "0x1125798", VA = "0x1125798")]
		private void SetupGameInfo(AttentionLab.Enums.GameType gameType)
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x1125D98", Offset = "0x1125D98", VA = "0x1125D98")]
		private void SetupGameStats(int level, int score)
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x1125E80", Offset = "0x1125E80", VA = "0x1125E80")]
		private void SetupGraph(List<SessionMetaScoresNode> scores)
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x112609C", Offset = "0x112609C", VA = "0x112609C", Slot = "8")]
		public override void BackButtonCallback()
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x1126120", Offset = "0x1126120", VA = "0x1126120")]
		public void PlayAgainButtonCallback()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x1126174", Offset = "0x1126174", VA = "0x1126174")]
		public SessionStatisticsMenu()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class StatisticsCategoriesMenu : UIMenu
	{
		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ValueProgressionCircle _spatialOrientationValue;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ValueProgressionCircle _memoryValue;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ValueProgressionCircle _attentionValue;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ValueProgressionCircle _flexibilityValue;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ValueProgressionCircle _problemSolvingValue;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ValueProgressionCircle _motorSkillsValue;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ValueProgressionCircle _processingValue;

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x1126428", Offset = "0x1126428", VA = "0x1126428", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x1126684", Offset = "0x1126684", VA = "0x1126684", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x112644C", Offset = "0x112644C", VA = "0x112644C")]
		private void Setup()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x11266BC", Offset = "0x11266BC", VA = "0x11266BC")]
		public void SpatialOrientationButtonCallback()
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x11268EC", Offset = "0x11268EC", VA = "0x11268EC")]
		public void MemoryButtonCallback()
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x11268F4", Offset = "0x11268F4", VA = "0x11268F4")]
		public void AttentionButtonCallback()
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x11268FC", Offset = "0x11268FC", VA = "0x11268FC")]
		public void FlexibilityButtonCallback()
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x1126904", Offset = "0x1126904", VA = "0x1126904")]
		public void ProblemSolvingButtonCallback()
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x112690C", Offset = "0x112690C", VA = "0x112690C")]
		public void MotorSkillsButtonCallback()
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x1126914", Offset = "0x1126914", VA = "0x1126914")]
		public void ProcessingButtonCallback()
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x11266C4", Offset = "0x11266C4", VA = "0x11266C4")]
		private void GoToSingleCategoryMenu(CategoryType categoryType)
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x112691C", Offset = "0x112691C", VA = "0x112691C")]
		public StatisticsCategoriesMenu()
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x1126924", Offset = "0x1126924", VA = "0x1126924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB889F0", Offset = "0xB889F0")]
		private void <Setup>b__9_0(CategoriesStats stats)
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class StatisticsGamesEntryButton : MonoBehaviour
	{
		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _name;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ValueProgressionCircle _valueProgressionCircle;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AttentionLab.Enums.GameType _gameType;

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x1126B78", Offset = "0x1126B78", VA = "0x1126B78")]
		public void Setup(AttentionLab.Enums.GameType gameType, int value)
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x1126C50", Offset = "0x1126C50", VA = "0x1126C50")]
		public void ButtonCallback()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x1126E78", Offset = "0x1126E78", VA = "0x1126E78")]
		public StatisticsGamesEntryButton()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class StatisticsGamesMenu : UIMenu
	{
		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private StatisticsGamesEntryButton _entryButtonPrefab;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GridLayoutGroup _statsGrid;

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x1126E80", Offset = "0x1126E80", VA = "0x1126E80", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x1127208", Offset = "0x1127208", VA = "0x1127208", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x1126EA4", Offset = "0x1126EA4", VA = "0x1126EA4")]
		private void Setup()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x1127240", Offset = "0x1127240", VA = "0x1127240")]
		private void AddGameEntry(AttentionLab.Enums.GameType gameType, int value)
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x11272F4", Offset = "0x11272F4", VA = "0x11272F4")]
		public StatisticsGamesMenu()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x11272FC", Offset = "0x11272FC", VA = "0x11272FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88A00", Offset = "0xB88A00")]
		private void <Setup>b__4_0(GamesStats stats)
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class StatisticsGeneralMenu : UIMenu
	{
		[Token(Token = "0x2000701")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72CC4", Offset = "0xB72CC4")]
		private sealed class <SelectFilter>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StatisticsGeneralMenu <>4__this;

			[Token(Token = "0x17000547")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F25")]
				[Address(RVA = "0x11284E0", Offset = "0x11284E0", VA = "0x11284E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000548")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F27")]
				[Address(RVA = "0x112854C", Offset = "0x112854C", VA = "0x112854C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F22")]
			[Address(RVA = "0x1127910", Offset = "0x1127910", VA = "0x1127910")]
			[DebuggerHidden]
			public <SelectFilter>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002F23")]
			[Address(RVA = "0x11283E8", Offset = "0x11283E8", VA = "0x11283E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F24")]
			[Address(RVA = "0x11283EC", Offset = "0x11283EC", VA = "0x11283EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F26")]
			[Address(RVA = "0x11284E8", Offset = "0x11284E8", VA = "0x11284E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MinWodsForStatsParameter;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GraphHolderDataSetter _graphHolder;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button _last7Button;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ValuePieChart _moodPieChart;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ValuePieChart _sleepPieChart;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ValueProgression _sessionsCompleted;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ValueProgressionCircle _highscore;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private HoverHandler _lockedHover;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FilterStatMenu _filterStatMenu;

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x11275E4", Offset = "0x11275E4", VA = "0x11275E4", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x1127864", Offset = "0x1127864", VA = "0x1127864", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x1127608", Offset = "0x1127608", VA = "0x1127608")]
		private void Setup()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x112789C", Offset = "0x112789C", VA = "0x112789C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88A10", Offset = "0xB88A10")]
		private IEnumerator SelectFilter()
		{
			return null;
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x112793C", Offset = "0x112793C", VA = "0x112793C")]
		public StatisticsGeneralMenu()
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x11279A0", Offset = "0x11279A0", VA = "0x11279A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88A74", Offset = "0xB88A74")]
		private void <Setup>b__11_0(AttentionLab.REST.Data.UserStats stats)
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class StatisticsSingleCategoryMenu : UIMenu
	{
		[Token(Token = "0x2000702")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72CD4", Offset = "0xB72CD4")]
		private sealed class <SelectFilter>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StatisticsSingleCategoryMenu <>4__this;

			[Token(Token = "0x17000549")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F2B")]
				[Address(RVA = "0x1129104", Offset = "0x1129104", VA = "0x1129104", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F2D")]
				[Address(RVA = "0x1129170", Offset = "0x1129170", VA = "0x1129170", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F28")]
			[Address(RVA = "0x112890C", Offset = "0x112890C", VA = "0x112890C")]
			[DebuggerHidden]
			public <SelectFilter>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002F29")]
			[Address(RVA = "0x1129008", Offset = "0x1129008", VA = "0x1129008", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F2A")]
			[Address(RVA = "0x112900C", Offset = "0x112900C", VA = "0x112900C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F2C")]
			[Address(RVA = "0x112910C", Offset = "0x112910C", VA = "0x112910C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string CategoryTypeParameter;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Text _title;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Text _categoryScoreLabel;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ValueProgressionCircle _categoryScore;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ValueProgressionCircle _highScore;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ValueProgression _gamesPlayed;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GraphHolderDataSetter _graphHolder;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Button _last7Button;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CategoryType _categoryType;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FilterStatMenu _filterStatMenu;

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x1128554", Offset = "0x1128554", VA = "0x1128554", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x1128580", Offset = "0x1128580", VA = "0x1128580", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x11285C0", Offset = "0x11285C0", VA = "0x11285C0", Slot = "9")]
		public override void Refresh()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x1128898", Offset = "0x1128898", VA = "0x1128898")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88A84", Offset = "0xB88A84")]
		private IEnumerator SelectFilter()
		{
			return null;
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x1128938", Offset = "0x1128938", VA = "0x1128938")]
		public StatisticsSingleCategoryMenu()
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x112899C", Offset = "0x112899C", VA = "0x112899C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88AE8", Offset = "0xB88AE8")]
		private void <Refresh>b__12_0(CategoryType categoryType, CategoryStats stats)
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class StatisticsSingleGameMenu : UIMenu
	{
		[Token(Token = "0x2000703")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72CE4", Offset = "0xB72CE4")]
		private sealed class <SelectFilter>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StatisticsSingleGameMenu <>4__this;

			[Token(Token = "0x1700054B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F31")]
				[Address(RVA = "0x1129DA0", Offset = "0x1129DA0", VA = "0x1129DA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F33")]
				[Address(RVA = "0x1129E0C", Offset = "0x1129E0C", VA = "0x1129E0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F2E")]
			[Address(RVA = "0x1129548", Offset = "0x1129548", VA = "0x1129548")]
			[DebuggerHidden]
			public <SelectFilter>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002F2F")]
			[Address(RVA = "0x1129CA4", Offset = "0x1129CA4", VA = "0x1129CA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F30")]
			[Address(RVA = "0x1129CA8", Offset = "0x1129CA8", VA = "0x1129CA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F32")]
			[Address(RVA = "0x1129DA8", Offset = "0x1129DA8", VA = "0x1129DA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string GameTypeParameter;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Text _title;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ValueProgressionCircle _gameScore;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ValueProgressionCircle _highScore;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ValueProgressionCircle _level;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GraphHolderDataSetter _graphHolder;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Button _last7Button;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AttentionLab.Enums.GameType _gameType;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected bool _hasFilters;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FilterStatMenu _filterStatMenu;

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x1129178", Offset = "0x1129178", VA = "0x1129178", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x11291AC", Offset = "0x11291AC", VA = "0x11291AC", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x11291EC", Offset = "0x11291EC", VA = "0x11291EC", Slot = "9")]
		public override void Refresh()
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x11294D4", Offset = "0x11294D4", VA = "0x11294D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88AF8", Offset = "0xB88AF8")]
		private IEnumerator SelectFilter()
		{
			return null;
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x1129574", Offset = "0x1129574", VA = "0x1129574")]
		public StatisticsSingleGameMenu()
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x11295D8", Offset = "0x11295D8", VA = "0x11295D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88B5C", Offset = "0xB88B5C")]
		private void <Refresh>b__12_0(AttentionLab.Enums.GameType gameType, GameStats stats)
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class StatisticsSingleGameVariantMenu : StatisticsSingleGameMenu
	{
		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x1129E14", Offset = "0x1129E14", VA = "0x1129E14", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x1129E58", Offset = "0x1129E58", VA = "0x1129E58")]
		public StatisticsSingleGameVariantMenu()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class StatisticsWODMenu : UIMenu
	{
		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ValueProgression _totalWorkouts;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ValueProgression _completedWorkouts;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ValueProgressionCircle _highScore;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GraphHolderDataSetter _graphHolder;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button _last7Button;

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x1129EC0", Offset = "0x1129EC0", VA = "0x1129EC0", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x112A00C", Offset = "0x112A00C", VA = "0x112A00C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x1129EE4", Offset = "0x1129EE4", VA = "0x1129EE4")]
		private void Setup()
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x112A044", Offset = "0x112A044", VA = "0x112A044")]
		public StatisticsWODMenu()
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x112A04C", Offset = "0x112A04C", VA = "0x112A04C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88B6C", Offset = "0xB88B6C")]
		private void <Setup>b__7_0(WodStats stats)
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class WorkoutStatisticsMenu : UIMenu
	{
		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string GameTypeParameter;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string WODParameter;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string SessionParameter;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Text _nameLabel;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image _gameImage;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image _categoryIcon;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GraphHolderDataSetter _graphHolderData;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ValueProgression _timesPlayed;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ValueProgressionCircle _level;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ValueProgressionCircle _score;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject _accessibilityContainer;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private HorizontalLayoutGroup _accessibilityIconHolder;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AccessibilityIcon _accessibilityIconPrefab;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Button _nextGameButton;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private AttentionLab.Enums.GameType _gameType;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private AttentionLab.Enums.GameType _nextGameType;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Wod _wod;

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xD2FA14", Offset = "0xD2FA14", VA = "0xD2FA14", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xD2FA44", Offset = "0xD2FA44", VA = "0xD2FA44", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xD2FA5C", Offset = "0xD2FA5C", VA = "0xD2FA5C", Slot = "9")]
		public override void Refresh()
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xD2FC98", Offset = "0xD2FC98", VA = "0xD2FC98")]
		private void SetupGameInfo(AttentionLab.Enums.GameType gameType)
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xD3036C", Offset = "0xD3036C", VA = "0xD3036C")]
		private void SetupGameStats(int level, int score)
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xD304E4", Offset = "0xD304E4", VA = "0xD304E4")]
		private void SetupGraph(List<SessionMetaScoresNode> scores)
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xD30774", Offset = "0xD30774", VA = "0xD30774", Slot = "8")]
		public override void BackButtonCallback()
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xD30798", Offset = "0xD30798", VA = "0xD30798")]
		public void NextGameButtonCallback()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xD307EC", Offset = "0xD307EC", VA = "0xD307EC")]
		public WorkoutStatisticsMenu()
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xD3087C", Offset = "0xD3087C", VA = "0xD3087C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88B7C", Offset = "0xB88B7C")]
		private void <SetupGameStats>b__21_0(AttentionLab.Enums.GameType gameType, GameStats stats)
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class ProfileMenu : UIMenu
	{
		[Token(Token = "0x2000704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72CF4", Offset = "0xB72CF4")]
		private sealed class <AnimateCategoryBar>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image bar;

			[Token(Token = "0x4002A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float value;

			[Token(Token = "0x4002A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <fill>5__2;

			[Token(Token = "0x4002A4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <i>5__3;

			[Token(Token = "0x1700054D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F37")]
				[Address(RVA = "0x1120118", Offset = "0x1120118", VA = "0x1120118", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F39")]
				[Address(RVA = "0x1120184", Offset = "0x1120184", VA = "0x1120184", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F34")]
			[Address(RVA = "0x111F198", Offset = "0x111F198", VA = "0x111F198")]
			[DebuggerHidden]
			public <AnimateCategoryBar>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6002F35")]
			[Address(RVA = "0x111FDF8", Offset = "0x111FDF8", VA = "0x111FDF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F36")]
			[Address(RVA = "0x111FDFC", Offset = "0x111FDFC", VA = "0x111FDFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F38")]
			[Address(RVA = "0x1120120", Offset = "0x1120120", VA = "0x1120120", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000705")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72D04", Offset = "0xB72D04")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static GeneralDialog.OnDialogButton <>9__32_0;

			[Token(Token = "0x6002F3B")]
			[Address(RVA = "0x111FDCC", Offset = "0x111FDCC", VA = "0x111FDCC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F3C")]
			[Address(RVA = "0x111FDD4", Offset = "0x111FDD4", VA = "0x111FDD4")]
			internal void <LogoutButtonCallback>b__32_0()
			{
			}
		}

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MoodTypeParameter;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SleepTypeParameter;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string AvatarIdParameter;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Avatar _avatar;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image _moodImage;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image _sleepImage;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text _nameLabel;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LocalizedLabel _moodLabel;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Text _sleepLabel;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private EPIProgressionCircle _epiProgression;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7B11C", Offset = "0xB7B11C")]
		[SerializeField]
		private Image _spatialOrientationBar;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Image _memoryBar;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Image _attentionBar;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Image _flexibilityBar;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Image _problemSolvingBar;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Image _motorSkillsBar;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Image _processingBar;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int fetchCount;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int _avatarId;

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x111E49C", Offset = "0x111E49C", VA = "0x111E49C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x111E68C", Offset = "0x111E68C", VA = "0x111E68C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x111E4C0", Offset = "0x111E4C0", VA = "0x111E4C0")]
		private void Setup()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x111E854", Offset = "0x111E854", VA = "0x111E854")]
		private void SetupMood(EMoodType moodType)
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x111EAAC", Offset = "0x111EAAC", VA = "0x111EAAC")]
		private void SetupSleep(ServerRequestsEnums.ESleepType sleepType)
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x111E834", Offset = "0x111E834", VA = "0x111E834")]
		private void SetupAvatar(int id)
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x111EC4C", Offset = "0x111EC4C", VA = "0x111EC4C")]
		private void SetupEPI()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x111ED44", Offset = "0x111ED44", VA = "0x111ED44")]
		private void SetupCategoryScores()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x111F004", Offset = "0x111F004", VA = "0x111F004")]
		private void SetCategoryScoreHover(CategoryType categoryType, int score, HoverHandler hover)
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x111EE78", Offset = "0x111EE78", VA = "0x111EE78")]
		private void SetupCategoryScoreMaterial(Image image, CategoryType categoryType)
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x111F114", Offset = "0x111F114", VA = "0x111F114")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88B8C", Offset = "0xB88B8C")]
		private IEnumerator AnimateCategoryBar(Image bar, float value)
		{
			return null;
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x111F1C4", Offset = "0x111F1C4", VA = "0x111F1C4")]
		public void AvatarButtonCallback()
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x111F348", Offset = "0x111F348", VA = "0x111F348")]
		public void EPIInfoButtonCallback()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x111F4CC", Offset = "0x111F4CC", VA = "0x111F4CC")]
		public void LogoutButtonCallback()
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x111F684", Offset = "0x111F684", VA = "0x111F684")]
		public void EditProfileButtonCallback()
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x111F784", Offset = "0x111F784", VA = "0x111F784")]
		public ProfileMenu()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x111F81C", Offset = "0x111F81C", VA = "0x111F81C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88BF0", Offset = "0xB88BF0")]
		private void <SetupEPI>b__25_0(UserEpi stat)
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x111F9D8", Offset = "0x111F9D8", VA = "0x111F9D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88C00", Offset = "0xB88C00")]
		private void <SetupCategoryScores>b__26_0(CategoriesStats stat)
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class FilterGameListAccessibilityEntry : MonoBehaviour
	{
		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _label;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Toggle _toggle;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AccessibilityType _accessibilityType;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FilterGameMenu _filterGameMenu;

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x105CB70", Offset = "0x105CB70", VA = "0x105CB70")]
		public void Setup(AccessibilityType accessibilityType, FilterGameMenu filterGameMenu)
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x105CBD4", Offset = "0x105CBD4", VA = "0x105CBD4")]
		public void ToggleCallback(bool value)
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x105CD40", Offset = "0x105CD40", VA = "0x105CD40")]
		public void Select(bool value)
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x105CD60", Offset = "0x105CD60", VA = "0x105CD60")]
		public FilterGameListAccessibilityEntry()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class FilterGameListCategoryEntry : MonoBehaviour
	{
		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _label;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Toggle _toggle;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CategoryType _categoryType;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FilterGameMenu _filterGameMenu;

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x105CD68", Offset = "0x105CD68", VA = "0x105CD68")]
		public void Setup(CategoryType categoryType, FilterGameMenu filterGameMenu)
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x105CDCC", Offset = "0x105CDCC", VA = "0x105CDCC")]
		public void ToggleCallback(bool value)
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x105CF38", Offset = "0x105CF38", VA = "0x105CF38")]
		public void Select(bool value)
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x105CF58", Offset = "0x105CF58", VA = "0x105CF58")]
		public FilterGameListCategoryEntry()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class FilterGameMenu : UIMenu
	{
		[Token(Token = "0x2000706")]
		private enum GameFilterType
		{
			[Token(Token = "0x4002A4E")]
			AllGames,
			[Token(Token = "0x4002A4F")]
			NewGames,
			[Token(Token = "0x4002A50")]
			UpcomingGames
		}

		[Token(Token = "0x2000707")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72D14", Offset = "0xB72D14")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4002A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> categories;

			[Token(Token = "0x4002A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<string> accessabilities;

			[Token(Token = "0x4002A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<GameLibraryEntryButton> selectedCategories;

			[Token(Token = "0x4002A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<GameLibraryEntryButton> selectedAccessibilities;

			[Token(Token = "0x6002F3D")]
			[Address(RVA = "0x100D834", Offset = "0x100D834", VA = "0x100D834")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6002F3E")]
			[Address(RVA = "0x100D83C", Offset = "0x100D83C", VA = "0x100D83C")]
			internal bool <UpdateFilterOnGameButtons>b__5(GameLibraryEntryButton x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002F3F")]
			[Address(RVA = "0x100D8C8", Offset = "0x100D8C8", VA = "0x100D8C8")]
			internal bool <UpdateFilterOnGameButtons>b__6(GameLibraryEntryButton x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002F40")]
			[Address(RVA = "0x100D944", Offset = "0x100D944", VA = "0x100D944")]
			internal bool <UpdateFilterOnGameButtons>b__7(GameLibraryEntryButton x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72D24", Offset = "0xB72D24")]
		private sealed class <>c__DisplayClass27_1
		{
			[Token(Token = "0x4002A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string newestRelease;

			[Token(Token = "0x6002F41")]
			[Address(RVA = "0x100D9D8", Offset = "0x100D9D8", VA = "0x100D9D8")]
			public <>c__DisplayClass27_1()
			{
			}

			[Token(Token = "0x6002F42")]
			[Address(RVA = "0x100D9E0", Offset = "0x100D9E0", VA = "0x100D9E0")]
			internal bool <UpdateFilterOnGameButtons>b__9(GameLibraryEntryButton x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000709")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72D34", Offset = "0xB72D34")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<CategoryType, string> <>9__27_0;

			[Token(Token = "0x4002A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<AccessibilityType, string> <>9__27_1;

			[Token(Token = "0x4002A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<GameLibraryEntryButton, string> <>9__27_2;

			[Token(Token = "0x4002A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<AccessibilityType, string> <>9__27_3;

			[Token(Token = "0x4002A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<GameLibraryEntryButton, string> <>9__27_8;

			[Token(Token = "0x4002A5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<GameLibraryEntryButton, bool> <>9__27_4;

			[Token(Token = "0x6002F44")]
			[Address(RVA = "0x100D77C", Offset = "0x100D77C", VA = "0x100D77C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F45")]
			[Address(RVA = "0x100D784", Offset = "0x100D784", VA = "0x100D784")]
			internal string <UpdateFilterOnGameButtons>b__27_0(CategoryType x)
			{
				return null;
			}

			[Token(Token = "0x6002F46")]
			[Address(RVA = "0x100D790", Offset = "0x100D790", VA = "0x100D790")]
			internal string <UpdateFilterOnGameButtons>b__27_1(AccessibilityType x)
			{
				return null;
			}

			[Token(Token = "0x6002F47")]
			[Address(RVA = "0x100D79C", Offset = "0x100D79C", VA = "0x100D79C")]
			internal string <UpdateFilterOnGameButtons>b__27_2(GameLibraryEntryButton x)
			{
				return null;
			}

			[Token(Token = "0x6002F48")]
			[Address(RVA = "0x100D7F0", Offset = "0x100D7F0", VA = "0x100D7F0")]
			internal string <UpdateFilterOnGameButtons>b__27_3(AccessibilityType x)
			{
				return null;
			}

			[Token(Token = "0x6002F49")]
			[Address(RVA = "0x100D7FC", Offset = "0x100D7FC", VA = "0x100D7FC")]
			internal string <UpdateFilterOnGameButtons>b__27_8(GameLibraryEntryButton x)
			{
				return null;
			}

			[Token(Token = "0x6002F4A")]
			[Address(RVA = "0x100D818", Offset = "0x100D818", VA = "0x100D818")]
			internal bool <UpdateFilterOnGameButtons>b__27_4(GameLibraryEntryButton x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Toggle _allGamesToggle;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle _newReleasesToggle;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Toggle _upcomingToggle;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _categoryToggleHolder;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _accessibilityToggleHolder;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private FilterGameListCategoryEntry _categoryEntryPrefab;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private FilterGameListAccessibilityEntry _accessibilityEntryPrefab;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<CategoryType> _categoriesSelected;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<AccessibilityType> _accessibilityTypesSelected;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameLibraryList _gameLibrary;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameFilterType _gameFilterType;

		[Token(Token = "0x1700026E")]
		private GameLibraryList GameLibrary
		{
			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0x105CF60", Offset = "0x105CF60", VA = "0x105CF60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x105D014", Offset = "0x105D014", VA = "0x105D014", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x105D46C", Offset = "0x105D46C", VA = "0x105D46C", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x105D05C", Offset = "0x105D05C", VA = "0x105D05C")]
		private void SetupCategoryFilters()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x105D264", Offset = "0x105D264", VA = "0x105D264")]
		private void SetupAccessibilityFilters()
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x105D73C", Offset = "0x105D73C", VA = "0x105D73C")]
		public void AllGamesToggleCallback(bool value)
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x105E020", Offset = "0x105E020", VA = "0x105E020")]
		public void NewReleasesToggleCallback(bool value)
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x105E1A0", Offset = "0x105E1A0", VA = "0x105E1A0")]
		public void UpcomingToggleCallback(bool value)
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x105E320", Offset = "0x105E320", VA = "0x105E320")]
		public void OnGameLibraryOpen()
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x105D494", Offset = "0x105D494", VA = "0x105D494")]
		public void DeselectFilters()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x105CDF8", Offset = "0x105CDF8", VA = "0x105CDF8")]
		public void AddCategoryFilter(CategoryType category)
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x105CE98", Offset = "0x105CE98", VA = "0x105CE98")]
		public void RemoveCategoryFilter(CategoryType category)
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x105CC00", Offset = "0x105CC00", VA = "0x105CC00")]
		public void AddAccessibilityFilter(AccessibilityType accessibilityType)
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x105CCA0", Offset = "0x105CCA0", VA = "0x105CCA0")]
		public void RemoveAccessibilityFilter(AccessibilityType accessibilityType)
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x105D8B8", Offset = "0x105D8B8", VA = "0x105D8B8")]
		private void UpdateFilterOnGameButtons()
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x105E324", Offset = "0x105E324", VA = "0x105E324")]
		public FilterGameMenu()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class FilterStatListCategoryEntry : MonoBehaviour
	{
		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _label;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Toggle _toggle;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CategoryType _categoryType;

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x100DA08", Offset = "0x100DA08", VA = "0x100DA08")]
		public void Setup(CategoryType categoryType, ToggleGroup toggleGroup)
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x100DA78", Offset = "0x100DA78", VA = "0x100DA78")]
		public void ToggleCallback(bool value)
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x100DCA8", Offset = "0x100DCA8", VA = "0x100DCA8")]
		public void ToggleCategory(CategoryType category)
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x100DCD4", Offset = "0x100DCD4", VA = "0x100DCD4")]
		public FilterStatListCategoryEntry()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class FilterStatListGameEntry : MonoBehaviour
	{
		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _label;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Toggle _toggle;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AttentionLab.Enums.GameType _gameType;

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x100DCDC", Offset = "0x100DCDC", VA = "0x100DCDC")]
		public void Setup(AttentionLab.Enums.GameType categoryType, ToggleGroup toggleGroup)
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x100DD94", Offset = "0x100DD94", VA = "0x100DD94")]
		public void ToggleCallback(bool value)
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x100DFC4", Offset = "0x100DFC4", VA = "0x100DFC4")]
		public void ToggleGame(AttentionLab.Enums.GameType game)
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x100DFF0", Offset = "0x100DFF0", VA = "0x100DFF0")]
		public FilterStatListGameEntry()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class FilterStatMenu : UIMenu
	{
		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Toggle _generalToggle;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle _categoryToggle;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Toggle _gameToggle;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle _workoutToggle;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ToggleGroup _categoryFilters;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ToggleGroup _gameFilters;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _categoryToggleHolder;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject _gameToggleHolder;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private FilterStatListCategoryEntry _categoryEntryPrefab;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private FilterStatListGameEntry _gameEntryPrefab;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ContentSizeFitter _filterListFitter;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _gameListLoaded;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool _categoryListLoaded;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private AttentionLab.Enums.GameType _delayedGameFilterToSelect;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CategoryType _delayedCategoryFilterToSelect;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private CategoryType _categorySelected;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private AttentionLab.Enums.GameType _gameSelected;

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x100DFF8", Offset = "0x100DFF8", VA = "0x100DFF8", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x100E668", Offset = "0x100E668", VA = "0x100E668")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x100EBE0", Offset = "0x100EBE0", VA = "0x100EBE0", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x100E6C0", Offset = "0x100E6C0", VA = "0x100E6C0")]
		private bool ShouldSwitchToCategoriesStatistics()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x100E950", Offset = "0x100E950", VA = "0x100E950")]
		private bool ShouldSwitchToGamesStatistics()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x100E080", Offset = "0x100E080", VA = "0x100E080")]
		private void SetupCategoryFilters()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x100E2A4", Offset = "0x100E2A4", VA = "0x100E2A4")]
		private void SetupGamesFilters()
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x100EEB8", Offset = "0x100EEB8", VA = "0x100EEB8")]
		public void ClearFilters()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x100F02C", Offset = "0x100F02C", VA = "0x100F02C")]
		public void GeneralToggleCallback(bool value)
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x100E768", Offset = "0x100E768", VA = "0x100E768")]
		public void CategoryToggleCallback(bool value)
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x100E9F8", Offset = "0x100E9F8", VA = "0x100E9F8")]
		public void GamesToggleCallback(bool value)
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x100F200", Offset = "0x100F200", VA = "0x100F200")]
		public void WorkoutToggleCallback(bool value)
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x100F3D4", Offset = "0x100F3D4", VA = "0x100F3D4")]
		public void OnGeneralStatsOpen()
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x100EC58", Offset = "0x100EC58", VA = "0x100EC58")]
		public void OnCategoryStatsOpen(CategoryType categoryType)
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x100ED88", Offset = "0x100ED88", VA = "0x100ED88")]
		public void OnGameStatsOpen(AttentionLab.Enums.GameType gameType)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x100EC08", Offset = "0x100EC08", VA = "0x100EC08")]
		private void DeselectFilters()
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x100F484", Offset = "0x100F484", VA = "0x100F484")]
		public FilterStatMenu()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class NewsMenu : UIMenu
	{
		[Token(Token = "0x200070A")]
		private struct SingleNews
		{
			[Token(Token = "0x4002A5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string title;

			[Token(Token = "0x4002A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public DateTime date;

			[Token(Token = "0x4002A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Texture2D image;

			[Token(Token = "0x4002A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string body;
		}

		[Token(Token = "0x200070B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72D44", Offset = "0xB72D44")]
		private sealed class <LoadImageFromInternet>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4002A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NewsMenu <>4__this;

			[Token(Token = "0x4002A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x1700054F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F4E")]
				[Address(RVA = "0x1023888", Offset = "0x1023888", VA = "0x1023888", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000550")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F50")]
				[Address(RVA = "0x10238F4", Offset = "0x10238F4", VA = "0x10238F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F4B")]
			[Address(RVA = "0x1023484", Offset = "0x1023484", VA = "0x1023484")]
			[DebuggerHidden]
			public <LoadImageFromInternet>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002F4C")]
			[Address(RVA = "0x10236EC", Offset = "0x10236EC", VA = "0x10236EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F4D")]
			[Address(RVA = "0x10236F0", Offset = "0x10236F0", VA = "0x10236F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F4F")]
			[Address(RVA = "0x1023890", Offset = "0x1023890", VA = "0x1023890", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _previousButton;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button _nextButton;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Text _newsTitle;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text _newsDate;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RawImage _newsImage;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Text _newsBody;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currentNewsIndex;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<News> _news;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _imageFetchCoroutine;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _finishedSetup;

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x1023028", Offset = "0x1023028", VA = "0x1023028", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x1023188", Offset = "0x1023188", VA = "0x1023188", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x10231CC", Offset = "0x10231CC", VA = "0x10231CC")]
		public void PreviousNews()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x102337C", Offset = "0x102337C", VA = "0x102337C")]
		public void NextNews()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x1023094", Offset = "0x1023094", VA = "0x1023094")]
		private void FetchNews()
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x1023248", Offset = "0x1023248", VA = "0x1023248")]
		private void ShowNews(int index)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x1023404", Offset = "0x1023404", VA = "0x1023404")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88C10", Offset = "0xB88C10")]
		private IEnumerator LoadImageFromInternet(string url)
		{
			return null;
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x10234B0", Offset = "0x10234B0", VA = "0x10234B0")]
		public NewsMenu()
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x1023528", Offset = "0x1023528", VA = "0x1023528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88C74", Offset = "0xB88C74")]
		private void <FetchNews>b__15_0(AttentionLab.REST.Request request, List<News> news)
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class QuickStatsMenu : UIMenu
	{
		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string GameTypeParameter;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Text _title;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GraphHolderDataSetter _graphHolder;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button _last7Button;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AttentionLab.Enums.GameType _gameType;

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x112018C", Offset = "0x112018C", VA = "0x112018C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x1120434", Offset = "0x1120434", VA = "0x1120434", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x11201B0", Offset = "0x11201B0", VA = "0x11201B0")]
		private void Setup()
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x112046C", Offset = "0x112046C", VA = "0x112046C")]
		public void MoreStatisticsButtonCallback()
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x112057C", Offset = "0x112057C", VA = "0x112057C")]
		public QuickStatsMenu()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x11205E0", Offset = "0x11205E0", VA = "0x11205E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88C84", Offset = "0xB88C84")]
		private void <Setup>b__7_0(AttentionLab.Enums.GameType gameType, GameStats stats)
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class UIMenu : MonoBehaviour
	{
		[Token(Token = "0x200070C")]
		public class SkeletonScreen
		{
			[Token(Token = "0x20008F5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73E04", Offset = "0xB73E04")]
			private sealed class <SetOpacityCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4003055")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4003056")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4003057")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public SkeletonScreen <>4__this;

				[Token(Token = "0x4003058")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public float startOpacity;

				[Token(Token = "0x4003059")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				public float endOpacity;

				[Token(Token = "0x400305A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public float time;

				[Token(Token = "0x400305B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				public Action callback;

				[Token(Token = "0x400305C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private float <timer>5__2;

				[Token(Token = "0x1700063C")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60035A7")]
					[Address(RVA = "0x1134BAC", Offset = "0x1134BAC", VA = "0x1134BAC", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700063D")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60035A9")]
					[Address(RVA = "0x1134C18", Offset = "0x1134C18", VA = "0x1134C18", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60035A4")]
				[Address(RVA = "0x11349B8", Offset = "0x11349B8", VA = "0x11349B8")]
				[DebuggerHidden]
				public <SetOpacityCoroutine>d__5(int <>1__state)
				{
				}

				[Token(Token = "0x60035A5")]
				[Address(RVA = "0x1134A64", Offset = "0x1134A64", VA = "0x1134A64", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60035A6")]
				[Address(RVA = "0x1134A68", Offset = "0x1134A68", VA = "0x1134A68", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60035A8")]
				[Address(RVA = "0x1134BB4", Offset = "0x1134BB4", VA = "0x1134BB4", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4002A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image screen;

			[Token(Token = "0x4002A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject graphic;

			[Token(Token = "0x6002F51")]
			[Address(RVA = "0x1134700", Offset = "0x1134700", VA = "0x1134700")]
			public SkeletonScreen(Image _screen, Graphic _graphic)
			{
			}

			[Token(Token = "0x6002F52")]
			[Address(RVA = "0x1133F58", Offset = "0x1133F58", VA = "0x1133F58")]
			public SkeletonScreen(Image _screen, Graphic _graphic, Vector3 anchoredPosition)
			{
			}

			[Token(Token = "0x6002F53")]
			[Address(RVA = "0x1134850", Offset = "0x1134850", VA = "0x1134850")]
			private void SetOpacity(float b, float animationTime, MonoBehaviour behaviour, Action callback)
			{
			}

			[Token(Token = "0x6002F54")]
			[Address(RVA = "0x1134910", Offset = "0x1134910", VA = "0x1134910")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB91B28", Offset = "0xB91B28")]
			private IEnumerator SetOpacityCoroutine(float startOpacity, float endOpacity, float time, Action callback)
			{
				return null;
			}

			[Token(Token = "0x6002F55")]
			[Address(RVA = "0x11349E4", Offset = "0x11349E4", VA = "0x11349E4")]
			private void SetOpacity(float t)
			{
			}

			[Token(Token = "0x6002F56")]
			[Address(RVA = "0x1133F0C", Offset = "0x1133F0C", VA = "0x1133F0C")]
			public void Enable()
			{
			}

			[Token(Token = "0x6002F57")]
			[Address(RVA = "0x1134630", Offset = "0x1134630", VA = "0x1134630")]
			public void Disable(MonoBehaviour behaviour, Action callback)
			{
			}
		}

		[Token(Token = "0x200070D")]
		public delegate void OnSkeletonScreensCreated();

		[Token(Token = "0x200070E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72D54", Offset = "0xB72D54")]
		private sealed class <HideSkeletonScreen_Coroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4002A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UIMenu <>4__this;

			[Token(Token = "0x17000551")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F5F")]
				[Address(RVA = "0x113463C", Offset = "0x113463C", VA = "0x113463C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000552")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F61")]
				[Address(RVA = "0x11346A8", Offset = "0x11346A8", VA = "0x11346A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F5C")]
			[Address(RVA = "0x11343B0", Offset = "0x11343B0", VA = "0x11343B0")]
			[DebuggerHidden]
			public <HideSkeletonScreen_Coroutine>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002F5D")]
			[Address(RVA = "0x113450C", Offset = "0x113450C", VA = "0x113450C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F5E")]
			[Address(RVA = "0x1134510", Offset = "0x1134510", VA = "0x1134510", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F60")]
			[Address(RVA = "0x1134644", Offset = "0x1134644", VA = "0x1134644", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _needsKeyboardInput;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected bool _wasStarted;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		protected bool _inputEnabled;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected KeyboardManager _keyboardManager;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ErrorMessage _errorMessageInstance;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject _loadingInstance;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<SkeletonScreen> _skeletonScreens;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Graphic> _graphicsInChildren;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float skeletonShowTimestamp;

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x111DF3C", Offset = "0x111DF3C", VA = "0x111DF3C", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x111E770", Offset = "0x111E770", VA = "0x111E770", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x1121990", Offset = "0x1121990", VA = "0x1121990", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x11334E0", Offset = "0x11334E0", VA = "0x11334E0", Slot = "7")]
		protected virtual void KeyboardManager_Submit(KeyboardManager sender)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x11238E4", Offset = "0x11238E4", VA = "0x11238E4", Slot = "8")]
		public virtual void BackButtonCallback()
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x112207C", Offset = "0x112207C", VA = "0x112207C")]
		protected void ShowErrorMessage(string message)
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x1121F68", Offset = "0x1121F68", VA = "0x1121F68")]
		protected void HideErrorMessage()
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x11229DC", Offset = "0x11229DC", VA = "0x11229DC")]
		protected void ShowLoading()
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x11334E4", Offset = "0x11334E4", VA = "0x11334E4")]
		protected List<Graphic> FindGraphicsInChildren(Transform parent, int i = 0)
		{
			return null;
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x111E014", Offset = "0x111E014", VA = "0x111E014")]
		protected void ShowSkeletonScreen()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x1133F54", Offset = "0x1133F54", VA = "0x1133F54")]
		public void SetupSkeletonScreens(OnSkeletonScreensCreated callback)
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x1133790", Offset = "0x1133790", VA = "0x1133790")]
		protected void InstantiateSkeletonScreens(OnSkeletonScreensCreated callback)
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x1123154", Offset = "0x1123154", VA = "0x1123154")]
		protected void HideLoading()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x111E248", Offset = "0x111E248", VA = "0x111E248")]
		protected void HideSkeletonScreen(float delay = 0f)
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x113432C", Offset = "0x113432C", VA = "0x113432C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88C94", Offset = "0xB88C94")]
		protected IEnumerator HideSkeletonScreen_Coroutine(float time)
		{
			return null;
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x1125794", Offset = "0x1125794", VA = "0x1125794", Slot = "9")]
		public virtual void Refresh()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x111E104", Offset = "0x111E104", VA = "0x111E104")]
		public UIMenu()
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x11343DC", Offset = "0x11343DC", VA = "0x11343DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88CF8", Offset = "0xB88CF8")]
		private void <HideSkeletonScreen_Coroutine>b__25_0()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class SceneLoading : MonoBehaviour
	{
		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x11247BC", Offset = "0x11247BC", VA = "0x11247BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x11249F4", Offset = "0x11249F4", VA = "0x11249F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x1124B30", Offset = "0x1124B30", VA = "0x1124B30")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x1124944", Offset = "0x1124944", VA = "0x1124944")]
		private void UpdateTransform(float height)
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x1124B64", Offset = "0x1124B64", VA = "0x1124B64")]
		private void PlayerInstance_Recentered(PlayerCamera sender, float playerHeight)
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x1124B68", Offset = "0x1124B68", VA = "0x1124B68")]
		public SceneLoading()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class TextureFitter : MonoBehaviour
	{
		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7B408", Offset = "0xB7B408")]
		public RawImage _rawImage;

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x112ADDC", Offset = "0x112ADDC", VA = "0x112ADDC")]
		public void SetTexture(Texture2D texture, ScaleMode scaleMode)
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x112B1A8", Offset = "0x112B1A8", VA = "0x112B1A8")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x112B0B0", Offset = "0x112B0B0", VA = "0x112B0B0")]
		private Vector2 AdjustToWidth(Vector2 textureSize, Vector2 containerSize, float ratio)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x112B12C", Offset = "0x112B12C", VA = "0x112B12C")]
		private Vector2 AdjustToHeight(Vector2 textureSize, Vector2 containerSize, float ratio)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x112B1EC", Offset = "0x112B1EC", VA = "0x112B1EC")]
		public TextureFitter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033F")]
	public class ColorStyle
	{
		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x1700026F")]
		public Color Color
		{
			[Token(Token = "0x6001AA2")]
			[Address(RVA = "0x1059288", Offset = "0x1059288", VA = "0x1059288")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x1059294", Offset = "0x1059294", VA = "0x1059294")]
		public ColorStyle(string name)
		{
		}
	}
	[Token(Token = "0x2000340")]
	public interface IThemable
	{
		[Token(Token = "0x6001AA4")]
		void ApplyTheme();
	}
	[Serializable]
	[Token(Token = "0x2000341")]
	public class TextStyle
	{
		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font font;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FontStyle fontStyle;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int size;

		[Token(Token = "0x4001548")]
		private const string TO_STRING_FORMAT = "{0};";

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isFoldout;

		[Token(Token = "0x17000270")]
		public Font Font
		{
			[Token(Token = "0x6001AA5")]
			[Address(RVA = "0x112AC60", Offset = "0x112AC60", VA = "0x112AC60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000271")]
		public FontStyle FontStyle
		{
			[Token(Token = "0x6001AA6")]
			[Address(RVA = "0x112AC68", Offset = "0x112AC68", VA = "0x112AC68")]
			get
			{
				return default(FontStyle);
			}
		}

		[Token(Token = "0x17000272")]
		public int Size
		{
			[Token(Token = "0x6001AA7")]
			[Address(RVA = "0x112AC70", Offset = "0x112AC70", VA = "0x112AC70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x112AC78", Offset = "0x112AC78", VA = "0x112AC78")]
		public TextStyle(string name)
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x112ACA4", Offset = "0x112ACA4", VA = "0x112ACA4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB716A8", Offset = "0xB716A8")]
	public class ThemedBackground : ThemedComponent
	{
		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7B440", Offset = "0xB7B440")]
		[SerializeField]
		private ColorStyleType _rampOneColorStyle;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ColorStyleType _rampTwoColorStyle;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private ColorStyleType _previousBackgroundColorStyle;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ColorStyleType _previousGradientColorStyle;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Image _image;

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x112BBE4", Offset = "0x112BBE4", VA = "0x112BBE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x112BC14", Offset = "0x112BC14", VA = "0x112BC14", Slot = "5")]
		public override void ApplyTheme()
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x112BD4C", Offset = "0x112BD4C", VA = "0x112BD4C")]
		public Image GetImage()
		{
			return null;
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x112BE14", Offset = "0x112BE14", VA = "0x112BE14")]
		public ThemedBackground()
		{
		}
	}
	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB7170C", Offset = "0xB7170C")]
	public class ThemedButton : ThemedComponent
	{
		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7B49C", Offset = "0xB7B49C")]
		[SerializeField]
		private ThemedColorBlock _buttonColorBlock;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Button _button;

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x112BE24", Offset = "0x112BE24", VA = "0x112BE24", Slot = "5")]
		public override void ApplyTheme()
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x112BE54", Offset = "0x112BE54", VA = "0x112BE54")]
		private Button GetButton()
		{
			return null;
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x112C294", Offset = "0x112C294", VA = "0x112C294")]
		public ThemedButton()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000344")]
	public class ThemedColorBlock
	{
		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private ColorStyleType _colorDefault;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float _colorDefaultAlpha;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ColorStyleType _colorHover;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _colorHoverAlpha;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ColorStyleType _colorPressed;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _colorPressedAlpha;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ColorStyleType _colorSelected;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _colorSelectedAlpha;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ColorStyleType _colorDisabled;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _colorDisabledAlpha;

		[Token(Token = "0x17000273")]
		public ColorStyleType Default
		{
			[Token(Token = "0x6001AB1")]
			[Address(RVA = "0x112C29C", Offset = "0x112C29C", VA = "0x112C29C")]
			get
			{
				return default(ColorStyleType);
			}
		}

		[Token(Token = "0x17000274")]
		public ColorStyleType Hover
		{
			[Token(Token = "0x6001AB2")]
			[Address(RVA = "0x112C2A4", Offset = "0x112C2A4", VA = "0x112C2A4")]
			get
			{
				return default(ColorStyleType);
			}
		}

		[Token(Token = "0x17000275")]
		public ColorStyleType Pressed
		{
			[Token(Token = "0x6001AB3")]
			[Address(RVA = "0x112C2AC", Offset = "0x112C2AC", VA = "0x112C2AC")]
			get
			{
				return default(ColorStyleType);
			}
		}

		[Token(Token = "0x17000276")]
		public ColorStyleType Selected
		{
			[Token(Token = "0x6001AB4")]
			[Address(RVA = "0x112C2B4", Offset = "0x112C2B4", VA = "0x112C2B4")]
			get
			{
				return default(ColorStyleType);
			}
		}

		[Token(Token = "0x17000277")]
		public ColorStyleType Disabled
		{
			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0x112C2BC", Offset = "0x112C2BC", VA = "0x112C2BC")]
			get
			{
				return default(ColorStyleType);
			}
		}

		[Token(Token = "0x17000278")]
		public float DefaultAlpha
		{
			[Token(Token = "0x6001AB6")]
			[Address(RVA = "0x112C2C4", Offset = "0x112C2C4", VA = "0x112C2C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000279")]
		public float HoverAlpha
		{
			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0x112C2CC", Offset = "0x112C2CC", VA = "0x112C2CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700027A")]
		public float PressedAlpha
		{
			[Token(Token = "0x6001AB8")]
			[Address(RVA = "0x112C2D4", Offset = "0x112C2D4", VA = "0x112C2D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700027B")]
		public float SelectedAlpha
		{
			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0x112C2DC", Offset = "0x112C2DC", VA = "0x112C2DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700027C")]
		public float DisabledAlpha
		{
			[Token(Token = "0x6001ABA")]
			[Address(RVA = "0x112C2E4", Offset = "0x112C2E4", VA = "0x112C2E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x112C2EC", Offset = "0x112C2EC", VA = "0x112C2EC")]
		public ThemedColorBlock()
		{
		}
	}
	[Token(Token = "0x2000345")]
	[ExecuteInEditMode]
	public class ThemedComponent : MonoBehaviour, IThemable
	{
		[Token(Token = "0x200070F")]
		public delegate void OnChanged(ThemedComponent sender);

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OnChanged Changed;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _updateNumber;

		[Token(Token = "0x1700027D")]
		protected Theme CurrentTheme
		{
			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0x112C30C", Offset = "0x112C30C", VA = "0x112C30C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x112C36C", Offset = "0x112C36C", VA = "0x112C36C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x112C8DC", Offset = "0x112C8DC", VA = "0x112C8DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x112C9B8", Offset = "0x112C9B8", VA = "0x112C9B8")]
		private void ThemeManager_ThemeChanged(Theme current, int updateNumber)
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x112BD48", Offset = "0x112BD48", VA = "0x112BD48", Slot = "5")]
		public virtual void ApplyTheme()
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x112C9FC", Offset = "0x112C9FC", VA = "0x112C9FC")]
		protected void ApplyText(TextStyleType styleType, ref Text text)
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x112CB0C", Offset = "0x112CB0C", VA = "0x112CB0C")]
		protected void ApplyColor(ColorStyleType styleType, ref Text text)
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x112CC08", Offset = "0x112CC08", VA = "0x112CC08")]
		protected void ApplyColor(ColorStyleType styleType, ref Image image)
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x112CD04", Offset = "0x112CD04", VA = "0x112CD04")]
		protected void ApplyColor(ColorStyleType styleType, float alpha, ref Image image)
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x112BF1C", Offset = "0x112BF1C", VA = "0x112BF1C")]
		protected void ApplyColors(ThemedColorBlock themedColorBlock, ref Selectable selectable)
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x112BE1C", Offset = "0x112BE1C", VA = "0x112BE1C")]
		public ThemedComponent()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class ThemedGradient : BaseMeshEffect
	{
		[Token(Token = "0x2000710")]
		public enum Type
		{
			[Token(Token = "0x4002A6D")]
			Horizontal,
			[Token(Token = "0x4002A6E")]
			Vertical,
			[Token(Token = "0x4002A6F")]
			Radial,
			[Token(Token = "0x4002A70")]
			Diamond
		}

		[Token(Token = "0x2000711")]
		public enum Blend
		{
			[Token(Token = "0x4002A72")]
			Override,
			[Token(Token = "0x4002A73")]
			Add,
			[Token(Token = "0x4002A74")]
			Multiply
		}

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7B588", Offset = "0xB7B588")]
		[SerializeField]
		private ColorStyleType _firstColorStyle;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _firstAlpha;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ColorStyleType _secondColorStyle;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _secondAlpha;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[ReadOnly]
		private Gradient _effectGradient;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7B63C", Offset = "0xB7B63C")]
		[SerializeField]
		private Type _gradientType;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Blend _blendMode;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB7B698", Offset = "0xB7B698")]
		private float _offset;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private ColorStyleType _previousFirstColorStyle;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ColorStyleType _previousSecondColorStyle;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _previousFirstAlpha;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _previousSecondAlpha;

		[Token(Token = "0x1700027E")]
		public Blend BlendMode
		{
			[Token(Token = "0x6001AC7")]
			[Address(RVA = "0x112CE54", Offset = "0x112CE54", VA = "0x112CE54")]
			get
			{
				return default(Blend);
			}
			[Token(Token = "0x6001AC8")]
			[Address(RVA = "0x112CE5C", Offset = "0x112CE5C", VA = "0x112CE5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public Gradient EffectGradient
		{
			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0x112CE8C", Offset = "0x112CE8C", VA = "0x112CE8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0x112CE94", Offset = "0x112CE94", VA = "0x112CE94")]
			set
			{
			}
		}

		[Token(Token = "0x17000280")]
		public Type GradientType
		{
			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0x112CEC4", Offset = "0x112CEC4", VA = "0x112CEC4")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x6001ACC")]
			[Address(RVA = "0x112CECC", Offset = "0x112CECC", VA = "0x112CECC")]
			set
			{
			}
		}

		[Token(Token = "0x17000281")]
		public float Offset
		{
			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0x112CEFC", Offset = "0x112CEFC", VA = "0x112CEFC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0x112CF04", Offset = "0x112CF04", VA = "0x112CF04")]
			set
			{
			}
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x112CF34", Offset = "0x112CF34", VA = "0x112CF34", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x112CF68", Offset = "0x112CF68", VA = "0x112CF68")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x112CFB0", Offset = "0x112CFB0", VA = "0x112CFB0")]
		private void UpdateGradient()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x112D1FC", Offset = "0x112D1FC", VA = "0x112D1FC", Slot = "20")]
		public override void ModifyMesh(VertexHelper helper)
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x112E170", Offset = "0x112E170", VA = "0x112E170")]
		private Color BlendColor(Color colorA, Color colorB)
		{
			return default(Color);
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x112E1C8", Offset = "0x112E1C8", VA = "0x112E1C8")]
		public ThemedGradient()
		{
		}
	}
	[Token(Token = "0x2000347")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB71780", Offset = "0xB71780")]
	public class ThemedImage : ThemedComponent
	{
		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7B6D8", Offset = "0xB7B6D8")]
		[SerializeField]
		private ColorStyleType _colorStyle;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _alpha;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _previousAlpha;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ColorStyleType _previousColorStyle;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Image _image;

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x112E334", Offset = "0x112E334", VA = "0x112E334")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x112E360", Offset = "0x112E360", VA = "0x112E360", Slot = "5")]
		public override void ApplyTheme()
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x112E39C", Offset = "0x112E39C", VA = "0x112E39C")]
		public Image GetImage()
		{
			return null;
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x112E464", Offset = "0x112E464", VA = "0x112E464")]
		public void SetColorStyle(ColorStyleType colorStyle)
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x112E474", Offset = "0x112E474", VA = "0x112E474")]
		public ThemedImage()
		{
		}
	}
	[Token(Token = "0x2000348")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB717E4", Offset = "0xB717E4")]
	public class ThemedInput : ThemedComponent
	{
		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7B734", Offset = "0xB7B734")]
		[SerializeField]
		private TextStyleType _placeholderText;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ColorStyleType _placeholderColor;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private TextStyleType _labelText;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ColorStyleType _labelColor;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private ColorStyleType _backgroundColor;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ColorStyleType _caretColor;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private ColorStyleType _selectionColor;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InputField _inputField;

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x112E484", Offset = "0x112E484", VA = "0x112E484", Slot = "5")]
		public override void ApplyTheme()
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x112E5A8", Offset = "0x112E5A8", VA = "0x112E5A8")]
		private InputField GetInputField()
		{
			return null;
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x112E670", Offset = "0x112E670", VA = "0x112E670")]
		public ThemedInput()
		{
		}
	}
	[Token(Token = "0x2000349")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB71848", Offset = "0xB71848")]
	public class ThemedKeyboardButton : ThemedComponent
	{
		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7B7E0", Offset = "0xB7B7E0")]
		[SerializeField]
		private ThemedColorBlock _buttonColorBlock;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7B82C", Offset = "0xB7B82C")]
		[SerializeField]
		private ThemedColorBlock _labelColorBlock;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7B878", Offset = "0xB7B878")]
		[SerializeField]
		private ThemedColorBlock _iconColorBlock;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Button _button;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UIKeyboardButton _uiButton;

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x112E678", Offset = "0x112E678", VA = "0x112E678", Slot = "5")]
		public override void ApplyTheme()
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x112E740", Offset = "0x112E740", VA = "0x112E740")]
		private Button GetButton()
		{
			return null;
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x112E808", Offset = "0x112E808", VA = "0x112E808")]
		private UIKeyboardButton GetUIButton()
		{
			return null;
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x112E940", Offset = "0x112E940", VA = "0x112E940")]
		public ThemedKeyboardButton()
		{
		}
	}
	[Token(Token = "0x200034A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB718AC", Offset = "0xB718AC")]
	public class ThemedLabel : ThemedComponent
	{
		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7B8C4", Offset = "0xB7B8C4")]
		[SerializeField]
		private TextStyleType _textStyle;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ColorStyleType _colorStyle;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private TextStyleType _previousTextStyle;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ColorStyleType _previousColorStyle;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Text _label;

		[Token(Token = "0x17000282")]
		public Text Label
		{
			[Token(Token = "0x6001AE1")]
			[Address(RVA = "0x112E948", Offset = "0x112E948", VA = "0x112E948")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x112EA14", Offset = "0x112EA14", VA = "0x112EA14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x112EA44", Offset = "0x112EA44", VA = "0x112EA44", Slot = "5")]
		public override void ApplyTheme()
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x112E94C", Offset = "0x112E94C", VA = "0x112E94C")]
		public Text GetLabel()
		{
			return null;
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x112EA84", Offset = "0x112EA84", VA = "0x112EA84")]
		public void SetColorStyle(ColorStyleType colorStyle)
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x112EA94", Offset = "0x112EA94", VA = "0x112EA94")]
		public ThemedLabel()
		{
		}
	}
	[Token(Token = "0x200034B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB71910", Offset = "0xB71910")]
	public class ThemedLabelButton : ThemedComponent
	{
		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7B920", Offset = "0xB7B920")]
		[SerializeField]
		private ThemedColorBlock _buttonColorBlock;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Button _button;

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x112EA9C", Offset = "0x112EA9C", VA = "0x112EA9C", Slot = "5")]
		public override void ApplyTheme()
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x112EACC", Offset = "0x112EACC", VA = "0x112EACC")]
		private Button GetButton()
		{
			return null;
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x112EB94", Offset = "0x112EB94", VA = "0x112EB94")]
		public ThemedLabelButton()
		{
		}
	}
	[Token(Token = "0x200034C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB71974", Offset = "0xB71974")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB71974", Offset = "0xB71974")]
	public class ThemedNavigationButton : ThemedComponent
	{
		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7B96C", Offset = "0xB7B96C")]
		[SerializeField]
		private ThemedColorBlock _buttonColorBlock;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7B9B8", Offset = "0xB7B9B8")]
		[SerializeField]
		private ThemedColorBlock _iconColorBlock;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Button _button;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UINavigationButton _navigationButton;

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x112EB9C", Offset = "0x112EB9C", VA = "0x112EB9C", Slot = "5")]
		public override void ApplyTheme()
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x112EBF4", Offset = "0x112EBF4", VA = "0x112EBF4")]
		private Button GetButton()
		{
			return null;
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x112ECBC", Offset = "0x112ECBC", VA = "0x112ECBC")]
		private UINavigationButton GetNavigationButton()
		{
			return null;
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x112ED98", Offset = "0x112ED98", VA = "0x112ED98")]
		public ThemedNavigationButton()
		{
		}
	}
	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB71A00", Offset = "0xB71A00")]
	public class ThemedProgressBar : ThemedComponent
	{
		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7BA04", Offset = "0xB7BA04")]
		[SerializeField]
		private ColorStyleType _backgroundColorStyle;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ColorStyleType _gradientColorStyle;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private ColorStyleType _previousOneColorStyle;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ColorStyleType _previousTwoColorStyle;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Image _image;

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x112EDA0", Offset = "0x112EDA0", VA = "0x112EDA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x112EDD0", Offset = "0x112EDD0", VA = "0x112EDD0", Slot = "5")]
		public override void ApplyTheme()
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x112EF30", Offset = "0x112EF30", VA = "0x112EF30")]
		public Image GetImage()
		{
			return null;
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x112EFF8", Offset = "0x112EFF8", VA = "0x112EFF8")]
		public ThemedProgressBar()
		{
		}
	}
	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB71A64", Offset = "0xB71A64")]
	public class ThemedScrollbar : ThemedComponent
	{
		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7BA60", Offset = "0xB7BA60")]
		[SerializeField]
		private ThemedColorBlock _colorBlock;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Scrollbar _scrollbar;

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x112F000", Offset = "0x112F000", VA = "0x112F000", Slot = "5")]
		public override void ApplyTheme()
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x112F030", Offset = "0x112F030", VA = "0x112F030")]
		private Scrollbar GetScrollbar()
		{
			return null;
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x112F0F8", Offset = "0x112F0F8", VA = "0x112F0F8")]
		public ThemedScrollbar()
		{
		}
	}
	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB71AC8", Offset = "0xB71AC8")]
	public class ThemedSlider : ThemedComponent
	{
		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7BAAC", Offset = "0xB7BAAC")]
		[SerializeField]
		private ThemedColorBlock _colorBlock;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Slider _slider;

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x112F100", Offset = "0x112F100", VA = "0x112F100", Slot = "5")]
		public override void ApplyTheme()
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x112F130", Offset = "0x112F130", VA = "0x112F130")]
		private Slider GetSlider()
		{
			return null;
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x112F1F8", Offset = "0x112F1F8", VA = "0x112F1F8")]
		public ThemedSlider()
		{
		}
	}
	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB71B2C", Offset = "0xB71B2C")]
	public class ThemedToggle : ThemedComponent
	{
		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7BAF8", Offset = "0xB7BAF8")]
		[SerializeField]
		private ThemedColorBlock _colorBlock;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Toggle _toggle;

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x112F200", Offset = "0x112F200", VA = "0x112F200", Slot = "5")]
		public override void ApplyTheme()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x112F230", Offset = "0x112F230", VA = "0x112F230")]
		private Toggle GetToggle()
		{
			return null;
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x112F2F8", Offset = "0x112F2F8", VA = "0x112F2F8")]
		public ThemedToggle()
		{
		}
	}
	[Token(Token = "0x2000351")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB71B90", Offset = "0xB71B90")]
	public class ThemedUIButton : ThemedComponent
	{
		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7BB44", Offset = "0xB7BB44")]
		[SerializeField]
		private ColorStyleType _buttonFirstColorStyle;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _buttonFirstAlpha;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private ColorStyleType _buttonSecondColorStyle;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _buttonSecondAlpha;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7BBC0", Offset = "0xB7BBC0")]
		[SerializeField]
		private ThemedColorBlock _labelColorBlock;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UIButton _uiButton;

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x112F300", Offset = "0x112F300", VA = "0x112F300", Slot = "5")]
		public override void ApplyTheme()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x112F3F0", Offset = "0x112F3F0", VA = "0x112F3F0")]
		public void ForceThemeApply()
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x112F3BC", Offset = "0x112F3BC", VA = "0x112F3BC")]
		protected void ApplyColors()
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x112F324", Offset = "0x112F324", VA = "0x112F324")]
		private UIButton GetUIButton()
		{
			return null;
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x112F5C4", Offset = "0x112F5C4", VA = "0x112F5C4")]
		public ThemedUIButton()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class TutorialSubtitles : MonoBehaviour
	{
		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7BC0C", Offset = "0xB7BC0C")]
		[SerializeField]
		private Text _label;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _background;

		[Token(Token = "0x17000283")]
		public Text Label
		{
			[Token(Token = "0x6001B00")]
			[Address(RVA = "0x112F5D8", Offset = "0x112F5D8", VA = "0x112F5D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x112F5E0", Offset = "0x112F5E0", VA = "0x112F5E0")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x112F640", Offset = "0x112F640", VA = "0x112F640")]
		public TutorialSubtitles()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class UINavigationManager : MonoBehaviour
	{
		[Token(Token = "0x2000712")]
		public enum ViewId
		{
			[Token(Token = "0x4002A76")]
			NONE = 0,
			[Token(Token = "0x4002A77")]
			HEALTH_AND_SAFETY = 1,
			[Token(Token = "0x4002A78")]
			LOGIN_AND_REGISTRATION = 2,
			[Token(Token = "0x4002A79")]
			LOGIN_CREDENTIALS = 3,
			[Token(Token = "0x4002A7A")]
			LOGIN_MOOD_SLEEP = 4,
			[Token(Token = "0x4002A7B")]
			LOGIN_FORGOT_PASSWORD = 5,
			[Token(Token = "0x4002A7C")]
			LOGIN_FORGOT_PASSWORD_FINISH = 6,
			[Token(Token = "0x4002A7D")]
			REGISTRATION_FIRST_NAME = 7,
			[Token(Token = "0x4002A7E")]
			REGISTRATION_LAST_NAME = 8,
			[Token(Token = "0x4002A7F")]
			REGISTRATION_EMAIL = 9,
			[Token(Token = "0x4002A80")]
			REGISTRATION_PASSWORD = 10,
			[Token(Token = "0x4002A81")]
			REGISTRATION_BIRTHDAY = 11,
			[Token(Token = "0x4002A82")]
			REGISTRATION_GENDER = 12,
			[Token(Token = "0x4002A83")]
			REGISTRATION_EDUCATION = 13,
			[Token(Token = "0x4002A84")]
			REGISTRATION_JOB = 14,
			[Token(Token = "0x4002A85")]
			REGISTRATION_FINAL = 15,
			[Token(Token = "0x4002A86")]
			USER_AGREEMENT = 16,
			[Token(Token = "0x4002A87")]
			PRIVACY_POLICY = 17,
			[Token(Token = "0x4002A88")]
			DASHBOARD = 18,
			[Token(Token = "0x4002A89")]
			GAME_DETAILS = 19,
			[Token(Token = "0x4002A8A")]
			GAME_LIBRARY = 20,
			[Token(Token = "0x4002A8B")]
			OPTIONS_MAIN = 21,
			[Token(Token = "0x4002A8C")]
			OPTIONS_GENERAL = 22,
			[Token(Token = "0x4002A8D")]
			OPTIONS_SOUND = 23,
			[Token(Token = "0x4002A8E")]
			OPTIONS_ACCESSIBILITY = 24,
			[Token(Token = "0x4002A8F")]
			STATISTICS_GENERAL = 25,
			[Token(Token = "0x4002A90")]
			STATISTICS_CATEGORIES = 26,
			[Token(Token = "0x4002A91")]
			STATISTICS_SINGLE_CATEGORY = 27,
			[Token(Token = "0x4002A92")]
			STATISTICS_GAMES = 28,
			[Token(Token = "0x4002A93")]
			STATISTICS_SINGLE_GAME = 29,
			[Token(Token = "0x4002A94")]
			STATISTICS_WOD = 30,
			[Token(Token = "0x4002A95")]
			PROFILE_AVATAR_IMAGE = 32,
			[Token(Token = "0x4002A96")]
			EPI_INFO = 33,
			[Token(Token = "0x4002A97")]
			LOGIN_WELCOME_BACK = 34,
			[Token(Token = "0x4002A98")]
			WORKOUT_STATISTICS = 35,
			[Token(Token = "0x4002A99")]
			LOCAL_GAME_LIBRARY = 36,
			[Token(Token = "0x4002A9A")]
			LOCAL_GAME_DETAILS = 37,
			[Token(Token = "0x4002A9B")]
			SESSION_STATISTICS = 38,
			[Token(Token = "0x4002A9C")]
			CREDITS = 39,
			[Token(Token = "0x4002A9D")]
			LOADING = 40,
			[Token(Token = "0x4002A9E")]
			LOCAL_OPTIONS_MAIN = 41,
			[Token(Token = "0x4002A9F")]
			LOCAL_OPTIONS_GENERAL = 42,
			[Token(Token = "0x4002AA0")]
			LOCAL_OPTIONS_SOUND = 43,
			[Token(Token = "0x4002AA1")]
			STATISTICS_SINGLE_GAME_VARIANT = 44
		}

		[Serializable]
		[Token(Token = "0x2000713")]
		private struct ViewEntry
		{
			[Token(Token = "0x4002AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[HideInInspector]
			public string idString;

			[Token(Token = "0x4002AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[HideInInspector]
			public ViewId id;

			[Token(Token = "0x4002AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UIView view;
		}

		[Token(Token = "0x2000714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72D64", Offset = "0xB72D64")]
		private sealed class <AnimateScreen>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UINavigationManager <>4__this;

			[Token(Token = "0x4002AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CanvasGroup screen;

			[Token(Token = "0x4002AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UIMenu menu;

			[Token(Token = "0x4002AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool value;

			[Token(Token = "0x4002AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <timer>5__2;

			[Token(Token = "0x17000553")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F69")]
				[Address(RVA = "0xD28F94", Offset = "0xD28F94", VA = "0xD28F94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000554")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F6B")]
				[Address(RVA = "0xD29000", Offset = "0xD29000", VA = "0xD29000", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F66")]
			[Address(RVA = "0xD287FC", Offset = "0xD287FC", VA = "0xD287FC")]
			[DebuggerHidden]
			public <AnimateScreen>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6002F67")]
			[Address(RVA = "0xD28B8C", Offset = "0xD28B8C", VA = "0xD28B8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F68")]
			[Address(RVA = "0xD28B90", Offset = "0xD28B90", VA = "0xD28B90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F6A")]
			[Address(RVA = "0xD28F9C", Offset = "0xD28F9C", VA = "0xD28F9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000715")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72D74", Offset = "0xB72D74")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x4002AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject menuInstance;

			[Token(Token = "0x6002F6C")]
			[Address(RVA = "0xD28ACC", Offset = "0xD28ACC", VA = "0xD28ACC")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x6002F6D")]
			[Address(RVA = "0xD28B6C", Offset = "0xD28B6C", VA = "0xD28B6C")]
			internal void <CreateMenuOnScreen>b__0()
			{
			}
		}

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7BC68", Offset = "0xB7BC68")]
		[SerializeField]
		private AnimationCurve openAnimation;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float openTime;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve closeAnimation;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float closeTime;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7BCE4", Offset = "0xB7BCE4")]
		[SerializeField]
		private CanvasGroup _menuBar;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CanvasGroup _centerScreen;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CanvasGroup _leftScreen;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CanvasGroup _rightScreen;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GeneralDialog _generalDialogPrefab;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<ViewEntry> _viewEntries;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UINavigationManager _instance;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ViewId _currentView;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Stack<ViewEntry> _viewStack;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<ViewId, Dictionary<string, string>> _parameters;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MenuBar _menuBarComponent;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GeneralDialog _dialogInstance;

		[Token(Token = "0x17000284")]
		public static UINavigationManager Instance
		{
			[Token(Token = "0x6001B03")]
			[Address(RVA = "0xD26A68", Offset = "0xD26A68", VA = "0xD26A68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000285")]
		public MenuBar MenuBar
		{
			[Token(Token = "0x6001B04")]
			[Address(RVA = "0xD26BA4", Offset = "0xD26BA4", VA = "0xD26BA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B05")]
			[Address(RVA = "0xD26BAC", Offset = "0xD26BAC", VA = "0xD26BAC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public CanvasGroup CenterScreen
		{
			[Token(Token = "0x6001B06")]
			[Address(RVA = "0xD26BB4", Offset = "0xD26BB4", VA = "0xD26BB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B07")]
			[Address(RVA = "0xD26BBC", Offset = "0xD26BBC", VA = "0xD26BBC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xD26BC4", Offset = "0xD26BC4", VA = "0xD26BC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xD26C68", Offset = "0xD26C68", VA = "0xD26C68")]
		public ViewId CurrentViewId()
		{
			return default(ViewId);
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xD26C70", Offset = "0xD26C70", VA = "0xD26C70")]
		public void ShowMenus(bool value)
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xD26C2C", Offset = "0xD26C2C", VA = "0xD26C2C")]
		public void ShowMenuBar(bool value)
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xD26EC0", Offset = "0xD26EC0", VA = "0xD26EC0")]
		public void Back()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xD2751C", Offset = "0xD2751C", VA = "0xD2751C")]
		public void GoToView(ViewId id, bool skipAnimations = false)
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xD2798C", Offset = "0xD2798C", VA = "0xD2798C")]
		public void InjectParameterForView(ViewId viewId, string parameterKey, string value)
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xD27AE0", Offset = "0xD27AE0", VA = "0xD27AE0")]
		public string GetParameterForView(ViewId viewId, string parameterKey)
		{
			return null;
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xD27B84", Offset = "0xD27B84", VA = "0xD27B84")]
		public bool HasParameterForView(ViewId viewId, string parameterKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xD27C3C", Offset = "0xD27C3C", VA = "0xD27C3C")]
		public void ShowButtonlessDialog(string title, string description)
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xD27D68", Offset = "0xD27D68", VA = "0xD27D68")]
		public void ShowOneButtonDialog(string title, string description, string buttonText, [Optional] GeneralDialog.OnDialogButton callback)
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xD27EAC", Offset = "0xD27EAC", VA = "0xD27EAC")]
		public void ShowTwoButtonDialog(string title, string description, string positiveButtonText, string negativeButtonText, [Optional] GeneralDialog.OnDialogButton positiveCallback, [Optional] GeneralDialog.OnDialogButton negativeCallback)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xD28008", Offset = "0xD28008", VA = "0xD28008")]
		public void DismissDialog()
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xD2809C", Offset = "0xD2809C", VA = "0xD2809C")]
		public void EnableInput(bool value)
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xD28174", Offset = "0xD28174", VA = "0xD28174")]
		public void AdaptToLocalBuild()
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xD277DC", Offset = "0xD277DC", VA = "0xD277DC")]
		private void ClearViewStackForNewRoot(ViewEntry rootViewEntry)
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xD28190", Offset = "0xD28190", VA = "0xD28190")]
		private void ClearScreenForNewRoot(CanvasGroup screen, UIMenu menuToKeep)
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xD27890", Offset = "0xD27890", VA = "0xD27890")]
		private void PushViewToStack(ViewEntry view)
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xD26D2C", Offset = "0xD26D2C", VA = "0xD26D2C")]
		private ViewEntry ViewEntryForId(ViewId id, List<ViewEntry> viewEntries)
		{
			return default(ViewEntry);
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xD276A4", Offset = "0xD276A4", VA = "0xD276A4")]
		private bool IsViewInStack(ViewId id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xD27324", Offset = "0xD27324", VA = "0xD27324")]
		private void ActivateView(ViewEntry entry, [Optional] ViewEntry previousViewEntry, bool skipAnimations = false)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xD26FF4", Offset = "0xD26FF4", VA = "0xD26FF4")]
		private void DeactivateView(ViewEntry entry, [Optional] ViewEntry nextViewEntry, bool skipAnimations = false)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xD2852C", Offset = "0xD2852C", VA = "0xD2852C")]
		private void SetMenuActive(UIMenu menu, CanvasGroup screen, bool value, bool skipAnimations = false)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xD2867C", Offset = "0xD2867C", VA = "0xD2867C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88D08", Offset = "0xB88D08")]
		private IEnumerator AnimateScreen(UIMenu menu, CanvasGroup screen, bool value)
		{
			return null;
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xD28718", Offset = "0xD28718", VA = "0xD28718")]
		private void SetupScreen(UIMenu menu, CanvasGroup screen, bool value)
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xD28828", Offset = "0xD28828", VA = "0xD28828")]
		private void CreateMenuOnScreen(UIMenu menu, CanvasGroup screen)
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xD283B4", Offset = "0xD283B4", VA = "0xD283B4")]
		private UIMenu GetMenuOnScreen(UIMenu menu, CanvasGroup screen)
		{
			return null;
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xD28AD4", Offset = "0xD28AD4", VA = "0xD28AD4")]
		public UINavigationManager()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class GaphHolderBarHover : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform _hover;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _score;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _average;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 originalHoverPosition;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform _hoverRectTransform;

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x1013CA4", Offset = "0x1013CA4", VA = "0x1013CA4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x1013D60", Offset = "0x1013D60", VA = "0x1013D60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x1013D90", Offset = "0x1013D90", VA = "0x1013D90")]
		public void Setup(int score, int average)
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x1013E98", Offset = "0x1013E98", VA = "0x1013E98")]
		public void ShowAverage(bool value)
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x1013ED4", Offset = "0x1013ED4", VA = "0x1013ED4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x1014128", Offset = "0x1014128", VA = "0x1014128", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x10141A4", Offset = "0x10141A4", VA = "0x10141A4")]
		public GaphHolderBarHover()
		{
		}
	}
	[Token(Token = "0x2000355")]
	[ExecuteInEditMode]
	public class GraphHolderBars : MonoBehaviour
	{
		[Token(Token = "0x2000716")]
		public enum BarType
		{
			[Token(Token = "0x4002AAE")]
			SquareBarChart,
			[Token(Token = "0x4002AAF")]
			RoundBarChart,
			[Token(Token = "0x4002AB0")]
			LineChart
		}

		[Serializable]
		[Token(Token = "0x2000717")]
		public class LegendValue
		{
			[Token(Token = "0x4002AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float value;

			[Token(Token = "0x4002AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string legend;

			[Token(Token = "0x6002F6E")]
			[Address(RVA = "0x1017870", Offset = "0x1017870", VA = "0x1017870")]
			public LegendValue()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000718")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72D84", Offset = "0xB72D84")]
		private sealed class <>c
		{
			[Token(Token = "0x4002AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<LegendValue, float> <>9__24_0;

			[Token(Token = "0x4002AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<LegendValue, float> <>9__33_0;

			[Token(Token = "0x4002AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<float, float> <>9__33_1;

			[Token(Token = "0x6002F70")]
			[Address(RVA = "0x101782C", Offset = "0x101782C", VA = "0x101782C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F71")]
			[Address(RVA = "0x1017834", Offset = "0x1017834", VA = "0x1017834")]
			internal float <ShowAverageLine>b__24_0(LegendValue x)
			{
				return default(float);
			}

			[Token(Token = "0x6002F72")]
			[Address(RVA = "0x1017850", Offset = "0x1017850", VA = "0x1017850")]
			internal float <PositionAndScaleGraphBars>b__33_0(LegendValue x)
			{
				return default(float);
			}

			[Token(Token = "0x6002F73")]
			[Address(RVA = "0x101786C", Offset = "0x101786C", VA = "0x101786C")]
			internal float <PositionAndScaleGraphBars>b__33_1(float x)
			{
				return default(float);
			}
		}

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7BDB0", Offset = "0xB7BDB0")]
		public LineChart lineChart;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform barChart;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform averageLine;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject squareBarPrefab;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject roundBarPrefab;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject textPrefab;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7BDE8", Offset = "0xB7BDE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB7BDE8", Offset = "0xB7BDE8")]
		public float distanceRelativeToSelf;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<LegendValue> values;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxValue;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public BarType barType;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7BE3C", Offset = "0xB7BE3C")]
		public float legendXmargin;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7BE74", Offset = "0xB7BE74")]
		public int legendYCount;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string legendYValueStringFormat;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float legendYmargin;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RectTransform thisRectTransform;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<RectTransform> allGraphBars;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<RectTransform> legendX;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<RectTransform> legendY;

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x1015AD0", Offset = "0x1015AD0", VA = "0x1015AD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x1015C6C", Offset = "0x1015C6C", VA = "0x1015C6C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xB88D6C", Offset = "0xB88D6C")]
		public void RefreshGraph()
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x1015C74", Offset = "0x1015C74", VA = "0x1015C74")]
		public void RefreshGraph(float average)
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x1016A58", Offset = "0x1016A58", VA = "0x1016A58")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xB88D84", Offset = "0xB88D84")]
		public void ClearGraph()
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x1016DD0", Offset = "0x1016DD0", VA = "0x1016DD0")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xB88D9C", Offset = "0xB88D9C")]
		public void ShowAverageLine()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x1016F9C", Offset = "0x1016F9C", VA = "0x1016F9C")]
		public void ShowAverageLine(float value)
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x1015B2C", Offset = "0x1015B2C", VA = "0x1015B2C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xB88DB4", Offset = "0xB88DB4")]
		public void HideAverageLine()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x1016EE8", Offset = "0x1016EE8", VA = "0x1016EE8")]
		private float CalculateAverage(List<float> valueList)
		{
			return default(float);
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x1017130", Offset = "0x1017130", VA = "0x1017130")]
		private void ClearLineGraph()
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x1015D7C", Offset = "0x1015D7C", VA = "0x1015D7C")]
		private void UpdateLineGraph()
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x1016150", Offset = "0x1016150", VA = "0x1016150")]
		private void PositionAndScaleLineChart()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x1016A7C", Offset = "0x1016A7C", VA = "0x1016A7C")]
		private void DeleteGraphBars()
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x1015EEC", Offset = "0x1015EEC", VA = "0x1015EEC")]
		private void CreateGraphBars(float average)
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x10162BC", Offset = "0x10162BC", VA = "0x10162BC")]
		private void PositionAndScaleGraphBars()
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x1016110", Offset = "0x1016110", VA = "0x1016110")]
		private void UpdateLegends()
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x1016BC0", Offset = "0x1016BC0", VA = "0x1016BC0")]
		private void ClearLegends()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x10171E4", Offset = "0x10171E4", VA = "0x10171E4")]
		private void InstantiateLegendX()
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x10174BC", Offset = "0x10174BC", VA = "0x10174BC")]
		private void InstantiateLegendY()
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x10167D4", Offset = "0x10167D4", VA = "0x10167D4")]
		private void PositionLegends()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x1017720", Offset = "0x1017720", VA = "0x1017720")]
		public GraphHolderBars()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class GraphHolderDataSetter : MonoBehaviour
	{
		[Token(Token = "0x2000719")]
		private enum RangeType
		{
			[Token(Token = "0x4002AB8")]
			Last7,
			[Token(Token = "0x4002AB9")]
			Last30,
			[Token(Token = "0x4002ABA")]
			AllTime
		}

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _noDataOverlay;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GraphHolderBars _graphHolder;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator _animator;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GraphHolderBars.LegendValue> _last7DataSet;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _last7DataSetAverage;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GraphHolderBars.LegendValue> _last30DataSet;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _last30DataSetAverage;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<GraphHolderBars.LegendValue> _allTimeDataSet;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _allTimeDataSetAverage;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private RangeType _rangeType;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool compareButtonOn;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string _animatorRevealTrigger;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string _animatorIdleTrigger;

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x1017878", Offset = "0x1017878", VA = "0x1017878")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x1017904", Offset = "0x1017904", VA = "0x1017904")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x1017924", Offset = "0x1017924", VA = "0x1017924")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x1017964", Offset = "0x1017964", VA = "0x1017964")]
		public void SetLast7DataSet(List<GraphHolderBars.LegendValue> data)
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x10179E4", Offset = "0x10179E4", VA = "0x10179E4")]
		public void SetLast7DataSet(List<GraphHolderBars.LegendValue> data, float average)
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x10179EC", Offset = "0x10179EC", VA = "0x10179EC")]
		public void SetLast30DataSet(List<GraphHolderBars.LegendValue> data)
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x10179F4", Offset = "0x10179F4", VA = "0x10179F4")]
		public void SetLast30DataSet(List<GraphHolderBars.LegendValue> data, float average)
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x1017A00", Offset = "0x1017A00", VA = "0x1017A00")]
		public void SetAllTimeDataSet(List<GraphHolderBars.LegendValue> data)
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x1017B60", Offset = "0x1017B60", VA = "0x1017B60")]
		public void SetAllTimeDataSet(List<GraphHolderBars.LegendValue> data, float average)
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x1017B68", Offset = "0x1017B68", VA = "0x1017B68")]
		public void ShowLast7Data()
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x1017C48", Offset = "0x1017C48", VA = "0x1017C48")]
		public void ShowLast30Data()
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x1017D30", Offset = "0x1017D30", VA = "0x1017D30")]
		public void ShowAllTimeData()
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x1017E18", Offset = "0x1017E18", VA = "0x1017E18")]
		public void ToggleCompare()
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x1017E64", Offset = "0x1017E64", VA = "0x1017E64")]
		private void CompareLast7Data(bool show)
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x1017E98", Offset = "0x1017E98", VA = "0x1017E98")]
		private void CompareLast30Data(bool show)
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x1017ECC", Offset = "0x1017ECC", VA = "0x1017ECC")]
		private void CompareAllTimeData(bool show)
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x1017F00", Offset = "0x1017F00", VA = "0x1017F00")]
		private void SetupMockData()
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x101816C", Offset = "0x101816C", VA = "0x101816C")]
		public GraphHolderDataSetter()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class LevelBarAnimator : MonoBehaviour
	{
		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7BEBC", Offset = "0xB7BEBC")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _currentLevel;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _nextLevel;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string _levelUpAnimatorTrigger;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string _levelDownAnimatorTrigger;

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x101F370", Offset = "0x101F370", VA = "0x101F370")]
		private string LevelString(int levelNr)
		{
			return null;
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x101F440", Offset = "0x101F440", VA = "0x101F440")]
		public void LevelUp(int nextLevel)
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x101F594", Offset = "0x101F594", VA = "0x101F594")]
		public void LevelDown(int nextLevel)
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x101F6E8", Offset = "0x101F6E8", VA = "0x101F6E8")]
		public LevelBarAnimator()
		{
		}
	}
	[Token(Token = "0x2000358")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB71C04", Offset = "0xB71C04")]
	public class SubtitleStyles : ScriptableObject
	{
		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Color> fontColors;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int smallFontSize;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int mediumFontSize;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int bigFontSize;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color defaultColor;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int defaultSize;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SubtitleStyles instance;

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x112A690", Offset = "0x112A690", VA = "0x112A690")]
		public Color GetColor(int colorIndex)
		{
			return default(Color);
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x112A764", Offset = "0x112A764", VA = "0x112A764")]
		public int GetSize(int sizeIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x112A80C", Offset = "0x112A80C", VA = "0x112A80C")]
		private static SubtitleStyles GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x112A9A0", Offset = "0x112A9A0", VA = "0x112A9A0")]
		public static void GetColorAndSize(int colorIndex, int sizeIndex, out Font font, out Color color, out int size)
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x112AB80", Offset = "0x112AB80", VA = "0x112AB80")]
		public static List<Color> GetColorList()
		{
			return null;
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x112ABEC", Offset = "0x112ABEC", VA = "0x112ABEC")]
		public SubtitleStyles()
		{
		}
	}
	[Token(Token = "0x2000359")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB71C58", Offset = "0xB71C58")]
	public class Theme : ScriptableObject
	{
		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ThemeTextStyles textStyles;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ThemeColorStyles colorStyles;

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x112B1F4", Offset = "0x112B1F4", VA = "0x112B1F4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x112AB68", Offset = "0x112AB68", VA = "0x112AB68")]
		public TextStyle GetTextStyle(TextStyleType textStyleType)
		{
			return null;
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x112B308", Offset = "0x112B308", VA = "0x112B308")]
		public ColorStyle GetColorStyle(ColorStyleType colorStyleType)
		{
			return null;
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x112B3EC", Offset = "0x112B3EC", VA = "0x112B3EC")]
		public void SetTextStyles(ThemeTextStyles themeTextStyles)
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x112B3F4", Offset = "0x112B3F4", VA = "0x112B3F4")]
		public Theme()
		{
		}
	}
	[Token(Token = "0x200035A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB71CAC", Offset = "0xB71CAC")]
	public class ThemeColorStyles : ScriptableObject
	{
		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ColorStyle white;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColorStyle black;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ColorStyle grey;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ColorStyle black80;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ColorStyle faddedBlack;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ColorStyle buttonDisabled;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ColorStyle gandalf;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ColorStyle gandalfFade;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ColorStyle gradientTest;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ColorStyle graphLinear;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ColorStyle greenAproval;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ColorStyle redError;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ColorStyle inputfieldLine;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ColorStyle buttonRampOne;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ColorStyle buttonRampTwo;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ColorStyle container;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ColorStyle backgroundRampOne;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ColorStyle backgroundRampTwo;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ColorStyle progressBarBackground;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public ColorStyle progressBarGradient;

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x112B3FC", Offset = "0x112B3FC", VA = "0x112B3FC")]
		public ThemeColorStyles()
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x112B320", Offset = "0x112B320", VA = "0x112B320")]
		public ColorStyle GetColorStyle(ColorStyleType colorStyleType)
		{
			return null;
		}
	}
	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB71D00", Offset = "0xB71D00")]
	public class ThemeTextStyles : ScriptableObject
	{
		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextStyle header1;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextStyle header2;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextStyle header3;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextStyle body;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextStyle bodyBlockText;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextStyle bodySecondary;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextStyle bodyTextDetails;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextStyle button24;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextStyle button36;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextStyle button48;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextStyle buttonText;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextStyle buttonTextSmall;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TextStyle formGenderCaption;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TextStyle formGenderCaptionSelection;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TextStyle formInput;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TextStyle formPassword;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TextStyle formSelectHover;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public TextStyle formSelect;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public TextStyle graphBig;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TextStyle graphCaption;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public TextStyle subtitleSize1;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public TextStyle subtitleSize2;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public TextStyle subtitleSize3;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public TextStyle labelButtonRegular;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public TextStyle labelButtonBold;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public TextStyle sortRegular;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public TextStyle sortBold;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public TextStyle errorMessage;

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x112B728", Offset = "0x112B728", VA = "0x112B728")]
		public ThemeTextStyles()
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x112B1FC", Offset = "0x112B1FC", VA = "0x112B1FC")]
		public TextStyle GetTextStyle(TextStyleType textStyleType)
		{
			return null;
		}
	}
	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB71D54", Offset = "0xB71D54")]
	public class UIView : ScriptableObject
	{
		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsRoot;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool showMenuBar;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIMenu CenterMenu;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIMenu LeftMenu;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIMenu RightMenu;

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xD299C4", Offset = "0xD299C4", VA = "0xD299C4")]
		public UIView()
		{
		}
	}
}
namespace AttentionLab.UI.Utils
{
	[Token(Token = "0x200035D")]
	public static class BezierUtils
	{
		[Serializable]
		[Token(Token = "0x200071A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72D94", Offset = "0xB72D94")]
		private sealed class <>c
		{
			[Token(Token = "0x4002ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Vector2, float> <>9__1_0;

			[Token(Token = "0x4002ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Vector2, float> <>9__1_1;

			[Token(Token = "0x6002F75")]
			[Address(RVA = "0xD2A7A4", Offset = "0xD2A7A4", VA = "0xD2A7A4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F76")]
			[Address(RVA = "0xD2A7AC", Offset = "0xD2A7AC", VA = "0xD2A7AC")]
			internal float <GetCurveControlPoints>b__1_0(Vector2 knot)
			{
				return default(float);
			}

			[Token(Token = "0x6002F77")]
			[Address(RVA = "0xD2A7B0", Offset = "0xD2A7B0", VA = "0xD2A7B0")]
			internal float <GetCurveControlPoints>b__1_1(Vector2 knot)
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xD29CC0", Offset = "0xD29CC0", VA = "0xD29CC0")]
		public static Vector2[] CreateBezierPointsFromLinePoints(Vector2[] points)
		{
			return null;
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xD29E2C", Offset = "0xD29E2C", VA = "0xD29E2C")]
		public static void GetCurveControlPoints(Vector2[] knots, out Vector2[] firstControlPoints, out Vector2[] secondControlPoints)
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xD2A3F0", Offset = "0xD2A3F0", VA = "0xD2A3F0")]
		private static float[] CreateRightHandVectors(float[] knotValues)
		{
			return null;
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xD2A564", Offset = "0xD2A564", VA = "0xD2A564")]
		private static float[] GetFirstControlPoints(float[] rightVectors)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200035E")]
	public class AxisBounds
	{
		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float xMin;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float xMax;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float yMin;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float yMax;

		[Token(Token = "0x17000287")]
		public float XMin
		{
			[Token(Token = "0x6001B6C")]
			[Address(RVA = "0xD29C34", Offset = "0xD29C34", VA = "0xD29C34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B6D")]
			[Address(RVA = "0xD29C3C", Offset = "0xD29C3C", VA = "0xD29C3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public float XMax
		{
			[Token(Token = "0x6001B6E")]
			[Address(RVA = "0xD29C44", Offset = "0xD29C44", VA = "0xD29C44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B6F")]
			[Address(RVA = "0xD29C4C", Offset = "0xD29C4C", VA = "0xD29C4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public float YMin
		{
			[Token(Token = "0x6001B70")]
			[Address(RVA = "0xD29C54", Offset = "0xD29C54", VA = "0xD29C54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B71")]
			[Address(RVA = "0xD29C5C", Offset = "0xD29C5C", VA = "0xD29C5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public float YMax
		{
			[Token(Token = "0x6001B72")]
			[Address(RVA = "0xD29C64", Offset = "0xD29C64", VA = "0xD29C64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B73")]
			[Address(RVA = "0xD29C6C", Offset = "0xD29C6C", VA = "0xD29C6C")]
			set
			{
			}
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xD29C74", Offset = "0xD29C74", VA = "0xD29C74")]
		public AxisBounds(float xMin, float xMax, float yMin, float yMax)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035F")]
	public class LineDataSet
	{
		[Serializable]
		[Token(Token = "0x200071B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72DA4", Offset = "0xB72DA4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<LineEntry, float> <>9__27_0;

			[Token(Token = "0x4002AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<LineEntry, float> <>9__28_0;

			[Token(Token = "0x4002AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<LineEntry, float> <>9__30_0;

			[Token(Token = "0x4002AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<LineEntry, float> <>9__36_0;

			[Token(Token = "0x4002AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<LineEntry, float> <>9__37_0;

			[Token(Token = "0x6002F79")]
			[Address(RVA = "0xD2DDCC", Offset = "0xD2DDCC", VA = "0xD2DDCC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F7A")]
			[Address(RVA = "0xD2DDD4", Offset = "0xD2DDD4", VA = "0xD2DDD4")]
			internal float <GetMaxPosition>b__27_0(LineEntry a)
			{
				return default(float);
			}

			[Token(Token = "0x6002F7B")]
			[Address(RVA = "0xD2DDF0", Offset = "0xD2DDF0", VA = "0xD2DDF0")]
			internal float <GetMinPosition>b__28_0(LineEntry a)
			{
				return default(float);
			}

			[Token(Token = "0x6002F7C")]
			[Address(RVA = "0xD2DE0C", Offset = "0xD2DE0C", VA = "0xD2DE0C")]
			internal float <GetSortedEntries>b__30_0(LineEntry entry)
			{
				return default(float);
			}

			[Token(Token = "0x6002F7D")]
			[Address(RVA = "0xD2DE28", Offset = "0xD2DE28", VA = "0xD2DE28")]
			internal float <GetMaxValue>b__36_0(LineEntry a)
			{
				return default(float);
			}

			[Token(Token = "0x6002F7E")]
			[Address(RVA = "0xD2DE44", Offset = "0xD2DE44", VA = "0xD2DE44")]
			internal float <GetMinValue>b__37_0(LineEntry a)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string title;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<LineEntry> entries;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float lineThickness;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color lineColor;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Color fillColor;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Texture fillTexture;

		[Token(Token = "0x1700028B")]
		public float LineThickness
		{
			[Token(Token = "0x6001B75")]
			[Address(RVA = "0xD2D98C", Offset = "0xD2D98C", VA = "0xD2D98C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B76")]
			[Address(RVA = "0xD2D994", Offset = "0xD2D994", VA = "0xD2D994")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public Color LineColor
		{
			[Token(Token = "0x6001B77")]
			[Address(RVA = "0xD2D99C", Offset = "0xD2D99C", VA = "0xD2D99C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001B78")]
			[Address(RVA = "0xD2D9A8", Offset = "0xD2D9A8", VA = "0xD2D9A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public Color FillColor
		{
			[Token(Token = "0x6001B79")]
			[Address(RVA = "0xD2D9B4", Offset = "0xD2D9B4", VA = "0xD2D9B4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001B7A")]
			[Address(RVA = "0xD2D9C0", Offset = "0xD2D9C0", VA = "0xD2D9C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public Texture FillTexture
		{
			[Token(Token = "0x6001B7B")]
			[Address(RVA = "0xD2D9CC", Offset = "0xD2D9CC", VA = "0xD2D9CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B7C")]
			[Address(RVA = "0xD2D9D4", Offset = "0xD2D9D4", VA = "0xD2D9D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public string Title
		{
			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0xD2D9DC", Offset = "0xD2D9DC", VA = "0xD2D9DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B7E")]
			[Address(RVA = "0xD2D9E4", Offset = "0xD2D9E4", VA = "0xD2D9E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000290")]
		public List<LineEntry> Entries
		{
			[Token(Token = "0x6001B7F")]
			[Address(RVA = "0xD2D9EC", Offset = "0xD2D9EC", VA = "0xD2D9EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B80")]
			[Address(RVA = "0xD2D9F4", Offset = "0xD2D9F4", VA = "0xD2D9F4")]
			set
			{
			}
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xD2A848", Offset = "0xD2A848", VA = "0xD2A848")]
		public LineDataSet()
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xD2D9FC", Offset = "0xD2D9FC", VA = "0xD2D9FC")]
		public LineDataSet(string title)
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xD2DAA8", Offset = "0xD2DAA8", VA = "0xD2DAA8")]
		public LineDataSet(string title, List<LineEntry> entries)
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xD2D57C", Offset = "0xD2D57C", VA = "0xD2D57C")]
		public float GetMaxPosition()
		{
			return default(float);
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xD2D418", Offset = "0xD2D418", VA = "0xD2D418")]
		public float GetMinPosition()
		{
			return default(float);
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xD2B94C", Offset = "0xD2B94C", VA = "0xD2B94C")]
		public float PositionDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xD2BAA8", Offset = "0xD2BAA8", VA = "0xD2BAA8")]
		public List<LineEntry> GetSortedEntries()
		{
			return null;
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xD2B8F0", Offset = "0xD2B8F0", VA = "0xD2B8F0")]
		public int GetEntriesCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xD2DB0C", Offset = "0xD2DB0C", VA = "0xD2DB0C")]
		public void AddEntry(LineEntry entry, int position)
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xD2DB7C", Offset = "0xD2DB7C", VA = "0xD2DB7C")]
		public void AddEntry(LineEntry entry)
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xD2DBE4", Offset = "0xD2DBE4", VA = "0xD2DBE4")]
		public void RemoveEntry(int position)
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xD2DC4C", Offset = "0xD2DC4C", VA = "0xD2DC4C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xD2D844", Offset = "0xD2D844", VA = "0xD2D844")]
		public float GetMaxValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xD2D6E0", Offset = "0xD2D6E0", VA = "0xD2D6E0")]
		public float GetMinValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xD2DCA4", Offset = "0xD2DCA4", VA = "0xD2DCA4")]
		public LineEntry GetEntryAt(int position)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000360")]
	public class LineData
	{
		[Serializable]
		[Token(Token = "0x200071C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72DB4", Offset = "0xB72DB4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<LineDataSet, float> <>9__7_0;

			[Token(Token = "0x4002AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<LineDataSet, float> <>9__8_0;

			[Token(Token = "0x4002AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<LineDataSet, float> <>9__9_0;

			[Token(Token = "0x4002AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<LineDataSet, float> <>9__10_0;

			[Token(Token = "0x6002F80")]
			[Address(RVA = "0xD2D3F4", Offset = "0xD2D3F4", VA = "0xD2D3F4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F81")]
			[Address(RVA = "0xD2D3FC", Offset = "0xD2D3FC", VA = "0xD2D3FC")]
			internal float <GetMinPosition>b__7_0(LineDataSet dataSet)
			{
				return default(float);
			}

			[Token(Token = "0x6002F82")]
			[Address(RVA = "0xD2D560", Offset = "0xD2D560", VA = "0xD2D560")]
			internal float <GetMaxPosition>b__8_0(LineDataSet dataSet)
			{
				return default(float);
			}

			[Token(Token = "0x6002F83")]
			[Address(RVA = "0xD2D6C4", Offset = "0xD2D6C4", VA = "0xD2D6C4")]
			internal float <GetMinValue>b__9_0(LineDataSet dataSet)
			{
				return default(float);
			}

			[Token(Token = "0x6002F84")]
			[Address(RVA = "0xD2D828", Offset = "0xD2D828", VA = "0xD2D828")]
			internal float <GetMaxValue>b__10_0(LineDataSet dataSet)
			{
				return default(float);
			}
		}

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<LineDataSet> dataSets;

		[Token(Token = "0x17000291")]
		public List<LineDataSet> DataSets
		{
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0xD2D030", Offset = "0xD2D030", VA = "0xD2D030")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xD2D038", Offset = "0xD2D038", VA = "0xD2D038")]
		public LineData()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xD2A898", Offset = "0xD2A898", VA = "0xD2A898")]
		public LineData(LineDataSet dataSet)
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xD2D0AC", Offset = "0xD2D0AC", VA = "0xD2D0AC")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xD2D104", Offset = "0xD2D104", VA = "0xD2D104")]
		public bool HasAnyData()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xD2C384", Offset = "0xD2C384", VA = "0xD2C384")]
		public float GetMinPosition()
		{
			return default(float);
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xD2C49C", Offset = "0xD2C49C", VA = "0xD2C49C")]
		public float GetMaxPosition()
		{
			return default(float);
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xD2D160", Offset = "0xD2D160", VA = "0xD2D160")]
		public float GetMinValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xD2D278", Offset = "0xD2D278", VA = "0xD2D278")]
		public float GetMaxValue()
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x2000361")]
	public class LineEntry
	{
		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float value;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float position;

		[Token(Token = "0x17000292")]
		public float Position
		{
			[Token(Token = "0x6001B9B")]
			[Address(RVA = "0xD2DEC0", Offset = "0xD2DEC0", VA = "0xD2DEC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0xD2DEC8", Offset = "0xD2DEC8", VA = "0xD2DEC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public float Value
		{
			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0xD2DED0", Offset = "0xD2DED0", VA = "0xD2DED0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0xD2DED8", Offset = "0xD2DED8", VA = "0xD2DED8")]
			set
			{
			}
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xD2DE60", Offset = "0xD2DE60", VA = "0xD2DE60")]
		public LineEntry()
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xD2DE88", Offset = "0xD2DE88", VA = "0xD2DE88")]
		public LineEntry(float position, float value)
		{
		}
	}
	[Token(Token = "0x2000362")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB71DA8", Offset = "0xB71DA8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB71DA8", Offset = "0xB71DA8")]
	public class LineChart : MonoBehaviour
	{
		[Token(Token = "0x200071D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72DC4", Offset = "0xB72DC4")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4002AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AxisBounds axisBounds;

			[Token(Token = "0x4002ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float positionDelta;

			[Token(Token = "0x4002ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector2 chartSize;

			[Token(Token = "0x4002ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float valueDelta;

			[Token(Token = "0x4002ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2[] result;

			[Token(Token = "0x4002ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int index;

			[Token(Token = "0x6002F85")]
			[Address(RVA = "0xD2B944", Offset = "0xD2B944", VA = "0xD2B944")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6002F86")]
			[Address(RVA = "0xD2C9B0", Offset = "0xD2C9B0", VA = "0xD2C9B0")]
			internal void <CreateLinePointsFromDataSet>b__0(LineEntry entry)
			{
			}
		}

		[Token(Token = "0x400161D")]
		private const int BEZIER_LINE_SEGMENTS = 10;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 BOTTOM_LEFT;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineData data;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2[][] entriesPoints;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2[][] bezierPoints;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected GameObject contentView;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected GameObject chartDataContainerView;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<UILineRenderer> lineRenderers;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<LineChartBackground> lineBackgrounds;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RectTransform thisRectTransform;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool chartInstantiated;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector2 lastSize;

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xD2A7B8", Offset = "0xD2A7B8", VA = "0xD2A7B8")]
		public LineData GetChartData()
		{
			return null;
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xD2A7C0", Offset = "0xD2A7C0", VA = "0xD2A7C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xD2A908", Offset = "0xD2A908", VA = "0xD2A908")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xD2AA24", Offset = "0xD2AA24", VA = "0xD2AA24")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xD2AA80", Offset = "0xD2AA80", VA = "0xD2AA80")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xD2AB00", Offset = "0xD2AB00", VA = "0xD2AB00")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xD2AB10", Offset = "0xD2AB10", VA = "0xD2AB10")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xD2AB20", Offset = "0xD2AB20", VA = "0xD2AB20")]
		protected void OnInstantiateViews()
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xD2A988", Offset = "0xD2A988", VA = "0xD2A988")]
		protected void OnDrawChartContent()
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xD2AC6C", Offset = "0xD2AC6C", VA = "0xD2AC6C")]
		private void UpdateLineRendererInstances(int requiredCount)
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xD2A92C", Offset = "0xD2A92C", VA = "0xD2A92C")]
		private void InstantiateContentViews()
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xD2B134", Offset = "0xD2B134", VA = "0xD2B134")]
		private void UpdateViewsSize()
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xD2AA28", Offset = "0xD2AA28", VA = "0xD2AA28")]
		private void CheckIfSizeChanged()
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xD2B0D0", Offset = "0xD2B0D0", VA = "0xD2B0D0")]
		private GameObject InstantiateContentContainer()
		{
			return null;
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xD2B0FC", Offset = "0xD2B0FC", VA = "0xD2B0FC")]
		protected GameObject InstantiateChartDataContainer()
		{
			return null;
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xD2B014", Offset = "0xD2B014", VA = "0xD2B014")]
		private UILineRenderer CreateLineRenderer()
		{
			return null;
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xD2AD94", Offset = "0xD2AD94", VA = "0xD2AD94")]
		private void UpdateBackgroundInstances(int requiredCount)
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xD2B484", Offset = "0xD2B484", VA = "0xD2B484")]
		private LineChartBackground CreateLineBackground()
		{
			return null;
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xD2AB88", Offset = "0xD2AB88", VA = "0xD2AB88")]
		private void CalculateLinesPoints()
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xD2B5EC", Offset = "0xD2B5EC", VA = "0xD2B5EC")]
		private void CalculateDataSetLinePoints(LineDataSet dataSet, int dataSetIndex)
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xD2B75C", Offset = "0xD2B75C", VA = "0xD2B75C")]
		private Vector2[] CreateLinePointsFromDataSet(LineDataSet dataSet)
		{
			return null;
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xD2AEC8", Offset = "0xD2AEC8", VA = "0xD2AEC8")]
		private void DrawLines()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xD2BBA8", Offset = "0xD2BBA8", VA = "0xD2BBA8")]
		private void DrawLineBackground(LineChartBackground lineBackground, LineDataSet dataSet, int dataSetIndex)
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xD2BE1C", Offset = "0xD2BE1C", VA = "0xD2BE1C")]
		private Vector2[] CalculateBezierSegmentsPoints(Vector2[] controlPoints)
		{
			return null;
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xD2BC74", Offset = "0xD2BC74", VA = "0xD2BC74")]
		private int DrawLine(UILineRenderer lineRenderer, LineDataSet dataSet, int dataSetIndex, int currentIndicatorPosition)
		{
			return default(int);
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xD2BECC", Offset = "0xD2BECC", VA = "0xD2BECC")]
		public Vector2 CalculateCurvePointForPosition(float position, int dataSetIndex)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xD2C0E0", Offset = "0xD2C0E0", VA = "0xD2C0E0")]
		public Vector2[] CalculateCurvePointsForPositions(float[] positions, int dataSetIndex)
		{
			return null;
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xD2BEF0", Offset = "0xD2BEF0", VA = "0xD2BEF0")]
		private Vector2 CalculateCurveViewPointForPosition(float position, int dataSetIndex)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xD2C2D8", Offset = "0xD2C2D8", VA = "0xD2C2D8")]
		private float GetPositionAxisViewScale()
		{
			return default(float);
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xD2C32C", Offset = "0xD2C32C", VA = "0xD2C32C")]
		private float GetValueAxisViewScale()
		{
			return default(float);
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xD2C074", Offset = "0xD2C074", VA = "0xD2C074")]
		private Vector2 TransformViewPointIntoAxisPoint(Vector2 point)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xD2C1CC", Offset = "0xD2C1CC", VA = "0xD2C1CC")]
		private Vector2[] TransformViewPointsIntoAxisPoints(Vector2[] points)
		{
			return null;
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xD2B1E4", Offset = "0xD2B1E4", VA = "0xD2B1E4")]
		protected Vector2 GetSize()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xD2C380", Offset = "0xD2C380", VA = "0xD2C380", Slot = "4")]
		protected virtual Vector2 GetContentSize()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xD2AB78", Offset = "0xD2AB78", VA = "0xD2AB78")]
		private void UpdateAxis()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xD2BA10", Offset = "0xD2BA10", VA = "0xD2BA10")]
		protected AxisBounds GetAxisBounds()
		{
			return null;
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xD2C5B4", Offset = "0xD2C5B4", VA = "0xD2C5B4")]
		private float CalculateRoundingDifferenceForValue(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xD2C72C", Offset = "0xD2C72C", VA = "0xD2C72C")]
		private GameObject CreateBaseGameObject(string name, Transform parent, Vector2 pivot)
		{
			return null;
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xD2B29C", Offset = "0xD2B29C", VA = "0xD2B29C")]
		public GameObject InstantiateContentView(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xD2B324", Offset = "0xD2B324", VA = "0xD2B324")]
		public GameObject InstantiateChartDataContainerView(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xD2B3AC", Offset = "0xD2B3AC", VA = "0xD2B3AC")]
		public UILineRenderer InstantiateLineRenderer(string name, Transform parent, Vector2 pivot)
		{
			return null;
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xD2B540", Offset = "0xD2B540", VA = "0xD2B540")]
		public LineChartBackground InstantiateLineBackground(string name, Transform parent, Vector2 pivot)
		{
			return null;
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xD2C8CC", Offset = "0xD2C8CC", VA = "0xD2C8CC")]
		public LineChart()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class LineChartBackground : MaskableGraphic
	{
		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Vector2[] points;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private AxisBounds axisBounds;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Texture texture;

		[Token(Token = "0x17000294")]
		public Vector2[] Points
		{
			[Token(Token = "0x6001BCA")]
			[Address(RVA = "0xD2CA64", Offset = "0xD2CA64", VA = "0xD2CA64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BCB")]
			[Address(RVA = "0xD2BEB8", Offset = "0xD2BEB8", VA = "0xD2BEB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public AxisBounds AxisBounds
		{
			[Token(Token = "0x6001BCC")]
			[Address(RVA = "0xD2CA6C", Offset = "0xD2CA6C", VA = "0xD2CA6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BCD")]
			[Address(RVA = "0xD2BE08", Offset = "0xD2BE08", VA = "0xD2BE08")]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public Texture Texture
		{
			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0xD2CA74", Offset = "0xD2CA74", VA = "0xD2CA74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0xD2BD4C", Offset = "0xD2BD4C", VA = "0xD2BD4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public override Texture mainTexture
		{
			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0xD2CA7C", Offset = "0xD2CA7C", VA = "0xD2CA7C", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xD2CAF0", Offset = "0xD2CAF0", VA = "0xD2CAF0", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xD2CDB8", Offset = "0xD2CDB8", VA = "0xD2CDB8")]
		private Vector2 GetCorrectUV(Vector2 point, float maxX, float maxY)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xD2CDEC", Offset = "0xD2CDEC", VA = "0xD2CDEC")]
		private UIVertex[] CreateUIVertices(Vector2[] vertices, Vector2[] uvs)
		{
			return null;
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xD2D028", Offset = "0xD2D028", VA = "0xD2D028")]
		public LineChartBackground()
		{
		}
	}
}
namespace AttentionLab.REST
{
	[Token(Token = "0x2000364")]
	public class IDataService : MonoBehaviour
	{
		[Token(Token = "0x200071E")]
		public delegate void OnServerCheckReturned(Request request);

		[Token(Token = "0x200071F")]
		public delegate void OnLatestVersionReturned(Request request, EnhanceVersion enhanceVersion);

		[Token(Token = "0x2000720")]
		public delegate void OnTokenReturned(Request request, AttentionLab.REST.Data.Token token);

		[Token(Token = "0x2000721")]
		public delegate void OnUserReturned(Request request, AttentionLab.REST.Data.User user);

		[Token(Token = "0x2000722")]
		public delegate void OnValidateEmailReturned(Request request);

		[Token(Token = "0x2000723")]
		public delegate void OnResetPasswordReturned(Request request);

		[Token(Token = "0x2000724")]
		public delegate void OnSetAvatarReturned(Request request);

		[Token(Token = "0x2000725")]
		public delegate void OnResendVerificationEmail(Request request);

		[Token(Token = "0x2000726")]
		public delegate void OnPageReturned(Request request, Page page);

		[Token(Token = "0x2000727")]
		public delegate void OnActivityReturned(Request request);

		[Token(Token = "0x2000728")]
		public delegate void OnAvatarsReturned(Request request, List<AttentionLab.REST.Data.Avatar> avatars);

		[Token(Token = "0x2000729")]
		public delegate void OnMoodReturned(Request request);

		[Token(Token = "0x200072A")]
		public delegate void OnNewsReturned(Request request, List<News> news);

		[Token(Token = "0x200072B")]
		public delegate void OnWorkoutReturned(Request request, WodData workout);

		[Token(Token = "0x200072C")]
		public delegate void OnTutorialReturned(Request request);

		[Token(Token = "0x200072D")]
		public delegate void OnTutorialComplete(Request request);

		[Token(Token = "0x200072E")]
		public delegate void OnGamesReturned(Request request, List<Game> games);

		[Token(Token = "0x200072F")]
		public delegate void OnSessionReturned(Request request, SessionData sessionData);

		[Token(Token = "0x2000730")]
		public delegate void OnGameCategoryStatsReturned(Request request, CategoryStats stat);

		[Token(Token = "0x2000731")]
		public delegate void OnGameCategoriesStatsReturned(Request request, CategoriesStats stat);

		[Token(Token = "0x2000732")]
		public delegate void OnGameStatsReturned(Request request, GameStats stat);

		[Token(Token = "0x2000733")]
		public delegate void OnGamesStatsReturned(Request request, GamesStats stat);

		[Token(Token = "0x2000734")]
		public delegate void OnUsersEpiReturned(Request request, UserEpi stat);

		[Token(Token = "0x2000735")]
		public delegate void OnUserStatsReturned(Request request, AttentionLab.REST.Data.UserStats stat);

		[Token(Token = "0x2000736")]
		public delegate void OnWodsStatsReturned(Request request, WodStats stat);

		[Token(Token = "0x2000737")]
		public delegate void OnImageReturned(ServerResponse response, Texture2D texture);

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x10C2418", Offset = "0x10C2418", VA = "0x10C2418")]
		protected IDataService()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x10C2420", Offset = "0x10C2420", VA = "0x10C2420", Slot = "4")]
		public virtual void GetServerCheck(OnServerCheckReturned callback)
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x10C2424", Offset = "0x10C2424", VA = "0x10C2424", Slot = "5")]
		public virtual void CheckForUpdates(OnLatestVersionReturned callback)
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x10C2428", Offset = "0x10C2428", VA = "0x10C2428", Slot = "6")]
		public virtual void GetAvatars(OnAvatarsReturned callback)
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x10C242C", Offset = "0x10C242C", VA = "0x10C242C", Slot = "7")]
		public virtual void SetAvatar(int avatarId, OnSetAvatarReturned callback)
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x10C2430", Offset = "0x10C2430", VA = "0x10C2430", Slot = "8")]
		public virtual void SetLanguage(AttentionLab.Localization.Locale languageId, OnSetAvatarReturned callback)
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x10C2434", Offset = "0x10C2434", VA = "0x10C2434", Slot = "9")]
		public virtual void Register(string firstName, string lastName, string email, string password, string birthday, int genderId, int educationId, int professionId, bool subscribeNewsletter, OnUserReturned callback)
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x10C2438", Offset = "0x10C2438", VA = "0x10C2438", Slot = "10")]
		public virtual void Login(string username, string password, OnTokenReturned callback)
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x10C243C", Offset = "0x10C243C", VA = "0x10C243C", Slot = "11")]
		public virtual void GetClientAccessToken(OnTokenReturned callback)
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x10C2440", Offset = "0x10C2440", VA = "0x10C2440", Slot = "12")]
		public virtual void RefreshToken(string refreshToken, OnTokenReturned callback)
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x10C2444", Offset = "0x10C2444", VA = "0x10C2444", Slot = "13")]
		protected virtual void ProcessUserTokenResponse(Request request, bool applyLanguageFromServer, OnTokenReturned callback)
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x10C2448", Offset = "0x10C2448", VA = "0x10C2448", Slot = "14")]
		public virtual void GetUser(OnUserReturned callback)
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x10C244C", Offset = "0x10C244C", VA = "0x10C244C", Slot = "15")]
		public virtual void UpdateUser(LocaleConfig localeConfig, OnUserReturned callback)
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x10C2450", Offset = "0x10C2450", VA = "0x10C2450", Slot = "16")]
		public virtual void ValidateEmail(string email, OnValidateEmailReturned callback)
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x10C2454", Offset = "0x10C2454", VA = "0x10C2454", Slot = "17")]
		public virtual void ResetPassword(string email, OnResetPasswordReturned callback)
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x10C2458", Offset = "0x10C2458", VA = "0x10C2458", Slot = "18")]
		public virtual void ResendVerificationEmail(OnResendVerificationEmail callback)
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x10C245C", Offset = "0x10C245C", VA = "0x10C245C", Slot = "19")]
		public virtual void PostActivity(EActivityType activity, OnActivityReturned callback)
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x10C2460", Offset = "0x10C2460", VA = "0x10C2460", Slot = "20")]
		public virtual void GetPrivacyPolicy(OnPageReturned callback)
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x10C2464", Offset = "0x10C2464", VA = "0x10C2464", Slot = "21")]
		public virtual void GetUserAgreement(OnPageReturned callback)
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x10C2468", Offset = "0x10C2468", VA = "0x10C2468", Slot = "22")]
		public virtual void GetHealthAndSafetyWarning(OnPageReturned callback)
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x10C246C", Offset = "0x10C246C", VA = "0x10C246C", Slot = "23")]
		public virtual void GetEpiInformation(OnPageReturned callback)
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x10C2470", Offset = "0x10C2470", VA = "0x10C2470", Slot = "24")]
		public virtual void GetCredits(OnPageReturned callback)
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x10C2474", Offset = "0x10C2474", VA = "0x10C2474", Slot = "25")]
		public virtual void PostMood(ServerRequestsEnums.ESleepType sleepHours, EMoodType moodType, OnMoodReturned callback)
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x10C2478", Offset = "0x10C2478", VA = "0x10C2478", Slot = "26")]
		public virtual void GetNews(OnNewsReturned callback)
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x10C247C", Offset = "0x10C247C", VA = "0x10C247C", Slot = "27")]
		public virtual void GetDailyWod(OnWorkoutReturned callback)
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x10C2480", Offset = "0x10C2480", VA = "0x10C2480", Slot = "28")]
		public virtual void GetTutorial(int gameId, OnTutorialReturned callback)
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x10C2484", Offset = "0x10C2484", VA = "0x10C2484", Slot = "29")]
		public virtual void SetTutorialCompleted(int gameId, OnTutorialComplete callback)
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x10C2488", Offset = "0x10C2488", VA = "0x10C2488", Slot = "30")]
		public virtual void GetGamesList(OnGamesReturned callback)
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x10C248C", Offset = "0x10C248C", VA = "0x10C248C", Slot = "31")]
		public virtual void CreateGameSession(AttentionLab.Enums.GameType gameType, int wodId, OnSessionReturned callback)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x10C2490", Offset = "0x10C2490", VA = "0x10C2490", Slot = "32")]
		public virtual void AbandonGameSession(Game game, SessionData sessionData, SceneDataFromGame data, OnSessionReturned callback)
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x10C2494", Offset = "0x10C2494", VA = "0x10C2494", Slot = "33")]
		public virtual void EndGameSession(Game game, SessionData sessionData, SceneDataFromGame data, OnSessionReturned callback)
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x10C2498", Offset = "0x10C2498", VA = "0x10C2498", Slot = "34")]
		public virtual void GetGameCategoryStats(CategoryType categoryType, OnGameCategoryStatsReturned callback)
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x10C249C", Offset = "0x10C249C", VA = "0x10C249C", Slot = "35")]
		public virtual void GetGameCategoriesStats(OnGameCategoriesStatsReturned callback)
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x10C24A0", Offset = "0x10C24A0", VA = "0x10C24A0", Slot = "36")]
		public virtual void GetGamesStats(OnGamesStatsReturned callback)
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x10C24A4", Offset = "0x10C24A4", VA = "0x10C24A4", Slot = "37")]
		public virtual void GetGameStats(AttentionLab.Enums.GameType gameType, OnGameStatsReturned callback)
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x10C24A8", Offset = "0x10C24A8", VA = "0x10C24A8", Slot = "38")]
		public virtual void GetUserEpi(OnUsersEpiReturned callback)
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x10C24AC", Offset = "0x10C24AC", VA = "0x10C24AC", Slot = "39")]
		public virtual void GetUserStats(OnUserStatsReturned callback)
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x10C24B0", Offset = "0x10C24B0", VA = "0x10C24B0", Slot = "40")]
		public virtual void GetWodsStats(OnWodsStatsReturned callback)
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class LocalService : IDataService
	{
		[Token(Token = "0x2000738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72DD4", Offset = "0xB72DD4")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4002ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AttentionLab.Enums.GameType gameType;

			[Token(Token = "0x6002FEF")]
			[Address(RVA = "0x10C916C", Offset = "0x10C916C", VA = "0x10C916C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002FF0")]
			[Address(RVA = "0x10CD0F4", Offset = "0x10CD0F4", VA = "0x10CD0F4")]
			internal bool <IsGameAvailable>b__0(AppConfig.LocalGameConfig x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000739")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72DE4", Offset = "0xB72DE4")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AttentionLab.Enums.GameType gameType;

			[Token(Token = "0x6002FF1")]
			[Address(RVA = "0x10C9260", Offset = "0x10C9260", VA = "0x10C9260")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002FF2")]
			[Address(RVA = "0x10CD11C", Offset = "0x10CD11C", VA = "0x10CD11C")]
			internal bool <GetGameLocalConfig>b__0(AppConfig.LocalGameConfig x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200073A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72DF4", Offset = "0xB72DF4")]
		private sealed class <InvokeRequestCallback>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action callback;

			[Token(Token = "0x17000555")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FF6")]
				[Address(RVA = "0x10CD1E8", Offset = "0x10CD1E8", VA = "0x10CD1E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000556")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FF8")]
				[Address(RVA = "0x10CD254", Offset = "0x10CD254", VA = "0x10CD254", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FF3")]
			[Address(RVA = "0x10C92DC", Offset = "0x10C92DC", VA = "0x10C92DC")]
			[DebuggerHidden]
			public <InvokeRequestCallback>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002FF4")]
			[Address(RVA = "0x10CD144", Offset = "0x10CD144", VA = "0x10CD144", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FF5")]
			[Address(RVA = "0x10CD148", Offset = "0x10CD148", VA = "0x10CD148", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FF7")]
			[Address(RVA = "0x10CD1F0", Offset = "0x10CD1F0", VA = "0x10CD1F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200073B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72E04", Offset = "0xB72E04")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnServerCheckReturned callback;

			[Token(Token = "0x4002AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x6002FF9")]
			[Address(RVA = "0x10C93C0", Offset = "0x10C93C0", VA = "0x10C93C0")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002FFA")]
			[Address(RVA = "0x10CC600", Offset = "0x10CC600", VA = "0x10CC600")]
			internal void <GetServerCheck>b__0()
			{
			}
		}

		[Token(Token = "0x200073C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72E14", Offset = "0xB72E14")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4002AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnLatestVersionReturned callback;

			[Token(Token = "0x4002AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EnhanceVersion data;

			[Token(Token = "0x6002FFB")]
			[Address(RVA = "0x10C94BC", Offset = "0x10C94BC", VA = "0x10C94BC")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002FFC")]
			[Address(RVA = "0x10CC648", Offset = "0x10CC648", VA = "0x10CC648")]
			internal void <CheckForUpdates>b__0()
			{
			}
		}

		[Token(Token = "0x200073D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72E24", Offset = "0xB72E24")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4002AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnAvatarsReturned callback;

			[Token(Token = "0x4002ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AvatarsData data;

			[Token(Token = "0x6002FFD")]
			[Address(RVA = "0x10C959C", Offset = "0x10C959C", VA = "0x10C959C")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6002FFE")]
			[Address(RVA = "0x10CC698", Offset = "0x10CC698", VA = "0x10CC698")]
			internal void <GetAvatars>b__0()
			{
			}
		}

		[Token(Token = "0x200073E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72E34", Offset = "0xB72E34")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4002ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnSetAvatarReturned callback;

			[Token(Token = "0x4002ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x6002FFF")]
			[Address(RVA = "0x10C965C", Offset = "0x10C965C", VA = "0x10C965C")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6003000")]
			[Address(RVA = "0x10CC6F0", Offset = "0x10CC6F0", VA = "0x10CC6F0")]
			internal void <SetAvatar>b__0()
			{
			}
		}

		[Token(Token = "0x200073F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72E44", Offset = "0xB72E44")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4002ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnSetAvatarReturned callback;

			[Token(Token = "0x4002ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x6003001")]
			[Address(RVA = "0x10C971C", Offset = "0x10C971C", VA = "0x10C971C")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6003002")]
			[Address(RVA = "0x10CC738", Offset = "0x10CC738", VA = "0x10CC738")]
			internal void <SetLanguage>b__0()
			{
			}
		}

		[Token(Token = "0x2000740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72E54", Offset = "0xB72E54")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4002AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnUserReturned callback;

			[Token(Token = "0x4002AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AttentionLab.REST.Data.User data;

			[Token(Token = "0x6003003")]
			[Address(RVA = "0x10C9820", Offset = "0x10C9820", VA = "0x10C9820")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6003004")]
			[Address(RVA = "0x10CC780", Offset = "0x10CC780", VA = "0x10CC780")]
			internal void <Register>b__0()
			{
			}
		}

		[Token(Token = "0x2000741")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72E64", Offset = "0xB72E64")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4002AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnTokenReturned callback;

			[Token(Token = "0x4002AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AttentionLab.REST.Data.Token data;

			[Token(Token = "0x6003005")]
			[Address(RVA = "0x10C9900", Offset = "0x10C9900", VA = "0x10C9900")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6003006")]
			[Address(RVA = "0x10CC7D0", Offset = "0x10CC7D0", VA = "0x10CC7D0")]
			internal void <Login>b__0()
			{
			}
		}

		[Token(Token = "0x2000742")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72E74", Offset = "0xB72E74")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4002AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnTokenReturned callback;

			[Token(Token = "0x4002AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AttentionLab.REST.Data.Token data;

			[Token(Token = "0x6003007")]
			[Address(RVA = "0x10C99E0", Offset = "0x10C99E0", VA = "0x10C99E0")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6003008")]
			[Address(RVA = "0x10CC820", Offset = "0x10CC820", VA = "0x10CC820")]
			internal void <GetClientAccessToken>b__0()
			{
			}
		}

		[Token(Token = "0x2000743")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72E84", Offset = "0xB72E84")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4002AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnTokenReturned callback;

			[Token(Token = "0x4002AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AttentionLab.REST.Data.Token data;

			[Token(Token = "0x6003009")]
			[Address(RVA = "0x10C9AC0", Offset = "0x10C9AC0", VA = "0x10C9AC0")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x600300A")]
			[Address(RVA = "0x10CC870", Offset = "0x10CC870", VA = "0x10CC870")]
			internal void <RefreshToken>b__0()
			{
			}
		}

		[Token(Token = "0x2000744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72E94", Offset = "0xB72E94")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4002AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnUserReturned callback;

			[Token(Token = "0x4002AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AttentionLab.REST.Data.User data;

			[Token(Token = "0x600300B")]
			[Address(RVA = "0x10C9C44", Offset = "0x10C9C44", VA = "0x10C9C44")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x600300C")]
			[Address(RVA = "0x10CC8C0", Offset = "0x10CC8C0", VA = "0x10CC8C0")]
			internal void <GetUser>b__0()
			{
			}
		}

		[Token(Token = "0x2000745")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72EA4", Offset = "0xB72EA4")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4002AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnUserReturned callback;

			[Token(Token = "0x4002AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x600300D")]
			[Address(RVA = "0x10C9D24", Offset = "0x10C9D24", VA = "0x10C9D24")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x600300E")]
			[Address(RVA = "0x10CC910", Offset = "0x10CC910", VA = "0x10CC910")]
			internal void <UpdateUser>b__0()
			{
			}
		}

		[Token(Token = "0x2000746")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72EB4", Offset = "0xB72EB4")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4002AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnValidateEmailReturned callback;

			[Token(Token = "0x4002AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x600300F")]
			[Address(RVA = "0x10C9DE4", Offset = "0x10C9DE4", VA = "0x10C9DE4")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6003010")]
			[Address(RVA = "0x10CC95C", Offset = "0x10CC95C", VA = "0x10CC95C")]
			internal void <ValidateEmail>b__0()
			{
			}
		}

		[Token(Token = "0x2000747")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72EC4", Offset = "0xB72EC4")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4002AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnResetPasswordReturned callback;

			[Token(Token = "0x4002AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x6003011")]
			[Address(RVA = "0x10C9EA4", Offset = "0x10C9EA4", VA = "0x10C9EA4")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6003012")]
			[Address(RVA = "0x10CC9A4", Offset = "0x10CC9A4", VA = "0x10CC9A4")]
			internal void <ResetPassword>b__0()
			{
			}
		}

		[Token(Token = "0x2000748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72ED4", Offset = "0xB72ED4")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4002AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnActivityReturned callback;

			[Token(Token = "0x4002AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x6003013")]
			[Address(RVA = "0x10C9F64", Offset = "0x10C9F64", VA = "0x10C9F64")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6003014")]
			[Address(RVA = "0x10CC9EC", Offset = "0x10CC9EC", VA = "0x10CC9EC")]
			internal void <PostActivity>b__0()
			{
			}
		}

		[Token(Token = "0x2000749")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72EE4", Offset = "0xB72EE4")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4002AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnPageReturned callback;

			[Token(Token = "0x4002AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PageData data;

			[Token(Token = "0x6003015")]
			[Address(RVA = "0x10CA060", Offset = "0x10CA060", VA = "0x10CA060")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6003016")]
			[Address(RVA = "0x10CCA34", Offset = "0x10CCA34", VA = "0x10CCA34")]
			internal void <GetPrivacyPolicy>b__0()
			{
			}
		}

		[Token(Token = "0x200074A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72EF4", Offset = "0xB72EF4")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4002AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnPageReturned callback;

			[Token(Token = "0x4002AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PageData data;

			[Token(Token = "0x6003017")]
			[Address(RVA = "0x10CA15C", Offset = "0x10CA15C", VA = "0x10CA15C")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6003018")]
			[Address(RVA = "0x10CCA8C", Offset = "0x10CCA8C", VA = "0x10CCA8C")]
			internal void <GetUserAgreement>b__0()
			{
			}
		}

		[Token(Token = "0x200074B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72F04", Offset = "0xB72F04")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4002AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnPageReturned callback;

			[Token(Token = "0x4002AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PageData data;

			[Token(Token = "0x6003019")]
			[Address(RVA = "0x10CA2A8", Offset = "0x10CA2A8", VA = "0x10CA2A8")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x600301A")]
			[Address(RVA = "0x10CCAE4", Offset = "0x10CCAE4", VA = "0x10CCAE4")]
			internal void <GetHealthAndSafetyWarning>b__0()
			{
			}
		}

		[Token(Token = "0x200074C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72F14", Offset = "0xB72F14")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4002B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnPageReturned callback;

			[Token(Token = "0x4002B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PageData data;

			[Token(Token = "0x600301B")]
			[Address(RVA = "0x10CA3CC", Offset = "0x10CA3CC", VA = "0x10CA3CC")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x600301C")]
			[Address(RVA = "0x10CCB3C", Offset = "0x10CCB3C", VA = "0x10CCB3C")]
			internal void <GetEpiInformation>b__0()
			{
			}
		}

		[Token(Token = "0x200074D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72F24", Offset = "0xB72F24")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4002B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnPageReturned callback;

			[Token(Token = "0x4002B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PageData data;

			[Token(Token = "0x600301D")]
			[Address(RVA = "0x10CA4C8", Offset = "0x10CA4C8", VA = "0x10CA4C8")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x600301E")]
			[Address(RVA = "0x10CCB94", Offset = "0x10CCB94", VA = "0x10CCB94")]
			internal void <GetCredits>b__0()
			{
			}
		}

		[Token(Token = "0x200074E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72F34", Offset = "0xB72F34")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4002B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnMoodReturned callback;

			[Token(Token = "0x4002B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x600301F")]
			[Address(RVA = "0x10CA588", Offset = "0x10CA588", VA = "0x10CA588")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6003020")]
			[Address(RVA = "0x10CCBEC", Offset = "0x10CCBEC", VA = "0x10CCBEC")]
			internal void <PostMood>b__0()
			{
			}
		}

		[Token(Token = "0x200074F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72F44", Offset = "0xB72F44")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4002B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnNewsReturned callback;

			[Token(Token = "0x4002B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NewsData data;

			[Token(Token = "0x6003021")]
			[Address(RVA = "0x10CA6CC", Offset = "0x10CA6CC", VA = "0x10CA6CC")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6003022")]
			[Address(RVA = "0x10CCC34", Offset = "0x10CCC34", VA = "0x10CCC34")]
			internal void <GetNews>b__0()
			{
			}
		}

		[Token(Token = "0x2000750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72F54", Offset = "0xB72F54")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4002B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnWorkoutReturned callback;

			[Token(Token = "0x4002B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WodData data;

			[Token(Token = "0x6003023")]
			[Address(RVA = "0x10CA94C", Offset = "0x10CA94C", VA = "0x10CA94C")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6003024")]
			[Address(RVA = "0x10CCCA0", Offset = "0x10CCCA0", VA = "0x10CCCA0")]
			internal void <GetDailyWod>b__0()
			{
			}
		}

		[Token(Token = "0x2000751")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72F64", Offset = "0xB72F64")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4002B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnTutorialReturned callback;

			[Token(Token = "0x4002B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Request request;

			[Token(Token = "0x6003025")]
			[Address(RVA = "0x10CAB08", Offset = "0x10CAB08", VA = "0x10CAB08")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6003026")]
			[Address(RVA = "0x10CCCF0", Offset = "0x10CCCF0", VA = "0x10CCCF0")]
			internal void <GetTutorial>b__0()
			{
			}
		}

		[Token(Token = "0x2000752")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72F74", Offset = "0xB72F74")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4002B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnTutorialComplete callback;

			[Token(Token = "0x4002B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x6003027")]
			[Address(RVA = "0x10CAC60", Offset = "0x10CAC60", VA = "0x10CAC60")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6003028")]
			[Address(RVA = "0x10CCD08", Offset = "0x10CCD08", VA = "0x10CCD08")]
			internal void <SetTutorialCompleted>b__0()
			{
			}
		}

		[Token(Token = "0x2000753")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72F84", Offset = "0xB72F84")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4002B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnGamesReturned callback;

			[Token(Token = "0x4002B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Game> games;

			[Token(Token = "0x6003029")]
			[Address(RVA = "0x10CAEA0", Offset = "0x10CAEA0", VA = "0x10CAEA0")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x600302A")]
			[Address(RVA = "0x10CCD50", Offset = "0x10CCD50", VA = "0x10CCD50")]
			internal void <GetGamesList>b__0()
			{
			}
		}

		[Token(Token = "0x2000754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72F94", Offset = "0xB72F94")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4002B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnSessionReturned callback;

			[Token(Token = "0x4002B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SessionData currentSession;

			[Token(Token = "0x600302B")]
			[Address(RVA = "0x10CB388", Offset = "0x10CB388", VA = "0x10CB388")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x600302C")]
			[Address(RVA = "0x10CCDA0", Offset = "0x10CCDA0", VA = "0x10CCDA0")]
			internal void <CreateGameSession>b__0()
			{
			}
		}

		[Token(Token = "0x2000755")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72FA4", Offset = "0xB72FA4")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4002B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnSessionReturned callback;

			[Token(Token = "0x4002B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x600302D")]
			[Address(RVA = "0x10CB5B4", Offset = "0x10CB5B4", VA = "0x10CB5B4")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x600302E")]
			[Address(RVA = "0x10CCDF0", Offset = "0x10CCDF0", VA = "0x10CCDF0")]
			internal void <AbandonGameSession>b__0()
			{
			}
		}

		[Token(Token = "0x2000756")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72FB4", Offset = "0xB72FB4")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4002B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnSessionReturned callback;

			[Token(Token = "0x4002B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SessionData sessionData;

			[Token(Token = "0x600302F")]
			[Address(RVA = "0x10CB7E0", Offset = "0x10CB7E0", VA = "0x10CB7E0")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6003030")]
			[Address(RVA = "0x10CCE3C", Offset = "0x10CCE3C", VA = "0x10CCE3C")]
			internal void <EndGameSession>b__0()
			{
			}
		}

		[Token(Token = "0x2000757")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72FC4", Offset = "0xB72FC4")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4002B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnGameCategoryStatsReturned callback;

			[Token(Token = "0x4002B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CategoryStatsData data;

			[Token(Token = "0x6003031")]
			[Address(RVA = "0x10CB984", Offset = "0x10CB984", VA = "0x10CB984")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6003032")]
			[Address(RVA = "0x10CCE8C", Offset = "0x10CCE8C", VA = "0x10CCE8C")]
			internal void <GetGameCategoryStats>b__0()
			{
			}
		}

		[Token(Token = "0x2000758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72FD4", Offset = "0xB72FD4")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4002B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnGameCategoriesStatsReturned callback;

			[Token(Token = "0x4002B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CategoriesStatsData data;

			[Token(Token = "0x6003033")]
			[Address(RVA = "0x10CBA88", Offset = "0x10CBA88", VA = "0x10CBA88")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6003034")]
			[Address(RVA = "0x10CCEE4", Offset = "0x10CCEE4", VA = "0x10CCEE4")]
			internal void <GetGameCategoriesStats>b__0()
			{
			}
		}

		[Token(Token = "0x2000759")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72FE4", Offset = "0xB72FE4")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x4002B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnGamesStatsReturned callback;

			[Token(Token = "0x4002B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GamesStatsData data;

			[Token(Token = "0x6003035")]
			[Address(RVA = "0x10CBB8C", Offset = "0x10CBB8C", VA = "0x10CBB8C")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x6003036")]
			[Address(RVA = "0x10CCF3C", Offset = "0x10CCF3C", VA = "0x10CCF3C")]
			internal void <GetGamesStats>b__0()
			{
			}
		}

		[Token(Token = "0x200075A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72FF4", Offset = "0xB72FF4")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x4002B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnGameStatsReturned callback;

			[Token(Token = "0x4002B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameStatsData data;

			[Token(Token = "0x6003037")]
			[Address(RVA = "0x10CBFB0", Offset = "0x10CBFB0", VA = "0x10CBFB0")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x6003038")]
			[Address(RVA = "0x10CCF94", Offset = "0x10CCF94", VA = "0x10CCF94")]
			internal void <GetGameStats>b__0()
			{
			}
		}

		[Token(Token = "0x200075B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73004", Offset = "0xB73004")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4002B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnUsersEpiReturned callback;

			[Token(Token = "0x4002B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UserEpiData data;

			[Token(Token = "0x6003039")]
			[Address(RVA = "0x10CC0CC", Offset = "0x10CC0CC", VA = "0x10CC0CC")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x600303A")]
			[Address(RVA = "0x10CCFEC", Offset = "0x10CCFEC", VA = "0x10CCFEC")]
			internal void <GetUserEpi>b__0()
			{
			}
		}

		[Token(Token = "0x200075C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73014", Offset = "0xB73014")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x4002B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnUserStatsReturned callback;

			[Token(Token = "0x4002B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UserStatsData data;

			[Token(Token = "0x600303B")]
			[Address(RVA = "0x10CC2E0", Offset = "0x10CC2E0", VA = "0x10CC2E0")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x600303C")]
			[Address(RVA = "0x10CD044", Offset = "0x10CD044", VA = "0x10CD044")]
			internal void <GetUserStats>b__0()
			{
			}
		}

		[Token(Token = "0x200075D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73024", Offset = "0xB73024")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x4002B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnWodsStatsReturned callback;

			[Token(Token = "0x4002B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalService <>4__this;

			[Token(Token = "0x4002B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WodStatsData data;

			[Token(Token = "0x600303D")]
			[Address(RVA = "0x10CC414", Offset = "0x10CC414", VA = "0x10CC414")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x600303E")]
			[Address(RVA = "0x10CD09C", Offset = "0x10CD09C", VA = "0x10CD09C")]
			internal void <GetWodsStats>b__0()
			{
			}
		}

		[Token(Token = "0x400162C")]
		private const string KEY_PREFS_TUTORIAL_FORMAT = "enhance_{0}_tutorial";

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C038", Offset = "0xB7C038")]
		private AppConfig.LocalGameConfig[] <AvailableGames>k__BackingField;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<AttentionLab.Enums.GameType, Game> _gamesData;

		[Token(Token = "0x17000298")]
		public AppConfig.LocalGameConfig[] AvailableGames
		{
			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0x10C8F34", Offset = "0x10C8F34", VA = "0x10C8F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88DCC", Offset = "0xB88DCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BFC")]
			[Address(RVA = "0x10C8F3C", Offset = "0x10C8F3C", VA = "0x10C8F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88DDC", Offset = "0xB88DDC")]
			set
			{
			}
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x10C8F44", Offset = "0x10C8F44", VA = "0x10C8F44")]
		private Request GetDefaultRequest()
		{
			return null;
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x10C9074", Offset = "0x10C9074", VA = "0x10C9074")]
		private bool IsGameAvailable(AttentionLab.Enums.GameType gameType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x10C9174", Offset = "0x10C9174", VA = "0x10C9174")]
		private AppConfig.LocalGameConfig GetGameLocalConfig(AttentionLab.Enums.GameType gameType)
		{
			return null;
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x10C9268", Offset = "0x10C9268", VA = "0x10C9268")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88DEC", Offset = "0xB88DEC")]
		private IEnumerator InvokeRequestCallback(Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x10C9308", Offset = "0x10C9308", VA = "0x10C9308", Slot = "4")]
		public override void GetServerCheck(OnServerCheckReturned callback)
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x10C93C8", Offset = "0x10C93C8", VA = "0x10C93C8", Slot = "5")]
		public override void CheckForUpdates(OnLatestVersionReturned callback)
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x10C94C4", Offset = "0x10C94C4", VA = "0x10C94C4", Slot = "6")]
		public override void GetAvatars(OnAvatarsReturned callback)
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x10C95A4", Offset = "0x10C95A4", VA = "0x10C95A4", Slot = "7")]
		public override void SetAvatar(int avatarId, OnSetAvatarReturned callback)
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x10C9664", Offset = "0x10C9664", VA = "0x10C9664", Slot = "8")]
		public override void SetLanguage(AttentionLab.Localization.Locale languageId, OnSetAvatarReturned callback)
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x10C9724", Offset = "0x10C9724", VA = "0x10C9724", Slot = "9")]
		public override void Register(string firstName, string lastName, string email, string password, string birthday, int genderId, int educationId, int professionId, bool subscribeNewsletter, OnUserReturned callback)
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x10C9828", Offset = "0x10C9828", VA = "0x10C9828", Slot = "10")]
		public override void Login(string username, string password, OnTokenReturned callback)
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x10C9908", Offset = "0x10C9908", VA = "0x10C9908", Slot = "11")]
		public override void GetClientAccessToken(OnTokenReturned callback)
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x10C99E8", Offset = "0x10C99E8", VA = "0x10C99E8", Slot = "12")]
		public override void RefreshToken(string refreshToken, OnTokenReturned callback)
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x10C9AC8", Offset = "0x10C9AC8", VA = "0x10C9AC8", Slot = "14")]
		public override void GetUser(OnUserReturned callback)
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x10C9C4C", Offset = "0x10C9C4C", VA = "0x10C9C4C", Slot = "15")]
		public override void UpdateUser(LocaleConfig localeConfig, OnUserReturned callback)
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x10C9D2C", Offset = "0x10C9D2C", VA = "0x10C9D2C", Slot = "16")]
		public override void ValidateEmail(string email, OnValidateEmailReturned callback)
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x10C9DEC", Offset = "0x10C9DEC", VA = "0x10C9DEC", Slot = "17")]
		public override void ResetPassword(string email, OnResetPasswordReturned callback)
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x10C9EAC", Offset = "0x10C9EAC", VA = "0x10C9EAC", Slot = "19")]
		public override void PostActivity(EActivityType activity, OnActivityReturned callback)
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x10C9F6C", Offset = "0x10C9F6C", VA = "0x10C9F6C", Slot = "20")]
		public override void GetPrivacyPolicy(OnPageReturned callback)
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x10CA068", Offset = "0x10CA068", VA = "0x10CA068", Slot = "21")]
		public override void GetUserAgreement(OnPageReturned callback)
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x10CA164", Offset = "0x10CA164", VA = "0x10CA164", Slot = "22")]
		public override void GetHealthAndSafetyWarning(OnPageReturned callback)
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x10CA2B0", Offset = "0x10CA2B0", VA = "0x10CA2B0", Slot = "23")]
		public override void GetEpiInformation(OnPageReturned callback)
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x10CA3D4", Offset = "0x10CA3D4", VA = "0x10CA3D4", Slot = "24")]
		public override void GetCredits(OnPageReturned callback)
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x10CA4D0", Offset = "0x10CA4D0", VA = "0x10CA4D0", Slot = "25")]
		public override void PostMood(ServerRequestsEnums.ESleepType sleepHours, EMoodType moodType, OnMoodReturned callback)
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x10CA590", Offset = "0x10CA590", VA = "0x10CA590", Slot = "26")]
		public override void GetNews(OnNewsReturned callback)
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x10CA6D4", Offset = "0x10CA6D4", VA = "0x10CA6D4", Slot = "27")]
		public override void GetDailyWod(OnWorkoutReturned callback)
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x10CA954", Offset = "0x10CA954", VA = "0x10CA954", Slot = "28")]
		public override void GetTutorial(int gameId, OnTutorialReturned callback)
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x10CAB10", Offset = "0x10CAB10", VA = "0x10CAB10", Slot = "29")]
		public override void SetTutorialCompleted(int gameId, OnTutorialComplete callback)
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x10CAC68", Offset = "0x10CAC68", VA = "0x10CAC68", Slot = "30")]
		public override void GetGamesList(OnGamesReturned callback)
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x10CAEA8", Offset = "0x10CAEA8", VA = "0x10CAEA8", Slot = "31")]
		public override void CreateGameSession(AttentionLab.Enums.GameType gameType, int wodId, OnSessionReturned callback)
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x10CB4FC", Offset = "0x10CB4FC", VA = "0x10CB4FC", Slot = "32")]
		public override void AbandonGameSession(Game game, SessionData sessionData, SceneDataFromGame data, OnSessionReturned callback)
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x10CB5BC", Offset = "0x10CB5BC", VA = "0x10CB5BC", Slot = "33")]
		public override void EndGameSession(Game game, SessionData sessionData, SceneDataFromGame data, OnSessionReturned callback)
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x10CB7E8", Offset = "0x10CB7E8", VA = "0x10CB7E8", Slot = "34")]
		public override void GetGameCategoryStats(CategoryType categoryType, OnGameCategoryStatsReturned callback)
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x10CB98C", Offset = "0x10CB98C", VA = "0x10CB98C", Slot = "35")]
		public override void GetGameCategoriesStats(OnGameCategoriesStatsReturned callback)
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x10CBA90", Offset = "0x10CBA90", VA = "0x10CBA90", Slot = "36")]
		public override void GetGamesStats(OnGamesStatsReturned callback)
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x10CBB94", Offset = "0x10CBB94", VA = "0x10CBB94", Slot = "37")]
		public override void GetGameStats(AttentionLab.Enums.GameType gameType, OnGameStatsReturned callback)
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x10CBFB8", Offset = "0x10CBFB8", VA = "0x10CBFB8", Slot = "38")]
		public override void GetUserEpi(OnUsersEpiReturned callback)
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x10CC0D4", Offset = "0x10CC0D4", VA = "0x10CC0D4", Slot = "39")]
		public override void GetUserStats(OnUserStatsReturned callback)
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x10CC2E8", Offset = "0x10CC2E8", VA = "0x10CC2E8", Slot = "40")]
		public override void GetWodsStats(OnWodsStatsReturned callback)
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x10CB390", Offset = "0x10CB390", VA = "0x10CB390")]
		public LocalSessionHistory GetSessionHistory(AttentionLab.Enums.GameType game)
		{
			return null;
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x10CC41C", Offset = "0x10CC41C", VA = "0x10CC41C")]
		private void SetSessionHistory(List<Session> sessions, AttentionLab.Enums.GameType game)
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x10CC570", Offset = "0x10CC570", VA = "0x10CC570")]
		public void AddSessionToHistory(Session session, AttentionLab.Enums.GameType game)
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x10CC5F8", Offset = "0x10CC5F8", VA = "0x10CC5F8")]
		public LocalService()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class Request
	{
		[Token(Token = "0x200075E")]
		public enum GrantType
		{
			[Token(Token = "0x4002B33")]
			Password,
			[Token(Token = "0x4002B34")]
			Client
		}

		[Token(Token = "0x200075F")]
		public delegate void OnDone(Request sender);

		[Token(Token = "0x2000760")]
		public class Builder
		{
			[Token(Token = "0x4002B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Request _request;

			[Token(Token = "0x6003043")]
			[Address(RVA = "0x10C8FE8", Offset = "0x10C8FE8", VA = "0x10C8FE8")]
			public Builder(string url)
			{
			}

			[Token(Token = "0x6003044")]
			[Address(RVA = "0x10CDB20", Offset = "0x10CDB20", VA = "0x10CDB20")]
			public Builder WithType(RESTApi.RequestType requestType)
			{
				return null;
			}

			[Token(Token = "0x6003045")]
			[Address(RVA = "0x10CDB40", Offset = "0x10CDB40", VA = "0x10CDB40")]
			public Builder WithGrantType(GrantType grantType)
			{
				return null;
			}

			[Token(Token = "0x6003046")]
			[Address(RVA = "0x10CDB60", Offset = "0x10CDB60", VA = "0x10CDB60")]
			public Builder WithHeaders(Dictionary<string, string> headers)
			{
				return null;
			}

			[Token(Token = "0x6003047")]
			[Address(RVA = "0x10CDB80", Offset = "0x10CDB80", VA = "0x10CDB80")]
			public Builder WithBody(Dictionary<string, string> body)
			{
				return null;
			}

			[Token(Token = "0x6003048")]
			[Address(RVA = "0x10CDBA0", Offset = "0x10CDBA0", VA = "0x10CDBA0")]
			public Builder WithCallback(OnDone callback)
			{
				return null;
			}

			[Token(Token = "0x6003049")]
			[Address(RVA = "0x10CDBC0", Offset = "0x10CDBC0", VA = "0x10CDBC0")]
			public Request Build()
			{
				return null;
			}
		}

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C048", Offset = "0xB7C048")]
		private RESTApi.RequestType <RequestType>k__BackingField;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C058", Offset = "0xB7C058")]
		private GrantType <Grant>k__BackingField;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C068", Offset = "0xB7C068")]
		private string <Url>k__BackingField;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C078", Offset = "0xB7C078")]
		private Dictionary<string, string> <Headers>k__BackingField;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C088", Offset = "0xB7C088")]
		private Dictionary<string, string> <Body>k__BackingField;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C098", Offset = "0xB7C098")]
		private ServerResponse <Response>k__BackingField;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C0A8", Offset = "0xB7C0A8")]
		private OnDone <Callback>k__BackingField;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IEnumerator _coroutine;

		[Token(Token = "0x17000299")]
		public RESTApi.RequestType RequestType
		{
			[Token(Token = "0x6001C28")]
			[Address(RVA = "0x10CD25C", Offset = "0x10CD25C", VA = "0x10CD25C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88E50", Offset = "0xB88E50")]
			get
			{
				return default(RESTApi.RequestType);
			}
			[Token(Token = "0x6001C29")]
			[Address(RVA = "0x10CD264", Offset = "0x10CD264", VA = "0x10CD264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88E60", Offset = "0xB88E60")]
			set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		public GrantType Grant
		{
			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0x10CD26C", Offset = "0x10CD26C", VA = "0x10CD26C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88E70", Offset = "0xB88E70")]
			get
			{
				return default(GrantType);
			}
			[Token(Token = "0x6001C2B")]
			[Address(RVA = "0x10CD274", Offset = "0x10CD274", VA = "0x10CD274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88E80", Offset = "0xB88E80")]
			set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public string Url
		{
			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0x10CD27C", Offset = "0x10CD27C", VA = "0x10CD27C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88E90", Offset = "0xB88E90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C2D")]
			[Address(RVA = "0x10CD284", Offset = "0x10CD284", VA = "0x10CD284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88EA0", Offset = "0xB88EA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public Dictionary<string, string> Headers
		{
			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0x10CD28C", Offset = "0x10CD28C", VA = "0x10CD28C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88EB0", Offset = "0xB88EB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C2F")]
			[Address(RVA = "0x10CD294", Offset = "0x10CD294", VA = "0x10CD294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88EC0", Offset = "0xB88EC0")]
			set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public Dictionary<string, string> Body
		{
			[Token(Token = "0x6001C30")]
			[Address(RVA = "0x10CD29C", Offset = "0x10CD29C", VA = "0x10CD29C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88ED0", Offset = "0xB88ED0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C31")]
			[Address(RVA = "0x10CD2A4", Offset = "0x10CD2A4", VA = "0x10CD2A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88EE0", Offset = "0xB88EE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public ServerResponse Response
		{
			[Token(Token = "0x6001C32")]
			[Address(RVA = "0x10CD2AC", Offset = "0x10CD2AC", VA = "0x10CD2AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88EF0", Offset = "0xB88EF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C33")]
			[Address(RVA = "0x10CD2B4", Offset = "0x10CD2B4", VA = "0x10CD2B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F00", Offset = "0xB88F00")]
			set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		public OnDone Callback
		{
			[Token(Token = "0x6001C34")]
			[Address(RVA = "0x10CD2BC", Offset = "0x10CD2BC", VA = "0x10CD2BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F10", Offset = "0xB88F10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C35")]
			[Address(RVA = "0x10CD2C4", Offset = "0x10CD2C4", VA = "0x10CD2C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F20", Offset = "0xB88F20")]
			set
			{
			}
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x10CD2CC", Offset = "0x10CD2CC", VA = "0x10CD2CC")]
		private Request()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x10CD2D4", Offset = "0x10CD2D4", VA = "0x10CD2D4")]
		public void Execute(MonoBehaviour behaviour, OnDone callback)
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x10CD4EC", Offset = "0x10CD4EC", VA = "0x10CD4EC")]
		private void ProcessResponse(ServerResponse response)
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x10CD8D4", Offset = "0x10CD8D4", VA = "0x10CD8D4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000367")]
	public class RequestBatch
	{
		[Token(Token = "0x2000761")]
		public delegate void OnBatchEnded(RequestBatch sender);

		[Token(Token = "0x2000762")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73034", Offset = "0xB73034")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4002B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RequestBatch <>4__this;

			[Token(Token = "0x4002B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Request request;

			[Token(Token = "0x600304E")]
			[Address(RVA = "0x10CE418", Offset = "0x10CE418", VA = "0x10CE418")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x600304F")]
			[Address(RVA = "0x10CE420", Offset = "0x10CE420", VA = "0x10CE420")]
			internal void <PlayNextRequest>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C0B8", Offset = "0xB7C0B8")]
		private List<Request> <Requests>k__BackingField;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C0C8", Offset = "0xB7C0C8")]
		private List<Request> <FailedRequests>k__BackingField;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue<Request> _requests;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MonoBehaviour _behaviour;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OnBatchEnded _callback;

		[Token(Token = "0x170002A0")]
		public bool Success
		{
			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0x10CDC08", Offset = "0x10CDC08", VA = "0x10CDC08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A1")]
		public List<Request> Requests
		{
			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0x10CDC58", Offset = "0x10CDC58", VA = "0x10CDC58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F30", Offset = "0xB88F30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C3C")]
			[Address(RVA = "0x10CDC60", Offset = "0x10CDC60", VA = "0x10CDC60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F40", Offset = "0xB88F40")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public List<Request> FailedRequests
		{
			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0x10CDC68", Offset = "0x10CDC68", VA = "0x10CDC68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F50", Offset = "0xB88F50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0x10CDC70", Offset = "0x10CDC70", VA = "0x10CDC70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F60", Offset = "0xB88F60")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x10CDC78", Offset = "0x10CDC78", VA = "0x10CDC78")]
		public RequestBatch()
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x10CDD34", Offset = "0x10CDD34", VA = "0x10CDD34")]
		public void Add(Request request)
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x10CDD9C", Offset = "0x10CDD9C", VA = "0x10CDD9C")]
		public void Execute(MonoBehaviour behaviour, OnBatchEnded callback)
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x10CDF48", Offset = "0x10CDF48", VA = "0x10CDF48")]
		public void Retry(MonoBehaviour behaviour, OnBatchEnded callback)
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x10CDE40", Offset = "0x10CDE40", VA = "0x10CDE40")]
		private void PlayNextRequest()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public enum ResponseCodeType
	{
		[Token(Token = "0x400163D")]
		NotDefined,
		[Token(Token = "0x400163E")]
		Success_Ok,
		[Token(Token = "0x400163F")]
		Success_Created,
		[Token(Token = "0x4001640")]
		Success_NoContent,
		[Token(Token = "0x4001641")]
		ClientError_BadRequest,
		[Token(Token = "0x4001642")]
		ClientError_Unauthorized,
		[Token(Token = "0x4001643")]
		ClientError_Forbidden,
		[Token(Token = "0x4001644")]
		ClientError_NotFound,
		[Token(Token = "0x4001645")]
		ClientError_Conflict,
		[Token(Token = "0x4001646")]
		ServerError_Internal,
		[Token(Token = "0x4001647")]
		ServerError_UnderMaintenance,
		[Token(Token = "0x4001648")]
		Validation_Failure,
		[Token(Token = "0x4001649")]
		NotRecognized
	}
	[Token(Token = "0x2000369")]
	public class RestService : IDataService
	{
		[Token(Token = "0x2000763")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73044", Offset = "0xB73044")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4002B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnServerCheckReturned callback;

			[Token(Token = "0x6003050")]
			[Address(RVA = "0x1046DD4", Offset = "0x1046DD4", VA = "0x1046DD4")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6003051")]
			[Address(RVA = "0x1046DDC", Offset = "0x1046DDC", VA = "0x1046DDC")]
			internal void <GetServerCheck>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73054", Offset = "0xB73054")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnLatestVersionReturned callback;

			[Token(Token = "0x6003052")]
			[Address(RVA = "0x1046DF0", Offset = "0x1046DF0", VA = "0x1046DF0")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6003053")]
			[Address(RVA = "0x1046DF8", Offset = "0x1046DF8", VA = "0x1046DF8")]
			internal void <CheckForUpdates>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000765")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73064", Offset = "0xB73064")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4002B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnAvatarsReturned callback;

			[Token(Token = "0x6003054")]
			[Address(RVA = "0x1046F3C", Offset = "0x1046F3C", VA = "0x1046F3C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6003055")]
			[Address(RVA = "0x1046F44", Offset = "0x1046F44", VA = "0x1046F44")]
			internal void <GetAvatars>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000766")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73074", Offset = "0xB73074")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnSetAvatarReturned callback;

			[Token(Token = "0x6003056")]
			[Address(RVA = "0x1047088", Offset = "0x1047088", VA = "0x1047088")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6003057")]
			[Address(RVA = "0x1047090", Offset = "0x1047090", VA = "0x1047090")]
			internal void <SetAvatar>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000767")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73084", Offset = "0xB73084")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnSetAvatarReturned callback;

			[Token(Token = "0x6003058")]
			[Address(RVA = "0x10470A4", Offset = "0x10470A4", VA = "0x10470A4")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6003059")]
			[Address(RVA = "0x10470AC", Offset = "0x10470AC", VA = "0x10470AC")]
			internal void <SetLanguage>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73094", Offset = "0xB73094")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnUserReturned callback;

			[Token(Token = "0x4002B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Request request;

			[Token(Token = "0x600305A")]
			[Address(RVA = "0x10451B8", Offset = "0x10451B8", VA = "0x10451B8")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x600305B")]
			[Address(RVA = "0x10451C0", Offset = "0x10451C0", VA = "0x10451C0")]
			internal void <Register>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000769")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB730A4", Offset = "0xB730A4")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4002B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RestService <>4__this;

			[Token(Token = "0x4002B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OnTokenReturned callback;

			[Token(Token = "0x600305C")]
			[Address(RVA = "0x10452F0", Offset = "0x10452F0", VA = "0x10452F0")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x600305D")]
			[Address(RVA = "0x10452F8", Offset = "0x10452F8", VA = "0x10452F8")]
			internal void <Login>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x200076A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB730B4", Offset = "0xB730B4")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4002B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnTokenReturned callback;

			[Token(Token = "0x4002B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Request request;

			[Token(Token = "0x600305E")]
			[Address(RVA = "0x1045328", Offset = "0x1045328", VA = "0x1045328")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x600305F")]
			[Address(RVA = "0x1045330", Offset = "0x1045330", VA = "0x1045330")]
			internal void <GetClientAccessToken>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x200076B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB730C4", Offset = "0xB730C4")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4002B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RestService <>4__this;

			[Token(Token = "0x4002B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OnTokenReturned callback;

			[Token(Token = "0x6003060")]
			[Address(RVA = "0x1045594", Offset = "0x1045594", VA = "0x1045594")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6003061")]
			[Address(RVA = "0x104559C", Offset = "0x104559C", VA = "0x104559C")]
			internal void <RefreshToken>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x200076C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB730D4", Offset = "0xB730D4")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4002B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnTokenReturned callback;

			[Token(Token = "0x4002B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Request request;

			[Token(Token = "0x4002B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AttentionLab.REST.Data.Token token;

			[Token(Token = "0x6003062")]
			[Address(RVA = "0x10455CC", Offset = "0x10455CC", VA = "0x10455CC")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6003063")]
			[Address(RVA = "0x10455D4", Offset = "0x10455D4", VA = "0x10455D4")]
			internal void <ProcessUserTokenResponse>b__0(Request userRequest, AttentionLab.REST.Data.User user)
			{
			}
		}

		[Token(Token = "0x200076D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB730E4", Offset = "0xB730E4")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4002B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnUserReturned callback;

			[Token(Token = "0x6003064")]
			[Address(RVA = "0x1045698", Offset = "0x1045698", VA = "0x1045698")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6003065")]
			[Address(RVA = "0x10456A0", Offset = "0x10456A0", VA = "0x10456A0")]
			internal void <GetUser>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x200076E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB730F4", Offset = "0xB730F4")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4002B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnUserReturned callback;

			[Token(Token = "0x6003066")]
			[Address(RVA = "0x10457E4", Offset = "0x10457E4", VA = "0x10457E4")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6003067")]
			[Address(RVA = "0x10457EC", Offset = "0x10457EC", VA = "0x10457EC")]
			internal void <UpdateUser>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x200076F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73104", Offset = "0xB73104")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4002B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnValidateEmailReturned callback;

			[Token(Token = "0x6003068")]
			[Address(RVA = "0x104591C", Offset = "0x104591C", VA = "0x104591C")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6003069")]
			[Address(RVA = "0x1045924", Offset = "0x1045924", VA = "0x1045924")]
			internal void <ValidateEmail>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73114", Offset = "0xB73114")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4002B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnResetPasswordReturned callback;

			[Token(Token = "0x600306A")]
			[Address(RVA = "0x1045938", Offset = "0x1045938", VA = "0x1045938")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x600306B")]
			[Address(RVA = "0x1045940", Offset = "0x1045940", VA = "0x1045940")]
			internal void <ResetPassword>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000771")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73124", Offset = "0xB73124")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4002B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnResendVerificationEmail callback;

			[Token(Token = "0x600306C")]
			[Address(RVA = "0x1045954", Offset = "0x1045954", VA = "0x1045954")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x600306D")]
			[Address(RVA = "0x104595C", Offset = "0x104595C", VA = "0x104595C")]
			internal void <ResendVerificationEmail>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000772")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73134", Offset = "0xB73134")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4002B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnActivityReturned callback;

			[Token(Token = "0x600306E")]
			[Address(RVA = "0x1045970", Offset = "0x1045970", VA = "0x1045970")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x600306F")]
			[Address(RVA = "0x1045978", Offset = "0x1045978", VA = "0x1045978")]
			internal void <PostActivity>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000773")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73144", Offset = "0xB73144")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4002B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnPageReturned callback;

			[Token(Token = "0x6003070")]
			[Address(RVA = "0x104598C", Offset = "0x104598C", VA = "0x104598C")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6003071")]
			[Address(RVA = "0x1045994", Offset = "0x1045994", VA = "0x1045994")]
			internal void <GetPrivacyPolicy>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73154", Offset = "0xB73154")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4002B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnPageReturned callback;

			[Token(Token = "0x6003072")]
			[Address(RVA = "0x1045AD8", Offset = "0x1045AD8", VA = "0x1045AD8")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6003073")]
			[Address(RVA = "0x1045AE0", Offset = "0x1045AE0", VA = "0x1045AE0")]
			internal void <GetUserAgreement>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000775")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73164", Offset = "0xB73164")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4002B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnPageReturned callback;

			[Token(Token = "0x6003074")]
			[Address(RVA = "0x1045C24", Offset = "0x1045C24", VA = "0x1045C24")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6003075")]
			[Address(RVA = "0x1045C2C", Offset = "0x1045C2C", VA = "0x1045C2C")]
			internal void <GetHealthAndSafetyWarning>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000776")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73174", Offset = "0xB73174")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4002B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnPageReturned callback;

			[Token(Token = "0x6003076")]
			[Address(RVA = "0x1045D70", Offset = "0x1045D70", VA = "0x1045D70")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6003077")]
			[Address(RVA = "0x1045D78", Offset = "0x1045D78", VA = "0x1045D78")]
			internal void <GetEpiInformation>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000777")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73184", Offset = "0xB73184")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4002B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnPageReturned callback;

			[Token(Token = "0x6003078")]
			[Address(RVA = "0x1045EBC", Offset = "0x1045EBC", VA = "0x1045EBC")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6003079")]
			[Address(RVA = "0x1045EC4", Offset = "0x1045EC4", VA = "0x1045EC4")]
			internal void <GetCredits>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73194", Offset = "0xB73194")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4002B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnMoodReturned callback;

			[Token(Token = "0x600307A")]
			[Address(RVA = "0x1046008", Offset = "0x1046008", VA = "0x1046008")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x600307B")]
			[Address(RVA = "0x1046010", Offset = "0x1046010", VA = "0x1046010")]
			internal void <PostMood>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000779")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB731A4", Offset = "0xB731A4")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4002B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnNewsReturned callback;

			[Token(Token = "0x600307C")]
			[Address(RVA = "0x1046024", Offset = "0x1046024", VA = "0x1046024")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x600307D")]
			[Address(RVA = "0x104602C", Offset = "0x104602C", VA = "0x104602C")]
			internal void <GetNews>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x200077A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB731B4", Offset = "0xB731B4")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4002B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnWorkoutReturned callback;

			[Token(Token = "0x600307E")]
			[Address(RVA = "0x1046178", Offset = "0x1046178", VA = "0x1046178")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x600307F")]
			[Address(RVA = "0x1046180", Offset = "0x1046180", VA = "0x1046180")]
			internal void <GetDailyWod>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x200077B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB731C4", Offset = "0xB731C4")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4002B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnTutorialReturned callback;

			[Token(Token = "0x6003080")]
			[Address(RVA = "0x10462B0", Offset = "0x10462B0", VA = "0x10462B0")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6003081")]
			[Address(RVA = "0x10462B8", Offset = "0x10462B8", VA = "0x10462B8")]
			internal void <GetTutorial>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x200077C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB731D4", Offset = "0xB731D4")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4002B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnTutorialComplete callback;

			[Token(Token = "0x6003082")]
			[Address(RVA = "0x10462CC", Offset = "0x10462CC", VA = "0x10462CC")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6003083")]
			[Address(RVA = "0x10462D4", Offset = "0x10462D4", VA = "0x10462D4")]
			internal void <SetTutorialCompleted>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x200077D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB731E4", Offset = "0xB731E4")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4002B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnGamesReturned callback;

			[Token(Token = "0x6003084")]
			[Address(RVA = "0x10462E8", Offset = "0x10462E8", VA = "0x10462E8")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6003085")]
			[Address(RVA = "0x10462F0", Offset = "0x10462F0", VA = "0x10462F0")]
			internal void <GetGamesList>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x200077E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB731F4", Offset = "0xB731F4")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4002B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RestService <>4__this;

			[Token(Token = "0x4002B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OnSessionReturned callback;

			[Token(Token = "0x6003086")]
			[Address(RVA = "0x104643C", Offset = "0x104643C", VA = "0x104643C")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6003087")]
			[Address(RVA = "0x1046444", Offset = "0x1046444", VA = "0x1046444")]
			internal void <CreateGameSession>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x200077F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73204", Offset = "0xB73204")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4002B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RestService <>4__this;

			[Token(Token = "0x4002B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OnSessionReturned callback;

			[Token(Token = "0x6003088")]
			[Address(RVA = "0x1046468", Offset = "0x1046468", VA = "0x1046468")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6003089")]
			[Address(RVA = "0x1046470", Offset = "0x1046470", VA = "0x1046470")]
			internal void <AbandonGameSession>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73214", Offset = "0xB73214")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4002B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RestService <>4__this;

			[Token(Token = "0x4002B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OnSessionReturned callback;

			[Token(Token = "0x600308A")]
			[Address(RVA = "0x1046494", Offset = "0x1046494", VA = "0x1046494")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x600308B")]
			[Address(RVA = "0x104649C", Offset = "0x104649C", VA = "0x104649C")]
			internal void <EndGameSession>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000781")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73224", Offset = "0xB73224")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4002B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnGameCategoryStatsReturned callback;

			[Token(Token = "0x600308C")]
			[Address(RVA = "0x10464C0", Offset = "0x10464C0", VA = "0x10464C0")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x600308D")]
			[Address(RVA = "0x10464C8", Offset = "0x10464C8", VA = "0x10464C8")]
			internal void <GetGameCategoryStats>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000782")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73234", Offset = "0xB73234")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4002B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnGameCategoriesStatsReturned callback;

			[Token(Token = "0x600308E")]
			[Address(RVA = "0x104660C", Offset = "0x104660C", VA = "0x104660C")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x600308F")]
			[Address(RVA = "0x1046614", Offset = "0x1046614", VA = "0x1046614")]
			internal void <GetGameCategoriesStats>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000783")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73244", Offset = "0xB73244")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4002B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnGamesStatsReturned callback;

			[Token(Token = "0x6003090")]
			[Address(RVA = "0x1046758", Offset = "0x1046758", VA = "0x1046758")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6003091")]
			[Address(RVA = "0x1046760", Offset = "0x1046760", VA = "0x1046760")]
			internal void <GetGamesStats>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73254", Offset = "0xB73254")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x4002B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnGameStatsReturned callback;

			[Token(Token = "0x6003092")]
			[Address(RVA = "0x10468A4", Offset = "0x10468A4", VA = "0x10468A4")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x6003093")]
			[Address(RVA = "0x10468AC", Offset = "0x10468AC", VA = "0x10468AC")]
			internal void <GetGameStats>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000785")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73264", Offset = "0xB73264")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x4002B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnUsersEpiReturned callback;

			[Token(Token = "0x6003094")]
			[Address(RVA = "0x10469F0", Offset = "0x10469F0", VA = "0x10469F0")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x6003095")]
			[Address(RVA = "0x10469F8", Offset = "0x10469F8", VA = "0x10469F8")]
			internal void <GetUserEpi>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000786")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73274", Offset = "0xB73274")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4002B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnUserStatsReturned callback;

			[Token(Token = "0x6003096")]
			[Address(RVA = "0x1046B3C", Offset = "0x1046B3C", VA = "0x1046B3C")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6003097")]
			[Address(RVA = "0x1046B44", Offset = "0x1046B44", VA = "0x1046B44")]
			internal void <GetUserStats>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x2000787")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73284", Offset = "0xB73284")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x4002B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnWodsStatsReturned callback;

			[Token(Token = "0x6003098")]
			[Address(RVA = "0x1046C88", Offset = "0x1046C88", VA = "0x1046C88")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x6003099")]
			[Address(RVA = "0x1046C90", Offset = "0x1046C90", VA = "0x1046C90")]
			internal void <GetWodsStats>b__0(Request sender)
			{
			}
		}

		[Token(Token = "0x400164A")]
		public const string MOMENT_KEY_FORMAT = "moments[{0}][event_key]";

		[Token(Token = "0x400164B")]
		public const string MOMENT_HAPPENED_AT_FORMAT = "moments[{0}][happened_at]";

		[Token(Token = "0x400164C")]
		public const string MOMENT_VALUES_KEY_FORMAT = "moments[{0}][values][0][key]";

		[Token(Token = "0x400164D")]
		public const string MOMENT_VALUES_VALUE_FORMAT = "moments[{0}][values][0][value]";

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x10CE508", Offset = "0x10CE508", VA = "0x10CE508")]
		protected RestService()
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x10CE510", Offset = "0x10CE510", VA = "0x10CE510", Slot = "4")]
		public override void GetServerCheck(OnServerCheckReturned callback)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x10CE5F0", Offset = "0x10CE5F0", VA = "0x10CE5F0", Slot = "5")]
		public override void CheckForUpdates(OnLatestVersionReturned callback)
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x10CE830", Offset = "0x10CE830", VA = "0x10CE830", Slot = "6")]
		public override void GetAvatars(OnAvatarsReturned callback)
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x10CE920", Offset = "0x10CE920", VA = "0x10CE920", Slot = "7")]
		public override void SetAvatar(int avatarId, OnSetAvatarReturned callback)
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x10CEA90", Offset = "0x10CEA90", VA = "0x10CEA90", Slot = "8")]
		public override void SetLanguage(AttentionLab.Localization.Locale languageId, OnSetAvatarReturned callback)
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x10CEC08", Offset = "0x10CEC08", VA = "0x10CEC08", Slot = "9")]
		public override void Register(string firstName, string lastName, string email, string password, string birthday, int genderId, int educationId, int professionId, bool subscribeNewsletter, OnUserReturned callback)
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x10CEF7C", Offset = "0x10CEF7C", VA = "0x10CEF7C", Slot = "10")]
		public override void Login(string username, string password, OnTokenReturned callback)
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x10CF244", Offset = "0x10CF244", VA = "0x10CF244", Slot = "11")]
		public override void GetClientAccessToken(OnTokenReturned callback)
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x10CF440", Offset = "0x10CF440", VA = "0x10CF440", Slot = "12")]
		public override void RefreshToken(string refreshToken, OnTokenReturned callback)
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x10CF64C", Offset = "0x10CF64C", VA = "0x10CF64C", Slot = "13")]
		protected override void ProcessUserTokenResponse(Request request, bool applyLanguageFromServer, OnTokenReturned callback)
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x10CF964", Offset = "0x10CF964", VA = "0x10CF964", Slot = "14")]
		public override void GetUser(OnUserReturned callback)
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x10CFA50", Offset = "0x10CFA50", VA = "0x10CFA50", Slot = "15")]
		public override void UpdateUser(LocaleConfig localeConfig, OnUserReturned callback)
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x10CFBC4", Offset = "0x10CFBC4", VA = "0x10CFBC4", Slot = "16")]
		public override void ValidateEmail(string email, OnValidateEmailReturned callback)
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x10CFD1C", Offset = "0x10CFD1C", VA = "0x10CFD1C", Slot = "17")]
		public override void ResetPassword(string email, OnResetPasswordReturned callback)
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x10CFE74", Offset = "0x10CFE74", VA = "0x10CFE74", Slot = "18")]
		public override void ResendVerificationEmail(OnResendVerificationEmail callback)
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x10CFF70", Offset = "0x10CFF70", VA = "0x10CFF70", Slot = "19")]
		public override void PostActivity(EActivityType activity, OnActivityReturned callback)
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x10D02B8", Offset = "0x10D02B8", VA = "0x10D02B8", Slot = "20")]
		public override void GetPrivacyPolicy(OnPageReturned callback)
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x10D0448", Offset = "0x10D0448", VA = "0x10D0448", Slot = "21")]
		public override void GetUserAgreement(OnPageReturned callback)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x10D05D8", Offset = "0x10D05D8", VA = "0x10D05D8", Slot = "22")]
		public override void GetHealthAndSafetyWarning(OnPageReturned callback)
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x10D0768", Offset = "0x10D0768", VA = "0x10D0768", Slot = "23")]
		public override void GetEpiInformation(OnPageReturned callback)
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x10D08F8", Offset = "0x10D08F8", VA = "0x10D08F8", Slot = "24")]
		public override void GetCredits(OnPageReturned callback)
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x10D0A88", Offset = "0x10D0A88", VA = "0x10D0A88", Slot = "25")]
		public override void PostMood(ServerRequestsEnums.ESleepType sleepHours, EMoodType moodType, OnMoodReturned callback)
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x10D0C30", Offset = "0x10D0C30", VA = "0x10D0C30", Slot = "26")]
		public override void GetNews(OnNewsReturned callback)
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x10D0D20", Offset = "0x10D0D20", VA = "0x10D0D20", Slot = "27")]
		public override void GetDailyWod(OnWorkoutReturned callback)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x10D0EA0", Offset = "0x10D0EA0", VA = "0x10D0EA0", Slot = "28")]
		public override void GetTutorial(int gameId, OnTutorialReturned callback)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x10D0FC4", Offset = "0x10D0FC4", VA = "0x10D0FC4", Slot = "29")]
		public override void SetTutorialCompleted(int gameId, OnTutorialComplete callback)
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x10D10F8", Offset = "0x10D10F8", VA = "0x10D10F8", Slot = "30")]
		public override void GetGamesList(OnGamesReturned callback)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x10D1288", Offset = "0x10D1288", VA = "0x10D1288", Slot = "31")]
		public override void CreateGameSession(AttentionLab.Enums.GameType gameType, int wodId, OnSessionReturned callback)
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x10D155C", Offset = "0x10D155C", VA = "0x10D155C", Slot = "32")]
		public override void AbandonGameSession(Game game, SessionData sessionData, SceneDataFromGame data, OnSessionReturned callback)
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x10D18AC", Offset = "0x10D18AC", VA = "0x10D18AC", Slot = "33")]
		public override void EndGameSession(Game game, SessionData sessionData, SceneDataFromGame data, OnSessionReturned callback)
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x10D1690", Offset = "0x10D1690", VA = "0x10D1690")]
		private Request GetUpdateGameSessionRequest(Game game, SessionData sessionData, SessionStatusType status)
		{
			return null;
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x10D1C00", Offset = "0x10D1C00", VA = "0x10D1C00")]
		private void ProcessSessionResponse(Request request, OnSessionReturned callback)
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x10D1D2C", Offset = "0x10D1D2C", VA = "0x10D1D2C", Slot = "34")]
		public override void GetGameCategoryStats(CategoryType categoryType, OnGameCategoryStatsReturned callback)
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x10D1E6C", Offset = "0x10D1E6C", VA = "0x10D1E6C", Slot = "35")]
		public override void GetGameCategoriesStats(OnGameCategoriesStatsReturned callback)
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x10D1F58", Offset = "0x10D1F58", VA = "0x10D1F58", Slot = "36")]
		public override void GetGamesStats(OnGamesStatsReturned callback)
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x10D20E4", Offset = "0x10D20E4", VA = "0x10D20E4", Slot = "37")]
		public override void GetGameStats(AttentionLab.Enums.GameType gameType, OnGameStatsReturned callback)
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x10D2244", Offset = "0x10D2244", VA = "0x10D2244", Slot = "38")]
		public override void GetUserEpi(OnUsersEpiReturned callback)
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x10D23D0", Offset = "0x10D23D0", VA = "0x10D23D0", Slot = "39")]
		public override void GetUserStats(OnUserStatsReturned callback)
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x10D255C", Offset = "0x10D255C", VA = "0x10D255C", Slot = "40")]
		public override void GetWodsStats(OnWodsStatsReturned callback)
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x10CF1B0", Offset = "0x10CF1B0", VA = "0x10CF1B0")]
		public string Base64Encode(string plainText)
		{
			return null;
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x10D012C", Offset = "0x10D012C", VA = "0x10D012C")]
		public string Md5Sum(string strToEncrypt)
		{
			return null;
		}
	}
	[Token(Token = "0x200036A")]
	public static class ServerConfig
	{
		[Token(Token = "0x2000788")]
		public enum ContentType
		{
			[Token(Token = "0x4002B67")]
			XWWWFormUrlencoded,
			[Token(Token = "0x4002B68")]
			Json
		}

		[Token(Token = "0x400164E")]
		private const string HOSTNAME_DEV = "https://api.virtuleap.dev";

		[Token(Token = "0x400164F")]
		private const string HOSTNAME_STAGING = "https://staging.virtuleap.dev";

		[Token(Token = "0x4001650")]
		private const string HOSTNAME_PROD = "https://api.virtuleap.com";

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string Hostname;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ContentType CurrentContentType;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string ContentTypeValue;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string AcceptContentTypeValue;

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x10470C0", Offset = "0x10470C0", VA = "0x10470C0")]
		public static void Setup(AppConfig.BuildType buildType)
		{
		}
	}
}
namespace AttentionLab.REST.Data
{
	[Token(Token = "0x200036B")]
	public enum EActivityType
	{
		[Token(Token = "0x4001656")]
		Login = 1,
		[Token(Token = "0x4001657")]
		Logout,
		[Token(Token = "0x4001658")]
		Register,
		[Token(Token = "0x4001659")]
		ChangePassword,
		[Token(Token = "0x400165A")]
		UpdateProfile
	}
	[Serializable]
	[Token(Token = "0x200036C")]
	public class Activity
	{
		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x10BFD68", Offset = "0x10BFD68", VA = "0x10BFD68")]
		public Activity()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200036D")]
	public class ActivitiesData
	{
		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Activity> activities;

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x10BFD60", Offset = "0x10BFD60", VA = "0x10BFD60")]
		public ActivitiesData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200036E")]
	public class Avatar
	{
		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string image;

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x10BFD70", Offset = "0x10BFD70", VA = "0x10BFD70")]
		public Avatar()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200036F")]
	public class AvatarsData
	{
		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Avatar> data;

		[Token(Token = "0x170002A3")]
		public List<Avatar> Avatars
		{
			[Token(Token = "0x6001C72")]
			[Address(RVA = "0x10BFD78", Offset = "0x10BFD78", VA = "0x10BFD78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x10BFDE8", Offset = "0x10BFDE8", VA = "0x10BFDE8")]
		public AvatarsData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000370")]
	public class CategoriesStats
	{
		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CategoriesScores scores;

		[Token(Token = "0x170002A4")]
		public float SpatialOrientationScore
		{
			[Token(Token = "0x6001C74")]
			[Address(RVA = "0x10BFE08", Offset = "0x10BFE08", VA = "0x10BFE08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002A5")]
		public float MemoryScore
		{
			[Token(Token = "0x6001C75")]
			[Address(RVA = "0x10BFF34", Offset = "0x10BFF34", VA = "0x10BFF34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002A6")]
		public float AttentionScore
		{
			[Token(Token = "0x6001C76")]
			[Address(RVA = "0x10C0060", Offset = "0x10C0060", VA = "0x10C0060")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002A7")]
		public float FlexibilityScore
		{
			[Token(Token = "0x6001C77")]
			[Address(RVA = "0x10C018C", Offset = "0x10C018C", VA = "0x10C018C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002A8")]
		public float ProblemSolvingScore
		{
			[Token(Token = "0x6001C78")]
			[Address(RVA = "0x10C02B8", Offset = "0x10C02B8", VA = "0x10C02B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002A9")]
		public float MotorSkillsScore
		{
			[Token(Token = "0x6001C79")]
			[Address(RVA = "0x10C03E4", Offset = "0x10C03E4", VA = "0x10C03E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002AA")]
		public float ProcessingScore
		{
			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0x10C0510", Offset = "0x10C0510", VA = "0x10C0510")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x10C063C", Offset = "0x10C063C", VA = "0x10C063C")]
		public CategoriesStats()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000371")]
	public class CategoriesStatsData
	{
		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CategoriesStats data;

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x10C0644", Offset = "0x10C0644", VA = "0x10C0644")]
		public CategoriesStatsData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000372")]
	public class CategoriesScores
	{
		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CategoriesScoreKey key;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<CategoriesScoresNode> nodes;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CategoriesScoresNode> comparable;

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x10BFDF8", Offset = "0x10BFDF8", VA = "0x10BFDF8")]
		public CategoriesScores()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000373")]
	public class CategoriesScoreKey
	{
		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string type;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string field;

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x10BFDF0", Offset = "0x10BFDF0", VA = "0x10BFDF0")]
		public CategoriesScoreKey()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000374")]
	public class CategoriesScoresNode
	{
		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int key;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float value;

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x10BFE00", Offset = "0x10BFE00", VA = "0x10BFE00")]
		public CategoriesScoresNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000375")]
	public class CategoryStats
	{
		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int games_played;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float highscore;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CategoryScore score;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CategoryScores scores;

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x10C0958", Offset = "0x10C0958", VA = "0x10C0958")]
		public CategoryStats()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000376")]
	public class CategoryStatsData
	{
		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CategoryStats data;

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x10C0960", Offset = "0x10C0960", VA = "0x10C0960")]
		public CategoryStatsData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000377")]
	public class CategoryScore
	{
		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float value;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float comparable;

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x10C0654", Offset = "0x10C0654", VA = "0x10C0654")]
		public CategoryScore()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000378")]
	public class CategoryScores
	{
		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CategoryScoresVectors vectors;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<CategoryScoresNode> nodes;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float comparable;

		[Token(Token = "0x170002AB")]
		public List<CategoryScoresNode> AllScores
		{
			[Token(Token = "0x6001C83")]
			[Address(RVA = "0x10C065C", Offset = "0x10C065C", VA = "0x10C065C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AC")]
		public CategoryScoresNode LastScore
		{
			[Token(Token = "0x6001C84")]
			[Address(RVA = "0x10C0720", Offset = "0x10C0720", VA = "0x10C0720")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AD")]
		public List<CategoryScoresNode> Last7Scores
		{
			[Token(Token = "0x6001C85")]
			[Address(RVA = "0x10C0788", Offset = "0x10C0788", VA = "0x10C0788")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AE")]
		public List<CategoryScoresNode> Last30Scores
		{
			[Token(Token = "0x6001C86")]
			[Address(RVA = "0x10C0864", Offset = "0x10C0864", VA = "0x10C0864")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x10C0940", Offset = "0x10C0940", VA = "0x10C0940")]
		public CategoryScores()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000379")]
	public class CategoryScoresVectors
	{
		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string x;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string y;

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x10C0950", Offset = "0x10C0950", VA = "0x10C0950")]
		public CategoryScoresVectors()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037A")]
	public class CategoryKey
	{
		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string type;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string field;

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x10C064C", Offset = "0x10C064C", VA = "0x10C064C")]
		public CategoryKey()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037B")]
	public class CategoryScoresNode
	{
		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float y;

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x10C0948", Offset = "0x10C0948", VA = "0x10C0948")]
		public CategoryScoresNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037C")]
	public class Country
	{
		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string iso_code;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int numeric_code;

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x10C09E0", Offset = "0x10C09E0", VA = "0x10C09E0")]
		public Country()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037D")]
	public class CountriesData
	{
		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Country> data;

		[Token(Token = "0x170002AF")]
		public List<Country> Countries
		{
			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0x10C0968", Offset = "0x10C0968", VA = "0x10C0968")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x10C09D8", Offset = "0x10C09D8", VA = "0x10C09D8")]
		public CountriesData()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public enum EEducation
	{
		[Token(Token = "0x4001681")]
		NoFormalEducation = 1,
		[Token(Token = "0x4001682")]
		PrimaryEducation,
		[Token(Token = "0x4001683")]
		SecondaryEducationOrHighSchool,
		[Token(Token = "0x4001684")]
		BachelorsDegree,
		[Token(Token = "0x4001685")]
		MastersDegree,
		[Token(Token = "0x4001686")]
		DoctorateOrHigher
	}
	[Serializable]
	[Token(Token = "0x200037F")]
	public class Education
	{
		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x10C09E8", Offset = "0x10C09E8", VA = "0x10C09E8")]
		public Education()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000380")]
	public class EducationData
	{
		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Education> data;

		[Token(Token = "0x170002B0")]
		public List<Education> Educations
		{
			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0x10C09F0", Offset = "0x10C09F0", VA = "0x10C09F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x10C0A60", Offset = "0x10C0A60", VA = "0x10C0A60")]
		public EducationData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000381")]
	public class EnhanceVersion
	{
		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string is_default;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool force_update;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string version;

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x10C0A68", Offset = "0x10C0A68", VA = "0x10C0A68")]
		public EnhanceVersion()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000382")]
	public class EnhanceVersionData
	{
		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnhanceVersion data;

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x10C0A70", Offset = "0x10C0A70", VA = "0x10C0A70")]
		public EnhanceVersionData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000383")]
	public class Game
	{
		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string excerpt;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string body;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string image;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string release_version;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool feature;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool two_hands;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool headphones;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool around_player;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool color_perception;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool high_movement_intensity;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameType game_type;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<GameCategory> categories;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AttentionLab.Enums.GameType _gameType;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C0D8", Offset = "0xB7C0D8")]
		private Wod <Wod>k__BackingField;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Session> _lastSessions;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C0E8", Offset = "0xB7C0E8")]
		private GameMeta <Meta>k__BackingField;

		[Token(Token = "0x170002B1")]
		public string Description
		{
			[Token(Token = "0x6001C93")]
			[Address(RVA = "0x10C0A78", Offset = "0x10C0A78", VA = "0x10C0A78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B2")]
		public List<GameCategory> Categories
		{
			[Token(Token = "0x6001C94")]
			[Address(RVA = "0x10C0A80", Offset = "0x10C0A80", VA = "0x10C0A80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B3")]
		public AttentionLab.Enums.GameType GameType
		{
			[Token(Token = "0x6001C95")]
			[Address(RVA = "0x10C0AF0", Offset = "0x10C0AF0", VA = "0x10C0AF0")]
			get
			{
				return default(AttentionLab.Enums.GameType);
			}
		}

		[Token(Token = "0x170002B4")]
		public Wod Wod
		{
			[Token(Token = "0x6001C96")]
			[Address(RVA = "0x10C0B5C", Offset = "0x10C0B5C", VA = "0x10C0B5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F70", Offset = "0xB88F70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C97")]
			[Address(RVA = "0x10C0B64", Offset = "0x10C0B64", VA = "0x10C0B64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F80", Offset = "0xB88F80")]
			set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public bool IsWodGame
		{
			[Token(Token = "0x6001C98")]
			[Address(RVA = "0x10C0B6C", Offset = "0x10C0B6C", VA = "0x10C0B6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B6")]
		public List<Session> LastSessions
		{
			[Token(Token = "0x6001C99")]
			[Address(RVA = "0x10C0BE4", Offset = "0x10C0BE4", VA = "0x10C0BE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B7")]
		public int Level
		{
			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0x10C0C80", Offset = "0x10C0C80", VA = "0x10C0C80")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B8")]
		public int Highscore
		{
			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0x10C0CAC", Offset = "0x10C0CAC", VA = "0x10C0CAC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B9")]
		public int TimesPlayed
		{
			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0x10C0CC4", Offset = "0x10C0CC4", VA = "0x10C0CC4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002BA")]
		public GameMeta Meta
		{
			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0x10C0CDC", Offset = "0x10C0CDC", VA = "0x10C0CDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F90", Offset = "0xB88F90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0x10C0CE4", Offset = "0x10C0CE4", VA = "0x10C0CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88FA0", Offset = "0xB88FA0")]
			set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		public List<AccessibilityType> AccessibilityTypes
		{
			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0x10C0CEC", Offset = "0x10C0CEC", VA = "0x10C0CEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BC")]
		public CategoryType MainCategory
		{
			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0x10C0E10", Offset = "0x10C0E10", VA = "0x10C0E10")]
			get
			{
				return default(CategoryType);
			}
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x10C0F3C", Offset = "0x10C0F3C", VA = "0x10C0F3C")]
		public Game(AttentionLab.Enums.GameType gameType)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000384")]
	public class GameData
	{
		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Game data;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameMeta meta;

		[Token(Token = "0x170002BD")]
		public Game Game
		{
			[Token(Token = "0x6001CA2")]
			[Address(RVA = "0x10C1000", Offset = "0x10C1000", VA = "0x10C1000")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x10C1020", Offset = "0x10C1020", VA = "0x10C1020")]
		public GameData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000385")]
	public class GameMeta
	{
		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int highscore;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameLevel level;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Session> sessions;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int total_played;

		[Token(Token = "0x170002BE")]
		public int Level
		{
			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0x10C0CA4", Offset = "0x10C0CA4", VA = "0x10C0CA4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x10C1030", Offset = "0x10C1030", VA = "0x10C1030")]
		public GameMeta()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000386")]
	public class GamesData
	{
		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Game> data;

		[Token(Token = "0x170002BF")]
		public List<Game> Games
		{
			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0x10C1364", Offset = "0x10C1364", VA = "0x10C1364")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x10C13D4", Offset = "0x10C13D4", VA = "0x10C13D4")]
		public GamesData()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public enum EGameCategory
	{
		[Token(Token = "0x40016A9")]
		SpatialOrientation = 1,
		[Token(Token = "0x40016AA")]
		VisuoSpatialOrientation,
		[Token(Token = "0x40016AB")]
		AudioSpatialOrientation,
		[Token(Token = "0x40016AC")]
		Memory,
		[Token(Token = "0x40016AD")]
		ShortTermMemory,
		[Token(Token = "0x40016AE")]
		LongTermMemory,
		[Token(Token = "0x40016AF")]
		WorkingMemory,
		[Token(Token = "0x40016B0")]
		Attention,
		[Token(Token = "0x40016B1")]
		SelectiveAttention,
		[Token(Token = "0x40016B2")]
		DividedAttention,
		[Token(Token = "0x40016B3")]
		SustainedAttention,
		[Token(Token = "0x40016B4")]
		Flexibility,
		[Token(Token = "0x40016B5")]
		TaskSwitching,
		[Token(Token = "0x40016B6")]
		ResponseInhibition,
		[Token(Token = "0x40016B7")]
		ProblemSolving,
		[Token(Token = "0x40016B8")]
		Planning,
		[Token(Token = "0x40016B9")]
		LogicalReasoning,
		[Token(Token = "0x40016BA")]
		MotorSkills,
		[Token(Token = "0x40016BB")]
		MotorControl,
		[Token(Token = "0x40016BC")]
		Speed,
		[Token(Token = "0x40016BD")]
		Accuracy,
		[Token(Token = "0x40016BE")]
		Processing,
		[Token(Token = "0x40016BF")]
		InformationProcessing
	}
	[Serializable]
	[Token(Token = "0x2000388")]
	public class GameCategory
	{
		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string excerpt;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string body;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string image;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool primary;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int effectiveness;

		[Token(Token = "0x170002C0")]
		public CategoryType Type
		{
			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0x10C0F30", Offset = "0x10C0F30", VA = "0x10C0F30")]
			get
			{
				return default(CategoryType);
			}
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x10C0FD0", Offset = "0x10C0FD0", VA = "0x10C0FD0")]
		public GameCategory()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000389")]
	public class GameCategoryData
	{
		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameCategory data;

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x10C0FD8", Offset = "0x10C0FD8", VA = "0x10C0FD8")]
		public GameCategoryData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038A")]
	public class GameCategoriesData
	{
		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<GameCategory> categories;

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x10C0FC8", Offset = "0x10C0FC8", VA = "0x10C0FC8")]
		public GameCategoriesData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038B")]
	public class GameCategoryIndex
	{
		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int index;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x170002C1")]
		public int Id
		{
			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0x10C0FE0", Offset = "0x10C0FE0", VA = "0x10C0FE0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C2")]
		public int Index
		{
			[Token(Token = "0x6001CAD")]
			[Address(RVA = "0x10C0FE8", Offset = "0x10C0FE8", VA = "0x10C0FE8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C3")]
		public string Title
		{
			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0x10C0FF0", Offset = "0x10C0FF0", VA = "0x10C0FF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x10C0FF8", Offset = "0x10C0FF8", VA = "0x10C0FF8")]
		public GameCategoryIndex()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038C")]
	public class GameMoment
	{
		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int event_key;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int happened_at;

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x10C1038", Offset = "0x10C1038", VA = "0x10C1038")]
		public GameMoment()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038D")]
	public class GameMomentData
	{
		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameMoment data;

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x10C1040", Offset = "0x10C1040", VA = "0x10C1040")]
		public GameMomentData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038E")]
	public class GamesStats
	{
		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GamesScores scores;

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x10C13F4", Offset = "0x10C13F4", VA = "0x10C13F4")]
		public float GetScoreForGame(AttentionLab.Enums.GameType gameType)
		{
			return default(float);
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x10C1558", Offset = "0x10C1558", VA = "0x10C1558")]
		public GamesStats()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038F")]
	public class GamesStatsData
	{
		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GamesStats data;

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x10C1560", Offset = "0x10C1560", VA = "0x10C1560")]
		public GamesStatsData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000390")]
	public class GamesScores
	{
		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GamesScoresKey key;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GamesScoresNode> nodes;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GamesScoresNode> comparable;

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x10C13DC", Offset = "0x10C13DC", VA = "0x10C13DC")]
		public GamesScores()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000391")]
	public class GamesScoresKey
	{
		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string type;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string field;

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x10C13E4", Offset = "0x10C13E4", VA = "0x10C13E4")]
		public GamesScoresKey()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000392")]
	public class GamesScoresNode
	{
		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int key;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float value;

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x10C13EC", Offset = "0x10C13EC", VA = "0x10C13EC")]
		public GamesScoresNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000393")]
	public class GameStats
	{
		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int times_played;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float highscore;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameScore score;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameLevel level;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameScores scores;

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x10C134C", Offset = "0x10C134C", VA = "0x10C134C")]
		public GameStats()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000394")]
	public class GameStatsData
	{
		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameStats data;

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x10C1354", Offset = "0x10C1354", VA = "0x10C1354")]
		public GameStatsData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000395")]
	public class GameScore
	{
		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float value;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float comparable;

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x10C1048", Offset = "0x10C1048", VA = "0x10C1048")]
		public GameScore()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000396")]
	public class GameLevel
	{
		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int value;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float comparable;

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x10C1028", Offset = "0x10C1028", VA = "0x10C1028")]
		public GameLevel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000397")]
	public class GameScores
	{
		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameScoresVectors vectors;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameScoresNode> nodes;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float comparable;

		[Token(Token = "0x170002C4")]
		public List<GameScoresNode> AllScores
		{
			[Token(Token = "0x6001CBC")]
			[Address(RVA = "0x10C1050", Offset = "0x10C1050", VA = "0x10C1050")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C5")]
		public GameScoresNode LastScore
		{
			[Token(Token = "0x6001CBD")]
			[Address(RVA = "0x10C1114", Offset = "0x10C1114", VA = "0x10C1114")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C6")]
		public List<GameScoresNode> Last7Scores
		{
			[Token(Token = "0x6001CBE")]
			[Address(RVA = "0x10C117C", Offset = "0x10C117C", VA = "0x10C117C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C7")]
		public List<GameScoresNode> Last30Scores
		{
			[Token(Token = "0x6001CBF")]
			[Address(RVA = "0x10C1258", Offset = "0x10C1258", VA = "0x10C1258")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x10C1334", Offset = "0x10C1334", VA = "0x10C1334")]
		public GameScores()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000398")]
	public class GameScoresVectors
	{
		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string x;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string y;

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x10C1344", Offset = "0x10C1344", VA = "0x10C1344")]
		public GameScoresVectors()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000399")]
	public class GameScoresNode
	{
		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float y;

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x10C133C", Offset = "0x10C133C", VA = "0x10C133C")]
		public GameScoresNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039A")]
	public class GameType
	{
		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x10C135C", Offset = "0x10C135C", VA = "0x10C135C")]
		public GameType()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public enum EGender
	{
		[Token(Token = "0x40016EC")]
		Male = 1,
		[Token(Token = "0x40016ED")]
		Female,
		[Token(Token = "0x40016EE")]
		Other,
		[Token(Token = "0x40016EF")]
		PreferNotToSay
	}
	[Serializable]
	[Token(Token = "0x200039C")]
	public class Gender
	{
		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x10C1568", Offset = "0x10C1568", VA = "0x10C1568")]
		public Gender()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039D")]
	public class GendersData
	{
		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Gender> genders;

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x10C1570", Offset = "0x10C1570", VA = "0x10C1570")]
		public GendersData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039E")]
	public class Language
	{
		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool is_default;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string direction;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string language_code;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string locale;

		[Token(Token = "0x170002C8")]
		public string IetfTag
		{
			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0x10C1578", Offset = "0x10C1578", VA = "0x10C1578")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C9")]
		public string LanguageCode
		{
			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0x10C1580", Offset = "0x10C1580", VA = "0x10C1580")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CA")]
		public LocaleConfig Locale
		{
			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0x10C1588", Offset = "0x10C1588", VA = "0x10C1588")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x10C15F0", Offset = "0x10C15F0", VA = "0x10C15F0")]
		public Language()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039F")]
	public class LanguagesData
	{
		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Language> languages;

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x10C15F8", Offset = "0x10C15F8", VA = "0x10C15F8")]
		public LanguagesData()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public enum EMoodType
	{
		[Token(Token = "0x40016FB")]
		Very_Sad = 1,
		[Token(Token = "0x40016FC")]
		Sad,
		[Token(Token = "0x40016FD")]
		Normal,
		[Token(Token = "0x40016FE")]
		Happy,
		[Token(Token = "0x40016FF")]
		VeryHappy
	}
	[Serializable]
	[Token(Token = "0x20003A1")]
	public class Mood
	{
		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int slept_hour;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MoodType mood_type;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int happened_at;

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x10C1608", Offset = "0x10C1608", VA = "0x10C1608")]
		public Mood()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A2")]
	public class MoodType
	{
		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x10C1610", Offset = "0x10C1610", VA = "0x10C1610")]
		public MoodType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A3")]
	public class MoodsData
	{
		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Mood> data;

		[Token(Token = "0x170002CB")]
		public List<Mood> Moods
		{
			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0x10C1618", Offset = "0x10C1618", VA = "0x10C1618")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x10C1688", Offset = "0x10C1688", VA = "0x10C1688")]
		public MoodsData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A4")]
	public class News
	{
		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string body;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string slug;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string image;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int published_at;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NewsLinks links;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public NewsMeta meta;

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x10C1690", Offset = "0x10C1690", VA = "0x10C1690")]
		public News()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A5")]
	public class NewsLinks
	{
		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string first;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string last;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string prev;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string next;

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x10C1710", Offset = "0x10C1710", VA = "0x10C1710")]
		public NewsLinks()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A6")]
	public class NewsMeta
	{
		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int current_page;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int from;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int last_page;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int per_page;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int to;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int total;

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x10C1718", Offset = "0x10C1718", VA = "0x10C1718")]
		public NewsMeta()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A7")]
	public class NewsData
	{
		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<News> data;

		[Token(Token = "0x170002CC")]
		public List<News> News
		{
			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0x10C1698", Offset = "0x10C1698", VA = "0x10C1698")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x10C1708", Offset = "0x10C1708", VA = "0x10C1708")]
		public NewsData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A8")]
	public class Page
	{
		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string slug;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string title;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string body;

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x10C1720", Offset = "0x10C1720", VA = "0x10C1720")]
		public Page()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A9")]
	public class PageData
	{
		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Page data;

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x10C1728", Offset = "0x10C1728", VA = "0x10C1728")]
		public PageData()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public enum EProfessions
	{
		[Token(Token = "0x4001721")]
		ArtAndDesign = 1,
		[Token(Token = "0x4001722")]
		Education,
		[Token(Token = "0x4001723")]
		Engineering,
		[Token(Token = "0x4001724")]
		Finance,
		[Token(Token = "0x4001725")]
		HealthAndMedicine,
		[Token(Token = "0x4001726")]
		Law,
		[Token(Token = "0x4001727")]
		Management,
		[Token(Token = "0x4001728")]
		Media,
		[Token(Token = "0x4001729")]
		Military,
		[Token(Token = "0x400172A")]
		ResearchAndDevelopment,
		[Token(Token = "0x400172B")]
		Technology
	}
	[Serializable]
	[Token(Token = "0x20003AB")]
	public class Profession
	{
		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x10C1730", Offset = "0x10C1730", VA = "0x10C1730")]
		public Profession()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AC")]
	public class ProfessionsData
	{
		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Profession> data;

		[Token(Token = "0x170002CD")]
		public List<Profession> Professions
		{
			[Token(Token = "0x6001CD7")]
			[Address(RVA = "0x10C1738", Offset = "0x10C1738", VA = "0x10C1738")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x10C17A8", Offset = "0x10C17A8", VA = "0x10C17A8")]
		public ProfessionsData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AD")]
	public class Session
	{
		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int point;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int level;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int level_up_point;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int max_level;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int score;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int wod_id;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string version;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long started_at;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long ended_at;

		[Token(Token = "0x170002CE")]
		public DateTime? Timestamp
		{
			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0x10C17B8", Offset = "0x10C17B8", VA = "0x10C17B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x10C1840", Offset = "0x10C1840", VA = "0x10C1840")]
		public Session()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AE")]
	public class SessionData
	{
		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Session data;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SessionMeta meta;

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x10C1850", Offset = "0x10C1850", VA = "0x10C1850")]
		public SessionData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AF")]
	public class SessionMeta
	{
		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SessionMetaScores scores;

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x10C1858", Offset = "0x10C1858", VA = "0x10C1858")]
		public SessionMeta()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B0")]
	public class SessionMetaScores
	{
		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SessionMetaScoresVectors vectors;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SessionMetaScoresNode> nodes;

		[Token(Token = "0x170002CF")]
		public List<SessionMetaScoresNode> AllScores
		{
			[Token(Token = "0x6001CDD")]
			[Address(RVA = "0x10C1860", Offset = "0x10C1860", VA = "0x10C1860")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D0")]
		public SessionMetaScoresNode LastScore
		{
			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0x10C1924", Offset = "0x10C1924", VA = "0x10C1924")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D1")]
		public List<SessionMetaScoresNode> Last7Scores
		{
			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0x10C198C", Offset = "0x10C198C", VA = "0x10C198C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D2")]
		public List<SessionMetaScoresNode> Last30Scores
		{
			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0x10C1A68", Offset = "0x10C1A68", VA = "0x10C1A68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x10C1B44", Offset = "0x10C1B44", VA = "0x10C1B44")]
		public SessionMetaScores()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B1")]
	public class SessionMetaScoresVectors
	{
		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string x;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string y;

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x10C1B54", Offset = "0x10C1B54", VA = "0x10C1B54")]
		public SessionMetaScoresVectors()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B2")]
	public class SessionMetaScoresNode
	{
		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long x;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float y;

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x10C1B4C", Offset = "0x10C1B4C", VA = "0x10C1B4C")]
		public SessionMetaScoresNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B3")]
	public class LocalSessionHistory
	{
		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Session> sessions;

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x10C1600", Offset = "0x10C1600", VA = "0x10C1600")]
		public LocalSessionHistory()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public enum SessionStatusType
	{
		[Token(Token = "0x4001744")]
		NotDefined,
		[Token(Token = "0x4001745")]
		Playing,
		[Token(Token = "0x4001746")]
		Finished,
		[Token(Token = "0x4001747")]
		Abandoned
	}
	[Token(Token = "0x20003B5")]
	public static class SessionStatusTypeHelper
	{
		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x10C1B5C", Offset = "0x10C1B5C", VA = "0x10C1B5C")]
		public static SessionStatusType ToType(string name)
		{
			return default(SessionStatusType);
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x10C1C08", Offset = "0x10C1C08", VA = "0x10C1C08")]
		public static SessionStatusType ToType(int id)
		{
			return default(SessionStatusType);
		}
	}
	[Serializable]
	[Token(Token = "0x20003B6")]
	public class Token
	{
		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string token_type;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int expires_in;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string access_token;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string refresh_token;

		[Token(Token = "0x170002D3")]
		public string AccessToken
		{
			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0x10C1C0C", Offset = "0x10C1C0C", VA = "0x10C1C0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D4")]
		public string RefreshToken
		{
			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0x10C1C14", Offset = "0x10C1C14", VA = "0x10C1C14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x10C1C1C", Offset = "0x10C1C1C", VA = "0x10C1C1C")]
		public Token()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class Tutorial
	{
		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TutorialGame game;

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x10C1C24", Offset = "0x10C1C24", VA = "0x10C1C24")]
		public Tutorial()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B8")]
	public class TutorialData
	{
		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Tutorial> data;

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x10C1C2C", Offset = "0x10C1C2C", VA = "0x10C1C2C")]
		public TutorialData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B9")]
	public class TutorialGame
	{
		[Token(Token = "0x2000789")]
		public class Game
		{
			[Token(Token = "0x4002B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x4002B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string title;

			[Token(Token = "0x4002B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string excerpt;

			[Token(Token = "0x4002B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string body;

			[Token(Token = "0x4002B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string release_version;

			[Token(Token = "0x4002B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool feature;

			[Token(Token = "0x4002B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool two_hands;

			[Token(Token = "0x4002B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
			public bool headphones;

			[Token(Token = "0x4002B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
			public bool around_player;

			[Token(Token = "0x4002B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool color_perception;

			[Token(Token = "0x4002B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
			public bool high_movement_intensity;

			[Token(Token = "0x600309A")]
			[Address(RVA = "0x10C1C3C", Offset = "0x10C1C3C", VA = "0x10C1C3C")]
			public Game()
			{
			}
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x10C1C34", Offset = "0x10C1C34", VA = "0x10C1C34")]
		public TutorialGame()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BA")]
	public class User
	{
		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string first_name;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string last_name;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string username;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int verified_at;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Language language;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Avatar avatar;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Mood mood;

		[Token(Token = "0x170002D5")]
		public string FirstName
		{
			[Token(Token = "0x6001CED")]
			[Address(RVA = "0x10C1C44", Offset = "0x10C1C44", VA = "0x10C1C44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D6")]
		public string LastName
		{
			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0x10C1C4C", Offset = "0x10C1C4C", VA = "0x10C1C4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D7")]
		public string CompleteName
		{
			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0x10C1C54", Offset = "0x10C1C54", VA = "0x10C1C54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x10C1CA8", Offset = "0x10C1CA8", VA = "0x10C1CA8")]
		public User()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BB")]
	public class UserData
	{
		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public User data;

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x10C1CB0", Offset = "0x10C1CB0", VA = "0x10C1CB0")]
		public UserData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BC")]
	public class UserEpi
	{
		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float epi;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int acceptable_completed_wods;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int completed_wods;

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x10C1CB8", Offset = "0x10C1CB8", VA = "0x10C1CB8")]
		public UserEpi()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BD")]
	public class UserEpiData
	{
		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserEpi data;

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x10C1CC0", Offset = "0x10C1CC0", VA = "0x10C1CC0")]
		public UserEpiData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BE")]
	public class UserStats
	{
		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserMoods moods;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UserSleeps sleeps;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int sessions_completed;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float highscore;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UserScores scores;

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x10C1FF4", Offset = "0x10C1FF4", VA = "0x10C1FF4")]
		public UserStats()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BF")]
	public class UserStatsData
	{
		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserStats data;

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x10C1FFC", Offset = "0x10C1FFC", VA = "0x10C1FFC")]
		public UserStatsData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C0")]
	public class UserMoods
	{
		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserMoodsKey key;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<UserMoodsNode> nodes;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<UserMoodsNode> comparable;

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x10C1CC8", Offset = "0x10C1CC8", VA = "0x10C1CC8")]
		public UserMoods()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C1")]
	public class UserMoodsKey
	{
		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string type;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string field;

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x10C1CD0", Offset = "0x10C1CD0", VA = "0x10C1CD0")]
		public UserMoodsKey()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C2")]
	public class UserMoodsNode
	{
		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int key;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int value;

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x10C1CD8", Offset = "0x10C1CD8", VA = "0x10C1CD8")]
		public UserMoodsNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C3")]
	public class UserSleeps
	{
		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserSleepsKey key;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<UserSleepsNode> nodes;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<UserSleepsNode> comparable;

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x10C1FDC", Offset = "0x10C1FDC", VA = "0x10C1FDC")]
		public UserSleeps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C4")]
	public class UserSleepsKey
	{
		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string type;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string field;

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x10C1FE4", Offset = "0x10C1FE4", VA = "0x10C1FE4")]
		public UserSleepsKey()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C5")]
	public class UserSleepsNode
	{
		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int key;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int value;

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x10C1FEC", Offset = "0x10C1FEC", VA = "0x10C1FEC")]
		public UserSleepsNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C6")]
	public class UserScores
	{
		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserScoresVectors vectors;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<UserScoresNode> nodes;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float comparable;

		[Token(Token = "0x170002D8")]
		public List<UserScoresNode> AllScores
		{
			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0x10C1CE0", Offset = "0x10C1CE0", VA = "0x10C1CE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D9")]
		public UserScoresNode LastScore
		{
			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0x10C1DA4", Offset = "0x10C1DA4", VA = "0x10C1DA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DA")]
		public List<UserScoresNode> Last7Scores
		{
			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0x10C1E0C", Offset = "0x10C1E0C", VA = "0x10C1E0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DB")]
		public List<UserScoresNode> Last30Scores
		{
			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0x10C1EE8", Offset = "0x10C1EE8", VA = "0x10C1EE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x10C1FC4", Offset = "0x10C1FC4", VA = "0x10C1FC4")]
		public UserScores()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C7")]
	public class UserScoresVectors
	{
		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string x;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string y;

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x10C1FD4", Offset = "0x10C1FD4", VA = "0x10C1FD4")]
		public UserScoresVectors()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C8")]
	public class UserScoresNode
	{
		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float y;

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x10C1FCC", Offset = "0x10C1FCC", VA = "0x10C1FCC")]
		public UserScoresNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C9")]
	public class Wod
	{
		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int started_at;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ended_at;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<WodGame> games;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Session> sessions;

		[Token(Token = "0x170002DC")]
		public bool IsCompleted
		{
			[Token(Token = "0x6001D03")]
			[Address(RVA = "0x10C2004", Offset = "0x10C2004", VA = "0x10C2004")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x10C2080", Offset = "0x10C2080", VA = "0x10C2080")]
		public Wod()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CA")]
	public class WodData
	{
		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Wod data;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WodMeta meta;

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x10C2088", Offset = "0x10C2088", VA = "0x10C2088")]
		public WodData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CB")]
	public class WodMeta
	{
		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float wod_score;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float global_wod_score;

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x10C2104", Offset = "0x10C2104", VA = "0x10C2104")]
		public WodMeta()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CC")]
	public class WodGame
	{
		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string excerpt;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string body;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string release_version;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool feature;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool two_hands;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool headphones;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool around_player;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool color_perception;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool high_movement_intensity;

		[Token(Token = "0x170002DD")]
		public AttentionLab.Enums.GameType GameType
		{
			[Token(Token = "0x6001D07")]
			[Address(RVA = "0x10C2090", Offset = "0x10C2090", VA = "0x10C2090")]
			get
			{
				return default(AttentionLab.Enums.GameType);
			}
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x10C20FC", Offset = "0x10C20FC", VA = "0x10C20FC")]
		public WodGame()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CD")]
	public class WodStats
	{
		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int completed_wods;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int total_workouts;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float highscore;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WodScores scores;

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x10C2408", Offset = "0x10C2408", VA = "0x10C2408")]
		public WodStats()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CE")]
	public class WodStatsData
	{
		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WodStats data;

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x10C2410", Offset = "0x10C2410", VA = "0x10C2410")]
		public WodStatsData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CF")]
	public class WodScores
	{
		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WodScoresVectors vectors;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<WodScoresNode> nodes;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float comparable;

		[Token(Token = "0x170002DE")]
		public List<WodScoresNode> AllScores
		{
			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0x10C210C", Offset = "0x10C210C", VA = "0x10C210C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DF")]
		public WodScoresNode LastScore
		{
			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0x10C21D0", Offset = "0x10C21D0", VA = "0x10C21D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E0")]
		public List<WodScoresNode> Last7Scores
		{
			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0x10C2238", Offset = "0x10C2238", VA = "0x10C2238")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E1")]
		public List<WodScoresNode> Last30Scores
		{
			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0x10C2314", Offset = "0x10C2314", VA = "0x10C2314")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x10C23F0", Offset = "0x10C23F0", VA = "0x10C23F0")]
		public WodScores()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D0")]
	public class WodScoresVectors
	{
		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string x;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string y;

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x10C2400", Offset = "0x10C2400", VA = "0x10C2400")]
		public WodScoresVectors()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D1")]
	public class WodScoresNode
	{
		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float y;

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x10C23F8", Offset = "0x10C23F8", VA = "0x10C23F8")]
		public WodScoresNode()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class ServerRequestsEnums
	{
		[Token(Token = "0x200078A")]
		public enum ESleepType
		{
			[Token(Token = "0x4002B75")]
			FiveOrLess = 5,
			[Token(Token = "0x4002B76")]
			Six,
			[Token(Token = "0x4002B77")]
			Seven,
			[Token(Token = "0x4002B78")]
			Eight,
			[Token(Token = "0x4002B79")]
			NineOrMore
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x10C17B0", Offset = "0x10C17B0", VA = "0x10C17B0")]
		public ServerRequestsEnums()
		{
		}
	}
}
namespace AttentionLab.Rooms.Onboarding
{
	[Token(Token = "0x20003D3")]
	public class OnboardingController : MonoBehaviour
	{
		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C0F8", Offset = "0xB7C0F8")]
		[SerializeField]
		private SceneController _sceneController;

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x1047188", Offset = "0x1047188", VA = "0x1047188")]
		public void Init()
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x104718C", Offset = "0x104718C", VA = "0x104718C")]
		public OnboardingController()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class UIManager : MonoBehaviour
	{
		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static UIManager instance;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C144", Offset = "0xB7C144")]
		public Font textFont;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C17C", Offset = "0xB7C17C")]
		public int labelFontSize;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite buttonBackground;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color buttonColor;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color buttonHoverColor;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color buttonPressedColor;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Color buttonSelectedColor;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color buttonLabelColor;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C1B4", Offset = "0xB7C1B4")]
		public int fontSize;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool bestFitText;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Sprite inputFieldBackground;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Color IFColor;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Color IFHoverColor;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Color IFPressedColor;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Color IFSelectedColor;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Color IFTextColor;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Color IFTextHintColor;

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x10476D4", Offset = "0x10476D4", VA = "0x10476D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x10477B4", Offset = "0x10477B4", VA = "0x10477B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x10477B8", Offset = "0x10477B8", VA = "0x10477B8")]
		public void ApplyConfiguration()
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x10485A4", Offset = "0x10485A4", VA = "0x10485A4")]
		public UIManager()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class UserSession : MonoBehaviour
	{
		[Token(Token = "0x200078B")]
		public delegate void OnAuthSuccess(UserSession sender, bool success);

		[Token(Token = "0x200078C")]
		public delegate void OnSessionEnded(UserSession sender);

		[Token(Token = "0x200078D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73294", Offset = "0xB73294")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4002B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string username;

			[Token(Token = "0x4002B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UserSession <>4__this;

			[Token(Token = "0x4002B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<bool, ResponseCodeType, string, Mood> callback;

			[Token(Token = "0x60030A3")]
			[Address(RVA = "0x1048F50", Offset = "0x1048F50", VA = "0x1048F50")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x60030A4")]
			[Address(RVA = "0x1049C6C", Offset = "0x1049C6C", VA = "0x1049C6C")]
			internal void <Login>b__0(AttentionLab.REST.Request request, AttentionLab.REST.Data.Token token)
			{
			}
		}

		[Token(Token = "0x200078E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB732A4", Offset = "0xB732A4")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4002B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UserSession <>4__this;

			[Token(Token = "0x4002B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool, ResponseCodeType, string, Mood> callback;

			[Token(Token = "0x60030A5")]
			[Address(RVA = "0x1049060", Offset = "0x1049060", VA = "0x1049060")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x60030A6")]
			[Address(RVA = "0x1049D44", Offset = "0x1049D44", VA = "0x1049D44")]
			internal void <Login>b__0(AttentionLab.REST.Request request, AttentionLab.REST.Data.User user)
			{
			}
		}

		[Token(Token = "0x200078F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB732B4", Offset = "0xB732B4")]
		private sealed class <>c__DisplayClass14_1
		{
			[Token(Token = "0x4002B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AttentionLab.REST.Request request;

			[Token(Token = "0x4002B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AttentionLab.REST.Data.User user;

			[Token(Token = "0x4002B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass14_0 CS$<>8__locals1;

			[Token(Token = "0x4002B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameDetailsManager.OnGameDetailsFetched <>9__2;

			[Token(Token = "0x60030A7")]
			[Address(RVA = "0x1049F3C", Offset = "0x1049F3C", VA = "0x1049F3C")]
			public <>c__DisplayClass14_1()
			{
			}

			[Token(Token = "0x60030A8")]
			[Address(RVA = "0x1049F44", Offset = "0x1049F44", VA = "0x1049F44")]
			internal void <Login>b__1()
			{
			}

			[Token(Token = "0x60030A9")]
			[Address(RVA = "0x104A0BC", Offset = "0x104A0BC", VA = "0x104A0BC")]
			internal void <Login>b__2()
			{
			}
		}

		[Token(Token = "0x2000790")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB732C4", Offset = "0xB732C4")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4002B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UserSession <>4__this;

			[Token(Token = "0x4002B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AttentionLab.REST.Data.User user;

			[Token(Token = "0x4002B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<bool, ResponseCodeType, string, Mood> loginCallback;

			[Token(Token = "0x4002B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callback;

			[Token(Token = "0x4002B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GeneralDialog.OnDialogButton <>9__3;

			[Token(Token = "0x4002B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action <>9__2;

			[Token(Token = "0x4002B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action <>9__4;

			[Token(Token = "0x60030AA")]
			[Address(RVA = "0x10493F4", Offset = "0x10493F4", VA = "0x10493F4")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x60030AB")]
			[Address(RVA = "0x104A198", Offset = "0x104A198", VA = "0x104A198")]
			internal void <CheckEmailValidation>b__0()
			{
			}

			[Token(Token = "0x60030AC")]
			[Address(RVA = "0x104A2A4", Offset = "0x104A2A4", VA = "0x104A2A4")]
			internal void <CheckEmailValidation>b__2()
			{
			}

			[Token(Token = "0x60030AD")]
			[Address(RVA = "0x104A3D0", Offset = "0x104A3D0", VA = "0x104A3D0")]
			internal void <CheckEmailValidation>b__3()
			{
			}

			[Token(Token = "0x60030AE")]
			[Address(RVA = "0x104A3F8", Offset = "0x104A3F8", VA = "0x104A3F8")]
			internal void <CheckEmailValidation>b__1()
			{
			}

			[Token(Token = "0x60030AF")]
			[Address(RVA = "0x104A4A4", Offset = "0x104A4A4", VA = "0x104A4A4")]
			internal void <CheckEmailValidation>b__4()
			{
			}
		}

		[Token(Token = "0x2000791")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB732D4", Offset = "0xB732D4")]
		private sealed class <LaborIllusionLoadingScreen>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float minTime;

			[Token(Token = "0x4002B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float maxTime;

			[Token(Token = "0x4002B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callback;

			[Token(Token = "0x4002B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject <_loadingInstance>5__2;

			[Token(Token = "0x17000557")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030B3")]
				[Address(RVA = "0x104A644", Offset = "0x104A644", VA = "0x104A644", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000558")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030B5")]
				[Address(RVA = "0x104A6B0", Offset = "0x104A6B0", VA = "0x104A6B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030B0")]
			[Address(RVA = "0x1049484", Offset = "0x1049484", VA = "0x1049484")]
			[DebuggerHidden]
			public <LaborIllusionLoadingScreen>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60030B1")]
			[Address(RVA = "0x104A4C8", Offset = "0x104A4C8", VA = "0x104A4C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030B2")]
			[Address(RVA = "0x104A4CC", Offset = "0x104A4CC", VA = "0x104A4CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030B4")]
			[Address(RVA = "0x104A64C", Offset = "0x104A64C", VA = "0x104A64C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OnAuthSuccess AuthSuccess;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnSessionEnded SessionEnded;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static UserSession Instance;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C1EC", Offset = "0xB7C1EC")]
		private AttentionLab.REST.Data.User <User>k__BackingField;

		[Token(Token = "0x170002E2")]
		public AttentionLab.REST.Data.User User
		{
			[Token(Token = "0x6001D19")]
			[Address(RVA = "0x10485B8", Offset = "0x10485B8", VA = "0x10485B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88FB0", Offset = "0xB88FB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0x10485C0", Offset = "0x10485C0", VA = "0x10485C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88FC0", Offset = "0xB88FC0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x10485C8", Offset = "0x10485C8", VA = "0x10485C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x10486A8", Offset = "0x10486A8", VA = "0x10486A8")]
		public void Auth()
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x1048884", Offset = "0x1048884", VA = "0x1048884")]
		private void RequestClientToken()
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x1048964", Offset = "0x1048964", VA = "0x1048964")]
		private void RefreshToken(string refreshToken)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x1048E2C", Offset = "0x1048E2C", VA = "0x1048E2C")]
		public void Login(string username, string password, Action<bool, ResponseCodeType, string, Mood> callback)
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x1048F58", Offset = "0x1048F58", VA = "0x1048F58")]
		public void Login(Action<bool, ResponseCodeType, string, Mood> callback)
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x1049068", Offset = "0x1049068", VA = "0x1049068")]
		private void SetLanguage()
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x10491C0", Offset = "0x10491C0", VA = "0x10491C0")]
		private void CheckEmailValidation(AttentionLab.REST.Data.User user, Action<bool, ResponseCodeType, string, Mood> loginCallback, Action callback)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x10493FC", Offset = "0x10493FC", VA = "0x10493FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88FD0", Offset = "0xB88FD0")]
		private IEnumerator LaborIllusionLoadingScreen(float minTime, float maxTime, Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x10494B0", Offset = "0x10494B0", VA = "0x10494B0")]
		public void EndSession()
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x104954C", Offset = "0x104954C", VA = "0x104954C")]
		private void ClearLocalData()
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x1049A8C", Offset = "0x1049A8C", VA = "0x1049A8C")]
		public UserSession()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x1049A94", Offset = "0x1049A94", VA = "0x1049A94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89034", Offset = "0xB89034")]
		private void <RequestClientToken>b__11_0(AttentionLab.REST.Request request, AttentionLab.REST.Data.Token token)
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x1049BF8", Offset = "0x1049BF8", VA = "0x1049BF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89044", Offset = "0xB89044")]
		private void <RequestClientToken>b__11_1()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x1049BFC", Offset = "0x1049BFC", VA = "0x1049BFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89054", Offset = "0xB89054")]
		private void <RefreshToken>b__12_0(AttentionLab.REST.Request request, AttentionLab.REST.Data.Token token)
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class TabBarButton : MonoBehaviour
	{
		[Token(Token = "0x2000792")]
		public delegate void OnPressed(TabBarButton sender);

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C1FC", Offset = "0xB7C1FC")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ThemedKeyboardButton _themedButton;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnPressed Pressed;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C258", Offset = "0xB7C258")]
		private int <Index>k__BackingField;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C268", Offset = "0xB7C268")]
		private bool <IsSelected>k__BackingField;

		[Token(Token = "0x170002E3")]
		public Button Component
		{
			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0x1047194", Offset = "0x1047194", VA = "0x1047194")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E4")]
		public int Index
		{
			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0x104719C", Offset = "0x104719C", VA = "0x104719C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89064", Offset = "0xB89064")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D2C")]
			[Address(RVA = "0x10471A4", Offset = "0x10471A4", VA = "0x10471A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89074", Offset = "0xB89074")]
			set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public bool IsSelected
		{
			[Token(Token = "0x6001D2D")]
			[Address(RVA = "0x10471AC", Offset = "0x10471AC", VA = "0x10471AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89084", Offset = "0xB89084")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D2E")]
			[Address(RVA = "0x10471B4", Offset = "0x10471B4", VA = "0x10471B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89094", Offset = "0xB89094")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x10471C0", Offset = "0x10471C0", VA = "0x10471C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x1047248", Offset = "0x1047248", VA = "0x1047248")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x1047250", Offset = "0x1047250", VA = "0x1047250")]
		private void ThemedButton_Changed(ThemedComponent sender)
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x104724C", Offset = "0x104724C", VA = "0x104724C")]
		private void UpdateButton()
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x1047260", Offset = "0x1047260", VA = "0x1047260")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x1047254", Offset = "0x1047254", VA = "0x1047254")]
		public void Select(bool select)
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x1047294", Offset = "0x1047294", VA = "0x1047294")]
		public void UI_Button_Click()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x1047660", Offset = "0x1047660", VA = "0x1047660")]
		public void Click()
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x104768C", Offset = "0x104768C", VA = "0x104768C")]
		public TabBarButton()
		{
		}
	}
}
namespace AttentionLab.Localization
{
	[Token(Token = "0x20003D7")]
	public enum Language
	{
		[Token(Token = "0x40017B4")]
		English,
		[Token(Token = "0x40017B5")]
		Chinese
	}
	[Token(Token = "0x20003D8")]
	public enum LanguageCode
	{
		[Token(Token = "0x40017B7")]
		en,
		[Token(Token = "0x40017B8")]
		zh
	}
	[Token(Token = "0x20003D9")]
	public enum LanguageReadingDirection
	{
		[Token(Token = "0x40017BA")]
		LeftToRight,
		[Token(Token = "0x40017BB")]
		RightToLeft
	}
	[Token(Token = "0x20003DA")]
	public static class LanguageReadingDirectionHelper
	{
		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x14751B4", Offset = "0x14751B4", VA = "0x14751B4")]
		public static string ToString(LanguageReadingDirection languageReadingDirection)
		{
			return null;
		}
	}
	[Token(Token = "0x20003DB")]
	public class LanguageConfig
	{
		[Token(Token = "0x40017BC")]
		private const string TO_STRING_FORMAT = "{0} : {1}";

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C278", Offset = "0xB7C278")]
		private string <Name>k__BackingField;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C288", Offset = "0xB7C288")]
		private Language <ReferenceType>k__BackingField;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C298", Offset = "0xB7C298")]
		private LanguageCode <InternalCode>k__BackingField;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C2A8", Offset = "0xB7C2A8")]
		private LanguageReadingDirection <ReadingDirection>k__BackingField;

		[Token(Token = "0x170002E6")]
		public string Name
		{
			[Token(Token = "0x6001D39")]
			[Address(RVA = "0x1474EF8", Offset = "0x1474EF8", VA = "0x1474EF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB890A4", Offset = "0xB890A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D3A")]
			[Address(RVA = "0x1474F00", Offset = "0x1474F00", VA = "0x1474F00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB890B4", Offset = "0xB890B4")]
			set
			{
			}
		}

		[Token(Token = "0x170002E7")]
		public string ISO
		{
			[Token(Token = "0x6001D3B")]
			[Address(RVA = "0x1474F08", Offset = "0x1474F08", VA = "0x1474F08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E8")]
		public Language ReferenceType
		{
			[Token(Token = "0x6001D3C")]
			[Address(RVA = "0x1474F98", Offset = "0x1474F98", VA = "0x1474F98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB890C4", Offset = "0xB890C4")]
			get
			{
				return default(Language);
			}
			[Token(Token = "0x6001D3D")]
			[Address(RVA = "0x1474FA0", Offset = "0x1474FA0", VA = "0x1474FA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB890D4", Offset = "0xB890D4")]
			set
			{
			}
		}

		[Token(Token = "0x170002E9")]
		public LanguageCode InternalCode
		{
			[Token(Token = "0x6001D3E")]
			[Address(RVA = "0x1474FA8", Offset = "0x1474FA8", VA = "0x1474FA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB890E4", Offset = "0xB890E4")]
			get
			{
				return default(LanguageCode);
			}
			[Token(Token = "0x6001D3F")]
			[Address(RVA = "0x1474FB0", Offset = "0x1474FB0", VA = "0x1474FB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB890F4", Offset = "0xB890F4")]
			set
			{
			}
		}

		[Token(Token = "0x170002EA")]
		public LanguageReadingDirection ReadingDirection
		{
			[Token(Token = "0x6001D40")]
			[Address(RVA = "0x1474FB8", Offset = "0x1474FB8", VA = "0x1474FB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89104", Offset = "0xB89104")]
			get
			{
				return default(LanguageReadingDirection);
			}
			[Token(Token = "0x6001D41")]
			[Address(RVA = "0x1474FC0", Offset = "0x1474FC0", VA = "0x1474FC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89114", Offset = "0xB89114")]
			set
			{
			}
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x1474FC8", Offset = "0x1474FC8", VA = "0x1474FC8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x1475154", Offset = "0x1475154", VA = "0x1475154")]
		public static Language GetLanguage(string languageCode)
		{
			return default(Language);
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x14751AC", Offset = "0x14751AC", VA = "0x14751AC")]
		public LanguageConfig()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public enum Locale
	{
		[Token(Token = "0x40017C2")]
		NotDefined,
		[Token(Token = "0x40017C3")]
		en_US,
		[Token(Token = "0x40017C4")]
		zh_CN
	}
	[Token(Token = "0x20003DD")]
	public class LocaleConfig
	{
		[Token(Token = "0x2000793")]
		public enum EndiannessType
		{
			[Token(Token = "0x4002B91")]
			Big,
			[Token(Token = "0x4002B92")]
			Little,
			[Token(Token = "0x4002B93")]
			Middle
		}

		[Token(Token = "0x40017C5")]
		private const string TO_STRING_FORMAT = "{0} : {1}";

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C2B8", Offset = "0xB7C2B8")]
		private int <ServerId>k__BackingField;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C2C8", Offset = "0xB7C2C8")]
		private string <Name>k__BackingField;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C2D8", Offset = "0xB7C2D8")]
		private string <FriendlyName>k__BackingField;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C2E8", Offset = "0xB7C2E8")]
		private string <DateFormat>k__BackingField;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C2F8", Offset = "0xB7C2F8")]
		private string <DateSeparator>k__BackingField;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C308", Offset = "0xB7C308")]
		private EndiannessType <DateEndianness>k__BackingField;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C318", Offset = "0xB7C318")]
		private Locale <ReferenceType>k__BackingField;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C328", Offset = "0xB7C328")]
		private SystemLanguage[] <SystemLanguages>k__BackingField;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C338", Offset = "0xB7C338")]
		private LanguageConfig <Language>k__BackingField;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C348", Offset = "0xB7C348")]
		private string <ThemeTextStylesName>k__BackingField;

		[Token(Token = "0x170002EB")]
		public int ServerId
		{
			[Token(Token = "0x6001D45")]
			[Address(RVA = "0x147521C", Offset = "0x147521C", VA = "0x147521C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89124", Offset = "0xB89124")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D46")]
			[Address(RVA = "0x1475224", Offset = "0x1475224", VA = "0x1475224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89134", Offset = "0xB89134")]
			set
			{
			}
		}

		[Token(Token = "0x170002EC")]
		public string Name
		{
			[Token(Token = "0x6001D47")]
			[Address(RVA = "0x147522C", Offset = "0x147522C", VA = "0x147522C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89144", Offset = "0xB89144")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D48")]
			[Address(RVA = "0x1475234", Offset = "0x1475234", VA = "0x1475234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89154", Offset = "0xB89154")]
			set
			{
			}
		}

		[Token(Token = "0x170002ED")]
		public string FriendlyName
		{
			[Token(Token = "0x6001D49")]
			[Address(RVA = "0x147523C", Offset = "0x147523C", VA = "0x147523C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89164", Offset = "0xB89164")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D4A")]
			[Address(RVA = "0x1475244", Offset = "0x1475244", VA = "0x1475244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89174", Offset = "0xB89174")]
			set
			{
			}
		}

		[Token(Token = "0x170002EE")]
		public string DateFormat
		{
			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0x147524C", Offset = "0x147524C", VA = "0x147524C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89184", Offset = "0xB89184")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D4C")]
			[Address(RVA = "0x1475254", Offset = "0x1475254", VA = "0x1475254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89194", Offset = "0xB89194")]
			set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		public string DateSeparator
		{
			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0x147525C", Offset = "0x147525C", VA = "0x147525C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB891A4", Offset = "0xB891A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0x1475264", Offset = "0x1475264", VA = "0x1475264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB891B4", Offset = "0xB891B4")]
			set
			{
			}
		}

		[Token(Token = "0x170002F0")]
		public EndiannessType DateEndianness
		{
			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0x147526C", Offset = "0x147526C", VA = "0x147526C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB891C4", Offset = "0xB891C4")]
			get
			{
				return default(EndiannessType);
			}
			[Token(Token = "0x6001D50")]
			[Address(RVA = "0x1475274", Offset = "0x1475274", VA = "0x1475274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB891D4", Offset = "0xB891D4")]
			set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		public Locale ReferenceType
		{
			[Token(Token = "0x6001D51")]
			[Address(RVA = "0x147527C", Offset = "0x147527C", VA = "0x147527C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB891E4", Offset = "0xB891E4")]
			get
			{
				return default(Locale);
			}
			[Token(Token = "0x6001D52")]
			[Address(RVA = "0x1475284", Offset = "0x1475284", VA = "0x1475284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB891F4", Offset = "0xB891F4")]
			set
			{
			}
		}

		[Token(Token = "0x170002F2")]
		public SystemLanguage[] SystemLanguages
		{
			[Token(Token = "0x6001D53")]
			[Address(RVA = "0x147528C", Offset = "0x147528C", VA = "0x147528C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89204", Offset = "0xB89204")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D54")]
			[Address(RVA = "0x1475294", Offset = "0x1475294", VA = "0x1475294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89214", Offset = "0xB89214")]
			set
			{
			}
		}

		[Token(Token = "0x170002F3")]
		public LanguageConfig Language
		{
			[Token(Token = "0x6001D55")]
			[Address(RVA = "0x147529C", Offset = "0x147529C", VA = "0x147529C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89224", Offset = "0xB89224")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D56")]
			[Address(RVA = "0x14752A4", Offset = "0x14752A4", VA = "0x14752A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89234", Offset = "0xB89234")]
			set
			{
			}
		}

		[Token(Token = "0x170002F4")]
		public string ThemeTextStylesName
		{
			[Token(Token = "0x6001D57")]
			[Address(RVA = "0x14752AC", Offset = "0x14752AC", VA = "0x14752AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89244", Offset = "0xB89244")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D58")]
			[Address(RVA = "0x14752B4", Offset = "0x14752B4", VA = "0x14752B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89254", Offset = "0xB89254")]
			set
			{
			}
		}

		[Token(Token = "0x170002F5")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001D59")]
			[Address(RVA = "0x14752BC", Offset = "0x14752BC", VA = "0x14752BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x14752CC", Offset = "0x14752CC", VA = "0x14752CC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x1475480", Offset = "0x1475480", VA = "0x1475480")]
		public static Locale GetLocale(string ietfTag)
		{
			return default(Locale);
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x14754F4", Offset = "0x14754F4", VA = "0x14754F4")]
		public static string GetIeftTag(Locale locale)
		{
			return null;
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x14755A0", Offset = "0x14755A0", VA = "0x14755A0")]
		public static string GetLocalizedLocale(Locale locale)
		{
			return null;
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x1475604", Offset = "0x1475604", VA = "0x1475604")]
		public LocaleConfig()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class LocaleManager
	{
		[Token(Token = "0x2000794")]
		public delegate void OnLocaleChanged(LocaleConfig current, int updateNumber);

		[Token(Token = "0x40017D0")]
		private const string LOCALE_RESOURCES_PATH_FORMAT = "Locales/{0}";

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OnLocaleChanged LocaleChanged;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C358", Offset = "0xB7C358")]
		private static int <UpdateNumber>k__BackingField;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static LocaleConfig _current;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static TextCollection _currentCollection;

		[Token(Token = "0x170002F6")]
		public static LocaleConfig Current
		{
			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0x1475614", Offset = "0x1475614", VA = "0x1475614")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F7")]
		public static int UpdateNumber
		{
			[Token(Token = "0x6001D60")]
			[Address(RVA = "0x1475748", Offset = "0x1475748", VA = "0x1475748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89264", Offset = "0xB89264")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D61")]
			[Address(RVA = "0x14757B0", Offset = "0x14757B0", VA = "0x14757B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89274", Offset = "0xB89274")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x147581C", Offset = "0x147581C", VA = "0x147581C")]
		private LocaleManager()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x1475824", Offset = "0x1475824", VA = "0x1475824")]
		public static void SetLocale(SystemLanguage systemLanguage)
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x1475C4C", Offset = "0x1475C4C", VA = "0x1475C4C")]
		public static void SetLocale(Locale locale)
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x1475D00", Offset = "0x1475D00", VA = "0x1475D00")]
		public static void SetLocale(AttentionLab.REST.Data.Language language)
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x14756BC", Offset = "0x14756BC", VA = "0x14756BC")]
		public static void SetDefaultLocale()
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x14759D4", Offset = "0x14759D4", VA = "0x14759D4")]
		public static void UpdateLocale(LocaleConfig localeConfig)
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x1475F04", Offset = "0x1475F04", VA = "0x1475F04")]
		private static TextCollection GetCollection(LocaleConfig localeConfig)
		{
			return null;
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x146D2F4", Offset = "0x146D2F4", VA = "0x146D2F4")]
		public static string Localize(string key)
		{
			return null;
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x14765B4", Offset = "0x14765B4", VA = "0x14765B4")]
		public static string LocalizeUpper(string key)
		{
			return null;
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x1476628", Offset = "0x1476628", VA = "0x1476628")]
		public static string LocalizeFormat(string key, List<string> parameters)
		{
			return null;
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x147684C", Offset = "0x147684C", VA = "0x147684C")]
		public static string LocalizeFormatUpper(string key, List<string> parameters)
		{
			return null;
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x14768D0", Offset = "0x14768D0", VA = "0x14768D0")]
		public static string LocalizeFormat(string key, string parameter)
		{
			return null;
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x1476AF4", Offset = "0x1476AF4", VA = "0x1476AF4")]
		public static string LocalizeFormatUpper(string key, string parameter)
		{
			return null;
		}
	}
	[Token(Token = "0x20003DF")]
	public static class LocaleSettings
	{
		[Token(Token = "0x2000795")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB732E4", Offset = "0xB732E4")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SystemLanguage systemLanguage;

			[Token(Token = "0x60030BE")]
			[Address(RVA = "0x1476C34", Offset = "0x1476C34", VA = "0x1476C34")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60030BF")]
			[Address(RVA = "0x1477488", Offset = "0x1477488", VA = "0x1477488")]
			internal bool <GetLocale>b__0(KeyValuePair<Locale, LocaleConfig> l)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000796")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB732F4", Offset = "0xB732F4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<Locale, LocaleConfig>, bool> <>9__5_0;

			[Token(Token = "0x4002B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<Locale, LocaleConfig>, LocaleConfig> <>9__5_1;

			[Token(Token = "0x60030C1")]
			[Address(RVA = "0x14773E4", Offset = "0x14773E4", VA = "0x14773E4")]
			public <>c()
			{
			}

			[Token(Token = "0x60030C2")]
			[Address(RVA = "0x14773EC", Offset = "0x14773EC", VA = "0x14773EC")]
			internal bool <GetActiveLocales>b__5_0(KeyValuePair<Locale, LocaleConfig> i)
			{
				return default(bool);
			}

			[Token(Token = "0x60030C3")]
			[Address(RVA = "0x1477444", Offset = "0x1477444", VA = "0x1477444")]
			internal LocaleConfig <GetActiveLocales>b__5_1(KeyValuePair<Locale, LocaleConfig> i)
			{
				return null;
			}
		}

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<Language, LanguageConfig> Languages;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Dictionary<Locale, LocaleConfig> Locales;

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x14758B8", Offset = "0x14758B8", VA = "0x14758B8")]
		public static LocaleConfig GetLocale(SystemLanguage systemLanguage)
		{
			return null;
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x1475DDC", Offset = "0x1475DDC", VA = "0x1475DDC")]
		public static LocaleConfig GetLocale(AttentionLab.REST.Data.Language language)
		{
			return null;
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x1475E84", Offset = "0x1475E84", VA = "0x1475E84")]
		public static LocaleConfig GetDefault()
		{
			return null;
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x1476C3C", Offset = "0x1476C3C", VA = "0x1476C3C")]
		public static List<LocaleConfig> GetActiveLocales()
		{
			return null;
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x1476E10", Offset = "0x1476E10", VA = "0x1476E10")]
		public static List<AttentionLab.REST.Data.Language> GetLanguages()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20003E0")]
	public class KeyValueText
	{
		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string _key;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xB7C378", Offset = "0xB7C378")]
		public string _value;

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x1474EC0", Offset = "0x1474EC0", VA = "0x1474EC0")]
		public KeyValueText(string key, string value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E1")]
	public class KeyValueAudio
	{
		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string _key;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip _value;

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x1474E88", Offset = "0x1474E88", VA = "0x1474E88")]
		public KeyValueAudio(string key, AudioClip value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E2")]
	public class KeyLocalesText
	{
		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _key;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<KeyValueText> _locales;

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x1474E50", Offset = "0x1474E50", VA = "0x1474E50")]
		public KeyLocalesText(string key, List<KeyValueText> values)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E3")]
	public class KeyLocalesAudio
	{
		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _key;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<KeyValueAudio> _locales;

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x1474E18", Offset = "0x1474E18", VA = "0x1474E18")]
		public KeyLocalesAudio(string key, List<KeyValueAudio> values)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E4")]
	public class TextCollection : ScriptableObject
	{
		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<KeyValueText> keyValues;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, string> keyValueDict;

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x14774F4", Offset = "0x14774F4", VA = "0x14774F4")]
		private void InitializeDict()
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x147765C", Offset = "0x147765C", VA = "0x147765C")]
		private bool ContainsKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x1476520", Offset = "0x1476520", VA = "0x1476520")]
		public string GetValue(string key)
		{
			return null;
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x1477720", Offset = "0x1477720", VA = "0x1477720")]
		public TextCollection()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB71E44", Offset = "0xB71E44")]
	public class TutorialAudioLocales : ScriptableObject
	{
		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB7C3A8", Offset = "0xB7C3A8")]
		public string _path;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB7C3E0", Offset = "0xB7C3E0")]
		[ReadOnly]
		public string path;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB7C42C", Offset = "0xB7C42C")]
		public List<KeyLocalesAudio> audioLocales;

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x1477728", Offset = "0x1477728", VA = "0x1477728")]
		private int ListOrder(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x1477768", Offset = "0x1477768", VA = "0x1477768")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xB89284", Offset = "0xB89284")]
		public void ChooseFolder()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x147776C", Offset = "0x147776C", VA = "0x147776C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xB8929C", Offset = "0xB8929C")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB8929C", Offset = "0xB8929C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x14777F4", Offset = "0x14777F4", VA = "0x14777F4")]
		private void Populate(string path)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x14777F8", Offset = "0x14777F8", VA = "0x14777F8")]
		private Dictionary<string, AudioClip> GetAllAudioClips(string path)
		{
			return null;
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x147786C", Offset = "0x147786C", VA = "0x147786C")]
		private bool PathIsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x1477874", Offset = "0x1477874", VA = "0x1477874")]
		private bool PathIsInvalid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x147787C", Offset = "0x147787C", VA = "0x147787C")]
		private bool ListHasElements()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x14778D8", Offset = "0x14778D8", VA = "0x14778D8")]
		public TutorialAudioLocales()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB71E98", Offset = "0xB71E98")]
	public class TutorialConfig : ScriptableObject
	{
		[Token(Token = "0x2000797")]
		public enum TutorialMessageType
		{
			[Token(Token = "0x4002B99")]
			Instruction,
			[Token(Token = "0x4002B9A")]
			Error,
			[Token(Token = "0x4002B9B")]
			Success,
			[Token(Token = "0x4002B9C")]
			Special
		}

		[Serializable]
		[Token(Token = "0x2000798")]
		public class TutorialStep
		{
			[Serializable]
			[Token(Token = "0x20008F6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73E14", Offset = "0xB73E14")]
			private sealed class <>c
			{
				[Token(Token = "0x400305D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x400305E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Func<TutorialMessage, bool> <>9__4_0;

				[Token(Token = "0x60035AB")]
				[Address(RVA = "0x1479508", Offset = "0x1479508", VA = "0x1479508")]
				public <>c()
				{
				}

				[Token(Token = "0x60035AC")]
				[Address(RVA = "0x1479510", Offset = "0x1479510", VA = "0x1479510")]
				internal bool <AutoConfigure>b__4_0(TutorialMessage x)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x4002B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			public string _index;

			[Token(Token = "0x4002B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool skipAutomatically;

			[Token(Token = "0x4002B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<TutorialMessage> _messages;

			[Token(Token = "0x60030C4")]
			[Address(RVA = "0x1479418", Offset = "0x1479418", VA = "0x1479418")]
			public TutorialStep(int index, List<TutorialMessage> messages)
			{
			}

			[Token(Token = "0x60030C5")]
			[Address(RVA = "0x1477B24", Offset = "0x1477B24", VA = "0x1477B24")]
			public void AutoConfigure()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000799")]
		public class TutorialSpecialStep
		{
			[Token(Token = "0x4002BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			public string _index;

			[Token(Token = "0x4002BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool onlyPlayOnce;

			[Token(Token = "0x4002BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<TutorialMessage> _messages;

			[Token(Token = "0x60030C6")]
			[Address(RVA = "0x147938C", Offset = "0x147938C", VA = "0x147938C")]
			public TutorialSpecialStep(int index, List<TutorialMessage> messages)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200079A")]
		public class TutorialMessage
		{
			[Token(Token = "0x4002BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			public string _key;

			[Token(Token = "0x4002BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public int _index;

			[Token(Token = "0x4002BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[HideInInspector]
			public TutorialMessageType type;

			[Token(Token = "0x4002BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[HideInInspector]
			public List<TutorialMessageLocale> _locales;

			[Token(Token = "0x4002BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string text;

			[Token(Token = "0x4002BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AudioClip audio;

			[Token(Token = "0x60030C7")]
			[Address(RVA = "0x1478F48", Offset = "0x1478F48", VA = "0x1478F48")]
			public TutorialMessage(string key, List<TutorialMessageLocale> locales)
			{
			}

			[Token(Token = "0x60030C8")]
			[Address(RVA = "0x1478F88", Offset = "0x1478F88", VA = "0x1478F88")]
			private void GuessTypeAndIndex()
			{
			}

			[Token(Token = "0x60030C9")]
			[Address(RVA = "0x147924C", Offset = "0x147924C", VA = "0x147924C")]
			public void ExtractAudioAndText(string textLanguageCode, string audioLanguageCode, out string text, out AudioClip audio)
			{
			}

			[Token(Token = "0x60030CA")]
			[Address(RVA = "0x14791E4", Offset = "0x14791E4", VA = "0x14791E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB91CCC", Offset = "0xB91CCC")]
			private void <GuessTypeAndIndex>g__Clear|7_0()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200079B")]
		public class TutorialMessageLocale
		{
			[Token(Token = "0x4002BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			public string _key;

			[Token(Token = "0x4002BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string _text;

			[Token(Token = "0x4002BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioClip _audio;

			[Token(Token = "0x60030CB")]
			[Address(RVA = "0x1479250", Offset = "0x1479250", VA = "0x1479250")]
			public TutorialMessageLocale(string key, string text, AudioClip audio)
			{
			}

			[Token(Token = "0x60030CC")]
			[Address(RVA = "0x1479290", Offset = "0x1479290", VA = "0x1479290")]
			public TutorialMessageLocale(string text, KeyValueAudio audio)
			{
			}

			[Token(Token = "0x60030CD")]
			[Address(RVA = "0x14792E0", Offset = "0x14792E0", VA = "0x14792E0")]
			public TutorialMessageLocale(KeyValueText text, AudioClip audio)
			{
			}

			[Token(Token = "0x60030CE")]
			[Address(RVA = "0x1479330", Offset = "0x1479330", VA = "0x1479330")]
			public TutorialMessageLocale(string key, KeyValueText text, KeyValueAudio audio)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200079C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73304", Offset = "0xB73304")]
		private sealed class <>c
		{
			[Token(Token = "0x4002BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TutorialMessage, bool> <>9__17_0;

			[Token(Token = "0x4002BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<TutorialMessage, bool> <>9__17_1;

			[Token(Token = "0x4002BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<TutorialMessage, bool> <>9__17_2;

			[Token(Token = "0x4002BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<TutorialMessage, bool> <>9__17_3;

			[Token(Token = "0x60030D0")]
			[Address(RVA = "0x1478DF8", Offset = "0x1478DF8", VA = "0x1478DF8")]
			public <>c()
			{
			}

			[Token(Token = "0x60030D1")]
			[Address(RVA = "0x1478E00", Offset = "0x1478E00", VA = "0x1478E00")]
			internal bool <ChangeSelectedLocale>b__17_0(TutorialMessage x)
			{
				return default(bool);
			}

			[Token(Token = "0x60030D2")]
			[Address(RVA = "0x1478E24", Offset = "0x1478E24", VA = "0x1478E24")]
			internal bool <ChangeSelectedLocale>b__17_1(TutorialMessage x)
			{
				return default(bool);
			}

			[Token(Token = "0x60030D3")]
			[Address(RVA = "0x1478E48", Offset = "0x1478E48", VA = "0x1478E48")]
			internal bool <ChangeSelectedLocale>b__17_2(TutorialMessage x)
			{
				return default(bool);
			}

			[Token(Token = "0x60030D4")]
			[Address(RVA = "0x1478E6C", Offset = "0x1478E6C", VA = "0x1478E6C")]
			internal bool <ChangeSelectedLocale>b__17_3(TutorialMessage x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200079D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73314", Offset = "0xB73314")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4002BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string textLanguageCode;

			[Token(Token = "0x4002BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string audioLanguageCode;

			[Token(Token = "0x60030D5")]
			[Address(RVA = "0x1478CCC", Offset = "0x1478CCC", VA = "0x1478CCC")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60030D6")]
			[Address(RVA = "0x1478E90", Offset = "0x1478E90", VA = "0x1478E90")]
			internal bool <ExtractAudioAndTextFromMessage>b__0(TutorialMessageLocale x)
			{
				return default(bool);
			}

			[Token(Token = "0x60030D7")]
			[Address(RVA = "0x1478EEC", Offset = "0x1478EEC", VA = "0x1478EEC")]
			internal bool <ExtractAudioAndTextFromMessage>b__1(TutorialMessageLocale x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C464", Offset = "0xB7C464")]
		public TutorialAudioLocales audioLocales;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialTextLocales textLocales;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C49C", Offset = "0xB7C49C")]
		[AttributeAttribute(Name = "DropdownAttribute", RVA = "0xB7C49C", Offset = "0xB7C49C")]
		[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0xB7C49C", Offset = "0xB7C49C")]
		public string language;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<string> languages;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C530", Offset = "0xB7C530")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB7C530", Offset = "0xB7C530")]
		public List<TutorialSpecialStep> specialSteps;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C590", Offset = "0xB7C590")]
		public List<TutorialStep> steps;

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x1477930", Offset = "0x1477930", VA = "0x1477930")]
		private List<string> GetLanguages()
		{
			return null;
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x14779CC", Offset = "0x14779CC", VA = "0x14779CC")]
		public bool HasSpecialMessages()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x1477A28", Offset = "0x1477A28", VA = "0x1477A28")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xB892F0", Offset = "0xB892F0")]
		private void AutoConfigure()
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x1477C4C", Offset = "0x1477C4C", VA = "0x1477C4C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xB89308", Offset = "0xB89308")]
		public void ProcessFiles()
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x1477C50", Offset = "0x1477C50", VA = "0x1477C50")]
		private static bool KeyFormatIsValid(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x1477CFC", Offset = "0x1477CFC", VA = "0x1477CFC")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xB89320", Offset = "0xB89320")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x1477DC8", Offset = "0x1477DC8", VA = "0x1477DC8")]
		private void ChangeSelectedLocale()
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x14786F8", Offset = "0x14786F8", VA = "0x14786F8")]
		public static void FindLocalizationFiles(string game, string textLanguageCode, string audioLanguageCode, out List<AttentionLab.MiniGames.TutorialStep> tutorialSteps)
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0x1478B38", Offset = "0x1478B38", VA = "0x1478B38")]
		public static void FindLocalizationFiles(string game, string textLanguageCode, string audioLanguageCode, out List<AttentionLab.MiniGames.TutorialSpecialStep> specialSteps)
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x147871C", Offset = "0x147871C", VA = "0x147871C")]
		public static void FindLocalizationFiles(string game, string textLanguageCode, string audioLanguageCode, out List<AttentionLab.MiniGames.TutorialStep> tutorialSteps, out List<AttentionLab.MiniGames.TutorialSpecialStep> tutorialSpecialSteps)
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x1478B64", Offset = "0x1478B64", VA = "0x1478B64")]
		public static void ExtractAudioAndTextFromMessage(TutorialMessage message, string textLanguageCode, string audioLanguageCode, out string text, out AudioClip audio)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x1478CD4", Offset = "0x1478CD4", VA = "0x1478CD4")]
		public TutorialConfig()
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0x1478CDC", Offset = "0x1478CDC", VA = "0x1478CDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89338", Offset = "0xB89338")]
		private bool <ChangeSelectedLocale>b__17_4(TutorialMessageLocale x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0x1478D38", Offset = "0x1478D38", VA = "0x1478D38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89348", Offset = "0xB89348")]
		private bool <ChangeSelectedLocale>b__17_5(TutorialMessageLocale x)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20003E7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB71EEC", Offset = "0xB71EEC")]
	public class TutorialTextLocales : ScriptableObject
	{
		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextAsset csvFile;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<KeyLocalesText> textLocales;

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0x1479534", Offset = "0x1479534", VA = "0x1479534")]
		private int ListOrder(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x1479574", Offset = "0x1479574", VA = "0x1479574")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xB89358", Offset = "0xB89358")]
		public void ProcessFile()
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0x1479578", Offset = "0x1479578", VA = "0x1479578")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xB89370", Offset = "0xB89370")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x1479600", Offset = "0x1479600", VA = "0x1479600")]
		public TutorialTextLocales()
		{
		}
	}
}
namespace AttentionLab.Extensions
{
	[Token(Token = "0x20003E8")]
	public static class CameraExtensions
	{
		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xF0B0E8", Offset = "0xF0B0E8", VA = "0xF0B0E8")]
		public static string Print(this Camera camera)
		{
			return null;
		}
	}
	[Token(Token = "0x20003E9")]
	public static class CollectionExtensions
	{
		[Token(Token = "0x200079E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73324", Offset = "0xB73324")]
		private sealed class <>c__DisplayClass13_0<T>
		{
			[Token(Token = "0x4002BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public System.Random random;

			[Token(Token = "0x60030D8")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x60030D9")]
			internal int <Shuffle>b__0(T x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40017EC")]
		private const string NULL = "NULL";

		[Token(Token = "0x40017ED")]
		private const string EMPTY = "EMPTY";

		[Token(Token = "0x40017EE")]
		private const string LOG = "{0}: {1}";

		[Token(Token = "0x6001D9A")]
		public static string Print<T>(this IList<T> list, bool pretty = false)
		{
			return null;
		}

		[Token(Token = "0x6001D9B")]
		public static string Print<TKey, TElement>(this IDictionary<TKey, TElement> dic, bool pretty = false)
		{
			return null;
		}

		[Token(Token = "0x6001D9C")]
		public static T[] ToArray<T>(this IList<T> list)
		{
			return null;
		}

		[Token(Token = "0x6001D9D")]
		public static List<T> ToList<T>(this T[] array)
		{
			return null;
		}

		[Token(Token = "0x6001D9E")]
		public static int RandomIndex<T>(this T[] array)
		{
			return default(int);
		}

		[Token(Token = "0x6001D9F")]
		public static T RandomElement<T>(this T[] array)
		{
			return (T)null;
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xF0B344", Offset = "0xF0B344", VA = "0xF0B344")]
		public static int RandomIndex(this IList list)
		{
			return default(int);
		}

		[Token(Token = "0x6001DA1")]
		public static T RandomElement<T>(this List<T> list)
		{
			return (T)null;
		}

		[Token(Token = "0x6001DA2")]
		public static bool IsNullOrEmpty<T>(this IList<T> list)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA3")]
		public static bool IsNullOrEmpty<T>(this T[] array)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA4")]
		public static IOrderedEnumerable<T> Shuffle<T>(this IOrderedEnumerable<T> target, System.Random random)
		{
			return null;
		}
	}
	[Token(Token = "0x20003EA")]
	public static class ColorExtensions
	{
		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xF0B408", Offset = "0xF0B408", VA = "0xF0B408")]
		public static Color ToBrightnessVariant(this Color color, float factor)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x20003EB")]
	public static class DateExtensions
	{
	}
	[Token(Token = "0x20003EC")]
	public static class Vector2Extensions
	{
		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xF0B4A4", Offset = "0xF0B4A4", VA = "0xF0B4A4")]
		public static float AngleTo(this Vector2 first, Vector2 second)
		{
			return default(float);
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xF0B544", Offset = "0xF0B544", VA = "0xF0B544")]
		public static Vector3 PointAtDistance(this Vector3 first, Vector3 second, float distance)
		{
			return default(Vector3);
		}
	}
}
namespace AttentionLab.Enums
{
	[Token(Token = "0x20003ED")]
	public enum AccessibilityType
	{
		[Token(Token = "0x40017F0")]
		NotDefined,
		[Token(Token = "0x40017F1")]
		TwoHands,
		[Token(Token = "0x40017F2")]
		Headphones,
		[Token(Token = "0x40017F3")]
		AroundPlayer,
		[Token(Token = "0x40017F4")]
		ColorPerception,
		[Token(Token = "0x40017F5")]
		HighMovementIntensity
	}
	[Token(Token = "0x20003EE")]
	public static class AccessibilityTypeHelper
	{
		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xF097AC", Offset = "0xF097AC", VA = "0xF097AC")]
		public static AccessibilityType ToAccessibilityType(int accesibilityId)
		{
			return default(AccessibilityType);
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xF097B0", Offset = "0xF097B0", VA = "0xF097B0")]
		public static string ToLabel(AccessibilityType accessibilityType)
		{
			return null;
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xF09960", Offset = "0xF09960", VA = "0xF09960")]
		public static string ToServerField(AccessibilityType accessibilityType)
		{
			return null;
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xF09A04", Offset = "0xF09A04", VA = "0xF09A04")]
		public static int ToAccessibilityId(AccessibilityType accessibilityType)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003EF")]
	public enum CategoryType
	{
		[Token(Token = "0x40017F7")]
		NotDefined = 0,
		[Token(Token = "0x40017F8")]
		SpatialOrientation = 1,
		[Token(Token = "0x40017F9")]
		Memory = 4,
		[Token(Token = "0x40017FA")]
		Attention = 8,
		[Token(Token = "0x40017FB")]
		Flexibility = 12,
		[Token(Token = "0x40017FC")]
		ProblemSolving = 15,
		[Token(Token = "0x40017FD")]
		MotorSkills = 18,
		[Token(Token = "0x40017FE")]
		Processing = 22
	}
	[Token(Token = "0x20003F0")]
	public static class CategoryTypeHelper
	{
		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xF09A08", Offset = "0xF09A08", VA = "0xF09A08")]
		public static CategoryType ToCategoryType(int categoryId)
		{
			return default(CategoryType);
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xF09A0C", Offset = "0xF09A0C", VA = "0xF09A0C")]
		public static string ToLabel(CategoryType categoryType)
		{
			return null;
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xF09C64", Offset = "0xF09C64", VA = "0xF09C64")]
		public static string ToLocalizationKey(CategoryType categoryType)
		{
			return null;
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xF09D3C", Offset = "0xF09D3C", VA = "0xF09D3C")]
		public static int ToCategoryId(CategoryType categoryType)
		{
			return default(int);
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xF09D40", Offset = "0xF09D40", VA = "0xF09D40")]
		public static Color ToColor(CategoryType categoryType)
		{
			return default(Color);
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xF09E50", Offset = "0xF09E50", VA = "0xF09E50")]
		public static int ToShaderId(CategoryType categoryType)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003F1")]
	public enum ColorStyleType
	{
		[Token(Token = "0x4001800")]
		NotDefined,
		[Token(Token = "0x4001801")]
		Black,
		[Token(Token = "0x4001802")]
		Gandalf,
		[Token(Token = "0x4001803")]
		White,
		[Token(Token = "0x4001804")]
		Grey,
		[Token(Token = "0x4001805")]
		Black80,
		[Token(Token = "0x4001806")]
		RedError,
		[Token(Token = "0x4001807")]
		GreenAproval,
		[Token(Token = "0x4001808")]
		GradientTest,
		[Token(Token = "0x4001809")]
		GandalfFade,
		[Token(Token = "0x400180A")]
		FaddedBlack,
		[Token(Token = "0x400180B")]
		GraphLinear,
		[Token(Token = "0x400180C")]
		ButtonDisabled,
		[Token(Token = "0x400180D")]
		InputFieldLine,
		[Token(Token = "0x400180E")]
		ButtomRampOne,
		[Token(Token = "0x400180F")]
		ButtomRampTwo,
		[Token(Token = "0x4001810")]
		Container,
		[Token(Token = "0x4001811")]
		BackgroundRampOne,
		[Token(Token = "0x4001812")]
		BackgroundRampTwo,
		[Token(Token = "0x4001813")]
		ProgressBarBackground,
		[Token(Token = "0x4001814")]
		ProgressBarGradient
	}
	[Token(Token = "0x20003F2")]
	public enum ControllerActivationType
	{
		[Token(Token = "0x4001816")]
		Active,
		[Token(Token = "0x4001817")]
		Both,
		[Token(Token = "0x4001818")]
		None
	}
	[Token(Token = "0x20003F3")]
	public enum ControllerMappingType
	{
		[Token(Token = "0x400181A")]
		Combined,
		[Token(Token = "0x400181B")]
		Individual
	}
	[Token(Token = "0x20003F4")]
	public enum ControllerType
	{
		[Token(Token = "0x400181D")]
		Left,
		[Token(Token = "0x400181E")]
		Right
	}
	[Token(Token = "0x20003F5")]
	public static class ControllerTypeHelper
	{
		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xF09EC4", Offset = "0xF09EC4", VA = "0xF09EC4")]
		public static ControllerType GetOpposite(ControllerType controllerType)
		{
			return default(ControllerType);
		}
	}
	[Token(Token = "0x20003F6")]
	public enum DeviceFamily
	{
		[Token(Token = "0x4001820")]
		Unknown,
		[Token(Token = "0x4001821")]
		Oculus,
		[Token(Token = "0x4001822")]
		HTC,
		[Token(Token = "0x4001823")]
		XRSpace,
		[Token(Token = "0x4001824")]
		Steam,
		[Token(Token = "0x4001825")]
		Pico
	}
	[Token(Token = "0x20003F7")]
	public static class DeviceFamilyHelper
	{
		[Token(Token = "0x4001826")]
		private const string _OCULUS = "Oculus";

		[Token(Token = "0x4001827")]
		private const string _HTC = "MockHMD";

		[Token(Token = "0x4001828")]
		private const string _XRSPACE = "XRSpace";

		[Token(Token = "0x4001829")]
		private const string _STEAM = "OpenVR";

		[Token(Token = "0x400182A")]
		private const string _PICO = "Pico";

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] CommonScriptingDefineSymbols;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string[] OculusScriptingDefineSymbols;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string[] HTCScriptingDefineSymbols;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string[] XRSpaceScriptingDefineSymbols;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string[] PicoScriptingDefineSymbols;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly string[] SteamScriptingDefineSymbols;

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xF09ED0", Offset = "0xF09ED0", VA = "0xF09ED0")]
		public static DeviceFamily GetFamily(string name)
		{
			return default(DeviceFamily);
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xF09FC4", Offset = "0xF09FC4", VA = "0xF09FC4")]
		public static string GetName(DeviceFamily deviceFamily)
		{
			return null;
		}
	}
	[Token(Token = "0x20003F8")]
	public enum DeviceModel
	{
		[Token(Token = "0x4001832")]
		Unknown = 1,
		[Token(Token = "0x4001833")]
		Oculus_Quest,
		[Token(Token = "0x4001834")]
		Oculus_Rift,
		[Token(Token = "0x4001835")]
		Oculus_RiftS,
		[Token(Token = "0x4001836")]
		Oculus_Go,
		[Token(Token = "0x4001837")]
		HTC_ViveFocus,
		[Token(Token = "0x4001838")]
		XRSpace_Oasis,
		[Token(Token = "0x4001839")]
		Steam,
		[Token(Token = "0x400183A")]
		Pico_Neo_2,
		[Token(Token = "0x400183B")]
		Pico_Neo_2_Eye,
		[Token(Token = "0x400183C")]
		HTC_ViveCosmos,
		[Token(Token = "0x400183D")]
		HTC_VivePro
	}
	[Token(Token = "0x20003F9")]
	public static class DeviceModelHelper
	{
		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xF0A320", Offset = "0xF0A320", VA = "0xF0A320")]
		public static DeviceModel GetModel(DeviceType type, DeviceFamily family)
		{
			return default(DeviceModel);
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xF0A338", Offset = "0xF0A338", VA = "0xF0A338")]
		private static DeviceModel GetHandheld(DeviceFamily family)
		{
			return default(DeviceModel);
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xF0A4BC", Offset = "0xF0A4BC", VA = "0xF0A4BC")]
		private static DeviceModel GetDefault(DeviceFamily family)
		{
			return default(DeviceModel);
		}
	}
	[Token(Token = "0x20003FA")]
	public enum GameMomentType
	{
		[Token(Token = "0x400183F")]
		React_Portals = 1,
		[Token(Token = "0x4001840")]
		React_ShapeReaction = 2,
		[Token(Token = "0x4001841")]
		HideAndSeek_HeadRotation = 3,
		[Token(Token = "0x4001842")]
		HideAndSeek_RobotSpawned = 4,
		[Token(Token = "0x4001843")]
		HideAndSeek_RevealGunOn = 5,
		[Token(Token = "0x4001844")]
		MemoryWall_SelectionOfTile = 6,
		[Token(Token = "0x4001845")]
		MemoryWall_PatternSpawned = 7,
		[Token(Token = "0x4001846")]
		Balance_PlatesCriteria = 8,
		[Token(Token = "0x4001847")]
		Balance_Ball = 10,
		[Token(Token = "0x4001848")]
		Balance_Validation = 11,
		[Token(Token = "0x4001849")]
		PizzaBuilder_Order = 12,
		[Token(Token = "0x400184A")]
		PizzaBuilder_BurnedPizza = 13,
		[Token(Token = "0x400184B")]
		MagicDeck_CardsSpawned = 14,
		[Token(Token = "0x400184C")]
		MagicDeck_CardSelected = 15,
		[Token(Token = "0x400184D")]
		OddEgg_EggsSpawn = 16,
		[Token(Token = "0x400184E")]
		OddEgg_Egg = 17,
		[Token(Token = "0x400184F")]
		Assembly_GearsSpawn = 18,
		[Token(Token = "0x4001850")]
		Assembly_GearSelected = 19,
		[Token(Token = "0x4001851")]
		WhackAMole_Mole = 20,
		[Token(Token = "0x4001852")]
		Harmonize_NumberSpawn = 21,
		[Token(Token = "0x4001853")]
		Harmonize_KeyHit = 22,
		[Token(Token = "0x4001854")]
		Maestro_PatternSpawned = 23,
		[Token(Token = "0x4001855")]
		Maestro_Gesture = 24
	}
	[Token(Token = "0x20003FB")]
	public enum GameMomentDataLabel
	{
		[Token(Token = "0x4001857")]
		NotDefined,
		[Token(Token = "0x4001858")]
		Hand_None,
		[Token(Token = "0x4001859")]
		Hand_Left,
		[Token(Token = "0x400185A")]
		Hand_Right,
		[Token(Token = "0x400185B")]
		Color_Blue,
		[Token(Token = "0x400185C")]
		Color_Red,
		[Token(Token = "0x400185D")]
		Color_Green,
		[Token(Token = "0x400185E")]
		Color_Yellow,
		[Token(Token = "0x400185F")]
		Color_Pink,
		[Token(Token = "0x4001860")]
		Color_Orange,
		[Token(Token = "0x4001861")]
		Color_Cyan,
		[Token(Token = "0x4001862")]
		Color_Purple,
		[Token(Token = "0x4001863")]
		Color_BabyBlue,
		[Token(Token = "0x4001864")]
		Color_LightOrange,
		[Token(Token = "0x4001865")]
		Color_DarkOrange,
		[Token(Token = "0x4001866")]
		Color_Wine,
		[Token(Token = "0x4001867")]
		Color_White,
		[Token(Token = "0x4001868")]
		Color_Brown,
		[Token(Token = "0x4001869")]
		Lane_Left,
		[Token(Token = "0x400186A")]
		Lane_Right,
		[Token(Token = "0x400186B")]
		Shape_Cube,
		[Token(Token = "0x400186C")]
		Shape_Pyramid,
		[Token(Token = "0x400186D")]
		Shape_Circle,
		[Token(Token = "0x400186E")]
		Shape_Cylinder,
		[Token(Token = "0x400186F")]
		Shape_Prism,
		[Token(Token = "0x4001870")]
		Shape_Plus,
		[Token(Token = "0x4001871")]
		RacketSide_NotDefined,
		[Token(Token = "0x4001872")]
		RacketSide_FrontSide,
		[Token(Token = "0x4001873")]
		RacketSide_BackSide,
		[Token(Token = "0x4001874")]
		RacketSide_Edge,
		[Token(Token = "0x4001875")]
		Distractor_Normal1,
		[Token(Token = "0x4001876")]
		Distractor_Normal2,
		[Token(Token = "0x4001877")]
		Distractor_Normal3,
		[Token(Token = "0x4001878")]
		Distractor_Hard1,
		[Token(Token = "0x4001879")]
		Distractor_Hard2,
		[Token(Token = "0x400187A")]
		Distractor_Hard3,
		[Token(Token = "0x400187B")]
		Dispenser_Left,
		[Token(Token = "0x400187C")]
		Dispenser_Right,
		[Token(Token = "0x400187D")]
		BalanceResult_Successful,
		[Token(Token = "0x400187E")]
		BalanceResult_InterruptedBallFall,
		[Token(Token = "0x400187F")]
		BalanceResult_InterruptedExtraBall,
		[Token(Token = "0x4001880")]
		BalanceResult_InterruptedPlatesIntersected,
		[Token(Token = "0x4001881")]
		BalanceResult_InterruptedTimeout,
		[Token(Token = "0x4001882")]
		Ingredient_TomatoSauce,
		[Token(Token = "0x4001883")]
		Ingredient_CheeseSauce,
		[Token(Token = "0x4001884")]
		Ingredient_Mushroom,
		[Token(Token = "0x4001885")]
		Ingredient_Olive,
		[Token(Token = "0x4001886")]
		Ingredient_Pineapple,
		[Token(Token = "0x4001887")]
		Ingredient_Tomato,
		[Token(Token = "0x4001888")]
		Ingredient_Cucumber,
		[Token(Token = "0x4001889")]
		PizzaResult_ExpiredNoAssociation,
		[Token(Token = "0x400188A")]
		PizzaResult_SuccessDelivered,
		[Token(Token = "0x400188B")]
		PizzaResult_ExpiredAssociated,
		[Token(Token = "0x400188C")]
		PizzaResult_SuccessOvercooked,
		[Token(Token = "0x400188D")]
		PizzaResult_ExpiredSessionEnd,
		[Token(Token = "0x400188E")]
		EggStatus_DeliveredWrong,
		[Token(Token = "0x400188F")]
		EggStatus_DeliveredCorrect,
		[Token(Token = "0x4001890")]
		EggStatus_Returned,
		[Token(Token = "0x4001891")]
		EggStatus_Dropped,
		[Token(Token = "0x4001892")]
		Gesture_Left,
		[Token(Token = "0x4001893")]
		Gesture_Right,
		[Token(Token = "0x4001894")]
		Sound_La,
		[Token(Token = "0x4001895")]
		Sound_Ti,
		[Token(Token = "0x4001896")]
		Sound_Do,
		[Token(Token = "0x4001897")]
		Sound_Re,
		[Token(Token = "0x4001898")]
		Sound_Mi,
		[Token(Token = "0x4001899")]
		Sound_Fa,
		[Token(Token = "0x400189A")]
		Sound_So
	}
	[Token(Token = "0x20003FC")]
	public enum GameType
	{
		[Token(Token = "0x400189C")]
		NotDefined,
		[Token(Token = "0x400189D")]
		React,
		[Token(Token = "0x400189E")]
		HideAndSeek,
		[Token(Token = "0x400189F")]
		MemoryWall,
		[Token(Token = "0x40018A0")]
		Balance,
		[Token(Token = "0x40018A1")]
		Pizza,
		[Token(Token = "0x40018A2")]
		MagicDeck,
		[Token(Token = "0x40018A3")]
		OddEgg,
		[Token(Token = "0x40018A4")]
		Assembly,
		[Token(Token = "0x40018A5")]
		WhackAMole,
		[Token(Token = "0x40018A6")]
		Harmonize,
		[Token(Token = "0x40018A7")]
		Maestro
	}
	[Token(Token = "0x20003FD")]
	public static class GameTypeHelper
	{
		[Token(Token = "0x40018A8")]
		private const string IMAGE_GAME_TYPE_FORMAT = "Images/GameType_{0}";

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<GameType, GameConfig> _GAME_CONFIG;

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xF08320", Offset = "0xF08320", VA = "0xF08320")]
		public static GameType ToGameType(int gameId)
		{
			return default(GameType);
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xEF60CC", Offset = "0xEF60CC", VA = "0xEF60CC")]
		public static string ToLabel(GameType gameType)
		{
			return null;
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xF0A638", Offset = "0xF0A638", VA = "0xF0A638")]
		public static string ToLocalizationKey(GameType gameType)
		{
			return null;
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xF0A724", Offset = "0xF0A724", VA = "0xF0A724")]
		public static Texture2D ToGameImageTexture(GameType gameType)
		{
			return null;
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xF0A818", Offset = "0xF0A818", VA = "0xF0A818")]
		public static Texture2D ToWODTexture(GameType gameType)
		{
			return null;
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xF0A90C", Offset = "0xF0A90C", VA = "0xF0A90C")]
		public static Texture2D ToRecommendedImageTexture(GameType gameType)
		{
			return null;
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xF0AA00", Offset = "0xF0AA00", VA = "0xF0AA00")]
		public static Game ToGameData(GameType gameType)
		{
			return null;
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xEF713C", Offset = "0xEF713C", VA = "0xEF713C")]
		public static int ToGameId(GameType gameType)
		{
			return default(int);
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xF0AB80", Offset = "0xF0AB80", VA = "0xF0AB80")]
		public static GameConfig GetGameConfig(GameType gameType)
		{
			return null;
		}
	}
	[Token(Token = "0x20003FE")]
	public enum InputType
	{
		[Token(Token = "0x40018AB")]
		TriggerIndex,
		[Token(Token = "0x40018AC")]
		TriggerIndexLeft,
		[Token(Token = "0x40018AD")]
		TriggerIndexRight,
		[Token(Token = "0x40018AE")]
		TriggerHand,
		[Token(Token = "0x40018AF")]
		TriggerHandLeft,
		[Token(Token = "0x40018B0")]
		TriggerHandRight,
		[Token(Token = "0x40018B1")]
		ButtonOne,
		[Token(Token = "0x40018B2")]
		ButtonOneLeft,
		[Token(Token = "0x40018B3")]
		ButtonOneRight,
		[Token(Token = "0x40018B4")]
		ButtonTwo,
		[Token(Token = "0x40018B5")]
		ButtonTwoLeft,
		[Token(Token = "0x40018B6")]
		ButtonTwoRight,
		[Token(Token = "0x40018B7")]
		ButtonMenu,
		[Token(Token = "0x40018B8")]
		Input2d,
		[Token(Token = "0x40018B9")]
		Input2dLeft,
		[Token(Token = "0x40018BA")]
		Input2dRight
	}
	[Token(Token = "0x20003FF")]
	public enum SceneStatusType
	{
		[Token(Token = "0x40018BC")]
		Default,
		[Token(Token = "0x40018BD")]
		Game,
		[Token(Token = "0x40018BE")]
		Tutorial
	}
	[Token(Token = "0x2000400")]
	public enum TextStyleType
	{
		[Token(Token = "0x40018C0")]
		NotDefined,
		[Token(Token = "0x40018C1")]
		Header1,
		[Token(Token = "0x40018C2")]
		Header2,
		[Token(Token = "0x40018C3")]
		Header3,
		[Token(Token = "0x40018C4")]
		Body,
		[Token(Token = "0x40018C5")]
		BodyBlockText,
		[Token(Token = "0x40018C6")]
		BodySecondary,
		[Token(Token = "0x40018C7")]
		BodyTextDetails,
		[Token(Token = "0x40018C8")]
		ButtonText,
		[Token(Token = "0x40018C9")]
		ButtonTextSmall,
		[Token(Token = "0x40018CA")]
		Button24,
		[Token(Token = "0x40018CB")]
		Button36,
		[Token(Token = "0x40018CC")]
		Button48,
		[Token(Token = "0x40018CD")]
		FormInput,
		[Token(Token = "0x40018CE")]
		FormSelect,
		[Token(Token = "0x40018CF")]
		FormSelectHover,
		[Token(Token = "0x40018D0")]
		FormGenderCaption,
		[Token(Token = "0x40018D1")]
		FormGenderCaptionSelection,
		[Token(Token = "0x40018D2")]
		FormPassword,
		[Token(Token = "0x40018D3")]
		GraphBig,
		[Token(Token = "0x40018D4")]
		GraphCaption,
		[Token(Token = "0x40018D5")]
		SubtitleSize1,
		[Token(Token = "0x40018D6")]
		SubtitleSize2,
		[Token(Token = "0x40018D7")]
		SubtitleSize3,
		[Token(Token = "0x40018D8")]
		LabelButtonRegular,
		[Token(Token = "0x40018D9")]
		LabelButtonBold,
		[Token(Token = "0x40018DA")]
		SortRegular,
		[Token(Token = "0x40018DB")]
		SortBold,
		[Token(Token = "0x40018DC")]
		ErrorMessage
	}
}
namespace AttentionLab.Audio
{
	[Token(Token = "0x2000401")]
	public static class AudioAssets
	{
		[Token(Token = "0x200079F")]
		public enum UI
		{
			[Token(Token = "0x4002BB5")]
			AnimatedButtonHoverEnter,
			[Token(Token = "0x4002BB6")]
			AnimatedButtonHoverExit,
			[Token(Token = "0x4002BB7")]
			AnimatedButtonClick,
			[Token(Token = "0x4002BB8")]
			AnimatedArrowClick,
			[Token(Token = "0x4002BB9")]
			ArrowHover,
			[Token(Token = "0x4002BBA")]
			ArrowClick,
			[Token(Token = "0x4002BBB")]
			ButtonHover,
			[Token(Token = "0x4002BBC")]
			ButtonClick,
			[Token(Token = "0x4002BBD")]
			InteractiveLabelHover,
			[Token(Token = "0x4002BBE")]
			InteractiveLabelClick,
			[Token(Token = "0x4002BBF")]
			InputFieldHover,
			[Token(Token = "0x4002BC0")]
			InputFieldClick,
			[Token(Token = "0x4002BC1")]
			PasswordShow,
			[Token(Token = "0x4002BC2")]
			PasswordHide,
			[Token(Token = "0x4002BC3")]
			InputError,
			[Token(Token = "0x4002BC4")]
			InputSuccess,
			[Token(Token = "0x4002BC5")]
			ActionConfirmed,
			[Token(Token = "0x4002BC6")]
			Login,
			[Token(Token = "0x4002BC7")]
			Logout,
			[Token(Token = "0x4002BC8")]
			Loading,
			[Token(Token = "0x4002BC9")]
			LabelHover,
			[Token(Token = "0x4002BCA")]
			BarIncreasing,
			[Token(Token = "0x4002BCB")]
			RadialFill,
			[Token(Token = "0x4002BCC")]
			CheckboxHover,
			[Token(Token = "0x4002BCD")]
			CheckboxClick,
			[Token(Token = "0x4002BCE")]
			ClearAll,
			[Token(Token = "0x4002BCF")]
			MenuButtonHoverEnter,
			[Token(Token = "0x4002BD0")]
			MenuButtonClick,
			[Token(Token = "0x4002BD1")]
			TabExpand,
			[Token(Token = "0x4002BD2")]
			TabCollapse,
			[Token(Token = "0x4002BD3")]
			Calibrated,
			[Token(Token = "0x4002BD4")]
			GameButtonHoverEnter,
			[Token(Token = "0x4002BD5")]
			GameButtonHoverExit,
			[Token(Token = "0x4002BD6")]
			GameButtonClick,
			[Token(Token = "0x4002BD7")]
			QuickPlayButtonHover,
			[Token(Token = "0x4002BD8")]
			QuickPlayButtonClick,
			[Token(Token = "0x4002BD9")]
			PlayButtonClick,
			[Token(Token = "0x4002BDA")]
			Countdown,
			[Token(Token = "0x4002BDB")]
			PauseMenuOpen,
			[Token(Token = "0x4002BDC")]
			PauseMenuClose,
			[Token(Token = "0x4002BDD")]
			NextPage,
			[Token(Token = "0x4002BDE")]
			PreviousPage,
			[Token(Token = "0x4002BDF")]
			HandleHover,
			[Token(Token = "0x4002BE0")]
			HandleClick,
			[Token(Token = "0x4002BE1")]
			Scroll,
			[Token(Token = "0x4002BE2")]
			MessageSent,
			[Token(Token = "0x4002BE3")]
			NextWOD
		}

		[Token(Token = "0x20007A0")]
		public enum Keyboard
		{
			[Token(Token = "0x4002BE5")]
			KeyboardKeyHover,
			[Token(Token = "0x4002BE6")]
			KeyboardKeyClick,
			[Token(Token = "0x4002BE7")]
			KeyboardBackspace,
			[Token(Token = "0x4002BE8")]
			KeyboardEnter
		}

		[Token(Token = "0x20007A1")]
		public enum ProgressionHUD
		{
			[Token(Token = "0x4002BEA")]
			ProgressionWarning,
			[Token(Token = "0x4002BEB")]
			ProgressionIncreasing,
			[Token(Token = "0x4002BEC")]
			ProgressionBurst,
			[Token(Token = "0x4002BED")]
			ProgressionLevelUp,
			[Token(Token = "0x4002BEE")]
			ProgressionLevelDown
		}

		[Token(Token = "0x20007A2")]
		public enum HideAndSeek
		{
			[Token(Token = "0x4002BF0")]
			AmbientSound,
			[Token(Token = "0x4002BF1")]
			RobotBeep,
			[Token(Token = "0x4002BF2")]
			RobotBeepContinuous,
			[Token(Token = "0x4002BF3")]
			GunReveal,
			[Token(Token = "0x4002BF4")]
			GunShotMiss,
			[Token(Token = "0x4002BF5")]
			GunShotHit,
			[Token(Token = "0x4002BF6")]
			RobotVanishing,
			[Token(Token = "0x4002BF7")]
			RobotVanishingQuicklyIn,
			[Token(Token = "0x4002BF8")]
			RobotVanishingQuicklyOut,
			[Token(Token = "0x4002BF9")]
			DistractorNormal1,
			[Token(Token = "0x4002BFA")]
			DistractorNormal2,
			[Token(Token = "0x4002BFB")]
			DistractorNormal3,
			[Token(Token = "0x4002BFC")]
			DistractorHard1,
			[Token(Token = "0x4002BFD")]
			DistractorHard2,
			[Token(Token = "0x4002BFE")]
			DistractorHard3,
			[Token(Token = "0x4002BFF")]
			RobotFound,
			[Token(Token = "0x4002C00")]
			RobotMiss,
			[Token(Token = "0x4002C01")]
			RobotFound1,
			[Token(Token = "0x4002C02")]
			RobotFound2,
			[Token(Token = "0x4002C03")]
			RobotFound3,
			[Token(Token = "0x4002C04")]
			RobotFound4
		}

		[Token(Token = "0x20007A3")]
		public enum MemoryWall
		{
			[Token(Token = "0x4002C06")]
			TileHover,
			[Token(Token = "0x4002C07")]
			TileSuccess,
			[Token(Token = "0x4002C08")]
			TileError,
			[Token(Token = "0x4002C09")]
			TileReveal,
			[Token(Token = "0x4002C0A")]
			GridIn,
			[Token(Token = "0x4002C0B")]
			GridAppear,
			[Token(Token = "0x4002C0C")]
			GridDisappear
		}

		[Token(Token = "0x20007A4")]
		public enum React
		{
			[Token(Token = "0x4002C0E")]
			TaskSwitch,
			[Token(Token = "0x4002C0F")]
			PaddleHit,
			[Token(Token = "0x4002C10")]
			PortalSuccess,
			[Token(Token = "0x4002C11")]
			PortalError,
			[Token(Token = "0x4002C12")]
			ObjectSpawn,
			[Token(Token = "0x4002C13")]
			ObjectDestroy,
			[Token(Token = "0x4002C14")]
			ConveyorExtend
		}

		[Token(Token = "0x20007A5")]
		public enum Balance
		{
			[Token(Token = "0x4002C16")]
			DispenserBallSpawn,
			[Token(Token = "0x4002C17")]
			DispenserWarning,
			[Token(Token = "0x4002C18")]
			ValdiatingPlates,
			[Token(Token = "0x4002C19")]
			ValidationSuccess,
			[Token(Token = "0x4002C1A")]
			ValidationInterrupted,
			[Token(Token = "0x4002C1B")]
			BallDestroyed,
			[Token(Token = "0x4002C1C")]
			PlatesColliding,
			[Token(Token = "0x4002C1D")]
			PlatesAir
		}

		[Token(Token = "0x20007A6")]
		public enum Pizza
		{
			[Token(Token = "0x4002C1F")]
			DoughPick,
			[Token(Token = "0x4002C20")]
			DoughSpread,
			[Token(Token = "0x4002C21")]
			IngredientPick,
			[Token(Token = "0x4002C22")]
			IngredientSpread,
			[Token(Token = "0x4002C23")]
			SauceSquished,
			[Token(Token = "0x4002C24")]
			SauceSpread,
			[Token(Token = "0x4002C25")]
			SauceReleased,
			[Token(Token = "0x4002C26")]
			OrderSpawned,
			[Token(Token = "0x4002C27")]
			OrderExpired,
			[Token(Token = "0x4002C28")]
			PizzaEnteredOven,
			[Token(Token = "0x4002C29")]
			PizzaCooking,
			[Token(Token = "0x4002C2A")]
			OvenCookBell,
			[Token(Token = "0x4002C2B")]
			OvenOvercookAlarm,
			[Token(Token = "0x4002C2C")]
			PizzaBurned,
			[Token(Token = "0x4002C2D")]
			OrderCorrect,
			[Token(Token = "0x4002C2E")]
			OrderWrong,
			[Token(Token = "0x4002C2F")]
			EndingSequence
		}

		[Token(Token = "0x20007A7")]
		public enum MagicDeck
		{
			[Token(Token = "0x4002C31")]
			Intro,
			[Token(Token = "0x4002C32")]
			CardTurnShow,
			[Token(Token = "0x4002C33")]
			CardTurnHide,
			[Token(Token = "0x4002C34")]
			CardSpawned,
			[Token(Token = "0x4002C35")]
			CardHover,
			[Token(Token = "0x4002C36")]
			CardPick,
			[Token(Token = "0x4002C37")]
			CardDestroyed,
			[Token(Token = "0x4002C38")]
			CardsCorrect,
			[Token(Token = "0x4002C39")]
			CardsIncorrect,
			[Token(Token = "0x4002C3A")]
			DeviceActivated
		}

		[Token(Token = "0x20007A8")]
		public enum Assembly
		{
			[Token(Token = "0x4002C3C")]
			ConveyorBeltRotating,
			[Token(Token = "0x4002C3D")]
			GearsSpawn,
			[Token(Token = "0x4002C3E")]
			CorrectGear,
			[Token(Token = "0x4002C3F")]
			WrongGear,
			[Token(Token = "0x4002C40")]
			GearConnected,
			[Token(Token = "0x4002C41")]
			DeviceAssembled,
			[Token(Token = "0x4002C42")]
			SmallGearRotating,
			[Token(Token = "0x4002C43")]
			MidGearRotating,
			[Token(Token = "0x4002C44")]
			LargeGearRotating
		}

		[Token(Token = "0x20007A9")]
		public enum OddEgg
		{
			[Token(Token = "0x4002C46")]
			EggSpawn,
			[Token(Token = "0x4002C47")]
			EggHide,
			[Token(Token = "0x4002C48")]
			PickEgg,
			[Token(Token = "0x4002C49")]
			ReleaseEgg,
			[Token(Token = "0x4002C4A")]
			BreakEgg,
			[Token(Token = "0x4002C4B")]
			EggOnPillow,
			[Token(Token = "0x4002C4C")]
			CorrectEgg,
			[Token(Token = "0x4002C4D")]
			WrongEgg
		}

		[Token(Token = "0x20007AA")]
		public enum WhackAMole
		{
			[Token(Token = "0x4002C4F")]
			MoleCorrectHit,
			[Token(Token = "0x4002C50")]
			MoleWrongHit,
			[Token(Token = "0x4002C51")]
			MoleAppear,
			[Token(Token = "0x4002C52")]
			MoleDisappear,
			[Token(Token = "0x4002C53")]
			MoleTilt,
			[Token(Token = "0x4002C54")]
			MachineStart
		}

		[Token(Token = "0x20007AB")]
		public enum Shared
		{

		}

		[Token(Token = "0x20007AC")]
		public enum Harmonize
		{
			[Token(Token = "0x4002C57")]
			A3,
			[Token(Token = "0x4002C58")]
			B3,
			[Token(Token = "0x4002C59")]
			C3,
			[Token(Token = "0x4002C5A")]
			D3,
			[Token(Token = "0x4002C5B")]
			E3,
			[Token(Token = "0x4002C5C")]
			F3,
			[Token(Token = "0x4002C5D")]
			G3,
			[Token(Token = "0x4002C5E")]
			C4,
			[Token(Token = "0x4002C5F")]
			D4,
			[Token(Token = "0x4002C60")]
			E4,
			[Token(Token = "0x4002C61")]
			InstructionIn,
			[Token(Token = "0x4002C62")]
			InstructionOut,
			[Token(Token = "0x4002C63")]
			StreakComplete,
			[Token(Token = "0x4002C64")]
			WrongKey,
			[Token(Token = "0x4002C65")]
			StickOnKey,
			[Token(Token = "0x4002C66")]
			SitckOnStick
		}

		[Token(Token = "0x20007AD")]
		public enum Maestro
		{
			[Token(Token = "0x4002C68")]
			A,
			[Token(Token = "0x4002C69")]
			B,
			[Token(Token = "0x4002C6A")]
			C,
			[Token(Token = "0x4002C6B")]
			D,
			[Token(Token = "0x4002C6C")]
			E,
			[Token(Token = "0x4002C6D")]
			F,
			[Token(Token = "0x4002C6E")]
			G,
			[Token(Token = "0x4002C6F")]
			CorrectShape,
			[Token(Token = "0x4002C70")]
			WrongShape,
			[Token(Token = "0x4002C71")]
			Countdown
		}
	}
	[Token(Token = "0x2000402")]
	public class AudioEntity : MonoBehaviour
	{
		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C5C8", Offset = "0xB7C5C8")]
		[SerializeField]
		private bool _fade;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _fadeInSpeed;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _fadeOutSpeed;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource _audioSource;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _fadeIn;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _maxVolume;

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xEFA218", Offset = "0xEFA218", VA = "0xEFA218")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xEFA280", Offset = "0xEFA280", VA = "0xEFA280")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xEFA518", Offset = "0xEFA518", VA = "0xEFA518")]
		public void Setup(SoundEffect soundReference)
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xEFA784", Offset = "0xEFA784", VA = "0xEFA784")]
		public void Play()
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xEFA450", Offset = "0xEFA450", VA = "0xEFA450")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xEFA864", Offset = "0xEFA864", VA = "0xEFA864")]
		public void SetVolume(float targetVolume)
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xEFA86C", Offset = "0xEFA86C", VA = "0xEFA86C")]
		public AudioEntity()
		{
		}
	}
	[Token(Token = "0x2000403")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C634", Offset = "0xB7C634")]
		[SerializeField]
		private AudioMixerGroup _masterOutputChannel;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MusicPlayer _musicPlayer;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SFXPlayer _sfxPlayer;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C6A0", Offset = "0xB7C6A0")]
		[SerializeField]
		private int _volumeThreshold;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C6EC", Offset = "0xB7C6EC")]
		private static AudioManager <Instance>k__BackingField;

		[Token(Token = "0x170002F8")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0xEFA88C", Offset = "0xEFA88C", VA = "0xEFA88C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89478", Offset = "0xB89478")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0xEFA8DC", Offset = "0xEFA8DC", VA = "0xEFA8DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89488", Offset = "0xB89488")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F9")]
		public AudioMixerGroup MasterOutputChannel
		{
			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0xEFA930", Offset = "0xEFA930", VA = "0xEFA930")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FA")]
		public AudioMixerGroup MusicOutputChannel
		{
			[Token(Token = "0x6001DCD")]
			[Address(RVA = "0xEFA938", Offset = "0xEFA938", VA = "0xEFA938")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FB")]
		public AudioMixerGroup SfxOutputChannel
		{
			[Token(Token = "0x6001DCE")]
			[Address(RVA = "0xEFA764", Offset = "0xEFA764", VA = "0xEFA764")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FC")]
		public float SfxVolume
		{
			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0xEFA958", Offset = "0xEFA958", VA = "0xEFA958")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0xEFAA08", Offset = "0xEFAA08", VA = "0xEFAA08")]
			set
			{
			}
		}

		[Token(Token = "0x170002FD")]
		public float MusicVolume
		{
			[Token(Token = "0x6001DD1")]
			[Address(RVA = "0xEFAABC", Offset = "0xEFAABC", VA = "0xEFAABC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DD2")]
			[Address(RVA = "0xEFAB58", Offset = "0xEFAB58", VA = "0xEFAB58")]
			set
			{
			}
		}

		[Token(Token = "0x170002FE")]
		public float MusicPitch
		{
			[Token(Token = "0x6001DD3")]
			[Address(RVA = "0xEFABF0", Offset = "0xEFABF0", VA = "0xEFABF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0xEFAC7C", Offset = "0xEFAC7C", VA = "0xEFAC7C")]
			set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public Transform SFXPool
		{
			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0xEFAD00", Offset = "0xEFAD00", VA = "0xEFAD00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xEFAD20", Offset = "0xEFAD20", VA = "0xEFAD20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xEFAD74", Offset = "0xEFAD74", VA = "0xEFAD74")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xEF7548", Offset = "0xEF7548", VA = "0xEF7548")]
		public void PlayMusic(string sceneName)
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xEFAED0", Offset = "0xEFAED0", VA = "0xEFAED0")]
		public void ReplayMusic()
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xEFAF14", Offset = "0xEFAF14", VA = "0xEFAF14")]
		public SFXInstance PlaySFX(Enum sound, [Optional] Vector3? soundSourcePosition, [Optional][MetadataOffset(Offset = "0x4D090B")] bool? loop, [Optional][MetadataOffset(Offset = "0x4D090C")] float? fadeInTime, [Optional][MetadataOffset(Offset = "0x4D0910")] float? pitchValue, [Optional][MetadataOffset(Offset = "0x4D0914")] float? pitchVariation)
		{
			return null;
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xEFB274", Offset = "0xEFB274", VA = "0xEFB274")]
		public void PauseMusic(bool pause)
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xEFB2CC", Offset = "0xEFB2CC", VA = "0xEFB2CC")]
		public void PauseAllSFX(bool pause)
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xEFB438", Offset = "0xEFB438", VA = "0xEFB438")]
		public void StopMusic()
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xEFB47C", Offset = "0xEFB47C", VA = "0xEFB47C")]
		public void StopSFX(Enum sound, [Optional][MetadataOffset(Offset = "0x4D0918")] float? fadeOutTime)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xEFB684", Offset = "0xEFB684", VA = "0xEFB684")]
		public void StopAllSFX(Enum sound)
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xEFB844", Offset = "0xEFB844", VA = "0xEFB844")]
		public void StopAllSFX()
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xEFAD78", Offset = "0xEFAD78", VA = "0xEFAD78")]
		public void SetInitialVolumeLevels()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xEFAAA0", Offset = "0xEFAAA0", VA = "0xEFAAA0")]
		private float ConvertToVolumeLevel(float percentage)
		{
			return default(float);
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xEFA9F4", Offset = "0xEFA9F4", VA = "0xEFA9F4")]
		private float ConvertToPercentage(float volumeLevel)
		{
			return default(float);
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xEFB95C", Offset = "0xEFB95C", VA = "0xEFB95C")]
		public void ClearSFXPool()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xEFB9C4", Offset = "0xEFB9C4", VA = "0xEFB9C4")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class SFXInstance : MonoBehaviour
	{
		[Token(Token = "0x20007AE")]
		public delegate void OnStopped(SFXInstance sender);

		[Token(Token = "0x20007AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73334", Offset = "0xB73334")]
		private sealed class <StartFade_Coroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SFXInstance <>4__this;

			[Token(Token = "0x4002C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float targetVolume;

			[Token(Token = "0x4002C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeDuration;

			[Token(Token = "0x4002C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <currentTime>5__2;

			[Token(Token = "0x17000559")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030E1")]
				[Address(RVA = "0xEFCC90", Offset = "0xEFCC90", VA = "0xEFCC90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030E3")]
				[Address(RVA = "0xEFCCFC", Offset = "0xEFCCFC", VA = "0xEFCCFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030DE")]
			[Address(RVA = "0xEFC848", Offset = "0xEFC848", VA = "0xEFC848")]
			[DebuggerHidden]
			public <StartFade_Coroutine>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60030DF")]
			[Address(RVA = "0xEFCB70", Offset = "0xEFCB70", VA = "0xEFCB70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030E0")]
			[Address(RVA = "0xEFCB74", Offset = "0xEFCB74", VA = "0xEFCB74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030E2")]
			[Address(RVA = "0xEFCC98", Offset = "0xEFCC98", VA = "0xEFCC98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C70C", Offset = "0xB7C70C")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ONSPAudioSource _spatializerAudioSource;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isFree;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _isPaused;

		[Token(Token = "0x17000300")]
		public AudioSource AudioSource
		{
			[Token(Token = "0x6001DE8")]
			[Address(RVA = "0xEFC1E4", Offset = "0xEFC1E4", VA = "0xEFC1E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000301")]
		public bool Playing
		{
			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0xEFC1EC", Offset = "0xEFC1EC", VA = "0xEFC1EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000043")]
		public event OnStopped Stopped
		{
			[Token(Token = "0x6001DE6")]
			[Address(RVA = "0xEFC09C", Offset = "0xEFC09C", VA = "0xEFC09C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89498", Offset = "0xB89498")]
			add
			{
			}
			[Token(Token = "0x6001DE7")]
			[Address(RVA = "0xEFC140", Offset = "0xEFC140", VA = "0xEFC140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB894A8", Offset = "0xB894A8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xEFC208", Offset = "0xEFC208", VA = "0xEFC208")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xEFC20C", Offset = "0xEFC20C", VA = "0xEFC20C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xEFC61C", Offset = "0xEFC61C", VA = "0xEFC61C")]
		public void EnableSpatialization(bool enabled)
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xEFC698", Offset = "0xEFC698", VA = "0xEFC698")]
		public void Play()
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xEFC6DC", Offset = "0xEFC6DC", VA = "0xEFC6DC")]
		public void FadeIn(float fadeInTime)
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xEFC7C4", Offset = "0xEFC7C4", VA = "0xEFC7C4")]
		public void FadeOut(float fadeOutTime)
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xEFC73C", Offset = "0xEFC73C", VA = "0xEFC73C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB894B8", Offset = "0xB894B8")]
		private IEnumerator StartFade_Coroutine(float fadeDuration, float targetVolume)
		{
			return null;
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xEFC874", Offset = "0xEFC874", VA = "0xEFC874")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xEFC8BC", Offset = "0xEFC8BC", VA = "0xEFC8BC")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xEFC8D8", Offset = "0xEFC8D8", VA = "0xEFC8D8")]
		public void ResetData()
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xEFC9D0", Offset = "0xEFC9D0", VA = "0xEFC9D0")]
		internal void SetupData(Vector3 sourcePosition, string sFXName, AudioClip audioClip, bool inLoop, bool spatialized, float pitch)
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xEFCB68", Offset = "0xEFCB68", VA = "0xEFCB68")]
		public SFXInstance()
		{
		}
	}
	[Token(Token = "0x2000405")]
	public class SFXPlayer : MonoBehaviour
	{
		[Token(Token = "0x20007B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73344", Offset = "0xB73344")]
		private sealed class <InitPool>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SFXPlayer <>4__this;

			[Token(Token = "0x1700055B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030E7")]
				[Address(RVA = "0xEFE204", Offset = "0xEFE204", VA = "0xEFE204", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030E9")]
				[Address(RVA = "0xEFE270", Offset = "0xEFE270", VA = "0xEFE270", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030E4")]
			[Address(RVA = "0xEFD904", Offset = "0xEFD904", VA = "0xEFD904")]
			[DebuggerHidden]
			public <InitPool>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60030E5")]
			[Address(RVA = "0xEFDE4C", Offset = "0xEFDE4C", VA = "0xEFDE4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030E6")]
			[Address(RVA = "0xEFDE50", Offset = "0xEFDE50", VA = "0xEFDE50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030E8")]
			[Address(RVA = "0xEFE20C", Offset = "0xEFE20C", VA = "0xEFE20C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73354", Offset = "0xB73354")]
		private sealed class <ClearPool_Coroutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SFXPlayer <>4__this;

			[Token(Token = "0x1700055D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030ED")]
				[Address(RVA = "0xEFDDD8", Offset = "0xEFDDD8", VA = "0xEFDDD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030EF")]
				[Address(RVA = "0xEFDE44", Offset = "0xEFDE44", VA = "0xEFDE44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030EA")]
			[Address(RVA = "0xEFD930", Offset = "0xEFD930", VA = "0xEFD930")]
			[DebuggerHidden]
			public <ClearPool_Coroutine>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x60030EB")]
			[Address(RVA = "0xEFDB50", Offset = "0xEFDB50", VA = "0xEFDB50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030EC")]
			[Address(RVA = "0xEFDB54", Offset = "0xEFDB54", VA = "0xEFDB54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030EE")]
			[Address(RVA = "0xEFDDE0", Offset = "0xEFDDE0", VA = "0xEFDDE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C768", Offset = "0xB7C768")]
		[SerializeField]
		private AudioMixerGroup _outputChannel;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _poolParentTransform;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SFXInstance _SFXPrefab;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C7D4", Offset = "0xB7C7D4")]
		[SerializeField]
		private int _soundPoolLimit;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SFXCollection[] _collections;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C830", Offset = "0xB7C830")]
		[SerializeField]
		private float _gain;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _minRange;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _maxRange;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, AudioClip> _loadedAudioClips;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<SFXInstance> _freeSoundObjects;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<SFXInstance> _busySoundObjects;

		[Token(Token = "0x17000302")]
		public AudioMixerGroup OutputChannel
		{
			[Token(Token = "0x6001DF6")]
			[Address(RVA = "0xEFCD44", Offset = "0xEFCD44", VA = "0xEFCD44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000303")]
		public Transform PoolParent
		{
			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0xEFCD4C", Offset = "0xEFCD4C", VA = "0xEFCD4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xEFCD54", Offset = "0xEFCD54", VA = "0xEFCD54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xEFB998", Offset = "0xEFB998", VA = "0xEFB998")]
		public void ClearPool()
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xEFCE68", Offset = "0xEFCE68", VA = "0xEFCE68")]
		private void SFXInstance_Stopped(SFXInstance sender)
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xEFAFFC", Offset = "0xEFAFFC", VA = "0xEFAFFC")]
		public SFXInstance Play(Enum sound, bool inLoop, Vector3? soundSourcePosition, float? fadeInTime, float? pitchValue, float? pitchVariation)
		{
			return null;
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xEFB2E8", Offset = "0xEFB2E8", VA = "0xEFB2E8")]
		public void PauseAllInstances(bool pause)
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xEFB494", Offset = "0xEFB494", VA = "0xEFB494")]
		public void Stop(Enum sound, [Optional][MetadataOffset(Offset = "0x4D091C")] float? fadeOutTime)
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xEFB69C", Offset = "0xEFB69C", VA = "0xEFB69C")]
		public void StopAll(Enum sound)
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xEFB860", Offset = "0xEFB860", VA = "0xEFB860")]
		public void StopAll()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xEFCF44", Offset = "0xEFCF44", VA = "0xEFCF44")]
		private float ComputePitch(float pitchValue, float pitchVariation)
		{
			return default(float);
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xEFCF7C", Offset = "0xEFCF7C", VA = "0xEFCF7C")]
		private string ParseSoundName(Enum sound)
		{
			return null;
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xEFD33C", Offset = "0xEFD33C", VA = "0xEFD33C")]
		private AudioClip GetAudioClip(Enum sound)
		{
			return null;
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xEFCD80", Offset = "0xEFCD80", VA = "0xEFCD80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8951C", Offset = "0xB8951C")]
		private IEnumerator InitPool()
		{
			return null;
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xEFCDF4", Offset = "0xEFCDF4", VA = "0xEFCDF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB89580", Offset = "0xB89580")]
		private IEnumerator ClearPool_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xEFCE6C", Offset = "0xEFCE6C", VA = "0xEFCE6C")]
		public void PushSoundToPool(SFXInstance sfx)
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xEFD078", Offset = "0xEFD078", VA = "0xEFD078")]
		public SFXInstance PullSoundFromPool()
		{
			return null;
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xEFD95C", Offset = "0xEFD95C", VA = "0xEFD95C")]
		private SFXInstance CreateSFXInstance()
		{
			return null;
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xEFDA7C", Offset = "0xEFDA7C", VA = "0xEFDA7C")]
		public SFXPlayer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000406")]
	public class SoundEffect : MonoBehaviour
	{
		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public new Enum name;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip clip;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool loop;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool fade;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fadeInSpeed;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fadeOutSpeed;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool spatialize;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB7C89C", Offset = "0xB7C89C")]
		public float gain;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB7C8B4", Offset = "0xB7C8B4")]
		public float spatialBlend;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float minRange;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float maxRange;

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xEFE278", Offset = "0xEFE278", VA = "0xEFE278")]
		public SoundEffect()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public class MusicPlayer : MonoBehaviour
	{
		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C8CC", Offset = "0xB7C8CC")]
		[SerializeField]
		private AudioMixerGroup _outputChannel;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SceneMusicSource _currentSource;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SceneMusicSource _nextSource;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C938", Offset = "0xB7C938")]
		[SerializeField]
		private float _fadeDuration;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SFXCollection[] _collections;

		[Token(Token = "0x17000304")]
		public AudioMixerGroup OutputChannel
		{
			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0xEFB9D4", Offset = "0xEFB9D4", VA = "0xEFB9D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		public float Volume
		{
			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0xEFB9DC", Offset = "0xEFB9DC", VA = "0xEFB9DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0xEFBA5C", Offset = "0xEFBA5C", VA = "0xEFBA5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000306")]
		public float Pitch
		{
			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0xEFBAD4", Offset = "0xEFBAD4", VA = "0xEFBAD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0xEFBB54", Offset = "0xEFBB54", VA = "0xEFBB54")]
			set
			{
			}
		}

		[Token(Token = "0x17000307")]
		public AudioSource AudioSource
		{
			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0xEFBBCC", Offset = "0xEFBBCC", VA = "0xEFBBCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xEFBBEC", Offset = "0xEFBBEC", VA = "0xEFBBEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xEFAE00", Offset = "0xEFAE00", VA = "0xEFAE00")]
		public void Play(string musicName)
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xEFB290", Offset = "0xEFB290", VA = "0xEFB290")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xEFAEE8", Offset = "0xEFAEE8", VA = "0xEFAEE8")]
		public void Replay()
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xEFB450", Offset = "0xEFB450", VA = "0xEFB450")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xEFBC54", Offset = "0xEFBC54", VA = "0xEFBC54")]
		private AudioClip GetAudioClip(string musicName)
		{
			return null;
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xEFC03C", Offset = "0xEFC03C", VA = "0xEFC03C")]
		public MusicPlayer()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xEFC044", Offset = "0xEFC044", VA = "0xEFC044")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB895E4", Offset = "0xB895E4")]
		private void <Play>b__16_0(SceneMusicSource source)
		{
		}
	}
	[Token(Token = "0x2000408")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB71F80", Offset = "0xB71F80")]
	public class SFXCollection : ScriptableObject
	{
		[Token(Token = "0x20007B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73364", Offset = "0xB73364")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x60030F0")]
			[Address(RVA = "0xEFC050", Offset = "0xEFC050", VA = "0xEFC050")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60030F1")]
			[Address(RVA = "0xEFC060", Offset = "0xEFC060", VA = "0xEFC060")]
			internal bool <GetClip>b__0(AudioClip x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7C994", Offset = "0xB7C994")]
		[SerializeField]
		private AudioClip[] _clips;

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xEFBF54", Offset = "0xEFBF54", VA = "0xEFBF54")]
		public AudioClip GetClip(string name)
		{
			return null;
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xEFC058", Offset = "0xEFC058", VA = "0xEFC058")]
		public SFXCollection()
		{
		}
	}
}
namespace AttentionLab.MiniGames
{
	[Token(Token = "0x2000409")]
	public class Baton : MonoBehaviour
	{
		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Baton Instance;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pointA;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform pointB;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator materializeAnimation;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool rightHand;

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x1383F64", Offset = "0x1383F64", VA = "0x1383F64")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0x1383FB8", Offset = "0x1383FB8", VA = "0x1383FB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x1383FBC", Offset = "0x1383FBC", VA = "0x1383FBC")]
		private void ManageMaterializeFX()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x13840B4", Offset = "0x13840B4", VA = "0x13840B4")]
		public Baton()
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class GenericHandManager : MonoBehaviour
	{
		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ControllerType _controller;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _flexA;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _flexB;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _flex;

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x13A5B84", Offset = "0x13A5B84", VA = "0x13A5B84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x13A5CC8", Offset = "0x13A5CC8", VA = "0x13A5CC8")]
		public GenericHandManager()
		{
		}
	}
	[Token(Token = "0x200040B")]
	public class Grabbable : MonoBehaviour
	{
		[Token(Token = "0x20007B3")]
		public delegate void OnBeginGrab();

		[Token(Token = "0x20007B4")]
		public delegate void OnEndGrab();

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected bool _allowOffhandGrab;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		protected bool _snapPosition;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		protected bool _snapOrientation;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _snapOffset;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Collider[] _grabPoints;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool _grabbedKinematic;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Collider _grabbedCollider;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Grabber _grabbedBy;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public OnBeginGrab BeginGrab;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OnEndGrab EndGrab;

		[Token(Token = "0x17000308")]
		public bool allowOffhandGrab
		{
			[Token(Token = "0x6001E20")]
			[Address(RVA = "0x13A60A8", Offset = "0x13A60A8", VA = "0x13A60A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000309")]
		public bool isGrabbed
		{
			[Token(Token = "0x6001E21")]
			[Address(RVA = "0x13A60B0", Offset = "0x13A60B0", VA = "0x13A60B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700030A")]
		public bool snapPosition
		{
			[Token(Token = "0x6001E22")]
			[Address(RVA = "0x13A6120", Offset = "0x13A6120", VA = "0x13A6120")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700030B")]
		public bool snapOrientation
		{
			[Token(Token = "0x6001E23")]
			[Address(RVA = "0x13A6128", Offset = "0x13A6128", VA = "0x13A6128")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700030C")]
		public Transform snapOffset
		{
			[Token(Token = "0x6001E24")]
			[Address(RVA = "0x13A6130", Offset = "0x13A6130", VA = "0x13A6130")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030D")]
		public Grabber grabbedBy
		{
			[Token(Token = "0x6001E25")]
			[Address(RVA = "0x13A6138", Offset = "0x13A6138", VA = "0x13A6138")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030E")]
		public Transform grabbedTransform
		{
			[Token(Token = "0x6001E26")]
			[Address(RVA = "0x13A6140", Offset = "0x13A6140", VA = "0x13A6140")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030F")]
		public Rigidbody grabbedRigidbody
		{
			[Token(Token = "0x6001E27")]
			[Address(RVA = "0x13A615C", Offset = "0x13A615C", VA = "0x13A615C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000310")]
		public Collider[] grabPoints
		{
			[Token(Token = "0x6001E28")]
			[Address(RVA = "0x13A6178", Offset = "0x13A6178", VA = "0x13A6178")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x13A6180", Offset = "0x13A6180", VA = "0x13A6180", Slot = "4")]
		public virtual void GrabBegin(Grabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x13A643C", Offset = "0x13A643C", VA = "0x13A643C", Slot = "5")]
		public virtual void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x13A6758", Offset = "0x13A6758", VA = "0x13A6758")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0x13A68A8", Offset = "0x13A68A8", VA = "0x13A68A8", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x13A6914", Offset = "0x13A6914", VA = "0x13A6914")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x13A6A70", Offset = "0x13A6A70", VA = "0x13A6A70")]
		public void SetKinematic(bool value)
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x13A6A7C", Offset = "0x13A6A7C", VA = "0x13A6A7C")]
		public Grabbable()
		{
		}
	}
	[Token(Token = "0x200040C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB71FD4", Offset = "0xB71FD4")]
	public class Grabber : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007B5")]
		public struct Pose
		{
			[Token(Token = "0x4002C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4002C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion orientation;

			[Token(Token = "0x1700055F")]
			public static Pose identity
			{
				[Token(Token = "0x60030FA")]
				[Address(RVA = "0x13A869C", Offset = "0x13A869C", VA = "0x13A869C")]
				get
				{
					return default(Pose);
				}
			}

			[Token(Token = "0x60030FB")]
			[Address(RVA = "0xC3DAEC", Offset = "0xC3DAEC", VA = "0xC3DAEC", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x60030FC")]
			[Address(RVA = "0xC3DAF4", Offset = "0xC3DAF4", VA = "0xC3DAF4", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x60030FD")]
			[Address(RVA = "0x13A8808", Offset = "0x13A8808", VA = "0x13A8808")]
			public static bool operator ==(Pose x, Pose y)
			{
				return default(bool);
			}

			[Token(Token = "0x60030FE")]
			[Address(RVA = "0x13A8978", Offset = "0x13A8978", VA = "0x13A8978")]
			public static bool operator !=(Pose x, Pose y)
			{
				return default(bool);
			}

			[Token(Token = "0x60030FF")]
			[Address(RVA = "0x13A8124", Offset = "0x13A8124", VA = "0x13A8124")]
			public static Pose operator *(Pose lhs, Pose rhs)
			{
				return default(Pose);
			}

			[Token(Token = "0x6003100")]
			[Address(RVA = "0xC3DB30", Offset = "0xC3DB30", VA = "0xC3DB30")]
			public Pose Inverse()
			{
				return default(Pose);
			}

			[Token(Token = "0x6003101")]
			[Address(RVA = "0xC3DB38", Offset = "0xC3DB38", VA = "0xC3DB38")]
			public Pose flipZ()
			{
				return default(Pose);
			}
		}

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float grabBegin;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float grabEnd;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected bool _parentHeldObject;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Transform _gripTransform;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Collider[] _grabVolumes;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected ControllerType _controller;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected bool _grabVolumeEnabled;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 _lastPos;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Quaternion _lastRot;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Quaternion _anchorOffsetRotation;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Vector3 _anchorOffsetPosition;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected float _prevFlex;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Grabbable _grabbedObj;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Vector3 _grabbedObjectPosOff;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected Quaternion _grabbedObjectRotOff;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Dictionary<Grabbable, int> _grabCandidates;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected bool operatingWithoutOVRCameraRig;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float _flex;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float _pinch;

		[Token(Token = "0x17000311")]
		public Grabbable grabbedObject
		{
			[Token(Token = "0x6001E30")]
			[Address(RVA = "0x13A6B2C", Offset = "0x13A6B2C", VA = "0x13A6B2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x13A69A8", Offset = "0x13A69A8", VA = "0x13A69A8")]
		public void ForceRelease(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x13A6D8C", Offset = "0x13A6D8C", VA = "0x13A6D8C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x13A6DE8", Offset = "0x13A6DE8", VA = "0x13A6DE8", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x13A6FF4", Offset = "0x13A6FF4", VA = "0x13A6FF4", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0x13A7048", Offset = "0x13A7048", VA = "0x13A7048")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0x13A704C", Offset = "0x13A704C", VA = "0x13A704C")]
		private void OnUpdatedAnchors()
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x13A7348", Offset = "0x13A7348", VA = "0x13A7348")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0x13A73D0", Offset = "0x13A73D0", VA = "0x13A73D0")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x13A74F0", Offset = "0x13A74F0", VA = "0x13A74F0")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x13A7308", Offset = "0x13A7308", VA = "0x13A7308")]
		protected void CheckForGrabOrRelease(float prevFlex)
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x13A7624", Offset = "0x13A7624", VA = "0x13A7624", Slot = "7")]
		protected virtual void GrabBegin()
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x13A7DE0", Offset = "0x13A7DE0", VA = "0x13A7DE0", Slot = "8")]
		protected virtual void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x13A6B34", Offset = "0x13A6B34", VA = "0x13A6B34")]
		protected void GrabEnd()
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0x13A808C", Offset = "0x13A808C", VA = "0x13A808C")]
		public static Pose ToPose(Transform t, bool isLocal = false)
		{
			return default(Pose);
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0x13A83B0", Offset = "0x13A83B0", VA = "0x13A83B0")]
		protected void GrabbableRelease(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0x13A8410", Offset = "0x13A8410", VA = "0x13A8410", Slot = "9")]
		protected virtual void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0x13A8500", Offset = "0x13A8500", VA = "0x13A8500", Slot = "10")]
		protected virtual void OffhandGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x13A8604", Offset = "0x13A8604", VA = "0x13A8604")]
		public Grabber()
		{
		}
	}
	[Token(Token = "0x200040D")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73374", Offset = "0xB73374")]
		private sealed class <>c
		{
			[Token(Token = "0x4002C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__30_0;

			[Token(Token = "0x6003103")]
			[Address(RVA = "0x13AD888", Offset = "0x13AD888", VA = "0x13AD888")]
			public <>c()
			{
			}

			[Token(Token = "0x6003104")]
			[Address(RVA = "0x13AD890", Offset = "0x13AD890", VA = "0x13AD890")]
			internal bool <Start>b__30_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001930")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001931")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001932")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001933")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001934")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001935")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001936")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001937")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001938")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001939")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x400193A")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ControllerType _controller;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose _defaultGrabPose;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] _colliders;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _collisionEnabled;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Grabber _grabber;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> _showAfterInputFocusAcquired;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _animLayerIndexThumb;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _animLayerIndexPoint;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _animParamIndexFlex;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _animParamIndexPose;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _isPointing;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _isGivingThumbsUp;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _pointBlend;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _thumbsUpBlend;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool _restoreOnInputAcquired;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _flex;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _pinch;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x13ACF08", Offset = "0x13ACF08", VA = "0x13ACF08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x13ACF98", Offset = "0x13ACF98", VA = "0x13ACF98")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x13AD324", Offset = "0x13AD324", VA = "0x13AD324")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x13AD69C", Offset = "0x13AD69C", VA = "0x13AD69C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x13AD434", Offset = "0x13AD434", VA = "0x13AD434")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x13AD4D4", Offset = "0x13AD4D4", VA = "0x13AD4D4")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x13AD178", Offset = "0x13AD178", VA = "0x13AD178")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x13AD80C", Offset = "0x13AD80C", VA = "0x13AD80C")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public enum HandPoseId
	{
		[Token(Token = "0x400194F")]
		Default,
		[Token(Token = "0x4001950")]
		Generic,
		[Token(Token = "0x4001951")]
		PingPongBall,
		[Token(Token = "0x4001952")]
		Controller
	}
	[Token(Token = "0x200040F")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000312")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0x13AD8C0", Offset = "0x13AD8C0", VA = "0x13AD8C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000313")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0x13AD8C8", Offset = "0x13AD8C8", VA = "0x13AD8C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000314")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0x13AD8D0", Offset = "0x13AD8D0", VA = "0x13AD8D0")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x13AD8D8", Offset = "0x13AD8D8", VA = "0x13AD8D8")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000410")]
	public class HideHandOnGrab : MonoBehaviour
	{
		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SkinnedMeshRenderer _handMesh;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Grabber _grabber;

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xFDA6D4", Offset = "0xFDA6D4", VA = "0xFDA6D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xFDA764", Offset = "0xFDA764", VA = "0xFDA764")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xFDA84C", Offset = "0xFDA84C", VA = "0xFDA84C")]
		public HideHandOnGrab()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class PlayStick : MonoBehaviour
	{
		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7CB20", Offset = "0xB7CB20")]
		[SerializeField]
		private ControllerType _controller;

		[Token(Token = "0x17000315")]
		public ControllerType ControllerType
		{
			[Token(Token = "0x6001E52")]
			[Address(RVA = "0xF7C714", Offset = "0xF7C714", VA = "0xF7C714")]
			get
			{
				return default(ControllerType);
			}
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xF7C71C", Offset = "0xF7C71C", VA = "0xF7C71C")]
		public float GetSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xF7C7D8", Offset = "0xF7C7D8", VA = "0xF7C7D8")]
		public PlayStick()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class Pointer : MonoBehaviour
	{
		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7CB6C", Offset = "0xB7CB6C")]
		[SerializeField]
		private HandControllerAttachment _attachment;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PointerCrosshair _crosshair;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PointerLine _lineA;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _lineB;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CBE8", Offset = "0xB7CBE8")]
		private bool <InteractionIsEnabled>k__BackingField;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private RaycastHit _hit;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PointerHitable _currentHitable;

		[Token(Token = "0x17000316")]
		public bool InteractionIsEnabled
		{
			[Token(Token = "0x6001E55")]
			[Address(RVA = "0xF7C7E0", Offset = "0xF7C7E0", VA = "0xF7C7E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB895F4", Offset = "0xB895F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E56")]
			[Address(RVA = "0xF7C7E8", Offset = "0xF7C7E8", VA = "0xF7C7E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89604", Offset = "0xB89604")]
			set
			{
			}
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xF7C7F4", Offset = "0xF7C7F4", VA = "0xF7C7F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xF7C8B4", Offset = "0xF7C8B4", VA = "0xF7C8B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xF7CD44", Offset = "0xF7CD44", VA = "0xF7CD44")]
		private void InputSystem_IndividualTriggerPressed(InputSystem sender, InputType inputType)
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xF7CE5C", Offset = "0xF7CE5C", VA = "0xF7CE5C")]
		private void PlayerHandObject_InteractionStatusChanged(HandControllerAttachment sender, bool enabled)
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xF7CC24", Offset = "0xF7CC24", VA = "0xF7CC24")]
		private void UpdateHitable(PointerHitable hitable)
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xF7CE6C", Offset = "0xF7CE6C", VA = "0xF7CE6C")]
		public Pointer()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class RevealProjectile : MonoBehaviour
	{
		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _timeToLive;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _speed;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _direction;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CC18", Offset = "0xB7CC18")]
		private Scanner <ScannerGun>k__BackingField;

		[Token(Token = "0x17000317")]
		public Vector3 Direction
		{
			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0x139D584", Offset = "0x139D584", VA = "0x139D584")]
			set
			{
			}
		}

		[Token(Token = "0x17000318")]
		public Scanner ScannerGun
		{
			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0x139D590", Offset = "0x139D590", VA = "0x139D590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89614", Offset = "0xB89614")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0x139D598", Offset = "0x139D598", VA = "0x139D598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89624", Offset = "0xB89624")]
			set
			{
			}
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x139D5A0", Offset = "0x139D5A0", VA = "0x139D5A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x139D5F8", Offset = "0x139D5F8", VA = "0x139D5F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x139D754", Offset = "0x139D754", VA = "0x139D754")]
		private void Destroy()
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x139D8A4", Offset = "0x139D8A4", VA = "0x139D8A4")]
		public RevealProjectile()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class Scanner : MonoBehaviour
	{
		[Token(Token = "0x20007B7")]
		public delegate void OnShot(Scanner sender, bool hit, int multiplier);

		[Token(Token = "0x20007B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73384", Offset = "0xB73384")]
		private sealed class <EnableShooting>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool enable;

			[Token(Token = "0x4002C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Scanner <>4__this;

			[Token(Token = "0x17000560")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600310C")]
				[Address(RVA = "0x139EB7C", Offset = "0x139EB7C", VA = "0x139EB7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000561")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600310E")]
				[Address(RVA = "0x139EBE8", Offset = "0x139EBE8", VA = "0x139EBE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003109")]
			[Address(RVA = "0x139E438", Offset = "0x139E438", VA = "0x139E438")]
			[DebuggerHidden]
			public <EnableShooting>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x600310A")]
			[Address(RVA = "0x139EA88", Offset = "0x139EA88", VA = "0x139EA88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600310B")]
			[Address(RVA = "0x139EA8C", Offset = "0x139EA8C", VA = "0x139EA8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600310D")]
			[Address(RVA = "0x139EB84", Offset = "0x139EB84", VA = "0x139EB84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73394", Offset = "0xB73394")]
		private sealed class <ShowShotDisplay>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Scanner <>4__this;

			[Token(Token = "0x17000562")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003112")]
				[Address(RVA = "0x139EECC", Offset = "0x139EECC", VA = "0x139EECC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000563")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003114")]
				[Address(RVA = "0x139EF38", Offset = "0x139EF38", VA = "0x139EF38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600310F")]
			[Address(RVA = "0x139E9E4", Offset = "0x139E9E4", VA = "0x139E9E4")]
			[DebuggerHidden]
			public <ShowShotDisplay>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6003110")]
			[Address(RVA = "0x139EBF0", Offset = "0x139EBF0", VA = "0x139EBF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003111")]
			[Address(RVA = "0x139EBF4", Offset = "0x139EBF4", VA = "0x139EBF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003113")]
			[Address(RVA = "0x139EED4", Offset = "0x139EED4", VA = "0x139EED4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7CC28", Offset = "0xB7CC28")]
		[SerializeField]
		private MeshRenderer _mesh;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator _gunAnimator;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator _shotAnimator;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RevealProjectile _hitProjectilePrefab;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RevealProjectile _missProjectilePrefab;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform _projectileRoot;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7CCD4", Offset = "0xB7CCD4")]
		[SerializeField]
		private float _initialSize;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private int _multipliersCount;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _activationDelay;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float _powerBarsSpeed;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float _hitFeedbackDelay;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float _hitFeedbackDuration;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public OnShot Shot;

		[Token(Token = "0x4001972")]
		private const string TRIGGER_SHOT_HIT = "hit";

		[Token(Token = "0x4001973")]
		private const string TRIGGER_SHOT_MISS = "miss";

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RaycastHit _raycastHit;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool _enabled;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _currentSize;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private List<string> gameTagsToFind;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameController _gameController;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool shootingIsAllowed;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool hit;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool revealedObject;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		private bool _shooting;

		[Token(Token = "0x400197D")]
		private const string POWER_BARS_MAT_PROPERTY = "_PowerBars";

		[Token(Token = "0x400197E")]
		private const string DISPLAY_OPTIONS_MAT_PROPERTY = "_DISPLAYOPTIONS";

		[Token(Token = "0x400197F")]
		private const string HIT_MAT_KEYWORD = "_DISPLAYOPTIONS_HIT";

		[Token(Token = "0x4001980")]
		private const string MISS_MAT_KEYWORD = "_DISPLAYOPTIONS_MISS";

		[Token(Token = "0x4001981")]
		private const string NOTHING_MAT_KEYWORD = "_DISPLAYOPTIONS_NOTHING";

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<GameObject> _revealProjectiles;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private HandControllerAttachment _handController;

		[Token(Token = "0x17000319")]
		private Material Material
		{
			[Token(Token = "0x6001E64")]
			[Address(RVA = "0x139D8B8", Offset = "0x139D8B8", VA = "0x139D8B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x139D8D4", Offset = "0x139D8D4", VA = "0x139D8D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x139D954", Offset = "0x139D954", VA = "0x139D954")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x139DB54", Offset = "0x139DB54", VA = "0x139DB54")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x139DD10", Offset = "0x139DD10", VA = "0x139DD10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x139DD84", Offset = "0x139DD84", VA = "0x139DD84")]
		private void InputSystem_TriggerPressed(InputSystem sender, InputType inputType, ControllerType controllerType)
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x139E3B0", Offset = "0x139E3B0", VA = "0x139E3B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB89634", Offset = "0xB89634")]
		public IEnumerator EnableShooting(bool enable)
		{
			return null;
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x139DDB8", Offset = "0x139DDB8", VA = "0x139DDB8")]
		public void Shoot()
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x139DC9C", Offset = "0x139DC9C", VA = "0x139DC9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB89698", Offset = "0xB89698")]
		private IEnumerator ShowShotDisplay()
		{
			return null;
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x139EA10", Offset = "0x139EA10", VA = "0x139EA10")]
		public void Scale(float scale)
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x139EA20", Offset = "0x139EA20", VA = "0x139EA20")]
		public void SetPointerDistance(float distance)
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x139E464", Offset = "0x139E464", VA = "0x139E464")]
		public void ShootProjectile(bool hit)
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x139D7E4", Offset = "0x139D7E4", VA = "0x139D7E4")]
		public void ProjectileDestroyed(RevealProjectile projectile)
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x139EA74", Offset = "0x139EA74", VA = "0x139EA74")]
		public Scanner()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public class GameMomentData
	{
		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int key;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB7CD80", Offset = "0xB7CD80")]
		public DateTime happened_at;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB7CE10", Offset = "0xB7CE10")]
		public string values;

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x1389154", Offset = "0x1389154", VA = "0x1389154")]
		public GameMomentData(int momentKey, DateTime happenedAt, string momentValues)
		{
		}
	}
	[Token(Token = "0x2000416")]
	public abstract class GameMoment
	{
		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _wasHappenedAtUpdated;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CE74", Offset = "0xB7CE74")]
		private int <Id>k__BackingField;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CE84", Offset = "0xB7CE84")]
		private DateTime <HappenedAtTimeStamp>k__BackingField;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CE94", Offset = "0xB7CE94")]
		private string <Values>k__BackingField;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CEA4", Offset = "0xB7CEA4")]
		private GameMomentData <Data>k__BackingField;

		[Token(Token = "0x1700031A")]
		public int Id
		{
			[Token(Token = "0x6001E73")]
			[Address(RVA = "0x1389074", Offset = "0x1389074", VA = "0x1389074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB896FC", Offset = "0xB896FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E74")]
			[Address(RVA = "0x138907C", Offset = "0x138907C", VA = "0x138907C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8970C", Offset = "0xB8970C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700031B")]
		public DateTime HappenedAtTimeStamp
		{
			[Token(Token = "0x6001E75")]
			[Address(RVA = "0x1389084", Offset = "0x1389084", VA = "0x1389084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8971C", Offset = "0xB8971C")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6001E76")]
			[Address(RVA = "0x138908C", Offset = "0x138908C", VA = "0x138908C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8972C", Offset = "0xB8972C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700031C")]
		public string Values
		{
			[Token(Token = "0x6001E77")]
			[Address(RVA = "0x1389094", Offset = "0x1389094", VA = "0x1389094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8973C", Offset = "0xB8973C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E78")]
			[Address(RVA = "0x138909C", Offset = "0x138909C", VA = "0x138909C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8974C", Offset = "0xB8974C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700031D")]
		public GameMomentData Data
		{
			[Token(Token = "0x6001E79")]
			[Address(RVA = "0x13890A4", Offset = "0x13890A4", VA = "0x13890A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8975C", Offset = "0xB8975C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0x13890AC", Offset = "0x13890AC", VA = "0x13890AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8976C", Offset = "0xB8976C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x137E224", Offset = "0x137E224", VA = "0x137E224")]
		public void UpdateHappenedAtTimeStamp()
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x13890B4", Offset = "0x13890B4", VA = "0x13890B4")]
		public void RegisterHappenedAtTimeStampIfMissing()
		{
		}

		[Token(Token = "0x6001E7D")]
		public abstract void SetValues();

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x13890C4", Offset = "0x13890C4", VA = "0x13890C4")]
		public void SetData()
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0x1372E6C", Offset = "0x1372E6C", VA = "0x1372E6C")]
		protected GameMoment()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000417")]
	public class LevelConfig
	{
		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeoutPenaltyInSeconds;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float timeoutDisplayTimeInSeconds;

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xFDA854", Offset = "0xFDA854", VA = "0xFDA854")]
		public LevelConfig()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class LineArrow : MonoBehaviour
	{
		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7CEB4", Offset = "0xB7CEB4")]
		[SerializeField]
		private GameObject _root;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _startPoint;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _endPoint;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CF20", Offset = "0xB7CF20")]
		private Transform <Owner>k__BackingField;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _startPointAnchor;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _endPointAnchor;

		[Token(Token = "0x1700031E")]
		public Transform Owner
		{
			[Token(Token = "0x6001E81")]
			[Address(RVA = "0xFDA85C", Offset = "0xFDA85C", VA = "0xFDA85C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8977C", Offset = "0xB8977C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E82")]
			[Address(RVA = "0xFDA864", Offset = "0xFDA864", VA = "0xFDA864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8978C", Offset = "0xB8978C")]
			set
			{
			}
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xFDA86C", Offset = "0xFDA86C", VA = "0xFDA86C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xFDA8F4", Offset = "0xFDA8F4", VA = "0xFDA8F4")]
		public void SetAnchors(Transform startAnchor, Transform endAnchor)
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xFDA934", Offset = "0xFDA934", VA = "0xFDA934")]
		public void SetStartAnchor(Transform startAnchor)
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xFDA95C", Offset = "0xFDA95C", VA = "0xFDA95C")]
		public void SetEndAnchor(Transform endAnchor)
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xFDAA84", Offset = "0xFDAA84", VA = "0xFDAA84")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xFDA870", Offset = "0xFDA870", VA = "0xFDA870")]
		private void UpdatePoints()
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xFDA984", Offset = "0xFDA984", VA = "0xFDA984")]
		private void UpdateVisibility()
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xFDAA90", Offset = "0xFDAA90", VA = "0xFDAA90")]
		public LineArrow()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class LineArrowsPool : MonoBehaviour
	{
		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7CF30", Offset = "0xB7CF30")]
		[SerializeField]
		private LineArrow _prefab;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CF7C", Offset = "0xB7CF7C")]
		private Dictionary<Transform, LineArrow> <ActiveInstances>k__BackingField;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<LineArrow> _instancesPool;

		[Token(Token = "0x1700031F")]
		public Dictionary<Transform, LineArrow> ActiveInstances
		{
			[Token(Token = "0x6001E8B")]
			[Address(RVA = "0xFDAA98", Offset = "0xFDAA98", VA = "0xFDAA98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8979C", Offset = "0xB8979C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E8C")]
			[Address(RVA = "0xFDAAA0", Offset = "0xFDAAA0", VA = "0xFDAAA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB897AC", Offset = "0xB897AC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xFDAAA8", Offset = "0xFDAAA8", VA = "0xFDAAA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xFDAB38", Offset = "0xFDAB38", VA = "0xFDAB38")]
		public LineArrow GetInstance(Transform owner)
		{
			return null;
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xFDAC28", Offset = "0xFDAC28", VA = "0xFDAC28")]
		public void ChangeInstanceOwner(LineArrow instance, Transform newOwner)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xFDAD18", Offset = "0xFDAD18", VA = "0xFDAD18")]
		public void ReleaseInstance(Transform owner)
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xFDAE00", Offset = "0xFDAE00", VA = "0xFDAE00")]
		public bool HasOwner(Transform owner)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xFDAE74", Offset = "0xFDAE74", VA = "0xFDAE74")]
		public void ChangeActiveEndTargets(Transform target)
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xFDAFC0", Offset = "0xFDAFC0", VA = "0xFDAFC0")]
		public void ClearActiveInstances()
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xFDB144", Offset = "0xFDB144", VA = "0xFDB144")]
		public LineArrowsPool()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class CollisionManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007BA")]
		public struct IgnoredCollision
		{
			[Token(Token = "0x4002C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string tag;

			[Token(Token = "0x4002C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string otherTag;
		}

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameTags _gameTags;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[ReorderableList]
		[SerializeField]
		private IgnoredCollision[] _collisionsToIgnore;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CollisionManager Instance;

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x13840BC", Offset = "0x13840BC", VA = "0x13840BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x1384110", Offset = "0x1384110", VA = "0x1384110")]
		public bool IgnoreCollision(Collider collider, Collider otherCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x13842C0", Offset = "0x13842C0", VA = "0x13842C0")]
		public CollisionManager()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class GameController : MonoBehaviour
	{
		[Token(Token = "0x20007BB")]
		public delegate IEnumerator GameEndSequence();

		[Token(Token = "0x20007BC")]
		public delegate void OnLoaded(GameController sender);

		[Token(Token = "0x20007BD")]
		public delegate void OnWillUnload(GameController sender);

		[Token(Token = "0x20007BE")]
		public delegate void OnGameWillStart(GameController sender);

		[Token(Token = "0x20007BF")]
		public delegate void OnGameStart(GameController sender, int startLevel, bool isFirstTime);

		[Token(Token = "0x20007C0")]
		public delegate void OnGameStop(GameController sender);

		[Token(Token = "0x20007C1")]
		public delegate void OnGameEnd(GameController sender);

		[Token(Token = "0x20007C2")]
		public delegate void OnTutorialStart(GameController sender);

		[Token(Token = "0x20007C3")]
		public delegate void OnTutorialStop(GameController sender);

		[Token(Token = "0x20007C4")]
		public delegate void OnPaused(GameController sender, bool paused, SceneStatusType statusType);

		[Token(Token = "0x20007C5")]
		public delegate void OnGameExit(GameController sender, SceneDataFromGame gameEndData);

		[Token(Token = "0x20007C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB733A4", Offset = "0xB733A4")]
		private sealed class <>c__DisplayClass65_0
		{
			[Token(Token = "0x4002C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ControllerActivationType currentActivationType;

			[Token(Token = "0x4002C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameController <>4__this;

			[Token(Token = "0x6003141")]
			[Address(RVA = "0x1386820", Offset = "0x1386820", VA = "0x1386820")]
			public <>c__DisplayClass65_0()
			{
			}

			[Token(Token = "0x6003142")]
			[Address(RVA = "0x138811C", Offset = "0x138811C", VA = "0x138811C")]
			internal void <FirstSessionDialogCheck>b__0()
			{
			}
		}

		[Token(Token = "0x20007C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB733B4", Offset = "0xB733B4")]
		private sealed class <GameEnded_Coroutine>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameController <>4__this;

			[Token(Token = "0x4002C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameEndSequence endSequence;

			[Token(Token = "0x17000564")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003146")]
				[Address(RVA = "0x1388448", Offset = "0x1388448", VA = "0x1388448", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000565")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003148")]
				[Address(RVA = "0x13884B4", Offset = "0x13884B4", VA = "0x13884B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003143")]
			[Address(RVA = "0x1388040", Offset = "0x1388040", VA = "0x1388040")]
			[DebuggerHidden]
			public <GameEnded_Coroutine>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x6003144")]
			[Address(RVA = "0x1388180", Offset = "0x1388180", VA = "0x1388180", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003145")]
			[Address(RVA = "0x1388184", Offset = "0x1388184", VA = "0x1388184", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003147")]
			[Address(RVA = "0x1388450", Offset = "0x1388450", VA = "0x1388450", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7CFD4", Offset = "0xB7CFD4")]
		[SerializeField]
		private GameHandControllers _controllers;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Countdown _countdown;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7D030", Offset = "0xB7D030")]
		[SerializeField]
		private float _initialCountdownDelay;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7D07C", Offset = "0xB7D07C")]
		[SerializeField]
		private GameTags _gameTags;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public OnLoaded Loaded;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public OnWillUnload WillUnload;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public OnGameWillStart GameWillStart;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OnGameStart GameStart;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OnGameStop GameStop;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OnGameEnd GameEnd;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public OnTutorialStart TutorialStart;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public OnTutorialStop TutorialStop;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OnPaused GamePaused;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OnPaused TutorialPaused;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public OnGameExit GameExit;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D0C8", Offset = "0xB7D0C8")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D0D8", Offset = "0xB7D0D8")]
		private bool <Started>k__BackingField;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D0E8", Offset = "0xB7D0E8")]
		private SceneStatusType <SessionGameStatus>k__BackingField;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D0F8", Offset = "0xB7D0F8")]
		private bool <IsPauseAllowed>k__BackingField;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private SceneDataToGame _gameInputData;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private SceneDataFromGame _sessionGameData;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ProgressionManager _progressionManager;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GameConfig _gameConfig;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameEndSequence _gameEndSequence;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int _sessionTime;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private MomentDataManager _momentsManager;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D108", Offset = "0xB7D108")]
		private static GameController <Instance>k__BackingField;

		[Token(Token = "0x17000320")]
		public GameHandControllers HandObjects
		{
			[Token(Token = "0x6001E98")]
			[Address(RVA = "0x13849AC", Offset = "0x13849AC", VA = "0x13849AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000321")]
		public Countdown Countdown
		{
			[Token(Token = "0x6001E99")]
			[Address(RVA = "0x13849B4", Offset = "0x13849B4", VA = "0x13849B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000322")]
		public bool IsPaused
		{
			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0x13849BC", Offset = "0x13849BC", VA = "0x13849BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB897BC", Offset = "0xB897BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0x13849C4", Offset = "0x13849C4", VA = "0x13849C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB897CC", Offset = "0xB897CC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000323")]
		public bool Started
		{
			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0x13849D0", Offset = "0x13849D0", VA = "0x13849D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB897DC", Offset = "0xB897DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0x13849D8", Offset = "0x13849D8", VA = "0x13849D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB897EC", Offset = "0xB897EC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public SceneStatusType SessionGameStatus
		{
			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0x13849E4", Offset = "0x13849E4", VA = "0x13849E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB897FC", Offset = "0xB897FC")]
			get
			{
				return default(SceneStatusType);
			}
			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0x13849EC", Offset = "0x13849EC", VA = "0x13849EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8980C", Offset = "0xB8980C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000325")]
		public bool IsPauseAllowed
		{
			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0x13849F4", Offset = "0x13849F4", VA = "0x13849F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8981C", Offset = "0xB8981C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0x13849FC", Offset = "0x13849FC", VA = "0x13849FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8982C", Offset = "0xB8982C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000326")]
		public static GameController Instance
		{
			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0x1384A08", Offset = "0x1384A08", VA = "0x1384A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8983C", Offset = "0xB8983C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0x1384A58", Offset = "0x1384A58", VA = "0x1384A58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8984C", Offset = "0xB8984C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x1384AAC", Offset = "0x1384AAC", VA = "0x1384AAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x1384B04", Offset = "0x1384B04", VA = "0x1384B04")]
		private void MaybeAddGenericTagManager()
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x1384BB8", Offset = "0x1384BB8", VA = "0x1384BB8")]
		public void StartGame(SceneDataToGame dataInput)
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x13853F8", Offset = "0x13853F8", VA = "0x13853F8")]
		public void Pause(bool paused, bool andResume = false)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x1385A18", Offset = "0x1385A18", VA = "0x1385A18")]
		public void Resume(ResumeActionType actionType)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x1385D0C", Offset = "0x1385D0C", VA = "0x1385D0C")]
		public void EndGame()
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x1385B20", Offset = "0x1385B20", VA = "0x1385B20")]
		private void Restart()
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x1385C98", Offset = "0x1385C98", VA = "0x1385C98")]
		private void Exit()
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0x1385148", Offset = "0x1385148", VA = "0x1385148")]
		private void FirstSessionDialogCheck()
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x1386320", Offset = "0x1386320", VA = "0x1386320")]
		private void StartGame()
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x1386BDC", Offset = "0x1386BDC", VA = "0x1386BDC")]
		private void InvokeStartGame()
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x1385BA8", Offset = "0x1385BA8", VA = "0x1385BA8")]
		private void StopGame()
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x1385314", Offset = "0x1385314", VA = "0x1385314")]
		private void StartTutorial()
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x1385C7C", Offset = "0x1385C7C", VA = "0x1385C7C")]
		private void StopTutorial()
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x137A1B0", Offset = "0x137A1B0", VA = "0x137A1B0")]
		public void LogMoment(GameMoment moment)
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x1387B3C", Offset = "0x1387B3C", VA = "0x1387B3C")]
		private void GameEnded()
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x1387FC0", Offset = "0x1387FC0", VA = "0x1387FC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8985C", Offset = "0xB8985C")]
		private IEnumerator GameEnded_Coroutine(GameEndSequence endSequence)
		{
			return null;
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x1383BD8", Offset = "0x1383BD8", VA = "0x1383BD8")]
		public void TutorialEnded()
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0x1377820", Offset = "0x1377820", VA = "0x1377820")]
		public void StartGameSession(GameConfig config, ProgressionManager progressionManager, [Optional] GameEndSequence sequence)
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x138806C", Offset = "0x138806C", VA = "0x138806C")]
		public GameController()
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x1388074", Offset = "0x1388074", VA = "0x1388074")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB898C0", Offset = "0xB898C0")]
		private void <StartGame>b__66_0(Waiter sender)
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x1388118", Offset = "0x1388118", VA = "0x1388118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB898D0", Offset = "0xB898D0")]
		private void <StartGame>b__66_1(Countdown countdown)
		{
		}
	}
	[Token(Token = "0x200041C")]
	public class GameHandControllers : MonoBehaviour
	{
		[Token(Token = "0x20007C8")]
		public enum PlacementType
		{
			[Token(Token = "0x4002C93")]
			Active,
			[Token(Token = "0x4002C94")]
			Left,
			[Token(Token = "0x4002C95")]
			Right
		}

		[Token(Token = "0x20007C9")]
		public delegate void OnHandControllersAttached(HandControllerAttachment rightHandController, HandControllerAttachment leftHandController, HandControllerAttachment activeHandController);

		[Serializable]
		[Token(Token = "0x20007CA")]
		public class _HandController
		{
			[Token(Token = "0x4002C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HandControllerAttachment _prefab;

			[Token(Token = "0x4002C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlacementType _placement;

			[Token(Token = "0x17000566")]
			public HandControllerAttachment Prefab
			{
				[Token(Token = "0x600314D")]
				[Address(RVA = "0x138905C", Offset = "0x138905C", VA = "0x138905C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000567")]
			public PlacementType Placement
			{
				[Token(Token = "0x600314E")]
				[Address(RVA = "0x1389064", Offset = "0x1389064", VA = "0x1389064")]
				get
				{
					return default(PlacementType);
				}
			}

			[Token(Token = "0x600314F")]
			[Address(RVA = "0x138906C", Offset = "0x138906C", VA = "0x138906C")]
			public _HandController()
			{
			}
		}

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OnHandControllersAttached HandControllersAttached;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7D118", Offset = "0xB7D118")]
		[SerializeField]
		private _HandController[] _prefabs;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D164", Offset = "0xB7D164")]
		private List<HandControllerAttachment> <Attachments>k__BackingField;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D174", Offset = "0xB7D174")]
		private bool <IsEnabled>k__BackingField;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HandControllerManager _controllerManager;

		[Token(Token = "0x17000327")]
		public List<HandControllerAttachment> Attachments
		{
			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0x1388840", Offset = "0x1388840", VA = "0x1388840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB898E0", Offset = "0xB898E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0x1388848", Offset = "0x1388848", VA = "0x1388848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB898F0", Offset = "0xB898F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000328")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x1388850", Offset = "0x1388850", VA = "0x1388850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89900", Offset = "0xB89900")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EBD")]
			[Address(RVA = "0x1388858", Offset = "0x1388858", VA = "0x1388858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89910", Offset = "0xB89910")]
			private set
			{
			}
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x1388864", Offset = "0x1388864", VA = "0x1388864")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x1384CFC", Offset = "0x1384CFC", VA = "0x1384CFC")]
		public void Attach(HandControllerManager controllerManager)
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x1385DB8", Offset = "0x1385DB8", VA = "0x1385DB8")]
		public void Remove()
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x1385538", Offset = "0x1385538", VA = "0x1385538")]
		public void Enable(bool show, bool forceEnabledPaused = false)
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x1388B38", Offset = "0x1388B38", VA = "0x1388B38")]
		public void EnableInteraction(bool enable)
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x13888CC", Offset = "0x13888CC", VA = "0x13888CC")]
		private void Attach()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x1389008", Offset = "0x1389008", VA = "0x1389008")]
		public GameHandControllers()
		{
		}
	}
	[Token(Token = "0x200041D")]
	public class GameSessionController : MonoBehaviour
	{
		[Token(Token = "0x20007CB")]
		public delegate void OnSessionStarted(GameSessionController sender, Game game, Session session);

		[Token(Token = "0x20007CC")]
		public delegate void OnSessionStartFailed(GameSessionController sender, string error);

		[Token(Token = "0x20007CD")]
		public delegate void OnSessionWillEnd(GameSessionController sender, Game game, SessionData session, SceneDataFromGame data);

		[Token(Token = "0x20007CE")]
		public delegate void OnSessionEnded(GameSessionController sender, Game game, SessionData sessionData, SceneDataFromGame data);

		[Token(Token = "0x20007CF")]
		public delegate void OnSessionEndFailed(GameSessionController sender, SceneDataFromGame data, string error);

		[Token(Token = "0x20007D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB733C4", Offset = "0xB733C4")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4002C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameSessionController <>4__this;

			[Token(Token = "0x4002C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Game remoteGameData;

			[Token(Token = "0x4002C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int startLevel;

			[Token(Token = "0x4002C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int timesPlayed;

			[Token(Token = "0x6003164")]
			[Address(RVA = "0x138951C", Offset = "0x138951C", VA = "0x138951C")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6003165")]
			[Address(RVA = "0x138A4F8", Offset = "0x138A4F8", VA = "0x138A4F8")]
			internal void <RequestTutorialStatus>b__0(AttentionLab.REST.Request request)
			{
			}
		}

		[Token(Token = "0x20007D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB733D4", Offset = "0xB733D4")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4002C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameSessionController <>4__this;

			[Token(Token = "0x4002C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SceneDataToGame data;

			[Token(Token = "0x6003166")]
			[Address(RVA = "0x1389668", Offset = "0x1389668", VA = "0x1389668")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6003167")]
			[Address(RVA = "0x138A990", Offset = "0x138A990", VA = "0x138A990")]
			internal void <RequestCreateGameSession>b__0(AttentionLab.REST.Request request, SessionData session)
			{
			}
		}

		[Token(Token = "0x20007D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB733E4", Offset = "0xB733E4")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4002C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameSessionController <>4__this;

			[Token(Token = "0x4002C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SceneDataFromGame data;

			[Token(Token = "0x6003168")]
			[Address(RVA = "0x1389CBC", Offset = "0x1389CBC", VA = "0x1389CBC")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6003169")]
			[Address(RVA = "0x138AC20", Offset = "0x138AC20", VA = "0x138AC20")]
			internal void <SetTutorialCompleted>b__0(AttentionLab.REST.Request request)
			{
			}
		}

		[Token(Token = "0x20007D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB733F4", Offset = "0xB733F4")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x4002CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameSessionController <>4__this;

			[Token(Token = "0x4002CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SceneDataFromGame data;

			[Token(Token = "0x4002CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool skipSceneLoading;

			[Token(Token = "0x600316A")]
			[Address(RVA = "0x1389F2C", Offset = "0x1389F2C", VA = "0x1389F2C")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x600316B")]
			[Address(RVA = "0x138B0B4", Offset = "0x138B0B4", VA = "0x138B0B4")]
			internal void <RequestAbandonGame>b__0(AttentionLab.REST.Request request, SessionData sessionData)
			{
			}
		}

		[Token(Token = "0x20007D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73404", Offset = "0xB73404")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x4002CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameSessionController <>4__this;

			[Token(Token = "0x4002CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SceneDataFromGame data;

			[Token(Token = "0x4002CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool skipSceneLoading;

			[Token(Token = "0x600316C")]
			[Address(RVA = "0x1389F34", Offset = "0x1389F34", VA = "0x1389F34")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x600316D")]
			[Address(RVA = "0x138B158", Offset = "0x138B158", VA = "0x138B158")]
			internal void <RequestEndGame>b__0(AttentionLab.REST.Request request, SessionData sessionData)
			{
			}
		}

		[Token(Token = "0x40019BA")]
		private const float UnloadingGameDelay = 3f;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OnSessionStarted SessionStarted;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnSessionStartFailed SessionStartFailed;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnSessionWillEnd SessionWillEnd;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OnSessionEnded SessionEnded;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public OnSessionEndFailed SessionEndFailed;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Game _selectedGame;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SceneDataToGame _gameInputData;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SceneDataFromGame _gameSessionData;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameController _gameController;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _forcePlayTutorial;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D184", Offset = "0xB7D184")]
		private SessionData <CurrentSession>k__BackingField;

		[Token(Token = "0x17000329")]
		public bool HasActiveSession
		{
			[Token(Token = "0x6001EC5")]
			[Address(RVA = "0x1389194", Offset = "0x1389194", VA = "0x1389194")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032A")]
		public SceneStatusType SessionStatus
		{
			[Token(Token = "0x6001EC6")]
			[Address(RVA = "0x13891A4", Offset = "0x13891A4", VA = "0x13891A4")]
			get
			{
				return default(SceneStatusType);
			}
		}

		[Token(Token = "0x1700032B")]
		public AttentionLab.Enums.GameType CurrentGameType
		{
			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0x13891C4", Offset = "0x13891C4", VA = "0x13891C4")]
			get
			{
				return default(AttentionLab.Enums.GameType);
			}
		}

		[Token(Token = "0x1700032C")]
		public bool IsPauseAllowed
		{
			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0x13891E0", Offset = "0x13891E0", VA = "0x13891E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032D")]
		public SessionData CurrentSession
		{
			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0x138927C", Offset = "0x138927C", VA = "0x138927C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89920", Offset = "0xB89920")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0x1389284", Offset = "0x1389284", VA = "0x1389284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89930", Offset = "0xB89930")]
			private set
			{
			}
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x138928C", Offset = "0x138928C", VA = "0x138928C")]
		public void PlayGame(Game gameData, int startLevel, bool forceTutorial, Wod wod, int timesPlayed = 1)
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x13893F4", Offset = "0x13893F4", VA = "0x13893F4")]
		private void RequestTutorialStatus(Game remoteGameData, int startLevel, int timesPlayed)
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x13892C8", Offset = "0x13892C8", VA = "0x13892C8")]
		private void PrepareGameData(Game remoteGameData, int startLevel, bool tutorialFinished, int timesPlayed)
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x1389524", Offset = "0x1389524", VA = "0x1389524")]
		private void RequestCreateGameSession(SceneDataToGame data, Game game)
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x1389670", Offset = "0x1389670", VA = "0x1389670")]
		private void SceneLoader_LoadEnd(SceneLoader sender, string currentSceneName, string lastSceneName)
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x138984C", Offset = "0x138984C", VA = "0x138984C")]
		private void StartGame(GameController gameController)
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x1389984", Offset = "0x1389984", VA = "0x1389984")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x138999C", Offset = "0x138999C", VA = "0x138999C")]
		public void Resume(ResumeActionType actionType)
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x13899AC", Offset = "0x13899AC", VA = "0x13899AC")]
		private void GameController_GameExit(GameController sender, SceneDataFromGame gameEndData)
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x13899B8", Offset = "0x13899B8", VA = "0x13899B8")]
		public void ProcessGameEndData(SceneDataFromGame data, bool skipSceneLoading = false)
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x1389A50", Offset = "0x1389A50", VA = "0x1389A50")]
		private void SetTutorialCompleted(SceneDataFromGame data, int gameId)
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0x1389B60", Offset = "0x1389B60", VA = "0x1389B60")]
		private void EndGame(SceneDataFromGame data, bool skipSceneLoading = false)
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x1389CC4", Offset = "0x1389CC4", VA = "0x1389CC4")]
		private void RequestAbandonGame(SceneDataFromGame data, bool skipSceneLoading = false)
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x1389DF8", Offset = "0x1389DF8", VA = "0x1389DF8")]
		private void RequestEndGame(SceneDataFromGame data, bool skipSceneLoading = false)
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x1389F3C", Offset = "0x1389F3C", VA = "0x1389F3C")]
		private void ExitGame(SceneDataFromGame data, SessionData sessionData, bool skipSceneLoading = false)
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x1389930", Offset = "0x1389930", VA = "0x1389930")]
		private void EndSession(SceneDataFromGame data, SessionData sessionData)
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0x138A4F0", Offset = "0x138A4F0", VA = "0x138A4F0")]
		public GameSessionController()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public class GenericTagManager : MonoBehaviour
	{
		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Dictionary<string, string> _tagDictionary;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D1A4", Offset = "0xB7D1A4")]
		private static GenericTagManager <Instance>k__BackingField;

		[Token(Token = "0x1700032E")]
		public static GenericTagManager Instance
		{
			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0x13A5CD0", Offset = "0x13A5CD0", VA = "0x13A5CD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89940", Offset = "0xB89940")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0x13A5D20", Offset = "0x13A5D20", VA = "0x13A5D20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89950", Offset = "0xB89950")]
			private set
			{
			}
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x13A5D74", Offset = "0x13A5D74", VA = "0x13A5D74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x13A5DC8", Offset = "0x13A5DC8", VA = "0x13A5DC8")]
		public void SetTags(GameTags gameTags)
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x13A5EDC", Offset = "0x13A5EDC", VA = "0x13A5EDC")]
		public string ConvertToGenericTag(string tag)
		{
			return null;
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x13A5F44", Offset = "0x13A5F44", VA = "0x13A5F44")]
		public bool CompareTag(Collider collider, string tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x13A6018", Offset = "0x13A6018", VA = "0x13A6018")]
		public bool CompareTag(GameObject gameObject, string tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x13A60A0", Offset = "0x13A60A0", VA = "0x13A60A0")]
		public GenericTagManager()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class ProgressionManager : MonoBehaviour
	{
		[Token(Token = "0x20007D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73414", Offset = "0xB73414")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x4002CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int newLevel;

			[Token(Token = "0x4002CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ProgressionManager <>4__this;

			[Token(Token = "0x600316E")]
			[Address(RVA = "0xF7D328", Offset = "0xF7D328", VA = "0xF7D328")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x600316F")]
			[Address(RVA = "0xF7DF64", Offset = "0xF7DF64", VA = "0xF7DF64")]
			internal void <SetLowerLevel>b__0()
			{
			}
		}

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HUDMover _hudMover;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D1B4", Offset = "0xB7D1B4")]
		private int <StartLevel>k__BackingField;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D1C4", Offset = "0xB7D1C4")]
		private int <CurrentLevel>k__BackingField;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D1D4", Offset = "0xB7D1D4")]
		private int <CurrentPoints>k__BackingField;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected int _pointToLevelUp;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _fractionPointsToKeep;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _sessionTimer;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _sessionTotalTime;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool _showHurryUpMessage;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _hurryUpTimer;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _timeoutDisplayTime;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _hasActiveTimer;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected GameConfig _gameConfig;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static int _allowedMistakesBeforeLevelDown;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected int _mistakeCount;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GUIStyle guiStyle;

		[Token(Token = "0x1700032F")]
		private HUDMover HudMover
		{
			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0xF7CE74", Offset = "0xF7CE74", VA = "0xF7CE74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0xF7CF28", Offset = "0xF7CF28", VA = "0xF7CF28")]
			set
			{
			}
		}

		[Token(Token = "0x17000330")]
		public int StartLevel
		{
			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0xF7CF30", Offset = "0xF7CF30", VA = "0xF7CF30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89960", Offset = "0xB89960")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0xF7CF38", Offset = "0xF7CF38", VA = "0xF7CF38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89970", Offset = "0xB89970")]
			private set
			{
			}
		}

		[Token(Token = "0x17000331")]
		public int CurrentLevel
		{
			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0xF7CF40", Offset = "0xF7CF40", VA = "0xF7CF40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89980", Offset = "0xB89980")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001EE9")]
			[Address(RVA = "0xF7CF48", Offset = "0xF7CF48", VA = "0xF7CF48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89990", Offset = "0xB89990")]
			private set
			{
			}
		}

		[Token(Token = "0x17000332")]
		public int CurrentPoints
		{
			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0xF7CF50", Offset = "0xF7CF50", VA = "0xF7CF50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB899A0", Offset = "0xB899A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0xF7CF58", Offset = "0xF7CF58", VA = "0xF7CF58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB899B0", Offset = "0xB899B0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000333")]
		public float SessionTotalTime
		{
			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0xF7CF60", Offset = "0xF7CF60", VA = "0xF7CF60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000334")]
		protected bool IsAtMaxScore
		{
			[Token(Token = "0x6001EED")]
			[Address(RVA = "0xF7CF68", Offset = "0xF7CF68", VA = "0xF7CF68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xF7CFDC", Offset = "0xF7CFDC", VA = "0xF7CFDC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xF7CFE0", Offset = "0xF7CFE0", VA = "0xF7CFE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xF7D0C0", Offset = "0xF7D0C0", VA = "0xF7D0C0")]
		public void StartSessionTimer()
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xF79528", Offset = "0xF79528", VA = "0xF79528")]
		public void ShowLevelBar(bool value)
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xF757CC", Offset = "0xF757CC", VA = "0xF757CC", Slot = "4")]
		public virtual void Setup(GameConfig gameConfig, int level, bool isFirstTime)
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xF7D148", Offset = "0xF7D148", VA = "0xF7D148")]
		public void Reset(bool hideBar)
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xF75A94", Offset = "0xF75A94", VA = "0xF75A94", Slot = "5")]
		protected virtual void IncrementLevel()
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xF75D08", Offset = "0xF75D08", VA = "0xF75D08", Slot = "6")]
		protected virtual void DecrementLevel()
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xF7D114", Offset = "0xF7D114", VA = "0xF7D114")]
		private void MaybeStartPenaltyTimer()
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xF7D244", Offset = "0xF7D244", VA = "0xF7D244")]
		private void SetLowerLevel()
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xF7D330", Offset = "0xF7D330", VA = "0xF7D330")]
		private void UpdatePoints(int pointDelta)
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0xF7D428", Offset = "0xF7D428", VA = "0xF7D428")]
		private void UpdateProgress()
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xF7D4E4", Offset = "0xF7D4E4", VA = "0xF7D4E4", Slot = "7")]
		public virtual void CountSuccess(int overridePoints = int.MinValue)
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xF7D684", Offset = "0xF7D684", VA = "0xF7D684", Slot = "8")]
		public virtual void CountMistake(int overridePoints = int.MinValue)
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xF7D82C", Offset = "0xF7D82C", VA = "0xF7D82C", Slot = "9")]
		protected virtual void StartPenaltyTimer(float overrideStartClockAngle = 0.75f)
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0xF7CFE4", Offset = "0xF7CFE4", VA = "0xF7CFE4")]
		private void CancelPenaltyTimer()
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0xF7DA1C", Offset = "0xF7DA1C", VA = "0xF7DA1C")]
		private void EnterHurryUpTime()
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xF7DA28", Offset = "0xF7DA28", VA = "0xF7DA28", Slot = "10")]
		protected virtual void ApplyTimeoutPenalty()
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xF7DAD8", Offset = "0xF7DAD8", VA = "0xF7DAD8")]
		private void ApplyTimeoutLoseProgressionPointsPenalty()
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xF7DA64", Offset = "0xF7DA64", VA = "0xF7DA64")]
		private void ApplyTimeoutLevelDownPenalty()
		{
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xF6C5A8", Offset = "0xF6C5A8", VA = "0xF6C5A8")]
		public void RegisterValidInput()
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xF72FD8", Offset = "0xF72FD8", VA = "0xF72FD8")]
		public void RegisterInvalidInput()
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xF7D1A0", Offset = "0xF7D1A0", VA = "0xF7D1A0")]
		private void OnLevelChangeTimeoutAction()
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xF7DC28", Offset = "0xF7DC28", VA = "0xF7DC28")]
		private void OnValidInputTimeoutAction()
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xF7DCC8", Offset = "0xF7DCC8", VA = "0xF7DCC8")]
		private void OnInvalidInputTimeoutAction()
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xF7D5E0", Offset = "0xF7D5E0", VA = "0xF7D5E0")]
		private void OnSuccessTimeoutAction()
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xF7D7A4", Offset = "0xF7D7A4", VA = "0xF7D7A4")]
		private void OnMistakeTimeoutAction()
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xF7DB84", Offset = "0xF7DB84", VA = "0xF7DB84")]
		private void OnTimeoutTimeoutAction()
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0xF7DD68", Offset = "0xF7DD68", VA = "0xF7DD68", Slot = "11")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xF7DE04", Offset = "0xF7DE04", VA = "0xF7DE04")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0xF7DE08", Offset = "0xF7DE08", VA = "0xF7DE08")]
		private void UpdateHUDTimers()
		{
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0xF75E08", Offset = "0xF75E08", VA = "0xF75E08")]
		public ProgressionManager()
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xF7DF18", Offset = "0xF7DF18", VA = "0xF7DF18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB899C0", Offset = "0xB899C0")]
		private void <IncrementLevel>b__38_0()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class SpecificGameTag : MonoBehaviour
	{
		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameTags _gameTags;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "DropdownAttribute", RVA = "0xB7D1F4", Offset = "0xB7D1F4")]
		[SerializeField]
		private string _tag;

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x139F01C", Offset = "0x139F01C", VA = "0x139F01C")]
		private List<string> TagValues()
		{
			return null;
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0x139F124", Offset = "0x139F124", VA = "0x139F124")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x139F240", Offset = "0x139F240", VA = "0x139F240")]
		public SpecificGameTag()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class TutorialController : MonoBehaviour
	{
		[Token(Token = "0x20007D6")]
		public delegate void OnStepInstructionsStart(TutorialController sender, TutorialStep step);

		[Token(Token = "0x20007D7")]
		public delegate void OnStepInstructionsPlay(TutorialController sender, TutorialStep step, int instructionIndex);

		[Token(Token = "0x20007D8")]
		public delegate void OnStepInstructionsEnd(TutorialController sender, TutorialStep step);

		[Token(Token = "0x20007D9")]
		public delegate void OnSpecialMessageInstructionsStart(TutorialController sender, TutorialSpecialStep triggerMessage);

		[Token(Token = "0x20007DA")]
		public delegate void OnSpecialMessageInstructionsPlay(TutorialController sender, TutorialSpecialStep triggerMessage, int instructionIndex);

		[Token(Token = "0x20007DB")]
		public delegate void OnSpecialMessageInstructionsEnd(TutorialController sender, TutorialSpecialStep triggerMessage);

		[Token(Token = "0x20007DC")]
		public delegate void OnTutorialEnd(TutorialController sender);

		[Serializable]
		[Token(Token = "0x20007DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73424", Offset = "0xB73424")]
		private sealed class <>c
		{
			[Token(Token = "0x4002CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static SubtitledAudioPlayer.AudioCompleted <>9__44_0;

			[Token(Token = "0x600318D")]
			[Address(RVA = "0x13A1838", Offset = "0x13A1838", VA = "0x13A1838")]
			public <>c()
			{
			}

			[Token(Token = "0x600318E")]
			[Address(RVA = "0x13A1840", Offset = "0x13A1840", VA = "0x13A1840")]
			internal void <PlayInstruction>b__44_0()
			{
			}
		}

		[Token(Token = "0x20007DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73434", Offset = "0xB73434")]
		private sealed class <>c__DisplayClass49_0
		{
			[Token(Token = "0x4002CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TutorialController <>4__this;

			[Token(Token = "0x4002CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool success;

			[Token(Token = "0x4002CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int jumpSteps;

			[Token(Token = "0x600318F")]
			[Address(RVA = "0x139F544", Offset = "0x139F544", VA = "0x139F544")]
			public <>c__DisplayClass49_0()
			{
			}

			[Token(Token = "0x6003190")]
			[Address(RVA = "0x13A1844", Offset = "0x13A1844", VA = "0x13A1844")]
			internal void <PlayerActionPerformed>b__0(Waiter _)
			{
			}

			[Token(Token = "0x6003191")]
			[Address(RVA = "0x13A1868", Offset = "0x13A1868", VA = "0x13A1868")]
			internal void <PlayerActionPerformed>b__1()
			{
			}
		}

		[Token(Token = "0x40019DA")]
		private const float errorCoolTime = 3f;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7D240", Offset = "0xB7D240")]
		[SerializeField]
		private AttentionLab.Enums.GameType _gameType;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7D28C", Offset = "0xB7D28C")]
		[SerializeField]
		private GameController _gameController;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnStepInstructionsStart StepInstructionsStart;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OnStepInstructionsPlay StepInstructionsPlay;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public OnStepInstructionsEnd StepInstructionsEnd;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public OnSpecialMessageInstructionsStart SpecialMessageInstructionsStart;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public OnSpecialMessageInstructionsPlay SpecialMessageInstructionsPlay;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OnSpecialMessageInstructionsEnd SpecialMessageInstructionsEnd;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OnTutorialEnd TutorialEnd;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D2D8", Offset = "0xB7D2D8")]
		private bool <IsRunning>k__BackingField;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D2E8", Offset = "0xB7D2E8")]
		private int <CurrentStepIndex>k__BackingField;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D2F8", Offset = "0xB7D2F8")]
		private int <CurrentStepInstructionIndex>k__BackingField;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D308", Offset = "0xB7D308")]
		private int <CurrentSpecialMessageIndex>k__BackingField;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D318", Offset = "0xB7D318")]
		private int <CurrentSpecialMessageInstructionIndex>k__BackingField;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _playErrorMessage;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<TutorialStep> _steps;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<TutorialSpecialStep> _specialSteps;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SubtitledAudioPlayer _audioPlayer;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<int, bool> _playedSpecialMessages;

		[Token(Token = "0x17000335")]
		public bool IsRunning
		{
			[Token(Token = "0x6001F13")]
			[Address(RVA = "0x139F248", Offset = "0x139F248", VA = "0x139F248")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB899D0", Offset = "0xB899D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F14")]
			[Address(RVA = "0x139F250", Offset = "0x139F250", VA = "0x139F250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB899E0", Offset = "0xB899E0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000336")]
		public int CurrentStepIndex
		{
			[Token(Token = "0x6001F15")]
			[Address(RVA = "0x139F25C", Offset = "0x139F25C", VA = "0x139F25C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB899F0", Offset = "0xB899F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F16")]
			[Address(RVA = "0x139F264", Offset = "0x139F264", VA = "0x139F264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89A00", Offset = "0xB89A00")]
			private set
			{
			}
		}

		[Token(Token = "0x17000337")]
		public int CurrentStepInstructionIndex
		{
			[Token(Token = "0x6001F17")]
			[Address(RVA = "0x139F26C", Offset = "0x139F26C", VA = "0x139F26C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89A10", Offset = "0xB89A10")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F18")]
			[Address(RVA = "0x139F274", Offset = "0x139F274", VA = "0x139F274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89A20", Offset = "0xB89A20")]
			set
			{
			}
		}

		[Token(Token = "0x17000338")]
		public int CurrentSpecialMessageIndex
		{
			[Token(Token = "0x6001F19")]
			[Address(RVA = "0x139F27C", Offset = "0x139F27C", VA = "0x139F27C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89A30", Offset = "0xB89A30")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0x139F284", Offset = "0x139F284", VA = "0x139F284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89A40", Offset = "0xB89A40")]
			private set
			{
			}
		}

		[Token(Token = "0x17000339")]
		public int CurrentSpecialMessageInstructionIndex
		{
			[Token(Token = "0x6001F1B")]
			[Address(RVA = "0x139F28C", Offset = "0x139F28C", VA = "0x139F28C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89A50", Offset = "0xB89A50")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F1C")]
			[Address(RVA = "0x139F294", Offset = "0x139F294", VA = "0x139F294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89A60", Offset = "0xB89A60")]
			private set
			{
			}
		}

		[Token(Token = "0x1700033A")]
		public int StepCount
		{
			[Token(Token = "0x6001F1D")]
			[Address(RVA = "0x139C668", Offset = "0x139C668", VA = "0x139C668")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x139F29C", Offset = "0x139F29C", VA = "0x139F29C")]
		public void PlayInstruction(SubtitledAudio instruction)
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x139F3B0", Offset = "0x139F3B0", VA = "0x139F3B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x139C934", Offset = "0x139C934", VA = "0x139C934")]
		public void StartTutorial()
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x139A634", Offset = "0x139A634", VA = "0x139A634")]
		public void PauseTutorial(bool paused)
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x139A378", Offset = "0x139A378", VA = "0x139A378")]
		public void StopTutorial()
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x139BAA0", Offset = "0x139BAA0", VA = "0x139BAA0")]
		public void PlayerActionPerformed(bool success, int jumpSteps = 0, int messageIndex = -1)
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x139F464", Offset = "0x139F464", VA = "0x139F464")]
		private void PlayNextStep(int jumpSteps = 0)
		{
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0x139F900", Offset = "0x139F900", VA = "0x139F900")]
		private void PlayStepInstructions(TutorialStep step)
		{
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0x139FD34", Offset = "0x139FD34", VA = "0x139FD34")]
		private void PlayNextInstruction()
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0x13A0780", Offset = "0x13A0780", VA = "0x13A0780")]
		public void PlaySpecialMessage(int specialMessageIndex)
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x13A0D48", Offset = "0x13A0D48", VA = "0x13A0D48")]
		private void PlayNextSpecialMessageInstruction()
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x13A17AC", Offset = "0x13A17AC", VA = "0x13A17AC")]
		public TutorialController()
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x13A17C8", Offset = "0x13A17C8", VA = "0x13A17C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89A70", Offset = "0xB89A70")]
		private void <PlaySpecialMessage>b__53_0(Waiter _)
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class TutorialHighlight : MonoBehaviour
	{
		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x13A1B50", Offset = "0x13A1B50", VA = "0x13A1B50")]
		public TutorialHighlight()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class ExplosionSpawner : MonoBehaviour
	{
		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7D328", Offset = "0xB7D328")]
		public VfxEffect _targetEffectBig;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VfxEffect _targetEffectSmall;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<VfxEffect> _effectsPoolSmall;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<VfxEffect> _effectsPoolBig;

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x13842C8", Offset = "0x13842C8", VA = "0x13842C8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x1384350", Offset = "0x1384350", VA = "0x1384350")]
		public VfxEffect GetEffect(Vector3 position, bool success, Color color, bool big)
		{
			return null;
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x1384578", Offset = "0x1384578", VA = "0x1384578")]
		private VfxEffect GetEffectSmall(Vector3 position, bool success, Color color)
		{
			return null;
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x1384438", Offset = "0x1384438", VA = "0x1384438")]
		private VfxEffect GetEffectBig(Vector3 position, bool success, Color color)
		{
			return null;
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x13846B8", Offset = "0x13846B8", VA = "0x13846B8")]
		private void VfxEffectSmall_Ended(VfxEffect objectEffect)
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x13847EC", Offset = "0x13847EC", VA = "0x13847EC")]
		private void VfxEffectBig_Ended(VfxEffect objectEffect)
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x1384920", Offset = "0x1384920", VA = "0x1384920")]
		public ExplosionSpawner()
		{
		}
	}
	[Token(Token = "0x2000424")]
	public class VfxEffect : MonoBehaviour
	{
		[Token(Token = "0x20007DF")]
		public delegate void OnEnded(VfxEffect objectEffect);

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7D360", Offset = "0xB7D360")]
		public float _timeToDie;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnEnded Ended;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _startTime;

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x13A257C", Offset = "0x13A257C", VA = "0x13A257C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x13A25CC", Offset = "0x13A25CC", VA = "0x13A25CC", Slot = "4")]
		public virtual void Enable(bool enable)
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x13A262C", Offset = "0x13A262C", VA = "0x13A262C", Slot = "5")]
		public virtual void Reset()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x13A2630", Offset = "0x13A2630", VA = "0x13A2630", Slot = "6")]
		public virtual void Destroy()
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x1395F54", Offset = "0x1395F54", VA = "0x1395F54", Slot = "7")]
		public virtual void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x1395F60", Offset = "0x1395F60", VA = "0x1395F60")]
		public VfxEffect()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class VfxSpawner : MonoBehaviour
	{
		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7D398", Offset = "0xB7D398")]
		public VfxEffect _targetEffect;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<VfxEffect> _effectsPool;

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x13A2A68", Offset = "0x13A2A68", VA = "0x13A2A68")]
		public VfxSpawner()
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x1390BCC", Offset = "0x1390BCC", VA = "0x1390BCC")]
		public VfxEffect GetEffect(Vector3 position, bool success, Color color)
		{
			return null;
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x13A2ADC", Offset = "0x13A2ADC", VA = "0x13A2ADC")]
		private void VfxEffect_Ended(VfxEffect objectEffect)
		{
		}
	}
	[Token(Token = "0x2000426")]
	public class VfxTrail : VfxEffect
	{
		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7D3D0", Offset = "0xB7D3D0")]
		public TrailRenderer _trail;

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x13A2C10", Offset = "0x13A2C10", VA = "0x13A2C10", Slot = "5")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x13A2C2C", Offset = "0x13A2C2C", VA = "0x13A2C2C", Slot = "7")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x13A2C30", Offset = "0x13A2C30", VA = "0x13A2C30")]
		private void SetTrailColor(Color color)
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x13A2D00", Offset = "0x13A2D00", VA = "0x13A2D00")]
		public VfxTrail()
		{
		}
	}
	[Token(Token = "0x2000427")]
	public class HUDController : MonoBehaviour
	{
		[Token(Token = "0x20007E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73444", Offset = "0xB73444")]
		private sealed class <>c__DisplayClass47_0
		{
			[Token(Token = "0x4002CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action callback;

			[Token(Token = "0x6003196")]
			[Address(RVA = "0x13A9484", Offset = "0x13A9484", VA = "0x13A9484")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x6003197")]
			[Address(RVA = "0x13AA3EC", Offset = "0x13AA3EC", VA = "0x13AA3EC")]
			internal void <AnimateBurst>b__0()
			{
			}
		}

		[Token(Token = "0x20007E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73454", Offset = "0xB73454")]
		private sealed class <AnimateBurst>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float totalTime;

			[Token(Token = "0x4002CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HUDController <>4__this;

			[Token(Token = "0x4002CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action callback;

			[Token(Token = "0x4002CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <timer>5__2;

			[Token(Token = "0x17000568")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600319B")]
				[Address(RVA = "0x13AA7C0", Offset = "0x13AA7C0", VA = "0x13AA7C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000569")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600319D")]
				[Address(RVA = "0x13AA82C", Offset = "0x13AA82C", VA = "0x13AA82C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003198")]
			[Address(RVA = "0x13A951C", Offset = "0x13A951C", VA = "0x13A951C")]
			[DebuggerHidden]
			public <AnimateBurst>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6003199")]
			[Address(RVA = "0x13AA6A8", Offset = "0x13AA6A8", VA = "0x13AA6A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600319A")]
			[Address(RVA = "0x13AA6AC", Offset = "0x13AA6AC", VA = "0x13AA6AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600319C")]
			[Address(RVA = "0x13AA7C8", Offset = "0x13AA7C8", VA = "0x13AA7C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73464", Offset = "0xB73464")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x4002CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action callback;

			[Token(Token = "0x600319E")]
			[Address(RVA = "0x13A9640", Offset = "0x13A9640", VA = "0x13A9640")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x600319F")]
			[Address(RVA = "0x13AA408", Offset = "0x13AA408", VA = "0x13AA408")]
			internal void <SetLevel>b__0()
			{
			}
		}

		[Token(Token = "0x20007E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73474", Offset = "0xB73474")]
		private sealed class <>c__DisplayClass52_0
		{
			[Token(Token = "0x4002CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action callback;

			[Token(Token = "0x4002CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HUDController <>4__this;

			[Token(Token = "0x4002CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int levelNr;

			[Token(Token = "0x4002CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action <>9__2;

			[Token(Token = "0x60031A0")]
			[Address(RVA = "0x13AA424", Offset = "0x13AA424", VA = "0x13AA424")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x60031A1")]
			[Address(RVA = "0x13AA42C", Offset = "0x13AA42C", VA = "0x13AA42C")]
			internal void <NewLevelStart>b__0()
			{
			}

			[Token(Token = "0x60031A2")]
			[Address(RVA = "0x13AA448", Offset = "0x13AA448", VA = "0x13AA448")]
			internal void <NewLevelStart>b__1()
			{
			}

			[Token(Token = "0x60031A3")]
			[Address(RVA = "0x13AA68C", Offset = "0x13AA68C", VA = "0x13AA68C")]
			internal void <NewLevelStart>b__2()
			{
			}
		}

		[Token(Token = "0x20007E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73484", Offset = "0xB73484")]
		private sealed class <NewLevelStart>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action callback;

			[Token(Token = "0x4002CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HUDController <>4__this;

			[Token(Token = "0x4002CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int levelNr;

			[Token(Token = "0x4002CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool down;

			[Token(Token = "0x4002CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass52_0 <>8__1;

			[Token(Token = "0x1700056A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031A7")]
				[Address(RVA = "0x13AAF0C", Offset = "0x13AAF0C", VA = "0x13AAF0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031A9")]
				[Address(RVA = "0x13AAF78", Offset = "0x13AAF78", VA = "0x13AAF78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031A4")]
			[Address(RVA = "0x13A96E4", Offset = "0x13A96E4", VA = "0x13A96E4")]
			[DebuggerHidden]
			public <NewLevelStart>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60031A5")]
			[Address(RVA = "0x13AAA14", Offset = "0x13AAA14", VA = "0x13AAA14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031A6")]
			[Address(RVA = "0x13AAA18", Offset = "0x13AAA18", VA = "0x13AAA18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031A8")]
			[Address(RVA = "0x13AAF14", Offset = "0x13AAF14", VA = "0x13AAF14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73494", Offset = "0xB73494")]
		private sealed class <NewLevelEnd>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HUDController <>4__this;

			[Token(Token = "0x4002CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool down;

			[Token(Token = "0x4002CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int levelNr;

			[Token(Token = "0x4002CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action callback;

			[Token(Token = "0x1700056C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031AD")]
				[Address(RVA = "0x13AA9A0", Offset = "0x13AA9A0", VA = "0x13AA9A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031AF")]
				[Address(RVA = "0x13AAA0C", Offset = "0x13AAA0C", VA = "0x13AAA0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031AA")]
			[Address(RVA = "0x13A97B0", Offset = "0x13A97B0", VA = "0x13A97B0")]
			[DebuggerHidden]
			public <NewLevelEnd>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x60031AB")]
			[Address(RVA = "0x13AA834", Offset = "0x13AA834", VA = "0x13AA834", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031AC")]
			[Address(RVA = "0x13AA838", Offset = "0x13AA838", VA = "0x13AA838", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031AE")]
			[Address(RVA = "0x13AA9A8", Offset = "0x13AA9A8", VA = "0x13AA9A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7D408", Offset = "0xB7D408")]
		public Animator levelUpDownAnimator;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7D440", Offset = "0xB7D440")]
		public MeshRenderer burst;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image bar;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image clock;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7D478", Offset = "0xB7D478")]
		public Text levelNumberLeft;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text levelNumberRight;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text timer;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text newLevelText;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text hurryUpText;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7D4B0", Offset = "0xB7D4B0")]
		public Transform clockAnchor;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform burstAnchor;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7D4E8", Offset = "0xB7D4E8")]
		public Image background;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7D520", Offset = "0xB7D520")]
		public Color progressColorFull;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color clockColor;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color burstColor;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float timeInSeconds;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float progress;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float transparency;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float transparencyOverride;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float transparencyHighlight;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float transparencyMaster;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int currentLevel;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int maxLevel;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float progressGhost;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float progressFull;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float totalAlpha;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float progressAlpha;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float progressAlertLerp;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float progressAlertIntensity;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool clockIsVisible;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float clockTimer;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float clockAlertLerp;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float clockAlertIntensity;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float clockScale;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float clockStartAngle;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float burstAnimationLerp;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private bool isLevelingUp;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		private bool waitting_newLevel;

		[Token(Token = "0x1700033B")]
		public float Value
		{
			[Token(Token = "0x6001F40")]
			[Address(RVA = "0x13A89F4", Offset = "0x13A89F4", VA = "0x13A89F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x13A89FC", Offset = "0x13A89FC", VA = "0x13A89FC")]
		public void SetTime(float time)
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x13A8A7C", Offset = "0x13A8A7C", VA = "0x13A8A7C")]
		public void SetStartClockAngle(float t)
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x13A8A84", Offset = "0x13A8A84", VA = "0x13A8A84")]
		public void SetOverrideTransparency(float t)
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x13A8A8C", Offset = "0x13A8A8C", VA = "0x13A8A8C")]
		public void SetMasterTransparency(float t, bool instantly)
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x13A9150", Offset = "0x13A9150", VA = "0x13A9150")]
		public void SetHighlightTransparency(float t)
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x13A9158", Offset = "0x13A9158", VA = "0x13A9158")]
		public void ShowMistake()
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x13A9164", Offset = "0x13A9164", VA = "0x13A9164")]
		public void SetProgress(float value, bool overridevalue = false)
		{
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x13A93B4", Offset = "0x13A93B4", VA = "0x13A93B4")]
		public void AnimateBurst(Action callback)
		{
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x13A948C", Offset = "0x13A948C", VA = "0x13A948C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB89A80", Offset = "0xB89A80")]
		private IEnumerator AnimateBurst(float totalTime, Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x13A9548", Offset = "0x13A9548", VA = "0x13A9548")]
		public void SetMaxLevel(int level)
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x13A9550", Offset = "0x13A9550", VA = "0x13A9550")]
		public void SetLevel(int level)
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x13A9558", Offset = "0x13A9558", VA = "0x13A9558")]
		public void SetLevel(bool animateLevelDown, int nextLevel, Action callback)
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x13A9648", Offset = "0x13A9648", VA = "0x13A9648")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB89AE4", Offset = "0xB89AE4")]
		private IEnumerator NewLevelStart(bool down, int levelNr, Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x13A9710", Offset = "0x13A9710", VA = "0x13A9710")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB89B48", Offset = "0xB89B48")]
		private IEnumerator NewLevelEnd(bool down, int levelNr, Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x13A97DC", Offset = "0x13A97DC", VA = "0x13A97DC")]
		private void SetChangeLevelAnim(bool down)
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x13A9854", Offset = "0x13A9854", VA = "0x13A9854")]
		public void ChangeLevelAnimCallBack_Middle()
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x13A985C", Offset = "0x13A985C", VA = "0x13A985C")]
		public void ChangeLevelAnimCallBack_End()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x13A987C", Offset = "0x13A987C", VA = "0x13A987C")]
		public void SetTransparency(float t)
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x13A9884", Offset = "0x13A9884", VA = "0x13A9884")]
		public void SetClock(float timeLerp)
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x13A98B0", Offset = "0x13A98B0", VA = "0x13A98B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x13A99B4", Offset = "0x13A99B4", VA = "0x13A99B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x13A99E0", Offset = "0x13A99E0", VA = "0x13A99E0")]
		private void ManageZenoParadoxes()
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x13A8E3C", Offset = "0x13A8E3C", VA = "0x13A8E3C")]
		private void ManageShaders()
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x13AA17C", Offset = "0x13AA17C", VA = "0x13AA17C")]
		private void ManageText()
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x13A8AD4", Offset = "0x13A8AD4", VA = "0x13A8AD4")]
		private void UpdateCanvasElementsTransparency()
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x13AA2F4", Offset = "0x13AA2F4", VA = "0x13AA2F4")]
		private string FormatedTime(float seconds)
		{
			return null;
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x13AA3DC", Offset = "0x13AA3DC", VA = "0x13AA3DC")]
		public HUDController()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class HUDMover : MonoBehaviour
	{
		[Token(Token = "0x20007E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB734A4", Offset = "0xB734A4")]
		private sealed class <FindCamera_Coroutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HUDMover <>4__this;

			[Token(Token = "0x1700056E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031B3")]
				[Address(RVA = "0x13ACE94", Offset = "0x13ACE94", VA = "0x13ACE94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031B5")]
				[Address(RVA = "0x13ACF00", Offset = "0x13ACF00", VA = "0x13ACF00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031B0")]
			[Address(RVA = "0x13AB83C", Offset = "0x13AB83C", VA = "0x13AB83C")]
			[DebuggerHidden]
			public <FindCamera_Coroutine>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60031B1")]
			[Address(RVA = "0x13ACB64", Offset = "0x13ACB64", VA = "0x13ACB64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031B2")]
			[Address(RVA = "0x13ACB68", Offset = "0x13ACB68", VA = "0x13ACB68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031B4")]
			[Address(RVA = "0x13ACE9C", Offset = "0x13ACE9C", VA = "0x13ACE9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject hudControllerPrefab;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HUDProfile _profile;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform anchor_yPlaneRotator;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform anchor_xPlaneRotator;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform anchor_positionReference;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform anchor_rotationReference;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _hudAnchor;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HUDController _hudController;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform cameraAnchor;

		[Token(Token = "0x4001A27")]
		private const float _inv180 = 0.005555f;

		[Token(Token = "0x1700033C")]
		private Transform HudAnchor
		{
			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0x13AAF80", Offset = "0x13AAF80", VA = "0x13AAF80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033D")]
		[HideInInspector]
		public HUDController HudController
		{
			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0x13AB29C", Offset = "0x13AB29C", VA = "0x13AB29C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x13AB394", Offset = "0x13AB394", VA = "0x13AB394")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x13AB3D4", Offset = "0x13AB3D4", VA = "0x13AB3D4")]
		private void GenerateGameObjectHierarchy()
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x13AB7C8", Offset = "0x13AB7C8", VA = "0x13AB7C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB89BAC", Offset = "0xB89BAC")]
		private IEnumerator FindCamera_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x13AB004", Offset = "0x13AB004", VA = "0x13AB004")]
		private void InstantiateHUD()
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x13AB320", Offset = "0x13AB320", VA = "0x13AB320")]
		private void GetController()
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x13AB868", Offset = "0x13AB868", VA = "0x13AB868")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x13ABBD0", Offset = "0x13ABBD0", VA = "0x13ABBD0")]
		private void SetPosition(float y)
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x13AC28C", Offset = "0x13AC28C", VA = "0x13AC28C")]
		private void SetRotation(float x, float y)
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x13AC650", Offset = "0x13AC650", VA = "0x13AC650")]
		private float CameraYRotation()
		{
			return default(float);
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x13AB9AC", Offset = "0x13AB9AC", VA = "0x13AB9AC")]
		private float GetAngularDiferenceY()
		{
			return default(float);
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x13ABAF0", Offset = "0x13ABAF0", VA = "0x13ABAF0")]
		private float GetCameraAngleX()
		{
			return default(float);
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x13AC7A4", Offset = "0x13AC7A4", VA = "0x13AC7A4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x13ACB5C", Offset = "0x13ACB5C", VA = "0x13ACB5C")]
		public HUDMover()
		{
		}
	}
	[Token(Token = "0x2000429")]
	public class GameConfig : ScriptableObject
	{
		[Token(Token = "0x20007E7")]
		public enum TimeoutSystemType
		{
			[Token(Token = "0x4002CCA")]
			IdleTimer,
			[Token(Token = "0x4002CCB")]
			SuccessTimer,
			[Token(Token = "0x4002CCC")]
			LevelUpTimer
		}

		[Token(Token = "0x20007E8")]
		public enum TimeoutPenaltyType
		{
			[Token(Token = "0x4002CCE")]
			LevelDown,
			[Token(Token = "0x4002CCF")]
			LoseProgressionPoints
		}

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "BoxGroupAttribute", RVA = "0xB7D578", Offset = "0xB7D578")]
		public float totalSessionTime;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "BoxGroupAttribute", RVA = "0xB7D5B0", Offset = "0xB7D5B0")]
		public float firstSessionTimeMultiplier;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "BoxGroupAttribute", RVA = "0xB7D5E8", Offset = "0xB7D5E8")]
		public int pointsToLevelUp;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "BoxGroupAttribute", RVA = "0xB7D620", Offset = "0xB7D620")]
		public int successPoints;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "BoxGroupAttribute", RVA = "0xB7D658", Offset = "0xB7D658")]
		public int errorPoints;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "BoxGroupAttribute", RVA = "0xB7D690", Offset = "0xB7D690")]
		public bool hasTimeoutSystem;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "BoxGroupAttribute", RVA = "0xB7D6C8", Offset = "0xB7D6C8")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB7D6C8", Offset = "0xB7D6C8")]
		[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0xB7D6C8", Offset = "0xB7D6C8")]
		public TimeoutSystemType timeoutSystemType;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int timeoutSystemTypeInt;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "BoxGroupAttribute", RVA = "0xB7D75C", Offset = "0xB7D75C")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB7D75C", Offset = "0xB7D75C")]
		[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0xB7D75C", Offset = "0xB7D75C")]
		public TimeoutPenaltyType timeoutPenaltyType;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public int timeoutPenaltyTypeInt;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "BoxGroupAttribute", RVA = "0xB7D7F0", Offset = "0xB7D7F0")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xB7D7F0", Offset = "0xB7D7F0")]
		public int timeoutPenaltyPoints;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "BoxGroupAttribute", RVA = "0xB7D8A0", Offset = "0xB7D8A0")]
		public float fractionPointsToKeep;

		[Token(Token = "0x1700033E")]
		public virtual LevelConfig[] Levels
		{
			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0x1384928", Offset = "0x1384928", VA = "0x1384928", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033F")]
		public TimeoutSystemType TimeoutSystem
		{
			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0x1384974", Offset = "0x1384974", VA = "0x1384974")]
			get
			{
				return default(TimeoutSystemType);
			}
		}

		[Token(Token = "0x17000340")]
		public TimeoutPenaltyType TimeoutPenalty
		{
			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0x138497C", Offset = "0x138497C", VA = "0x138497C")]
			get
			{
				return default(TimeoutPenaltyType);
			}
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x1384984", Offset = "0x1384984", VA = "0x1384984")]
		public void UpdateEnumVars()
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x1384998", Offset = "0x1384998", VA = "0x1384998")]
		public void EnumVarsUpdated()
		{
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x1372D5C", Offset = "0x1372D5C", VA = "0x1372D5C")]
		public GameConfig()
		{
		}
	}
	[Token(Token = "0x200042A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB72038", Offset = "0xB72038")]
	public class GameTags : ScriptableObject
	{
		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ReorderableList]
		public List<string> tags;

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x13A5B7C", Offset = "0x13A5B7C", VA = "0x13A5B7C")]
		public GameTags()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042B")]
	public class TutorialStep
	{
		[Serializable]
		[Token(Token = "0x20007E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB734B4", Offset = "0xB734B4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TutorialConfig.TutorialMessage, bool> <>9__16_0;

			[Token(Token = "0x4002CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<TutorialConfig.TutorialMessage, bool> <>9__16_1;

			[Token(Token = "0x4002CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<TutorialConfig.TutorialMessage, bool> <>9__16_2;

			[Token(Token = "0x60031B7")]
			[Address(RVA = "0x13A2508", Offset = "0x13A2508", VA = "0x13A2508")]
			public <>c()
			{
			}

			[Token(Token = "0x60031B8")]
			[Address(RVA = "0x13A2510", Offset = "0x13A2510", VA = "0x13A2510")]
			internal bool <.ctor>b__16_0(TutorialConfig.TutorialMessage x)
			{
				return default(bool);
			}

			[Token(Token = "0x60031B9")]
			[Address(RVA = "0x13A2534", Offset = "0x13A2534", VA = "0x13A2534")]
			internal bool <.ctor>b__16_1(TutorialConfig.TutorialMessage x)
			{
				return default(bool);
			}

			[Token(Token = "0x60031BA")]
			[Address(RVA = "0x13A2558", Offset = "0x13A2558", VA = "0x13A2558")]
			internal bool <.ctor>b__16_2(TutorialConfig.TutorialMessage x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool skipAutomatically;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SubtitledAudio> instructions;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SubtitledAudio> successMessages;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SubtitledAudio> errorMessages;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D8E8", Offset = "0xB7D8E8")]
		private int <Index>k__BackingField;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D8F8", Offset = "0xB7D8F8")]
		private bool <IsReady>k__BackingField;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D908", Offset = "0xB7D908")]
		private bool <IsCompleted>k__BackingField;

		[Token(Token = "0x17000341")]
		public int Index
		{
			[Token(Token = "0x6001F72")]
			[Address(RVA = "0x13A1D7C", Offset = "0x13A1D7C", VA = "0x13A1D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89C10", Offset = "0xB89C10")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F73")]
			[Address(RVA = "0x13A1D84", Offset = "0x13A1D84", VA = "0x13A1D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89C20", Offset = "0xB89C20")]
			set
			{
			}
		}

		[Token(Token = "0x17000342")]
		public bool IsReady
		{
			[Token(Token = "0x6001F74")]
			[Address(RVA = "0x13A1D8C", Offset = "0x13A1D8C", VA = "0x13A1D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89C30", Offset = "0xB89C30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F75")]
			[Address(RVA = "0x13A1D94", Offset = "0x13A1D94", VA = "0x13A1D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89C40", Offset = "0xB89C40")]
			set
			{
			}
		}

		[Token(Token = "0x17000343")]
		public bool IsCompleted
		{
			[Token(Token = "0x6001F76")]
			[Address(RVA = "0x13A1DA0", Offset = "0x13A1DA0", VA = "0x13A1DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89C50", Offset = "0xB89C50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F77")]
			[Address(RVA = "0x13A1DA8", Offset = "0x13A1DA8", VA = "0x13A1DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89C60", Offset = "0xB89C60")]
			set
			{
			}
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x13A1DB4", Offset = "0x13A1DB4", VA = "0x13A1DB4")]
		public TutorialStep(int index, string textLanguageCode, string audioLanguageCode, bool skip, List<TutorialConfig.TutorialMessage> messages)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042C")]
	public class TutorialSpecialStep
	{
		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool onlyPlayOnce;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SubtitledAudio> messages;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D918", Offset = "0xB7D918")]
		private int <Index>k__BackingField;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D928", Offset = "0xB7D928")]
		private bool <IsReady>k__BackingField;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D938", Offset = "0xB7D938")]
		private bool <IsCompleted>k__BackingField;

		[Token(Token = "0x17000344")]
		public int Index
		{
			[Token(Token = "0x6001F79")]
			[Address(RVA = "0x13A1B58", Offset = "0x13A1B58", VA = "0x13A1B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89C70", Offset = "0xB89C70")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0x13A1B60", Offset = "0x13A1B60", VA = "0x13A1B60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89C80", Offset = "0xB89C80")]
			set
			{
			}
		}

		[Token(Token = "0x17000345")]
		public bool IsReady
		{
			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0x13A1B68", Offset = "0x13A1B68", VA = "0x13A1B68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89C90", Offset = "0xB89C90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0x13A1B70", Offset = "0x13A1B70", VA = "0x13A1B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89CA0", Offset = "0xB89CA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000346")]
		public bool IsCompleted
		{
			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0x13A1B7C", Offset = "0x13A1B7C", VA = "0x13A1B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89CB0", Offset = "0xB89CB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0x13A1B84", Offset = "0x13A1B84", VA = "0x13A1B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89CC0", Offset = "0xB89CC0")]
			set
			{
			}
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x13A1B90", Offset = "0x13A1B90", VA = "0x13A1B90")]
		public TutorialSpecialStep(int index, string textLanguageCode, string audioLanguageCode, bool playOnce, List<TutorialConfig.TutorialMessage> specialMessages)
		{
		}
	}
}
namespace AttentionLab.MiniGames.WhackAMole
{
	[Token(Token = "0x200042D")]
	public class MoleData
	{
		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int hole;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int level;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int hand;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB7D948", Offset = "0xB7D948")]
		public DateTime activated_timestamp;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB7D9D8", Offset = "0xB7D9D8")]
		public DateTime deactivated_timestamp;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB7DA68", Offset = "0xB7DA68")]
		public DateTime hit_timestamp;

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x13A41A8", Offset = "0x13A41A8", VA = "0x13A41A8")]
		public MoleData(int holeID, int level, int hammerHand, DateTime activatedTime, DateTime deactivatedTime, DateTime hitTime)
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x13A420C", Offset = "0x13A420C", VA = "0x13A420C")]
		public bool ShouldSerializeactivated_timestamp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x13A4284", Offset = "0x13A4284", VA = "0x13A4284")]
		public bool ShouldSerializedeactivated_timestamp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x13A42FC", Offset = "0x13A42FC", VA = "0x13A42FC")]
		public bool ShouldSerializehit_timestamp()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200042E")]
	public class MoleWhackMoment : WhackMoment
	{
		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly int _holeID;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly int _level;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Hammer _hammer;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly DateTime _activatedTimestamp;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly DateTime _deactivatedTimestamp;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly DateTime _hitTimestamp;

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x13A350C", Offset = "0x13A350C", VA = "0x13A350C")]
		public MoleWhackMoment(int holeID, int level, Hammer hammer, DateTime activatedTime, DateTime deactivatedTime, DateTime hitTime)
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x13A4374", Offset = "0x13A4374", VA = "0x13A4374", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x200042F")]
	public abstract class WhackMoment : GameMoment
	{
		[Token(Token = "0x6001F86")]
		public abstract override void SetValues();

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x10BAEC0", Offset = "0x10BAEC0", VA = "0x10BAEC0")]
		protected int ParseHammerHand(Hammer controller)
		{
			return default(int);
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x10BAF64", Offset = "0x10BAF64", VA = "0x10BAF64")]
		protected WhackMoment()
		{
		}
	}
	[Token(Token = "0x2000430")]
	public class GameManager : MonoBehaviour
	{
		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameController _gameController;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WhackAMoleGameConfig _gameConfig;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WhackProgressionManager _progressionManager;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameManager Instance;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<Hammer> hammers;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public WhackMachine machine;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Animator robot;

		[Token(Token = "0x17000347")]
		public WhackAMoleGameConfig GameConfig
		{
			[Token(Token = "0x6001F89")]
			[Address(RVA = "0x13A2D08", Offset = "0x13A2D08", VA = "0x13A2D08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000348")]
		public ProgressionManager ProgressionManager
		{
			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0x13A2D10", Offset = "0x13A2D10", VA = "0x13A2D10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x13A2D18", Offset = "0x13A2D18", VA = "0x13A2D18")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x13A2ECC", Offset = "0x13A2ECC", VA = "0x13A2ECC")]
		private void GameController_Loaded(GameController sender)
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x13A2F8C", Offset = "0x13A2F8C", VA = "0x13A2F8C")]
		private void GameController_WillUnload(GameController sender)
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x13A304C", Offset = "0x13A304C", VA = "0x13A304C")]
		private void GameController_GameEnd(GameController sender)
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x13A3050", Offset = "0x13A3050", VA = "0x13A3050")]
		private void GameController_GameStop(GameController sender)
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x13A30D0", Offset = "0x13A30D0", VA = "0x13A30D0")]
		private void GameController_GameWillStart(GameController sender)
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x13A3110", Offset = "0x13A3110", VA = "0x13A3110")]
		private void GameController_GameStart(GameController sender, int startLevel, bool isFirstTime)
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x13A3054", Offset = "0x13A3054", VA = "0x13A3054")]
		public void ResetGame()
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x13A3204", Offset = "0x13A3204", VA = "0x13A3204")]
		public static void Score(WhackJoint joint, bool positive, bool minorMistake = false)
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x13A33CC", Offset = "0x13A33CC", VA = "0x13A33CC")]
		public static void LogMoment(WhackJoint joint, DateTime start, DateTime end, DateTime hit, Hammer hammer)
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x13A3574", Offset = "0x13A3574", VA = "0x13A3574")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public class Hammer : MonoBehaviour
	{
		[Token(Token = "0x20007EA")]
		public enum Hand
		{
			[Token(Token = "0x4002CD5")]
			Left,
			[Token(Token = "0x4002CD6")]
			Right
		}

		[Serializable]
		[Token(Token = "0x20007EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB734C4", Offset = "0xB734C4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Transform, Vector3> <>9__9_0;

			[Token(Token = "0x4002CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<float, float> <>9__10_1;

			[Token(Token = "0x60031BC")]
			[Address(RVA = "0x13A3B24", Offset = "0x13A3B24", VA = "0x13A3B24")]
			public <>c()
			{
			}

			[Token(Token = "0x60031BD")]
			[Address(RVA = "0x13A3B2C", Offset = "0x13A3B2C", VA = "0x13A3B2C")]
			internal Vector3 <GetPoints>b__9_0(Transform x)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60031BE")]
			[Address(RVA = "0x13A3B4C", Offset = "0x13A3B4C", VA = "0x13A3B4C")]
			internal float <LowestDistance>b__10_1(float y)
			{
				return default(float);
			}
		}

		[Token(Token = "0x20007EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB734D4", Offset = "0xB734D4")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 position;

			[Token(Token = "0x60031BF")]
			[Address(RVA = "0x13A3AB0", Offset = "0x13A3AB0", VA = "0x13A3AB0")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60031C0")]
			[Address(RVA = "0x13A3B50", Offset = "0x13A3B50", VA = "0x13A3B50")]
			internal float <LowestDistance>b__0(Vector3 x)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject collisionGameObject;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Transform> contactPoints;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Vector3 lastPosition;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float absSpeed;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 vectorSpeed;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Hand hand;

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x13A357C", Offset = "0x13A357C", VA = "0x13A357C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x13A364C", Offset = "0x13A364C", VA = "0x13A364C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x13A37D0", Offset = "0x13A37D0", VA = "0x13A37D0")]
		public List<Vector3> GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x13A38D0", Offset = "0x13A38D0", VA = "0x13A38D0")]
		public float LowestDistance(Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x13A3AB8", Offset = "0x13A3AB8", VA = "0x13A3AB8")]
		public Hammer()
		{
		}
	}
	[Token(Token = "0x2000432")]
	public class HammerCollision : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB734E4", Offset = "0xB734E4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Hammer, GameObject> <>9__3_0;

			[Token(Token = "0x4002CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Hammer, float> <>9__3_1;

			[Token(Token = "0x4002CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<float, float> <>9__3_2;

			[Token(Token = "0x60031C2")]
			[Address(RVA = "0x13A4158", Offset = "0x13A4158", VA = "0x13A4158")]
			public <>c()
			{
			}

			[Token(Token = "0x60031C3")]
			[Address(RVA = "0x13A4160", Offset = "0x13A4160", VA = "0x13A4160")]
			internal GameObject <OnTriggerEnter>b__3_0(Hammer x)
			{
				return null;
			}

			[Token(Token = "0x60031C4")]
			[Address(RVA = "0x13A4188", Offset = "0x13A4188", VA = "0x13A4188")]
			internal float <OnTriggerEnter>b__3_1(Hammer x)
			{
				return default(float);
			}

			[Token(Token = "0x60031C5")]
			[Address(RVA = "0x13A41A4", Offset = "0x13A41A4", VA = "0x13A41A4")]
			internal float <OnTriggerEnter>b__3_2(float x)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float intensity;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float time;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationAnchor;

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x13A3BF8", Offset = "0x13A3BF8", VA = "0x13A3BF8")]
		private void OnTriggerEnter(Collider collision)
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x13A3F7C", Offset = "0x13A3F7C", VA = "0x13A3F7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x13A3EEC", Offset = "0x13A3EEC", VA = "0x13A3EEC")]
		public void Hit(float speed)
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x13A40EC", Offset = "0x13A40EC", VA = "0x13A40EC")]
		public HammerCollision()
		{
		}
	}
	[Token(Token = "0x2000433")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB7208C", Offset = "0xB7208C")]
	public class WhackAMoleGameConfig : GameConfig
	{
		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int minorErrorPoints;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float changeLevelWaitTime;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7DB38", Offset = "0xB7DB38")]
		public WhackAMoleLevelConfig[] _levels;

		[Token(Token = "0x17000349")]
		public override LevelConfig[] Levels
		{
			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0x13A444C", Offset = "0x13A444C", VA = "0x13A444C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x13A4454", Offset = "0x13A4454", VA = "0x13A4454")]
		public WhackAMoleGameConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000434")]
	public class WhackAMoleLevelConfig : LevelConfig
	{
		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int maxSimultaneousMoles;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSimultaneousMolesProbability;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minTimeToActivateNew;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxTimeToActivateNew;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeToDeactivate;

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x13A445C", Offset = "0x13A445C", VA = "0x13A445C")]
		public WhackAMoleLevelConfig()
		{
		}
	}
	[Token(Token = "0x2000435")]
	public class WhackJoint : MonoBehaviour
	{
		[Token(Token = "0x20007EE")]
		public enum JointState
		{
			[Token(Token = "0x4002CE0")]
			Activate,
			[Token(Token = "0x4002CE1")]
			CorrectHit,
			[Token(Token = "0x4002CE2")]
			WrongHit,
			[Token(Token = "0x4002CE3")]
			Deactivate
		}

		[Token(Token = "0x20007EF")]
		public enum FeedbackColor
		{
			[Token(Token = "0x4002CE5")]
			None,
			[Token(Token = "0x4002CE6")]
			Red,
			[Token(Token = "0x4002CE7")]
			Green,
			[Token(Token = "0x4002CE8")]
			Blue
		}

		[Token(Token = "0x20007F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB734F4", Offset = "0xB734F4")]
		private sealed class <ShowHoleFeedback_Coroutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JointState state;

			[Token(Token = "0x4002CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WhackJoint <>4__this;

			[Token(Token = "0x17000570")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031C9")]
				[Address(RVA = "0x10B9418", Offset = "0x10B9418", VA = "0x10B9418", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000571")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031CB")]
				[Address(RVA = "0x10B9484", Offset = "0x10B9484", VA = "0x10B9484", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031C6")]
			[Address(RVA = "0x10B8EBC", Offset = "0x10B8EBC", VA = "0x10B8EBC")]
			[DebuggerHidden]
			public <ShowHoleFeedback_Coroutine>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60031C7")]
			[Address(RVA = "0x10B8EE8", Offset = "0x10B8EE8", VA = "0x10B8EE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031C8")]
			[Address(RVA = "0x10B8EEC", Offset = "0x10B8EEC", VA = "0x10B8EEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031CA")]
			[Address(RVA = "0x10B9420", Offset = "0x10B9420", VA = "0x10B9420", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform moleAnchor;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform shakeFXAnchor;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform posMoleUp;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform posMoleDown;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform posHammerUp;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform posHammerDown;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Animator animator;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public WhackTrigger trigger;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool onFlag;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MeshRenderer holeFeedback;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SkinnedMeshRenderer moleLight;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool overrideColor;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool on;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool hitAnimation;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float shakeAmount;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool wasPaused;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Coroutine feedbackCoroutine;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public DateTime activatedTimeStamp;

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x13A4464", Offset = "0x13A4464", VA = "0x13A4464")]
		private float CompareSpeedVector(Hammer hammer)
		{
			return default(float);
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x13A45A4", Offset = "0x13A45A4", VA = "0x13A45A4")]
		public void Activate()
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x13A47C0", Offset = "0x13A47C0", VA = "0x13A47C0")]
		public void AllowHit(bool value)
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x13A47E0", Offset = "0x13A47E0", VA = "0x13A47E0")]
		private void Shake(float val = 1f)
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x13A47E8", Offset = "0x13A47E8", VA = "0x13A47E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x13A4880", Offset = "0x13A4880", VA = "0x13A4880")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x13A473C", Offset = "0x13A473C", VA = "0x13A473C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB89CD0", Offset = "0xB89CD0")]
		private IEnumerator ShowHoleFeedback_Coroutine(JointState state)
		{
			return null;
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x13A5110", Offset = "0x13A5110", VA = "0x13A5110")]
		public void TurnOffFeedbackLights()
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x13A4F58", Offset = "0x13A4F58", VA = "0x13A4F58")]
		private void Hit(Hammer hammer)
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x13A5258", Offset = "0x13A5258", VA = "0x13A5258")]
		private void HitGoDown()
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x13A336C", Offset = "0x13A336C", VA = "0x13A336C")]
		public void GiveFeedback(bool positive)
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x13A5260", Offset = "0x13A5260", VA = "0x13A5260")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x13A52A0", Offset = "0x13A52A0", VA = "0x13A52A0")]
		public WhackJoint()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public class WhackMachine : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73504", Offset = "0xB73504")]
		private sealed class <>c
		{
			[Token(Token = "0x4002CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<WhackJoint> <>9__7_0;

			[Token(Token = "0x60031CD")]
			[Address(RVA = "0x10B9E00", Offset = "0x10B9E00", VA = "0x10B9E00")]
			public <>c()
			{
			}

			[Token(Token = "0x60031CE")]
			[Address(RVA = "0x10B9E08", Offset = "0x10B9E08", VA = "0x10B9E08")]
			internal void <StopAll>b__7_0(WhackJoint x)
			{
			}
		}

		[Token(Token = "0x20007F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73514", Offset = "0xB73514")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool value;

			[Token(Token = "0x60031CF")]
			[Address(RVA = "0x10B9728", Offset = "0x10B9728", VA = "0x10B9728")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60031D0")]
			[Address(RVA = "0x10B9F48", Offset = "0x10B9F48", VA = "0x10B9F48")]
			internal void <AllowHits>b__0(WhackJoint x)
			{
			}
		}

		[Token(Token = "0x20007F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73524", Offset = "0xB73524")]
		private sealed class <PlayRegularGame_Coroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WhackMachine <>4__this;

			[Token(Token = "0x17000572")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031D4")]
				[Address(RVA = "0x10BAE4C", Offset = "0x10BAE4C", VA = "0x10BAE4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000573")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031D6")]
				[Address(RVA = "0x10BAEB8", Offset = "0x10BAEB8", VA = "0x10BAEB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031D1")]
			[Address(RVA = "0x10B97A4", Offset = "0x10B97A4", VA = "0x10B97A4")]
			[DebuggerHidden]
			public <PlayRegularGame_Coroutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60031D2")]
			[Address(RVA = "0x10BABF0", Offset = "0x10BABF0", VA = "0x10BABF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031D3")]
			[Address(RVA = "0x10BABF4", Offset = "0x10BABF4", VA = "0x10BABF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031D5")]
			[Address(RVA = "0x10BAE54", Offset = "0x10BAE54", VA = "0x10BAE54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73534", Offset = "0xB73534")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<WhackJoint> previouslyActivatedJoints;

			[Token(Token = "0x4002CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<WhackJoint, bool> <>9__0;

			[Token(Token = "0x4002CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<WhackJoint, bool> <>9__1;

			[Token(Token = "0x60031D7")]
			[Address(RVA = "0x10B9E28", Offset = "0x10B9E28", VA = "0x10B9E28")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60031D8")]
			[Address(RVA = "0x10B9E30", Offset = "0x10B9E30", VA = "0x10B9E30")]
			internal bool <ActivationLoop_Coroutine>b__0(WhackJoint x)
			{
				return default(bool);
			}

			[Token(Token = "0x60031D9")]
			[Address(RVA = "0x10B9EBC", Offset = "0x10B9EBC", VA = "0x10B9EBC")]
			internal bool <ActivationLoop_Coroutine>b__1(WhackJoint x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73544", Offset = "0xB73544")]
		private sealed class <ActivationLoop_Coroutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x4002CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WhackMachine <>4__this;

			[Token(Token = "0x4002CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<WhackJoint> <jointsToActivate>5__2;

			[Token(Token = "0x4002CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <currentLevel>5__3;

			[Token(Token = "0x4002CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private WhackAMoleLevelConfig <currentLevelConfig>5__4;

			[Token(Token = "0x4002CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<WhackJoint> <availableJoints>5__5;

			[Token(Token = "0x4002CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private bool <waited>5__6;

			[Token(Token = "0x4002CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <numberOfMoles>5__7;

			[Token(Token = "0x17000574")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031DD")]
				[Address(RVA = "0x10BAA40", Offset = "0x10BAA40", VA = "0x10BAA40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000575")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031DF")]
				[Address(RVA = "0x10BAAAC", Offset = "0x10BAAAC", VA = "0x10BAAAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031DA")]
			[Address(RVA = "0x10B9844", Offset = "0x10B9844", VA = "0x10B9844")]
			[DebuggerHidden]
			public <ActivationLoop_Coroutine>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60031DB")]
			[Address(RVA = "0x10BA42C", Offset = "0x10BA42C", VA = "0x10BA42C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031DC")]
			[Address(RVA = "0x10BA430", Offset = "0x10BA430", VA = "0x10BA430", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031DE")]
			[Address(RVA = "0x10BAA48", Offset = "0x10BAA48", VA = "0x10BAA48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73554", Offset = "0xB73554")]
		private sealed class <ActivateJoint_Coroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WhackJoint joint;

			[Token(Token = "0x4002D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <interval>5__2;

			[Token(Token = "0x4002D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timer>5__3;

			[Token(Token = "0x17000576")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031E3")]
				[Address(RVA = "0x10BA3B8", Offset = "0x10BA3B8", VA = "0x10BA3B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000577")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031E5")]
				[Address(RVA = "0x10BA424", Offset = "0x10BA424", VA = "0x10BA424", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031E0")]
			[Address(RVA = "0x10B98E4", Offset = "0x10B98E4", VA = "0x10B98E4")]
			[DebuggerHidden]
			public <ActivateJoint_Coroutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60031E1")]
			[Address(RVA = "0x10B9F70", Offset = "0x10B9F70", VA = "0x10B9F70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031E2")]
			[Address(RVA = "0x10B9F74", Offset = "0x10B9F74", VA = "0x10B9F74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031E4")]
			[Address(RVA = "0x10BA3C0", Offset = "0x10BA3C0", VA = "0x10BA3C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73564", Offset = "0xB73564")]
		private sealed class <PlayLightsAnimation_Coroutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WhackMachine <>4__this;

			[Token(Token = "0x4002D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationSpeed;

			[Token(Token = "0x4002D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float animationDuration;

			[Token(Token = "0x17000578")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031E9")]
				[Address(RVA = "0x10BAB7C", Offset = "0x10BAB7C", VA = "0x10BAB7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000579")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031EB")]
				[Address(RVA = "0x10BABE8", Offset = "0x10BABE8", VA = "0x10BABE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031E6")]
			[Address(RVA = "0x10B9CA8", Offset = "0x10B9CA8", VA = "0x10B9CA8")]
			[DebuggerHidden]
			public <PlayLightsAnimation_Coroutine>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60031E7")]
			[Address(RVA = "0x10BAAB4", Offset = "0x10BAAB4", VA = "0x10BAAB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031E8")]
			[Address(RVA = "0x10BAAB8", Offset = "0x10BAAB8", VA = "0x10BAAB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031EA")]
			[Address(RVA = "0x10BAB84", Offset = "0x10BAB84", VA = "0x10BAB84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static WhackMachine instance;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7DB80", Offset = "0xB7DB80")]
		public List<WhackJoint> joints;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinnedMeshRenderer assetMesh;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7DBB8", Offset = "0xB7DBB8")]
		public float moleFeedbackDuration;

		[Token(Token = "0x1700034A")]
		public WhackJoint CenterJoint
		{
			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0x10B948C", Offset = "0x10B948C", VA = "0x10B948C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x10B94F8", Offset = "0x10B94F8", VA = "0x10B94F8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x10B9620", Offset = "0x10B9620", VA = "0x10B9620")]
		public void StopAll()
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x10B9554", Offset = "0x10B9554", VA = "0x10B9554")]
		public void AllowHits(bool value)
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x10B9730", Offset = "0x10B9730", VA = "0x10B9730")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB89D34", Offset = "0xB89D34")]
		public IEnumerator PlayRegularGame_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x10B97D0", Offset = "0x10B97D0", VA = "0x10B97D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB89D98", Offset = "0xB89D98")]
		private IEnumerator ActivationLoop_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x10B9870", Offset = "0x10B9870", VA = "0x10B9870")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB89DFC", Offset = "0xB89DFC")]
		private IEnumerator ActivateJoint_Coroutine(WhackJoint joint)
		{
			return null;
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x10B9910", Offset = "0x10B9910", VA = "0x10B9910")]
		public void PlayPositiveFeedback()
		{
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x10B9B14", Offset = "0x10B9B14", VA = "0x10B9B14")]
		public void PlayNegativeFeeback(bool timeOut)
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x10B9A8C", Offset = "0x10B9A8C", VA = "0x10B9A8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB89E60", Offset = "0xB89E60")]
		private IEnumerator PlayLightsAnimation_Coroutine(float animationSpeed, float animationDuration)
		{
			return null;
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x10B9CD4", Offset = "0x10B9CD4", VA = "0x10B9CD4")]
		private void SetLightsSpeed(float speed)
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x10B9D8C", Offset = "0x10B9D8C", VA = "0x10B9D8C")]
		public WhackMachine()
		{
		}
	}
	[Token(Token = "0x2000437")]
	public class WhackProgressionManager : ProgressionManager
	{
		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Animator robot;

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x10BAF6C", Offset = "0x10BAF6C", VA = "0x10BAF6C", Slot = "5")]
		protected override void IncrementLevel()
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x10BAFD4", Offset = "0x10BAFD4", VA = "0x10BAFD4")]
		public WhackProgressionManager()
		{
		}
	}
	[Token(Token = "0x2000438")]
	public class WhackTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider _collider;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<GameObject> gameObjects;

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x10BB03C", Offset = "0x10BB03C", VA = "0x10BB03C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x10BB0A4", Offset = "0x10BB0A4", VA = "0x10BB0A4")]
		public bool HasObjectInside(GameObject gj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x10BB10C", Offset = "0x10BB10C", VA = "0x10BB10C")]
		public bool HasAnyObjectInside()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x10BB168", Offset = "0x10BB168", VA = "0x10BB168")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x10BB228", Offset = "0x10BB228", VA = "0x10BB228")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x10BB2E8", Offset = "0x10BB2E8", VA = "0x10BB2E8")]
		public void AllowHit(bool value)
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x10BB3A0", Offset = "0x10BB3A0", VA = "0x10BB3A0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x10BB3F8", Offset = "0x10BB3F8", VA = "0x10BB3F8")]
		public WhackTrigger()
		{
		}
	}
	[Token(Token = "0x2000439")]
	public class WhackTutorial : MonoBehaviour
	{
		[Token(Token = "0x20007F8")]
		public enum Step
		{
			[Token(Token = "0x4002D0B")]
			Welcoming,
			[Token(Token = "0x4002D0C")]
			Hitting,
			[Token(Token = "0x4002D0D")]
			Positions,
			[Token(Token = "0x4002D0E")]
			Pratice,
			[Token(Token = "0x4002D0F")]
			Farewell,
			[Token(Token = "0x4002D10")]
			None
		}

		[Token(Token = "0x20007F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73574", Offset = "0xB73574")]
		private sealed class <Step2_Coroutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WhackTutorial <>4__this;

			[Token(Token = "0x1700057A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031EF")]
				[Address(RVA = "0x10BC740", Offset = "0x10BC740", VA = "0x10BC740", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031F1")]
				[Address(RVA = "0x10BC7AC", Offset = "0x10BC7AC", VA = "0x10BC7AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031EC")]
			[Address(RVA = "0x10BC128", Offset = "0x10BC128", VA = "0x10BC128")]
			[DebuggerHidden]
			public <Step2_Coroutine>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60031ED")]
			[Address(RVA = "0x10BC670", Offset = "0x10BC670", VA = "0x10BC670", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031EE")]
			[Address(RVA = "0x10BC674", Offset = "0x10BC674", VA = "0x10BC674", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031F0")]
			[Address(RVA = "0x10BC748", Offset = "0x10BC748", VA = "0x10BC748", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73584", Offset = "0xB73584")]
		private sealed class <Step2Timeout_Coroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float timeToWait;

			[Token(Token = "0x4002D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WhackTutorial <>4__this;

			[Token(Token = "0x4002D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <frameCount>5__2;

			[Token(Token = "0x4002D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <i>5__3;

			[Token(Token = "0x1700057C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031F5")]
				[Address(RVA = "0x10BC5FC", Offset = "0x10BC5FC", VA = "0x10BC5FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031F7")]
				[Address(RVA = "0x10BC668", Offset = "0x10BC668", VA = "0x10BC668", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031F2")]
			[Address(RVA = "0x10BC154", Offset = "0x10BC154", VA = "0x10BC154")]
			[DebuggerHidden]
			public <Step2Timeout_Coroutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60031F3")]
			[Address(RVA = "0x10BC4B8", Offset = "0x10BC4B8", VA = "0x10BC4B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031F4")]
			[Address(RVA = "0x10BC4BC", Offset = "0x10BC4BC", VA = "0x10BC4BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031F6")]
			[Address(RVA = "0x10BC604", Offset = "0x10BC604", VA = "0x10BC604", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73594", Offset = "0xB73594")]
		private sealed class <Step3_Coroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float timeToWait;

			[Token(Token = "0x4002D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WhackTutorial <>4__this;

			[Token(Token = "0x4002D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <frameCount>5__2;

			[Token(Token = "0x4002D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <index>5__3;

			[Token(Token = "0x4002D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <count>5__4;

			[Token(Token = "0x4002D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <i>5__5;

			[Token(Token = "0x1700057E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031FB")]
				[Address(RVA = "0x10BCC14", Offset = "0x10BCC14", VA = "0x10BCC14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031FD")]
				[Address(RVA = "0x10BCC80", Offset = "0x10BCC80", VA = "0x10BCC80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031F8")]
			[Address(RVA = "0x10BC180", Offset = "0x10BC180", VA = "0x10BC180")]
			[DebuggerHidden]
			public <Step3_Coroutine>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60031F9")]
			[Address(RVA = "0x10BC7B4", Offset = "0x10BC7B4", VA = "0x10BC7B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031FA")]
			[Address(RVA = "0x10BC7B8", Offset = "0x10BC7B8", VA = "0x10BC7B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031FC")]
			[Address(RVA = "0x10BCC1C", Offset = "0x10BCC1C", VA = "0x10BCC1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB735A4", Offset = "0xB735A4")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4002D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int currentHits;

			[Token(Token = "0x4002D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WhackJoint joint;

			[Token(Token = "0x4002D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int maxHits;

			[Token(Token = "0x4002D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WhackTutorial <>4__this;

			[Token(Token = "0x4002D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeToWait;

			[Token(Token = "0x60031FE")]
			[Address(RVA = "0x10BC1AC", Offset = "0x10BC1AC", VA = "0x10BC1AC")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x60031FF")]
			[Address(RVA = "0x10BC290", Offset = "0x10BC290", VA = "0x10BC290")]
			internal void <Step4>b__0(bool wasHit)
			{
			}
		}

		[Token(Token = "0x20007FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB735B4", Offset = "0xB735B4")]
		private sealed class <Step4_Coroutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WhackTutorial <>4__this;

			[Token(Token = "0x4002D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WhackJoint joint;

			[Token(Token = "0x4002D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float time;

			[Token(Token = "0x4002D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<bool> callback;

			[Token(Token = "0x4002D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <interval>5__2;

			[Token(Token = "0x4002D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <timer>5__3;

			[Token(Token = "0x17000580")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003203")]
				[Address(RVA = "0x10BCE24", Offset = "0x10BCE24", VA = "0x10BCE24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000581")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003205")]
				[Address(RVA = "0x10BCE90", Offset = "0x10BCE90", VA = "0x10BCE90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003200")]
			[Address(RVA = "0x10BC24C", Offset = "0x10BC24C", VA = "0x10BC24C")]
			[DebuggerHidden]
			public <Step4_Coroutine>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6003201")]
			[Address(RVA = "0x10BCC88", Offset = "0x10BCC88", VA = "0x10BCC88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003202")]
			[Address(RVA = "0x10BCC8C", Offset = "0x10BCC8C", VA = "0x10BCC8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003204")]
			[Address(RVA = "0x10BCE2C", Offset = "0x10BCE2C", VA = "0x10BCE2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TutorialController _tutorialController;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WhackMachine machine;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Step currentStep;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static WhackTutorial instance;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB7DBF0", Offset = "0xB7DBF0")]
		private float step2TimeInterval;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB7DC30", Offset = "0xB7DC30")]
		private float step3TimeInterval;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB7DC70", Offset = "0xB7DC70")]
		private float step4TimeInterval;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB7DCB0", Offset = "0xB7DCB0")]
		private int step4hits;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float minIntervalBetweenMoles;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float maxIntervalBetweenMoles;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Animator robot;

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x10BB400", Offset = "0x10BB400", VA = "0x10BB400")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x10BB5D8", Offset = "0x10BB5D8", VA = "0x10BB5D8")]
		private void GameController_TutorialStart(GameController sender)
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x10BB7B4", Offset = "0x10BB7B4", VA = "0x10BB7B4")]
		private void GameController_TutorialStop(GameController sender)
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x10BB82C", Offset = "0x10BB82C", VA = "0x10BB82C")]
		private void GameController_TutorialPaused(GameController sender, bool paused, SceneStatusType statusType)
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x10BB84C", Offset = "0x10BB84C", VA = "0x10BB84C")]
		private void GameController_WillUnload(GameController sender)
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x10BB920", Offset = "0x10BB920", VA = "0x10BB920")]
		private void TutorialController_OnTutorialEnded(TutorialController sender)
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x10BB740", Offset = "0x10BB740", VA = "0x10BB740")]
		private void ResetTutorial()
		{
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x10BB994", Offset = "0x10BB994", VA = "0x10BB994")]
		private void TutorialController_StepInstructionsStart(TutorialController sender, TutorialStep step)
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x10BBAA8", Offset = "0x10BBAA8", VA = "0x10BBAA8")]
		private void TutorialController_StepInstructionsEnd(TutorialController sender, TutorialStep step)
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x10BBD78", Offset = "0x10BBD78", VA = "0x10BBD78")]
		public static void Score(WhackJoint joint, bool positive, bool minor = false)
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x10BC080", Offset = "0x10BC080", VA = "0x10BC080")]
		public static void Step3_AlternativeErrorMessage()
		{
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x10BBA34", Offset = "0x10BBA34", VA = "0x10BBA34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB89EC4", Offset = "0xB89EC4")]
		private IEnumerator Step2_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x10BBB3C", Offset = "0x10BBB3C", VA = "0x10BBB3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB89F28", Offset = "0xB89F28")]
		private IEnumerator Step2Timeout_Coroutine(float timeToWait)
		{
			return null;
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x10BBBC0", Offset = "0x10BBBC0", VA = "0x10BBBC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB89F8C", Offset = "0xB89F8C")]
		private IEnumerator Step3_Coroutine(float timeToWait)
		{
			return null;
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x10BBC44", Offset = "0x10BBC44", VA = "0x10BBC44")]
		private void Step4(float timeToWait, int currentHits, int maxHits)
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x10BC1B4", Offset = "0x10BC1B4", VA = "0x10BC1B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB89FF0", Offset = "0xB89FF0")]
		private IEnumerator Step4_Coroutine(WhackJoint joint, float time, Action<bool> callback)
		{
			return null;
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x10BC278", Offset = "0x10BC278", VA = "0x10BC278")]
		public WhackTutorial()
		{
		}
	}
}
namespace AttentionLab.MiniGames.React
{
	[Token(Token = "0x200043A")]
	public class PortalShapesData
	{
		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> left;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> right;

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x138EEDC", Offset = "0x138EEDC", VA = "0x138EEDC")]
		public PortalShapesData(List<int> leftPortalShapes, List<int> rightPortalShapes)
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class PortalColorData
	{
		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int left;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int right;

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x138E9D8", Offset = "0x138E9D8", VA = "0x138E9D8")]
		public PortalColorData(int leftPortalColor, int rightPortalColor)
		{
		}
	}
	[Token(Token = "0x200043C")]
	public class PortalsData
	{
		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int level;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PortalColorData colors;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PortalShapesData shapes;

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x138EF14", Offset = "0x138EF14", VA = "0x138EF14")]
		public PortalsData(int level, int leftColor, int rightColor, List<int> leftShapes, List<int> rightShapes)
		{
		}
	}
	[Token(Token = "0x200043D")]
	public class PortalsReactMoment : ReactMoment
	{
		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly int _level;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly ColorType _leftColor;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ColorType _rightColor;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<ShapeType> _leftShapes;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly List<ShapeType> _rightShapes;

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x138EFD8", Offset = "0x138EFD8", VA = "0x138EFD8")]
		public PortalsReactMoment(TargetConfig leftTarget, TargetConfig rightTarget, int level)
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x138F108", Offset = "0x138F108", VA = "0x138F108", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x200043E")]
	public abstract class ReactMoment : GameMoment
	{
		[Token(Token = "0x6001FDB")]
		public abstract override void SetValues();

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x138F2F0", Offset = "0x138F2F0", VA = "0x138F2F0")]
		protected int ParseLane(int lane)
		{
			return default(int);
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x138F30C", Offset = "0x138F30C", VA = "0x138F30C")]
		protected int ParseHand(HandType hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x138F32C", Offset = "0x138F32C", VA = "0x138F32C")]
		public int ParseHandSide(HandSideType sideType)
		{
			return default(int);
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x138F344", Offset = "0x138F344", VA = "0x138F344")]
		protected int ParseShape(ShapeType type)
		{
			return default(int);
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x138F2B0", Offset = "0x138F2B0", VA = "0x138F2B0")]
		protected int ParseShapeColor(ColorType color)
		{
			return default(int);
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x138F100", Offset = "0x138F100", VA = "0x138F100")]
		protected ReactMoment()
		{
		}
	}
	[Token(Token = "0x200043F")]
	public class ShapeReactionData
	{
		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int shape;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int color;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int lane;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int hand;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int racket_side;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool success;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool distractor;

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x1395F68", Offset = "0x1395F68", VA = "0x1395F68")]
		public ShapeReactionData(int shapeId, int colorId, int laneId, int handId, int racketSide, bool isSuccess, bool isDistractor)
		{
		}
	}
	[Token(Token = "0x2000440")]
	public class ShapeReactionReactMoment : ReactMoment
	{
		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ShapeType _shapeType;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly ColorType _colorType;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly HandType _handType;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private readonly HandSideType _handSideType;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly int _lane;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private readonly bool _isSuccess;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private readonly bool _isDistractor;

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x1395FDC", Offset = "0x1395FDC", VA = "0x1395FDC")]
		public ShapeReactionReactMoment(ReactObject reactObject, bool success)
		{
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x139605C", Offset = "0x139605C", VA = "0x139605C", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x2000441")]
	public class DropArea : MonoBehaviour
	{
		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7DD10", Offset = "0xB7DD10")]
		public float _suctionForce;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7DD48", Offset = "0xB7DD48")]
		public Target associatedTarget;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BoxCollider _boxCollider;

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0xF7E9CC", Offset = "0xF7E9CC", VA = "0xF7E9CC")]
		public bool IsWithinBounds(Transform target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0xF7EC04", Offset = "0xF7EC04", VA = "0xF7EC04")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0xF7ECE8", Offset = "0xF7ECE8", VA = "0xF7ECE8")]
		public DropArea()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class GameObjectSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7DD80", Offset = "0xB7DD80")]
		[SerializeField]
		private ObjectSpawner _objectSpawner;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReactProgressionManager _progressionManager;

		[Token(Token = "0x1700034B")]
		public ObjectSpawner ObjectSpawner
		{
			[Token(Token = "0x6001FE8")]
			[Address(RVA = "0xF80718", Offset = "0xF80718", VA = "0xF80718")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034C")]
		public float ObjectTimeToTarget
		{
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0xF7FE30", Offset = "0xF7FE30", VA = "0xF7FE30")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0xF80720", Offset = "0xF80720", VA = "0xF80720")]
		private void ObjectSpawner_OnTimeToSpawnObject(ObjectSpawner objectSpawner)
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0xF807AC", Offset = "0xF807AC", VA = "0xF807AC")]
		private void ObjectSpawner_OnObjectPaused(ReactObject reactObject, bool paused)
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0xF8084C", Offset = "0xF8084C", VA = "0xF8084C")]
		public void SetProgressionManager(ReactProgressionManager reactProgression)
		{
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0xF7F9E8", Offset = "0xF7F9E8", VA = "0xF7F9E8")]
		public void StartSpawning()
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0xF7F990", Offset = "0xF7F990", VA = "0xF7F990")]
		public void StopSpawning()
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0xF80854", Offset = "0xF80854", VA = "0xF80854")]
		public GameObjectSpawner()
		{
		}
	}
	[Token(Token = "0x2000443")]
	public enum ColorType
	{
		[Token(Token = "0x4001AA9")]
		Red,
		[Token(Token = "0x4001AAA")]
		Blue,
		[Token(Token = "0x4001AAB")]
		Yellow,
		[Token(Token = "0x4001AAC")]
		Green,
		[Token(Token = "0x4001AAD")]
		Orange,
		[Token(Token = "0x4001AAE")]
		Pink
	}
	[Token(Token = "0x2000444")]
	public static class ColorTypeHelper
	{
		[Token(Token = "0x20007FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB735C4", Offset = "0xB735C4")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<ColorType> colorsToExclude;

			[Token(Token = "0x6003206")]
			[Address(RVA = "0xF7E178", Offset = "0xF7E178", VA = "0xF7E178")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003207")]
			[Address(RVA = "0xF7E180", Offset = "0xF7E180", VA = "0xF7E180")]
			internal bool <GetRandom>b__0(ColorType x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0xF7DFE8", Offset = "0xF7DFE8", VA = "0xF7DFE8")]
		public static ColorType GetRandom(List<ColorType> colorsToExclude)
		{
			return default(ColorType);
		}
	}
	[Token(Token = "0x2000445")]
	public class ColorTypeHolder : MonoBehaviour
	{
		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7DDCC", Offset = "0xB7DDCC")]
		[SerializeField]
		private Material _material;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<ColorType, Material> _materials;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<ColorType, Color> _colors;

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0xF7E1F8", Offset = "0xF7E1F8", VA = "0xF7E1F8")]
		public Material GetMaterial(ColorType colorType)
		{
			return null;
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0xF7E34C", Offset = "0xF7E34C", VA = "0xF7E34C")]
		public Color GetColor(ColorType colorType)
		{
			return default(Color);
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0xF7E4D4", Offset = "0xF7E4D4", VA = "0xF7E4D4")]
		public Color GetPortalColor(ColorType colorType)
		{
			return default(Color);
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0xF7E65C", Offset = "0xF7E65C", VA = "0xF7E65C")]
		public ColorTypeHolder()
		{
		}
	}
	[Token(Token = "0x2000446")]
	public enum ConfigActionType
	{
		[Token(Token = "0x4001AB3")]
		NotDefined,
		[Token(Token = "0x4001AB4")]
		NoChange,
		[Token(Token = "0x4001AB5")]
		Increment,
		[Token(Token = "0x4001AB6")]
		Decrement,
		[Token(Token = "0x4001AB7")]
		Set,
		[Token(Token = "0x4001AB8")]
		Multiply,
		[Token(Token = "0x4001AB9")]
		Divide
	}
	[Token(Token = "0x2000447")]
	public class ConfigItem
	{
		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DE18", Offset = "0xB7DE18")]
		private List<TargetType> <Targets>k__BackingField;

		[Token(Token = "0x1700034D")]
		public List<TargetType> Targets
		{
			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0xF7E664", Offset = "0xF7E664", VA = "0xF7E664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A054", Offset = "0xB8A054")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0xF7E66C", Offset = "0xF7E66C", VA = "0xF7E66C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A064", Offset = "0xB8A064")]
			set
			{
			}
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0xF7E674", Offset = "0xF7E674", VA = "0xF7E674")]
		public ConfigItem()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public class CounterLabel : MonoBehaviour
	{
		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7DE28", Offset = "0xB7DE28")]
		[SerializeField]
		private TextMeshPro _label;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ColorTypeHolder _colors;

		[Token(Token = "0x4001ABD")]
		private const string LABEL_FORMAT = "{0} / {1}";

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _total;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _count;

		[Token(Token = "0x1700034E")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0xF7E70C", Offset = "0xF7E70C", VA = "0xF7E70C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700034F")]
		public int Total
		{
			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0xF7E730", Offset = "0xF7E730", VA = "0xF7E730")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0xF7E738", Offset = "0xF7E738", VA = "0xF7E738")]
			set
			{
			}
		}

		[Token(Token = "0x17000350")]
		public int Count
		{
			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0xF7E804", Offset = "0xF7E804", VA = "0xF7E804")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0xF7E80C", Offset = "0xF7E80C", VA = "0xF7E80C")]
			set
			{
			}
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0xF7E828", Offset = "0xF7E828", VA = "0xF7E828")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0xF7E85C", Offset = "0xF7E85C", VA = "0xF7E85C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0xF7E864", Offset = "0xF7E864", VA = "0xF7E864")]
		public void SetColor(ColorType colorType)
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0xF7E894", Offset = "0xF7E894", VA = "0xF7E894")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0xF7E8D0", Offset = "0xF7E8D0", VA = "0xF7E8D0")]
		public void SetGradient(ColorType colorStart, ColorType colorEnd)
		{
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0xF7E740", Offset = "0xF7E740", VA = "0xF7E740")]
		private void UpdateLabel()
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0xF7E9C4", Offset = "0xF7E9C4", VA = "0xF7E9C4")]
		public CounterLabel()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public class HandPusher : MonoBehaviour
	{
		[Token(Token = "0x20007FF")]
		public enum CollisionSide
		{
			[Token(Token = "0x4002D31")]
			Undefined,
			[Token(Token = "0x4002D32")]
			Left,
			[Token(Token = "0x4002D33")]
			Top,
			[Token(Token = "0x4002D34")]
			Right,
			[Token(Token = "0x4002D35")]
			Bottom,
			[Token(Token = "0x4002D36")]
			Front,
			[Token(Token = "0x4002D37")]
			Back
		}

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7DE84", Offset = "0xB7DE84")]
		public HandType _handType;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool _ignoreAxisX;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool _ignoreAxisY;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool _ignoreAxisZ;

		[Token(Token = "0x4001AC4")]
		private const float MIN_HANDSIDE_DOT_PRODUCT = 0.05f;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _prevPosition;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _movementVector;

		[Token(Token = "0x17000351")]
		public HandType HandType
		{
			[Token(Token = "0x6002004")]
			[Address(RVA = "0xF8085C", Offset = "0xF8085C", VA = "0xF8085C")]
			get
			{
				return default(HandType);
			}
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0xF80864", Offset = "0xF80864", VA = "0xF80864")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0xF80934", Offset = "0xF80934", VA = "0xF80934")]
		private void Update()
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0xF80A24", Offset = "0xF80A24", VA = "0xF80A24")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0xF80C68", Offset = "0xF80C68", VA = "0xF80C68")]
		private bool AllowsHandType(ReactObject reactObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0xF80CA0", Offset = "0xF80CA0", VA = "0xF80CA0")]
		private bool IsPushValid(ReactObject reactObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0xF80EDC", Offset = "0xF80EDC", VA = "0xF80EDC")]
		private int GetForce()
		{
			return default(int);
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0xF80D34", Offset = "0xF80D34", VA = "0xF80D34")]
		private HandSideType GetHandSide(ReactObject reactObject)
		{
			return default(HandSideType);
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0xF80F04", Offset = "0xF80F04", VA = "0xF80F04")]
		public HandPusher()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public enum HandSideType
	{
		[Token(Token = "0x4001AC8")]
		NotDefined,
		[Token(Token = "0x4001AC9")]
		Front,
		[Token(Token = "0x4001ACA")]
		Back,
		[Token(Token = "0x4001ACB")]
		Edge
	}
	[Token(Token = "0x200044B")]
	public enum HandType
	{
		[Token(Token = "0x4001ACD")]
		Left,
		[Token(Token = "0x4001ACE")]
		Right,
		[Token(Token = "0x4001ACF")]
		None,
		[Token(Token = "0x4001AD0")]
		Both
	}
	[Token(Token = "0x200044C")]
	public enum InteractionType
	{
		[Token(Token = "0x4001AD2")]
		Grab,
		[Token(Token = "0x4001AD3")]
		Shoot,
		[Token(Token = "0x4001AD4")]
		Push
	}
	[Token(Token = "0x200044D")]
	public class ObjectConfig
	{
		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DEBC", Offset = "0xB7DEBC")]
		private ShapeType <ShapeType>k__BackingField;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DECC", Offset = "0xB7DECC")]
		private ColorType <ColorType>k__BackingField;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DEDC", Offset = "0xB7DEDC")]
		private bool <IsDistractor>k__BackingField;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DEEC", Offset = "0xB7DEEC")]
		private bool <IsCombinable>k__BackingField;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DEFC", Offset = "0xB7DEFC")]
		private float <Speed>k__BackingField;

		[Token(Token = "0x17000352")]
		public ShapeType ShapeType
		{
			[Token(Token = "0x600200D")]
			[Address(RVA = "0x138C2F4", Offset = "0x138C2F4", VA = "0x138C2F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A074", Offset = "0xB8A074")]
			get
			{
				return default(ShapeType);
			}
			[Token(Token = "0x600200E")]
			[Address(RVA = "0x138C2FC", Offset = "0x138C2FC", VA = "0x138C2FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A084", Offset = "0xB8A084")]
			private set
			{
			}
		}

		[Token(Token = "0x17000353")]
		public ColorType ColorType
		{
			[Token(Token = "0x600200F")]
			[Address(RVA = "0x138C304", Offset = "0x138C304", VA = "0x138C304")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A094", Offset = "0xB8A094")]
			get
			{
				return default(ColorType);
			}
			[Token(Token = "0x6002010")]
			[Address(RVA = "0x138C30C", Offset = "0x138C30C", VA = "0x138C30C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A0A4", Offset = "0xB8A0A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000354")]
		public bool IsDistractor
		{
			[Token(Token = "0x6002011")]
			[Address(RVA = "0x138C314", Offset = "0x138C314", VA = "0x138C314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A0B4", Offset = "0xB8A0B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002012")]
			[Address(RVA = "0x138C31C", Offset = "0x138C31C", VA = "0x138C31C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A0C4", Offset = "0xB8A0C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000355")]
		public bool IsCombinable
		{
			[Token(Token = "0x6002013")]
			[Address(RVA = "0x138C328", Offset = "0x138C328", VA = "0x138C328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A0D4", Offset = "0xB8A0D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002014")]
			[Address(RVA = "0x138C330", Offset = "0x138C330", VA = "0x138C330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A0E4", Offset = "0xB8A0E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000356")]
		public float Speed
		{
			[Token(Token = "0x6002015")]
			[Address(RVA = "0x138C33C", Offset = "0x138C33C", VA = "0x138C33C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A0F4", Offset = "0xB8A0F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002016")]
			[Address(RVA = "0x138C344", Offset = "0x138C344", VA = "0x138C344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A104", Offset = "0xB8A104")]
			set
			{
			}
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x138C34C", Offset = "0x138C34C", VA = "0x138C34C")]
		public ObjectConfig(ShapeType shapeType, ColorType colorType)
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x138C394", Offset = "0x138C394", VA = "0x138C394")]
		public ObjectConfig(ShapeType shapeType, ColorType colorType, float speed)
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x138C3E8", Offset = "0x138C3E8", VA = "0x138C3E8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x138C47C", Offset = "0x138C47C", VA = "0x138C47C")]
		public string Print()
		{
			return null;
		}
	}
	[Token(Token = "0x200044E")]
	public class ObjectSpawner : MonoBehaviour
	{
		[Token(Token = "0x2000800")]
		public delegate void OnTimeLeftToSpawnObject(ObjectSpawner sender, float timeLeft);

		[Token(Token = "0x2000801")]
		public delegate void TimeToSpawnObject(ObjectSpawner sender);

		[Token(Token = "0x2000802")]
		public delegate void ObjectSpawned(ReactObject reactObject);

		[Token(Token = "0x2000803")]
		public delegate void ObjectPaused(ReactObject reactObject, bool paused);

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7DF0C", Offset = "0xB7DF0C")]
		[SerializeField]
		private ShapeTypeHolder _shapesHolder;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ColorTypeHolder _colorsHolder;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _movementTarget;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ExplosionSpawner _explosionsSpawner;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VfxSpawner _trailsSpawner;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ObjectSpawnerStream[] _streams;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public OnTimeLeftToSpawnObject TimeLeftToSpawnObject;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TimeToSpawnObject OnTimeToSpawnObject;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ObjectSpawned OnObjectSpawned;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ObjectPaused OnObjectPaused;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DFA8", Offset = "0xB7DFA8")]
		private int <NextStreamIndex>k__BackingField;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DFB8", Offset = "0xB7DFB8")]
		private float <NextSpawnTime>k__BackingField;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _initialPosition;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<ReactObject> _instancesPool;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<ReactObject> _instancesActive;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _lastStreamIndex;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int _sameStreamResult;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _sameStreamResultMax;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float _lastInstanceTime;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _currentInstanceDelay;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float _pauseSpeedPercent;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float _baseSpawnDelay;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float _timeSinceLastInstance;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float _pauseSpawnDelay;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float _pauseStartTime;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DFC8", Offset = "0xB7DFC8")]
		private ReactObject <LastObject>k__BackingField;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int _count;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float _spawnDelayAdjustedToPause;

		[Token(Token = "0x17000357")]
		public bool IsSpawning
		{
			[Token(Token = "0x600201B")]
			[Address(RVA = "0x138C56C", Offset = "0x138C56C", VA = "0x138C56C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000358")]
		public int NextStreamIndex
		{
			[Token(Token = "0x600201C")]
			[Address(RVA = "0x138C574", Offset = "0x138C574", VA = "0x138C574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A114", Offset = "0xB8A114")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600201D")]
			[Address(RVA = "0x138C57C", Offset = "0x138C57C", VA = "0x138C57C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A124", Offset = "0xB8A124")]
			private set
			{
			}
		}

		[Token(Token = "0x17000359")]
		public float NextSpawnTime
		{
			[Token(Token = "0x600201E")]
			[Address(RVA = "0x138C584", Offset = "0x138C584", VA = "0x138C584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A134", Offset = "0xB8A134")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600201F")]
			[Address(RVA = "0x138C58C", Offset = "0x138C58C", VA = "0x138C58C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A144", Offset = "0xB8A144")]
			private set
			{
			}
		}

		[Token(Token = "0x1700035A")]
		public float CurrentSpawnDelay
		{
			[Token(Token = "0x6002020")]
			[Address(RVA = "0x138C594", Offset = "0x138C594", VA = "0x138C594")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700035B")]
		public float StreamSize
		{
			[Token(Token = "0x6002021")]
			[Address(RVA = "0x138C5A4", Offset = "0x138C5A4", VA = "0x138C5A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700035C")]
		public ReactObject LastObject
		{
			[Token(Token = "0x6002022")]
			[Address(RVA = "0x138C6D4", Offset = "0x138C6D4", VA = "0x138C6D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A154", Offset = "0xB8A154")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002023")]
			[Address(RVA = "0x138C6DC", Offset = "0x138C6DC", VA = "0x138C6DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A164", Offset = "0xB8A164")]
			private set
			{
			}
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x138C6E4", Offset = "0x138C6E4", VA = "0x138C6E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x138C848", Offset = "0x138C848", VA = "0x138C848")]
		private void Start()
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x138C884", Offset = "0x138C884", VA = "0x138C884")]
		private void Update()
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x138D0A0", Offset = "0x138D0A0", VA = "0x138D0A0")]
		public void Config(ReactGameConfig reactConfig)
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x138D0C0", Offset = "0x138D0C0", VA = "0x138D0C0")]
		public void UpdateSpawnDelay(float delay, float variation)
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x138D0C8", Offset = "0x138D0C8", VA = "0x138D0C8")]
		public void StartSpawning()
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x138D238", Offset = "0x138D238", VA = "0x138D238")]
		public void SpawnObject(ObjectConfig objectConfig)
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x138DE70", Offset = "0x138DE70", VA = "0x138DE70")]
		public void StopSpawning()
		{
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x138DEA4", Offset = "0x138DEA4", VA = "0x138DEA4")]
		public void Pause(bool paused)
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x138E448", Offset = "0x138E448", VA = "0x138E448")]
		public void ObjectWasDestroyed(ReactObject reactObject)
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x138E558", Offset = "0x138E558", VA = "0x138E558")]
		public void AdjustToHeight(float height)
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x138C70C", Offset = "0x138C70C", VA = "0x138C70C")]
		private int GetRandomStreamIndex(int indexToExclude = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x138D0FC", Offset = "0x138D0FC", VA = "0x138D0FC")]
		private void DestroyAllObjects()
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x138E78C", Offset = "0x138E78C", VA = "0x138E78C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x138E7B8", Offset = "0x138E7B8", VA = "0x138E7B8")]
		public ObjectSpawner()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public class ObjectSpawnerStream : MonoBehaviour
	{
		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7DFD8", Offset = "0xB7DFD8")]
		[SerializeField]
		private float _radius;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _target;

		[Token(Token = "0x1700035D")]
		public float Size
		{
			[Token(Token = "0x6002033")]
			[Address(RVA = "0x138C5E8", Offset = "0x138C5E8", VA = "0x138C5E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x138E9D0", Offset = "0x138E9D0", VA = "0x138E9D0")]
		public ObjectSpawnerStream()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public class PortalDevice : MonoBehaviour
	{
		[Token(Token = "0x2000804")]
		public delegate void ExtendCompleted();

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator _deviceAnimator;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ExtendCompleted _callback;

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x138EA10", Offset = "0x138EA10", VA = "0x138EA10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x138EA68", Offset = "0x138EA68", VA = "0x138EA68")]
		public void ExtendBelt(ExtendCompleted callback)
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x138EBEC", Offset = "0x138EBEC", VA = "0x138EBEC")]
		public void CollapseBelt(ExtendCompleted callback)
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x138EC58", Offset = "0x138EC58", VA = "0x138EC58")]
		public void InvokeCallback()
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x138EE84", Offset = "0x138EE84", VA = "0x138EE84")]
		public PortalDevice()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class ReactObject : MonoBehaviour
	{
		[Token(Token = "0x2000805")]
		public delegate void Pushed(ReactObject sender, HandPusher.CollisionSide[] sides);

		[Token(Token = "0x2000806")]
		public delegate void Thrown(ReactObject sender, Vector3 direction);

		[Token(Token = "0x2000807")]
		public delegate void TargetDistanceUpdate(ReactObject sender, float distance);

		[Token(Token = "0x2000808")]
		public delegate void TargetReached(ReactObject sender, Transform Target);

		[Token(Token = "0x2000809")]
		public delegate void Killed(ReactObject sender, bool clearScene);

		[Token(Token = "0x200080A")]
		public delegate void WillDestroy(ReactObject sender);

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Pushed OnPushed;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Thrown OnThrown;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TargetDistanceUpdate OnTargetDistanceUpdate;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TargetReached OnTargetReached;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Killed OnKilled;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WillDestroy OnWillDestroy;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E034", Offset = "0xB7E034")]
		private string <Identifier>k__BackingField;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E044", Offset = "0xB7E044")]
		private ShapeType <ShapeType>k__BackingField;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E054", Offset = "0xB7E054")]
		private ColorType <ColorType>k__BackingField;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E064", Offset = "0xB7E064")]
		private TargetType <TargetType>k__BackingField;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E074", Offset = "0xB7E074")]
		private HandType <AllowedHandType>k__BackingField;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E084", Offset = "0xB7E084")]
		private HandType <InteractionHandType>k__BackingField;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E094", Offset = "0xB7E094")]
		private HandSideType <HandPushSide>k__BackingField;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E0A4", Offset = "0xB7E0A4")]
		private int <StreamIndex>k__BackingField;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E0B4", Offset = "0xB7E0B4")]
		private bool <WasThrown>k__BackingField;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E0C4", Offset = "0xB7E0C4")]
		private bool <WasPushed>k__BackingField;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E0D4", Offset = "0xB7E0D4")]
		private bool <IsDistractor>k__BackingField;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E0E4", Offset = "0xB7E0E4")]
		private bool <ToKill>k__BackingField;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E0F4", Offset = "0xB7E0F4")]
		private ExplosionSpawner <ExplosionsSpawner>k__BackingField;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E104", Offset = "0xB7E104")]
		private VfxSpawner <TrailsSpawner>k__BackingField;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MeshFilter _meshFilter;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform _initialParent;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _target;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 _targetPosition;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 _movementDirection;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 _initialMeshPosition;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 _targetMeshPosition;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float _speed;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float _idleOffset;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float _currentSpeed;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _targetSpeed;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private VfxEffect _trailEffect;

		[Token(Token = "0x1700035E")]
		public string Identifier
		{
			[Token(Token = "0x600203A")]
			[Address(RVA = "0x138F364", Offset = "0x138F364", VA = "0x138F364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A174", Offset = "0xB8A174")]
			get
			{
				return null;
			}
			[Token(Token = "0x600203B")]
			[Address(RVA = "0x138F36C", Offset = "0x138F36C", VA = "0x138F36C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A184", Offset = "0xB8A184")]
			set
			{
			}
		}

		[Token(Token = "0x1700035F")]
		public ShapeType ShapeType
		{
			[Token(Token = "0x600203C")]
			[Address(RVA = "0x138F374", Offset = "0x138F374", VA = "0x138F374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A194", Offset = "0xB8A194")]
			get
			{
				return default(ShapeType);
			}
			[Token(Token = "0x600203D")]
			[Address(RVA = "0x138F37C", Offset = "0x138F37C", VA = "0x138F37C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A1A4", Offset = "0xB8A1A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000360")]
		public ColorType ColorType
		{
			[Token(Token = "0x600203E")]
			[Address(RVA = "0x138F384", Offset = "0x138F384", VA = "0x138F384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A1B4", Offset = "0xB8A1B4")]
			get
			{
				return default(ColorType);
			}
			[Token(Token = "0x600203F")]
			[Address(RVA = "0x138F38C", Offset = "0x138F38C", VA = "0x138F38C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A1C4", Offset = "0xB8A1C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000361")]
		public TargetType TargetType
		{
			[Token(Token = "0x6002040")]
			[Address(RVA = "0x138F394", Offset = "0x138F394", VA = "0x138F394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A1D4", Offset = "0xB8A1D4")]
			get
			{
				return default(TargetType);
			}
			[Token(Token = "0x6002041")]
			[Address(RVA = "0x138F39C", Offset = "0x138F39C", VA = "0x138F39C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A1E4", Offset = "0xB8A1E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000362")]
		public HandType AllowedHandType
		{
			[Token(Token = "0x6002042")]
			[Address(RVA = "0x138F3A4", Offset = "0x138F3A4", VA = "0x138F3A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A1F4", Offset = "0xB8A1F4")]
			get
			{
				return default(HandType);
			}
			[Token(Token = "0x6002043")]
			[Address(RVA = "0x138F3AC", Offset = "0x138F3AC", VA = "0x138F3AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A204", Offset = "0xB8A204")]
			set
			{
			}
		}

		[Token(Token = "0x17000363")]
		public HandType InteractionHandType
		{
			[Token(Token = "0x6002044")]
			[Address(RVA = "0x138F3B4", Offset = "0x138F3B4", VA = "0x138F3B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A214", Offset = "0xB8A214")]
			get
			{
				return default(HandType);
			}
			[Token(Token = "0x6002045")]
			[Address(RVA = "0x138F3BC", Offset = "0x138F3BC", VA = "0x138F3BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A224", Offset = "0xB8A224")]
			set
			{
			}
		}

		[Token(Token = "0x17000364")]
		public HandSideType HandPushSide
		{
			[Token(Token = "0x6002046")]
			[Address(RVA = "0x138F3C4", Offset = "0x138F3C4", VA = "0x138F3C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A234", Offset = "0xB8A234")]
			get
			{
				return default(HandSideType);
			}
			[Token(Token = "0x6002047")]
			[Address(RVA = "0x138F3CC", Offset = "0x138F3CC", VA = "0x138F3CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A244", Offset = "0xB8A244")]
			set
			{
			}
		}

		[Token(Token = "0x17000365")]
		public int StreamIndex
		{
			[Token(Token = "0x6002048")]
			[Address(RVA = "0x138F3D4", Offset = "0x138F3D4", VA = "0x138F3D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A254", Offset = "0xB8A254")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002049")]
			[Address(RVA = "0x138F3DC", Offset = "0x138F3DC", VA = "0x138F3DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A264", Offset = "0xB8A264")]
			set
			{
			}
		}

		[Token(Token = "0x17000366")]
		public bool WasThrown
		{
			[Token(Token = "0x600204A")]
			[Address(RVA = "0x138F3E4", Offset = "0x138F3E4", VA = "0x138F3E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A274", Offset = "0xB8A274")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600204B")]
			[Address(RVA = "0x138F3EC", Offset = "0x138F3EC", VA = "0x138F3EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A284", Offset = "0xB8A284")]
			private set
			{
			}
		}

		[Token(Token = "0x17000367")]
		public bool WasPushed
		{
			[Token(Token = "0x600204C")]
			[Address(RVA = "0x138F3F8", Offset = "0x138F3F8", VA = "0x138F3F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A294", Offset = "0xB8A294")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600204D")]
			[Address(RVA = "0x138F400", Offset = "0x138F400", VA = "0x138F400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A2A4", Offset = "0xB8A2A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000368")]
		public bool IsDistractor
		{
			[Token(Token = "0x600204E")]
			[Address(RVA = "0x138F40C", Offset = "0x138F40C", VA = "0x138F40C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A2B4", Offset = "0xB8A2B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600204F")]
			[Address(RVA = "0x138F414", Offset = "0x138F414", VA = "0x138F414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A2C4", Offset = "0xB8A2C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000369")]
		public bool ToKill
		{
			[Token(Token = "0x6002050")]
			[Address(RVA = "0x138F420", Offset = "0x138F420", VA = "0x138F420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A2D4", Offset = "0xB8A2D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002051")]
			[Address(RVA = "0x138F428", Offset = "0x138F428", VA = "0x138F428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A2E4", Offset = "0xB8A2E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700036A")]
		public ExplosionSpawner ExplosionsSpawner
		{
			[Token(Token = "0x6002052")]
			[Address(RVA = "0x138F434", Offset = "0x138F434", VA = "0x138F434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A2F4", Offset = "0xB8A2F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002053")]
			[Address(RVA = "0x138F43C", Offset = "0x138F43C", VA = "0x138F43C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A304", Offset = "0xB8A304")]
			set
			{
			}
		}

		[Token(Token = "0x1700036B")]
		public VfxSpawner TrailsSpawner
		{
			[Token(Token = "0x6002054")]
			[Address(RVA = "0x138F444", Offset = "0x138F444", VA = "0x138F444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A314", Offset = "0xB8A314")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002055")]
			[Address(RVA = "0x138F44C", Offset = "0x138F44C", VA = "0x138F44C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A324", Offset = "0xB8A324")]
			set
			{
			}
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x138F454", Offset = "0x138F454", VA = "0x138F454")]
		private void Start()
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x138F570", Offset = "0x138F570", VA = "0x138F570")]
		private void Update()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x13901F8", Offset = "0x13901F8", VA = "0x13901F8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x139078C", Offset = "0x139078C", VA = "0x139078C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x138D90C", Offset = "0x138D90C", VA = "0x138D90C")]
		public void SendToTarget(Transform target, bool keepMovementDirection = true)
		{
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0x138D740", Offset = "0x138D740", VA = "0x138D740")]
		public void SetSpeed(float speed)
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x138D74C", Offset = "0x138D74C", VA = "0x138D74C")]
		public void SetMaterial(Material material)
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x138D854", Offset = "0x138D854", VA = "0x138D854")]
		public void SetMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0x138E040", Offset = "0x138E040", VA = "0x138E040")]
		public void Pause(float speedPercent)
		{
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0x138E05C", Offset = "0x138E05C", VA = "0x138E05C")]
		public void Resume()
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x13908F8", Offset = "0x13908F8", VA = "0x13908F8")]
		public void Release(bool forced = false)
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0x139092C", Offset = "0x139092C", VA = "0x139092C")]
		public void Throw(Vector3 direction, float force, HandType handType, HandSideType handSideType, bool withGravity)
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0x13911E8", Offset = "0x13911E8", VA = "0x13911E8")]
		public void Push(HandPusher.CollisionSide[] sides, HandPusher.CollisionSide[] directions)
		{
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0x1391618", Offset = "0x1391618", VA = "0x1391618")]
		public void Bounce(float force)
		{
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0x1391720", Offset = "0x1391720", VA = "0x1391720")]
		public void DestroyGameObject(bool bigExplosion)
		{
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x138E5D0", Offset = "0x138E5D0", VA = "0x138E5D0")]
		public void KillObject()
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x138D714", Offset = "0x138D714", VA = "0x138D714")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0x1390B64", Offset = "0x1390B64", VA = "0x1390B64")]
		private Color GetObjectColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x1391BDC", Offset = "0x1391BDC", VA = "0x1391BDC")]
		public ReactObject()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class ReactObjectPlaceholder : MonoBehaviour
	{
		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshFilter _meshFilter;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _speed;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _targetPosition;

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x1391F00", Offset = "0x1391F00", VA = "0x1391F00")]
		private void Awake()
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x139203C", Offset = "0x139203C", VA = "0x139203C")]
		private void Update()
		{
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x13921C0", Offset = "0x13921C0", VA = "0x13921C0")]
		public void MoveToLocalPosition(Vector3 position)
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x13921D4", Offset = "0x13921D4", VA = "0x13921D4")]
		public void SetMaterial(Material material)
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x1392298", Offset = "0x1392298", VA = "0x1392298")]
		public void SetMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x1392350", Offset = "0x1392350", VA = "0x1392350")]
		public ReactObjectPlaceholder()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class ReboundEffect : VfxEffect
	{
		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7E114", Offset = "0xB7E114")]
		[SerializeField]
		private SkinnedMeshRenderer _meshRenderer;

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x1395EBC", Offset = "0x1395EBC", VA = "0x1395EBC", Slot = "7")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x1395F58", Offset = "0x1395F58", VA = "0x1395F58")]
		public ReboundEffect()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class ShapeTile : MonoBehaviour
	{
		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7E160", Offset = "0xB7E160")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001B22")]
		private const string KEY_SHOW = "show";

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E1AC", Offset = "0xB7E1AC")]
		private ShapeType <ShapeType>k__BackingField;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator _animator;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isEnabled;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material _materialToApply;

		[Token(Token = "0x1700036C")]
		public ShapeType ShapeType
		{
			[Token(Token = "0x6002071")]
			[Address(RVA = "0x139619C", Offset = "0x139619C", VA = "0x139619C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A334", Offset = "0xB8A334")]
			get
			{
				return default(ShapeType);
			}
			[Token(Token = "0x6002072")]
			[Address(RVA = "0x13961A4", Offset = "0x13961A4", VA = "0x13961A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A344", Offset = "0xB8A344")]
			set
			{
			}
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0x13961AC", Offset = "0x13961AC", VA = "0x13961AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x1396240", Offset = "0x1396240", VA = "0x1396240")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x13962CC", Offset = "0x13962CC", VA = "0x13962CC")]
		public void SetMaterial(Material material)
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x1396348", Offset = "0x1396348", VA = "0x1396348")]
		private void Show(bool show)
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x13963B4", Offset = "0x13963B4", VA = "0x13963B4")]
		public void Animation_Enabled()
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x13963C0", Offset = "0x13963C0", VA = "0x13963C0")]
		public void Animation_Disabled()
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x139646C", Offset = "0x139646C", VA = "0x139646C")]
		public ShapeTile()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class ShapeTileHolder : MonoBehaviour
	{
		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7E1BC", Offset = "0xB7E1BC")]
		[SerializeField]
		private ColorTypeHolder _colorTypeHolder;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ShapeTile _prefab;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material _material;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, Material> _materials;

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x1396474", Offset = "0x1396474", VA = "0x1396474")]
		public ShapeTile GetInstance(ShapeType shapeType)
		{
			return null;
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x1396504", Offset = "0x1396504", VA = "0x1396504")]
		public Material GetMaterial(ColorType colorType, ShapeType shapeType)
		{
			return null;
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x13966CC", Offset = "0x13966CC", VA = "0x13966CC")]
		public ShapeTileHolder()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public enum ShapeType
	{
		[Token(Token = "0x4001B2C")]
		Cube,
		[Token(Token = "0x4001B2D")]
		Cylinder,
		[Token(Token = "0x4001B2E")]
		Prism,
		[Token(Token = "0x4001B2F")]
		Circle,
		[Token(Token = "0x4001B30")]
		Pyramid,
		[Token(Token = "0x4001B31")]
		Plus
	}
	[Token(Token = "0x2000457")]
	public static class ShapeTypeHelper
	{
		[Token(Token = "0x200080B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB735D4", Offset = "0xB735D4")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<ShapeType> shapesToExclude;

			[Token(Token = "0x6003234")]
			[Address(RVA = "0x13966D4", Offset = "0x13966D4", VA = "0x13966D4")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003235")]
			[Address(RVA = "0x13966DC", Offset = "0x13966DC", VA = "0x13966DC")]
			internal bool <GetRandom>b__0(ShapeType x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x13945B4", Offset = "0x13945B4", VA = "0x13945B4")]
		public static ShapeType GetRandom(List<ShapeType> shapesToExclude)
		{
			return default(ShapeType);
		}
	}
	[Token(Token = "0x2000458")]
	public class ShapeTypeHolder : MonoBehaviour
	{
		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7E228", Offset = "0xB7E228")]
		public GameObject _prefab;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh[] _meshes;

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x138D64C", Offset = "0x138D64C", VA = "0x138D64C")]
		public ReactObject GetInstance(ShapeType shapeType)
		{
			return null;
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0x1396754", Offset = "0x1396754", VA = "0x1396754")]
		public ReactObjectPlaceholder GetPlaceholderInstance(ShapeType shapeType)
		{
			return null;
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x138D810", Offset = "0x138D810", VA = "0x138D810")]
		public Mesh GetMesh(ShapeType shapeType)
		{
			return null;
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x139681C", Offset = "0x139681C", VA = "0x139681C")]
		public ShapeTypeHolder()
		{
		}
	}
	[Token(Token = "0x2000459")]
	public class Target : MonoBehaviour
	{
		[Token(Token = "0x200080C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB735E4", Offset = "0xB735E4")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4002D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Target <>4__this;

			[Token(Token = "0x4002D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TargetConfig targetConfig;

			[Token(Token = "0x6003236")]
			[Address(RVA = "0x1397258", Offset = "0x1397258", VA = "0x1397258")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6003237")]
			[Address(RVA = "0x1397848", Offset = "0x1397848", VA = "0x1397848")]
			internal void <SwitchConfig>b__0(TargetMesh _)
			{
			}
		}

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7E260", Offset = "0xB7E260")]
		[SerializeField]
		private Transform _targetPoint;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TargetSpawner _spawner;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VfxSpawner _bounceSpawner;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TargetMesh _mesh;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _dropAreasRoot;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CounterLabel _counterLabel;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ColorTypeHolder _colorsHolder;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MeshRenderer _portalDeviceHighlight;

		[Token(Token = "0x4001B3C")]
		private const float BOUNCE_FORCE = 5f;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TargetConfig _targetConfig;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E31C", Offset = "0xB7E31C")]
		private List<ShapeType> <ShapeTypes>k__BackingField;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E32C", Offset = "0xB7E32C")]
		private List<ColorType> <ColorTypes>k__BackingField;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isEnabled;

		[Token(Token = "0x1700036D")]
		public Transform TargetPoint
		{
			[Token(Token = "0x6002082")]
			[Address(RVA = "0x1396824", Offset = "0x1396824", VA = "0x1396824")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036E")]
		public TargetType TargetType
		{
			[Token(Token = "0x6002083")]
			[Address(RVA = "0x139682C", Offset = "0x139682C", VA = "0x139682C")]
			get
			{
				return default(TargetType);
			}
		}

		[Token(Token = "0x1700036F")]
		public bool IsTargetReached
		{
			[Token(Token = "0x6002084")]
			[Address(RVA = "0x139684C", Offset = "0x139684C", VA = "0x139684C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000370")]
		public List<ShapeType> ShapeTypes
		{
			[Token(Token = "0x6002086")]
			[Address(RVA = "0x139687C", Offset = "0x139687C", VA = "0x139687C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A364", Offset = "0xB8A364")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002085")]
			[Address(RVA = "0x1396874", Offset = "0x1396874", VA = "0x1396874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A354", Offset = "0xB8A354")]
			private set
			{
			}
		}

		[Token(Token = "0x17000371")]
		public List<ColorType> ColorTypes
		{
			[Token(Token = "0x6002088")]
			[Address(RVA = "0x139688C", Offset = "0x139688C", VA = "0x139688C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A384", Offset = "0xB8A384")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002087")]
			[Address(RVA = "0x1396884", Offset = "0x1396884", VA = "0x1396884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A374", Offset = "0xB8A374")]
			private set
			{
			}
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0x1396894", Offset = "0x1396894", VA = "0x1396894")]
		private void Awake()
		{
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0x13969C8", Offset = "0x13969C8", VA = "0x13969C8")]
		public void SetConfig(TargetConfig targetConfig)
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0x139700C", Offset = "0x139700C", VA = "0x139700C")]
		public void ResetTarget()
		{
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0x13971A4", Offset = "0x13971A4", VA = "0x13971A4")]
		public void SwitchConfig(TargetConfig targetConfig)
		{
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x139690C", Offset = "0x139690C", VA = "0x139690C")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0x13973DC", Offset = "0x13973DC", VA = "0x13973DC")]
		private void EnableHighlights(bool enable)
		{
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0x1397460", Offset = "0x1397460", VA = "0x1397460")]
		public bool IsObjectAllowed(ReactObject reactObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0x1397710", Offset = "0x1397710", VA = "0x1397710")]
		public void DisableShapeCounter()
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0x1396CC0", Offset = "0x1396CC0", VA = "0x1396CC0")]
		private void SetShapeTypes(List<ShapeType> shapeTypes, bool show)
		{
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0x1396B3C", Offset = "0x1396B3C", VA = "0x1396B3C")]
		private void SetColorTypes(List<ColorType> colorTypes)
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0x1397840", Offset = "0x1397840", VA = "0x1397840")]
		public Target()
		{
		}
	}
	[Token(Token = "0x200045A")]
	public class TargetConfig
	{
		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E33C", Offset = "0xB7E33C")]
		private TargetType <TargetType>k__BackingField;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E34C", Offset = "0xB7E34C")]
		private bool <ShapesUpdated>k__BackingField;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E35C", Offset = "0xB7E35C")]
		private List<ShapeType> <ShapeTypes>k__BackingField;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E36C", Offset = "0xB7E36C")]
		private bool <ColorsUpdated>k__BackingField;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E37C", Offset = "0xB7E37C")]
		private List<ColorType> <ColorTypes>k__BackingField;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E38C", Offset = "0xB7E38C")]
		private bool <ShowShapeTypes>k__BackingField;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E39C", Offset = "0xB7E39C")]
		private bool <ShowColorTypes>k__BackingField;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E3AC", Offset = "0xB7E3AC")]
		private int <ShapeTargetCount>k__BackingField;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E3BC", Offset = "0xB7E3BC")]
		private int <ShapeCurrentCount>k__BackingField;

		[Token(Token = "0x17000372")]
		public TargetType TargetType
		{
			[Token(Token = "0x6002094")]
			[Address(RVA = "0x139786C", Offset = "0x139786C", VA = "0x139786C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A394", Offset = "0xB8A394")]
			get
			{
				return default(TargetType);
			}
			[Token(Token = "0x6002095")]
			[Address(RVA = "0x1397874", Offset = "0x1397874", VA = "0x1397874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A3A4", Offset = "0xB8A3A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000373")]
		public bool ShapesUpdated
		{
			[Token(Token = "0x6002096")]
			[Address(RVA = "0x139787C", Offset = "0x139787C", VA = "0x139787C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A3B4", Offset = "0xB8A3B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002097")]
			[Address(RVA = "0x1397884", Offset = "0x1397884", VA = "0x1397884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A3C4", Offset = "0xB8A3C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000374")]
		public List<ShapeType> ShapeTypes
		{
			[Token(Token = "0x6002098")]
			[Address(RVA = "0x1397890", Offset = "0x1397890", VA = "0x1397890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A3D4", Offset = "0xB8A3D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002099")]
			[Address(RVA = "0x1397898", Offset = "0x1397898", VA = "0x1397898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A3E4", Offset = "0xB8A3E4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000375")]
		public bool ColorsUpdated
		{
			[Token(Token = "0x600209A")]
			[Address(RVA = "0x13978A0", Offset = "0x13978A0", VA = "0x13978A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A3F4", Offset = "0xB8A3F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600209B")]
			[Address(RVA = "0x13978A8", Offset = "0x13978A8", VA = "0x13978A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A404", Offset = "0xB8A404")]
			set
			{
			}
		}

		[Token(Token = "0x17000376")]
		public List<ColorType> ColorTypes
		{
			[Token(Token = "0x600209C")]
			[Address(RVA = "0x13978B4", Offset = "0x13978B4", VA = "0x13978B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A414", Offset = "0xB8A414")]
			get
			{
				return null;
			}
			[Token(Token = "0x600209D")]
			[Address(RVA = "0x13978BC", Offset = "0x13978BC", VA = "0x13978BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A424", Offset = "0xB8A424")]
			private set
			{
			}
		}

		[Token(Token = "0x17000377")]
		public bool ShowShapeTypes
		{
			[Token(Token = "0x600209E")]
			[Address(RVA = "0x13978C4", Offset = "0x13978C4", VA = "0x13978C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A434", Offset = "0xB8A434")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600209F")]
			[Address(RVA = "0x13978CC", Offset = "0x13978CC", VA = "0x13978CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A444", Offset = "0xB8A444")]
			set
			{
			}
		}

		[Token(Token = "0x17000378")]
		public bool ShowColorTypes
		{
			[Token(Token = "0x60020A0")]
			[Address(RVA = "0x13978D8", Offset = "0x13978D8", VA = "0x13978D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A454", Offset = "0xB8A454")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020A1")]
			[Address(RVA = "0x13978E0", Offset = "0x13978E0", VA = "0x13978E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A464", Offset = "0xB8A464")]
			set
			{
			}
		}

		[Token(Token = "0x17000379")]
		public bool HasTargetCount
		{
			[Token(Token = "0x60020A2")]
			[Address(RVA = "0x1396FFC", Offset = "0x1396FFC", VA = "0x1396FFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700037A")]
		public int ShapeTargetCount
		{
			[Token(Token = "0x60020A3")]
			[Address(RVA = "0x13978EC", Offset = "0x13978EC", VA = "0x13978EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A474", Offset = "0xB8A474")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60020A4")]
			[Address(RVA = "0x13978F4", Offset = "0x13978F4", VA = "0x13978F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A484", Offset = "0xB8A484")]
			set
			{
			}
		}

		[Token(Token = "0x1700037B")]
		public int ShapeCurrentCount
		{
			[Token(Token = "0x60020A5")]
			[Address(RVA = "0x13978FC", Offset = "0x13978FC", VA = "0x13978FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A494", Offset = "0xB8A494")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60020A6")]
			[Address(RVA = "0x1397904", Offset = "0x1397904", VA = "0x1397904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A4A4", Offset = "0xB8A4A4")]
			set
			{
			}
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x1394C4C", Offset = "0x1394C4C", VA = "0x1394C4C")]
		public TargetConfig(TargetType targetType)
		{
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x1392EF0", Offset = "0x1392EF0", VA = "0x1392EF0")]
		public TargetConfig(TargetType targetType, TargetConfig targetConfig)
		{
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x1394854", Offset = "0x1394854", VA = "0x1394854")]
		public void UpdateShapeTypes(ShapeType shapeType)
		{
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x1392FD4", Offset = "0x1392FD4", VA = "0x1392FD4")]
		public void SetShapeTypes(List<ShapeType> shapeTypes)
		{
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x139447C", Offset = "0x139447C", VA = "0x139447C")]
		public void ResetShapeTypes()
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x1394A34", Offset = "0x1394A34", VA = "0x1394A34")]
		public void UpdateColorTypes(ColorType colorType)
		{
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x1392FCC", Offset = "0x1392FCC", VA = "0x1392FCC")]
		public void SetColorTypes(List<ColorType> colorTypes)
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x13948FC", Offset = "0x13948FC", VA = "0x13948FC")]
		public void ResetColorTypes()
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x1394ADC", Offset = "0x1394ADC", VA = "0x1394ADC")]
		public List<ObjectConfig> GetObjectConfigs()
		{
			return null;
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x139790C", Offset = "0x139790C", VA = "0x139790C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200045B")]
	public class TargetMesh : MonoBehaviour
	{
		[Token(Token = "0x200080D")]
		public delegate void OnSwitched(TargetMesh sender);

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7E3CC", Offset = "0xB7E3CC")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TargetMeshAnimator _animator;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OnSwitched _callback;

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x1397304", Offset = "0x1397304", VA = "0x1397304")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x1397270", Offset = "0x1397270", VA = "0x1397270")]
		public void Switch(OnSwitched callback)
		{
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x139775C", Offset = "0x139775C", VA = "0x139775C")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x1397B7C", Offset = "0x1397B7C", VA = "0x1397B7C")]
		public TargetMesh()
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x1397B84", Offset = "0x1397B84", VA = "0x1397B84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A4B4", Offset = "0xB8A4B4")]
		private void <Switch>b__5_0(TargetMeshAnimator _)
		{
		}
	}
	[Token(Token = "0x200045C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB720E0", Offset = "0xB720E0")]
	public class TargetMeshAnimator : MonoBehaviour
	{
		[Token(Token = "0x200080E")]
		public delegate void OnSwitched(TargetMeshAnimator sender);

		[Token(Token = "0x4001B4D")]
		private const string BOOL_ENABLE = "enable";

		[Token(Token = "0x4001B4E")]
		private const string TRIGGER_SWITCH = "switch";

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OnSwitched _callback;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator _animator;

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x1397A8C", Offset = "0x1397A8C", VA = "0x1397A8C")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x1397B0C", Offset = "0x1397B0C", VA = "0x1397B0C")]
		public void Switch(OnSwitched callback)
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x1397F80", Offset = "0x1397F80", VA = "0x1397F80")]
		private Animator GetAnimator()
		{
			return null;
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x1398048", Offset = "0x1398048", VA = "0x1398048")]
		public void Animation_OnSwitched()
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x1398414", Offset = "0x1398414", VA = "0x1398414")]
		public TargetMeshAnimator()
		{
		}
	}
	[Token(Token = "0x200045D")]
	public class TargetSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7E428", Offset = "0xB7E428")]
		[SerializeField]
		private Transform _target;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ShapeTileHolder _tilesHolder;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _objectOffset;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<ShapeTile> _instances;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<ColorType> _colorTypes;

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x13973A8", Offset = "0x13973A8", VA = "0x13973A8")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x1397024", Offset = "0x1397024", VA = "0x1397024")]
		public void ResetSpawner()
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x1396CC8", Offset = "0x1396CC8", VA = "0x1396CC8")]
		public void SetShapeTypes(List<ShapeType> shapeTypes)
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x1396F80", Offset = "0x1396F80", VA = "0x1396F80")]
		public void SetColorTypes(List<ColorType> colorTypes)
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x139844C", Offset = "0x139844C", VA = "0x139844C")]
		private void ApplyColorsToShapes()
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x13985B4", Offset = "0x13985B4", VA = "0x13985B4")]
		public TargetSpawner()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public enum TargetType
	{
		[Token(Token = "0x4001B57")]
		Left,
		[Token(Token = "0x4001B58")]
		Right
	}
	[Serializable]
	[Token(Token = "0x200045F")]
	public class TaskSwitch
	{
		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TaskSwitchingType _type;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int _switchesCount;

		[Token(Token = "0x1700037C")]
		public TaskSwitchingType Type
		{
			[Token(Token = "0x60020C1")]
			[Address(RVA = "0x13985C8", Offset = "0x13985C8", VA = "0x13985C8")]
			get
			{
				return default(TaskSwitchingType);
			}
			[Token(Token = "0x60020C2")]
			[Address(RVA = "0x13985D0", Offset = "0x13985D0", VA = "0x13985D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700037D")]
		public int SwitchesCount
		{
			[Token(Token = "0x60020C3")]
			[Address(RVA = "0x13985D8", Offset = "0x13985D8", VA = "0x13985D8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60020C4")]
			[Address(RVA = "0x13985E0", Offset = "0x13985E0", VA = "0x13985E0")]
			set
			{
			}
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x13985E8", Offset = "0x13985E8", VA = "0x13985E8")]
		public TaskSwitch()
		{
		}
	}
	[Token(Token = "0x2000460")]
	public class TaskSwitcher : MonoBehaviour
	{
		[Token(Token = "0x200080F")]
		public delegate void OnSwitchPhaseStart(TaskSwitcher sender, int switches);

		[Token(Token = "0x2000810")]
		public delegate void OnSwitch(TaskSwitcher sender, int switches);

		[Token(Token = "0x2000811")]
		public delegate void OnSwitchPhaseEnd(TaskSwitcher sender, int switches);

		[Token(Token = "0x2000812")]
		public delegate void OnSwitchTimeUpdate(TaskSwitcher sender, float remainingTime);

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7E484", Offset = "0xB7E484")]
		[SerializeField]
		private float _secondsToWaitForSwitching;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _secondsToWaitForResuming;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnSwitchPhaseStart SwitchPhaseStart;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnSwitch Switch;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OnSwitchPhaseEnd SwitchPhaseEnd;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public OnSwitchTimeUpdate SwitchTimeUpdate;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _waitingToSwitch;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _switched;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _timeToStart;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _timeToSwitch;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _timeToEnd;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _interval;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _currentSwitches;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _switches;

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x1398618", Offset = "0x1398618", VA = "0x1398618")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x1398624", Offset = "0x1398624", VA = "0x1398624")]
		private void Update()
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x1399388", Offset = "0x1399388", VA = "0x1399388")]
		public void Config(ReactGameConfig reactGameConfig)
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x13993B0", Offset = "0x13993B0", VA = "0x13993B0")]
		public void EnableTaskSwitching(float interval, int switches = -1)
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x1399430", Offset = "0x1399430", VA = "0x1399430")]
		public void DisableTaskSwitching()
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x139934C", Offset = "0x139934C", VA = "0x139934C")]
		public void DoSwitch()
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x139944C", Offset = "0x139944C", VA = "0x139944C")]
		private void PlaySound()
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x1398764", Offset = "0x1398764", VA = "0x1398764")]
		private void UpdateSwitchTimes()
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x139941C", Offset = "0x139941C", VA = "0x139941C")]
		private void Reset()
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x1399954", Offset = "0x1399954", VA = "0x1399954")]
		public TaskSwitcher()
		{
		}
	}
	[Token(Token = "0x2000461")]
	public enum TaskSwitchingType
	{
		[Token(Token = "0x4001B6A")]
		None,
		[Token(Token = "0x4001B6B")]
		Unchanged,
		[Token(Token = "0x4001B6C")]
		Switch,
		[Token(Token = "0x4001B6D")]
		OnlyColours,
		[Token(Token = "0x4001B6E")]
		OnlyShapes,
		[Token(Token = "0x4001B6F")]
		ColoursOrShapes,
		[Token(Token = "0x4001B70")]
		Random
	}
	[Token(Token = "0x2000462")]
	public static class Globals
	{
	}
	[Serializable]
	[Token(Token = "0x2000463")]
	public class ItemConfig
	{
		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TargetType[] _targetTypes;

		[Token(Token = "0x1700037E")]
		public TargetType[] TargetTypes
		{
			[Token(Token = "0x60020D0")]
			[Address(RVA = "0x138C2E4", Offset = "0x138C2E4", VA = "0x138C2E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x138C2EC", Offset = "0x138C2EC", VA = "0x138C2EC")]
		public ItemConfig()
		{
		}
	}
	[Token(Token = "0x2000464")]
	public enum ItemType
	{
		[Token(Token = "0x4001B73")]
		New,
		[Token(Token = "0x4001B74")]
		Existing
	}
	[Token(Token = "0x2000465")]
	public class GameManager : MonoBehaviour
	{
		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7E4E0", Offset = "0xB7E4E0")]
		[SerializeField]
		private GameController _gameController;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameHandControllers _gameHandControllers;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ColorTypeHolder _colorsHolder;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObjectSpawner _spawner;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PortalDevice _portalDevice;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Target[] _targets;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ReactRobot _robot;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7E58C", Offset = "0xB7E58C")]
		public ReactGameConfig gameConfig;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ReactProgressionManager _progressionManager;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TaskSwitcher _taskSwitcher;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E5C4", Offset = "0xB7E5C4")]
		private bool <IsRunning>k__BackingField;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E5D4", Offset = "0xB7E5D4")]
		private static GameManager <Instance>k__BackingField;

		[Token(Token = "0x1700037F")]
		public bool IsRunning
		{
			[Token(Token = "0x60020D3")]
			[Address(RVA = "0xF7ECFC", Offset = "0xF7ECFC", VA = "0xF7ECFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A4D4", Offset = "0xB8A4D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020D2")]
			[Address(RVA = "0xF7ECF0", Offset = "0xF7ECF0", VA = "0xF7ECF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A4C4", Offset = "0xB8A4C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000380")]
		public static GameManager Instance
		{
			[Token(Token = "0x60020D4")]
			[Address(RVA = "0xF7ED04", Offset = "0xF7ED04", VA = "0xF7ED04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A4E4", Offset = "0xB8A4E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020D5")]
			[Address(RVA = "0xF7ED54", Offset = "0xF7ED54", VA = "0xF7ED54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A4F4", Offset = "0xB8A4F4")]
			private set
			{
			}
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0xF7EDA8", Offset = "0xF7EDA8", VA = "0xF7EDA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0xF7EFB8", Offset = "0xF7EFB8", VA = "0xF7EFB8")]
		private void Start()
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0xF7EFC0", Offset = "0xF7EFC0", VA = "0xF7EFC0")]
		private void GameController_Loaded(GameController sender)
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0xF7F0A8", Offset = "0xF7F0A8", VA = "0xF7F0A8")]
		private void GameController_WillUnload(GameController sender)
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0xF7F114", Offset = "0xF7F114", VA = "0xF7F114")]
		private void GameController_GameWillStart(GameController sender)
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0xF7F158", Offset = "0xF7F158", VA = "0xF7F158")]
		private void GameController_GameStart(GameController sender, int startLevel, bool isFirstTime)
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0xF7F4F4", Offset = "0xF7F4F4", VA = "0xF7F4F4")]
		private void GameController_GameStop(GameController sender)
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0xF7F6EC", Offset = "0xF7F6EC", VA = "0xF7F6EC")]
		private void GameController_GameEnd(GameController sender)
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0xF7F81C", Offset = "0xF7F81C", VA = "0xF7F81C")]
		private void GameHandControllers_HandControllersAttached(HandControllerAttachment rightHandController, HandControllerAttachment leftHandController, HandControllerAttachment activeHandController)
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0xF7F8E0", Offset = "0xF7F8E0", VA = "0xF7F8E0")]
		public void ClearLevel()
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0xF7F3E0", Offset = "0xF7F3E0", VA = "0xF7F3E0")]
		private void StartGameplay()
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0xF7FDC0", Offset = "0xF7FDC0", VA = "0xF7FDC0")]
		private void ProgressionManager_OnTargetsUpdated(Dictionary<TargetType, TargetConfig> targetsConfig, bool switched)
		{
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0xF7FDD4", Offset = "0xF7FDD4", VA = "0xF7FDD4")]
		private void TaskSwitcher_SwitchTimeUpdate(TaskSwitcher sender, float remainingTime)
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0xF7FECC", Offset = "0xF7FECC", VA = "0xF7FECC")]
		private void TaskSwitcher_SwitchPhaseStart(TaskSwitcher sender, int switches)
		{
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0xF7FEFC", Offset = "0xF7FEFC", VA = "0xF7FEFC")]
		private void TaskSwitcher_Switch(TaskSwitcher sender, int switches)
		{
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0xF7FF18", Offset = "0xF7FF18", VA = "0xF7FF18")]
		private void TaskSwitcher_SwitchPhaseEnd(TaskSwitcher sender, int switches)
		{
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0xF7FF48", Offset = "0xF7FF48", VA = "0xF7FF48")]
		private void Spawner_ObjectSpawner_ObjectSpawned(ReactObject reactObject)
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0xF800AC", Offset = "0xF800AC", VA = "0xF800AC")]
		private void ReactObject_Pushed(ReactObject reactObject, HandPusher.CollisionSide[] sides)
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0xF80310", Offset = "0xF80310", VA = "0xF80310")]
		private void ReactObject_TargetReached(ReactObject reactObject, Transform target)
		{
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0xF80514", Offset = "0xF80514", VA = "0xF80514")]
		private void ReactObject_Killed(ReactObject reactObject, bool clearScene)
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0xF805DC", Offset = "0xF805DC", VA = "0xF805DC")]
		private void ReactObject_WillDestroy(ReactObject reactObject)
		{
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0xF804E4", Offset = "0xF804E4", VA = "0xF804E4")]
		private void DestroyGameObject(ReactObject reactObject, bool bigExplosion)
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0xF7F664", Offset = "0xF7F664", VA = "0xF7F664")]
		private void TogglePortalTargets(bool enable)
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0xF7FAC4", Offset = "0xF7FAC4", VA = "0xF7FAC4")]
		private void UpdateTargetsConfig(Dictionary<TargetType, TargetConfig> targetsConfig, bool switched)
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0xF80610", Offset = "0xF80610", VA = "0xF80610")]
		public GameManager()
		{
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0xF80618", Offset = "0xF80618", VA = "0xF80618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A504", Offset = "0xB8A504")]
		private void <ClearLevel>b__27_0()
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0xF806B0", Offset = "0xF806B0", VA = "0xF806B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A514", Offset = "0xB8A514")]
		private void <ClearLevel>b__27_1(Countdown _)
		{
		}
	}
	[Token(Token = "0x2000466")]
	public class ReactProgressionManager : ProgressionManager
	{
		[Token(Token = "0x2000813")]
		public delegate void TargetsUpdated(Dictionary<TargetType, TargetConfig> targets, bool switched);

		[Token(Token = "0x2000814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB735F4", Offset = "0xB735F4")]
		private sealed class <>c__DisplayClass49_0
		{
			[Token(Token = "0x4002D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TargetType targetType;

			[Token(Token = "0x4002D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ReactProgressionManager <>4__this;

			[Token(Token = "0x6003254")]
			[Address(RVA = "0x1392EE8", Offset = "0x1392EE8", VA = "0x1392EE8")]
			public <>c__DisplayClass49_0()
			{
			}

			[Token(Token = "0x6003255")]
			[Address(RVA = "0x1394CF0", Offset = "0x1394CF0", VA = "0x1394CF0")]
			internal bool <PreSwitch>b__0(TargetConfig t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TargetsUpdated OnTargetsUpdated;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E5E4", Offset = "0xB7E5E4")]
		private float <CurrentSpeedMultiplier>k__BackingField;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E5F4", Offset = "0xB7E5F4")]
		private float <CurrentSpawnDelay>k__BackingField;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E604", Offset = "0xB7E604")]
		private float <CurrentSpawnDelayVariation>k__BackingField;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E614", Offset = "0xB7E614")]
		private TaskSwitchingType <TaskSwitchType>k__BackingField;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E624", Offset = "0xB7E624")]
		private float <TaskSwitchInterval>k__BackingField;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E634", Offset = "0xB7E634")]
		private int <TaskSwitchCount>k__BackingField;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E644", Offset = "0xB7E644")]
		private Dictionary<TargetType, TargetConfig> <TargetsConfig>k__BackingField;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<ShapeType> _shapes;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<ColorType> _colors;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<ShapeType> _distractorShapes;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<ColorType> _distractorColors;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Dictionary<string, ObjectConfig> _objectsConfig;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Dictionary<string, ObjectConfig> _distractorsConfig;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _distractorsProbability;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool _switched;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float _roundTime;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ReactLevelConfig[] _levels;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E654", Offset = "0xB7E654")]
		private static ReactProgressionManager <Instance>k__BackingField;

		[Token(Token = "0x17000381")]
		public float CurrentSpeedMultiplier
		{
			[Token(Token = "0x60020F1")]
			[Address(RVA = "0x1392358", Offset = "0x1392358", VA = "0x1392358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A524", Offset = "0xB8A524")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60020F2")]
			[Address(RVA = "0x1392360", Offset = "0x1392360", VA = "0x1392360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A534", Offset = "0xB8A534")]
			private set
			{
			}
		}

		[Token(Token = "0x17000382")]
		public float CurrentSpawnDelay
		{
			[Token(Token = "0x60020F3")]
			[Address(RVA = "0x1392368", Offset = "0x1392368", VA = "0x1392368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A544", Offset = "0xB8A544")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60020F4")]
			[Address(RVA = "0x1392370", Offset = "0x1392370", VA = "0x1392370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A554", Offset = "0xB8A554")]
			private set
			{
			}
		}

		[Token(Token = "0x17000383")]
		public float CurrentSpawnDelayVariation
		{
			[Token(Token = "0x60020F5")]
			[Address(RVA = "0x1392378", Offset = "0x1392378", VA = "0x1392378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A564", Offset = "0xB8A564")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60020F6")]
			[Address(RVA = "0x1392380", Offset = "0x1392380", VA = "0x1392380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A574", Offset = "0xB8A574")]
			private set
			{
			}
		}

		[Token(Token = "0x17000384")]
		public TaskSwitchingType TaskSwitchType
		{
			[Token(Token = "0x60020F7")]
			[Address(RVA = "0x1392388", Offset = "0x1392388", VA = "0x1392388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A584", Offset = "0xB8A584")]
			get
			{
				return default(TaskSwitchingType);
			}
			[Token(Token = "0x60020F8")]
			[Address(RVA = "0x1392390", Offset = "0x1392390", VA = "0x1392390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A594", Offset = "0xB8A594")]
			private set
			{
			}
		}

		[Token(Token = "0x17000385")]
		public float TaskSwitchInterval
		{
			[Token(Token = "0x60020F9")]
			[Address(RVA = "0x1392398", Offset = "0x1392398", VA = "0x1392398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A5A4", Offset = "0xB8A5A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60020FA")]
			[Address(RVA = "0x13923A0", Offset = "0x13923A0", VA = "0x13923A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A5B4", Offset = "0xB8A5B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000386")]
		public int TaskSwitchCount
		{
			[Token(Token = "0x60020FB")]
			[Address(RVA = "0x13923A8", Offset = "0x13923A8", VA = "0x13923A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A5C4", Offset = "0xB8A5C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60020FC")]
			[Address(RVA = "0x13923B0", Offset = "0x13923B0", VA = "0x13923B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A5D4", Offset = "0xB8A5D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000387")]
		public Dictionary<TargetType, TargetConfig> TargetsConfig
		{
			[Token(Token = "0x60020FD")]
			[Address(RVA = "0x13923B8", Offset = "0x13923B8", VA = "0x13923B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A5E4", Offset = "0xB8A5E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020FE")]
			[Address(RVA = "0x13923C0", Offset = "0x13923C0", VA = "0x13923C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A5F4", Offset = "0xB8A5F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000388")]
		public static ReactProgressionManager Instance
		{
			[Token(Token = "0x60020FF")]
			[Address(RVA = "0x13923C8", Offset = "0x13923C8", VA = "0x13923C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A604", Offset = "0xB8A604")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002100")]
			[Address(RVA = "0x1392418", Offset = "0x1392418", VA = "0x1392418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A614", Offset = "0xB8A614")]
			private set
			{
			}
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x139246C", Offset = "0x139246C", VA = "0x139246C")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x13924C8", Offset = "0x13924C8", VA = "0x13924C8", Slot = "4")]
		public override void Setup(GameConfig gameConfig, int level, bool isFirstTime)
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x1392898", Offset = "0x1392898", VA = "0x1392898")]
		public new void Reset(bool hideBar)
		{
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0x13928D0", Offset = "0x13928D0", VA = "0x13928D0", Slot = "5")]
		protected override void IncrementLevel()
		{
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x139293C", Offset = "0x139293C", VA = "0x139293C", Slot = "6")]
		protected override void DecrementLevel()
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0x13929A8", Offset = "0x13929A8", VA = "0x13929A8")]
		public void PreSwitch()
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x1393548", Offset = "0x1393548", VA = "0x1393548")]
		public void SwitchTask()
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0x139395C", Offset = "0x139395C", VA = "0x139395C")]
		public bool ShouldInstantiateDistractor(ReactObject lastObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0x1393A3C", Offset = "0x1393A3C", VA = "0x1393A3C")]
		public ObjectConfig GetRandomObjectConfig()
		{
			return null;
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0x1393AE0", Offset = "0x1393AE0", VA = "0x1393AE0")]
		public ObjectConfig GetRandomDistractorConfig()
		{
			return null;
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0x1393B84", Offset = "0x1393B84", VA = "0x1393B84")]
		public bool IsDistractor(ReactObject reactObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0x13926A4", Offset = "0x13926A4", VA = "0x13926A4")]
		public void UpdateLevel()
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0x1393C08", Offset = "0x1393C08", VA = "0x1393C08")]
		private void UpdateShapes(List<ItemConfig> shapesConfig)
		{
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0x1394204", Offset = "0x1394204", VA = "0x1394204")]
		private void UpdateDistractorShapes(int count)
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0x1393F04", Offset = "0x1393F04", VA = "0x1393F04")]
		private void UpdateColors(List<ItemConfig> colorsConfig)
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0x13942E0", Offset = "0x13942E0", VA = "0x13942E0")]
		private void UpdateDistractorColors(int count)
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0x1392FDC", Offset = "0x1392FDC", VA = "0x1392FDC")]
		private void UpdateObjectConfigs()
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x13932E4", Offset = "0x13932E4", VA = "0x13932E4")]
		private void UpdateDistractorConfigs()
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x13943C4", Offset = "0x13943C4", VA = "0x13943C4")]
		private void UpdateTaskSwitch(TaskSwitch taskSwitch)
		{
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x1394744", Offset = "0x1394744", VA = "0x1394744")]
		private TargetConfig GetTargetConfig(TargetType targetType)
		{
			return null;
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0x13944DC", Offset = "0x13944DC", VA = "0x13944DC")]
		private List<ShapeType> GetAllShapes()
		{
			return null;
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0x139495C", Offset = "0x139495C", VA = "0x139495C")]
		private List<ColorType> GetAllColors()
		{
			return null;
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0x1394C88", Offset = "0x1394C88", VA = "0x1394C88")]
		public ReactProgressionManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000467")]
	public class ReactLevelConfig : LevelConfig
	{
		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float distractorsProbability;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spawnDelay;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float spawnDelayVariation;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ItemConfig> shapes;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ItemConfig> colors;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int distractorShapesCount;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int distractorColorsCount;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool showTargetShapeColors;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TaskSwitch taskSwitch;

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x138F2E0", Offset = "0x138F2E0", VA = "0x138F2E0")]
		public ReactLevelConfig()
		{
		}
	}
	[Token(Token = "0x2000468")]
	public class ReactRobot : MonoBehaviour
	{
		[Token(Token = "0x2000815")]
		public delegate void OnThrow();

		[Token(Token = "0x2000816")]
		public delegate void OnPositionReached();

		[Token(Token = "0x2000817")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73604", Offset = "0xB73604")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4002D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ReactRobot <>4__this;

			[Token(Token = "0x4002D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform point;

			[Token(Token = "0x4002D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x4002D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int streamIndex;

			[Token(Token = "0x4002D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OnThrow callback;

			[Token(Token = "0x600325E")]
			[Address(RVA = "0x13950F8", Offset = "0x13950F8", VA = "0x13950F8")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x600325F")]
			[Address(RVA = "0x13958F0", Offset = "0x13958F0", VA = "0x13958F0")]
			internal void <Throw>b__0(Waiter _)
			{
			}
		}

		[Token(Token = "0x2000818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73614", Offset = "0xB73614")]
		private sealed class <Move_Coroutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReactRobot <>4__this;

			[Token(Token = "0x17000582")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003263")]
				[Address(RVA = "0x1395D78", Offset = "0x1395D78", VA = "0x1395D78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000583")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003265")]
				[Address(RVA = "0x1395DE4", Offset = "0x1395DE4", VA = "0x1395DE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003260")]
			[Address(RVA = "0x13955D0", Offset = "0x13955D0", VA = "0x13955D0")]
			[DebuggerHidden]
			public <Move_Coroutine>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6003261")]
			[Address(RVA = "0x139594C", Offset = "0x139594C", VA = "0x139594C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003262")]
			[Address(RVA = "0x1395950", Offset = "0x1395950", VA = "0x1395950", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003264")]
			[Address(RVA = "0x1395D80", Offset = "0x1395D80", VA = "0x1395D80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B9E")]
		public const float THROW_ANIM_DELAY = 0.55f;

		[Token(Token = "0x4001B9F")]
		private const string TRIGGER_THROW_LEFT = "throw_left";

		[Token(Token = "0x4001BA0")]
		private const string TRIGGER_THROW_RIGHT = "throw_right";

		[Token(Token = "0x4001BA1")]
		private const string TRIGGER_TASK_SWITCH = "task_switch";

		[Token(Token = "0x4001BA2")]
		private const string TRIGGER_ABORT = "abort";

		[Token(Token = "0x4001BA3")]
		private const string BOOLEAN_IDLE = "idle";

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OnThrow _throwCallback;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7E664", Offset = "0xB7E664")]
		[SerializeField]
		private Transform _initialPoint;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _throwingPoint;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform[] _throwingPoints;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7E6E0", Offset = "0xB7E6E0")]
		[SerializeField]
		private float _movingSpeed;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _currentSpeed;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _target;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected OnPositionReached _positionReachedCallback;

		[Token(Token = "0x6002119")]
		[Address(RVA = "0x1394E3C", Offset = "0x1394E3C", VA = "0x1394E3C")]
		public void MoveToWelcomePoint(OnPositionReached callback)
		{
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0x1394E5C", Offset = "0x1394E5C", VA = "0x1394E5C")]
		public void MoveToThrowingPosition(float duration, [Optional] OnPositionReached callback)
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x1394EF4", Offset = "0x1394EF4", VA = "0x1394EF4")]
		public void Throw(int streamIndex, float timeToSpawn, [Optional] OnThrow callback)
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x1395100", Offset = "0x1395100", VA = "0x1395100")]
		public void AnimateThrow(int side, [Optional] OnThrow callback)
		{
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0x13951A8", Offset = "0x13951A8", VA = "0x13951A8")]
		public void AnimateTaskSwitch()
		{
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0x139518C", Offset = "0x139518C", VA = "0x139518C")]
		private void PlayAnimation(string animation)
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0x13951F8", Offset = "0x13951F8", VA = "0x13951F8")]
		public void Animation_OnThrow()
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0x1395424", Offset = "0x1395424", VA = "0x1395424")]
		public void AbortAnimation()
		{
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x1394E54", Offset = "0x1394E54", VA = "0x1394E54")]
		public void MoveToPoint(Transform point, [Optional] OnPositionReached callback)
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x1394E6C", Offset = "0x1394E6C", VA = "0x1394E6C")]
		private void MoveToPoint(Transform point, float duration, [Optional] OnPositionReached callback)
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0x139555C", Offset = "0x139555C", VA = "0x139555C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8A624", Offset = "0xB8A624")]
		private IEnumerator Move_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x1395480", Offset = "0x1395480", VA = "0x1395480")]
		private float GetSpeed(Vector3 position, float duration)
		{
			return default(float);
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x13955FC", Offset = "0x13955FC", VA = "0x13955FC")]
		public void LookAtPlayer()
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x13958E0", Offset = "0x13958E0", VA = "0x13958E0")]
		public ReactRobot()
		{
		}
	}
	[Token(Token = "0x2000469")]
	public class ReactRobotAnimator : MonoBehaviour
	{
		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ReactRobot _robot;

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x1395E8C", Offset = "0x1395E8C", VA = "0x1395E8C")]
		public void Animation_OnThrow()
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x1395EB4", Offset = "0x1395EB4", VA = "0x1395EB4")]
		public ReactRobotAnimator()
		{
		}
	}
	[Token(Token = "0x200046A")]
	public class Tutorial : MonoBehaviour
	{
		[Token(Token = "0x2000819")]
		public delegate void TutorialEnded(Tutorial sender);

		[Token(Token = "0x200081A")]
		public enum Step
		{
			[Token(Token = "0x4002D46")]
			Welcoming,
			[Token(Token = "0x4002D47")]
			ThrowingLeft,
			[Token(Token = "0x4002D48")]
			ThrowingRight,
			[Token(Token = "0x4002D49")]
			Shapes,
			[Token(Token = "0x4002D4A")]
			Switch,
			[Token(Token = "0x4002D4B")]
			Colors,
			[Token(Token = "0x4002D4C")]
			DistractorsEasy,
			[Token(Token = "0x4002D4D")]
			DistractorsHard,
			[Token(Token = "0x4002D4E")]
			End
		}

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7E73C", Offset = "0xB7E73C")]
		[SerializeField]
		private GameController _gameController;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PortalDevice _portalDevice;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TaskSwitcher _taskSwitcher;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CounterLabel _distractorsCounter;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _ghostPaddle;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ReactRobot _robot;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Target[] _targets;

		[Token(Token = "0x4001BB5")]
		private const ColorType COLOR_FIRST = ColorType.Blue;

		[Token(Token = "0x4001BB6")]
		private const ColorType COLOR_SECOND = ColorType.Red;

		[Token(Token = "0x4001BB7")]
		private const ShapeType SHAPE_FIRST = ShapeType.Cube;

		[Token(Token = "0x4001BB8")]
		private const ShapeType SHAPE_SECOND = ShapeType.Pyramid;

		[Token(Token = "0x4001BB9")]
		private const ShapeType DISTRACTOR_EASY_SHAPE = ShapeType.Circle;

		[Token(Token = "0x4001BBA")]
		private const ColorType DISTRACTOR_EASY_COLOR = ColorType.Green;

		[Token(Token = "0x4001BBB")]
		private const float SHAPE_SPEED = 1f;

		[Token(Token = "0x4001BBC")]
		private const int THROWING_COUNT = 2;

		[Token(Token = "0x4001BBD")]
		private const int SHAPES_COUNT = 2;

		[Token(Token = "0x4001BBE")]
		private const int COLORS_COUNT = 2;

		[Token(Token = "0x4001BBF")]
		private const int DISTRACTORS_COUNT = 3;

		[Token(Token = "0x4001BC0")]
		private const int TASK_SWITCHING_INTERVAL = 5;

		[Token(Token = "0x4001BC1")]
		private const float DISTRACTORS_PROBABILITY = 0.3f;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TutorialController _tutorialController;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TutorialObjectSpawner _spawner;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LineArrowsPool _lineArrowsPool;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private LineArrow _lineArrow;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<ObjectConfig> _objectsConfig;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<ObjectConfig> _distractorsConfig;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<TargetType, TargetConfig> _targetsConfig;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _distractorsCurrentCount;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _enableLineArrows;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool _stepFinished;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E7E8", Offset = "0xB7E7E8")]
		private static Tutorial <Instance>k__BackingField;

		[Token(Token = "0x17000389")]
		public bool IsPlaying
		{
			[Token(Token = "0x6002129")]
			[Address(RVA = "0x1399C3C", Offset = "0x1399C3C", VA = "0x1399C3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038A")]
		public static Tutorial Instance
		{
			[Token(Token = "0x600212A")]
			[Address(RVA = "0x1399C5C", Offset = "0x1399C5C", VA = "0x1399C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A688", Offset = "0xB8A688")]
			get
			{
				return null;
			}
			[Token(Token = "0x600212B")]
			[Address(RVA = "0x1399CAC", Offset = "0x1399CAC", VA = "0x1399CAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A698", Offset = "0xB8A698")]
			private set
			{
			}
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x1399D00", Offset = "0x1399D00", VA = "0x1399D00")]
		private void Awake()
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x1399EE4", Offset = "0x1399EE4", VA = "0x1399EE4")]
		private void GameController_TutorialStart(GameController sender)
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x139A284", Offset = "0x139A284", VA = "0x139A284")]
		private void GameController_TutorialStop(GameController sender)
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x139A618", Offset = "0x139A618", VA = "0x139A618")]
		private void GameController_TutorialPaused(GameController sender, bool paused, SceneStatusType statusType)
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x139A654", Offset = "0x139A654", VA = "0x139A654")]
		private void GameController_WillUnload(GameController sender)
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x139A770", Offset = "0x139A770", VA = "0x139A770")]
		private void TutorialController_StepInstructionsStart(TutorialController sender, TutorialStep step)
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x139B12C", Offset = "0x139B12C", VA = "0x139B12C")]
		private void TutorialController_StepInstructionsPlay(TutorialController sender, TutorialStep step, int instructionIndex)
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x139B5F8", Offset = "0x139B5F8", VA = "0x139B5F8")]
		private void TutorialController_OnTutorialEnded(TutorialController sender)
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x139A4C8", Offset = "0x139A4C8", VA = "0x139A4C8")]
		private void ResetTutorial()
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x139B28C", Offset = "0x139B28C", VA = "0x139B28C")]
		private void SetupForThrowingLeft()
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x139A860", Offset = "0x139A860", VA = "0x139A860")]
		private void SetupForThrowingRight()
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x139A968", Offset = "0x139A968", VA = "0x139A968")]
		private void SetupForShapes()
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x139ABA4", Offset = "0x139ABA4", VA = "0x139ABA4")]
		private void SetupForColours()
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x139AE80", Offset = "0x139AE80", VA = "0x139AE80")]
		private void SetupForEasyDistractors()
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x139AFC4", Offset = "0x139AFC4", VA = "0x139AFC4")]
		private void SetupForHardDistractors()
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x139B4D0", Offset = "0x139B4D0", VA = "0x139B4D0")]
		private ObjectConfig GetEasyDistractor()
		{
			return null;
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x139B850", Offset = "0x139B850", VA = "0x139B850")]
		private ObjectConfig GetShapeFirstDistractor()
		{
			return null;
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x139B568", Offset = "0x139B568", VA = "0x139B568")]
		private ObjectConfig GetShapeSecondDistractor()
		{
			return null;
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x139B768", Offset = "0x139B768", VA = "0x139B768")]
		private void StartSpawning()
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x139B8D8", Offset = "0x139B8D8", VA = "0x139B8D8")]
		private void ObjectSpawner_OnObjectSpawned(ReactObject reactObject)
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x139BA0C", Offset = "0x139BA0C", VA = "0x139BA0C")]
		private void ReactObject_Thrown(ReactObject sender, Vector3 direction)
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x139BEB4", Offset = "0x139BEB4", VA = "0x139BEB4")]
		private void ReactObject_TargetDistanceUpdate(ReactObject sender, float distance)
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x139C21C", Offset = "0x139C21C", VA = "0x139C21C")]
		private void ReactObject_ReachedTarget(ReactObject sender, Transform target)
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x139C758", Offset = "0x139C758", VA = "0x139C758")]
		private void ReactObject_Killed(ReactObject sender, bool clearScene)
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0x139C600", Offset = "0x139C600", VA = "0x139C600")]
		private void DestroyGameObject(ReactObject reactObject, bool bigExplosion)
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x139AE40", Offset = "0x139AE40", VA = "0x139AE40")]
		private void EnableTaskSwitching(bool enable)
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0x139C760", Offset = "0x139C760", VA = "0x139C760")]
		private void TaskSwitcher_SwitchPhaseStart(TaskSwitcher sender, int switches)
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0x139C78C", Offset = "0x139C78C", VA = "0x139C78C")]
		private void TaskSwitcher_Switch(TaskSwitcher sender, int switches)
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0x139C8E8", Offset = "0x139C8E8", VA = "0x139C8E8")]
		private void TaskSwitcher_SwitchPhaseEnd(TaskSwitcher sender, int switches)
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x139B628", Offset = "0x139B628", VA = "0x139B628")]
		private void EnableTargets(bool enable)
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0x139A1E4", Offset = "0x139A1E4", VA = "0x139A1E4")]
		private void ResetTargets()
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0x139C718", Offset = "0x139C718", VA = "0x139C718")]
		private bool IsTargetsCountReached()
		{
			return default(bool);
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x139C6BC", Offset = "0x139C6BC", VA = "0x139C6BC")]
		private bool IsTargetCountReached(TargetType targetType)
		{
			return default(bool);
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0x139B6A4", Offset = "0x139B6A4", VA = "0x139B6A4")]
		private void DisableTargetCounters()
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x139C914", Offset = "0x139C914", VA = "0x139C914")]
		public Tutorial()
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0x139C91C", Offset = "0x139C91C", VA = "0x139C91C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A6A8", Offset = "0xB8A6A8")]
		private void <GameController_TutorialStart>b__39_0()
		{
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0x139CBC8", Offset = "0x139CBC8", VA = "0x139CBC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A6B8", Offset = "0xB8A6B8")]
		private void <StartSpawning>b__56_0()
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0x139CC80", Offset = "0x139CC80", VA = "0x139CC80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A6C8", Offset = "0xB8A6C8")]
		private void <StartSpawning>b__56_1()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public class TutorialObjectSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7E7F8", Offset = "0xB7E7F8")]
		[SerializeField]
		private ObjectSpawner _objectSpawner;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ObjectConfig> _objectsConfig;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ObjectConfig> _distractorsConfig;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _distractorsProbability;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ObjectConfig _nextObjectConfig;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _nextConfigDelay;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _objectCountToNextConfig;

		[Token(Token = "0x1700038B")]
		public ObjectSpawner ObjectSpawner
		{
			[Token(Token = "0x6002152")]
			[Address(RVA = "0x139D0E4", Offset = "0x139D0E4", VA = "0x139D0E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0x139D0EC", Offset = "0x139D0EC", VA = "0x139D0EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x139D168", Offset = "0x139D168", VA = "0x139D168")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x139D188", Offset = "0x139D188", VA = "0x139D188")]
		public void UpdateObjectConfigs(List<ObjectConfig> objectConfigs)
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x139D190", Offset = "0x139D190", VA = "0x139D190")]
		public void UpdateDistractorsConfig(List<ObjectConfig> distractorConfigs)
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x139D198", Offset = "0x139D198", VA = "0x139D198")]
		public void UpdateDistractorsProbability(float probability)
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0x139CC98", Offset = "0x139CC98", VA = "0x139CC98")]
		public void StartSpawning()
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x139B714", Offset = "0x139B714", VA = "0x139B714")]
		public void StopSpawning()
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0x139B55C", Offset = "0x139B55C", VA = "0x139B55C")]
		public void ForceNextObjectConfiguration(ObjectConfig objectConfig, int delay = -1)
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0x139D1A0", Offset = "0x139D1A0", VA = "0x139D1A0")]
		private void ObjectSpawner_OnTimeToSpawnObject(ObjectSpawner objectSpawner)
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0x139D2F4", Offset = "0x139D2F4", VA = "0x139D2F4")]
		public TutorialObjectSpawner()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public class VfxParticles : VfxEffect
	{
		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7E844", Offset = "0xB7E844")]
		public ParticleSystem _particleSystem;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystemRenderer _renderer;

		[Token(Token = "0x600215D")]
		[Address(RVA = "0x139D30C", Offset = "0x139D30C", VA = "0x139D30C", Slot = "7")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0x139D530", Offset = "0x139D530", VA = "0x139D530", Slot = "5")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0x139D330", Offset = "0x139D330", VA = "0x139D330")]
		private void SetParticlesColor(Color color)
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0x139D4F4", Offset = "0x139D4F4", VA = "0x139D4F4")]
		private void Play()
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0x139D57C", Offset = "0x139D57C", VA = "0x139D57C")]
		public VfxParticles()
		{
		}
	}
	[Token(Token = "0x200046D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB72144", Offset = "0xB72144")]
	public class ReactGameConfig : GameConfig
	{
		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB7E87C", Offset = "0xB7E87C")]
		public int missedShapeErrorPoints;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB7E8B4", Offset = "0xB7E8B4")]
		public float secondsToWaitForSwitching;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB7E8EC", Offset = "0xB7E8EC")]
		public float secondsToWaitAfterSwitching;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB7E924", Offset = "0xB7E924")]
		public float objectPauseSpeedPercent;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float roundDurationInSeconds;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7E95C", Offset = "0xB7E95C")]
		public ReactLevelConfig[] _levels;

		[Token(Token = "0x1700038C")]
		public override LevelConfig[] Levels
		{
			[Token(Token = "0x6002162")]
			[Address(RVA = "0x138F2D0", Offset = "0x138F2D0", VA = "0x138F2D0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0x138F2D8", Offset = "0x138F2D8", VA = "0x138F2D8")]
		public ReactGameConfig()
		{
		}
	}
}
namespace AttentionLab.MiniGames.Pizza
{
	[Token(Token = "0x200046E")]
	public class PizzaIngredientData
	{
		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ingredient;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int count;

		[Token(Token = "0x6002164")]
		[Address(RVA = "0xF6AAA8", Offset = "0xF6AAA8", VA = "0xF6AAA8")]
		public PizzaIngredientData(int ingredientId, int ingredientCount)
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class PizzaOrderData
	{
		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int level;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<PizzaIngredientData> ingredients;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int duration;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB7E994", Offset = "0xB7E994")]
		public DateTime start_timestamp;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB7EA24", Offset = "0xB7EA24")]
		public DateTime end_timestamp;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int result;

		[Token(Token = "0x6002165")]
		[Address(RVA = "0xF6ABD0", Offset = "0xF6ABD0", VA = "0xF6ABD0")]
		public PizzaOrderData(DateTime startTimeStamp, List<PizzaIngredientData> pizzaIngredients, int expireTime, int success, int level, DateTime endTimeStamp)
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class OrderPizzaBuilderMoment : PizzaBuilderMoment
	{
		[Token(Token = "0x200081B")]
		public enum SuccessType
		{
			[Token(Token = "0x4002D50")]
			ExpiredNoAssociation,
			[Token(Token = "0x4002D51")]
			SuccessDelivered,
			[Token(Token = "0x4002D52")]
			ExpiredAssociated,
			[Token(Token = "0x4002D53")]
			SuccessOvercooked,
			[Token(Token = "0x4002D54")]
			ExpiredSessionEnd
		}

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PizzaIngredientData> _ingredients;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EAB4", Offset = "0xB7EAB4")]
		private DateTime <StartTimeStamp>k__BackingField;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EAC4", Offset = "0xB7EAC4")]
		private float <ExpireTime>k__BackingField;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EAD4", Offset = "0xB7EAD4")]
		private SuccessType <Success>k__BackingField;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EAE4", Offset = "0xB7EAE4")]
		private int <Level>k__BackingField;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EAF4", Offset = "0xB7EAF4")]
		private DateTime <EndTimeStamp>k__BackingField;

		[Token(Token = "0x1700038D")]
		public DateTime StartTimeStamp
		{
			[Token(Token = "0x6002166")]
			[Address(RVA = "0xF6A820", Offset = "0xF6A820", VA = "0xF6A820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A6D8", Offset = "0xB8A6D8")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6002167")]
			[Address(RVA = "0xF6A828", Offset = "0xF6A828", VA = "0xF6A828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A6E8", Offset = "0xB8A6E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700038E")]
		public float ExpireTime
		{
			[Token(Token = "0x6002168")]
			[Address(RVA = "0xF6A830", Offset = "0xF6A830", VA = "0xF6A830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A6F8", Offset = "0xB8A6F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002169")]
			[Address(RVA = "0xF6A838", Offset = "0xF6A838", VA = "0xF6A838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A708", Offset = "0xB8A708")]
			set
			{
			}
		}

		[Token(Token = "0x1700038F")]
		public SuccessType Success
		{
			[Token(Token = "0x600216A")]
			[Address(RVA = "0xF6A840", Offset = "0xF6A840", VA = "0xF6A840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A718", Offset = "0xB8A718")]
			get
			{
				return default(SuccessType);
			}
			[Token(Token = "0x600216B")]
			[Address(RVA = "0xF6A848", Offset = "0xF6A848", VA = "0xF6A848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A728", Offset = "0xB8A728")]
			set
			{
			}
		}

		[Token(Token = "0x17000390")]
		public int Level
		{
			[Token(Token = "0x600216C")]
			[Address(RVA = "0xF6A850", Offset = "0xF6A850", VA = "0xF6A850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A738", Offset = "0xB8A738")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600216D")]
			[Address(RVA = "0xF6A858", Offset = "0xF6A858", VA = "0xF6A858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A748", Offset = "0xB8A748")]
			set
			{
			}
		}

		[Token(Token = "0x17000391")]
		public DateTime EndTimeStamp
		{
			[Token(Token = "0x600216E")]
			[Address(RVA = "0xF6A860", Offset = "0xF6A860", VA = "0xF6A860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A758", Offset = "0xB8A758")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x600216F")]
			[Address(RVA = "0xF6A868", Offset = "0xF6A868", VA = "0xF6A868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A768", Offset = "0xB8A768")]
			set
			{
			}
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xF6A870", Offset = "0xF6A870", VA = "0xF6A870")]
		public OrderPizzaBuilderMoment()
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xF6A8AC", Offset = "0xF6A8AC", VA = "0xF6A8AC")]
		public void SaveIngredientList(Dictionary<Ingredient.IngredientType, uint> ingredients)
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xF6AAE0", Offset = "0xF6AAE0", VA = "0xF6AAE0", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x2000471")]
	public abstract class PizzaBuilderMoment : GameMoment
	{
		[Token(Token = "0x6002173")]
		public abstract override void SetValues();

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xF6AA88", Offset = "0xF6AA88", VA = "0xF6AA88")]
		protected int ParseIngredient(Ingredient.IngredientType ingredientType)
		{
			return default(int);
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0xF6ABB8", Offset = "0xF6ABB8", VA = "0xF6ABB8")]
		protected int ParsePizzaResult(OrderPizzaBuilderMoment.SuccessType pizzaResult)
		{
			return default(int);
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0xF6A8A4", Offset = "0xF6A8A4", VA = "0xF6A8A4")]
		protected PizzaBuilderMoment()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class PizzaBurnedData
	{
		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int level;

		[Token(Token = "0x6002177")]
		[Address(RVA = "0xF74380", Offset = "0xF74380", VA = "0xF74380")]
		public PizzaBurnedData(int level)
		{
		}
	}
	[Token(Token = "0x2000473")]
	public class PizzaBurnedPizzaBuilderMoment : PizzaBuilderMoment
	{
		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly int _level;

		[Token(Token = "0x6002178")]
		[Address(RVA = "0xF73048", Offset = "0xF73048", VA = "0xF73048")]
		public PizzaBurnedPizzaBuilderMoment(int level)
		{
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0xF743AC", Offset = "0xF743AC", VA = "0xF743AC", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x2000474")]
	public class AnimatedDough : MonoBehaviour
	{
		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SkinnedMeshRenderer _meshRenderer;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] AnimationBonesToDetach;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Transform> _animationBonesInitialTransform;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isGrabbed;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Grabbable _grabbable;

		[Token(Token = "0x600217A")]
		[Address(RVA = "0x1251504", Offset = "0x1251504", VA = "0x1251504")]
		private void Awake()
		{
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0x12515D4", Offset = "0x12515D4", VA = "0x12515D4")]
		public void Setup(Transform parent, Transform nonAnimatedTransform, Grabbable grabbable)
		{
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0x1251898", Offset = "0x1251898", VA = "0x1251898")]
		private void Update()
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0x12519D8", Offset = "0x12519D8", VA = "0x12519D8")]
		private bool GrabStarted()
		{
			return default(bool);
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0x1251A74", Offset = "0x1251A74", VA = "0x1251A74")]
		private bool GrabFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0x1251B14", Offset = "0x1251B14", VA = "0x1251B14")]
		public void Show()
		{
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0x1251B34", Offset = "0x1251B34", VA = "0x1251B34")]
		public void Hide()
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0x1251B54", Offset = "0x1251B54", VA = "0x1251B54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0x1251C10", Offset = "0x1251C10", VA = "0x1251C10")]
		public AnimatedDough()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public class DeliveryArea : MonoBehaviour
	{
		[Token(Token = "0x200081C")]
		public delegate void OnPizzaDelivered(Pizza pizza, bool pizzaAnswersOrder);

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ProgressionManager _progressionManager;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnPizzaDelivered PizzaDelivered;

		[Token(Token = "0x6002183")]
		[Address(RVA = "0x1251C80", Offset = "0x1251C80", VA = "0x1251C80")]
		public void CheckPizza(Pizza pizza)
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0x1251D44", Offset = "0x1251D44", VA = "0x1251D44")]
		private void Success(Pizza pizza)
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0x1251F3C", Offset = "0x1251F3C", VA = "0x1251F3C")]
		private void Insuccess(Pizza pizza)
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x1252594", Offset = "0x1252594", VA = "0x1252594")]
		public DeliveryArea()
		{
		}
	}
	[Token(Token = "0x2000476")]
	public class DoughIngredient : MonoBehaviour
	{
		[Token(Token = "0x200081D")]
		public delegate void OnPizzaNotSpawned();

		[Token(Token = "0x200081E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73624", Offset = "0xB73624")]
		private sealed class <HelpPlacePizza_Coroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DoughIngredient <>4__this;

			[Token(Token = "0x4002D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <layerMask>5__2;

			[Token(Token = "0x4002D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PizzaSpawner <pizzaHelperMesh>5__3;

			[Token(Token = "0x4002D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Collider <pizzaHelperCollider>5__4;

			[Token(Token = "0x17000584")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003275")]
				[Address(RVA = "0x1253708", Offset = "0x1253708", VA = "0x1253708", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000585")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003277")]
				[Address(RVA = "0x1253774", Offset = "0x1253774", VA = "0x1253774", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003272")]
			[Address(RVA = "0x1252D9C", Offset = "0x1252D9C", VA = "0x1252D9C")]
			[DebuggerHidden]
			public <HelpPlacePizza_Coroutine>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6003273")]
			[Address(RVA = "0x1253404", Offset = "0x1253404", VA = "0x1253404", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003274")]
			[Address(RVA = "0x1253408", Offset = "0x1253408", VA = "0x1253408", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003276")]
			[Address(RVA = "0x1253710", Offset = "0x1253710", VA = "0x1253710", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _stillDough;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _animatedDough;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _pizzaHelper;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SkinnedMeshRenderer _meshRenderer;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator _meshMaterialize;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject[] _objectsToIgnoreBySpawner;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject _animatedDoughInstance;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AnimatedDough _animatedDoughComponent;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 _defaultPosition;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion _defaultRotation;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _isGrabbed;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		private bool _isGrounded;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Grabbable _grabbable;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject _pizzaHelperInstance;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Rigidbody _rigidBody;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _doughRadius;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public OnPizzaNotSpawned PizzaNotSpawned;

		[Token(Token = "0x17000392")]
		public GameObject PizzaHelperInstance
		{
			[Token(Token = "0x6002187")]
			[Address(RVA = "0x1252658", Offset = "0x1252658", VA = "0x1252658")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002188")]
			[Address(RVA = "0x1252660", Offset = "0x1252660", VA = "0x1252660")]
			set
			{
			}
		}

		[Token(Token = "0x17000393")]
		public bool IsGrounded
		{
			[Token(Token = "0x6002189")]
			[Address(RVA = "0x1252668", Offset = "0x1252668", VA = "0x1252668")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x1252670", Offset = "0x1252670", VA = "0x1252670")]
		private void Awake()
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0x1252714", Offset = "0x1252714", VA = "0x1252714")]
		private void Start()
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x1252798", Offset = "0x1252798", VA = "0x1252798")]
		private void Update()
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x1252ADC", Offset = "0x1252ADC", VA = "0x1252ADC")]
		private void InstantiateAnimatedDough()
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x1252A40", Offset = "0x1252A40", VA = "0x1252A40")]
		private bool GrabStarted()
		{
			return default(bool);
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x1252C48", Offset = "0x1252C48", VA = "0x1252C48")]
		private bool GrabFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0x1252CE8", Offset = "0x1252CE8", VA = "0x1252CE8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x1252BD4", Offset = "0x1252BD4", VA = "0x1252BD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8A778", Offset = "0xB8A778")]
		private IEnumerator HelpPlacePizza_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0x1252DC8", Offset = "0x1252DC8", VA = "0x1252DC8")]
		public void Show()
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x1252E98", Offset = "0x1252E98", VA = "0x1252E98")]
		public void Hide()
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0x1252F4C", Offset = "0x1252F4C", VA = "0x1252F4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0x1252F78", Offset = "0x1252F78", VA = "0x1252F78")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0x1252F90", Offset = "0x1252F90", VA = "0x1252F90")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0x12533FC", Offset = "0x12533FC", VA = "0x12533FC")]
		public DoughIngredient()
		{
		}
	}
	[Token(Token = "0x2000477")]
	public class DoughPlate : MonoBehaviour
	{
		[Token(Token = "0x6002198")]
		[Address(RVA = "0x12537CC", Offset = "0x12537CC", VA = "0x12537CC")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x12538A8", Offset = "0x12538A8", VA = "0x12538A8")]
		public DoughPlate()
		{
		}
	}
	[Token(Token = "0x2000478")]
	public class Ingredient : MonoBehaviour
	{
		[Token(Token = "0x200081F")]
		public enum IngredientType
		{
			[Token(Token = "0x4002D5C")]
			Tomato,
			[Token(Token = "0x4002D5D")]
			Pineapple,
			[Token(Token = "0x4002D5E")]
			Mushroom,
			[Token(Token = "0x4002D5F")]
			Olive,
			[Token(Token = "0x4002D60")]
			Cucumber,
			[Token(Token = "0x4002D61")]
			Dough,
			[Token(Token = "0x4002D62")]
			YellowSauce,
			[Token(Token = "0x4002D63")]
			RedSauce
		}

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected IngredientType _type;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool _canBeAddedToThePizza;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider _bigCollider;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isLocked;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _wasGrabbed;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool _destroyWhenNotGrabbedForLong;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Grabbable _grabbable;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer[] _meshRenderers;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody _rigidBody;

		[Token(Token = "0x17000394")]
		public IngredientType Type
		{
			[Token(Token = "0x600219A")]
			[Address(RVA = "0x1254928", Offset = "0x1254928", VA = "0x1254928")]
			get
			{
				return default(IngredientType);
			}
			[Token(Token = "0x600219B")]
			[Address(RVA = "0x1254930", Offset = "0x1254930", VA = "0x1254930")]
			private set
			{
			}
		}

		[Token(Token = "0x17000395")]
		public bool CanBeAddedToThePizza
		{
			[Token(Token = "0x600219C")]
			[Address(RVA = "0x1254938", Offset = "0x1254938", VA = "0x1254938")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600219D")]
			[Address(RVA = "0x1254940", Offset = "0x1254940", VA = "0x1254940")]
			set
			{
			}
		}

		[Token(Token = "0x17000396")]
		public bool IsLocked
		{
			[Token(Token = "0x600219E")]
			[Address(RVA = "0x125494C", Offset = "0x125494C", VA = "0x125494C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600219F")]
			[Address(RVA = "0x1254954", Offset = "0x1254954", VA = "0x1254954")]
			set
			{
			}
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x1254960", Offset = "0x1254960", VA = "0x1254960")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x1254A68", Offset = "0x1254A68", VA = "0x1254A68")]
		private void Start()
		{
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x1254AE0", Offset = "0x1254AE0", VA = "0x1254AE0")]
		private void Update()
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x1254EE8", Offset = "0x1254EE8", VA = "0x1254EE8")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x1255118", Offset = "0x1255118", VA = "0x1255118")]
		public void Destroy()
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x1255214", Offset = "0x1255214", VA = "0x1255214")]
		public void Lock()
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x12549E0", Offset = "0x12549E0", VA = "0x12549E0")]
		private void ShowMesh(bool value)
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x12552F8", Offset = "0x12552F8", VA = "0x12552F8")]
		public Ingredient()
		{
		}
	}
	[Token(Token = "0x2000479")]
	public class IngredientContainer : MonoBehaviour
	{
		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _ingredient;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _spawnTransform;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _ingredientInstance;

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x1255300", Offset = "0x1255300", VA = "0x1255300")]
		private void Start()
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x1255304", Offset = "0x1255304", VA = "0x1255304")]
		private void SpawnIngredient()
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x1254D78", Offset = "0x1254D78", VA = "0x1254D78")]
		public void ObjectPickedup()
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x12553F0", Offset = "0x12553F0", VA = "0x12553F0")]
		public IngredientContainer()
		{
		}
	}
	[Token(Token = "0x200047A")]
	public class Order : MonoBehaviour
	{
		[Token(Token = "0x2000820")]
		public delegate void OnTimePassed(Order order);

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static string _timeOutAnimTrigger;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static string _clearedAnimTrigger;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static string _inOvenAnimTrigger;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static string _outOvenAnimTrigger;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected SkinnedMeshRenderer _animatedMesh;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected MeshRenderer _stillMesh;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected OrderTimer _orderTimer;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected OrderAnimator _orderAnimator;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected OrderIngredient _leftSauce;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected OrderIngredient _rightSauce;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected OrderIngredient _middleSauce;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected OrderIngredient[] _ingredientSlots;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected List<OrderIngredient> _ingredientsInOrder;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int _sauceCount;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected bool _isInOperation;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Dictionary<Ingredient.IngredientType, uint> _ingredients;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected float hoverHeight;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected float hoverRange;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected float hoverSpeed;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected List<Pizza> _associatedPizzas;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected List<Pizza> _trackedPizzas;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected List<Ingredient.IngredientType> _allIngredientTypesList;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private OrderPizzaBuilderMoment _moment;

		[Token(Token = "0x17000397")]
		public Dictionary<Ingredient.IngredientType, uint> Ingredients
		{
			[Token(Token = "0x60021AC")]
			[Address(RVA = "0x12553F8", Offset = "0x12553F8", VA = "0x12553F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021AD")]
			[Address(RVA = "0x1255400", Offset = "0x1255400", VA = "0x1255400")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000398")]
		public List<Pizza> AssociatedPizzas
		{
			[Token(Token = "0x60021AE")]
			[Address(RVA = "0x1255408", Offset = "0x1255408", VA = "0x1255408")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021AF")]
			[Address(RVA = "0x1255410", Offset = "0x1255410", VA = "0x1255410")]
			set
			{
			}
		}

		[Token(Token = "0x17000399")]
		public List<Pizza> TrackedPizzas
		{
			[Token(Token = "0x60021B0")]
			[Address(RVA = "0x1255418", Offset = "0x1255418", VA = "0x1255418")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021B1")]
			[Address(RVA = "0x1255420", Offset = "0x1255420", VA = "0x1255420")]
			set
			{
			}
		}

		[Token(Token = "0x1700039A")]
		public int SauceCount
		{
			[Token(Token = "0x60021B2")]
			[Address(RVA = "0x1255428", Offset = "0x1255428", VA = "0x1255428")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60021B3")]
			[Address(RVA = "0x1255430", Offset = "0x1255430", VA = "0x1255430")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700039B")]
		public bool IsInOperation
		{
			[Token(Token = "0x60021B4")]
			[Address(RVA = "0x1255438", Offset = "0x1255438", VA = "0x1255438")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021B5")]
			[Address(RVA = "0x1255440", Offset = "0x1255440", VA = "0x1255440")]
			set
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event OnTimePassed TimePassed
		{
			[Token(Token = "0x60021B6")]
			[Address(RVA = "0x125544C", Offset = "0x125544C", VA = "0x125544C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A7DC", Offset = "0xB8A7DC")]
			add
			{
			}
			[Token(Token = "0x60021B7")]
			[Address(RVA = "0x12554F0", Offset = "0x12554F0", VA = "0x12554F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A7EC", Offset = "0xB8A7EC")]
			remove
			{
			}
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x1255594", Offset = "0x1255594", VA = "0x1255594")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x12557FC", Offset = "0x12557FC", VA = "0x12557FC")]
		protected void Start()
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x12559B0", Offset = "0x12559B0", VA = "0x12559B0")]
		protected void Update()
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x1255A34", Offset = "0x1255A34", VA = "0x1255A34")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x1255A40", Offset = "0x1255A40", VA = "0x1255A40", Slot = "4")]
		protected virtual void LogMoment()
		{
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x1255B48", Offset = "0x1255B48", VA = "0x1255B48")]
		public void OrderTimer_TimePassed()
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x1255D4C", Offset = "0x1255D4C", VA = "0x1255D4C")]
		public void CallTimePassed()
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x1255D70", Offset = "0x1255D70", VA = "0x1255D70")]
		public void Cleared()
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x1255E80", Offset = "0x1255E80", VA = "0x1255E80")]
		public void GenerateOrder(int sauceCount, int ingredientCount, int minIngredientAmount, int maxIngredientAmount, List<Order> ordersToExclude)
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x12567CC", Offset = "0x12567CC", VA = "0x12567CC")]
		public void PizzaInOven()
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x12568C0", Offset = "0x12568C0", VA = "0x12568C0")]
		public void PizzaLeftOven()
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x12568F4", Offset = "0x12568F4", VA = "0x12568F4")]
		public void PizzaBurned()
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x1256800", Offset = "0x1256800", VA = "0x1256800")]
		protected void ShowCookingIcon(bool value)
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x1256928", Offset = "0x1256928", VA = "0x1256928")]
		public void StartTimer()
		{
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x1256944", Offset = "0x1256944", VA = "0x1256944")]
		public float TimeToExpire()
		{
			return default(float);
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x1256960", Offset = "0x1256960", VA = "0x1256960")]
		public void ShowOnPizzaSignal(Ingredient.IngredientType ingredientType)
		{
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0x1256A78", Offset = "0x1256A78", VA = "0x1256A78")]
		private void HideOnPizzaSignal(Ingredient.IngredientType ingredientType)
		{
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0x1256B90", Offset = "0x1256B90", VA = "0x1256B90")]
		private void ShowAllOnPizzaSignals()
		{
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x1256C94", Offset = "0x1256C94", VA = "0x1256C94")]
		private void HideAllOnPizzaSignals()
		{
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x1256D98", Offset = "0x1256D98", VA = "0x1256D98")]
		public void SetTimeToExpire(float seconds)
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x1256DC8", Offset = "0x1256DC8", VA = "0x1256DC8")]
		public void AddTrackedPizza(Pizza pizza)
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x125710C", Offset = "0x125710C", VA = "0x125710C")]
		public void RemoveTrackedPizza(Pizza pizza)
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x1256E68", Offset = "0x1256E68", VA = "0x1256E68")]
		public void UpdateOnPizzaSignals()
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x12571D8", Offset = "0x12571D8", VA = "0x12571D8")]
		public void SetupTimePassedAnimation()
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x125735C", Offset = "0x125735C", VA = "0x125735C")]
		public void SetupClearedAnimation()
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x1257270", Offset = "0x1257270", VA = "0x1257270")]
		private void HideAllIngredients()
		{
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x12573F4", Offset = "0x12573F4", VA = "0x12573F4")]
		public Order()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class OrderAnimator : MonoBehaviour
	{
		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Order _order;

		[Token(Token = "0x1700039C")]
		public Animator Animator
		{
			[Token(Token = "0x60021D4")]
			[Address(RVA = "0xF6A43C", Offset = "0xF6A43C", VA = "0xF6A43C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021D5")]
			[Address(RVA = "0xF6A444", Offset = "0xF6A444", VA = "0xF6A444")]
			private set
			{
			}
		}

		[Token(Token = "0x1700039D")]
		public Order Order
		{
			[Token(Token = "0x60021D6")]
			[Address(RVA = "0xF6A44C", Offset = "0xF6A44C", VA = "0xF6A44C")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60021D7")]
			[Address(RVA = "0xF6A454", Offset = "0xF6A454", VA = "0xF6A454")]
			set
			{
			}
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0xF6A45C", Offset = "0xF6A45C", VA = "0xF6A45C")]
		public void SetupTimePassed()
		{
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0xF6A478", Offset = "0xF6A478", VA = "0xF6A478")]
		public void SetupCleared()
		{
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0xF6A494", Offset = "0xF6A494", VA = "0xF6A494")]
		public void TimePassed()
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0xF6A4B0", Offset = "0xF6A4B0", VA = "0xF6A4B0")]
		public void Cleared()
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0xF6A534", Offset = "0xF6A534", VA = "0xF6A534")]
		public OrderAnimator()
		{
		}
	}
	[Token(Token = "0x200047C")]
	public class OrderIngredient : MonoBehaviour
	{
		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _mesh;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Ingredient.IngredientType _type;

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0xF6A53C", Offset = "0xF6A53C", VA = "0xF6A53C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0xF6A5FC", Offset = "0xF6A5FC", VA = "0xF6A5FC")]
		public void SetIngredient(Ingredient.IngredientType type, uint quantity)
		{
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0xF6A798", Offset = "0xF6A798", VA = "0xF6A798")]
		public Ingredient.IngredientType Type()
		{
			return default(Ingredient.IngredientType);
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0xF6A7A0", Offset = "0xF6A7A0", VA = "0xF6A7A0")]
		public void ShowOnPizzaSignal(bool value)
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xF6A818", Offset = "0xF6A818", VA = "0xF6A818")]
		public OrderIngredient()
		{
		}
	}
	[Token(Token = "0x200047D")]
	public class OrderSpawner : MonoBehaviour
	{
		[Token(Token = "0x2000821")]
		protected class OrderSlot
		{
			[Token(Token = "0x4002D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Order order;

			[Token(Token = "0x4002D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 position;

			[Token(Token = "0x600327C")]
			[Address(RVA = "0xF6B428", Offset = "0xF6B428", VA = "0xF6B428")]
			public bool IsAvailable()
			{
				return default(bool);
			}

			[Token(Token = "0x600327D")]
			[Address(RVA = "0xF6AED0", Offset = "0xF6AED0", VA = "0xF6AED0")]
			public OrderSlot()
			{
			}
		}

		[Token(Token = "0x2000822")]
		public enum ValidityOperation
		{
			[Token(Token = "0x4002D67")]
			ShowArrow,
			[Token(Token = "0x4002D68")]
			Remove,
			[Token(Token = "0x4002D69")]
			None
		}

		[Token(Token = "0x2000823")]
		public delegate void OnOrderSpawned(Order order);

		[Token(Token = "0x2000824")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73634", Offset = "0xB73634")]
		private sealed class <MoveOrder_Coroutine>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OrderSlot orderSlot;

			[Token(Token = "0x4002D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OrderSpawner <>4__this;

			[Token(Token = "0x4002D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isNewOrder;

			[Token(Token = "0x17000586")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003285")]
				[Address(RVA = "0xF6DD24", Offset = "0xF6DD24", VA = "0xF6DD24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000587")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003287")]
				[Address(RVA = "0xF6DD90", Offset = "0xF6DD90", VA = "0xF6DD90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003282")]
			[Address(RVA = "0xF6B720", Offset = "0xF6B720", VA = "0xF6B720")]
			[DebuggerHidden]
			public <MoveOrder_Coroutine>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6003283")]
			[Address(RVA = "0xF6D6BC", Offset = "0xF6D6BC", VA = "0xF6D6BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003284")]
			[Address(RVA = "0xF6D6C0", Offset = "0xF6D6C0", VA = "0xF6D6C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003286")]
			[Address(RVA = "0xF6DD2C", Offset = "0xF6DD2C", VA = "0xF6DD2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000825")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73644", Offset = "0xB73644")]
		private sealed class <DestroyOrderWhenPossible_Coroutine>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OrderSlot orderslot;

			[Token(Token = "0x4002D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OrderSpawner <>4__this;

			[Token(Token = "0x17000588")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600328B")]
				[Address(RVA = "0xF6D648", Offset = "0xF6D648", VA = "0xF6D648", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000589")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600328D")]
				[Address(RVA = "0xF6D6B4", Offset = "0xF6D6B4", VA = "0xF6D6B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003288")]
			[Address(RVA = "0xF6D32C", Offset = "0xF6D32C", VA = "0xF6D32C")]
			[DebuggerHidden]
			public <DestroyOrderWhenPossible_Coroutine>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6003289")]
			[Address(RVA = "0xF6D4FC", Offset = "0xF6D4FC", VA = "0xF6D4FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600328A")]
			[Address(RVA = "0xF6D500", Offset = "0xF6D500", VA = "0xF6D500", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600328C")]
			[Address(RVA = "0xF6D650", Offset = "0xF6D650", VA = "0xF6D650", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ProgressionManager _progressionManager;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected GameObject _order;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Transform _spawnOrderPosition;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _orderPositions;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected float _orderMoveSpeed;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected int _maxNumberOrders;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool _shouldSpawn;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected List<OrderSlot> _currentOrders;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected List<Coroutine> _activeCoroutines;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int _maxSauceCountPerOrder;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int _maxIngredientCountPerOrder;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int _minIngredientCountPerOrder;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int _maxIngredientAmount;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int _minIngredientAmount;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int _maxOrderAmount;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float _timeBetweenOrder;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float _orderExpiryTime;

		[Token(Token = "0x14000045")]
		public event OnOrderSpawned OrderSpawned
		{
			[Token(Token = "0x60021E2")]
			[Address(RVA = "0xF6AC88", Offset = "0xF6AC88", VA = "0xF6AC88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A7FC", Offset = "0xB8A7FC")]
			add
			{
			}
			[Token(Token = "0x60021E3")]
			[Address(RVA = "0xF6AD2C", Offset = "0xF6AD2C", VA = "0xF6AD2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A80C", Offset = "0xB8A80C")]
			remove
			{
			}
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0xF6ADD0", Offset = "0xF6ADD0", VA = "0xF6ADD0")]
		protected void Start()
		{
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xF6AED8", Offset = "0xF6AED8", VA = "0xF6AED8")]
		protected void Order_TimePassed(Order order)
		{
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0xF6B0FC", Offset = "0xF6B0FC", VA = "0xF6B0FC")]
		public void StartSpawning()
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0xF6B154", Offset = "0xF6B154", VA = "0xF6B154")]
		private void SpawnOrder()
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0xF6B498", Offset = "0xF6B498", VA = "0xF6B498")]
		protected List<Order> OrdersToExcludeFromNewOrder(int sauceCount, int orderIngredientCount)
		{
			return null;
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xF6B694", Offset = "0xF6B694", VA = "0xF6B694")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8A81C", Offset = "0xB8A81C")]
		protected IEnumerator MoveOrder_Coroutine(OrderSlot orderSlot, bool isNewOrder)
		{
			return null;
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0xF6B74C", Offset = "0xF6B74C", VA = "0xF6B74C")]
		public void ClearOrders()
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xF6B8EC", Offset = "0xF6B8EC", VA = "0xF6B8EC")]
		public bool CheckPizza(Pizza pizza)
		{
			return default(bool);
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0xF6BB10", Offset = "0xF6BB10", VA = "0xF6BB10")]
		public bool CheckAllOrderIngredients(Pizza pizza)
		{
			return default(bool);
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xF6C10C", Offset = "0xF6C10C", VA = "0xF6C10C")]
		public void CheckNewOrderIngredients(Order order, Pizza pizza)
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0xF6BD60", Offset = "0xF6BD60", VA = "0xF6BD60")]
		protected bool CheckOrderIngredients(Order order, Pizza pizza)
		{
			return default(bool);
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0xF6BFE0", Offset = "0xF6BFE0", VA = "0xF6BFE0")]
		protected void AssociatePizzaToClosestToExpireOrder(List<Order> orderCandidates, Pizza pizza)
		{
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0xF6C43C", Offset = "0xF6C43C", VA = "0xF6C43C", Slot = "4")]
		protected virtual void AssociatePizza(Order orderForPizza, Pizza pizza, bool registerInput = true)
		{
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0xF6C5AC", Offset = "0xF6C5AC", VA = "0xF6C5AC")]
		protected void DissociatePizza(Order orderForPizza, Pizza pizza)
		{
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0xF6C730", Offset = "0xF6C730", VA = "0xF6C730")]
		public void PizzaInOven(Pizza pizza)
		{
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0xF6C9A0", Offset = "0xF6C9A0", VA = "0xF6C9A0")]
		public void PizzaLeftOven(Pizza pizza)
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0xF6CA84", Offset = "0xF6CA84", VA = "0xF6CA84")]
		public void PizzaBurned(Pizza pizza)
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0xF6CCB8", Offset = "0xF6CCB8", VA = "0xF6CCB8")]
		public void PizzaDestroyed(Pizza pizza)
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0xF6C268", Offset = "0xF6C268", VA = "0xF6C268")]
		protected Order OrderForPizza(Pizza pizza)
		{
			return null;
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0xF6CF14", Offset = "0xF6CF14", VA = "0xF6CF14")]
		protected void PrintIngredientList(Dictionary<Ingredient.IngredientType, uint> ingredients)
		{
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0xF6D2D4", Offset = "0xF6D2D4", VA = "0xF6D2D4")]
		public void Config(PizzaLevelConfig levelConfig)
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0xF6B07C", Offset = "0xF6B07C", VA = "0xF6B07C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8A880", Offset = "0xB8A880")]
		private IEnumerator DestroyOrderWhenPossible_Coroutine(OrderSlot orderslot)
		{
			return null;
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0xF6D358", Offset = "0xF6D358", VA = "0xF6D358")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0xF6D454", Offset = "0xF6D454", VA = "0xF6D454")]
		public OrderSpawner()
		{
		}
	}
	[Token(Token = "0x200047E")]
	public class OrderTimer : MonoBehaviour
	{
		[Token(Token = "0x2000826")]
		public delegate void OnTimePassed();

		[Token(Token = "0x2000827")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73654", Offset = "0xB73654")]
		private sealed class <CountTime_Coroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OrderTimer <>4__this;

			[Token(Token = "0x4002D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timePassed>5__2;

			[Token(Token = "0x1700058A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003295")]
				[Address(RVA = "0xF6E954", Offset = "0xF6E954", VA = "0xF6E954", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003297")]
				[Address(RVA = "0xF6E9C0", Offset = "0xF6E9C0", VA = "0xF6E9C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003292")]
			[Address(RVA = "0xF6E310", Offset = "0xF6E310", VA = "0xF6E310")]
			[DebuggerHidden]
			public <CountTime_Coroutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6003293")]
			[Address(RVA = "0xF6E4E4", Offset = "0xF6E4E4", VA = "0xF6E4E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003294")]
			[Address(RVA = "0xF6E4E8", Offset = "0xF6E4E8", VA = "0xF6E4E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003296")]
			[Address(RVA = "0xF6E95C", Offset = "0xF6E95C", VA = "0xF6E95C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _time;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _bar;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _clockPointer;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _clock;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _startColor;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color _midColor;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color _endColor;

		[Token(Token = "0x4001C46")]
		private const string _appearAnimation = "ClockAppear";

		[Token(Token = "0x4001C47")]
		private const string _disappearAnimation = "ClockDisappear";

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Gradient _topGradient;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Gradient _bottomGradient;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _startTime;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _hasStarted;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool _isActive;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
		private bool _pizzaInOven;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _pizzaInOvenTimeModifier;

		[Token(Token = "0x14000046")]
		public event OnTimePassed TimePassed
		{
			[Token(Token = "0x60021FC")]
			[Address(RVA = "0xF6DDD8", Offset = "0xF6DDD8", VA = "0xF6DDD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A8E4", Offset = "0xB8A8E4")]
			add
			{
			}
			[Token(Token = "0x60021FD")]
			[Address(RVA = "0xF6DE7C", Offset = "0xF6DE7C", VA = "0xF6DE7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8A8F4", Offset = "0xB8A8F4")]
			remove
			{
			}
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0xF6DF20", Offset = "0xF6DF20", VA = "0xF6DF20")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0xF6E07C", Offset = "0xF6E07C", VA = "0xF6E07C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0xF6E1F0", Offset = "0xF6E1F0", VA = "0xF6E1F0")]
		public void StartTimer()
		{
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0xF6E29C", Offset = "0xF6E29C", VA = "0xF6E29C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8A904", Offset = "0xB8A904")]
		private IEnumerator CountTime_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0xF6E33C", Offset = "0xF6E33C", VA = "0xF6E33C")]
		private Color GetColorForBarPercentage(float barPercentage)
		{
			return default(Color);
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0xF6E394", Offset = "0xF6E394", VA = "0xF6E394")]
		public float TimeToExpire()
		{
			return default(float);
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0xF6E3D0", Offset = "0xF6E3D0", VA = "0xF6E3D0")]
		public void SetTimeToExpire(float seconds)
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0xF6E3D8", Offset = "0xF6E3D8", VA = "0xF6E3D8")]
		public void PizzaInOven()
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0xF6E3E4", Offset = "0xF6E3E4", VA = "0xF6E3E4")]
		public void PizzaLeftOven()
		{
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0xF6E3EC", Offset = "0xF6E3EC", VA = "0xF6E3EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0xF6E418", Offset = "0xF6E418", VA = "0xF6E418")]
		public OrderTimer()
		{
		}
	}
	[Token(Token = "0x200047F")]
	public class Oven : MonoBehaviour
	{
		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SkinnedMeshRenderer _skinnedMeshRenderer;

		[Token(Token = "0x6002209")]
		[Address(RVA = "0xF6EA18", Offset = "0xF6EA18", VA = "0xF6EA18")]
		public void Show(bool value)
		{
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0xF6ECEC", Offset = "0xF6ECEC", VA = "0xF6ECEC")]
		public Oven()
		{
		}
	}
	[Token(Token = "0x2000480")]
	public class OvenSlot : MonoBehaviour
	{
		[Token(Token = "0x2000828")]
		public enum OvenSlotPosition
		{
			[Token(Token = "0x4002D78")]
			Top,
			[Token(Token = "0x4002D79")]
			Middle,
			[Token(Token = "0x4002D7A")]
			Bottom
		}

		[Token(Token = "0x2000829")]
		private enum State
		{
			[Token(Token = "0x4002D7C")]
			Cooking,
			[Token(Token = "0x4002D7D")]
			Cooked,
			[Token(Token = "0x4002D7E")]
			Warning,
			[Token(Token = "0x4002D7F")]
			Burned,
			[Token(Token = "0x4002D80")]
			None
		}

		[Token(Token = "0x200082A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73664", Offset = "0xB73664")]
		private sealed class <PlacePizza_Coroutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OvenSlot <>4__this;

			[Token(Token = "0x4002D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Grabbable <heldPizzaGrabbable>5__2;

			[Token(Token = "0x1700058C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600329B")]
				[Address(RVA = "0xF70EE8", Offset = "0xF70EE8", VA = "0xF70EE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600329D")]
				[Address(RVA = "0xF70F54", Offset = "0xF70F54", VA = "0xF70F54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003298")]
			[Address(RVA = "0xF6F3B0", Offset = "0xF6F3B0", VA = "0xF6F3B0")]
			[DebuggerHidden]
			public <PlacePizza_Coroutine>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6003299")]
			[Address(RVA = "0xF708C0", Offset = "0xF708C0", VA = "0xF708C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600329A")]
			[Address(RVA = "0xF708C4", Offset = "0xF708C4", VA = "0xF708C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600329C")]
			[Address(RVA = "0xF70EF0", Offset = "0xF70EF0", VA = "0xF70EF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200082B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73674", Offset = "0xB73674")]
		private sealed class <CookingTimer_Coroutine>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OvenSlot <>4__this;

			[Token(Token = "0x1700058E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032A1")]
				[Address(RVA = "0xF7084C", Offset = "0xF7084C", VA = "0xF7084C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032A3")]
				[Address(RVA = "0xF708B8", Offset = "0xF708B8", VA = "0xF708B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600329E")]
			[Address(RVA = "0xF6F450", Offset = "0xF6F450", VA = "0xF6F450")]
			[DebuggerHidden]
			public <CookingTimer_Coroutine>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x600329F")]
			[Address(RVA = "0xF7041C", Offset = "0xF7041C", VA = "0xF7041C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032A0")]
			[Address(RVA = "0xF70420", Offset = "0xF70420", VA = "0xF70420", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032A2")]
			[Address(RVA = "0xF70854", Offset = "0xF70854", VA = "0xF70854", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string TopSlotShaderVariable;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string MiddleSlotShaderVariable;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string BottomSlotShaderVariable;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string TopTimerShaderVariable;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string MiddleTimerShaderVariable;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string BottomTimerShaderVariable;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string TopInAnimationTrigger;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static string MiddleInAnimationTrigger;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string BottomInAnimationTrigger;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string TopOutAnimationTrigger;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string MiddleOutAnimationTrigger;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static string BottomOutAnimationTrigger;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static string TopWarningAnimationTrigger;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static string MiddleWarningAnimationTrigger;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static string BottomWarningAnimationTrigger;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _turningRate;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _moveRate;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OvenSlotAlarm _alarm;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameManager _gameManager;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SkinnedMeshRenderer _ovenRenderer;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SkinnedMeshRenderer _timerRenderer;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private OvenSlotPosition _position;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Animator _ovenAnimator;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _slotAvailable;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pizza _heldPizza;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private State _state;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string _slotShaderVariable;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string _timerShaderVariable;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string _inAnimationTrigger;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string _outAnimationTrigger;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string _warningAnimationTrigger;

		[Token(Token = "0x600220B")]
		[Address(RVA = "0xF6ECF4", Offset = "0xF6ECF4", VA = "0xF6ECF4")]
		private void Start()
		{
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0xF6EF00", Offset = "0xF6EF00", VA = "0xF6EF00")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0xF6F33C", Offset = "0xF6F33C", VA = "0xF6F33C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8A968", Offset = "0xB8A968")]
		private IEnumerator PlacePizza_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0xF6F3DC", Offset = "0xF6F3DC", VA = "0xF6F3DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8A9CC", Offset = "0xB8A9CC")]
		private IEnumerator CookingTimer_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0xF6F47C", Offset = "0xF6F47C", VA = "0xF6F47C")]
		private void HandlePizzaCookedTime()
		{
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0xF6F738", Offset = "0xF6F738", VA = "0xF6F738")]
		private void SetLightFill(float cookedTime)
		{
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0xF6F1F0", Offset = "0xF6F1F0", VA = "0xF6F1F0")]
		public void ClearState()
		{
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0xF6EE84", Offset = "0xF6EE84", VA = "0xF6EE84")]
		public void ResetTimer()
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0xF6F96C", Offset = "0xF6F96C", VA = "0xF6F96C")]
		private void SetInitialState()
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0xF6F54C", Offset = "0xF6F54C", VA = "0xF6F54C")]
		private void HandleStateTransition()
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0xF70250", Offset = "0xF70250", VA = "0xF70250")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0xF70294", Offset = "0xF70294", VA = "0xF70294")]
		public OvenSlot()
		{
		}
	}
	[Token(Token = "0x2000481")]
	public class OvenSlotAlarm : MonoBehaviour
	{
		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7EDF4", Offset = "0xB7EDF4")]
		[SerializeField]
		private AudioClip _cookingSound;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _cookedPing;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _burningAlarm;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _burnedSound;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SFXInstance _cookingSFXInstance;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SFXInstance _ovenOvercookAlarmSFXInstance;

		[Token(Token = "0x6002218")]
		[Address(RVA = "0xF6FAA8", Offset = "0xF6FAA8", VA = "0xF6FAA8")]
		public void PlayCookingSound()
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0xF6FD1C", Offset = "0xF6FD1C", VA = "0xF6FD1C")]
		public void PlayCookedPing()
		{
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0xF6FF00", Offset = "0xF6FF00", VA = "0xF6FF00")]
		public void PlayBurningAlarm()
		{
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0xF7006C", Offset = "0xF7006C", VA = "0xF7006C")]
		public void PlayBurnedSound()
		{
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0xF6F8C4", Offset = "0xF6F8C4", VA = "0xF6F8C4")]
		public void Stop(Pizza heldPizza)
		{
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0xF70F5C", Offset = "0xF70F5C", VA = "0xF70F5C")]
		public OvenSlotAlarm()
		{
		}
	}
	[Token(Token = "0x2000482")]
	public class Pizza : MonoBehaviour
	{
		[Token(Token = "0x200082C")]
		public enum CookedState
		{
			[Token(Token = "0x4002D89")]
			Uncooked,
			[Token(Token = "0x4002D8A")]
			Cooking,
			[Token(Token = "0x4002D8B")]
			Cooked,
			[Token(Token = "0x4002D8C")]
			Overcooked,
			[Token(Token = "0x4002D8D")]
			Burned
		}

		[Token(Token = "0x200082D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73684", Offset = "0xB73684")]
		private sealed class <MoveIngredient_Coroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject ingredient;

			[Token(Token = "0x4002D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <animationTime>5__2;

			[Token(Token = "0x4002D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x17000590")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032A7")]
				[Address(RVA = "0xF73C28", Offset = "0xF73C28", VA = "0xF73C28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000591")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032A9")]
				[Address(RVA = "0xF73C94", Offset = "0xF73C94", VA = "0xF73C94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032A4")]
			[Address(RVA = "0xF72FAC", Offset = "0xF72FAC", VA = "0xF72FAC")]
			[DebuggerHidden]
			public <MoveIngredient_Coroutine>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60032A5")]
			[Address(RVA = "0xF7398C", Offset = "0xF7398C", VA = "0xF7398C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032A6")]
			[Address(RVA = "0xF73990", Offset = "0xF73990", VA = "0xF73990", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032A8")]
			[Address(RVA = "0xF73C30", Offset = "0xF73C30", VA = "0xF73C30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float CookTime;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float WarningTime;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float BurnedTime;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7EE70", Offset = "0xB7EE70")]
		[SerializeField]
		private Renderer _renderer;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7EEBC", Offset = "0xB7EEBC")]
		[SerializeField]
		private GameObject _ingredientHolder;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<GameObject> _tomatoes;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<GameObject> _olives;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<GameObject> _cucumbers;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<GameObject> _pineapples;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<GameObject> _mushrooms;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7EF58", Offset = "0xB7EF58")]
		[SerializeField]
		private PizzaSmoke _smoke;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7EFA4", Offset = "0xB7EFA4")]
		[SerializeField]
		private MeshRenderer _redSauceIndicator;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MeshRenderer _yellowSauceIndicator;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Coroutine> _activeCoroutines;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<Ingredient.IngredientType, uint> _ingredients;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<GameObject> _ingredientsObjects;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _cookedTime;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _isInOvenSlot;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool _isAssociated;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CookedState _cookedState;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private OrderSpawner _orderSpawner;

		[Token(Token = "0x1700039E")]
		public float CookedTime
		{
			[Token(Token = "0x600221E")]
			[Address(RVA = "0xF70F64", Offset = "0xF70F64", VA = "0xF70F64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600221F")]
			[Address(RVA = "0xF70F6C", Offset = "0xF70F6C", VA = "0xF70F6C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700039F")]
		public Dictionary<Ingredient.IngredientType, uint> Ingredients
		{
			[Token(Token = "0x6002220")]
			[Address(RVA = "0xF70F74", Offset = "0xF70F74", VA = "0xF70F74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002221")]
			[Address(RVA = "0xF70F7C", Offset = "0xF70F7C", VA = "0xF70F7C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003A0")]
		public OrderSpawner OrderSpawner
		{
			[Token(Token = "0x6002222")]
			[Address(RVA = "0xF70F84", Offset = "0xF70F84", VA = "0xF70F84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002223")]
			[Address(RVA = "0xF70F8C", Offset = "0xF70F8C", VA = "0xF70F8C")]
			set
			{
			}
		}

		[Token(Token = "0x170003A1")]
		public bool IsInOvenSlot
		{
			[Token(Token = "0x6002224")]
			[Address(RVA = "0xF7101C", Offset = "0xF7101C", VA = "0xF7101C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002225")]
			[Address(RVA = "0xF71024", Offset = "0xF71024", VA = "0xF71024")]
			set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		public bool IsAssociated
		{
			[Token(Token = "0x6002226")]
			[Address(RVA = "0xF71030", Offset = "0xF71030", VA = "0xF71030")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002227")]
			[Address(RVA = "0xF71038", Offset = "0xF71038", VA = "0xF71038")]
			set
			{
			}
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0xF71044", Offset = "0xF71044", VA = "0xF71044")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0xF7184C", Offset = "0xF7184C", VA = "0xF7184C")]
		private void Start()
		{
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0xF71970", Offset = "0xF71970", VA = "0xF71970")]
		private void Reset()
		{
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0xF71E04", Offset = "0xF71E04", VA = "0xF71E04")]
		public void PizzaIngredientHolder_IngredientAdded(Ingredient ingredient, Vector3 position)
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0xF72020", Offset = "0xF72020", VA = "0xF72020")]
		public void PizzaIngredientHolder_IngredientRemoved(Ingredient ingredient)
		{
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0xF721F8", Offset = "0xF721F8", VA = "0xF721F8")]
		public void PizzaIngredientHolder_SauceAdded(Ingredient ingredient, float amount)
		{
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0xF7246C", Offset = "0xF7246C", VA = "0xF7246C")]
		public void OrderSpawner_OrderSpawned(Order order)
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xF7249C", Offset = "0xF7249C", VA = "0xF7249C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xF7253C", Offset = "0xF7253C", VA = "0xF7253C")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0xF71E08", Offset = "0xF71E08", VA = "0xF71E08")]
		private void HandleIngredient(Ingredient ingredient, Vector3 position)
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0xF726C4", Offset = "0xF726C4", VA = "0xF726C4")]
		private bool AddIngredient(Ingredient ingredient)
		{
			return default(bool);
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0xF72024", Offset = "0xF72024", VA = "0xF72024")]
		private void RemoveIngredient(Ingredient ingredient)
		{
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0xF72840", Offset = "0xF72840", VA = "0xF72840")]
		private void AddYellowSauce()
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0xF72A14", Offset = "0xF72A14", VA = "0xF72A14")]
		private void AddRedSauce()
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0xF72A80", Offset = "0xF72A80", VA = "0xF72A80")]
		private void AddIngredientFromList(List<GameObject> ingredientList, Vector3 position)
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0xF72F38", Offset = "0xF72F38", VA = "0xF72F38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8AA30", Offset = "0xB8AA30")]
		private IEnumerator MoveIngredient_Coroutine(GameObject ingredient)
		{
			return null;
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xF704F0", Offset = "0xF704F0", VA = "0xF704F0")]
		public void IncrementCookedTime(float cookedtimeIncrement)
		{
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0xF730F8", Offset = "0xF730F8", VA = "0xF730F8")]
		private void ApplyMaterialChanges()
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0xF7323C", Offset = "0xF7323C", VA = "0xF7323C")]
		private void PrintIngredientList()
		{
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0xF6FD0C", Offset = "0xF6FD0C", VA = "0xF6FD0C")]
		public bool IsCooking()
		{
			return default(bool);
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0xF6BAF0", Offset = "0xF6BAF0", VA = "0xF6BAF0")]
		public bool IsCooked()
		{
			return default(bool);
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0xF6BB00", Offset = "0xF6BB00", VA = "0xF6BB00")]
		public bool IsOverCooked()
		{
			return default(bool);
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0xF6BD50", Offset = "0xF6BD50", VA = "0xF6BD50")]
		public bool IsBurned()
		{
			return default(bool);
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0xF6FA98", Offset = "0xF6FA98", VA = "0xF6FA98")]
		public bool IsUncooked()
		{
			return default(bool);
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0xF71A80", Offset = "0xF71A80", VA = "0xF71A80")]
		private void PlayInstantiateSound()
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xF728AC", Offset = "0xF728AC", VA = "0xF728AC")]
		private void PlaySauceSound()
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0xF72DD0", Offset = "0xF72DD0", VA = "0xF72DD0")]
		private void PlayIngredientSound()
		{
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0xF735FC", Offset = "0xF735FC", VA = "0xF735FC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xF70E8C", Offset = "0xF70E8C", VA = "0xF70E8C")]
		public void OnOvenEnter()
		{
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0xF6F2D4", Offset = "0xF6F2D4", VA = "0xF6F2D4")]
		public void OnOvenExit()
		{
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0xF73788", Offset = "0xF73788", VA = "0xF73788")]
		public float GetYellowSauceAmount()
		{
			return default(float);
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xF737F0", Offset = "0xF737F0", VA = "0xF737F0")]
		public float GetRedSauceAmount()
		{
			return default(float);
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xF73858", Offset = "0xF73858", VA = "0xF73858")]
		public Pizza()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public class PizzaBox : MonoBehaviour
	{
		[Token(Token = "0x200082E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73694", Offset = "0xB73694")]
		private sealed class <OnTriggerStay>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PizzaBox <>4__this;

			[Token(Token = "0x4002D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Collider other;

			[Token(Token = "0x17000592")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032AD")]
				[Address(RVA = "0xF7430C", Offset = "0xF7430C", VA = "0xF7430C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000593")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032AF")]
				[Address(RVA = "0xF74378", Offset = "0xF74378", VA = "0xF74378", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032AA")]
			[Address(RVA = "0xF73D28", Offset = "0xF73D28", VA = "0xF73D28")]
			[DebuggerHidden]
			public <OnTriggerStay>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60032AB")]
			[Address(RVA = "0xF73D64", Offset = "0xF73D64", VA = "0xF73D64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032AC")]
			[Address(RVA = "0xF73D68", Offset = "0xF73D68", VA = "0xF73D68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032AE")]
			[Address(RVA = "0xF74314", Offset = "0xF74314", VA = "0xF74314", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _pizzaPosition;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DeliveryArea _deliveryArea;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _turningRate;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _moveRate;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _canReceivePizza;

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xF73C9C", Offset = "0xF73C9C", VA = "0xF73C9C")]
		private void Start()
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0xF73CA8", Offset = "0xF73CA8", VA = "0xF73CA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8AA94", Offset = "0xB8AA94")]
		private IEnumerator OnTriggerStay(Collider other)
		{
			return null;
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0xF73D54", Offset = "0xF73D54", VA = "0xF73D54")]
		public PizzaBox()
		{
		}
	}
	[Token(Token = "0x2000484")]
	public class PizzaIngredientHolder : MonoBehaviour
	{
		[Token(Token = "0x200082F")]
		public delegate void OnIngredientAdded(Ingredient ingredient, Vector3 position);

		[Token(Token = "0x2000830")]
		public delegate void OnIngredientRemoved(Ingredient ingredient);

		[Token(Token = "0x2000831")]
		public delegate void OnSauceAdded(Ingredient ingredient, float amount);

		[Token(Token = "0x14000047")]
		public event OnIngredientAdded IngredientAdded
		{
			[Token(Token = "0x600224D")]
			[Address(RVA = "0xF71CAC", Offset = "0xF71CAC", VA = "0xF71CAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8AAF8", Offset = "0xB8AAF8")]
			add
			{
			}
			[Token(Token = "0x600224E")]
			[Address(RVA = "0xF74458", Offset = "0xF74458", VA = "0xF74458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8AB08", Offset = "0xB8AB08")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public event OnIngredientRemoved IngredientRemoved
		{
			[Token(Token = "0x600224F")]
			[Address(RVA = "0xF71BF8", Offset = "0xF71BF8", VA = "0xF71BF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8AB18", Offset = "0xB8AB18")]
			add
			{
			}
			[Token(Token = "0x6002250")]
			[Address(RVA = "0xF744FC", Offset = "0xF744FC", VA = "0xF744FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8AB28", Offset = "0xB8AB28")]
			remove
			{
			}
		}

		[Token(Token = "0x14000049")]
		public event OnSauceAdded SauceAdded
		{
			[Token(Token = "0x6002251")]
			[Address(RVA = "0xF71D60", Offset = "0xF71D60", VA = "0xF71D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8AB38", Offset = "0xB8AB38")]
			add
			{
			}
			[Token(Token = "0x6002252")]
			[Address(RVA = "0xF745A0", Offset = "0xF745A0", VA = "0xF745A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8AB48", Offset = "0xB8AB48")]
			remove
			{
			}
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xF74644", Offset = "0xF74644", VA = "0xF74644")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xF74C4C", Offset = "0xF74C4C", VA = "0xF74C4C")]
		public void RemoveIngredient(Ingredient ingredient)
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0xF75018", Offset = "0xF75018", VA = "0xF75018")]
		public void AddSauce(Ingredient ingredient)
		{
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0xF7545C", Offset = "0xF7545C", VA = "0xF7545C")]
		public PizzaIngredientHolder()
		{
		}
	}
	[Token(Token = "0x2000485")]
	public class PizzaProgressionManager : ProgressionManager
	{
		[Token(Token = "0x6002257")]
		[Address(RVA = "0xF75630", Offset = "0xF75630", VA = "0xF75630", Slot = "4")]
		public override void Setup(GameConfig gameConfig, int level, bool isFirstTime)
		{
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0xF75920", Offset = "0xF75920", VA = "0xF75920", Slot = "5")]
		protected override void IncrementLevel()
		{
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xF75B94", Offset = "0xF75B94", VA = "0xF75B94", Slot = "6")]
		protected override void DecrementLevel()
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xF75DA4", Offset = "0xF75DA4", VA = "0xF75DA4")]
		public PizzaProgressionManager()
		{
		}
	}
	[Token(Token = "0x2000486")]
	public class PizzaSmoke : MonoBehaviour
	{
		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _bone;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SkinnedMeshRenderer _renderer;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion _defaultRotation;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _defaultScale;

		[Token(Token = "0x600225B")]
		[Address(RVA = "0xF762C0", Offset = "0xF762C0", VA = "0xF762C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0xF763CC", Offset = "0xF763CC", VA = "0xF763CC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0xF72FDC", Offset = "0xF72FDC", VA = "0xF72FDC")]
		public void ShowBurnedSmoke()
		{
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0xF73080", Offset = "0xF73080", VA = "0xF73080")]
		public void OnOvenEnter()
		{
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xF73750", Offset = "0xF73750", VA = "0xF73750")]
		public void OnOvenExit()
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0xF7640C", Offset = "0xF7640C", VA = "0xF7640C")]
		public PizzaSmoke()
		{
		}
	}
	[Token(Token = "0x2000487")]
	public class PizzaSpawner : MonoBehaviour
	{
		[Token(Token = "0x2000832")]
		public delegate void OnPizzaSpawned(Pizza pizza);

		[Token(Token = "0x2000833")]
		public delegate void OnPizzaNotSpawned();

		[Serializable]
		[Token(Token = "0x2000834")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB736A4", Offset = "0xB736A4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__13_0;

			[Token(Token = "0x60032C5")]
			[Address(RVA = "0xF777C8", Offset = "0xF777C8", VA = "0xF777C8")]
			public <>c()
			{
			}

			[Token(Token = "0x60032C6")]
			[Address(RVA = "0xF777D0", Offset = "0xF777D0", VA = "0xF777D0")]
			internal bool <Update>b__13_0(GameObject item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject PizzaPrefab;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _pizzaInstance;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private OrderSpawner _orderSpawner;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _meshGood;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MeshRenderer _meshBad;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> _invalidObjectsToIgnore;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GameObject> _invalidObjectsInTrigger;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OnPizzaSpawned PizzaSpawned;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OnPizzaNotSpawned PizzaNotSpawned;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool visible;

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xF76414", Offset = "0xF76414", VA = "0xF76414")]
		private void Start()
		{
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0xF76494", Offset = "0xF76494", VA = "0xF76494")]
		private void Update()
		{
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0xF76738", Offset = "0xF76738", VA = "0xF76738")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0xF7691C", Offset = "0xF7691C", VA = "0xF7691C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0xF76A88", Offset = "0xF76A88", VA = "0xF76A88")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0xF773A0", Offset = "0xF773A0", VA = "0xF773A0")]
		public void SetInvalidObjectsToIgnore(GameObject[] invalidObjects)
		{
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0xF776D4", Offset = "0xF776D4", VA = "0xF776D4")]
		public PizzaSpawner()
		{
		}
	}
	[Token(Token = "0x2000488")]
	public class SauceDispenser : MonoBehaviour
	{
		[Token(Token = "0x6002268")]
		[Address(RVA = "0xF778CC", Offset = "0xF778CC", VA = "0xF778CC")]
		protected void Start()
		{
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0xF778D0", Offset = "0xF778D0", VA = "0xF778D0", Slot = "4")]
		public virtual void StartDispense()
		{
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0xF77A38", Offset = "0xF77A38", VA = "0xF77A38", Slot = "5")]
		public virtual void StopDispense()
		{
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0xF77BF8", Offset = "0xF77BF8", VA = "0xF77BF8")]
		public SauceDispenser()
		{
		}
	}
	[Token(Token = "0x2000489")]
	public class SauceDispenserButton : MonoBehaviour
	{
		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SauceDispenser _sauceDispenser;

		[Token(Token = "0x600226C")]
		[Address(RVA = "0xF77C00", Offset = "0xF77C00", VA = "0xF77C00")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0xF77D14", Offset = "0xF77D14", VA = "0xF77D14")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0xF77E28", Offset = "0xF77E28", VA = "0xF77E28")]
		public SauceDispenserButton()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public class SauceDispenserGameObject : SauceDispenser
	{
		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem _sauceParticles;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _sauceIngredient;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _sauceIngredientSpawnPosition;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _shootIngredientSpeed;

		[Token(Token = "0x600226F")]
		[Address(RVA = "0xF77E30", Offset = "0xF77E30", VA = "0xF77E30")]
		private new void Start()
		{
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0xF77E4C", Offset = "0xF77E4C", VA = "0xF77E4C", Slot = "4")]
		public override void StartDispense()
		{
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0xF77ECC", Offset = "0xF77ECC", VA = "0xF77ECC", Slot = "5")]
		public override void StopDispense()
		{
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0xF77F3C", Offset = "0xF77F3C", VA = "0xF77F3C")]
		private void DispenseIngredient()
		{
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0xF780D0", Offset = "0xF780D0", VA = "0xF780D0")]
		public SauceDispenserGameObject()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class SauceDispenserGrabber : MonoBehaviour
	{
		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SauceDispenser _sauceDispenser;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _hangingPoint;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _ownHangingPoint;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isDispensing;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Grabbable _grabber;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x170003A3")]
		public bool IsDispensing
		{
			[Token(Token = "0x6002274")]
			[Address(RVA = "0xF780E0", Offset = "0xF780E0", VA = "0xF780E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002275")]
			[Address(RVA = "0xF780E8", Offset = "0xF780E8", VA = "0xF780E8")]
			private set
			{
			}
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0xF780F4", Offset = "0xF780F4", VA = "0xF780F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0xF78168", Offset = "0xF78168", VA = "0xF78168")]
		private void Update()
		{
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0xF7824C", Offset = "0xF7824C", VA = "0xF7824C")]
		public SauceDispenserGrabber()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class SauceDispenserRaycast : SauceDispenser
	{
		[Token(Token = "0x2000835")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB736B4", Offset = "0xB736B4")]
		private sealed class <DispenseSauce_Coroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SauceDispenserRaycast <>4__this;

			[Token(Token = "0x17000594")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032CA")]
				[Address(RVA = "0xF789E4", Offset = "0xF789E4", VA = "0xF789E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000595")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032CC")]
				[Address(RVA = "0xF78A50", Offset = "0xF78A50", VA = "0xF78A50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032C7")]
			[Address(RVA = "0xF78518", Offset = "0xF78518", VA = "0xF78518")]
			[DebuggerHidden]
			public <DispenseSauce_Coroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60032C8")]
			[Address(RVA = "0xF785D4", Offset = "0xF785D4", VA = "0xF785D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032C9")]
			[Address(RVA = "0xF785D8", Offset = "0xF785D8", VA = "0xF785D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032CB")]
			[Address(RVA = "0xF789EC", Offset = "0xF789EC", VA = "0xF789EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _dispenseSpeed;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _sauceStreamStartingPoint;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _sauceIngredient;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _paintObject;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LayerMask _raycastLayerMask;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool _isDispensing;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _sauceStreamLength;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject _paint;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 _paintDefaultPosition;

		[Token(Token = "0x6002279")]
		[Address(RVA = "0xF78254", Offset = "0xF78254", VA = "0xF78254")]
		private new void Start()
		{
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0xF783A0", Offset = "0xF783A0", VA = "0xF783A0", Slot = "4")]
		public override void StartDispense()
		{
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0xF784C8", Offset = "0xF784C8", VA = "0xF784C8", Slot = "5")]
		public override void StopDispense()
		{
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0xF78454", Offset = "0xF78454", VA = "0xF78454")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8AB58", Offset = "0xB8AB58")]
		private IEnumerator DispenseSauce_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0xF78544", Offset = "0xF78544", VA = "0xF78544")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0xF78570", Offset = "0xF78570", VA = "0xF78570")]
		public SauceDispenserRaycast()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public class SauceDispenserRotator : MonoBehaviour
	{
		[Token(Token = "0x2000836")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB736C4", Offset = "0xB736C4")]
		private sealed class <RestoreRotation>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SauceDispenserRotator <>4__this;

			[Token(Token = "0x17000596")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032D0")]
				[Address(RVA = "0xF78DB8", Offset = "0xF78DB8", VA = "0xF78DB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000597")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032D2")]
				[Address(RVA = "0xF78E24", Offset = "0xF78E24", VA = "0xF78E24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032CD")]
			[Address(RVA = "0xF78BA4", Offset = "0xF78BA4", VA = "0xF78BA4")]
			[DebuggerHidden]
			public <RestoreRotation>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60032CE")]
			[Address(RVA = "0xF78BE0", Offset = "0xF78BE0", VA = "0xF78BE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032CF")]
			[Address(RVA = "0xF78BE4", Offset = "0xF78BE4", VA = "0xF78BE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032D1")]
			[Address(RVA = "0xF78DC0", Offset = "0xF78DC0", VA = "0xF78DC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Grabbable _grabbable;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _rotationSpeed;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _defaultRotation;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine _currentCoroutine;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _wasGrabbed;

		[Token(Token = "0x600227F")]
		[Address(RVA = "0xF78A58", Offset = "0xF78A58", VA = "0xF78A58")]
		private void Start()
		{
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0xF78A90", Offset = "0xF78A90", VA = "0xF78A90")]
		private void Update()
		{
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0xF78B30", Offset = "0xF78B30", VA = "0xF78B30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8ABBC", Offset = "0xB8ABBC")]
		private IEnumerator RestoreRotation()
		{
			return null;
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0xF78BD0", Offset = "0xF78BD0", VA = "0xF78BD0")]
		public SauceDispenserRotator()
		{
		}
	}
	[Token(Token = "0x200048E")]
	public class Table : MonoBehaviour
	{
		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _defaultHeight;

		[Token(Token = "0x6002283")]
		[Address(RVA = "0xF78E2C", Offset = "0xF78E2C", VA = "0xF78E2C")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0xF79024", Offset = "0xF79024", VA = "0xF79024")]
		public Table()
		{
		}
	}
	[Token(Token = "0x200048F")]
	public class Hover : MonoBehaviour
	{
		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected float hoverRange;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected float hoverSpeed;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _hoverHeight;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _noise;

		[Token(Token = "0x6002285")]
		[Address(RVA = "0x1254750", Offset = "0x1254750", VA = "0x1254750")]
		private void Start()
		{
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0x125479C", Offset = "0x125479C", VA = "0x125479C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0x1254910", Offset = "0x1254910", VA = "0x1254910")]
		public Hover()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class GameManager : MonoBehaviour
	{
		[Token(Token = "0x2000837")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB736D4", Offset = "0xB736D4")]
		private sealed class <EndSequence>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x17000598")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032D6")]
				[Address(RVA = "0x12546DC", Offset = "0x12546DC", VA = "0x12546DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000599")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032D8")]
				[Address(RVA = "0x1254748", Offset = "0x1254748", VA = "0x1254748", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032D3")]
			[Address(RVA = "0x12544B8", Offset = "0x12544B8", VA = "0x12544B8")]
			[DebuggerHidden]
			public <EndSequence>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x60032D4")]
			[Address(RVA = "0x12544F8", Offset = "0x12544F8", VA = "0x12544F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032D5")]
			[Address(RVA = "0x12544FC", Offset = "0x12544FC", VA = "0x12544FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032D7")]
			[Address(RVA = "0x12546E4", Offset = "0x12546E4", VA = "0x12546E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7F210", Offset = "0xB7F210")]
		[SerializeField]
		private GameController _gameController;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TutorialController _tutorialController;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PizzaProgressionManager _progressionManager;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DeliveryArea _deliveryArea;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private OrderSpawner _orderSpawner;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TutorialOrderSpawner _tutorialOrderSpawner;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private DoughIngredient _dough;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MeshRenderer _doughPlateMesh;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private PizzaRobot _robot;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private OvenSlot[] _ovenSlots;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _ingredientContainers;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Oven _oven;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _sauceDispensers;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7F31C", Offset = "0xB7F31C")]
		[SerializeField]
		private PizzaGameConfig _gameConfig;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Animator _doughPlateMeshMaterialize;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private OrderSpawner _currentOrderSpawner;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F368", Offset = "0xB7F368")]
		private static GameManager <Instance>k__BackingField;

		[Token(Token = "0x170003A4")]
		public OrderSpawner CurrentOrderSpawner
		{
			[Token(Token = "0x6002288")]
			[Address(RVA = "0x12538B0", Offset = "0x12538B0", VA = "0x12538B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002289")]
			[Address(RVA = "0x12538B8", Offset = "0x12538B8", VA = "0x12538B8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003A5")]
		public PizzaProgressionManager ProgressionManager
		{
			[Token(Token = "0x600228A")]
			[Address(RVA = "0x12538C0", Offset = "0x12538C0", VA = "0x12538C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A6")]
		public GameController GameController
		{
			[Token(Token = "0x600228B")]
			[Address(RVA = "0x12538C8", Offset = "0x12538C8", VA = "0x12538C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A7")]
		public bool TutorialRunning
		{
			[Token(Token = "0x600228C")]
			[Address(RVA = "0x1252574", Offset = "0x1252574", VA = "0x1252574")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003A8")]
		public PizzaRobot Robot
		{
			[Token(Token = "0x600228D")]
			[Address(RVA = "0x12538D0", Offset = "0x12538D0", VA = "0x12538D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600228E")]
			[Address(RVA = "0x12538D8", Offset = "0x12538D8", VA = "0x12538D8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003A9")]
		public static GameManager Instance
		{
			[Token(Token = "0x600228F")]
			[Address(RVA = "0x12538E0", Offset = "0x12538E0", VA = "0x12538E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8AC20", Offset = "0xB8AC20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002290")]
			[Address(RVA = "0x1253930", Offset = "0x1253930", VA = "0x1253930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8AC30", Offset = "0xB8AC30")]
			private set
			{
			}
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0x1253984", Offset = "0x1253984", VA = "0x1253984")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0x1253B5C", Offset = "0x1253B5C", VA = "0x1253B5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0x1253BD4", Offset = "0x1253BD4", VA = "0x1253BD4")]
		private void GameController_Loaded(GameController sender)
		{
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0x1253CF8", Offset = "0x1253CF8", VA = "0x1253CF8")]
		private void GameController_WillUnload(GameController sender)
		{
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0x1253DB8", Offset = "0x1253DB8", VA = "0x1253DB8")]
		private void GameController_GameWillStart(GameController sender)
		{
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0x1253F04", Offset = "0x1253F04", VA = "0x1253F04")]
		private void GameController_GameStart(GameController sender, int startLevel, bool isFirstTime)
		{
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0x1253F34", Offset = "0x1253F34", VA = "0x1253F34")]
		private void SetupBeforeGameStart(int startLevel, bool isFirstTime)
		{
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0x125407C", Offset = "0x125407C", VA = "0x125407C")]
		private void StartGame()
		{
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0x1254138", Offset = "0x1254138", VA = "0x1254138")]
		private void GameController_GameStop(GameController sender)
		{
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0x12542E8", Offset = "0x12542E8", VA = "0x12542E8")]
		private void GameController_GameEnd(GameController sender)
		{
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0x12542EC", Offset = "0x12542EC", VA = "0x12542EC")]
		private void DeliveryArea_PizzaDelivered(Pizza pizza, bool pizzaAnswersOrder)
		{
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0x1254444", Offset = "0x1254444", VA = "0x1254444")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8AC40", Offset = "0xB8AC40")]
		public IEnumerator EndSequence()
		{
			return null;
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0x12544E4", Offset = "0x12544E4", VA = "0x12544E4")]
		public void SetTutorialOrderSpawner()
		{
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0x125413C", Offset = "0x125413C", VA = "0x125413C")]
		private void Reset()
		{
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0x12544F0", Offset = "0x12544F0", VA = "0x12544F0")]
		public GameManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000491")]
	public class PizzaLevelConfig : LevelConfig
	{
		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _maxSauceCountPerOrder;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int _maxIngredientCountPerOrder;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int _minIngredientCountPerOrder;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int _maxIngredientAmount;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int _minIngredientAmount;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float _timeBetweenOrder;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float _orderExpiryTime;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int _maxOrderAmount;

		[Token(Token = "0x170003AA")]
		public int MaxSauceCountPerOrder
		{
			[Token(Token = "0x60022A0")]
			[Address(RVA = "0xF755E8", Offset = "0xF755E8", VA = "0xF755E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003AB")]
		public int MaxIngredientCountPerOrder
		{
			[Token(Token = "0x60022A1")]
			[Address(RVA = "0xF755F0", Offset = "0xF755F0", VA = "0xF755F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003AC")]
		public int MinIngredientCountPerOrder
		{
			[Token(Token = "0x60022A2")]
			[Address(RVA = "0xF755F8", Offset = "0xF755F8", VA = "0xF755F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003AD")]
		public int MaxIngredientAmount
		{
			[Token(Token = "0x60022A3")]
			[Address(RVA = "0xF75600", Offset = "0xF75600", VA = "0xF75600")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003AE")]
		public int MinIngredientAmount
		{
			[Token(Token = "0x60022A4")]
			[Address(RVA = "0xF75608", Offset = "0xF75608", VA = "0xF75608")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003AF")]
		public float TimeBetweenOrder
		{
			[Token(Token = "0x60022A5")]
			[Address(RVA = "0xF75610", Offset = "0xF75610", VA = "0xF75610")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003B0")]
		public float OrderExpiryTime
		{
			[Token(Token = "0x60022A6")]
			[Address(RVA = "0xF75618", Offset = "0xF75618", VA = "0xF75618")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003B1")]
		public int MaxOrderAmount
		{
			[Token(Token = "0x60022A7")]
			[Address(RVA = "0xF75620", Offset = "0xF75620", VA = "0xF75620")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0xF75628", Offset = "0xF75628", VA = "0xF75628")]
		public PizzaLevelConfig()
		{
		}
	}
	[Token(Token = "0x2000492")]
	public class PizzaRobot : MonoBehaviour
	{
		[Token(Token = "0x4001CD9")]
		private const string _idleAnimationTrigger = "Idle";

		[Token(Token = "0x4001CDA")]
		private const string _startAnimationTrigger = "Start";

		[Token(Token = "0x4001CDB")]
		private const string _goodPizzaAnimationTrigger = "GoodPizza";

		[Token(Token = "0x4001CDC")]
		private const string _badPizzaAnimationTrigger = "BadPizza";

		[Token(Token = "0x4001CDD")]
		private const string _endGameAnimationTrigger = "EndGame";

		[Token(Token = "0x4001CDE")]
		private const string _trashCanUsedAnimationTrigger = "Used";

		[Token(Token = "0x4001CDF")]
		private const string _bikeLoadedTrigger = "Loaded";

		[Token(Token = "0x4001CE0")]
		private const string _bikeWinTrigger = "Win";

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator _trashCanAnimator;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _bikeAnimator;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Pizza _pizzaInstance;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Animator _animator;

		[Token(Token = "0x170003B2")]
		public Animator TrashCanAnimator
		{
			[Token(Token = "0x60022A9")]
			[Address(RVA = "0xF75E78", Offset = "0xF75E78", VA = "0xF75E78")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022AA")]
			[Address(RVA = "0xF75E80", Offset = "0xF75E80", VA = "0xF75E80")]
			set
			{
			}
		}

		[Token(Token = "0x170003B3")]
		public Animator BikeAnimator
		{
			[Token(Token = "0x60022AB")]
			[Address(RVA = "0xF75E88", Offset = "0xF75E88", VA = "0xF75E88")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022AC")]
			[Address(RVA = "0xF75E90", Offset = "0xF75E90", VA = "0xF75E90")]
			set
			{
			}
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0xF75E98", Offset = "0xF75E98", VA = "0xF75E98")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0xF75EF0", Offset = "0xF75EF0", VA = "0xF75EF0")]
		public void PlayIdleAnimation()
		{
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0xF75F5C", Offset = "0xF75F5C", VA = "0xF75F5C")]
		public void PlayStartAnimation()
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0xF75FAC", Offset = "0xF75FAC", VA = "0xF75FAC")]
		public void PlayGoodPizzaAnimation(Pizza pizza)
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0xF7600C", Offset = "0xF7600C", VA = "0xF7600C")]
		public void PlayBadPizzaAnimation(Pizza pizza)
		{
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0xF7606C", Offset = "0xF7606C", VA = "0xF7606C")]
		public void PlayEndGameAnimation()
		{
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0xF75F40", Offset = "0xF75F40", VA = "0xF75F40")]
		private void PlayAnimation(string animation)
		{
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0xF760BC", Offset = "0xF760BC", VA = "0xF760BC")]
		public void PlayTrashCanAnimation()
		{
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0xF76118", Offset = "0xF76118", VA = "0xF76118")]
		public void PlayBikeAnimation()
		{
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0xF76174", Offset = "0xF76174", VA = "0xF76174")]
		public void PlayDriveAwayAnimation()
		{
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0xF761EC", Offset = "0xF761EC", VA = "0xF761EC")]
		public void DestroyPizza()
		{
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0xF762B8", Offset = "0xF762B8", VA = "0xF762B8")]
		public PizzaRobot()
		{
		}
	}
	[Token(Token = "0x2000493")]
	public class Tutorial : MonoBehaviour
	{
		[Token(Token = "0x2000838")]
		public delegate void TutorialEnded(Tutorial sender);

		[Token(Token = "0x2000839")]
		public enum Step
		{
			[Token(Token = "0x4002DA3")]
			Welcoming,
			[Token(Token = "0x4002DA4")]
			DoughGrab,
			[Token(Token = "0x4002DA5")]
			DoughSpread,
			[Token(Token = "0x4002DA6")]
			SauceSpreading,
			[Token(Token = "0x4002DA7")]
			IngredientPlacing,
			[Token(Token = "0x4002DA8")]
			PizzaCooking,
			[Token(Token = "0x4002DA9")]
			PizzaCooked,
			[Token(Token = "0x4002DAA")]
			TakingOutOfOven,
			[Token(Token = "0x4002DAB")]
			PizzaDelivery,
			[Token(Token = "0x4002DAC")]
			End
		}

		[Token(Token = "0x200083A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB736E4", Offset = "0xB736E4")]
		private sealed class <DoughGrabStep_Coroutine>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tutorial <>4__this;

			[Token(Token = "0x4002DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x4002DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timeToPlay>5__3;

			[Token(Token = "0x4002DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <stepCompleted>5__4;

			[Token(Token = "0x4002DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Grabbable <doughGrabbable>5__5;

			[Token(Token = "0x1700059A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032E0")]
				[Address(RVA = "0xF7A89C", Offset = "0xF7A89C", VA = "0xF7A89C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032E2")]
				[Address(RVA = "0xF7A908", Offset = "0xF7A908", VA = "0xF7A908", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032DD")]
			[Address(RVA = "0xF7A474", Offset = "0xF7A474", VA = "0xF7A474")]
			[DebuggerHidden]
			public <DoughGrabStep_Coroutine>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x60032DE")]
			[Address(RVA = "0xF7A6CC", Offset = "0xF7A6CC", VA = "0xF7A6CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032DF")]
			[Address(RVA = "0xF7A6D0", Offset = "0xF7A6D0", VA = "0xF7A6D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032E1")]
			[Address(RVA = "0xF7A8A4", Offset = "0xF7A8A4", VA = "0xF7A8A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200083B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB736F4", Offset = "0xB736F4")]
		private sealed class <DoughSpreadStep_Coroutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tutorial <>4__this;

			[Token(Token = "0x4002DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <stepCompleted>5__2;

			[Token(Token = "0x1700059C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032E6")]
				[Address(RVA = "0xF7AAA4", Offset = "0xF7AAA4", VA = "0xF7AAA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032E8")]
				[Address(RVA = "0xF7AB10", Offset = "0xF7AB10", VA = "0xF7AB10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032E3")]
			[Address(RVA = "0xF7A4A0", Offset = "0xF7A4A0", VA = "0xF7A4A0")]
			[DebuggerHidden]
			public <DoughSpreadStep_Coroutine>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x60032E4")]
			[Address(RVA = "0xF7A910", Offset = "0xF7A910", VA = "0xF7A910", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032E5")]
			[Address(RVA = "0xF7A914", Offset = "0xF7A914", VA = "0xF7A914", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032E7")]
			[Address(RVA = "0xF7AAAC", Offset = "0xF7AAAC", VA = "0xF7AAAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200083C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73704", Offset = "0xB73704")]
		private sealed class <PizzaSpawn_Coroutine>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tutorial <>4__this;

			[Token(Token = "0x4002DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Grabbable <doughGrabbable>5__2;

			[Token(Token = "0x4002DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PizzaSpawner <spawner>5__3;

			[Token(Token = "0x1700059E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032EC")]
				[Address(RVA = "0xF7B834", Offset = "0xF7B834", VA = "0xF7B834", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032EE")]
				[Address(RVA = "0xF7B8A0", Offset = "0xF7B8A0", VA = "0xF7B8A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032E9")]
			[Address(RVA = "0xF7A4CC", Offset = "0xF7A4CC", VA = "0xF7A4CC")]
			[DebuggerHidden]
			public <PizzaSpawn_Coroutine>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x60032EA")]
			[Address(RVA = "0xF7B524", Offset = "0xF7B524", VA = "0xF7B524", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032EB")]
			[Address(RVA = "0xF7B528", Offset = "0xF7B528", VA = "0xF7B528", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032ED")]
			[Address(RVA = "0xF7B83C", Offset = "0xF7B83C", VA = "0xF7B83C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200083D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73714", Offset = "0xB73714")]
		private sealed class <SauceSpreadingStep_Coroutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tutorial <>4__this;

			[Token(Token = "0x4002DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x4002DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timeToPlay>5__3;

			[Token(Token = "0x4002DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <stepCompleted>5__4;

			[Token(Token = "0x4002DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <currentYellowSauceAmount>5__5;

			[Token(Token = "0x170005A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032F2")]
				[Address(RVA = "0xF7BD24", Offset = "0xF7BD24", VA = "0xF7BD24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032F4")]
				[Address(RVA = "0xF7BD90", Offset = "0xF7BD90", VA = "0xF7BD90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032EF")]
			[Address(RVA = "0xF7A50C", Offset = "0xF7A50C", VA = "0xF7A50C")]
			[DebuggerHidden]
			public <SauceSpreadingStep_Coroutine>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x60032F0")]
			[Address(RVA = "0xF7BA80", Offset = "0xF7BA80", VA = "0xF7BA80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032F1")]
			[Address(RVA = "0xF7BA84", Offset = "0xF7BA84", VA = "0xF7BA84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032F3")]
			[Address(RVA = "0xF7BD2C", Offset = "0xF7BD2C", VA = "0xF7BD2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200083E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73724", Offset = "0xB73724")]
		private sealed class <SauceAmountCheck_Coroutine>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tutorial <>4__this;

			[Token(Token = "0x4002DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <currentRedSauceAmount>5__2;

			[Token(Token = "0x170005A2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032F8")]
				[Address(RVA = "0xF7BA0C", Offset = "0xF7BA0C", VA = "0xF7BA0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032FA")]
				[Address(RVA = "0xF7BA78", Offset = "0xF7BA78", VA = "0xF7BA78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032F5")]
			[Address(RVA = "0xF7A5AC", Offset = "0xF7A5AC", VA = "0xF7A5AC")]
			[DebuggerHidden]
			public <SauceAmountCheck_Coroutine>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x60032F6")]
			[Address(RVA = "0xF7B8A8", Offset = "0xF7B8A8", VA = "0xF7B8A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032F7")]
			[Address(RVA = "0xF7B8AC", Offset = "0xF7B8AC", VA = "0xF7B8AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032F9")]
			[Address(RVA = "0xF7BA14", Offset = "0xF7BA14", VA = "0xF7BA14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200083F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73734", Offset = "0xB73734")]
		private sealed class <IngredientPlacingStep_Coroutine>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tutorial <>4__this;

			[Token(Token = "0x4002DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x4002DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timeToPlay>5__3;

			[Token(Token = "0x4002DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <stepCompleted>5__4;

			[Token(Token = "0x170005A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032FE")]
				[Address(RVA = "0xF7AFB8", Offset = "0xF7AFB8", VA = "0xF7AFB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003300")]
				[Address(RVA = "0xF7B024", Offset = "0xF7B024", VA = "0xF7B024", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032FB")]
			[Address(RVA = "0xF7A5D8", Offset = "0xF7A5D8", VA = "0xF7A5D8")]
			[DebuggerHidden]
			public <IngredientPlacingStep_Coroutine>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x60032FC")]
			[Address(RVA = "0xF7AB18", Offset = "0xF7AB18", VA = "0xF7AB18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032FD")]
			[Address(RVA = "0xF7AB1C", Offset = "0xF7AB1C", VA = "0xF7AB1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032FF")]
			[Address(RVA = "0xF7AFC0", Offset = "0xF7AFC0", VA = "0xF7AFC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73744", Offset = "0xB73744")]
		private sealed class <PizzaCookingStep_Coroutine>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tutorial <>4__this;

			[Token(Token = "0x4002DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <stepCompleted>5__2;

			[Token(Token = "0x170005A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003304")]
				[Address(RVA = "0xF7B33C", Offset = "0xF7B33C", VA = "0xF7B33C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003306")]
				[Address(RVA = "0xF7B3A8", Offset = "0xF7B3A8", VA = "0xF7B3A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003301")]
			[Address(RVA = "0xF7A604", Offset = "0xF7A604", VA = "0xF7A604")]
			[DebuggerHidden]
			public <PizzaCookingStep_Coroutine>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x6003302")]
			[Address(RVA = "0xF7B200", Offset = "0xF7B200", VA = "0xF7B200", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003303")]
			[Address(RVA = "0xF7B204", Offset = "0xF7B204", VA = "0xF7B204", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003305")]
			[Address(RVA = "0xF7B344", Offset = "0xF7B344", VA = "0xF7B344", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000841")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73754", Offset = "0xB73754")]
		private sealed class <PizzaCookedStep_Coroutine>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tutorial <>4__this;

			[Token(Token = "0x4002DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <stepCompleted>5__2;

			[Token(Token = "0x170005A8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600330A")]
				[Address(RVA = "0xF7B18C", Offset = "0xF7B18C", VA = "0xF7B18C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600330C")]
				[Address(RVA = "0xF7B1F8", Offset = "0xF7B1F8", VA = "0xF7B1F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003307")]
			[Address(RVA = "0xF7A630", Offset = "0xF7A630", VA = "0xF7A630")]
			[DebuggerHidden]
			public <PizzaCookedStep_Coroutine>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6003308")]
			[Address(RVA = "0xF7B02C", Offset = "0xF7B02C", VA = "0xF7B02C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003309")]
			[Address(RVA = "0xF7B030", Offset = "0xF7B030", VA = "0xF7B030", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600330B")]
			[Address(RVA = "0xF7B194", Offset = "0xF7B194", VA = "0xF7B194", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000842")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73764", Offset = "0xB73764")]
		private sealed class <TakingOutOfOvenStep_Coroutine>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tutorial <>4__this;

			[Token(Token = "0x4002DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <stepCompleted>5__2;

			[Token(Token = "0x4002DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			private bool <hasPlayedOvercookedMessage>5__3;

			[Token(Token = "0x4002DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
			private bool <hasPlayedBurnedMessage>5__4;

			[Token(Token = "0x170005AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003310")]
				[Address(RVA = "0xF7BF80", Offset = "0xF7BF80", VA = "0xF7BF80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003312")]
				[Address(RVA = "0xF7BFEC", Offset = "0xF7BFEC", VA = "0xF7BFEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600330D")]
			[Address(RVA = "0xF7A65C", Offset = "0xF7A65C", VA = "0xF7A65C")]
			[DebuggerHidden]
			public <TakingOutOfOvenStep_Coroutine>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x600330E")]
			[Address(RVA = "0xF7BD98", Offset = "0xF7BD98", VA = "0xF7BD98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600330F")]
			[Address(RVA = "0xF7BD9C", Offset = "0xF7BD9C", VA = "0xF7BD9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003311")]
			[Address(RVA = "0xF7BF88", Offset = "0xF7BF88", VA = "0xF7BF88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000843")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73774", Offset = "0xB73774")]
		private sealed class <PizzaDeliveryStep_Coroutine>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tutorial <>4__this;

			[Token(Token = "0x4002DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <stepCompleted>5__2;

			[Token(Token = "0x170005AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003316")]
				[Address(RVA = "0xF7B4B0", Offset = "0xF7B4B0", VA = "0xF7B4B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003318")]
				[Address(RVA = "0xF7B51C", Offset = "0xF7B51C", VA = "0xF7B51C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003313")]
			[Address(RVA = "0xF7A688", Offset = "0xF7A688", VA = "0xF7A688")]
			[DebuggerHidden]
			public <PizzaDeliveryStep_Coroutine>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6003314")]
			[Address(RVA = "0xF7B3B0", Offset = "0xF7B3B0", VA = "0xF7B3B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003315")]
			[Address(RVA = "0xF7B3B4", Offset = "0xF7B3B4", VA = "0xF7B3B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003317")]
			[Address(RVA = "0xF7B4B8", Offset = "0xF7B4B8", VA = "0xF7B4B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7F398", Offset = "0xB7F398")]
		[SerializeField]
		private GameController _gameController;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PizzaRobot _robot;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameManager _gameManager;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DoughIngredient _dough;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MeshRenderer _doughPlateMesh;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator _doughPlateMeshMaterialize;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private DeliveryArea _deliveryArea;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SauceDispenserGrabber _redSauceDispenser;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _ingredientContainers;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Oven _oven;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _sauceDispensers;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private PizzaProgressionManager _progressionManager;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private OvenSlot[] _ovenSlots;

		[Token(Token = "0x4001CF2")]
		private const int SAUCE_CHECK_TRIGGER_MESSAGE_INDEX = 0;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private TutorialOrderSpawner _orderSpawner;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Pizza _pizza;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _goodPizzaDelivered;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool _pizzaNotSpawned;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		private bool _isRunningPizzaSpawnCoroutine;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		private bool _isOnTutorial;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool _keepDoughInScene;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool _spawnDough;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TutorialController _tutorialManager;

		[Token(Token = "0x170003B4")]
		public bool IsPlaying
		{
			[Token(Token = "0x60022B9")]
			[Address(RVA = "0xF7902C", Offset = "0xF7902C", VA = "0xF7902C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0xF7904C", Offset = "0xF7904C", VA = "0xF7904C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0xF791CC", Offset = "0xF791CC", VA = "0xF791CC")]
		private void GameController_TutorialStart(GameController sender)
		{
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0xF79578", Offset = "0xF79578", VA = "0xF79578")]
		private void GameController_TutorialStop(GameController sender)
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0xF797D4", Offset = "0xF797D4", VA = "0xF797D4")]
		private void GameController_TutorialPaused(GameController sender, bool paused, SceneStatusType statusType)
		{
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0xF797F4", Offset = "0xF797F4", VA = "0xF797F4")]
		private void GameController_WillUnload(GameController sender)
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xF798B0", Offset = "0xF798B0", VA = "0xF798B0")]
		private void TutorialController_StepInstructionsStart(TutorialController sender, TutorialStep step)
		{
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xF79DB4", Offset = "0xF79DB4", VA = "0xF79DB4")]
		private void TutorialController_StepInstructionsPlay(TutorialController sender, TutorialStep step, int instructionIndex)
		{
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xF79F40", Offset = "0xF79F40", VA = "0xF79F40")]
		private void TutorialController_StepInstructionsEnd(TutorialController sender, TutorialStep step)
		{
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xF7A320", Offset = "0xF7A320", VA = "0xF7A320")]
		private void TutorialController_OnTutorialEnded(TutorialController sender)
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xF795F0", Offset = "0xF795F0", VA = "0xF795F0")]
		private void ResetTutorial()
		{
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0xF7A350", Offset = "0xF7A350", VA = "0xF7A350")]
		private void Update()
		{
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0xF79FF4", Offset = "0xF79FF4", VA = "0xF79FF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8ACA4", Offset = "0xB8ACA4")]
		private IEnumerator DoughGrabStep_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0xF79AC0", Offset = "0xF79AC0", VA = "0xF79AC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8AD08", Offset = "0xB8AD08")]
		private IEnumerator DoughSpreadStep_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0xF7A400", Offset = "0xF7A400", VA = "0xF7A400")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8AD6C", Offset = "0xB8AD6C")]
		private IEnumerator PizzaSpawn_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0xF7A4F8", Offset = "0xF7A4F8", VA = "0xF7A4F8")]
		private void PizzaSpawner_PizzaSpawned(Pizza pizza)
		{
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0xF7A500", Offset = "0xF7A500", VA = "0xF7A500")]
		private void DoughIngredient_PizzaNotSpawned()
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0xF7A068", Offset = "0xF7A068", VA = "0xF7A068")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8ADD0", Offset = "0xB8ADD0")]
		private IEnumerator SauceSpreadingStep_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0xF7A538", Offset = "0xF7A538", VA = "0xF7A538")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8AE34", Offset = "0xB8AE34")]
		private IEnumerator SauceAmountCheck_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0xF7A0DC", Offset = "0xF7A0DC", VA = "0xF7A0DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8AE98", Offset = "0xB8AE98")]
		private IEnumerator IngredientPlacingStep_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0xF7A150", Offset = "0xF7A150", VA = "0xF7A150")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8AEFC", Offset = "0xB8AEFC")]
		private IEnumerator PizzaCookingStep_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0xF7A1C4", Offset = "0xF7A1C4", VA = "0xF7A1C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8AF60", Offset = "0xB8AF60")]
		private IEnumerator PizzaCookedStep_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0xF7A238", Offset = "0xF7A238", VA = "0xF7A238")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8AFC4", Offset = "0xB8AFC4")]
		private IEnumerator TakingOutOfOvenStep_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0xF7A2AC", Offset = "0xF7A2AC", VA = "0xF7A2AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8C028", Offset = "0xB8C028")]
		private IEnumerator PizzaDeliveryStep_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0xF7A6B4", Offset = "0xF7A6B4", VA = "0xF7A6B4")]
		private void DeliveryArea_PizzaDelivered(Pizza pizza, bool pizzaAnswersOrder)
		{
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0xF7A6C4", Offset = "0xF7A6C4", VA = "0xF7A6C4")]
		public Tutorial()
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class TutorialOrder : Order
	{
		[Token(Token = "0x60022D3")]
		[Address(RVA = "0xF7C3E8", Offset = "0xF7C3E8", VA = "0xF7C3E8", Slot = "4")]
		protected override void LogMoment()
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0xF7C3EC", Offset = "0xF7C3EC", VA = "0xF7C3EC")]
		public void GenerateTutorialOrder(List<Ingredient.IngredientType> ingredients)
		{
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0xF7C6A0", Offset = "0xF7C6A0", VA = "0xF7C6A0")]
		public TutorialOrder()
		{
		}
	}
	[Token(Token = "0x2000495")]
	public class TutorialOrderSpawner : OrderSpawner
	{
		[Token(Token = "0x60022D6")]
		[Address(RVA = "0xF79B34", Offset = "0xF79B34", VA = "0xF79B34")]
		public void SpawnTutorialOrder(List<Ingredient.IngredientType> ingredients, float secondsToExpire)
		{
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0xF7C708", Offset = "0xF7C708", VA = "0xF7C708", Slot = "4")]
		protected override void AssociatePizza(Order orderForPizza, Pizza pizza, bool registerInput = true)
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0xF7C710", Offset = "0xF7C710", VA = "0xF7C710")]
		public TutorialOrderSpawner()
		{
		}
	}
	[Token(Token = "0x2000496")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB72198", Offset = "0xB72198")]
	public class PizzaGameConfig : GameConfig
	{
		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float overCookedScoreDamping;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7F494", Offset = "0xB7F494")]
		public PizzaLevelConfig[] _levels;

		[Token(Token = "0x170003B5")]
		public override LevelConfig[] Levels
		{
			[Token(Token = "0x60022D9")]
			[Address(RVA = "0xF74448", Offset = "0xF74448", VA = "0xF74448", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0xF74450", Offset = "0xF74450", VA = "0xF74450")]
		public PizzaGameConfig()
		{
		}
	}
}
namespace AttentionLab.MiniGames.OddEgg
{
	[Token(Token = "0x2000497")]
	public class EggData
	{
		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EggIdData egg;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int level;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int status;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int hole;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB7F4CC", Offset = "0xB7F4CC")]
		public DateTime grabbed_timestamp;

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0x1249038", Offset = "0x1249038", VA = "0x1249038")]
		public EggData(EggIdData eggIdData, int level, int eggStatus, int holeID, DateTime grabbedTime)
		{
		}
	}
	[Token(Token = "0x2000498")]
	public class EggOddEggMoment : OddEggMoment
	{
		[Token(Token = "0x2000844")]
		public enum StatusType
		{
			[Token(Token = "0x4002DE1")]
			DeliveredWrong,
			[Token(Token = "0x4002DE2")]
			DeliveredCorrect,
			[Token(Token = "0x4002DE3")]
			Returned,
			[Token(Token = "0x4002DE4")]
			Dropped
		}

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _holeWasSet;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _initHoleId;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int HoleId;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F55C", Offset = "0xB7F55C")]
		private EggIdData <EggIdData>k__BackingField;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F56C", Offset = "0xB7F56C")]
		private int <Level>k__BackingField;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F57C", Offset = "0xB7F57C")]
		private StatusType <Status>k__BackingField;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F58C", Offset = "0xB7F58C")]
		private DateTime <GrabbedTimeStamp>k__BackingField;

		[Token(Token = "0x170003B6")]
		public EggIdData EggIdData
		{
			[Token(Token = "0x60022DC")]
			[Address(RVA = "0x1249190", Offset = "0x1249190", VA = "0x1249190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C08C", Offset = "0xB8C08C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022DD")]
			[Address(RVA = "0x1249198", Offset = "0x1249198", VA = "0x1249198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C09C", Offset = "0xB8C09C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003B7")]
		public int Level
		{
			[Token(Token = "0x60022DE")]
			[Address(RVA = "0x12491A0", Offset = "0x12491A0", VA = "0x12491A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C0AC", Offset = "0xB8C0AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60022DF")]
			[Address(RVA = "0x12491A8", Offset = "0x12491A8", VA = "0x12491A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C0BC", Offset = "0xB8C0BC")]
			set
			{
			}
		}

		[Token(Token = "0x170003B8")]
		public StatusType Status
		{
			[Token(Token = "0x60022E0")]
			[Address(RVA = "0x12491B0", Offset = "0x12491B0", VA = "0x12491B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C0CC", Offset = "0xB8C0CC")]
			get
			{
				return default(StatusType);
			}
			[Token(Token = "0x60022E1")]
			[Address(RVA = "0x12491B8", Offset = "0x12491B8", VA = "0x12491B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C0DC", Offset = "0xB8C0DC")]
			set
			{
			}
		}

		[Token(Token = "0x170003B9")]
		public DateTime GrabbedTimeStamp
		{
			[Token(Token = "0x60022E2")]
			[Address(RVA = "0x12491C0", Offset = "0x12491C0", VA = "0x12491C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C0EC", Offset = "0xB8C0EC")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x60022E3")]
			[Address(RVA = "0x12491C8", Offset = "0x12491C8", VA = "0x12491C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C0FC", Offset = "0xB8C0FC")]
			set
			{
			}
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x1246418", Offset = "0x1246418", VA = "0x1246418")]
		public EggOddEggMoment()
		{
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0x1246D6C", Offset = "0x1246D6C", VA = "0x1246D6C")]
		public void SetEggIdData(Egg.Config config)
		{
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x1247410", Offset = "0x1247410", VA = "0x1247410")]
		public void SetHoleInEggId(int id)
		{
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x1249230", Offset = "0x1249230", VA = "0x1249230", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x2000499")]
	public class EggsSpawnData
	{
		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EggIdData[] eggs;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int level;

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x124E0E0", Offset = "0x124E0E0", VA = "0x124E0E0")]
		public EggsSpawnData(EggIdData[] eggIDs, int level)
		{
		}
	}
	[Token(Token = "0x200049A")]
	public class EggsSpawnOddEggMoment : OddEggMoment
	{
		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EggIdData[] _eggIds;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F59C", Offset = "0xB7F59C")]
		private int <Level>k__BackingField;

		[Token(Token = "0x170003BA")]
		public int Level
		{
			[Token(Token = "0x60022E9")]
			[Address(RVA = "0x124E11C", Offset = "0x124E11C", VA = "0x124E11C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C10C", Offset = "0xB8C10C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60022EA")]
			[Address(RVA = "0x124E124", Offset = "0x124E124", VA = "0x124E124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C11C", Offset = "0xB8C11C")]
			set
			{
			}
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0x124D408", Offset = "0x124D408", VA = "0x124D408")]
		public EggsSpawnOddEggMoment()
		{
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x124D434", Offset = "0x124D434", VA = "0x124D434")]
		public void SaveEggsList(List<Egg> eggs)
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0x124E12C", Offset = "0x124E12C", VA = "0x124E12C", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x200049B")]
	public class EggPatternData
	{
		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int pattern;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int color;

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x12491F8", Offset = "0x12491F8", VA = "0x12491F8")]
		public EggPatternData(int patternId, int patternColor)
		{
		}
	}
	[Token(Token = "0x200049C")]
	public class EggIdData
	{
		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> colors;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<EggPatternData> patterns;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<int> lines;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool is_odd;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int hole;

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x1249090", Offset = "0x1249090", VA = "0x1249090")]
		public EggIdData(List<int> eggColors, List<EggPatternData> eggPatterns, List<int> eggLines, bool isOddEgg, int eggHoleId)
		{
		}
	}
	[Token(Token = "0x200049D")]
	public abstract class OddEggMoment : GameMoment
	{
		[Token(Token = "0x60022F0")]
		public abstract override void SetValues();

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0x12491D8", Offset = "0x12491D8", VA = "0x12491D8")]
		protected int ParseEggColor(int colorIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x1249300", Offset = "0x1249300", VA = "0x1249300")]
		protected int ParseEggStatus(EggOddEggMoment.StatusType status)
		{
			return default(int);
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x12491D0", Offset = "0x12491D0", VA = "0x12491D0")]
		protected OddEggMoment()
		{
		}
	}
	[Token(Token = "0x200049E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB721EC", Offset = "0xB721EC")]
	public class OddEggGameConfig : GameConfig
	{
		[Token(Token = "0x2000845")]
		public enum TypeOfDuplication
		{
			[Token(Token = "0x4002DE6")]
			AllDifferent = 2,
			[Token(Token = "0x4002DE7")]
			TwoPairs = 1,
			[Token(Token = "0x4002DE8")]
			AllEqualButOne = 0
		}

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7F5AC", Offset = "0xB7F5AC")]
		public Color _colorA;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color _colorB;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color _colorC;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color _colorD;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color _colorE;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color _colorF;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Color _colorG;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7F5E4", Offset = "0xB7F5E4")]
		public OddEggLevelConfig[] _levels;

		[Token(Token = "0x170003BB")]
		[HideInInspector]
		public override LevelConfig[] Levels
		{
			[Token(Token = "0x60022F4")]
			[Address(RVA = "0x124F1E8", Offset = "0x124F1E8", VA = "0x124F1E8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BC")]
		[HideInInspector]
		public List<Color> Colors
		{
			[Token(Token = "0x60022F5")]
			[Address(RVA = "0x124A030", Offset = "0x124A030", VA = "0x124A030")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0x124F1F0", Offset = "0x124F1F0", VA = "0x124F1F0")]
		public OddEggGameConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049F")]
	public class OddEggLevelConfig : LevelConfig
	{
		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HorizontalLineAttribute", RVA = "0xB7F62C", Offset = "0xB7F62C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7F62C", Offset = "0xB7F62C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB7F62C", Offset = "0xB7F62C")]
		public int differentColors;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB7F6A4", Offset = "0xB7F6A4")]
		public int differentLines;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB7F6BC", Offset = "0xB7F6BC")]
		public int differentPatterns;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HorizontalLineAttribute", RVA = "0xB7F6D4", Offset = "0xB7F6D4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7F6D4", Offset = "0xB7F6D4")]
		public OddEggGameConfig.TypeOfDuplication duplication;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool canChangeColor1;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool canChangeColor2;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool canChangeColor3;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool canChangeLine1;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool canChangeLine2;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool canChangeLine3;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public bool canChangeRow1;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		public bool canChangeRow2;

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0x124F1F8", Offset = "0x124F1F8", VA = "0x124F1F8")]
		public OddEggLevelConfig(bool isDefault)
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x124C0C0", Offset = "0x124C0C0", VA = "0x124C0C0")]
		public int CountDOF()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20004A0")]
	public class DeliveryStand : MonoBehaviour
	{
		[Token(Token = "0x2000846")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73784", Offset = "0xB73784")]
		private sealed class <ValidateEgg_Coroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Egg egg;

			[Token(Token = "0x4002DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DeliveryStand <>4__this;

			[Token(Token = "0x4002DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <animTime>5__2;

			[Token(Token = "0x4002DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x170005AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600331C")]
				[Address(RVA = "0x12461DC", Offset = "0x12461DC", VA = "0x12461DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600331E")]
				[Address(RVA = "0x1246248", Offset = "0x1246248", VA = "0x1246248", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003319")]
			[Address(RVA = "0x1245C24", Offset = "0x1245C24", VA = "0x1245C24")]
			[DebuggerHidden]
			public <ValidateEgg_Coroutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600331A")]
			[Address(RVA = "0x1245D84", Offset = "0x1245D84", VA = "0x1245D84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600331B")]
			[Address(RVA = "0x1245D88", Offset = "0x1245D88", VA = "0x1245D88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600331D")]
			[Address(RVA = "0x12461E4", Offset = "0x12461E4", VA = "0x12461E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _validationPoint;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _robotGrabPivot;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _hologram;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Egg _eggBeingProcessed;

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x12457A0", Offset = "0x12457A0", VA = "0x12457A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0x12457C0", Offset = "0x12457C0", VA = "0x12457C0")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0x1245C1C", Offset = "0x1245C1C", VA = "0x1245C1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0x1245B9C", Offset = "0x1245B9C", VA = "0x1245B9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8C12C", Offset = "0xB8C12C")]
		private IEnumerator ValidateEgg_Coroutine(Egg egg)
		{
			return null;
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0x1245C50", Offset = "0x1245C50", VA = "0x1245C50")]
		public void StartLevel()
		{
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0x1245C78", Offset = "0x1245C78", VA = "0x1245C78")]
		public void ShowHologram(bool value)
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0x1245D1C", Offset = "0x1245D1C", VA = "0x1245D1C")]
		public void ChangeEggToRobotHand()
		{
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0x1245D7C", Offset = "0x1245D7C", VA = "0x1245D7C")]
		public DeliveryStand()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public class Egg : MonoBehaviour
	{
		[Token(Token = "0x2000847")]
		public class Config
		{
			[Token(Token = "0x4002DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> colorIds;

			[Token(Token = "0x4002DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Color> colors;

			[Token(Token = "0x4002DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<int> lines;

			[Token(Token = "0x4002DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<int> patterns;

			[Token(Token = "0x4002DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool unique;

			[Token(Token = "0x600331F")]
			[Address(RVA = "0x1248434", Offset = "0x1248434", VA = "0x1248434")]
			public Config()
			{
			}

			[Token(Token = "0x6003320")]
			[Address(RVA = "0x124850C", Offset = "0x124850C", VA = "0x124850C")]
			public Config(Config config)
			{
			}

			[Token(Token = "0x6003321")]
			[Address(RVA = "0x1248620", Offset = "0x1248620", VA = "0x1248620")]
			public Config(List<int> newColorIds, List<Color> newColors, List<int> newLines, List<int> newPatterns)
			{
			}
		}

		[Token(Token = "0x2000848")]
		public delegate void OnPicked(Egg egg);

		[Token(Token = "0x2000849")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73794", Offset = "0xB73794")]
		private sealed class <LockToStand_Coroutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Egg <>4__this;

			[Token(Token = "0x4002DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <animTime>5__2;

			[Token(Token = "0x4002DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x170005B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003329")]
				[Address(RVA = "0x12483C0", Offset = "0x12483C0", VA = "0x12483C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600332B")]
				[Address(RVA = "0x124842C", Offset = "0x124842C", VA = "0x124842C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003326")]
			[Address(RVA = "0x12474A8", Offset = "0x12474A8", VA = "0x12474A8")]
			[DebuggerHidden]
			public <LockToStand_Coroutine>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6003327")]
			[Address(RVA = "0x1247FEC", Offset = "0x1247FEC", VA = "0x1247FEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003328")]
			[Address(RVA = "0x1247FF0", Offset = "0x1247FF0", VA = "0x1247FF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600332A")]
			[Address(RVA = "0x12483C8", Offset = "0x12483C8", VA = "0x12483C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200084A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB737A4", Offset = "0xB737A4")]
		private sealed class <Destroy_Coroutine>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Egg <>4__this;

			[Token(Token = "0x4002DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x170005B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600332F")]
				[Address(RVA = "0x1247F78", Offset = "0x1247F78", VA = "0x1247F78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003331")]
				[Address(RVA = "0x1247FE4", Offset = "0x1247FE4", VA = "0x1247FE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600332C")]
			[Address(RVA = "0x1247BC4", Offset = "0x1247BC4", VA = "0x1247BC4")]
			[DebuggerHidden]
			public <Destroy_Coroutine>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x600332D")]
			[Address(RVA = "0x1247E20", Offset = "0x1247E20", VA = "0x1247E20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600332E")]
			[Address(RVA = "0x1247E24", Offset = "0x1247E24", VA = "0x1247E24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003330")]
			[Address(RVA = "0x1247F80", Offset = "0x1247F80", VA = "0x1247F80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D2E")]
		public const int MinimumFeatureId = 1;

		[Token(Token = "0x4001D2F")]
		public const int MaximumFeatureId = 9;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _validateExplosionPrefab;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _destroyAnimationTime;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CurveRangeAttribute", RVA = "0xB7F778", Offset = "0xB7F778")]
		[SerializeField]
		private AnimationCurve _destroyAnimationCurve;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OnPicked Picked;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EggOddEggMoment BaseEggMoment;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Grabbable _grabbable;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody _rigidBody;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _defaultRotation;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EggStand _eggStand;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _validateExplosionInstance;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F7C4", Offset = "0xB7F7C4")]
		private bool <Unique>k__BackingField;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F7D4", Offset = "0xB7F7D4")]
		private bool <IsDuplicate>k__BackingField;

		[Token(Token = "0x170003BD")]
		public Quaternion DefaultRotation
		{
			[Token(Token = "0x6002301")]
			[Address(RVA = "0x1246250", Offset = "0x1246250", VA = "0x1246250")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002302")]
			[Address(RVA = "0x124625C", Offset = "0x124625C", VA = "0x124625C")]
			set
			{
			}
		}

		[Token(Token = "0x170003BE")]
		public bool Unique
		{
			[Token(Token = "0x6002303")]
			[Address(RVA = "0x1246268", Offset = "0x1246268", VA = "0x1246268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C190", Offset = "0xB8C190")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002304")]
			[Address(RVA = "0x1246270", Offset = "0x1246270", VA = "0x1246270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C1A0", Offset = "0xB8C1A0")]
			set
			{
			}
		}

		[Token(Token = "0x170003BF")]
		public bool IsDuplicate
		{
			[Token(Token = "0x6002305")]
			[Address(RVA = "0x124627C", Offset = "0x124627C", VA = "0x124627C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C1B0", Offset = "0xB8C1B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002306")]
			[Address(RVA = "0x1246284", Offset = "0x1246284", VA = "0x1246284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C1C0", Offset = "0xB8C1C0")]
			set
			{
			}
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0x1246290", Offset = "0x1246290", VA = "0x1246290")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0x124644C", Offset = "0x124644C", VA = "0x124644C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0x1246494", Offset = "0x1246494", VA = "0x1246494")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0x1246548", Offset = "0x1246548", VA = "0x1246548")]
		private void Grabbable_BeginGrab()
		{
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0x1246828", Offset = "0x1246828", VA = "0x1246828")]
		private void Grabbable_EndGrab()
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x12468B0", Offset = "0x12468B0", VA = "0x12468B0")]
		public void SetFeatures(Config config)
		{
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0x1246914", Offset = "0x1246914", VA = "0x1246914")]
		private void SetColors(List<Color> colors)
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0x1246B48", Offset = "0x1246B48", VA = "0x1246B48")]
		private void SetLines(List<int> lines)
		{
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0x1246C80", Offset = "0x1246C80", VA = "0x1246C80")]
		private void SetPatterns(List<int> patterns)
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0x1245AD4", Offset = "0x1245AD4", VA = "0x1245AD4")]
		public void AllowGrabbing(bool allow)
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0x1247180", Offset = "0x1247180", VA = "0x1247180")]
		public void LockToStand(EggStand stand, bool immediatelly = false)
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0x1247434", Offset = "0x1247434", VA = "0x1247434")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8C1D0", Offset = "0xB8C1D0")]
		private IEnumerator LockToStand_Coroutine(EggStand stand)
		{
			return null;
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0x12474D4", Offset = "0x12474D4", VA = "0x12474D4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x1245AB8", Offset = "0x1245AB8", VA = "0x1245AB8")]
		public bool IsGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x12476B8", Offset = "0x12476B8", VA = "0x12476B8")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x1247944", Offset = "0x1247944", VA = "0x1247944")]
		public void AnimateValidation()
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x1247B98", Offset = "0x1247B98", VA = "0x1247B98")]
		public void AnimateDestroy()
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x1247B78", Offset = "0x1247B78", VA = "0x1247B78")]
		public void Hide()
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x12478D0", Offset = "0x12478D0", VA = "0x12478D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8C234", Offset = "0xB8C234")]
		private IEnumerator Destroy_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x1247BF0", Offset = "0x1247BF0", VA = "0x1247BF0")]
		private void UpdateEggMoment()
		{
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x1247C80", Offset = "0x1247C80", VA = "0x1247C80")]
		public void ReportEggDeliveredWrong()
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x1247D04", Offset = "0x1247D04", VA = "0x1247D04")]
		public void ReportEggDeliveredCorrect()
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x1247D90", Offset = "0x1247D90", VA = "0x1247D90")]
		public void ReportEggReturned()
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x1247630", Offset = "0x1247630", VA = "0x1247630")]
		private void ReportEggDropped()
		{
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x1247E18", Offset = "0x1247E18", VA = "0x1247E18")]
		public Egg()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public class EggBallistics : MonoBehaviour
	{
		[Token(Token = "0x200084B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB737B4", Offset = "0xB737B4")]
		private sealed class <MoveSelf>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EggBallistics <>4__this;

			[Token(Token = "0x4002E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x4002E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector3 <startPos>5__3;

			[Token(Token = "0x170005B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003335")]
				[Address(RVA = "0x1248FC4", Offset = "0x1248FC4", VA = "0x1248FC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003337")]
				[Address(RVA = "0x1249030", Offset = "0x1249030", VA = "0x1249030", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003332")]
			[Address(RVA = "0x1248BF4", Offset = "0x1248BF4", VA = "0x1248BF4")]
			[DebuggerHidden]
			public <MoveSelf>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6003333")]
			[Address(RVA = "0x1248D9C", Offset = "0x1248D9C", VA = "0x1248D9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003334")]
			[Address(RVA = "0x1248DA0", Offset = "0x1248DA0", VA = "0x1248DA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003336")]
			[Address(RVA = "0x1248FCC", Offset = "0x1248FCC", VA = "0x1248FCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve y;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Transform originalParent;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Egg _egg;

		[Token(Token = "0x6002320")]
		[Address(RVA = "0x1248B1C", Offset = "0x1248B1C", VA = "0x1248B1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0x1248B54", Offset = "0x1248B54", VA = "0x1248B54")]
		public void Shoot()
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x1248B80", Offset = "0x1248B80", VA = "0x1248B80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8C298", Offset = "0xB8C298")]
		private IEnumerator MoveSelf()
		{
			return null;
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x1248C20", Offset = "0x1248C20", VA = "0x1248C20")]
		public void DestroyEgg()
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0x1248CA4", Offset = "0x1248CA4", VA = "0x1248CA4")]
		public void ResetPosition()
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0x1248D94", Offset = "0x1248D94", VA = "0x1248D94")]
		public EggBallistics()
		{
		}
	}
	[Token(Token = "0x20004A3")]
	public class EggSpawner : MonoBehaviour
	{
		[Token(Token = "0x200084C")]
		public class EggConfigMatrix
		{
			[Token(Token = "0x4002E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> Colors;

			[Token(Token = "0x4002E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<int> Lines;

			[Token(Token = "0x4002E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<int> Patterns;

			[Token(Token = "0x6003338")]
			[Address(RVA = "0x124AA58", Offset = "0x124AA58", VA = "0x124AA58")]
			public EggConfigMatrix(List<int> colors, List<int> lines, List<int> patterns)
			{
			}

			[Token(Token = "0x6003339")]
			[Address(RVA = "0x124D620", Offset = "0x124D620", VA = "0x124D620")]
			public bool Equals(EggConfigMatrix b)
			{
				return default(bool);
			}

			[Token(Token = "0x600333A")]
			[Address(RVA = "0x124D700", Offset = "0x124D700", VA = "0x124D700")]
			public void Print()
			{
			}
		}

		[Token(Token = "0x200084D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB737C4", Offset = "0xB737C4")]
		private sealed class <SpawnEggs_Coroutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EggSpawner <>4__this;

			[Token(Token = "0x4002E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <eggIndex>5__2;

			[Token(Token = "0x4002E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<Egg.Config> <eggConfigList>5__3;

			[Token(Token = "0x4002E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<int> <standIndexes>5__4;

			[Token(Token = "0x4002E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<int> <unusedStandsIndexes>5__5;

			[Token(Token = "0x4002E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__6;

			[Token(Token = "0x170005B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600333E")]
				[Address(RVA = "0x124D5AC", Offset = "0x124D5AC", VA = "0x124D5AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003340")]
				[Address(RVA = "0x124D618", Offset = "0x124D618", VA = "0x124D618", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600333B")]
			[Address(RVA = "0x1249894", Offset = "0x1249894", VA = "0x1249894")]
			[DebuggerHidden]
			public <SpawnEggs_Coroutine>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600333C")]
			[Address(RVA = "0x124CA58", Offset = "0x124CA58", VA = "0x124CA58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600333D")]
			[Address(RVA = "0x124CA5C", Offset = "0x124CA5C", VA = "0x124CA5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600333F")]
			[Address(RVA = "0x124D5B4", Offset = "0x124D5B4", VA = "0x124D5B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200084E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB737D4", Offset = "0xB737D4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, int> <>9__22_0;

			[Token(Token = "0x4002E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<int, int> <>9__22_1;

			[Token(Token = "0x4002E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<int, int> <>9__22_2;

			[Token(Token = "0x4002E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<int, int> <>9__23_0;

			[Token(Token = "0x4002E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<int, int> <>9__23_1;

			[Token(Token = "0x4002E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<int, int> <>9__23_2;

			[Token(Token = "0x4002E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<int, int> <>9__26_0;

			[Token(Token = "0x4002E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<int, int> <>9__26_1;

			[Token(Token = "0x4002E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<int, int> <>9__26_2;

			[Token(Token = "0x6003342")]
			[Address(RVA = "0x124CA08", Offset = "0x124CA08", VA = "0x124CA08")]
			public <>c()
			{
			}

			[Token(Token = "0x6003343")]
			[Address(RVA = "0x124CA10", Offset = "0x124CA10", VA = "0x124CA10")]
			internal int <GenerateTwoDifferentMatrixes>b__22_0(int x)
			{
				return default(int);
			}

			[Token(Token = "0x6003344")]
			[Address(RVA = "0x124CA18", Offset = "0x124CA18", VA = "0x124CA18")]
			internal int <GenerateTwoDifferentMatrixes>b__22_1(int x)
			{
				return default(int);
			}

			[Token(Token = "0x6003345")]
			[Address(RVA = "0x124CA20", Offset = "0x124CA20", VA = "0x124CA20")]
			internal int <GenerateTwoDifferentMatrixes>b__22_2(int x)
			{
				return default(int);
			}

			[Token(Token = "0x6003346")]
			[Address(RVA = "0x124CA28", Offset = "0x124CA28", VA = "0x124CA28")]
			internal int <GenerateFiveDifferentMatrixes>b__23_0(int x)
			{
				return default(int);
			}

			[Token(Token = "0x6003347")]
			[Address(RVA = "0x124CA30", Offset = "0x124CA30", VA = "0x124CA30")]
			internal int <GenerateFiveDifferentMatrixes>b__23_1(int x)
			{
				return default(int);
			}

			[Token(Token = "0x6003348")]
			[Address(RVA = "0x124CA38", Offset = "0x124CA38", VA = "0x124CA38")]
			internal int <GenerateFiveDifferentMatrixes>b__23_2(int x)
			{
				return default(int);
			}

			[Token(Token = "0x6003349")]
			[Address(RVA = "0x124CA40", Offset = "0x124CA40", VA = "0x124CA40")]
			internal int <ChangeRandomFeatureInMatrix>b__26_0(int x)
			{
				return default(int);
			}

			[Token(Token = "0x600334A")]
			[Address(RVA = "0x124CA48", Offset = "0x124CA48", VA = "0x124CA48")]
			internal int <ChangeRandomFeatureInMatrix>b__26_1(int x)
			{
				return default(int);
			}

			[Token(Token = "0x600334B")]
			[Address(RVA = "0x124CA50", Offset = "0x124CA50", VA = "0x124CA50")]
			internal int <ChangeRandomFeatureInMatrix>b__26_2(int x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001D41")]
		protected const int DefaultNumberOfEggs = 5;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F7F4", Offset = "0xB7F7F4")]
		private bool <IsFirstSpawn>k__BackingField;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Egg _egg;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7F814", Offset = "0xB7F814")]
		[SerializeField]
		protected List<EggStand> _eggStands;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<Egg> _eggs;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected OddEggLevelConfig _config;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool _breakSpawning;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _numberOfEggsForLevel;

		[Token(Token = "0x170003C0")]
		public bool IsFirstSpawn
		{
			[Token(Token = "0x6002326")]
			[Address(RVA = "0x1249318", Offset = "0x1249318", VA = "0x1249318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C2FC", Offset = "0xB8C2FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002327")]
			[Address(RVA = "0x1249320", Offset = "0x1249320", VA = "0x1249320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C30C", Offset = "0xB8C30C")]
			set
			{
			}
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x124932C", Offset = "0x124932C", VA = "0x124932C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x12493CC", Offset = "0x12493CC", VA = "0x12493CC")]
		public void SetEgg(Egg egg)
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x12493D4", Offset = "0x12493D4", VA = "0x12493D4")]
		public void StartLevel(OddEggLevelConfig config, int numberOfEggs = 5)
		{
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x124983C", Offset = "0x124983C", VA = "0x124983C")]
		private void EggStand_Hidden(EggStand stand)
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x12496EC", Offset = "0x12496EC", VA = "0x12496EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8C31C", Offset = "0xB8C31C")]
		private IEnumerator SpawnEggs_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x12498C0", Offset = "0x12498C0", VA = "0x12498C0")]
		private List<Egg.Config> GenerateEggsList()
		{
			return null;
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x1249B1C", Offset = "0x1249B1C", VA = "0x1249B1C")]
		private EggConfigMatrix GenerateBaseEgg()
		{
			return null;
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x1249D38", Offset = "0x1249D38", VA = "0x1249D38")]
		private List<EggConfigMatrix> GenerateAllEggs(EggConfigMatrix baseEgg)
		{
			return null;
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x124AB7C", Offset = "0x124AB7C", VA = "0x124AB7C")]
		private EggConfigMatrix CopyMatrix(EggConfigMatrix original)
		{
			return null;
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0x124AB2C", Offset = "0x124AB2C", VA = "0x124AB2C")]
		private EggConfigMatrix GenerateOneDuplicate(EggConfigMatrix original)
		{
			return null;
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x124AC00", Offset = "0x124AC00", VA = "0x124AC00")]
		private List<EggConfigMatrix> GenerateTwoDifferentMatrixes(EggConfigMatrix original)
		{
			return null;
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0x124B068", Offset = "0x124B068", VA = "0x124B068")]
		private List<EggConfigMatrix> GenerateFiveDifferentMatrixes(EggConfigMatrix original)
		{
			return null;
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x124C068", Offset = "0x124C068", VA = "0x124C068")]
		private int GetValue_GenerateFiveDifferentMatrixes(int changeIndex, ref int highestColorVal, ref int highestLineVal, ref int highestPatternVal)
		{
			return default(int);
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0x124B6BC", Offset = "0x124B6BC", VA = "0x124B6BC")]
		private int GetRandomFeatureIndexToChange([Optional] List<int> exceptions)
		{
			return default(int);
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0x124BA34", Offset = "0x124BA34", VA = "0x124BA34")]
		private void ChangeRandomFeatureInMatrix(int featureIndex, ref EggConfigMatrix matrix, int val = -1)
		{
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0x124A1F0", Offset = "0x124A1F0", VA = "0x124A1F0")]
		public Egg.Config ConvertMatrixToEggConfig(List<int> colorIds, List<int> lines, List<int> patterns, EggConfigMatrix matrix)
		{
			return null;
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x124C138", Offset = "0x124C138", VA = "0x124C138")]
		protected Egg.Config RandomEggConfig()
		{
			return null;
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x124C250", Offset = "0x124C250", VA = "0x124C250")]
		protected void Egg_Picked(Egg egg)
		{
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0x124C2B0", Offset = "0x124C2B0", VA = "0x124C2B0")]
		public void AllowGrabbing(bool allow)
		{
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0x124C3C0", Offset = "0x124C3C0", VA = "0x124C3C0")]
		public void Reset()
		{
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0x124C56C", Offset = "0x124C56C", VA = "0x124C56C", Slot = "4")]
		public virtual Egg RespawnEgg(Egg egg)
		{
			return null;
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0x124A150", Offset = "0x124A150", VA = "0x124A150")]
		private List<int> FeatureIndexList()
		{
			return null;
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x124C934", Offset = "0x124C934", VA = "0x124C934")]
		public EggSpawner()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class EggStand : MonoBehaviour
	{
		[Token(Token = "0x200084F")]
		public delegate void OnHide(EggStand stand);

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Egg _assignedEgg;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject eggSpawnPoint;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnHide Hidden;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int id;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator _animator;

		[Token(Token = "0x170003C1")]
		public bool isFree
		{
			[Token(Token = "0x600233F")]
			[Address(RVA = "0x1249760", Offset = "0x1249760", VA = "0x1249760")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0x124DB30", Offset = "0x124DB30", VA = "0x124DB30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0x124DB88", Offset = "0x124DB88", VA = "0x124DB88")]
		public void AssignEgg(Egg egg)
		{
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0x124DB90", Offset = "0x124DB90", VA = "0x124DB90")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0x124C8D8", Offset = "0x124C8D8", VA = "0x124C8D8")]
		public void AnimateReveal()
		{
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0x12497E0", Offset = "0x12497E0", VA = "0x12497E0")]
		public void AnimateHide()
		{
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0x124D3AC", Offset = "0x124D3AC", VA = "0x124D3AC")]
		public void SetInitialPosition()
		{
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0x124D550", Offset = "0x124D550", VA = "0x124D550")]
		public void SetFinalPosition()
		{
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0x124DCA0", Offset = "0x124DCA0", VA = "0x124DCA0")]
		public void OnRevealStart()
		{
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x124DCB4", Offset = "0x124DCB4", VA = "0x124DCB4")]
		public void OnRevealFinish()
		{
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0x124DCC8", Offset = "0x124DCC8", VA = "0x124DCC8")]
		public void OnHideStart()
		{
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x124DCDC", Offset = "0x124DCDC", VA = "0x124DCDC")]
		public void OnHideFinish()
		{
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x124E0A8", Offset = "0x124E0A8", VA = "0x124E0A8")]
		public EggStand()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public class GameManager : MonoBehaviour
	{
		[Token(Token = "0x2000850")]
		public delegate void OnEggDelivered(bool isUnique);

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController _gameController;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _levelObjects;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private OddEggRobot _robot;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private EggSpawner _eggSpawner;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TutorialEggSpawner _tutorialEggSpawner;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Table _table;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private OddEggProgressionManager _progressionManager;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private OddEggTutorial _tutorialManager;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7F8F0", Offset = "0xB7F8F0")]
		[SerializeField]
		private OddEggGameConfig _gameConfig;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OnEggDelivered EggDelivered;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F93C", Offset = "0xB7F93C")]
		private static GameManager <Instance>k__BackingField;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F94C", Offset = "0xB7F94C")]
		private EggSpawner <EggSpawner>k__BackingField;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isProcessingPick;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _isProcessingPickBeforePause;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int _eggGrabbedCount;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Egg _eggBeingProcessed;

		[Token(Token = "0x170003C2")]
		public static GameManager Instance
		{
			[Token(Token = "0x600234C")]
			[Address(RVA = "0x124E1D0", Offset = "0x124E1D0", VA = "0x124E1D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C380", Offset = "0xB8C380")]
			get
			{
				return null;
			}
			[Token(Token = "0x600234D")]
			[Address(RVA = "0x124E220", Offset = "0x124E220", VA = "0x124E220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C390", Offset = "0xB8C390")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C3")]
		public EggSpawner EggSpawner
		{
			[Token(Token = "0x600234E")]
			[Address(RVA = "0x124E274", Offset = "0x124E274", VA = "0x124E274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C3A0", Offset = "0xB8C3A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600234F")]
			[Address(RVA = "0x124E27C", Offset = "0x124E27C", VA = "0x124E27C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C3B0", Offset = "0xB8C3B0")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C4")]
		public OddEggGameConfig GameConfig
		{
			[Token(Token = "0x6002350")]
			[Address(RVA = "0x124E284", Offset = "0x124E284", VA = "0x124E284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C5")]
		public OddEggProgressionManager ProgressionManager
		{
			[Token(Token = "0x6002351")]
			[Address(RVA = "0x124E28C", Offset = "0x124E28C", VA = "0x124E28C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C6")]
		public GameController GameController
		{
			[Token(Token = "0x6002352")]
			[Address(RVA = "0x124E294", Offset = "0x124E294", VA = "0x124E294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C7")]
		public OddEggRobot Robot
		{
			[Token(Token = "0x6002353")]
			[Address(RVA = "0x124E29C", Offset = "0x124E29C", VA = "0x124E29C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0x124E2A4", Offset = "0x124E2A4", VA = "0x124E2A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0x124E4B4", Offset = "0x124E4B4", VA = "0x124E4B4")]
		private void GameController_Loaded(GameController sender)
		{
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x124E520", Offset = "0x124E520", VA = "0x124E520")]
		private void GameController_WillUnload(GameController sender)
		{
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0x124E58C", Offset = "0x124E58C", VA = "0x124E58C")]
		private void GameController_GamePaused(GameController sender, bool paused, SceneStatusType statusType)
		{
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x124E5C8", Offset = "0x124E5C8", VA = "0x124E5C8")]
		private void GameController_GameStop(GameController sender)
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0x124E64C", Offset = "0x124E64C", VA = "0x124E64C")]
		private void GameController_GameEnd(GameController sender)
		{
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0x124E650", Offset = "0x124E650", VA = "0x124E650")]
		private void GameController_GameWillStart(GameController sender)
		{
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0x124E718", Offset = "0x124E718", VA = "0x124E718")]
		private void GameController_GameStart(GameController sender, int startLevel, bool isFirstTime)
		{
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0x124E7C0", Offset = "0x124E7C0", VA = "0x124E7C0")]
		public void SetTutorialEggSpawner()
		{
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0x124E7CC", Offset = "0x124E7CC", VA = "0x124E7CC")]
		public void NextLevel()
		{
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0x1246154", Offset = "0x1246154", VA = "0x1246154")]
		public void EggPicked(Egg egg)
		{
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0x124669C", Offset = "0x124669C", VA = "0x124669C")]
		public void EggGrabbed()
		{
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0x1246880", Offset = "0x1246880", VA = "0x1246880")]
		public void EggReleased()
		{
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0x124EAD4", Offset = "0x124EAD4", VA = "0x124EAD4")]
		public void CorrectEggFeedback()
		{
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0x124ED3C", Offset = "0x124ED3C", VA = "0x124ED3C")]
		public void WrongEggFeedback()
		{
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0x124EDF4", Offset = "0x124EDF4", VA = "0x124EDF4")]
		public void CorrectEggAnimFinished()
		{
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0x124F098", Offset = "0x124F098", VA = "0x124F098")]
		public void WrongEggAnimFinished()
		{
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0x124F134", Offset = "0x124F134", VA = "0x124F134")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public class OddEggProgressionManager : ProgressionManager
	{
		[Token(Token = "0x6002366")]
		[Address(RVA = "0x124F238", Offset = "0x124F238", VA = "0x124F238", Slot = "4")]
		public override void Setup(GameConfig gameConfig, int level, bool isFirstTime)
		{
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0x124F29C", Offset = "0x124F29C", VA = "0x124F29C", Slot = "6")]
		protected override void DecrementLevel()
		{
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0x124F2FC", Offset = "0x124F2FC", VA = "0x124F2FC")]
		public OddEggProgressionManager()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class Table : MonoBehaviour
	{
		[Token(Token = "0x2000851")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB737E4", Offset = "0xB737E4")]
		private sealed class <CorrectEggFeedback_Coroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Table <>4__this;

			[Token(Token = "0x170005B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003357")]
				[Address(RVA = "0x12512A0", Offset = "0x12512A0", VA = "0x12512A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003359")]
				[Address(RVA = "0x125130C", Offset = "0x125130C", VA = "0x125130C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003354")]
			[Address(RVA = "0x12510E8", Offset = "0x12510E8", VA = "0x12510E8")]
			[DebuggerHidden]
			public <CorrectEggFeedback_Coroutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6003355")]
			[Address(RVA = "0x12511BC", Offset = "0x12511BC", VA = "0x12511BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003356")]
			[Address(RVA = "0x12511C0", Offset = "0x12511C0", VA = "0x12511C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003358")]
			[Address(RVA = "0x12512A8", Offset = "0x12512A8", VA = "0x12512A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000852")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB737F4", Offset = "0xB737F4")]
		private sealed class <WrongEggFeedback_Coroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Table <>4__this;

			[Token(Token = "0x170005BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600335D")]
				[Address(RVA = "0x12513EC", Offset = "0x12513EC", VA = "0x12513EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600335F")]
				[Address(RVA = "0x1251458", Offset = "0x1251458", VA = "0x1251458", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600335A")]
			[Address(RVA = "0x1251188", Offset = "0x1251188", VA = "0x1251188")]
			[DebuggerHidden]
			public <WrongEggFeedback_Coroutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x600335B")]
			[Address(RVA = "0x1251314", Offset = "0x1251314", VA = "0x1251314", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600335C")]
			[Address(RVA = "0x1251318", Offset = "0x1251318", VA = "0x1251318", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600335E")]
			[Address(RVA = "0x12513F4", Offset = "0x12513F4", VA = "0x12513F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D5E")]
		private const string _emissionColorShaderVariable = "_EmissionColor";

		[Token(Token = "0x4001D5F")]
		private const int _blueEmissionColor = 0;

		[Token(Token = "0x4001D60")]
		private const int _greenEmissionColor = 1;

		[Token(Token = "0x4001D61")]
		private const int _redEmissionColor = 2;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SkinnedMeshRenderer _renderer;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine _feedbackCoroutine;

		[Token(Token = "0x6002369")]
		[Address(RVA = "0x1251004", Offset = "0x1251004", VA = "0x1251004")]
		private void Awake()
		{
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0x1251008", Offset = "0x1251008", VA = "0x1251008")]
		private void ShowNoFeedback()
		{
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0x124ECF0", Offset = "0x124ECF0", VA = "0x124ECF0")]
		public void ShowCorrectEggFeedback()
		{
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0x1251074", Offset = "0x1251074", VA = "0x1251074")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8C3C0", Offset = "0xB8C3C0")]
		private IEnumerator CorrectEggFeedback_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x124EDA8", Offset = "0x124EDA8", VA = "0x124EDA8")]
		public void ShowWrongEggFeedback()
		{
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0x1251114", Offset = "0x1251114", VA = "0x1251114")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8C424", Offset = "0xB8C424")]
		private IEnumerator WrongEggFeedback_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0x124E618", Offset = "0x124E618", VA = "0x124E618")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0x12511B4", Offset = "0x12511B4", VA = "0x12511B4")]
		public Table()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	public class OddEggRobot : MonoBehaviour
	{
		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DeliveryStand _deliveryStandPillow;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator _animator;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EggBallistics eggAnchor;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isShowingPillow;

		[Token(Token = "0x6002371")]
		[Address(RVA = "0x124F364", Offset = "0x124F364", VA = "0x124F364")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0x124F3C0", Offset = "0x124F3C0", VA = "0x124F3C0")]
		public void GrabEgg()
		{
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0x124E8C0", Offset = "0x124E8C0", VA = "0x124E8C0")]
		public void StartLevel()
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0x124EAB8", Offset = "0x124EAB8", VA = "0x124EAB8")]
		public void ShowHologram(bool value)
		{
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0x124E6A0", Offset = "0x124E6A0", VA = "0x124E6A0")]
		public void ShowPillow()
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0x124F3D8", Offset = "0x124F3D8", VA = "0x124F3D8")]
		public void HidePillow()
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x124E8D8", Offset = "0x124E8D8", VA = "0x124E8D8")]
		public void AnaliseCorrectEgg()
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0x124E934", Offset = "0x124E934", VA = "0x124E934")]
		public void AnaliseWrongEgg()
		{
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0x124F44C", Offset = "0x124F44C", VA = "0x124F44C")]
		public void CorrectEggFeedback()
		{
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0x124F4A4", Offset = "0x124F4A4", VA = "0x124F4A4")]
		public void WrongEggFeedback()
		{
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0x124F4FC", Offset = "0x124F4FC", VA = "0x124F4FC")]
		public void CorrectEggAnimFinished()
		{
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0x124F554", Offset = "0x124F554", VA = "0x124F554")]
		public void WrongEggAnimDestroyEgg()
		{
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x124F56C", Offset = "0x124F56C", VA = "0x124F56C")]
		public void WrongEggAnimFinished()
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x124F5D4", Offset = "0x124F5D4", VA = "0x124F5D4")]
		public void ShootEgg()
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x124F6A8", Offset = "0x124F6A8", VA = "0x124F6A8")]
		public OddEggRobot()
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public class OddEggTutorial : MonoBehaviour
	{
		[Token(Token = "0x2000853")]
		public delegate void TutorialEnded(OddEggTutorial sender);

		[Token(Token = "0x2000854")]
		public enum Step
		{
			[Token(Token = "0x4002E1E")]
			Welcoming,
			[Token(Token = "0x4002E1F")]
			Grabbing,
			[Token(Token = "0x4002E20")]
			Placing,
			[Token(Token = "0x4002E21")]
			Identifying1,
			[Token(Token = "0x4002E22")]
			Identifying2,
			[Token(Token = "0x4002E23")]
			Identifying3,
			[Token(Token = "0x4002E24")]
			End
		}

		[Token(Token = "0x2000855")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73804", Offset = "0xB73804")]
		private sealed class <WelcomingStep_Coroutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OddEggTutorial <>4__this;

			[Token(Token = "0x170005BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003367")]
				[Address(RVA = "0x1250B9C", Offset = "0x1250B9C", VA = "0x1250B9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003369")]
				[Address(RVA = "0x1250C08", Offset = "0x1250C08", VA = "0x1250C08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003364")]
			[Address(RVA = "0x125049C", Offset = "0x125049C", VA = "0x125049C")]
			[DebuggerHidden]
			public <WelcomingStep_Coroutine>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6003365")]
			[Address(RVA = "0x1250B0C", Offset = "0x1250B0C", VA = "0x1250B0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003366")]
			[Address(RVA = "0x1250B10", Offset = "0x1250B10", VA = "0x1250B10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003368")]
			[Address(RVA = "0x1250BA4", Offset = "0x1250BA4", VA = "0x1250BA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000856")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73814", Offset = "0xB73814")]
		private sealed class <GrabbingStep_Coroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OddEggTutorial <>4__this;

			[Token(Token = "0x4002E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x4002E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timeToPlay>5__3;

			[Token(Token = "0x4002E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <stepCompleted>5__4;

			[Token(Token = "0x170005BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600336D")]
				[Address(RVA = "0x12506E8", Offset = "0x12506E8", VA = "0x12506E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600336F")]
				[Address(RVA = "0x1250754", Offset = "0x1250754", VA = "0x1250754", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600336A")]
			[Address(RVA = "0x12504C8", Offset = "0x12504C8", VA = "0x12504C8")]
			[DebuggerHidden]
			public <GrabbingStep_Coroutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x600336B")]
			[Address(RVA = "0x1250578", Offset = "0x1250578", VA = "0x1250578", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600336C")]
			[Address(RVA = "0x125057C", Offset = "0x125057C", VA = "0x125057C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600336E")]
			[Address(RVA = "0x12506F0", Offset = "0x12506F0", VA = "0x12506F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000857")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73824", Offset = "0xB73824")]
		private sealed class <PlacingStep_Coroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OddEggTutorial <>4__this;

			[Token(Token = "0x4002E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x4002E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timeToPlay>5__3;

			[Token(Token = "0x4002E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <stepCompleted>5__4;

			[Token(Token = "0x170005C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003373")]
				[Address(RVA = "0x1250A98", Offset = "0x1250A98", VA = "0x1250A98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003375")]
				[Address(RVA = "0x1250B04", Offset = "0x1250B04", VA = "0x1250B04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003370")]
			[Address(RVA = "0x12504F4", Offset = "0x12504F4", VA = "0x12504F4")]
			[DebuggerHidden]
			public <PlacingStep_Coroutine>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6003371")]
			[Address(RVA = "0x1250900", Offset = "0x1250900", VA = "0x1250900", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003372")]
			[Address(RVA = "0x1250904", Offset = "0x1250904", VA = "0x1250904", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003374")]
			[Address(RVA = "0x1250AA0", Offset = "0x1250AA0", VA = "0x1250AA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000858")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73834", Offset = "0xB73834")]
		private sealed class <IdentifyingStep_Coroutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OddEggTutorial <>4__this;

			[Token(Token = "0x4002E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <stepCompleted>5__2;

			[Token(Token = "0x170005C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003379")]
				[Address(RVA = "0x125088C", Offset = "0x125088C", VA = "0x125088C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600337B")]
				[Address(RVA = "0x12508F8", Offset = "0x12508F8", VA = "0x12508F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003376")]
			[Address(RVA = "0x1250520", Offset = "0x1250520", VA = "0x1250520")]
			[DebuggerHidden]
			public <IdentifyingStep_Coroutine>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6003377")]
			[Address(RVA = "0x125075C", Offset = "0x125075C", VA = "0x125075C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003378")]
			[Address(RVA = "0x1250760", Offset = "0x1250760", VA = "0x1250760", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600337A")]
			[Address(RVA = "0x1250894", Offset = "0x1250894", VA = "0x1250894", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OddEggLevelConfig _firstEggConfig;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OddEggLevelConfig _identifying1StepConfig;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private OddEggLevelConfig _identifying2StepConfig;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private OddEggLevelConfig _identifying3StepConfig;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TutorialEggSpawner _tutorialEggSpawner;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isOnTutorial;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _correctEggDelivered;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool _wrongEggDelivered;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TutorialController _tutorialController;

		[Token(Token = "0x170003C8")]
		public bool IsPlaying
		{
			[Token(Token = "0x6002380")]
			[Address(RVA = "0x124ECD0", Offset = "0x124ECD0", VA = "0x124ECD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0x124F6B0", Offset = "0x124F6B0", VA = "0x124F6B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0x124F8F8", Offset = "0x124F8F8", VA = "0x124F8F8")]
		private void GameController_TutorialStart(GameController sender)
		{
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0x124FBDC", Offset = "0x124FBDC", VA = "0x124FBDC")]
		private void GameController_TutorialStop(GameController sender)
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0x124FCD8", Offset = "0x124FCD8", VA = "0x124FCD8")]
		private void GameController_TutorialPaused(GameController sender, bool paused, SceneStatusType statusType)
		{
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0x124FCF8", Offset = "0x124FCF8", VA = "0x124FCF8")]
		private void GameController_WillUnload(GameController sender)
		{
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0x124FDF0", Offset = "0x124FDF0", VA = "0x124FDF0")]
		private void TutorialController_StepInstructionsStart(TutorialController sender, TutorialStep step)
		{
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0x125023C", Offset = "0x125023C", VA = "0x125023C")]
		private void TutorialController_StepInstructionsPlay(TutorialController sender, TutorialStep step, int instructionIndex)
		{
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0x1250254", Offset = "0x1250254", VA = "0x1250254")]
		private void TutorialController_StepInstructionsEnd(TutorialController sender, TutorialStep step)
		{
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0x1250430", Offset = "0x1250430", VA = "0x1250430")]
		private void TutorialController_OnTutorialEnded(TutorialController sender)
		{
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0x124FC54", Offset = "0x124FC54", VA = "0x124FC54")]
		private void ResetTutorial()
		{
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0x12502D4", Offset = "0x12502D4", VA = "0x12502D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8C488", Offset = "0xB8C488")]
		private IEnumerator WelcomingStep_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0x12501A0", Offset = "0x12501A0", VA = "0x12501A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8C4EC", Offset = "0xB8C4EC")]
		private IEnumerator GrabbingStep_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0x1250348", Offset = "0x1250348", VA = "0x1250348")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8C550", Offset = "0xB8C550")]
		private IEnumerator PlacingStep_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0x12503BC", Offset = "0x12503BC", VA = "0x12503BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8C5B4", Offset = "0xB8C5B4")]
		private IEnumerator IdentifyingStep_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0x125054C", Offset = "0x125054C", VA = "0x125054C")]
		private void GameManager_EggDelivered(bool isUnique)
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0x124F114", Offset = "0x124F114", VA = "0x124F114")]
		public void RetryLevel()
		{
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0x1250570", Offset = "0x1250570", VA = "0x1250570")]
		public OddEggTutorial()
		{
		}
	}
	[Token(Token = "0x20004AA")]
	public class TutorialEggSpawner : EggSpawner
	{
		[Token(Token = "0x4001D71")]
		private const int NumberOfEggsForFirstIdentifyingStep = 3;

		[Token(Token = "0x4001D72")]
		private const int NumberOfEggsForOtherIdentifyingSteps = 5;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Egg _firstEgg;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OddEggLevelConfig _levelConfig;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _numberOfEggs;

		[Token(Token = "0x170003C9")]
		public Egg FirstEgg
		{
			[Token(Token = "0x6002392")]
			[Address(RVA = "0x1251460", Offset = "0x1251460", VA = "0x1251460")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0x124FF0C", Offset = "0x124FF0C", VA = "0x124FF0C")]
		public void SpawnFirstEgg(OddEggLevelConfig config)
		{
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0x1250214", Offset = "0x1250214", VA = "0x1250214")]
		public void SpawnFirstIdentifyingStepEggs(OddEggLevelConfig config)
		{
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0x1250228", Offset = "0x1250228", VA = "0x1250228")]
		public void SpawnGenericIdentifyingStepEggs(OddEggLevelConfig config)
		{
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0x1251468", Offset = "0x1251468", VA = "0x1251468", Slot = "4")]
		public override Egg RespawnEgg(Egg egg)
		{
			return null;
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0x1250564", Offset = "0x1250564", VA = "0x1250564")]
		public void RetryLevel()
		{
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0x1251500", Offset = "0x1251500", VA = "0x1251500")]
		public TutorialEggSpawner()
		{
		}
	}
}
namespace AttentionLab.MiniGames.MemoryWall
{
	[Token(Token = "0x20004AB")]
	public abstract class MemoryWallMoment : GameMoment
	{
		[Token(Token = "0x6002399")]
		public abstract override void SetValues();

		[Token(Token = "0x600239A")]
		[Address(RVA = "0x1241380", Offset = "0x1241380", VA = "0x1241380")]
		protected MemoryWallMoment()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public class PatternSpawnedData
	{
		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public JsonUtils.Vector2IntData[] pattern;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int level;

		[Token(Token = "0x600239B")]
		[Address(RVA = "0x12422DC", Offset = "0x12422DC", VA = "0x12422DC")]
		public PatternSpawnedData(List<Vector2Int> tilesPattern, int level)
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public class PatternSpawnedMemoryWallMoment : MemoryWallMoment
	{
		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly int _level;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<Vector2Int> _pattern;

		[Token(Token = "0x600239C")]
		[Address(RVA = "0x1242480", Offset = "0x1242480", VA = "0x1242480")]
		public PatternSpawnedMemoryWallMoment(List<Tile> tiles, int level)
		{
		}

		[Token(Token = "0x600239D")]
		[Address(RVA = "0x124261C", Offset = "0x124261C", VA = "0x124261C", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public class TileSelectionData
	{
		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public JsonUtils.Vector2IntData box;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int level;

		[Token(Token = "0x600239E")]
		[Address(RVA = "0x1243CFC", Offset = "0x1243CFC", VA = "0x1243CFC")]
		public TileSelectionData(Vector2Int tileBox, int level)
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class TileSelectionMemoryWallMoment : MemoryWallMoment
	{
		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly int _level;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly Vector2Int _tileCoordinate;

		[Token(Token = "0x600239F")]
		[Address(RVA = "0x1243DB0", Offset = "0x1243DB0", VA = "0x1243DB0")]
		public TileSelectionMemoryWallMoment(int level, Vector2Int tileCoordinate)
		{
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0x1243DF8", Offset = "0x1243DF8", VA = "0x1243DF8", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class DebugController : MonoBehaviour
	{
		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7F9BC", Offset = "0xB7F9BC")]
		public TextMeshPro _labelRound;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshPro _labelLevel;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro _labelScore;

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0xFECA68", Offset = "0xFECA68", VA = "0xFECA68")]
		public void SetRound(int round)
		{
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0xFECB08", Offset = "0xFECB08", VA = "0xFECB08")]
		public void SetLevel(int level)
		{
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0xFECBA8", Offset = "0xFECBA8", VA = "0xFECBA8")]
		public void SetScore(float score)
		{
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0xFECC48", Offset = "0xFECC48", VA = "0xFECC48")]
		public DebugController()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class GridSlot
	{
		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F9F4", Offset = "0xB7F9F4")]
		private int <Row>k__BackingField;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FA04", Offset = "0xB7FA04")]
		private int <Column>k__BackingField;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FA14", Offset = "0xB7FA14")]
		private Vector3 <Position>k__BackingField;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FA24", Offset = "0xB7FA24")]
		private Quaternion <Rotation>k__BackingField;

		[Token(Token = "0x170003CA")]
		public int Row
		{
			[Token(Token = "0x60023A5")]
			[Address(RVA = "0x1240FDC", Offset = "0x1240FDC", VA = "0x1240FDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C618", Offset = "0xB8C618")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60023A6")]
			[Address(RVA = "0x1240FE4", Offset = "0x1240FE4", VA = "0x1240FE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C628", Offset = "0xB8C628")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CB")]
		public int Column
		{
			[Token(Token = "0x60023A7")]
			[Address(RVA = "0x1240FEC", Offset = "0x1240FEC", VA = "0x1240FEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C638", Offset = "0xB8C638")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60023A8")]
			[Address(RVA = "0x1240FF4", Offset = "0x1240FF4", VA = "0x1240FF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C648", Offset = "0xB8C648")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CC")]
		public Vector3 Position
		{
			[Token(Token = "0x60023A9")]
			[Address(RVA = "0x1240FFC", Offset = "0x1240FFC", VA = "0x1240FFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C658", Offset = "0xB8C658")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60023AA")]
			[Address(RVA = "0x1241008", Offset = "0x1241008", VA = "0x1241008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C668", Offset = "0xB8C668")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CD")]
		public Quaternion Rotation
		{
			[Token(Token = "0x60023AB")]
			[Address(RVA = "0x1241014", Offset = "0x1241014", VA = "0x1241014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C678", Offset = "0xB8C678")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60023AC")]
			[Address(RVA = "0x1241020", Offset = "0x1241020", VA = "0x1241020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C688", Offset = "0xB8C688")]
			private set
			{
			}
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x124102C", Offset = "0x124102C", VA = "0x124102C")]
		public GridSlot(int row, int col, Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20004B2")]
	public class Grid : MonoBehaviour
	{
		[Token(Token = "0x2000859")]
		public delegate void OnObjectSpawned(Grid sender, Tile memoryObject);

		[Token(Token = "0x200085A")]
		public delegate void OnPopulated(Grid sender);

		[Token(Token = "0x200085B")]
		public delegate void OnReseted(Grid sender);

		[Token(Token = "0x200085C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73844", Offset = "0xB73844")]
		private sealed class <PopulateCoroutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grid <>4__this;

			[Token(Token = "0x4002E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OnPopulated callback;

			[Token(Token = "0x4002E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <count>5__2;

			[Token(Token = "0x4002E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <totalDuration>5__3;

			[Token(Token = "0x4002E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i_row>5__4;

			[Token(Token = "0x4002E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <i_col>5__5;

			[Token(Token = "0x4002E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Tile <instance>5__6;

			[Token(Token = "0x170005C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600338B")]
				[Address(RVA = "0xFEF5E0", Offset = "0xFEF5E0", VA = "0xFEF5E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600338D")]
				[Address(RVA = "0xFEF64C", Offset = "0xFEF64C", VA = "0xFEF64C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003388")]
			[Address(RVA = "0xFEEB64", Offset = "0xFEEB64", VA = "0xFEEB64")]
			[DebuggerHidden]
			public <PopulateCoroutine>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6003389")]
			[Address(RVA = "0xFEF06C", Offset = "0xFEF06C", VA = "0xFEF06C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600338A")]
			[Address(RVA = "0xFEF070", Offset = "0xFEF070", VA = "0xFEF070", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600338C")]
			[Address(RVA = "0xFEF5E8", Offset = "0xFEF5E8", VA = "0xFEF5E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200085D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73854", Offset = "0xB73854")]
		private sealed class <>c
		{
			[Token(Token = "0x4002E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Tile.OnReachedTarget <>9__44_0;

			[Token(Token = "0x600338F")]
			[Address(RVA = "0xFEF044", Offset = "0xFEF044", VA = "0xFEF044")]
			public <>c()
			{
			}

			[Token(Token = "0x6003390")]
			[Address(RVA = "0xFEF04C", Offset = "0xFEF04C", VA = "0xFEF04C")]
			internal void <ResetCoroutine>b__44_0(Tile sender, Vector3 _)
			{
			}
		}

		[Token(Token = "0x200085E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73864", Offset = "0xB73864")]
		private sealed class <ResetCoroutine>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grid <>4__this;

			[Token(Token = "0x4002E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OnReseted callback;

			[Token(Token = "0x4002E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x170005C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003394")]
				[Address(RVA = "0xFEF9CC", Offset = "0xFEF9CC", VA = "0xFEF9CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003396")]
				[Address(RVA = "0xFEFA38", Offset = "0xFEFA38", VA = "0xFEFA38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003391")]
			[Address(RVA = "0xFEEC80", Offset = "0xFEEC80", VA = "0xFEEC80")]
			[DebuggerHidden]
			public <ResetCoroutine>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6003392")]
			[Address(RVA = "0xFEF654", Offset = "0xFEF654", VA = "0xFEF654", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003393")]
			[Address(RVA = "0xFEF658", Offset = "0xFEF658", VA = "0xFEF658", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003395")]
			[Address(RVA = "0xFEF9D4", Offset = "0xFEF9D4", VA = "0xFEF9D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7FA34", Offset = "0xB7FA34")]
		[SerializeField]
		private Tile _prefab;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MaterialsDispenser _dispenser;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VfxSpawner _trailsSpawner;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OnObjectSpawned ObjectSpawned;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OnPopulated _callbackPopulated;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _populatedObjects;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _tilesArePlaced;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _currentTilesSpacing;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _currentSpawnRadius;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _currentPopulateDuration;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _distanceFromPlayer;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _currentDestroyDuration;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _currentDestroyDelay;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _currentPopulateDelay;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FAA0", Offset = "0xB7FAA0")]
		private float <Width>k__BackingField;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FAB0", Offset = "0xB7FAB0")]
		private float <Height>k__BackingField;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FAC0", Offset = "0xB7FAC0")]
		private int <PositionCount>k__BackingField;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FAD0", Offset = "0xB7FAD0")]
		private GridSlot[][] <Slots>k__BackingField;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FAE0", Offset = "0xB7FAE0")]
		private List<Tile> <Tiles>k__BackingField;

		[Token(Token = "0x170003CE")]
		public float Width
		{
			[Token(Token = "0x60023AE")]
			[Address(RVA = "0xFEE928", Offset = "0xFEE928", VA = "0xFEE928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C698", Offset = "0xB8C698")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023AF")]
			[Address(RVA = "0xFEE930", Offset = "0xFEE930", VA = "0xFEE930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C6A8", Offset = "0xB8C6A8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CF")]
		public float Height
		{
			[Token(Token = "0x60023B0")]
			[Address(RVA = "0xFEE938", Offset = "0xFEE938", VA = "0xFEE938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C6B8", Offset = "0xB8C6B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023B1")]
			[Address(RVA = "0xFEE940", Offset = "0xFEE940", VA = "0xFEE940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C6C8", Offset = "0xB8C6C8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D0")]
		public int PositionCount
		{
			[Token(Token = "0x60023B2")]
			[Address(RVA = "0xFEE948", Offset = "0xFEE948", VA = "0xFEE948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C6D8", Offset = "0xB8C6D8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60023B3")]
			[Address(RVA = "0xFEE950", Offset = "0xFEE950", VA = "0xFEE950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C6E8", Offset = "0xB8C6E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D1")]
		public GridSlot[][] Slots
		{
			[Token(Token = "0x60023B4")]
			[Address(RVA = "0xFEE958", Offset = "0xFEE958", VA = "0xFEE958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C6F8", Offset = "0xB8C6F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023B5")]
			[Address(RVA = "0xFEE960", Offset = "0xFEE960", VA = "0xFEE960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C708", Offset = "0xB8C708")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D2")]
		public List<Tile> Tiles
		{
			[Token(Token = "0x60023B6")]
			[Address(RVA = "0xFEE968", Offset = "0xFEE968", VA = "0xFEE968")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C718", Offset = "0xB8C718")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023B7")]
			[Address(RVA = "0xFEE970", Offset = "0xFEE970", VA = "0xFEE970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C728", Offset = "0xB8C728")]
			private set
			{
			}
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0xFED2D4", Offset = "0xFED2D4", VA = "0xFED2D4")]
		public void Config(float tilesSpacing, float spawnRadius, float populateDuration, float distanceFromPlayer, float destroyDuation, float destroyDelay, float populateDelay)
		{
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0xFEDE44", Offset = "0xFEDE44", VA = "0xFEDE44")]
		public void Generate(int rows, int cols)
		{
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0xFEE978", Offset = "0xFEE978", VA = "0xFEE978")]
		private Vector3 GetPositionInCircle(int totalTiles, int currentTiles, int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0xFEE2CC", Offset = "0xFEE2CC", VA = "0xFEE2CC")]
		public void Populate(OnPopulated callback)
		{
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0xFEEAE4", Offset = "0xFEEAE4", VA = "0xFEEAE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8C738", Offset = "0xB8C738")]
		private IEnumerator PopulateCoroutine(OnPopulated callback)
		{
			return null;
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0xFEEB90", Offset = "0xFEEB90", VA = "0xFEEB90")]
		private void MemoryObject_ReachedTarget(Tile sender, Vector3 targetPosition)
		{
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0xFED204", Offset = "0xFED204", VA = "0xFED204")]
		public void Reset(OnReseted callback)
		{
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0xFEEC00", Offset = "0xFEEC00", VA = "0xFEEC00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8C79C", Offset = "0xB8C79C")]
		public IEnumerator ResetCoroutine([Optional] OnReseted callback)
		{
			return null;
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0xFEEBE0", Offset = "0xFEEBE0", VA = "0xFEEBE0")]
		private void InvokeResetCallback([Optional] OnReseted callback)
		{
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0xFED5A4", Offset = "0xFED5A4", VA = "0xFED5A4")]
		public void Destroy()
		{
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0xFEEEC8", Offset = "0xFEEEC8", VA = "0xFEEEC8")]
		public List<Tile> GetTiles(int[] indices)
		{
			return null;
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0xFEE3F8", Offset = "0xFEE3F8", VA = "0xFEE3F8")]
		public List<Tile> GetRandomTiles(int count)
		{
			return null;
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0xFEDDD4", Offset = "0xFEDDD4", VA = "0xFEDDD4")]
		public void AdjustToHeight(float height)
		{
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0xFEECAC", Offset = "0xFEECAC", VA = "0xFEECAC")]
		private Vector3 GetRandomPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0xFEEEC0", Offset = "0xFEEEC0", VA = "0xFEEEC0")]
		private Quaternion GetRandomRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xFEEFD8", Offset = "0xFEEFD8", VA = "0xFEEFD8")]
		public Grid()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class GridHighlighter : MonoBehaviour
	{
		[Token(Token = "0x200085F")]
		public delegate void OnHighlightStart(GridHighlighter sender);

		[Token(Token = "0x2000860")]
		public delegate void OnHighlightEnd(GridHighlighter sender);

		[Token(Token = "0x2000861")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73874", Offset = "0xB73874")]
		private sealed class <HighlightCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GridHighlighter <>4__this;

			[Token(Token = "0x4002E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool soft;

			[Token(Token = "0x4002E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x170005C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033A2")]
				[Address(RVA = "0x1240EE8", Offset = "0x1240EE8", VA = "0x1240EE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033A4")]
				[Address(RVA = "0x1240F54", Offset = "0x1240F54", VA = "0x1240F54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600339F")]
			[Address(RVA = "0x1240578", Offset = "0x1240578", VA = "0x1240578")]
			[DebuggerHidden]
			public <HighlightCoroutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60033A0")]
			[Address(RVA = "0x12405CC", Offset = "0x12405CC", VA = "0x12405CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033A1")]
			[Address(RVA = "0x12405D0", Offset = "0x12405D0", VA = "0x12405D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033A3")]
			[Address(RVA = "0x1240EF0", Offset = "0x1240EF0", VA = "0x1240EF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OnHighlightStart HighlightStart;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnHighlightEnd HighlightEnd;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Tile> _tiles;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] _highlightedIndexes;

		[Token(Token = "0x170003D3")]
		public int HighlightedTilesCount
		{
			[Token(Token = "0x60023C8")]
			[Address(RVA = "0x123FD44", Offset = "0x123FD44", VA = "0x123FD44")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0x123FD5C", Offset = "0x123FD5C", VA = "0x123FD5C")]
		public void Highlight(List<Tile> tiles)
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0x123FDC8", Offset = "0x123FDC8", VA = "0x123FDC8")]
		public void Highlight(List<Tile> tiles, float duration)
		{
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0x123FDFC", Offset = "0x123FDFC", VA = "0x123FDFC")]
		public void Highlight(List<Tile> tiles, bool soft)
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x123FD94", Offset = "0x123FD94", VA = "0x123FD94")]
		private void Highlight(List<Tile> tiles, float duration, bool soft)
		{
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0x123FECC", Offset = "0x123FECC", VA = "0x123FECC")]
		public void HighlightCurrentTiles(bool highlight)
		{
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0x124013C", Offset = "0x124013C", VA = "0x124013C")]
		public bool TileSelected(Tile tile)
		{
			return default(bool);
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0x12401F8", Offset = "0x12401F8", VA = "0x12401F8")]
		public void ShowMissingTiles()
		{
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0x1240474", Offset = "0x1240474", VA = "0x1240474")]
		public void ShowAllTiles()
		{
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0x124051C", Offset = "0x124051C", VA = "0x124051C")]
		public void Reset()
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x123FE34", Offset = "0x123FE34", VA = "0x123FE34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8C800", Offset = "0xB8C800")]
		private IEnumerator HighlightCoroutine(float duration, bool soft)
		{
			return null;
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x123FF4C", Offset = "0x123FF4C", VA = "0x123FF4C")]
		private void HighlightTiles(List<Tile> tiles, bool highlight, bool soft)
		{
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0x12405C4", Offset = "0x12405C4", VA = "0x12405C4")]
		public GridHighlighter()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	public class MaterialsDispenser : MonoBehaviour
	{
		[Token(Token = "0x2000862")]
		public enum MaterialType
		{
			[Token(Token = "0x4002E4E")]
			Default,
			[Token(Token = "0x4002E4F")]
			Hover,
			[Token(Token = "0x4002E50")]
			Highlight,
			[Token(Token = "0x4002E51")]
			Success,
			[Token(Token = "0x4002E52")]
			Error,
			[Token(Token = "0x4002E53")]
			SoftHighlight,
			[Token(Token = "0x4002E54")]
			SoftHighlightHover
		}

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7FAF0", Offset = "0xB7FAF0")]
		[SerializeField]
		private Material _referenceMaterial;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7FB3C", Offset = "0xB7FB3C")]
		[SerializeField]
		private Color _colorDefault;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _colorHighlight;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _colorSuccess;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color _colorError;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<MaterialType, Material> _materials;

		[Token(Token = "0x170003D4")]
		public Color DefaultColor
		{
			[Token(Token = "0x60023D5")]
			[Address(RVA = "0x12410B0", Offset = "0x12410B0", VA = "0x12410B0")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0x12410BC", Offset = "0x12410BC", VA = "0x12410BC")]
		public Material GetMaterial(MaterialType materialType)
		{
			return null;
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x1241350", Offset = "0x1241350", VA = "0x1241350")]
		public MaterialsDispenser()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public class RoundSession
	{
		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FBB8", Offset = "0xB7FBB8")]
		private bool <Success>k__BackingField;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FBC8", Offset = "0xB7FBC8")]
		private bool <Ended>k__BackingField;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FBD8", Offset = "0xB7FBD8")]
		private int <Level>k__BackingField;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FBE8", Offset = "0xB7FBE8")]
		private float <Score>k__BackingField;

		[Token(Token = "0x170003D5")]
		public bool Success
		{
			[Token(Token = "0x60023D8")]
			[Address(RVA = "0x12426BC", Offset = "0x12426BC", VA = "0x12426BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C864", Offset = "0xB8C864")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023D9")]
			[Address(RVA = "0x12426C4", Offset = "0x12426C4", VA = "0x12426C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C874", Offset = "0xB8C874")]
			set
			{
			}
		}

		[Token(Token = "0x170003D6")]
		public bool Ended
		{
			[Token(Token = "0x60023DA")]
			[Address(RVA = "0x12426D0", Offset = "0x12426D0", VA = "0x12426D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C884", Offset = "0xB8C884")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023DB")]
			[Address(RVA = "0x12426D8", Offset = "0x12426D8", VA = "0x12426D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C894", Offset = "0xB8C894")]
			set
			{
			}
		}

		[Token(Token = "0x170003D7")]
		public int Level
		{
			[Token(Token = "0x60023DC")]
			[Address(RVA = "0x12426E4", Offset = "0x12426E4", VA = "0x12426E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C8A4", Offset = "0xB8C8A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60023DD")]
			[Address(RVA = "0x12426EC", Offset = "0x12426EC", VA = "0x12426EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C8B4", Offset = "0xB8C8B4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D8")]
		public float Score
		{
			[Token(Token = "0x60023DE")]
			[Address(RVA = "0x12426F4", Offset = "0x12426F4", VA = "0x12426F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C8C4", Offset = "0xB8C8C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023DF")]
			[Address(RVA = "0x12426FC", Offset = "0x12426FC", VA = "0x12426FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C8D4", Offset = "0xB8C8D4")]
			set
			{
			}
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x1242704", Offset = "0x1242704", VA = "0x1242704")]
		public RoundSession(int level)
		{
		}
	}
	[Token(Token = "0x20004B6")]
	public class Tile : MonoBehaviour
	{
		[Token(Token = "0x2000863")]
		public delegate void OnSelected(Tile sender);

		[Token(Token = "0x2000864")]
		public delegate void OnReachedTarget(Tile sender, Vector3 targetPosition);

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7FBF8", Offset = "0xB7FBF8")]
		[SerializeField]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PointerHitable _hitable;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TileAnimator _animator;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7FC74", Offset = "0xB7FC74")]
		[SerializeField]
		private float _width;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _height;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public OnSelected Selected;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public OnReachedTarget ReachedTarget;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FCD0", Offset = "0xB7FCD0")]
		private int <Index>k__BackingField;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FCE0", Offset = "0xB7FCE0")]
		private int <Row>k__BackingField;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FCF0", Offset = "0xB7FCF0")]
		private int <Col>k__BackingField;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FD00", Offset = "0xB7FD00")]
		private bool <IsSelected>k__BackingField;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private OnReachedTarget _callback;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialsDispenser _materialsDispenser;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _startTime;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _speedMove;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _speedRotate;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _totalDistance;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _totalAngleDistance;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 _initialPosition;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 _targetPosition;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion _initialRotation;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Quaternion _targetRotation;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool _hovered;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private VfxEffect _trail;

		[Token(Token = "0x170003D9")]
		public int Index
		{
			[Token(Token = "0x60023E1")]
			[Address(RVA = "0x1242730", Offset = "0x1242730", VA = "0x1242730")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C8E4", Offset = "0xB8C8E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60023E2")]
			[Address(RVA = "0x1242738", Offset = "0x1242738", VA = "0x1242738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C8F4", Offset = "0xB8C8F4")]
			set
			{
			}
		}

		[Token(Token = "0x170003DA")]
		public int Row
		{
			[Token(Token = "0x60023E3")]
			[Address(RVA = "0x1242740", Offset = "0x1242740", VA = "0x1242740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C904", Offset = "0xB8C904")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60023E4")]
			[Address(RVA = "0x1242748", Offset = "0x1242748", VA = "0x1242748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C914", Offset = "0xB8C914")]
			set
			{
			}
		}

		[Token(Token = "0x170003DB")]
		public int Col
		{
			[Token(Token = "0x60023E5")]
			[Address(RVA = "0x1242750", Offset = "0x1242750", VA = "0x1242750")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C924", Offset = "0xB8C924")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60023E6")]
			[Address(RVA = "0x1242758", Offset = "0x1242758", VA = "0x1242758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C934", Offset = "0xB8C934")]
			set
			{
			}
		}

		[Token(Token = "0x170003DC")]
		public float Width
		{
			[Token(Token = "0x60023E7")]
			[Address(RVA = "0x1242760", Offset = "0x1242760", VA = "0x1242760")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003DD")]
		public float Height
		{
			[Token(Token = "0x60023E8")]
			[Address(RVA = "0x1242768", Offset = "0x1242768", VA = "0x1242768")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003DE")]
		public bool IsSelected
		{
			[Token(Token = "0x60023E9")]
			[Address(RVA = "0x1242770", Offset = "0x1242770", VA = "0x1242770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C944", Offset = "0xB8C944")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023EA")]
			[Address(RVA = "0x1242778", Offset = "0x1242778", VA = "0x1242778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C954", Offset = "0xB8C954")]
			private set
			{
			}
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x1242784", Offset = "0x1242784", VA = "0x1242784")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x124287C", Offset = "0x124287C", VA = "0x124287C")]
		private void Update()
		{
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0x1242F0C", Offset = "0x1242F0C", VA = "0x1242F0C")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x1242F40", Offset = "0x1242F40", VA = "0x1242F40")]
		public void SetMaterialsDispenser(MaterialsDispenser materialsDispenser)
		{
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x1242F48", Offset = "0x1242F48", VA = "0x1242F48")]
		public void Move(Vector3 targetPosition, Quaternion targetRotation, float totalDuration, OnReachedTarget callback)
		{
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x1243164", Offset = "0x1243164", VA = "0x1243164")]
		public void SetTrail(VfxEffect trail)
		{
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x124323C", Offset = "0x124323C", VA = "0x124323C")]
		public void Transform(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x12405A4", Offset = "0x12405A4", VA = "0x12405A4")]
		public void Highlight(bool highlighted, bool soft)
		{
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x12402A0", Offset = "0x12402A0", VA = "0x12402A0")]
		public void Select(bool success)
		{
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x1240514", Offset = "0x1240514", VA = "0x1240514")]
		public void Success()
		{
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0x124338C", Offset = "0x124338C", VA = "0x124338C")]
		public void Drop()
		{
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x1243480", Offset = "0x1243480", VA = "0x1243480")]
		public void Reset()
		{
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x12432DC", Offset = "0x12432DC", VA = "0x12432DC")]
		private void SetMaterial(MaterialsDispenser.MaterialType materialType)
		{
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x1243554", Offset = "0x1243554", VA = "0x1243554")]
		private void Hover(bool hovered)
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x124380C", Offset = "0x124380C", VA = "0x124380C")]
		private void Hitable_Clicked(PointerHitable sender)
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x1243BE0", Offset = "0x1243BE0", VA = "0x1243BE0")]
		private void Hitable_HoverEntered(PointerHitable sender)
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x1243BE8", Offset = "0x1243BE8", VA = "0x1243BE8")]
		private void Hitable_HoverExited(PointerHitable sender)
		{
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x1243BF0", Offset = "0x1243BF0", VA = "0x1243BF0")]
		public Tile()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class TileAnimator : MonoBehaviour
	{
		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7FD10", Offset = "0xB7FD10")]
		public Animator _animator;

		[Token(Token = "0x4001DC0")]
		public const string TOGGLE_HOVER = "hover";

		[Token(Token = "0x4001DC1")]
		public const string TRIGGER_WRONG = "wrong";

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x12437A0", Offset = "0x12437A0", VA = "0x12437A0")]
		public void Hover(bool hover)
		{
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0x1243324", Offset = "0x1243324", VA = "0x1243324")]
		public void Wrong()
		{
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0x1243CF4", Offset = "0x1243CF4", VA = "0x1243CF4")]
		public TileAnimator()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public class TilesDisplay : MonoBehaviour
	{
		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7FD48", Offset = "0xB7FD48")]
		public SceneLabelEffect _effect;

		[Token(Token = "0x6002400")]
		[Address(RVA = "0x1243E98", Offset = "0x1243E98", VA = "0x1243E98")]
		public void Enable(bool enable)
		{
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0x1243F20", Offset = "0x1243F20", VA = "0x1243F20")]
		public void SetTiles(int tiles)
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x1244024", Offset = "0x1244024", VA = "0x1244024")]
		public TilesDisplay()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public class GameManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000865")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73884", Offset = "0xB73884")]
		private sealed class <>c
		{
			[Token(Token = "0x4002E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Grid.OnReseted <>9__20_0;

			[Token(Token = "0x4002E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Grid.OnReseted <>9__24_0;

			[Token(Token = "0x60033AE")]
			[Address(RVA = "0xFEE5BC", Offset = "0xFEE5BC", VA = "0xFEE5BC")]
			public <>c()
			{
			}

			[Token(Token = "0x60033AF")]
			[Address(RVA = "0xFEE5C4", Offset = "0xFEE5C4", VA = "0xFEE5C4")]
			internal void <SetupGrid>b__20_0(Grid grid)
			{
			}

			[Token(Token = "0x60033B0")]
			[Address(RVA = "0xFEE5C8", Offset = "0xFEE5C8", VA = "0xFEE5C8")]
			internal void <GameController_GameEnd>b__24_0(Grid grid)
			{
			}
		}

		[Token(Token = "0x2000866")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73894", Offset = "0xB73894")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4002E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool? endGame;

			[Token(Token = "0x4002E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameManager <>4__this;

			[Token(Token = "0x4002E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grid.OnReseted <>9__1;

			[Token(Token = "0x60033B1")]
			[Address(RVA = "0xFEDC4C", Offset = "0xFEDC4C", VA = "0xFEDC4C")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x60033B2")]
			[Address(RVA = "0xFEE5CC", Offset = "0xFEE5CC", VA = "0xFEE5CC")]
			internal void <EndRound>b__0(Waiter sender)
			{
			}

			[Token(Token = "0x60033B3")]
			[Address(RVA = "0xFEE6A0", Offset = "0xFEE6A0", VA = "0xFEE6A0")]
			internal void <EndRound>b__1(Grid _)
			{
			}
		}

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7FD80", Offset = "0xB7FD80")]
		[SerializeField]
		private GameController _gameController;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Grid _grid;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GridHighlighter _gridHighlighter;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MemoryWallProgressionManager _progressionManager;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TilesDisplay _tilesDisplay;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MemoryWallRobot _robot;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7FE1C", Offset = "0xB7FE1C")]
		[SerializeField]
		private MemoryWallGameConfig _gameConfig;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _currentTilesToHighlight;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _currentHighlightDuration;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _currentGridRows;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _currentGridCols;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _selectedCount;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _successCount;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _currentLevel;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int _currentRound;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isPlaying;

		[Token(Token = "0x6002403")]
		[Address(RVA = "0xFECC50", Offset = "0xFECC50", VA = "0xFECC50")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0xFECE38", Offset = "0xFECE38", VA = "0xFECE38")]
		private void GameController_Loaded(GameController sender)
		{
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0xFED114", Offset = "0xFED114", VA = "0xFED114")]
		private void GameController_WillUnload(GameController sender)
		{
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0xFED1D0", Offset = "0xFED1D0", VA = "0xFED1D0")]
		private void GameController_GameWillStart(GameController sender)
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0xFECF48", Offset = "0xFECF48", VA = "0xFECF48")]
		private void SetupGrid()
		{
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0xFED2E8", Offset = "0xFED2E8", VA = "0xFED2E8")]
		private void GameController_GameStart(GameController sender, int startLevel, bool isFirstTime)
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0xFED408", Offset = "0xFED408", VA = "0xFED408")]
		private void GameController_GamePaused(GameController sender, bool paused, SceneStatusType statusType)
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0xFED538", Offset = "0xFED538", VA = "0xFED538")]
		private void GameController_GameStop(GameController sender)
		{
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0xFED704", Offset = "0xFED704", VA = "0xFED704")]
		private void GameController_GameEnd(GameController sender)
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0xFED834", Offset = "0xFED834", VA = "0xFED834")]
		private void Grid_ObjectSpawned(Grid sender, Tile memoryObject)
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0xFED8BC", Offset = "0xFED8BC", VA = "0xFED8BC")]
		private void GridHighlighter_HighlightStart(GridHighlighter sender)
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0xFED8EC", Offset = "0xFED8EC", VA = "0xFED8EC")]
		private void GridHighlighter_HighlightEnd(GridHighlighter sender)
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0xFED934", Offset = "0xFED934", VA = "0xFED934")]
		private void MemoryObject_Selected(Tile sender)
		{
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0xFEDC1C", Offset = "0xFEDC1C", VA = "0xFEDC1C")]
		public void LoadLevelRules(MemoryWallLevelConfig levelConfig)
		{
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0xFED374", Offset = "0xFED374", VA = "0xFED374")]
		private void StartRound()
		{
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0xFED59C", Offset = "0xFED59C", VA = "0xFED59C")]
		private void ResetRound()
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0xFEDAAC", Offset = "0xFEDAAC", VA = "0xFEDAAC")]
		private void EndRound([Optional][MetadataOffset(Offset = "0x4D0DD6")] bool? endGame)
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0xFEDC54", Offset = "0xFEDC54", VA = "0xFEDC54")]
		private void EndSession()
		{
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0xFEDCC4", Offset = "0xFEDCC4", VA = "0xFEDCC4")]
		public GameManager()
		{
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0xFEDCCC", Offset = "0xFEDCCC", VA = "0xFEDCCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C964", Offset = "0xB8C964")]
		private void <StartRound>b__30_0(Grid grid)
		{
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0xFEE330", Offset = "0xFEE330", VA = "0xFEE330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C974", Offset = "0xB8C974")]
		private void <StartRound>b__30_1(Grid grid1)
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class MemoryWallProgressionManager : ProgressionManager
	{
		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7FE68", Offset = "0xB7FE68")]
		[SerializeField]
		private GameManager _gameManager;

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x1241388", Offset = "0x1241388", VA = "0x1241388", Slot = "4")]
		public override void Setup(GameConfig gameConfig, int level, bool isFirstTime)
		{
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x12414F0", Offset = "0x12414F0", VA = "0x12414F0", Slot = "5")]
		protected override void IncrementLevel()
		{
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x1241630", Offset = "0x1241630", VA = "0x1241630", Slot = "6")]
		protected override void DecrementLevel()
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x1241770", Offset = "0x1241770", VA = "0x1241770")]
		public MemoryWallProgressionManager()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public class ObjectsManager : MonoBehaviour
	{
		[Token(Token = "0x2000867")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB738A4", Offset = "0xB738A4")]
		private sealed class <HighilightCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170005CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033B7")]
				[Address(RVA = "0x1242268", Offset = "0x1242268", VA = "0x1242268", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033B9")]
				[Address(RVA = "0x12422D4", Offset = "0x12422D4", VA = "0x12422D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033B4")]
			[Address(RVA = "0x1242194", Offset = "0x1242194", VA = "0x1242194")]
			[DebuggerHidden]
			public <HighilightCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60033B5")]
			[Address(RVA = "0x12421C8", Offset = "0x12421C8", VA = "0x12421C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033B6")]
			[Address(RVA = "0x12421CC", Offset = "0x12421CC", VA = "0x12421CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033B8")]
			[Address(RVA = "0x1242270", Offset = "0x1242270", VA = "0x1242270", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7FEB4", Offset = "0xB7FEB4")]
		public Grid _grid;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tile _prefab;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7FEEC", Offset = "0xB7FEEC")]
		public int _rows;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int _columns;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float _spacing;

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x1242130", Offset = "0x1242130", VA = "0x1242130")]
		public void Highlight(int count)
		{
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0x1242134", Offset = "0x1242134", VA = "0x1242134")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8C984", Offset = "0xB8C984")]
		private IEnumerator HighilightCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0x12421C0", Offset = "0x12421C0", VA = "0x12421C0")]
		public ObjectsManager()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class GameSession
	{
		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FF24", Offset = "0xB7FF24")]
		private float <Score>k__BackingField;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FF34", Offset = "0xB7FF34")]
		private int <MaxLevelReached>k__BackingField;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FF44", Offset = "0xB7FF44")]
		private int <CurrentLevel>k__BackingField;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<RoundSession> _rounds;

		[Token(Token = "0x170003DF")]
		public float Score
		{
			[Token(Token = "0x600241F")]
			[Address(RVA = "0xFEE6CC", Offset = "0xFEE6CC", VA = "0xFEE6CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C9E8", Offset = "0xB8C9E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002420")]
			[Address(RVA = "0xFEE6D4", Offset = "0xFEE6D4", VA = "0xFEE6D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8C9F8", Offset = "0xB8C9F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E0")]
		public int MaxLevelReached
		{
			[Token(Token = "0x6002421")]
			[Address(RVA = "0xFEE6DC", Offset = "0xFEE6DC", VA = "0xFEE6DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8CA08", Offset = "0xB8CA08")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002422")]
			[Address(RVA = "0xFEE6E4", Offset = "0xFEE6E4", VA = "0xFEE6E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8CA18", Offset = "0xB8CA18")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E1")]
		public int CurrentLevel
		{
			[Token(Token = "0x6002423")]
			[Address(RVA = "0xFEE6EC", Offset = "0xFEE6EC", VA = "0xFEE6EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8CA28", Offset = "0xB8CA28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002424")]
			[Address(RVA = "0xFEE6F4", Offset = "0xFEE6F4", VA = "0xFEE6F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8CA38", Offset = "0xB8CA38")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E2")]
		public RoundSession CurrentRoundSession
		{
			[Token(Token = "0x6002425")]
			[Address(RVA = "0xFEE6FC", Offset = "0xFEE6FC", VA = "0xFEE6FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0xFEE78C", Offset = "0xFEE78C", VA = "0xFEE78C")]
		public GameSession(int startLevel)
		{
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0xFEE810", Offset = "0xFEE810", VA = "0xFEE810")]
		public void RoundStarted()
		{
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0xFEE8A0", Offset = "0xFEE8A0", VA = "0xFEE8A0")]
		public void RoundEnded()
		{
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0xFEE8C4", Offset = "0xFEE8C4", VA = "0xFEE8C4")]
		public void UpdateLevel(int level)
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0xFEE8DC", Offset = "0xFEE8DC", VA = "0xFEE8DC")]
		public void IncrementScore(float points)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004BD")]
	public class MemoryWallLevelConfig : LevelConfig
	{
		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int GridSize;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int HighlightedTiles;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float HighlightDuration;

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x1241368", Offset = "0x1241368", VA = "0x1241368")]
		public MemoryWallLevelConfig()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class MemoryWallRobot : MonoBehaviour
	{
		[Token(Token = "0x2000868")]
		public delegate void OnPositionReached();

		[Token(Token = "0x2000869")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB738B4", Offset = "0xB738B4")]
		private sealed class <Move_Coroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MemoryWallRobot <>4__this;

			[Token(Token = "0x170005CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033C1")]
				[Address(RVA = "0x124206C", Offset = "0x124206C", VA = "0x124206C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033C3")]
				[Address(RVA = "0x12420D8", Offset = "0x12420D8", VA = "0x12420D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033BE")]
			[Address(RVA = "0x124189C", Offset = "0x124189C", VA = "0x124189C")]
			[DebuggerHidden]
			public <Move_Coroutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60033BF")]
			[Address(RVA = "0x1241C40", Offset = "0x1241C40", VA = "0x1241C40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033C0")]
			[Address(RVA = "0x1241C44", Offset = "0x1241C44", VA = "0x1241C44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033C2")]
			[Address(RVA = "0x1242074", Offset = "0x1242074", VA = "0x1242074", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7FF54", Offset = "0xB7FF54")]
		[SerializeField]
		private Transform _tutorialInitialPoint;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _tutorialInstructionsPoint;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _gamePoint;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7FFC0", Offset = "0xB7FFC0")]
		[SerializeField]
		private float _movingSpeed;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _currentSpeed;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _target;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected OnPositionReached _callback;

		[Token(Token = "0x600242C")]
		[Address(RVA = "0x12417D8", Offset = "0x12417D8", VA = "0x12417D8")]
		public void MoveToWelcomePoint(OnPositionReached callback)
		{
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0x12417F8", Offset = "0x12417F8", VA = "0x12417F8")]
		public void MoveToInstructionsPoint(OnPositionReached callback)
		{
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0x1241810", Offset = "0x1241810", VA = "0x1241810")]
		public void MoveToGamePoint(OnPositionReached callback)
		{
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0x1241828", Offset = "0x1241828", VA = "0x1241828")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8CA48", Offset = "0xB8CA48")]
		private IEnumerator Move_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x12418C8", Offset = "0x12418C8", VA = "0x12418C8")]
		private void LookAtPlayer()
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x12417F0", Offset = "0x12417F0", VA = "0x12417F0")]
		private void MoveToPoint(Transform point, [Optional] OnPositionReached callback)
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0x1241ACC", Offset = "0x1241ACC", VA = "0x1241ACC")]
		private void MoveToPoint(Transform point, float duration, [Optional] OnPositionReached callback)
		{
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x1241B54", Offset = "0x1241B54", VA = "0x1241B54")]
		private float GetSpeed(Vector3 position, float duration)
		{
			return default(float);
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0x1241C30", Offset = "0x1241C30", VA = "0x1241C30")]
		public MemoryWallRobot()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public class Tutorial : MonoBehaviour
	{
		[Token(Token = "0x200086A")]
		public delegate void OnTutorialEnded(Tutorial sender);

		[Token(Token = "0x200086B")]
		public enum Step
		{
			[Token(Token = "0x4002E61")]
			Welcoming,
			[Token(Token = "0x4002E62")]
			Grid,
			[Token(Token = "0x4002E63")]
			Memorize,
			[Token(Token = "0x4002E64")]
			Select,
			[Token(Token = "0x4002E65")]
			Practice,
			[Token(Token = "0x4002E66")]
			End
		}

		[Serializable]
		[Token(Token = "0x200086C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB738C4", Offset = "0xB738C4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Grid.OnPopulated <>9__28_1;

			[Token(Token = "0x60033C9")]
			[Address(RVA = "0x1245208", Offset = "0x1245208", VA = "0x1245208")]
			public <>c()
			{
			}

			[Token(Token = "0x60033CA")]
			[Address(RVA = "0x1245210", Offset = "0x1245210", VA = "0x1245210")]
			internal void <CreateWelcomeGrid>b__28_1(Grid __)
			{
			}
		}

		[Token(Token = "0x200086D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB738D4", Offset = "0xB738D4")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4002E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Tutorial <>4__this;

			[Token(Token = "0x4002E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool withDuration;

			[Token(Token = "0x4002E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grid.OnPopulated <>9__1;

			[Token(Token = "0x60033CB")]
			[Address(RVA = "0x1244D30", Offset = "0x1244D30", VA = "0x1244D30")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x60033CC")]
			[Address(RVA = "0x1245214", Offset = "0x1245214", VA = "0x1245214")]
			internal void <CreateMemorizeGrid>b__0(Grid _)
			{
			}

			[Token(Token = "0x60033CD")]
			[Address(RVA = "0x1245334", Offset = "0x1245334", VA = "0x1245334")]
			internal void <CreateMemorizeGrid>b__1(Grid __)
			{
			}
		}

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB8000C", Offset = "0xB8000C")]
		[SerializeField]
		private GameController _gameController;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TutorialController _tutorialManager;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Grid _grid;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GridHighlighter _gridHighlighter;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MemoryWallRobot _robot;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MemoryWallGameConfig _gameConfig;

		[Token(Token = "0x4001DED")]
		private const int GRID_SIZE = 3;

		[Token(Token = "0x4001DEE")]
		private const int HIGHLIGHT_COUNT = 3;

		[Token(Token = "0x4001DEF")]
		private const float HIGHLIGHT_DURATION = 3f;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly int[] TILES_TO_HIGHLIGHT;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _selectionCount;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _successCount;

		[Token(Token = "0x6002435")]
		[Address(RVA = "0x124402C", Offset = "0x124402C", VA = "0x124402C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x1244130", Offset = "0x1244130", VA = "0x1244130")]
		private void GameController_TutorialStart(GameController sender)
		{
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x1244350", Offset = "0x1244350", VA = "0x1244350")]
		private void GameController_TutorialStop(GameController sender)
		{
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0x1244434", Offset = "0x1244434", VA = "0x1244434")]
		private void GameController_TutorialPaused(GameController sender, bool paused, SceneStatusType statusType)
		{
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x1244354", Offset = "0x1244354", VA = "0x1244354")]
		public void ResetTutorial()
		{
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x1244584", Offset = "0x1244584", VA = "0x1244584")]
		private void TutorialManager_StepInstructionsStart(TutorialController sender, TutorialStep step)
		{
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0x124476C", Offset = "0x124476C", VA = "0x124476C")]
		private void TutorialManager_StepInstructionsPlay(TutorialController sender, TutorialStep step, int instructionIndex)
		{
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x1244938", Offset = "0x1244938", VA = "0x1244938")]
		private void TutorialManager_StepInstructionsEnd(TutorialController sender, TutorialStep step)
		{
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x1244ACC", Offset = "0x1244ACC", VA = "0x1244ACC")]
		private void TutorialManager_OnTutorialEnded(TutorialController sender)
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x1244AE8", Offset = "0x1244AE8", VA = "0x1244AE8")]
		private void InputSystem_TriggerPressed(InputSystem sender, InputType inputType, ControllerType controllerType)
		{
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x1244AF0", Offset = "0x1244AF0", VA = "0x1244AF0")]
		private void GridHighlighter_HighlightStart(GridHighlighter sender)
		{
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x1244B20", Offset = "0x1244B20", VA = "0x1244B20")]
		private void GridHighlighter_HighlightEnd(GridHighlighter sender)
		{
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0x1244B50", Offset = "0x1244B50", VA = "0x1244B50")]
		private void Grid_ObjectSpawned(Grid sender, Tile memoryObject)
		{
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x1244BD4", Offset = "0x1244BD4", VA = "0x1244BD4")]
		private void MemoryObject_Selected(Tile sender)
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x124489C", Offset = "0x124489C", VA = "0x124489C")]
		private void CreateWelcomeGrid()
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x1244600", Offset = "0x1244600", VA = "0x1244600")]
		private void CreateMemorizeGrid(bool withDuration)
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x12446D0", Offset = "0x12446D0", VA = "0x12446D0")]
		private void CreatePracticeGrid()
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x1244A38", Offset = "0x1244A38", VA = "0x1244A38")]
		private void HighlightButton(bool highlight)
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x1244D38", Offset = "0x1244D38", VA = "0x1244D38")]
		public Tutorial()
		{
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x1244DB0", Offset = "0x1244DB0", VA = "0x1244DB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8CAAC", Offset = "0xB8CAAC")]
		private void <GameController_TutorialStart>b__15_0()
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x1244E54", Offset = "0x1244E54", VA = "0x1244E54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8CABC", Offset = "0xB8CABC")]
		private void <GameController_TutorialStart>b__15_1(Grid grid)
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x1244E70", Offset = "0x1244E70", VA = "0x1244E70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8CACC", Offset = "0xB8CACC")]
		private void <TutorialManager_StepInstructionsEnd>b__21_0(Waiter _)
		{
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x1244EE0", Offset = "0x1244EE0", VA = "0x1244EE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8CADC", Offset = "0xB8CADC")]
		private void <CreateWelcomeGrid>b__28_0(Grid _)
		{
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x124503C", Offset = "0x124503C", VA = "0x124503C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8CAEC", Offset = "0xB8CAEC")]
		private void <CreatePracticeGrid>b__30_0(Grid _)
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0x1245140", Offset = "0x1245140", VA = "0x1245140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8CAFC", Offset = "0xB8CAFC")]
		private void <CreatePracticeGrid>b__30_1(Grid __)
		{
		}
	}
	[Token(Token = "0x20004C0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB72240", Offset = "0xB72240")]
	public class MemoryWallGameConfig : GameConfig
	{
		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float timeAfterLevelEnd;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float gridSpawnRadius;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float gridPopulateDuration;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float gridTilesSpacing;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float gridDistanceFromPlayer;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float gridDestroyDuration;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float gridDestroyDelay;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float gridPopulateDelay;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB800A8", Offset = "0xB800A8")]
		public MemoryWallLevelConfig[] _levels;

		[Token(Token = "0x170003E3")]
		public override LevelConfig[] Levels
		{
			[Token(Token = "0x600244E")]
			[Address(RVA = "0x1241358", Offset = "0x1241358", VA = "0x1241358", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0x1241360", Offset = "0x1241360", VA = "0x1241360")]
		public MemoryWallGameConfig()
		{
		}
	}
}
namespace AttentionLab.MiniGames.MagicDeck
{
	[Token(Token = "0x20004C1")]
	public class CardSelectedData
	{
		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int level;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int round;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int card_to_match;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int selected_position;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool success;

		[Token(Token = "0x6002450")]
		[Address(RVA = "0xFE7DA4", Offset = "0xFE7DA4", VA = "0xFE7DA4")]
		public CardSelectedData(int level, int round, int cardToMatch, int selectedPosition, bool success)
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public class CardSelectedMagicDeckMoment : MagicDeckMoment
	{
		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly int _level;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly int _round;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly int _cardToMatch;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private readonly int _selectedPosition;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly bool _success;

		[Token(Token = "0x6002451")]
		[Address(RVA = "0xFE7DFC", Offset = "0xFE7DFC", VA = "0xFE7DFC")]
		public CardSelectedMagicDeckMoment(int level, int round, int cardToMatch, int selectedPosition, bool success)
		{
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0xFE7E68", Offset = "0xFE7E68", VA = "0xFE7E68", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class CardData
	{
		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB800E0", Offset = "0xB800E0")]
		public float angle;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int id;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> colors;

		[Token(Token = "0x6002453")]
		[Address(RVA = "0xFE3E28", Offset = "0xFE3E28", VA = "0xFE3E28")]
		public CardData(float cardAngle, int cardId, List<int> cardColors)
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public class CardsSpawnedData
	{
		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int level;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int round;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CardData[] cards;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB80144", Offset = "0xB80144")]
		public DateTime start_timestamp;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB801D4", Offset = "0xB801D4")]
		public DateTime end_timestamp;

		[Token(Token = "0x6002454")]
		[Address(RVA = "0xFE7F1C", Offset = "0xFE7F1C", VA = "0xFE7F1C")]
		public CardsSpawnedData(int level, int round, CardData[] cardsSpawned, DateTime startTimestamp, DateTime endTimestamp)
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public class CardsSpawnedMagicDeckMoment : MagicDeckMoment
	{
		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly int _level;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly int _round;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly CardData[] _spawnedCards;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly DateTime _startTimetamp;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly DateTime _endTimetamp;

		[Token(Token = "0x6002455")]
		[Address(RVA = "0xFE7F70", Offset = "0xFE7F70", VA = "0xFE7F70")]
		public CardsSpawnedMagicDeckMoment(int level, int round, List<Card> spawnedCards, DateTime startTimestamp, DateTime endTimestamp)
		{
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0xFE8248", Offset = "0xFE8248", VA = "0xFE8248", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public abstract class MagicDeckMoment : GameMoment
	{
		[Token(Token = "0x6002457")]
		public abstract override void SetValues();

		[Token(Token = "0x6002458")]
		[Address(RVA = "0xFE8228", Offset = "0xFE8228", VA = "0xFE8228")]
		protected int ParseCardColor(Card.CardConfiguration.CardColor color)
		{
			return default(int);
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0xFE7E60", Offset = "0xFE7E60", VA = "0xFE7E60")]
		protected MagicDeckMoment()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public class Card : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200086E")]
		public class CardConfiguration
		{
			[Token(Token = "0x20008F7")]
			public enum CardColor
			{
				[Token(Token = "0x4003060")]
				Red,
				[Token(Token = "0x4003061")]
				Orange,
				[Token(Token = "0x4003062")]
				Yellow,
				[Token(Token = "0x4003063")]
				Green,
				[Token(Token = "0x4003064")]
				Blue,
				[Token(Token = "0x4003065")]
				Purple
			}

			[Token(Token = "0x20008F8")]
			public enum CardShape
			{
				[Token(Token = "0x4003067")]
				A,
				[Token(Token = "0x4003068")]
				B,
				[Token(Token = "0x4003069")]
				C,
				[Token(Token = "0x400306A")]
				D,
				[Token(Token = "0x400306B")]
				E,
				[Token(Token = "0x400306C")]
				F,
				[Token(Token = "0x400306D")]
				G,
				[Token(Token = "0x400306E")]
				H,
				[Token(Token = "0x400306F")]
				I
			}

			[Serializable]
			[Token(Token = "0x20008F9")]
			public class Image
			{
				[Token(Token = "0x4003070")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public CardColor color;

				[Token(Token = "0x4003071")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public CardShape shape;

				[Token(Token = "0x4003072")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public bool flipX;

				[Token(Token = "0x4003073")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
				public bool flipY;

				[Token(Token = "0x60035AD")]
				[Address(RVA = "0xFE38A8", Offset = "0xFE38A8", VA = "0xFE38A8")]
				public Image(CardColor color_, CardShape shape_, bool flipX_, bool flipY_)
				{
				}

				[Token(Token = "0x60035AE")]
				[Address(RVA = "0xFE3ACC", Offset = "0xFE3ACC", VA = "0xFE3ACC")]
				public Image(bool randomize)
				{
				}

				[Token(Token = "0x60035AF")]
				[Address(RVA = "0xFE3C2C", Offset = "0xFE3C2C", VA = "0xFE3C2C")]
				public Image(Image imageToOppose)
				{
				}
			}

			[Token(Token = "0x4002E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image imageA;

			[Token(Token = "0x4002E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Image imageB;

			[Token(Token = "0x60033CE")]
			[Address(RVA = "0xFE3880", Offset = "0xFE3880", VA = "0xFE3880")]
			private static bool RandomBool()
			{
				return default(bool);
			}

			[Token(Token = "0x60033CF")]
			[Address(RVA = "0xFE312C", Offset = "0xFE312C", VA = "0xFE312C")]
			public static List<CardConfiguration> GetAlPossibilities()
			{
				return null;
			}

			[Token(Token = "0x60033D0")]
			[Address(RVA = "0xFE39D4", Offset = "0xFE39D4", VA = "0xFE39D4")]
			public static int CombinationRange()
			{
				return default(int);
			}

			[Token(Token = "0x60033D1")]
			[Address(RVA = "0xFE3834", Offset = "0xFE3834", VA = "0xFE3834")]
			public CardConfiguration(CardConfiguration card)
			{
			}

			[Token(Token = "0x60033D2")]
			[Address(RVA = "0xFE3900", Offset = "0xFE3900", VA = "0xFE3900")]
			public CardConfiguration(Image imageA_, Image imageB_)
			{
			}

			[Token(Token = "0x60033D3")]
			[Address(RVA = "0xFE3704", Offset = "0xFE3704", VA = "0xFE3704")]
			public CardConfiguration(bool randomize)
			{
			}
		}

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 targetPosition;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 virtualPosition;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool floats;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MeshRenderer _mesh;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _inputReportPrefab;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputReport _inputReport;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB80284", Offset = "0xB80284")]
		public int _hash;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool _isVisible;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PointerHitable hitable;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CardConfiguration card;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Card hoveredCard;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<CardConfiguration> allPossibleCards;

		[Token(Token = "0x600245A")]
		[Address(RVA = "0xFE1E1C", Offset = "0xFE1E1C", VA = "0xFE1E1C")]
		private bool IsSelectable()
		{
			return default(bool);
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0xFE1EE0", Offset = "0xFE1EE0", VA = "0xFE1EE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0xFE20A4", Offset = "0xFE20A4", VA = "0xFE20A4")]
		private void Update()
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0xFE269C", Offset = "0xFE269C", VA = "0xFE269C")]
		private void Hitable_HoverEntered(PointerHitable sender)
		{
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0xFE2818", Offset = "0xFE2818", VA = "0xFE2818")]
		private void Hitable_HoverExited(PointerHitable sender)
		{
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0xFE2868", Offset = "0xFE2868", VA = "0xFE2868")]
		public void MirrorBothSides(bool hide = true)
		{
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0xFE2CF4", Offset = "0xFE2CF4", VA = "0xFE2CF4")]
		public void Spawn(int hash, bool hide)
		{
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0xFE2D08", Offset = "0xFE2D08", VA = "0xFE2D08")]
		public void InputReport(bool show, bool valid = true)
		{
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0xFE3054", Offset = "0xFE3054", VA = "0xFE3054")]
		public static CardConfiguration GetCardConfiguration(int i)
		{
			return null;
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0xFE3798", Offset = "0xFE3798", VA = "0xFE3798")]
		public void UpdateMask(float visibility)
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0xFE3830", Offset = "0xFE3830", VA = "0xFE3830")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xB8CB0C", Offset = "0xB8CB0C")]
		public void Debug()
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0xFE2878", Offset = "0xFE2878", VA = "0xFE2878")]
		public void UpdateMesh()
		{
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0xFE3878", Offset = "0xFE3878", VA = "0xFE3878")]
		public Card()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class CardRing : MonoBehaviour
	{
		[Token(Token = "0x200086F")]
		public enum State
		{
			[Token(Token = "0x4002E6F")]
			Ready,
			[Token(Token = "0x4002E70")]
			Animating
		}

		[Serializable]
		[Token(Token = "0x2000870")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB738E4", Offset = "0xB738E4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Card, GameObject> <>9__13_0;

			[Token(Token = "0x4002E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Card, int> <>9__13_1;

			[Token(Token = "0x4002E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Card, int> <>9__16_0;

			[Token(Token = "0x4002E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<int, bool> <>9__16_1;

			[Token(Token = "0x4002E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<Card, int> <>9__16_2;

			[Token(Token = "0x4002E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<Card, GameObject> <>9__18_0;

			[Token(Token = "0x4002E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Action <>9__26_1;

			[Token(Token = "0x4002E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Action <>9__31_0;

			[Token(Token = "0x4002E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Action <>9__31_1;

			[Token(Token = "0x4002E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Action <>9__34_0;

			[Token(Token = "0x60033D5")]
			[Address(RVA = "0xFE5F58", Offset = "0xFE5F58", VA = "0xFE5F58")]
			public <>c()
			{
			}

			[Token(Token = "0x60033D6")]
			[Address(RVA = "0xFE5F60", Offset = "0xFE5F60", VA = "0xFE5F60")]
			internal GameObject <CardRingContain>b__13_0(Card x)
			{
				return null;
			}

			[Token(Token = "0x60033D7")]
			[Address(RVA = "0xFE5F80", Offset = "0xFE5F80", VA = "0xFE5F80")]
			internal int <CardRingContain>b__13_1(Card x)
			{
				return default(int);
			}

			[Token(Token = "0x60033D8")]
			[Address(RVA = "0xFE5F9C", Offset = "0xFE5F9C", VA = "0xFE5F9C")]
			internal int <GetRingCardHashes>b__16_0(Card x)
			{
				return default(int);
			}

			[Token(Token = "0x60033D9")]
			[Address(RVA = "0xFE5FB8", Offset = "0xFE5FB8", VA = "0xFE5FB8")]
			internal bool <GetRingCardHashes>b__16_1(int y)
			{
				return default(bool);
			}

			[Token(Token = "0x60033DA")]
			[Address(RVA = "0xFE5FC4", Offset = "0xFE5FC4", VA = "0xFE5FC4")]
			internal int <GetRingCardHashes>b__16_2(Card x)
			{
				return default(int);
			}

			[Token(Token = "0x60033DB")]
			[Address(RVA = "0xFE5FE0", Offset = "0xFE5FE0", VA = "0xFE5FE0")]
			internal GameObject <ResetAll>b__18_0(Card x)
			{
				return null;
			}

			[Token(Token = "0x60033DC")]
			[Address(RVA = "0xFE6000", Offset = "0xFE6000", VA = "0xFE6000")]
			internal void <TurnSpecificCardsAtOnce>b__26_1()
			{
			}

			[Token(Token = "0x60033DD")]
			[Address(RVA = "0xFE6004", Offset = "0xFE6004", VA = "0xFE6004")]
			internal void <ShowCardsOneByOne_Coroutine>b__31_0()
			{
			}

			[Token(Token = "0x60033DE")]
			[Address(RVA = "0xFE6008", Offset = "0xFE6008", VA = "0xFE6008")]
			internal void <ShowCardsOneByOne_Coroutine>b__31_1()
			{
			}

			[Token(Token = "0x60033DF")]
			[Address(RVA = "0xFE600C", Offset = "0xFE600C", VA = "0xFE600C")]
			internal void <DestroyRing_Coroutine>b__34_0()
			{
			}
		}

		[Token(Token = "0x2000871")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB738F4", Offset = "0xB738F4")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4002E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Card card;

			[Token(Token = "0x60033E0")]
			[Address(RVA = "0xFE40B4", Offset = "0xFE40B4", VA = "0xFE40B4")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x60033E1")]
			[Address(RVA = "0xFE6010", Offset = "0xFE6010", VA = "0xFE6010")]
			internal bool <GetIndexOfRingCard>b__0(Card x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000872")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73904", Offset = "0xB73904")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4002E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action callBack;

			[Token(Token = "0x60033E2")]
			[Address(RVA = "0xFE4D3C", Offset = "0xFE4D3C", VA = "0xFE4D3C")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60033E3")]
			[Address(RVA = "0xFE608C", Offset = "0xFE608C", VA = "0xFE608C")]
			internal void <MoveCenterCardToTargetCard>b__0()
			{
			}
		}

		[Token(Token = "0x2000873")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73914", Offset = "0xB73914")]
		private sealed class <MoveCenterCardToTargetCard_Coroutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Card targetCard;

			[Token(Token = "0x4002E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callBack;

			[Token(Token = "0x4002E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CardRing <>4__this;

			[Token(Token = "0x4002E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float time;

			[Token(Token = "0x4002E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <timer>5__2;

			[Token(Token = "0x170005CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033E7")]
				[Address(RVA = "0xFE73E0", Offset = "0xFE73E0", VA = "0xFE73E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033E9")]
				[Address(RVA = "0xFE744C", Offset = "0xFE744C", VA = "0xFE744C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033E4")]
			[Address(RVA = "0xFE4DDC", Offset = "0xFE4DDC", VA = "0xFE4DDC")]
			[DebuggerHidden]
			public <MoveCenterCardToTargetCard_Coroutine>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60033E5")]
			[Address(RVA = "0xFE7208", Offset = "0xFE7208", VA = "0xFE7208", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033E6")]
			[Address(RVA = "0xFE720C", Offset = "0xFE720C", VA = "0xFE720C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033E8")]
			[Address(RVA = "0xFE73E8", Offset = "0xFE73E8", VA = "0xFE73E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000874")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73924", Offset = "0xB73924")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4002E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action callBack;

			[Token(Token = "0x60033EA")]
			[Address(RVA = "0xFE526C", Offset = "0xFE526C", VA = "0xFE526C")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x60033EB")]
			[Address(RVA = "0xFE60C4", Offset = "0xFE60C4", VA = "0xFE60C4")]
			internal void <TurnAllCardsAtOnce>b__0()
			{
			}
		}

		[Token(Token = "0x2000875")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73934", Offset = "0xB73934")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4002E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action callBack;

			[Token(Token = "0x4002E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action <>9__0;

			[Token(Token = "0x60033EC")]
			[Address(RVA = "0xFE5674", Offset = "0xFE5674", VA = "0xFE5674")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x60033ED")]
			[Address(RVA = "0xFE60E0", Offset = "0xFE60E0", VA = "0xFE60E0")]
			internal void <TurnSpecificCardsAtOnce>b__0()
			{
			}
		}

		[Token(Token = "0x2000876")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73944", Offset = "0xB73944")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4002E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action callBack;

			[Token(Token = "0x60033EE")]
			[Address(RVA = "0xFE5A7C", Offset = "0xFE5A7C", VA = "0xFE5A7C")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x60033EF")]
			[Address(RVA = "0xFE6118", Offset = "0xFE6118", VA = "0xFE6118")]
			internal void <ShowCardsOneByOne>b__0()
			{
			}
		}

		[Token(Token = "0x2000877")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73954", Offset = "0xB73954")]
		private sealed class <TurnCard_Coroutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Card card;

			[Token(Token = "0x4002E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callBack;

			[Token(Token = "0x4002E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool hide;

			[Token(Token = "0x4002E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float totalTime;

			[Token(Token = "0x4002E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CardRing <>4__this;

			[Token(Token = "0x4002E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <timer>5__2;

			[Token(Token = "0x170005D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033F3")]
				[Address(RVA = "0xFE7D30", Offset = "0xFE7D30", VA = "0xFE7D30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033F5")]
				[Address(RVA = "0xFE7D9C", Offset = "0xFE7D9C", VA = "0xFE7D9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033F0")]
			[Address(RVA = "0xFE5B38", Offset = "0xFE5B38", VA = "0xFE5B38")]
			[DebuggerHidden]
			public <TurnCard_Coroutine>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60033F1")]
			[Address(RVA = "0xFE7B60", Offset = "0xFE7B60", VA = "0xFE7B60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033F2")]
			[Address(RVA = "0xFE7B64", Offset = "0xFE7B64", VA = "0xFE7B64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033F4")]
			[Address(RVA = "0xFE7D38", Offset = "0xFE7D38", VA = "0xFE7D38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73964", Offset = "0xB73964")]
		private sealed class <DestroyCard_Coroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Card card;

			[Token(Token = "0x4002E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callBack;

			[Token(Token = "0x4002E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float totalTime;

			[Token(Token = "0x4002E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timer>5__2;

			[Token(Token = "0x170005D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033F9")]
				[Address(RVA = "0xFE6CE0", Offset = "0xFE6CE0", VA = "0xFE6CE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033FB")]
				[Address(RVA = "0xFE6D4C", Offset = "0xFE6D4C", VA = "0xFE6D4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033F6")]
			[Address(RVA = "0xFE5BF4", Offset = "0xFE5BF4", VA = "0xFE5BF4")]
			[DebuggerHidden]
			public <DestroyCard_Coroutine>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60033F7")]
			[Address(RVA = "0xFE6B34", Offset = "0xFE6B34", VA = "0xFE6B34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033F8")]
			[Address(RVA = "0xFE6B38", Offset = "0xFE6B38", VA = "0xFE6B38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033FA")]
			[Address(RVA = "0xFE6CE8", Offset = "0xFE6CE8", VA = "0xFE6CE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000879")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73974", Offset = "0xB73974")]
		private sealed class <ShowCardsOneByOne_Coroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CardRing <>4__this;

			[Token(Token = "0x4002E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool randomize;

			[Token(Token = "0x4002E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float timeBetweenCards;

			[Token(Token = "0x4002E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeToTurn;

			[Token(Token = "0x4002E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float timePerCard;

			[Token(Token = "0x4002E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action callBack;

			[Token(Token = "0x4002E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<Card> <cards>5__2;

			[Token(Token = "0x4002EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__3;

			[Token(Token = "0x170005D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033FF")]
				[Address(RVA = "0xFE7AEC", Offset = "0xFE7AEC", VA = "0xFE7AEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003401")]
				[Address(RVA = "0xFE7B58", Offset = "0xFE7B58", VA = "0xFE7B58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033FC")]
			[Address(RVA = "0xFE5C20", Offset = "0xFE5C20", VA = "0xFE5C20")]
			[DebuggerHidden]
			public <ShowCardsOneByOne_Coroutine>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x60033FD")]
			[Address(RVA = "0xFE7454", Offset = "0xFE7454", VA = "0xFE7454", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033FE")]
			[Address(RVA = "0xFE7458", Offset = "0xFE7458", VA = "0xFE7458", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003400")]
			[Address(RVA = "0xFE7AF4", Offset = "0xFE7AF4", VA = "0xFE7AF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200087A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73984", Offset = "0xB73984")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4002EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int totalCardCount;

			[Token(Token = "0x4002EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int whiteCardCount;

			[Token(Token = "0x4002EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action callBack;

			[Token(Token = "0x4002EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action <>9__1;

			[Token(Token = "0x6003402")]
			[Address(RVA = "0xFE5D24", Offset = "0xFE5D24", VA = "0xFE5D24")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6003403")]
			[Address(RVA = "0xFE6150", Offset = "0xFE6150", VA = "0xFE6150")]
			internal void <BuildRing>b__0()
			{
			}

			[Token(Token = "0x6003404")]
			[Address(RVA = "0xFE621C", Offset = "0xFE621C", VA = "0xFE621C")]
			internal void <BuildRing>b__1()
			{
			}
		}

		[Token(Token = "0x200087B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73994", Offset = "0xB73994")]
		private sealed class <DestroyRing_Coroutine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CardRing <>4__this;

			[Token(Token = "0x4002EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callBack;

			[Token(Token = "0x4002EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <count>5__2;

			[Token(Token = "0x4002EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <extraTime>5__3;

			[Token(Token = "0x170005D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003408")]
				[Address(RVA = "0xFE7194", Offset = "0xFE7194", VA = "0xFE7194", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600340A")]
				[Address(RVA = "0xFE7200", Offset = "0xFE7200", VA = "0xFE7200", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003405")]
			[Address(RVA = "0xFE5DFC", Offset = "0xFE5DFC", VA = "0xFE5DFC")]
			[DebuggerHidden]
			public <DestroyRing_Coroutine>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6003406")]
			[Address(RVA = "0xFE6D54", Offset = "0xFE6D54", VA = "0xFE6D54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003407")]
			[Address(RVA = "0xFE6D58", Offset = "0xFE6D58", VA = "0xFE6D58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003409")]
			[Address(RVA = "0xFE719C", Offset = "0xFE719C", VA = "0xFE719C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200087C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB739A4", Offset = "0xB739A4")]
		private sealed class <BuildRing_Coroutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CardRing <>4__this;

			[Token(Token = "0x4002EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int totalCardCount;

			[Token(Token = "0x4002EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int whiteCardCount;

			[Token(Token = "0x4002EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action callBack;

			[Token(Token = "0x4002EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <step_angle>5__2;

			[Token(Token = "0x4002EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<int> <indexes>5__3;

			[Token(Token = "0x4002EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__4;

			[Token(Token = "0x170005D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600340E")]
				[Address(RVA = "0xFE6AC0", Offset = "0xFE6AC0", VA = "0xFE6AC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003410")]
				[Address(RVA = "0xFE6B2C", Offset = "0xFE6B2C", VA = "0xFE6B2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600340B")]
			[Address(RVA = "0xFE5EC0", Offset = "0xFE5EC0", VA = "0xFE5EC0")]
			[DebuggerHidden]
			public <BuildRing_Coroutine>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x600340C")]
			[Address(RVA = "0xFE6254", Offset = "0xFE6254", VA = "0xFE6254", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600340D")]
			[Address(RVA = "0xFE6258", Offset = "0xFE6258", VA = "0xFE6258", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600340F")]
			[Address(RVA = "0xFE6AC8", Offset = "0xFE6AC8", VA = "0xFE6AC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SetController _setController;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _robotHand;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _radius;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _cardPrefab;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Card _centerCard;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<Card> _cardRing;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public State _state;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CardRing _instance;

		[Token(Token = "0x170003E4")]
		public static List<Card> Cards
		{
			[Token(Token = "0x6002467")]
			[Address(RVA = "0xFE3E74", Offset = "0xFE3E74", VA = "0xFE3E74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0xFE3E94", Offset = "0xFE3E94", VA = "0xFE3E94")]
		private static CardRing GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0xFE3F80", Offset = "0xFE3F80", VA = "0xFE3F80")]
		public static bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0xFE2480", Offset = "0xFE2480", VA = "0xFE2480")]
		public static bool CardRingContain(Card card)
		{
			return default(bool);
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0xFE1E38", Offset = "0xFE1E38", VA = "0xFE1E38")]
		public static int GetCenterCardHash()
		{
			return default(int);
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0xFE3FA8", Offset = "0xFE3FA8", VA = "0xFE3FA8")]
		public static int GetIndexOfRingCard(Card card)
		{
			return default(int);
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0xFE40BC", Offset = "0xFE40BC", VA = "0xFE40BC")]
		public static List<int> GetRingCardHashes(bool excludeWhites = true)
		{
			return null;
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0xFE4360", Offset = "0xFE4360", VA = "0xFE4360")]
		public static void SetRingHashes(List<int> hashes)
		{
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0xFE44E4", Offset = "0xFE44E4", VA = "0xFE44E4")]
		public static void ResetAll()
		{
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0xFE4848", Offset = "0xFE4848", VA = "0xFE4848")]
		public static void DestroyCenterCard()
		{
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0xFE4918", Offset = "0xFE4918", VA = "0xFE4918")]
		public static void AddCenterCard(int hash, Action callBack)
		{
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0xFE4BF0", Offset = "0xFE4BF0", VA = "0xFE4BF0")]
		public static void MoveCenterCardToTargetCard(Card targetCard, float totalTime, Action callBack)
		{
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0xFE4D44", Offset = "0xFE4D44", VA = "0xFE4D44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8CB24", Offset = "0xB8CB24")]
		private IEnumerator MoveCenterCardToTargetCard_Coroutine(Card targetCard, float time, Action callBack)
		{
			return null;
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0xFE4E08", Offset = "0xFE4E08", VA = "0xFE4E08")]
		public static void ShuffleRingCardHashes()
		{
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0xFE4F98", Offset = "0xFE4F98", VA = "0xFE4F98")]
		private void RotateCard(Card card, float hidden)
		{
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0xFE5138", Offset = "0xFE5138", VA = "0xFE5138")]
		public static void TurnAllCardsAtOnce(float totalTime, bool hide, Action callBack)
		{
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0xFE5274", Offset = "0xFE5274", VA = "0xFE5274")]
		public static void TurnSpecificCardsAtOnce(List<int> indexes, float totalTime, bool hide, Action callBack)
		{
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0xFE5728", Offset = "0xFE5728", VA = "0xFE5728")]
		public static void ShowReports(List<int> cardIndexes, bool show, bool valid = true)
		{
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0xFE592C", Offset = "0xFE592C", VA = "0xFE592C")]
		public static void ShowCardsOneByOne(float timePerCard, float timeToTurn, float timeBetweenCards, bool randomize, Action callBack)
		{
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0xFE567C", Offset = "0xFE567C", VA = "0xFE567C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8CB88", Offset = "0xB8CB88")]
		private IEnumerator TurnCard_Coroutine(Card card, bool hide, float totalTime, Action callBack)
		{
			return null;
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0xFE5B64", Offset = "0xFE5B64", VA = "0xFE5B64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8CBEC", Offset = "0xB8CBEC")]
		private IEnumerator DestroyCard_Coroutine(Card card, float totalTime, Action callBack)
		{
			return null;
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0xFE5A84", Offset = "0xFE5A84", VA = "0xFE5A84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8CC50", Offset = "0xB8CC50")]
		private IEnumerator ShowCardsOneByOne_Coroutine(float timePerCard, float timeToTurn, float timeBetweenCards, bool randomize, Action callBack)
		{
			return null;
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0xFE5C4C", Offset = "0xFE5C4C", VA = "0xFE5C4C")]
		public static void BuildRing(int totalCardCount, int whiteCardCount, Action callBack)
		{
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0xFE5D2C", Offset = "0xFE5D2C", VA = "0xFE5D2C")]
		public static void DestroyRing(Action callback)
		{
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0xFE5D7C", Offset = "0xFE5D7C", VA = "0xFE5D7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8CCB4", Offset = "0xB8CCB4")]
		private IEnumerator DestroyRing_Coroutine(Action callBack)
		{
			return null;
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0xFE5E28", Offset = "0xFE5E28", VA = "0xFE5E28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8CD18", Offset = "0xB8CD18")]
		private IEnumerator BuildRing_Coroutine(int totalCardCount, int whiteCardCount, Action callBack)
		{
			return null;
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0xFE5EEC", Offset = "0xFE5EEC", VA = "0xFE5EEC")]
		public CardRing()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	public class GameManager : MonoBehaviour
	{
		[Token(Token = "0x200087D")]
		public enum GameSteps
		{
			[Token(Token = "0x4002EB5")]
			BuildNewRing,
			[Token(Token = "0x4002EB6")]
			ShowRing,
			[Token(Token = "0x4002EB7")]
			Play_Input,
			[Token(Token = "0x4002EB8")]
			Play_Animation
		}

		[Token(Token = "0x200087E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB739B4", Offset = "0xB739B4")]
		private sealed class <Prepare_ShowAvailableCards_Coroutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameManager <>4__this;

			[Token(Token = "0x170005DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003414")]
				[Address(RVA = "0xFEA968", Offset = "0xFEA968", VA = "0xFEA968", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003416")]
				[Address(RVA = "0xFEA9D4", Offset = "0xFEA9D4", VA = "0xFEA9D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003411")]
			[Address(RVA = "0xFE8F8C", Offset = "0xFE8F8C", VA = "0xFE8F8C")]
			[DebuggerHidden]
			public <Prepare_ShowAvailableCards_Coroutine>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6003412")]
			[Address(RVA = "0xFEA808", Offset = "0xFEA808", VA = "0xFEA808", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003413")]
			[Address(RVA = "0xFEA80C", Offset = "0xFEA80C", VA = "0xFEA80C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003415")]
			[Address(RVA = "0xFEA970", Offset = "0xFEA970", VA = "0xFEA970", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200087F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB739C4", Offset = "0xB739C4")]
		private sealed class <Prepare_NewCenterCard_Coroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x170005DC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600341A")]
				[Address(RVA = "0xFEA794", Offset = "0xFEA794", VA = "0xFEA794", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600341C")]
				[Address(RVA = "0xFEA800", Offset = "0xFEA800", VA = "0xFEA800", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003417")]
			[Address(RVA = "0xFE9194", Offset = "0xFE9194", VA = "0xFE9194")]
			[DebuggerHidden]
			public <Prepare_NewCenterCard_Coroutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6003418")]
			[Address(RVA = "0xFEA644", Offset = "0xFEA644", VA = "0xFEA644", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003419")]
			[Address(RVA = "0xFEA648", Offset = "0xFEA648", VA = "0xFEA648", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600341B")]
			[Address(RVA = "0xFEA79C", Offset = "0xFEA79C", VA = "0xFEA79C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB739D4", Offset = "0xB739D4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, bool> <>9__25_0;

			[Token(Token = "0x4002EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__25_1;

			[Token(Token = "0x600341E")]
			[Address(RVA = "0xFEA158", Offset = "0xFEA158", VA = "0xFEA158")]
			public <>c()
			{
			}

			[Token(Token = "0x600341F")]
			[Address(RVA = "0xFEA160", Offset = "0xFEA160", VA = "0xFEA160")]
			internal bool <NewCenterCard>b__25_0(int x)
			{
				return default(bool);
			}

			[Token(Token = "0x6003420")]
			[Address(RVA = "0xFEA168", Offset = "0xFEA168", VA = "0xFEA168")]
			internal void <NewCenterCard>b__25_1()
			{
			}
		}

		[Token(Token = "0x2000881")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB739E4", Offset = "0xB739E4")]
		private sealed class <Prepare_ShowReports_Coroutine>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x170005DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003424")]
				[Address(RVA = "0xFEAAF0", Offset = "0xFEAAF0", VA = "0xFEAAF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003426")]
				[Address(RVA = "0xFEAB5C", Offset = "0xFEAB5C", VA = "0xFEAB5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003421")]
			[Address(RVA = "0xFE97AC", Offset = "0xFE97AC", VA = "0xFE97AC")]
			[DebuggerHidden]
			public <Prepare_ShowReports_Coroutine>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6003422")]
			[Address(RVA = "0xFEA9DC", Offset = "0xFEA9DC", VA = "0xFEA9DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003423")]
			[Address(RVA = "0xFEA9E0", Offset = "0xFEA9E0", VA = "0xFEA9E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003425")]
			[Address(RVA = "0xFEAAF8", Offset = "0xFEAAF8", VA = "0xFEAAF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000882")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB739F4", Offset = "0xB739F4")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4002EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> ringHashes;

			[Token(Token = "0x4002EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<int> successIndexes;

			[Token(Token = "0x4002EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<int> failureIndexes;

			[Token(Token = "0x4002EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameManager <>4__this;

			[Token(Token = "0x4002ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<int> displayHashes;

			[Token(Token = "0x4002ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<int> successHashes;

			[Token(Token = "0x4002ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action <>9__5;

			[Token(Token = "0x4002ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action <>9__4;

			[Token(Token = "0x4002ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Action <>9__3;

			[Token(Token = "0x6003427")]
			[Address(RVA = "0xFE9D24", Offset = "0xFE9D24", VA = "0xFE9D24")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6003428")]
			[Address(RVA = "0xFEA18C", Offset = "0xFEA18C", VA = "0xFEA18C")]
			internal void <ShowReports>b__0()
			{
			}

			[Token(Token = "0x6003429")]
			[Address(RVA = "0xFEA23C", Offset = "0xFEA23C", VA = "0xFEA23C")]
			internal void <ShowReports>b__3()
			{
			}

			[Token(Token = "0x600342A")]
			[Address(RVA = "0xFEA3CC", Offset = "0xFEA3CC", VA = "0xFEA3CC")]
			internal void <ShowReports>b__4()
			{
			}

			[Token(Token = "0x600342B")]
			[Address(RVA = "0xFEA480", Offset = "0xFEA480", VA = "0xFEA480")]
			internal void <ShowReports>b__5()
			{
			}
		}

		[Token(Token = "0x2000883")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73A04", Offset = "0xB73A04")]
		private sealed class <>c__DisplayClass29_1
		{
			[Token(Token = "0x4002ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4002ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass29_0 CS$<>8__locals1;

			[Token(Token = "0x600342C")]
			[Address(RVA = "0xFE9F24", Offset = "0xFE9F24", VA = "0xFE9F24")]
			public <>c__DisplayClass29_1()
			{
			}

			[Token(Token = "0x600342D")]
			[Address(RVA = "0xFEA4B0", Offset = "0xFEA4B0", VA = "0xFEA4B0")]
			internal bool <ShowReports>b__1(int x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73A14", Offset = "0xB73A14")]
		private sealed class <>c__DisplayClass29_2
		{
			[Token(Token = "0x4002ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4002ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass29_0 CS$<>8__locals2;

			[Token(Token = "0x600342E")]
			[Address(RVA = "0xFE9F2C", Offset = "0xFE9F2C", VA = "0xFE9F2C")]
			public <>c__DisplayClass29_2()
			{
			}

			[Token(Token = "0x600342F")]
			[Address(RVA = "0xFEA568", Offset = "0xFEA568", VA = "0xFEA568")]
			internal bool <ShowReports>b__2(int x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000885")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73A24", Offset = "0xB73A24")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4002ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action callBack;

			[Token(Token = "0x6003430")]
			[Address(RVA = "0xFEA620", Offset = "0xFEA620", VA = "0xFEA620")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6003431")]
			[Address(RVA = "0xFEA628", Offset = "0xFEA628", VA = "0xFEA628")]
			internal void <ShowReports_Coroutine>b__0()
			{
			}
		}

		[Token(Token = "0x2000886")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73A34", Offset = "0xB73A34")]
		private sealed class <ShowReports_Coroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action callBack;

			[Token(Token = "0x4002ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<int> indexes;

			[Token(Token = "0x4002ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool valid;

			[Token(Token = "0x4002ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameManager <>4__this;

			[Token(Token = "0x4002EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass30_0 <>8__1;

			[Token(Token = "0x170005E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003435")]
				[Address(RVA = "0xFEAE04", Offset = "0xFEAE04", VA = "0xFEAE04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003437")]
				[Address(RVA = "0xFEAE70", Offset = "0xFEAE70", VA = "0xFEAE70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003432")]
			[Address(RVA = "0xFE9FD0", Offset = "0xFE9FD0", VA = "0xFE9FD0")]
			[DebuggerHidden]
			public <ShowReports_Coroutine>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6003433")]
			[Address(RVA = "0xFEAB64", Offset = "0xFEAB64", VA = "0xFEAB64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003434")]
			[Address(RVA = "0xFEAB68", Offset = "0xFEAB68", VA = "0xFEAB68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003436")]
			[Address(RVA = "0xFEAE0C", Offset = "0xFEAE0C", VA = "0xFEAE0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public GameController _gameController;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SetController _setController;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MagicDeckConfig _configFile;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<int> _centerCardsToBeSpawned;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<List<int>> _choiceHistory;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameSteps _gamestep;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameManager _instance;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int gameRound;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DateTime startTimeStamp;

		[Token(Token = "0x6002482")]
		[Address(RVA = "0xFE830C", Offset = "0xFE830C", VA = "0xFE830C")]
		public static GameManager GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0xFE83D8", Offset = "0xFE83D8", VA = "0xFE83D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0xFE85AC", Offset = "0xFE85AC", VA = "0xFE85AC")]
		private void InputSystem_TriggerPressed(InputSystem sender, InputType inputType, ControllerType controllerType)
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0xFE867C", Offset = "0xFE867C", VA = "0xFE867C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0xFE86F0", Offset = "0xFE86F0", VA = "0xFE86F0")]
		private void GameController_Loaded(GameController sender)
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0xFE8870", Offset = "0xFE8870", VA = "0xFE8870")]
		private void GameController_WillUnload(GameController sender)
		{
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0xFE88E8", Offset = "0xFE88E8", VA = "0xFE88E8")]
		private void GameController_GameEnd(GameController sender)
		{
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0xFE8A24", Offset = "0xFE8A24", VA = "0xFE8A24")]
		private void GameController_GameStop(GameController sender)
		{
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0xFE8A84", Offset = "0xFE8A84", VA = "0xFE8A84")]
		private void GameController_GameWillStart(GameController sender)
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0xFE8AAC", Offset = "0xFE8AAC", VA = "0xFE8AAC")]
		private void GameController_GameStart(GameController sender, int startLevel, bool isFirstTime)
		{
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0xFE8978", Offset = "0xFE8978", VA = "0xFE8978")]
		public static void ResetAll()
		{
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0xFE8C7C", Offset = "0xFE8C7C", VA = "0xFE8C7C")]
		public void StartNewLevel()
		{
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0xFE8F08", Offset = "0xFE8F08", VA = "0xFE8F08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8CD7C", Offset = "0xB8CD7C")]
		private IEnumerator Prepare_ShowAvailableCards_Coroutine(float delay = 0f)
		{
			return null;
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0xFE8FB8", Offset = "0xFE8FB8", VA = "0xFE8FB8")]
		public void ShowAvailableCards()
		{
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0xFE9120", Offset = "0xFE9120", VA = "0xFE9120")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8CDE0", Offset = "0xB8CDE0")]
		private IEnumerator Prepare_NewCenterCard_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0xFE91C0", Offset = "0xFE91C0", VA = "0xFE91C0")]
		public static void NewCenterCard()
		{
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0xFE85C0", Offset = "0xFE85C0", VA = "0xFE85C0")]
		private void CheckUserInput()
		{
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0xFE93EC", Offset = "0xFE93EC", VA = "0xFE93EC")]
		private void ParseUserInput(Card selectedCard, int index)
		{
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0xFE9738", Offset = "0xFE9738", VA = "0xFE9738")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8CE44", Offset = "0xB8CE44")]
		private IEnumerator Prepare_ShowReports_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0xFE97D8", Offset = "0xFE97D8", VA = "0xFE97D8")]
		private void ShowReports()
		{
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0xFE9F34", Offset = "0xFE9F34", VA = "0xFE9F34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8CEA8", Offset = "0xB8CEA8")]
		private IEnumerator ShowReports_Coroutine(bool valid, List<int> indexes, Action callBack)
		{
			return null;
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0xFE8E7C", Offset = "0xFE8E7C", VA = "0xFE8E7C")]
		private float GetSuccessRate()
		{
			return default(float);
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0xFE9D2C", Offset = "0xFE9D2C", VA = "0xFE9D2C")]
		private void BuildChoiceReport(ref List<int> successIndexes, ref List<int> failureIndexes)
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0xFE9FFC", Offset = "0xFE9FFC", VA = "0xFE9FFC")]
		public GameManager()
		{
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0xFEA004", Offset = "0xFEA004", VA = "0xFEA004")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8CF0C", Offset = "0xB8CF0C")]
		private void <GameController_GameEnd>b__16_0()
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0xFEA020", Offset = "0xFEA020", VA = "0xFEA020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8CF1C", Offset = "0xB8CF1C")]
		private void <StartNewLevel>b__21_0()
		{
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0xFEA050", Offset = "0xFEA050", VA = "0xFEA050")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8CF2C", Offset = "0xB8CF2C")]
		private void <ShowAvailableCards>b__23_0()
		{
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0xFEA07C", Offset = "0xFEA07C", VA = "0xFEA07C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8CF3C", Offset = "0xB8CF3C")]
		private void <ParseUserInput>b__27_0()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public class Utils
	{
		[Token(Token = "0x600249E")]
		public static List<T> Suffle<T>(List<T> list)
		{
			return null;
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0xFEC828", Offset = "0xFEC828", VA = "0xFEC828")]
		public static List<int> GetPseudoRandomIntList(int seed, int count, int minRange, int maxRangeExclude)
		{
			return null;
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0xFE6964", Offset = "0xFE6964", VA = "0xFE6964")]
		public static List<int> GetRandomIntList(int count, int minRange, int maxRangeExclude)
		{
			return null;
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0xFEC9A4", Offset = "0xFEC9A4", VA = "0xFEC9A4")]
		private static bool ParametersAreValid(int count, int minRange, int maxRangeExclude)
		{
			return default(bool);
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0xFEC9D0", Offset = "0xFEC9D0", VA = "0xFEC9D0")]
		public static int PseudoRandomGenerator(int seed, int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0xFECA60", Offset = "0xFECA60", VA = "0xFECA60")]
		public Utils()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class InputReport : MonoBehaviour
	{
		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _valid;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _invalid;

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0xFE2F48", Offset = "0xFE2F48", VA = "0xFE2F48")]
		public void SetState(bool isValid)
		{
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0xFEAE78", Offset = "0xFEAE78", VA = "0xFEAE78")]
		private void Update()
		{
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0xFEB008", Offset = "0xFEB008", VA = "0xFEB008")]
		public InputReport()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public class MagicDeckProgressionManager : ProgressionManager
	{
		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MagicDeckProgressionManager _instance;

		[Token(Token = "0x170003E5")]
		public static MagicDeckProgressionManager Instance
		{
			[Token(Token = "0x60024A7")]
			[Address(RVA = "0xFE87A4", Offset = "0xFE87A4", VA = "0xFE87A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0xFEB294", Offset = "0xFEB294", VA = "0xFEB294")]
		public static int GetLevelLabel()
		{
			return default(int);
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0xFEB2B8", Offset = "0xFEB2B8", VA = "0xFEB2B8")]
		public MagicDeckProgressionManager()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	public class Tutorial : MonoBehaviour
	{
		[Token(Token = "0x2000887")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73A44", Offset = "0xB73A44")]
		private sealed class <WaitUntilRobotStopsSpeaking>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action callback;

			[Token(Token = "0x170005E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600343B")]
				[Address(RVA = "0xFEC7B4", Offset = "0xFEC7B4", VA = "0xFEC7B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600343D")]
				[Address(RVA = "0xFEC820", Offset = "0xFEC820", VA = "0xFEC820", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003438")]
			[Address(RVA = "0xFEB790", Offset = "0xFEB790", VA = "0xFEB790")]
			[DebuggerHidden]
			public <WaitUntilRobotStopsSpeaking>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6003439")]
			[Address(RVA = "0xFEC70C", Offset = "0xFEC70C", VA = "0xFEC70C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600343A")]
			[Address(RVA = "0xFEC710", Offset = "0xFEC710", VA = "0xFEC710", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600343C")]
			[Address(RVA = "0xFEC7BC", Offset = "0xFEC7BC", VA = "0xFEC7BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000888")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73A54", Offset = "0xB73A54")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4002EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action callback;

			[Token(Token = "0x600343E")]
			[Address(RVA = "0xFEC128", Offset = "0xFEC128", VA = "0xFEC128")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x600343F")]
			[Address(RVA = "0xFEC130", Offset = "0xFEC130", VA = "0xFEC130")]
			internal void <ShowAvailableCards_Coroutine>b__0()
			{
			}
		}

		[Token(Token = "0x2000889")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73A64", Offset = "0xB73A64")]
		private sealed class <ShowAvailableCards_Coroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action callback;

			[Token(Token = "0x4002EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Tutorial <>4__this;

			[Token(Token = "0x4002EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass18_0 <>8__1;

			[Token(Token = "0x170005E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003443")]
				[Address(RVA = "0xFEC698", Offset = "0xFEC698", VA = "0xFEC698", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003445")]
				[Address(RVA = "0xFEC704", Offset = "0xFEC704", VA = "0xFEC704", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003440")]
			[Address(RVA = "0xFEBA24", Offset = "0xFEBA24", VA = "0xFEBA24")]
			[DebuggerHidden]
			public <ShowAvailableCards_Coroutine>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6003441")]
			[Address(RVA = "0xFEC4DC", Offset = "0xFEC4DC", VA = "0xFEC4DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003442")]
			[Address(RVA = "0xFEC4E0", Offset = "0xFEC4E0", VA = "0xFEC4E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003444")]
			[Address(RVA = "0xFEC6A0", Offset = "0xFEC6A0", VA = "0xFEC6A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200088A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73A74", Offset = "0xB73A74")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4002EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action callback;

			[Token(Token = "0x6003446")]
			[Address(RVA = "0xFEC14C", Offset = "0xFEC14C", VA = "0xFEC14C")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6003447")]
			[Address(RVA = "0xFEC154", Offset = "0xFEC154", VA = "0xFEC154")]
			internal void <NewCenterCard_Coroutine>b__0()
			{
			}
		}

		[Token(Token = "0x200088B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73A84", Offset = "0xB73A84")]
		private sealed class <NewCenterCard_Coroutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action callback;

			[Token(Token = "0x4002EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Tutorial <>4__this;

			[Token(Token = "0x4002EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass19_0 <>8__1;

			[Token(Token = "0x170005E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600344B")]
				[Address(RVA = "0xFEC468", Offset = "0xFEC468", VA = "0xFEC468", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600344D")]
				[Address(RVA = "0xFEC4D4", Offset = "0xFEC4D4", VA = "0xFEC4D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003448")]
			[Address(RVA = "0xFEBAD0", Offset = "0xFEBAD0", VA = "0xFEBAD0")]
			[DebuggerHidden]
			public <NewCenterCard_Coroutine>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6003449")]
			[Address(RVA = "0xFEC2E0", Offset = "0xFEC2E0", VA = "0xFEC2E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600344A")]
			[Address(RVA = "0xFEC2E4", Offset = "0xFEC2E4", VA = "0xFEC2E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600344C")]
			[Address(RVA = "0xFEC470", Offset = "0xFEC470", VA = "0xFEC470", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200088C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73A94", Offset = "0xB73A94")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__20_0;

			[Token(Token = "0x600344F")]
			[Address(RVA = "0xFEC11C", Offset = "0xFEC11C", VA = "0xFEC11C")]
			public <>c()
			{
			}

			[Token(Token = "0x6003450")]
			[Address(RVA = "0xFEC124", Offset = "0xFEC124", VA = "0xFEC124")]
			internal void <Update>b__20_0()
			{
			}
		}

		[Token(Token = "0x200088D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73AA4", Offset = "0xB73AA4")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4002EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool failure;

			[Token(Token = "0x4002EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Tutorial <>4__this;

			[Token(Token = "0x4002EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action <>9__1;

			[Token(Token = "0x6003451")]
			[Address(RVA = "0xFEBF0C", Offset = "0xFEBF0C", VA = "0xFEBF0C")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6003452")]
			[Address(RVA = "0xFEC170", Offset = "0xFEC170", VA = "0xFEC170")]
			internal void <ParseUserInput>b__0()
			{
			}

			[Token(Token = "0x6003453")]
			[Address(RVA = "0xFEC2AC", Offset = "0xFEC2AC", VA = "0xFEC2AC")]
			internal void <ParseUserInput>b__1()
			{
			}
		}

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController _gameController;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TutorialController tutorialController;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SetController _setController;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<int> _centerCardsToBeSpawned;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isBusy;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int challengeIndex;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool hasFailedPreviousLy;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Tutorial _instance;

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0xFEB320", Offset = "0xFEB320", VA = "0xFEB320")]
		public static Tutorial GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0xFEB3EC", Offset = "0xFEB3EC", VA = "0xFEB3EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0xFEB540", Offset = "0xFEB540", VA = "0xFEB540")]
		private void GameController_TutorialStop(GameController sender)
		{
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0xFE89B8", Offset = "0xFE89B8", VA = "0xFE89B8")]
		public static void ResetAll()
		{
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0xFEB588", Offset = "0xFEB588", VA = "0xFEB588")]
		private void GameController_TutorialPaused(GameController sender, bool paused, SceneStatusType statusType)
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0xFEB5A8", Offset = "0xFEB5A8", VA = "0xFEB5A8")]
		private void GameController_TutorialStart(GameController sender)
		{
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0xFEB6D4", Offset = "0xFEB6D4", VA = "0xFEB6D4")]
		private void TutorialController_OnTutorialEnded(TutorialController sender)
		{
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0xFEB71C", Offset = "0xFEB71C", VA = "0xFEB71C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8CF4C", Offset = "0xB8CF4C")]
		private IEnumerator WaitUntilRobotStopsSpeaking(Action callback)
		{
			return null;
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0xFEB7BC", Offset = "0xFEB7BC", VA = "0xFEB7BC")]
		private void TutorialController_StepInstructionsPlay(TutorialController sender, TutorialStep step, int instructionIndex)
		{
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0xFEB9FC", Offset = "0xFEB9FC", VA = "0xFEB9FC")]
		private void GetRingHashes()
		{
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0xFEB97C", Offset = "0xFEB97C", VA = "0xFEB97C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8CFB0", Offset = "0xB8CFB0")]
		private IEnumerator ShowAvailableCards_Coroutine(Action callback)
		{
			return null;
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0xFEBA50", Offset = "0xFEBA50", VA = "0xFEBA50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D014", Offset = "0xB8D014")]
		private IEnumerator NewCenterCard_Coroutine(Action callback)
		{
			return null;
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0xFEBAFC", Offset = "0xFEBAFC", VA = "0xFEBAFC")]
		private void Update()
		{
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0xFEBC44", Offset = "0xFEBC44", VA = "0xFEBC44")]
		private void InputSystem_TriggerPressed(InputSystem sender, InputType inputType, ControllerType controllerType)
		{
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0xFEBC88", Offset = "0xFEBC88", VA = "0xFEBC88")]
		private void ParseUserInput()
		{
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0xFEBF14", Offset = "0xFEBF14", VA = "0xFEBF14")]
		public Tutorial()
		{
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0xFEBF24", Offset = "0xFEBF24", VA = "0xFEBF24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D078", Offset = "0xB8D078")]
		private void <TutorialController_StepInstructionsPlay>b__16_0()
		{
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0xFEBFA4", Offset = "0xFEBFA4", VA = "0xFEBFA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D088", Offset = "0xB8D088")]
		private void <TutorialController_StepInstructionsPlay>b__16_3()
		{
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0xFEBFCC", Offset = "0xFEBFCC", VA = "0xFEBFCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D098", Offset = "0xB8D098")]
		private void <TutorialController_StepInstructionsPlay>b__16_1()
		{
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0xFEC00C", Offset = "0xFEC00C", VA = "0xFEC00C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D0A8", Offset = "0xB8D0A8")]
		private void <TutorialController_StepInstructionsPlay>b__16_2()
		{
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0xFEC090", Offset = "0xFEC090", VA = "0xFEC090")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D0B8", Offset = "0xB8D0B8")]
		private void <TutorialController_StepInstructionsPlay>b__16_4()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB72294", Offset = "0xB72294")]
	public class MagicDeckConfig : GameConfig
	{
		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80380", Offset = "0xB80380")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB80380", Offset = "0xB80380")]
		public float reportTime;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB803D8", Offset = "0xB803D8")]
		public float showTime;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB803F4", Offset = "0xB803F4")]
		public float turnTime;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB80410", Offset = "0xB80410")]
		public float moveTime;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB8042C", Offset = "0xB8042C")]
		public List<MagicDeckLevelConfig> _levels;

		[Token(Token = "0x170003E6")]
		public override LevelConfig[] Levels
		{
			[Token(Token = "0x60024BF")]
			[Address(RVA = "0xFEB010", Offset = "0xFEB010", VA = "0xFEB010", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0xFEB068", Offset = "0xFEB068", VA = "0xFEB068")]
		protected void OnValidate()
		{
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0xFEB280", Offset = "0xFEB280", VA = "0xFEB280")]
		public MagicDeckConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004CF")]
	public class MagicDeckLevelConfig : LevelConfig
	{
		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int whiteCardCount;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int cardCount;

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0xFEB1EC", Offset = "0xFEB1EC", VA = "0xFEB1EC")]
		public void SetToMinimum()
		{
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0xFEB1E4", Offset = "0xFEB1E4", VA = "0xFEB1E4")]
		public MagicDeckLevelConfig()
		{
		}
	}
}
namespace AttentionLab.MiniGames.Maestro
{
	[Token(Token = "0x20004D0")]
	public class GestureData
	{
		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int hand;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int gesture;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool success;

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0xFDCD98", Offset = "0xFDCD98", VA = "0xFDCD98")]
		public GestureData(int hand, int gesture, bool success)
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public class GestureMaestroMoment : MaestroMoment
	{
		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly int hand;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly int gesture;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly bool success;

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0xFDBEF8", Offset = "0xFDBEF8", VA = "0xFDBEF8")]
		public GestureMaestroMoment(bool rightGesture, bool success)
		{
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0xFDCEE8", Offset = "0xFDCEE8", VA = "0xFDCEE8", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public abstract class MaestroMoment : GameMoment
	{
		[Token(Token = "0x60024C7")]
		public abstract override void SetValues();

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0xFDE0F4", Offset = "0xFDE0F4", VA = "0xFDE0F4")]
		protected int ParseSound(AudioAssets.Maestro sound)
		{
			return default(int);
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0xFDCED8", Offset = "0xFDCED8", VA = "0xFDCED8")]
		protected int ParseGesture(bool right)
		{
			return default(int);
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0xFDCDE4", Offset = "0xFDCDE4", VA = "0xFDCDE4")]
		protected int ParseHand()
		{
			return default(int);
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0xFDCDDC", Offset = "0xFDCDDC", VA = "0xFDCDDC")]
		protected MaestroMoment()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class PatternSpawnedData
	{
		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int level;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int pattern;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int pattern_family;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int sound;

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0xFE1D24", Offset = "0xFE1D24", VA = "0xFE1D24")]
		public PatternSpawnedData(int level, int pattern, int pattern_family, int sound)
		{
		}
	}
	[Token(Token = "0x20004D4")]
	public class PatternSpawnedMaestroMoment : MaestroMoment
	{
		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly int level;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly int patternIndex;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly int patternFamilyIndex;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private readonly int note;

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0xFDC710", Offset = "0xFDC710", VA = "0xFDC710")]
		public PatternSpawnedMaestroMoment(int level, int patternIndex, int patternFamilyIndex, AudioAssets.Maestro note)
		{
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0xFE1D70", Offset = "0xFE1D70", VA = "0xFE1D70", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class GameManager : MonoBehaviour
	{
		[Token(Token = "0x200088E")]
		public enum GameplayState
		{
			[Token(Token = "0x4002EF0")]
			None,
			[Token(Token = "0x4002EF1")]
			FeedbackError,
			[Token(Token = "0x4002EF2")]
			FeedbackSuccess,
			[Token(Token = "0x4002EF3")]
			WaitForInput
		}

		[Token(Token = "0x200088F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73AB4", Offset = "0xB73AB4")]
		private sealed class <RegularPlay>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x4002EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int previousRelativeShapeIndex;

			[Token(Token = "0x4002EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <relativeShapeIndex>5__2;

			[Token(Token = "0x170005E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003457")]
				[Address(RVA = "0xFDCD24", Offset = "0xFDCD24", VA = "0xFDCD24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003459")]
				[Address(RVA = "0xFDCD90", Offset = "0xFDCD90", VA = "0xFDCD90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003454")]
			[Address(RVA = "0xFDBD64", Offset = "0xFDBD64", VA = "0xFDBD64")]
			[DebuggerHidden]
			public <RegularPlay>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6003455")]
			[Address(RVA = "0xFDBF58", Offset = "0xFDBF58", VA = "0xFDBF58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003456")]
			[Address(RVA = "0xFDBF5C", Offset = "0xFDBF5C", VA = "0xFDBF5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003458")]
			[Address(RVA = "0xFDCD2C", Offset = "0xFDCD2C", VA = "0xFDCD2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E50")]
		public const float feedbackTime = 0.8f;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameManager _instance;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80464", Offset = "0xB80464")]
		public MaestroGameConfig gameConfig;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaestroProgressionManager progressionManager;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameController gameController;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB8049C", Offset = "0xB8049C")]
		public MaestroRobot _robot;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB804D4", Offset = "0xB804D4")]
		public float lightTransitionSpeed;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _currentShape;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _lastShape;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _lastLevel;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _levelHash;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private GameplayState _gameplay;

		[Token(Token = "0x170003E7")]
		public static GameManager Instance
		{
			[Token(Token = "0x60024CF")]
			[Address(RVA = "0xFDB14C", Offset = "0xFDB14C", VA = "0xFDB14C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0xFDB218", Offset = "0xFDB218", VA = "0xFDB218")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0xFDB3AC", Offset = "0xFDB3AC", VA = "0xFDB3AC")]
		private void GameController_GameEnd(GameController sender)
		{
		}

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0xFDB3B0", Offset = "0xFDB3B0", VA = "0xFDB3B0")]
		private void GameController_GameStop(GameController sender)
		{
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0xFDB424", Offset = "0xFDB424", VA = "0xFDB424")]
		private void GameController_GameWillStart(GameController sender)
		{
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0xFDB56C", Offset = "0xFDB56C", VA = "0xFDB56C")]
		private void GameController_GameStart(GameController sender, int startLevel, bool isFirstTime)
		{
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0xFDB3B4", Offset = "0xFDB3B4", VA = "0xFDB3B4")]
		private void ResetAll()
		{
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0xFDBA80", Offset = "0xFDBA80", VA = "0xFDBA80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D0C8", Offset = "0xB8D0C8")]
		private IEnumerator RegularPlay(int previousRelativeShapeIndex = -2)
		{
			return null;
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0xFDBD90", Offset = "0xFDBD90", VA = "0xFDBD90")]
		private void CheckHash()
		{
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0xFDBA50", Offset = "0xFDBA50", VA = "0xFDBA50")]
		private void SetNewLevelHash()
		{
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0xFDBDE4", Offset = "0xFDBDE4", VA = "0xFDBDE4")]
		private void Update()
		{
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0xFDBDE8", Offset = "0xFDBDE8", VA = "0xFDBDE8")]
		public void SetToWaitForInput()
		{
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0xFDBE00", Offset = "0xFDBE00", VA = "0xFDBE00")]
		public void SetInput(bool rightGesture)
		{
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0xFDBF50", Offset = "0xFDBF50", VA = "0xFDBF50")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public class MaestroProgressionManager : ProgressionManager
	{
		[Token(Token = "0x60024DD")]
		[Address(RVA = "0xFDE110", Offset = "0xFDE110", VA = "0xFDE110", Slot = "9")]
		protected override void StartPenaltyTimer(float overrideStartClockAngle = 0.75f)
		{
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0xFDE120", Offset = "0xFDE120", VA = "0xFDE120")]
		public MaestroProgressionManager()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class MaestroRobot : MonoBehaviour
	{
		[Token(Token = "0x2000890")]
		public enum Eyes
		{
			[Token(Token = "0x4002EFA")]
			Happy,
			[Token(Token = "0x4002EFB")]
			Angry,
			[Token(Token = "0x4002EFC")]
			Normal
		}

		[Token(Token = "0x2000891")]
		public enum AnimationType
		{
			[Token(Token = "0x4002EFE")]
			WaveHello,
			[Token(Token = "0x4002EFF")]
			PointToMoles,
			[Token(Token = "0x4002F00")]
			IdleTutorial,
			[Token(Token = "0x4002F01")]
			IdleGameplay
		}

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float tutorialRotation;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gameplayRotation;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SkinnedMeshRenderer robotVisor;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform hoverAnchor;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isHovering;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _hoverAmount;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Eyes eyes;

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0xFDBB04", Offset = "0xFDBB04", VA = "0xFDBB04")]
		public void ResetAll()
		{
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0xFDB788", Offset = "0xFDB788", VA = "0xFDB788")]
		public void SetAnimation(AnimationType anim)
		{
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0xFDB87C", Offset = "0xFDB87C", VA = "0xFDB87C")]
		public void SetEyes(Eyes state)
		{
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0xFDB980", Offset = "0xFDB980", VA = "0xFDB980")]
		public void SetSpeed(float t)
		{
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0xFDE188", Offset = "0xFDE188", VA = "0xFDE188")]
		private void Update()
		{
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0xFDE3C4", Offset = "0xFDE3C4", VA = "0xFDE3C4")]
		public MaestroRobot()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class MaestroTutorial : MonoBehaviour
	{
		[Token(Token = "0x2000892")]
		public enum Step
		{
			[Token(Token = "0x4002F03")]
			Welcoming,
			[Token(Token = "0x4002F04")]
			RightGesture,
			[Token(Token = "0x4002F05")]
			Interacting,
			[Token(Token = "0x4002F06")]
			Exposition,
			[Token(Token = "0x4002F07")]
			Example,
			[Token(Token = "0x4002F08")]
			LeftGesture,
			[Token(Token = "0x4002F09")]
			Rules,
			[Token(Token = "0x4002F0A")]
			Conducting,
			[Token(Token = "0x4002F0B")]
			MoreConducting,
			[Token(Token = "0x4002F0C")]
			Goodbye
		}

		[Token(Token = "0x2000893")]
		public enum State
		{
			[Token(Token = "0x4002F0E")]
			None,
			[Token(Token = "0x4002F0F")]
			WaitForInput,
			[Token(Token = "0x4002F10")]
			Diferent,
			[Token(Token = "0x4002F11")]
			Same
		}

		[Token(Token = "0x2000894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73AC4", Offset = "0xB73AC4")]
		private sealed class <RobotSaysHello>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MaestroTutorial <>4__this;

			[Token(Token = "0x170005EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600345D")]
				[Address(RVA = "0xFDF180", Offset = "0xFDF180", VA = "0xFDF180", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600345F")]
				[Address(RVA = "0xFDF1EC", Offset = "0xFDF1EC", VA = "0xFDF1EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600345A")]
			[Address(RVA = "0xFDECB0", Offset = "0xFDECB0", VA = "0xFDECB0")]
			[DebuggerHidden]
			public <RobotSaysHello>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x600345B")]
			[Address(RVA = "0xFDF054", Offset = "0xFDF054", VA = "0xFDF054", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600345C")]
			[Address(RVA = "0xFDF058", Offset = "0xFDF058", VA = "0xFDF058", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600345E")]
			[Address(RVA = "0xFDF188", Offset = "0xFDF188", VA = "0xFDF188", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000895")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73AD4", Offset = "0xB73AD4")]
		private sealed class <RobotPointsToMoles>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MaestroTutorial <>4__this;

			[Token(Token = "0x170005EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003463")]
				[Address(RVA = "0xFDEFE0", Offset = "0xFDEFE0", VA = "0xFDEFE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003465")]
				[Address(RVA = "0xFDF04C", Offset = "0xFDF04C", VA = "0xFDF04C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003460")]
			[Address(RVA = "0xFDECDC", Offset = "0xFDECDC", VA = "0xFDECDC")]
			[DebuggerHidden]
			public <RobotPointsToMoles>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6003461")]
			[Address(RVA = "0xFDEF00", Offset = "0xFDEF00", VA = "0xFDEF00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003462")]
			[Address(RVA = "0xFDEF04", Offset = "0xFDEF04", VA = "0xFDEF04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003464")]
			[Address(RVA = "0xFDEFE8", Offset = "0xFDEFE8", VA = "0xFDEFE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000896")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73AE4", Offset = "0xB73AE4")]
		private sealed class <Step1>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170005EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003469")]
				[Address(RVA = "0xFDF228", Offset = "0xFDF228", VA = "0xFDF228", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600346B")]
				[Address(RVA = "0xFDF294", Offset = "0xFDF294", VA = "0xFDF294", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003466")]
			[Address(RVA = "0xFDED08", Offset = "0xFDED08", VA = "0xFDED08")]
			[DebuggerHidden]
			public <Step1>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6003467")]
			[Address(RVA = "0xFDF1F4", Offset = "0xFDF1F4", VA = "0xFDF1F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003468")]
			[Address(RVA = "0xFDF1F8", Offset = "0xFDF1F8", VA = "0xFDF1F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600346A")]
			[Address(RVA = "0xFDF230", Offset = "0xFDF230", VA = "0xFDF230", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000897")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73AF4", Offset = "0xB73AF4")]
		private sealed class <Step2>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MaestroTutorial <>4__this;

			[Token(Token = "0x4002F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x4002F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <nextMessageTimemark>5__3;

			[Token(Token = "0x170005F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600346F")]
				[Address(RVA = "0xFDF4A8", Offset = "0xFDF4A8", VA = "0xFDF4A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003471")]
				[Address(RVA = "0xFDF514", Offset = "0xFDF514", VA = "0xFDF514", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600346C")]
			[Address(RVA = "0xFDED34", Offset = "0xFDED34", VA = "0xFDED34")]
			[DebuggerHidden]
			public <Step2>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x600346D")]
			[Address(RVA = "0xFDF29C", Offset = "0xFDF29C", VA = "0xFDF29C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600346E")]
			[Address(RVA = "0xFDF2A0", Offset = "0xFDF2A0", VA = "0xFDF2A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003470")]
			[Address(RVA = "0xFDF4B0", Offset = "0xFDF4B0", VA = "0xFDF4B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000898")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73B04", Offset = "0xB73B04")]
		private sealed class <Step3>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MaestroTutorial <>4__this;

			[Token(Token = "0x4002F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <shapeCount>5__2;

			[Token(Token = "0x4002F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <inputCount>5__3;

			[Token(Token = "0x170005F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003475")]
				[Address(RVA = "0xFDF768", Offset = "0xFDF768", VA = "0xFDF768", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003477")]
				[Address(RVA = "0xFDF7D4", Offset = "0xFDF7D4", VA = "0xFDF7D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003472")]
			[Address(RVA = "0xFDED60", Offset = "0xFDED60", VA = "0xFDED60")]
			[DebuggerHidden]
			public <Step3>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6003473")]
			[Address(RVA = "0xFDF51C", Offset = "0xFDF51C", VA = "0xFDF51C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003474")]
			[Address(RVA = "0xFDF520", Offset = "0xFDF520", VA = "0xFDF520", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003476")]
			[Address(RVA = "0xFDF770", Offset = "0xFDF770", VA = "0xFDF770", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000899")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73B14", Offset = "0xB73B14")]
		private sealed class <Step4>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170005F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600347B")]
				[Address(RVA = "0xFDF810", Offset = "0xFDF810", VA = "0xFDF810", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600347D")]
				[Address(RVA = "0xFDF87C", Offset = "0xFDF87C", VA = "0xFDF87C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003478")]
			[Address(RVA = "0xFDED8C", Offset = "0xFDED8C", VA = "0xFDED8C")]
			[DebuggerHidden]
			public <Step4>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6003479")]
			[Address(RVA = "0xFDF7DC", Offset = "0xFDF7DC", VA = "0xFDF7DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600347A")]
			[Address(RVA = "0xFDF7E0", Offset = "0xFDF7E0", VA = "0xFDF7E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600347C")]
			[Address(RVA = "0xFDF818", Offset = "0xFDF818", VA = "0xFDF818", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200089A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73B24", Offset = "0xB73B24")]
		private sealed class <Step5>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MaestroTutorial <>4__this;

			[Token(Token = "0x170005F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003481")]
				[Address(RVA = "0xFDF9C4", Offset = "0xFDF9C4", VA = "0xFDF9C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003483")]
				[Address(RVA = "0xFDFA30", Offset = "0xFDFA30", VA = "0xFDFA30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600347E")]
			[Address(RVA = "0xFDEDB8", Offset = "0xFDEDB8", VA = "0xFDEDB8")]
			[DebuggerHidden]
			public <Step5>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x600347F")]
			[Address(RVA = "0xFDF884", Offset = "0xFDF884", VA = "0xFDF884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003480")]
			[Address(RVA = "0xFDF888", Offset = "0xFDF888", VA = "0xFDF888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003482")]
			[Address(RVA = "0xFDF9CC", Offset = "0xFDF9CC", VA = "0xFDF9CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200089B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73B34", Offset = "0xB73B34")]
		private sealed class <Step6>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MaestroTutorial <>4__this;

			[Token(Token = "0x4002F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x4002F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <nextMessageTimemark>5__3;

			[Token(Token = "0x170005F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003487")]
				[Address(RVA = "0xFDFC30", Offset = "0xFDFC30", VA = "0xFDFC30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003489")]
				[Address(RVA = "0xFDFC9C", Offset = "0xFDFC9C", VA = "0xFDFC9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003484")]
			[Address(RVA = "0xFDEDE4", Offset = "0xFDEDE4", VA = "0xFDEDE4")]
			[DebuggerHidden]
			public <Step6>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6003485")]
			[Address(RVA = "0xFDFA38", Offset = "0xFDFA38", VA = "0xFDFA38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003486")]
			[Address(RVA = "0xFDFA3C", Offset = "0xFDFA3C", VA = "0xFDFA3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003488")]
			[Address(RVA = "0xFDFC38", Offset = "0xFDFC38", VA = "0xFDFC38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200089C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73B44", Offset = "0xB73B44")]
		private sealed class <Step7>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MaestroTutorial <>4__this;

			[Token(Token = "0x170005FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600348D")]
				[Address(RVA = "0xFDFD88", Offset = "0xFDFD88", VA = "0xFDFD88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600348F")]
				[Address(RVA = "0xFDFDF4", Offset = "0xFDFDF4", VA = "0xFDFDF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600348A")]
			[Address(RVA = "0xFDEE10", Offset = "0xFDEE10", VA = "0xFDEE10")]
			[DebuggerHidden]
			public <Step7>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x600348B")]
			[Address(RVA = "0xFDFCA4", Offset = "0xFDFCA4", VA = "0xFDFCA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600348C")]
			[Address(RVA = "0xFDFCA8", Offset = "0xFDFCA8", VA = "0xFDFCA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600348E")]
			[Address(RVA = "0xFDFD90", Offset = "0xFDFD90", VA = "0xFDFD90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200089D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73B54", Offset = "0xB73B54")]
		private sealed class <Step8>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MaestroTutorial <>4__this;

			[Token(Token = "0x4002F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <inputCount>5__2;

			[Token(Token = "0x4002F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <lastShapeIndex>5__3;

			[Token(Token = "0x4002F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentShapeIndex>5__4;

			[Token(Token = "0x4002F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool <triggeredErrorMessageSame>5__5;

			[Token(Token = "0x4002F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			private bool <triggeredErrorMessageDifferent>5__6;

			[Token(Token = "0x170005FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003493")]
				[Address(RVA = "0xFE01D0", Offset = "0xFE01D0", VA = "0xFE01D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003495")]
				[Address(RVA = "0xFE023C", Offset = "0xFE023C", VA = "0xFE023C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003490")]
			[Address(RVA = "0xFDEE3C", Offset = "0xFDEE3C", VA = "0xFDEE3C")]
			[DebuggerHidden]
			public <Step8>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6003491")]
			[Address(RVA = "0xFDFDFC", Offset = "0xFDFDFC", VA = "0xFDFDFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003492")]
			[Address(RVA = "0xFDFE00", Offset = "0xFDFE00", VA = "0xFDFE00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003494")]
			[Address(RVA = "0xFE01D8", Offset = "0xFE01D8", VA = "0xFE01D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200089E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73B64", Offset = "0xB73B64")]
		private sealed class <Step9>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MaestroTutorial <>4__this;

			[Token(Token = "0x4002F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <inputCount>5__2;

			[Token(Token = "0x4002F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <lastShapeIndex>5__3;

			[Token(Token = "0x4002F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentShapeIndex>5__4;

			[Token(Token = "0x4002F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool <triggeredErrorMessageSame>5__5;

			[Token(Token = "0x4002F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			private bool <triggeredErrorMessageDifferent>5__6;

			[Token(Token = "0x170005FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003499")]
				[Address(RVA = "0xFE0628", Offset = "0xFE0628", VA = "0xFE0628", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600349B")]
				[Address(RVA = "0xFE0694", Offset = "0xFE0694", VA = "0xFE0694", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003496")]
			[Address(RVA = "0xFDEE68", Offset = "0xFDEE68", VA = "0xFDEE68")]
			[DebuggerHidden]
			public <Step9>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6003497")]
			[Address(RVA = "0xFE0244", Offset = "0xFE0244", VA = "0xFE0244", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003498")]
			[Address(RVA = "0xFE0248", Offset = "0xFE0248", VA = "0xFE0248", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600349A")]
			[Address(RVA = "0xFE0630", Offset = "0xFE0630", VA = "0xFE0630", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MaestroTutorial _instance;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private State state;

		[Token(Token = "0x4001E66")]
		public const float feedbackTime = 0.8f;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public bool IsPlaying;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Step currentStep;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB8052C", Offset = "0xB8052C")]
		public TutorialController tutorialManager;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SubtitledAudioPlayer _subtitleAudioPlayer;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameController _gameController;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MaestroRobot _robot;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Array2DBool> shapeList;

		[Token(Token = "0x170003E8")]
		public static MaestroTutorial Instance
		{
			[Token(Token = "0x60024E5")]
			[Address(RVA = "0xFDB680", Offset = "0xFDB680", VA = "0xFDB680")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0xFDE3CC", Offset = "0xFDE3CC", VA = "0xFDE3CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0xFDE4C4", Offset = "0xFDE4C4", VA = "0xFDE4C4")]
		private void GameController_TutorialStart(GameController sender)
		{
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0xFDE610", Offset = "0xFDE610", VA = "0xFDE610")]
		private void GameController_TutorialPaused(GameController sender, bool paused, SceneStatusType statusType)
		{
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0xFDE630", Offset = "0xFDE630", VA = "0xFDE630")]
		private void GameController_TutorialStop(GameController sender)
		{
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0xFDE670", Offset = "0xFDE670", VA = "0xFDE670")]
		private void _tutorialManager_OnTutorialEnded(TutorialController sender)
		{
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0xFDE4F8", Offset = "0xFDE4F8", VA = "0xFDE4F8")]
		public void StartTutorial()
		{
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0xFDB74C", Offset = "0xFDB74C", VA = "0xFDB74C")]
		public void ResetAll()
		{
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0xFDE6C0", Offset = "0xFDE6C0", VA = "0xFDE6C0")]
		private void _tutorialManager_OnStepStarted(TutorialController sender, TutorialStep step)
		{
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0xFDE81C", Offset = "0xFDE81C", VA = "0xFDE81C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D12C", Offset = "0xB8D12C")]
		private IEnumerator RobotSaysHello(float delay)
		{
			return null;
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0xFDE914", Offset = "0xFDE914", VA = "0xFDE914")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D190", Offset = "0xB8D190")]
		private IEnumerator RobotPointsToMoles(float delay)
		{
			return null;
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0xFDE7BC", Offset = "0xFDE7BC", VA = "0xFDE7BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D1F4", Offset = "0xB8D1F4")]
		private IEnumerator Step1()
		{
			return null;
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0xFDE8A0", Offset = "0xFDE8A0", VA = "0xFDE8A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D258", Offset = "0xB8D258")]
		private IEnumerator Step2()
		{
			return null;
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0xFDE998", Offset = "0xFDE998", VA = "0xFDE998")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D2BC", Offset = "0xB8D2BC")]
		private IEnumerator Step3()
		{
			return null;
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0xFDEA0C", Offset = "0xFDEA0C", VA = "0xFDEA0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D320", Offset = "0xB8D320")]
		private IEnumerator Step4()
		{
			return null;
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0xFDEA6C", Offset = "0xFDEA6C", VA = "0xFDEA6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D384", Offset = "0xB8D384")]
		private IEnumerator Step5()
		{
			return null;
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0xFDEAE0", Offset = "0xFDEAE0", VA = "0xFDEAE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D3E8", Offset = "0xB8D3E8")]
		private IEnumerator Step6()
		{
			return null;
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0xFDEB54", Offset = "0xFDEB54", VA = "0xFDEB54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D44C", Offset = "0xB8D44C")]
		private IEnumerator Step7()
		{
			return null;
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0xFDEBC8", Offset = "0xFDEBC8", VA = "0xFDEBC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D4B0", Offset = "0xB8D4B0")]
		private IEnumerator Step8()
		{
			return null;
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0xFDEC3C", Offset = "0xFDEC3C", VA = "0xFDEC3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D514", Offset = "0xB8D514")]
		private IEnumerator Step9()
		{
			return null;
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0xFDEE94", Offset = "0xFDEE94", VA = "0xFDEE94")]
		public void SetToWaitForInput()
		{
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0xFDEEAC", Offset = "0xFDEEAC", VA = "0xFDEEAC")]
		public void SetInput(bool different)
		{
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0xFDEEF8", Offset = "0xFDEEF8", VA = "0xFDEEF8")]
		public MaestroTutorial()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class MusicStand : MonoBehaviour
	{
		[Token(Token = "0x200089F")]
		public enum State
		{
			[Token(Token = "0x4002F44")]
			None,
			[Token(Token = "0x4002F45")]
			ToInput,
			[Token(Token = "0x4002F46")]
			Left,
			[Token(Token = "0x4002F47")]
			Right
		}

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MusicStand _instance;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80564", Offset = "0xB80564")]
		public Transform standHead;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform standFeet;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform standHeadAnchor;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SkinnedMeshRenderer mesh;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform leftPoint;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightPoint;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MeshRenderer arrowMesh;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB8059C", Offset = "0xB8059C")]
		public float xOffset;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB805D4", Offset = "0xB805D4")]
		public float minHeightOffset;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxHeightOffset;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB8060C", Offset = "0xB8060C")]
		public float minHeadDistance;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float maxHeadDistance;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80644", Offset = "0xB80644")]
		public float minFeetDistance;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public State state;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool disableLeftLight;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool disableRightLight;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		private bool _isLocked;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		private bool _showArrow;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _relativePos;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material _mat;

		[Token(Token = "0x170003E9")]
		private static MusicStand Instance
		{
			[Token(Token = "0x60024FC")]
			[Address(RVA = "0xFE0CF4", Offset = "0xFE0CF4", VA = "0xFE0CF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0xFE0DC0", Offset = "0xFE0DC0", VA = "0xFE0DC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0xFE0F08", Offset = "0xFE0F08", VA = "0xFE0F08")]
		private void Start()
		{
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0xFE1408", Offset = "0xFE1408", VA = "0xFE1408")]
		private void Update()
		{
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0xFDB350", Offset = "0xFDB350", VA = "0xFDB350")]
		public static void Hide(bool val)
		{
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0xFDBA0C", Offset = "0xFDBA0C", VA = "0xFDBA0C")]
		public static void DisableLights(bool left, bool right)
		{
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0xFDBC18", Offset = "0xFDBC18", VA = "0xFDBC18")]
		public static void Lock()
		{
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0xFDB9EC", Offset = "0xFDB9EC", VA = "0xFDB9EC")]
		public static void Unlock()
		{
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0xFDBC3C", Offset = "0xFDBC3C", VA = "0xFDBC3C")]
		public static void ShowArrow(bool val, bool flipToLeft = false)
		{
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0xFE193C", Offset = "0xFE193C", VA = "0xFE193C")]
		private void RegisterInput()
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0xFE0F10", Offset = "0xFE0F10", VA = "0xFE0F10")]
		private void SelfPosition(bool instant = false)
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0xFE16F0", Offset = "0xFE16F0", VA = "0xFE16F0")]
		private void ManageArrow()
		{
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0xFE14EC", Offset = "0xFE14EC", VA = "0xFE14EC")]
		private float GetRelativePos(Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0xFE1AC0", Offset = "0xFE1AC0", VA = "0xFE1AC0")]
		private State PredictNextState()
		{
			return default(State);
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0xFE1BB4", Offset = "0xFE1BB4", VA = "0xFE1BB4")]
		private void SetLight(bool left, bool right)
		{
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0xFE1D14", Offset = "0xFE1D14", VA = "0xFE1D14")]
		public MusicStand()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB722E8", Offset = "0xB722E8")]
	public class MaestroGameConfig : GameConfig
	{
		[Serializable]
		[Token(Token = "0x20008A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73B74", Offset = "0xB73B74")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ShapeFamily, List<Array2DBool>> <>9__12_0;

			[Token(Token = "0x4002F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<List<Array2DBool>, List<Array2DBool>, List<Array2DBool>> <>9__12_1;

			[Token(Token = "0x600349D")]
			[Address(RVA = "0xFDDF98", Offset = "0xFDDF98", VA = "0xFDDF98")]
			public <>c()
			{
			}

			[Token(Token = "0x600349E")]
			[Address(RVA = "0xFDDFA0", Offset = "0xFDDFA0", VA = "0xFDDFA0")]
			internal List<Array2DBool> <get_ShapeList>b__12_0(ShapeFamily x)
			{
				return null;
			}

			[Token(Token = "0x600349F")]
			[Address(RVA = "0xFDDFBC", Offset = "0xFDDFBC", VA = "0xFDDFBC")]
			internal List<Array2DBool> <get_ShapeList>b__12_1(List<Array2DBool> x, List<Array2DBool> y)
			{
				return null;
			}
		}

		[Token(Token = "0x20008A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73B84", Offset = "0xB73B84")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4002F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x60034A0")]
			[Address(RVA = "0xFDDA50", Offset = "0xFDDA50", VA = "0xFDDA50")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x60034A1")]
			[Address(RVA = "0xFDE03C", Offset = "0xFDE03C", VA = "0xFDE03C")]
			internal void <OnValidate>b__0(MaestroLevelConfig x)
			{
			}
		}

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB8067C", Offset = "0xB8067C")]
		public ShapeFamily familyA;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ShapeFamily familyB;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ShapeFamily familyC;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ShapeFamily familyD;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ShapeFamily familyE;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ShapeFamily familyF;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ShapeFamily familyG;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ShapeFamily familyH;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ShapeFamily familyI;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB806B4", Offset = "0xB806B4")]
		public List<MaestroLevelConfig> _levels;

		[Token(Token = "0x170003EA")]
		private List<ShapeFamily> ShapeFamilies
		{
			[Token(Token = "0x600250C")]
			[Address(RVA = "0xFDD634", Offset = "0xFDD634", VA = "0xFDD634")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EB")]
		private List<Array2DBool> ShapeList
		{
			[Token(Token = "0x600250D")]
			[Address(RVA = "0xFDD748", Offset = "0xFDD748", VA = "0xFDD748")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EC")]
		[HideInInspector]
		public override LevelConfig[] Levels
		{
			[Token(Token = "0x600250E")]
			[Address(RVA = "0xFDD930", Offset = "0xFDD930", VA = "0xFDD930", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0xFDD988", Offset = "0xFDD988", VA = "0xFDD988")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0xFDC978", Offset = "0xFDC978", VA = "0xFDC978")]
		public int GetErrorPoints(int levelIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0xFDCC48", Offset = "0xFDCC48", VA = "0xFDCC48")]
		public int GetSuccessPoints(int levelIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0xFDC400", Offset = "0xFDC400", VA = "0xFDC400")]
		public Array2DBool GetShape(int shapeIndex)
		{
			return null;
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0xFDDA58", Offset = "0xFDDA58", VA = "0xFDDA58")]
		private List<ShapeFamily> GetLevelFamiles(int levelIndex)
		{
			return null;
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0xFDDCC8", Offset = "0xFDDCC8", VA = "0xFDDCC8")]
		private int PseudoRandomGenerator(int hash, int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0xFDDD58", Offset = "0xFDDD58", VA = "0xFDDD58")]
		private int GetRandomShapeIndex(ShapeFamily pseudoRandomFamily, out int relativeShapeIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0xFDC248", Offset = "0xFDC248", VA = "0xFDC248")]
		public int GetConditionalRandomShapeIndex(int levelIndex, int lastShapeIndex, int hash, out int relativeShapeIndex, out int absoluteFamilyIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0xFDDF2C", Offset = "0xFDDF2C", VA = "0xFDDF2C")]
		public MaestroGameConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004DB")]
	public class ShapeFamily
	{
		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Array2DBool shape1;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Array2DBool shape2;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Array2DBool shape3;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Array2DBool shape4;

		[Token(Token = "0x6002518")]
		[Address(RVA = "0xFDDE68", Offset = "0xFDDE68", VA = "0xFDDE68")]
		public List<Array2DBool> GetShapes()
		{
			return null;
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0xFE1E14", Offset = "0xFE1E14", VA = "0xFE1E14")]
		public ShapeFamily()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004DC")]
	public class MaestroLevelConfig : LevelConfig
	{
		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB806FC", Offset = "0xB806FC")]
		public float repeatChance;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB80714", Offset = "0xB80714")]
		public int successCount;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB80730", Offset = "0xB80730")]
		public float errorPointsRatio;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80748", Offset = "0xB80748")]
		public bool familyA;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool familyB;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool familyC;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		public bool familyD;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool familyE;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool familyF;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool familyG;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool familyH;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool familyI;

		[Token(Token = "0x170003ED")]
		[HideInInspector]
		public List<bool> AllowedFamilies
		{
			[Token(Token = "0x600251B")]
			[Address(RVA = "0xFDDBB4", Offset = "0xFDDBB4", VA = "0xFDDBB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0xFDE068", Offset = "0xFDE068", VA = "0xFDE068")]
		public void RefreshName(int i)
		{
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0xFDE0EC", Offset = "0xFDE0EC", VA = "0xFDE0EC")]
		public MaestroLevelConfig()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public class LightManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20008A2")]
		public class LightProfile
		{
			[Token(Token = "0x4002F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color color;

			[Token(Token = "0x4002F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float glowIntensity;

			[Token(Token = "0x4002F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float sideIntensity;

			[Token(Token = "0x4002F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float curtainIntensity;

			[Token(Token = "0x4002F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool pingPongs;

			[Token(Token = "0x60034A2")]
			[Address(RVA = "0xFDD62C", Offset = "0xFDD62C", VA = "0xFDD62C")]
			public LightProfile()
			{
			}
		}

		[Token(Token = "0x20008A3")]
		public enum State
		{
			[Token(Token = "0x4002F52")]
			WaitForInput,
			[Token(Token = "0x4002F53")]
			Wrong,
			[Token(Token = "0x4002F54")]
			Correct
		}

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private State state;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LightManager _instance;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightProfile correctLight;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LightProfile wrongLight;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LightProfile waitForInputLight;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshRenderer curtainLights;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float pingPongSpeed;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _volumetricMaterial;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material _curtainMaterial;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color _stageColor;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _pingPongs;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _glowIntensity;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _sideIntensity;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _curtainIntensity;

		[Token(Token = "0x170003EE")]
		private static LightManager Instance
		{
			[Token(Token = "0x600251D")]
			[Address(RVA = "0xFDCF94", Offset = "0xFDCF94", VA = "0xFDCF94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0xFDD060", Offset = "0xFDD060", VA = "0xFDD060")]
		private void Awake()
		{
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0xFDD220", Offset = "0xFDD220", VA = "0xFDD220")]
		private void Update()
		{
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0xFDD5F8", Offset = "0xFDD5F8", VA = "0xFDD5F8")]
		public static void SetState(State s)
		{
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0xFDD244", Offset = "0xFDD244", VA = "0xFDD244")]
		private void ParseLightProfile()
		{
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0xFDD390", Offset = "0xFDD390", VA = "0xFDD390")]
		private void RefreshLights()
		{
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0xFDD624", Offset = "0xFDD624", VA = "0xFDD624")]
		public LightManager()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public class Mole : MonoBehaviour
	{
		[Token(Token = "0x20008A4")]
		public enum MoleState
		{
			[Token(Token = "0x4002F56")]
			Error,
			[Token(Token = "0x4002F57")]
			Sing,
			[Token(Token = "0x4002F58")]
			Silent,
			[Token(Token = "0x4002F59")]
			Success
		}

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkinnedMeshRenderer mesh;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator anim;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _light;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _smoothedLight;

		[Token(Token = "0x6002524")]
		[Address(RVA = "0xFE069C", Offset = "0xFE069C", VA = "0xFE069C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0xFE0754", Offset = "0xFE0754", VA = "0xFE0754")]
		public void SetState(MoleState state)
		{
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0xFE0870", Offset = "0xFE0870", VA = "0xFE0870")]
		private void Update()
		{
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0xFE0944", Offset = "0xFE0944", VA = "0xFE0944")]
		public Mole()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public class MoleManager : MonoBehaviour
	{
		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MoleManager _instance;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Array2DInt> sheets;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Mole> pixelList;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<List<Mole>> _pixelGrid;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Array2DInt _sheet;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _noteIndex;

		[Token(Token = "0x170003EF")]
		private static MoleManager Instance
		{
			[Token(Token = "0x6002528")]
			[Address(RVA = "0xFE094C", Offset = "0xFE094C", VA = "0xFE094C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0xFE0A18", Offset = "0xFE0A18", VA = "0xFE0A18")]
		private void Awake()
		{
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0xFDBB3C", Offset = "0xFDBB3C", VA = "0xFDBB3C")]
		public static void ClearImage()
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0xFDCA50", Offset = "0xFDCA50", VA = "0xFDCA50")]
		public static void SetSucess()
		{
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0xFDC780", Offset = "0xFDC780", VA = "0xFDC780")]
		public static void SetError()
		{
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0xFDC480", Offset = "0xFDC480", VA = "0xFDC480")]
		public static AudioAssets.Maestro SetShape(Array2DBool shape)
		{
			return default(AudioAssets.Maestro);
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0xFE0BF4", Offset = "0xFE0BF4", VA = "0xFE0BF4")]
		private int GetNextNote()
		{
			return default(int);
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0xFE0AAC", Offset = "0xFE0AAC", VA = "0xFE0AAC")]
		private void ConvertPixelListToPixelGrid()
		{
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0xFE0CEC", Offset = "0xFE0CEC", VA = "0xFE0CEC")]
		public MoleManager()
		{
		}
	}
}
namespace AttentionLab.MiniGames.HideAndSeek
{
	[Token(Token = "0x20004E0")]
	public class HeadRotationData
	{
		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int radial_slice;

		[Token(Token = "0x6002531")]
		[Address(RVA = "0x13BA2D8", Offset = "0x13BA2D8", VA = "0x13BA2D8")]
		public HeadRotationData(int playAreaSlice)
		{
		}
	}
	[Token(Token = "0x20004E1")]
	public class HeadRotationHideAndSeekMoment : HideAndSeekMoment
	{
		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly EPlayAreaSlice _playAreaSlice;

		[Token(Token = "0x6002532")]
		[Address(RVA = "0x13B7E24", Offset = "0x13B7E24", VA = "0x13B7E24")]
		public HeadRotationHideAndSeekMoment(EPlayAreaSlice playAreaSlice)
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0x13BA30C", Offset = "0x13BA30C", VA = "0x13BA30C", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public abstract class HideAndSeekMoment : GameMoment
	{
		[Token(Token = "0x6002534")]
		public abstract override void SetValues();

		[Token(Token = "0x6002535")]
		[Address(RVA = "0x13BA810", Offset = "0x13BA810", VA = "0x13BA810")]
		protected int ParseDistractor(Distractor.DistractorType type, int id)
		{
			return default(int);
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x13BA3B0", Offset = "0x13BA3B0", VA = "0x13BA3B0")]
		protected int ParsePlayAreaSlice(EPlayAreaSlice slice)
		{
			return default(int);
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0x13BA304", Offset = "0x13BA304", VA = "0x13BA304")]
		protected HideAndSeekMoment()
		{
		}
	}
	[Token(Token = "0x20004E3")]
	public class RevealGunOnData
	{
		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB80790", Offset = "0xB80790")]
		public float angle;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool success;

		[Token(Token = "0x6002538")]
		[Address(RVA = "0x13BCBBC", Offset = "0x13BCBBC", VA = "0x13BCBBC")]
		public RevealGunOnData(float gunAngle, bool isSuccess)
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class RevealGunOnHideAndSeekMoment : HideAndSeekMoment
	{
		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly bool _hit;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly float _angle;

		[Token(Token = "0x6002539")]
		[Address(RVA = "0x13B8370", Offset = "0x13B8370", VA = "0x13B8370")]
		public RevealGunOnHideAndSeekMoment(bool hit, float originAngle)
		{
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x13BCBFC", Offset = "0x13BCBFC", VA = "0x13BCBFC", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public class DistractorData
	{
		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB807F4", Offset = "0xB807F4")]
		public float angle;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int distractor;

		[Token(Token = "0x600253B")]
		[Address(RVA = "0x13B5FE8", Offset = "0x13B5FE8", VA = "0x13B5FE8")]
		public DistractorData(float distractorAngle, int distractorId)
		{
		}
	}
	[Token(Token = "0x20004E6")]
	public class RobotSpawnedData
	{
		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int level;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB80858", Offset = "0xB80858")]
		public float angle;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DistractorData[] distractor_angles;

		[Token(Token = "0x600253C")]
		[Address(RVA = "0x13BCCA0", Offset = "0x13BCCA0", VA = "0x13BCCA0")]
		public RobotSpawnedData(int level, float robotAngle, DistractorData[] distractors)
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public class RobotSpawnedHideAndSeekMoment : HideAndSeekMoment
	{
		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly int _level;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly float _originAngle;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly DistractorData[] _distractors;

		[Token(Token = "0x600253D")]
		[Address(RVA = "0x13B783C", Offset = "0x13B783C", VA = "0x13B783C")]
		public RobotSpawnedHideAndSeekMoment(int level, float originAngle, List<Distractor> distractors)
		{
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0x13BCCEC", Offset = "0x13BCCEC", VA = "0x13BCCEC", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class Distractor : MonoBehaviour
	{
		[Token(Token = "0x20008A5")]
		public enum DistractorType
		{
			[Token(Token = "0x4002F5B")]
			Normal,
			[Token(Token = "0x4002F5C")]
			Hard
		}

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB808BC", Offset = "0xB808BC")]
		public DistractorType type;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB808F4", Offset = "0xB808F4")]
		private float <Angle>k__BackingField;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80904", Offset = "0xB80904")]
		private int <Id>k__BackingField;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private AudioAssets.HideAndSeek _sound;

		[Token(Token = "0x170003F0")]
		public float Angle
		{
			[Token(Token = "0x6002540")]
			[Address(RVA = "0x13B58A8", Offset = "0x13B58A8", VA = "0x13B58A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D588", Offset = "0xB8D588")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600253F")]
			[Address(RVA = "0x13B58A0", Offset = "0x13B58A0", VA = "0x13B58A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D578", Offset = "0xB8D578")]
			set
			{
			}
		}

		[Token(Token = "0x170003F1")]
		public int Id
		{
			[Token(Token = "0x6002541")]
			[Address(RVA = "0x13B58B0", Offset = "0x13B58B0", VA = "0x13B58B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D598", Offset = "0xB8D598")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002542")]
			[Address(RVA = "0x13B58B8", Offset = "0x13B58B8", VA = "0x13B58B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D5A8", Offset = "0xB8D5A8")]
			private set
			{
			}
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x13B58C0", Offset = "0x13B58C0", VA = "0x13B58C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0x13B58C4", Offset = "0x13B58C4", VA = "0x13B58C4")]
		private void Init()
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x13B5908", Offset = "0x13B5908", VA = "0x13B5908")]
		private void LoadSound()
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x13B5A58", Offset = "0x13B5A58", VA = "0x13B5A58")]
		private void PlayRandomSound()
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x13B5C50", Offset = "0x13B5C50", VA = "0x13B5C50")]
		private void LookAtPlayer()
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0x13B5E54", Offset = "0x13B5E54", VA = "0x13B5E54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0x13B5F0C", Offset = "0x13B5F0C", VA = "0x13B5F0C")]
		public void Pause(bool value)
		{
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x13B5FE0", Offset = "0x13B5FE0", VA = "0x13B5FE0")]
		public Distractor()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class GazeDetector : MonoBehaviour
	{
		[Token(Token = "0x20008A6")]
		public delegate void OnTargetFound(GazeDetector sender);

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OnTargetFound TargetFound;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB80914", Offset = "0xB80914")]
		[SerializeField]
		private float _gazeTreshold;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SkinnedMeshRenderer _gazeTarget;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 _targetScreenPosition;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector2 _screenSize;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _distanceToScreenCenter;

		[Token(Token = "0x170003F2")]
		public SkinnedMeshRenderer Target
		{
			[Token(Token = "0x600254B")]
			[Address(RVA = "0x13B9CB4", Offset = "0x13B9CB4", VA = "0x13B9CB4")]
			set
			{
			}
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x13B9CBC", Offset = "0x13B9CBC", VA = "0x13B9CBC")]
		private void Update()
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0x13BA288", Offset = "0x13BA288", VA = "0x13BA288")]
		public GazeDetector()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public class HiddingSpot : MonoBehaviour
	{
		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool isValid;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject player;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RaycastHit hit;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int raycastsHit;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color raycastColor;

		[Token(Token = "0x600254E")]
		[Address(RVA = "0x13BA3C8", Offset = "0x13BA3C8", VA = "0x13BA3C8")]
		private void Start()
		{
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0x13BA420", Offset = "0x13BA420", VA = "0x13BA420")]
		public HiddingSpot()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class HiddingSpotsGenerator : MonoBehaviour
	{
		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80978", Offset = "0xB80978")]
		[SerializeField]
		private HiddingSpot _prefab;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _hideAreaEffect;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private List<HiddingSpot> _hiddingSpots;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<HiddingSpot> _availableDistractorHiddingSpots;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HiddingSpot _currentRobotHidingSpot;

		[Token(Token = "0x170003F3")]
		public List<HiddingSpot> HiddingSpots
		{
			[Token(Token = "0x6002550")]
			[Address(RVA = "0x13BA454", Offset = "0x13BA454", VA = "0x13BA454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F4")]
		public GameObject Effect
		{
			[Token(Token = "0x6002551")]
			[Address(RVA = "0x13BA45C", Offset = "0x13BA45C", VA = "0x13BA45C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0x13B9124", Offset = "0x13B9124", VA = "0x13B9124")]
		public void Generate(int count, float distance)
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x13BA5C0", Offset = "0x13BA5C0", VA = "0x13BA5C0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x13BA6B0", Offset = "0x13BA6B0", VA = "0x13BA6B0")]
		public HiddingSpot GetRandomRobotSpot()
		{
			return null;
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0x13B92DC", Offset = "0x13B92DC", VA = "0x13B92DC")]
		public HiddingSpot GetRandomAvailableDistractorSpot()
		{
			return null;
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0x13B9384", Offset = "0x13B9384", VA = "0x13B9384")]
		public void ResetAvailableDistractorSpots()
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0x13BA464", Offset = "0x13BA464", VA = "0x13BA464")]
		private Vector3 GetPositionInCircle(int count, float distance, int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0x13B6940", Offset = "0x13B6940", VA = "0x13B6940")]
		public void ShowHideArea(bool hideAreaVisibile)
		{
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0x13BA748", Offset = "0x13BA748", VA = "0x13BA748")]
		public HiddingSpotsGenerator()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class LightHitFeedback : MonoBehaviour
	{
		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80A1C", Offset = "0xB80A1C")]
		public float lightFadeSpeed;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float timeToLive;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80A54", Offset = "0xB80A54")]
		public Light pointLight;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] lightCircles;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int hitRingIndex;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float timeAlive;

		[Token(Token = "0x600255A")]
		[Address(RVA = "0x13BC8E0", Offset = "0x13BC8E0", VA = "0x13BC8E0")]
		private void Update()
		{
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0x13BCA10", Offset = "0x13BCA10", VA = "0x13BCA10")]
		public void SetHitRing(int ringIndex)
		{
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0x13BCBA0", Offset = "0x13BCBA0", VA = "0x13BCBA0")]
		public LightHitFeedback()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public enum EPlayAreaSlice
	{
		[Token(Token = "0x4001EE0")]
		A,
		[Token(Token = "0x4001EE1")]
		B,
		[Token(Token = "0x4001EE2")]
		C,
		[Token(Token = "0x4001EE3")]
		D,
		[Token(Token = "0x4001EE4")]
		E,
		[Token(Token = "0x4001EE5")]
		F,
		[Token(Token = "0x4001EE6")]
		G,
		[Token(Token = "0x4001EE7")]
		H
	}
	[Token(Token = "0x20004EE")]
	public class GameManager : MonoBehaviour
	{
		[Token(Token = "0x20008A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73B94", Offset = "0xB73B94")]
		private sealed class <StartLevel>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x4002F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int level;

			[Token(Token = "0x17000600")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034AA")]
				[Address(RVA = "0x13B9C40", Offset = "0x13B9C40", VA = "0x13B9C40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000601")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034AC")]
				[Address(RVA = "0x13B9CAC", Offset = "0x13B9CAC", VA = "0x13B9CAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034A7")]
			[Address(RVA = "0x13B8DC0", Offset = "0x13B8DC0", VA = "0x13B8DC0")]
			[DebuggerHidden]
			public <StartLevel>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x60034A8")]
			[Address(RVA = "0x13B9B0C", Offset = "0x13B9B0C", VA = "0x13B9B0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034A9")]
			[Address(RVA = "0x13B9B10", Offset = "0x13B9B10", VA = "0x13B9B10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034AB")]
			[Address(RVA = "0x13B9C48", Offset = "0x13B9C48", VA = "0x13B9C48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73BA4", Offset = "0xB73BA4")]
		private sealed class <RevealAndHideAgain>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x17000602")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034B0")]
				[Address(RVA = "0x13B9A98", Offset = "0x13B9A98", VA = "0x13B9A98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000603")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034B2")]
				[Address(RVA = "0x13B9B04", Offset = "0x13B9B04", VA = "0x13B9B04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034AD")]
			[Address(RVA = "0x13B9490", Offset = "0x13B9490", VA = "0x13B9490")]
			[DebuggerHidden]
			public <RevealAndHideAgain>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x60034AE")]
			[Address(RVA = "0x13B94D4", Offset = "0x13B94D4", VA = "0x13B94D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034AF")]
			[Address(RVA = "0x13B94D8", Offset = "0x13B94D8", VA = "0x13B94D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034B1")]
			[Address(RVA = "0x13B9AA0", Offset = "0x13B9AA0", VA = "0x13B9AA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80A8C", Offset = "0xB80A8C")]
		[SerializeField]
		protected GameController _gameController;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected GameHandControllers _handControllersManager;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Tutorial _tutorialManager;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HideAndSeekProgressionManager _progressionManager;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HideAndSeekRobot robot;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected HiddingSpotsGenerator _hiddingSpotsGenerator;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected Animator _hideArea;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected Transform _robotPosition;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected FoundAnimation[] _robotFoundAnimations;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected FoundAnimation _robotFoundStockAniamtion;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80B58", Offset = "0xB80B58")]
		public GameObject lightHitFeedback;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject missFeedback;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Distractor normalDistractorsPrefab;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Distractor hardDistractorsPrefab;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80B90", Offset = "0xB80B90")]
		[SerializeField]
		private HideAndSeekGameConfig _gameConfig;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _currentLevel;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int _currentNumDistractors;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _currentNumHardDistractors;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Scanner _revealGun;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public bool gameStarted;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[HideInInspector]
		public int finds;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public bool lastWasMiss;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<Distractor> _distractors;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _currentVolume;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int _currentScore;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 _initialPlayerForward;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private EPlayAreaSlice _currentPlayerSlice;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80C0C", Offset = "0xB80C0C")]
		private static GameManager <Instance>k__BackingField;

		[Token(Token = "0x170003F5")]
		public HideAndSeekProgressionManager Progressionmanager
		{
			[Token(Token = "0x600255D")]
			[Address(RVA = "0x13B602C", Offset = "0x13B602C", VA = "0x13B602C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F6")]
		public GameController GameController
		{
			[Token(Token = "0x600255E")]
			[Address(RVA = "0x13B6034", Offset = "0x13B6034", VA = "0x13B6034")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F7")]
		public Tutorial TutorialManager
		{
			[Token(Token = "0x600255F")]
			[Address(RVA = "0x13B603C", Offset = "0x13B603C", VA = "0x13B603C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F8")]
		public HiddingSpotsGenerator HiddingSpotsGenerator
		{
			[Token(Token = "0x6002560")]
			[Address(RVA = "0x13B6044", Offset = "0x13B6044", VA = "0x13B6044")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F9")]
		public List<HiddingSpot> HiddingSpots
		{
			[Token(Token = "0x6002561")]
			[Address(RVA = "0x13B604C", Offset = "0x13B604C", VA = "0x13B604C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FA")]
		public FoundAnimation[] FoundAnimations
		{
			[Token(Token = "0x6002562")]
			[Address(RVA = "0x13B606C", Offset = "0x13B606C", VA = "0x13B606C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FB")]
		public FoundAnimation FoundStockAniamtion
		{
			[Token(Token = "0x6002563")]
			[Address(RVA = "0x13B6074", Offset = "0x13B6074", VA = "0x13B6074")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FC")]
		public HideAndSeekGameConfig Config
		{
			[Token(Token = "0x6002564")]
			[Address(RVA = "0x13B607C", Offset = "0x13B607C", VA = "0x13B607C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FD")]
		public Scanner RevealGun
		{
			[Token(Token = "0x6002565")]
			[Address(RVA = "0x13B6084", Offset = "0x13B6084", VA = "0x13B6084")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FE")]
		public static GameManager Instance
		{
			[Token(Token = "0x6002566")]
			[Address(RVA = "0x13B608C", Offset = "0x13B608C", VA = "0x13B608C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D5B8", Offset = "0xB8D5B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002567")]
			[Address(RVA = "0x13B60DC", Offset = "0x13B60DC", VA = "0x13B60DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D5C8", Offset = "0xB8D5C8")]
			private set
			{
			}
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x13B6130", Offset = "0x13B6130", VA = "0x13B6130")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x13B637C", Offset = "0x13B637C", VA = "0x13B637C")]
		private void GameController_Loaded(GameController sender)
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x13B64D0", Offset = "0x13B64D0", VA = "0x13B64D0")]
		private void GameController_WillUnload(GameController sender)
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x13B65A0", Offset = "0x13B65A0", VA = "0x13B65A0")]
		public void GameController_GameWillStart(GameController sender)
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x13B65FC", Offset = "0x13B65FC", VA = "0x13B65FC")]
		public void GameController_GameStart(GameController sender, int startLevel, bool isFirstTime)
		{
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x13B6A84", Offset = "0x13B6A84", VA = "0x13B6A84")]
		private void GameController_GamePaused(GameController sender, bool paused, SceneStatusType statusType)
		{
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x13B6B7C", Offset = "0x13B6B7C", VA = "0x13B6B7C")]
		public void GameController_GameStop(GameController sender)
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0x13B6F1C", Offset = "0x13B6F1C", VA = "0x13B6F1C")]
		private void HideAndSeekRobot_RobotAppeared(HideAndSeekRobot sender)
		{
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x13B7A30", Offset = "0x13B7A30", VA = "0x13B7A30")]
		private void Start()
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0x13B7B08", Offset = "0x13B7B08", VA = "0x13B7B08")]
		private void Update()
		{
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0x13B6A8C", Offset = "0x13B6A8C", VA = "0x13B6A8C")]
		private void PauseGame(bool paused)
		{
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0x13B66D8", Offset = "0x13B66D8", VA = "0x13B66D8")]
		public void LoadRobotLogic()
		{
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0x13B655C", Offset = "0x13B655C", VA = "0x13B655C")]
		public void UnloadRobotLogic()
		{
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0x13B6790", Offset = "0x13B6790", VA = "0x13B6790")]
		public void SpawnRevealGun()
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0x13B8250", Offset = "0x13B8250", VA = "0x13B8250")]
		public void DestroyRevealGun()
		{
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0x13B826C", Offset = "0x13B826C", VA = "0x13B826C")]
		private void RevealGun_Shot(Scanner sender, bool hit, int multiplier)
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0x13B69AC", Offset = "0x13B69AC", VA = "0x13B69AC")]
		public void StartFirstLevel(int level)
		{
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0x13B8D3C", Offset = "0x13B8D3C", VA = "0x13B8D3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D5D8", Offset = "0xB8D5D8")]
		private IEnumerator StartLevel(int level)
		{
			return null;
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x13B8DEC", Offset = "0x13B8DEC", VA = "0x13B8DEC")]
		public void LoadLevelRules(HideAndSeekLevelConfig levelConfig)
		{
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0x13B83B8", Offset = "0x13B83B8", VA = "0x13B83B8")]
		public void RobotFound(int multiplier)
		{
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x13B84FC", Offset = "0x13B84FC", VA = "0x13B84FC")]
		public void RobotMissed()
		{
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x13B7A64", Offset = "0x13B7A64", VA = "0x13B7A64")]
		public void GenerateHidingSpots()
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x13B7164", Offset = "0x13B7164", VA = "0x13B7164")]
		public void SpawnDistractors()
		{
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0x13B7EFC", Offset = "0x13B7EFC", VA = "0x13B7EFC")]
		private void PauseDistractors(bool value)
		{
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0x13B6BB4", Offset = "0x13B6BB4", VA = "0x13B6BB4")]
		private void StopDistractors()
		{
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0x13B941C", Offset = "0x13B941C", VA = "0x13B941C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D63C", Offset = "0xB8D63C")]
		public IEnumerator RevealAndHideAgain()
		{
			return null;
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0x13B6D94", Offset = "0x13B6D94", VA = "0x13B6D94")]
		public void FinishGame(bool andExit = true)
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0x13B94BC", Offset = "0x13B94BC", VA = "0x13B94BC")]
		private void EndSession()
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0x13B776C", Offset = "0x13B776C", VA = "0x13B776C")]
		public float GetPlayerAngle(Vector3 direction)
		{
			return default(float);
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0x13B7D64", Offset = "0x13B7D64", VA = "0x13B7D64")]
		public EPlayAreaSlice GetAreaSlice(float angle)
		{
			return default(EPlayAreaSlice);
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0x13B94C4", Offset = "0x13B94C4", VA = "0x13B94C4")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	public class HideAndSeekProgressionManager : ProgressionManager
	{
		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80C1C", Offset = "0xB80C1C")]
		[SerializeField]
		private GameManager _gameManager;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80C68", Offset = "0xB80C68")]
		private static HideAndSeekProgressionManager <Instance>k__BackingField;

		[Token(Token = "0x170003FF")]
		public static HideAndSeekProgressionManager Instance
		{
			[Token(Token = "0x6002587")]
			[Address(RVA = "0x13BA84C", Offset = "0x13BA84C", VA = "0x13BA84C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D6A0", Offset = "0xB8D6A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002588")]
			[Address(RVA = "0x13BA89C", Offset = "0x13BA89C", VA = "0x13BA89C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D6B0", Offset = "0xB8D6B0")]
			private set
			{
			}
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x13BA8F0", Offset = "0x13BA8F0", VA = "0x13BA8F0")]
		private new void Awake()
		{
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0x13BA94C", Offset = "0x13BA94C", VA = "0x13BA94C", Slot = "4")]
		public override void Setup(GameConfig gameConfig, int level, bool isFirstTime)
		{
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0x13BAAB0", Offset = "0x13BAAB0", VA = "0x13BAAB0", Slot = "5")]
		protected override void IncrementLevel()
		{
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0x13BABEC", Offset = "0x13BABEC", VA = "0x13BABEC", Slot = "6")]
		protected override void DecrementLevel()
		{
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x13BAD48", Offset = "0x13BAD48", VA = "0x13BAD48")]
		public HideAndSeekProgressionManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F0")]
	public class HideAndSeekLevelConfig : LevelConfig
	{
		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DistractorsNumber;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int HardDistractorsNumber;

		[Token(Token = "0x600258E")]
		[Address(RVA = "0x13BA808", Offset = "0x13BA808", VA = "0x13BA808")]
		public HideAndSeekLevelConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F1")]
	public class FoundAnimation
	{
		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationClip animation;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioAssets.HideAndSeek audio;

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x13B6024", Offset = "0x13B6024", VA = "0x13B6024")]
		public FoundAnimation()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	public class HideAndSeekRobot : MonoBehaviour
	{
		[Token(Token = "0x20008A9")]
		public delegate void OnRobotAppeared(HideAndSeekRobot sender);

		[Token(Token = "0x20008AA")]
		public delegate void OnPositionReached();

		[Token(Token = "0x20008AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73BB4", Offset = "0xB73BB4")]
		private sealed class <GoToPosition>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool? quickTeleport;

			[Token(Token = "0x4002F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HideAndSeekRobot <>4__this;

			[Token(Token = "0x4002F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 targetSpot;

			[Token(Token = "0x4002F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool appearWhenArrive;

			[Token(Token = "0x4002F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public SubtitledAudio soundWhenArrive;

			[Token(Token = "0x17000604")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034BE")]
				[Address(RVA = "0x13BC34C", Offset = "0x13BC34C", VA = "0x13BC34C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000605")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034C0")]
				[Address(RVA = "0x13BC3B8", Offset = "0x13BC3B8", VA = "0x13BC3B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034BB")]
			[Address(RVA = "0x13BAF28", Offset = "0x13BAF28", VA = "0x13BAF28")]
			[DebuggerHidden]
			public <GoToPosition>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60034BC")]
			[Address(RVA = "0x13BC108", Offset = "0x13BC108", VA = "0x13BC108", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034BD")]
			[Address(RVA = "0x13BC10C", Offset = "0x13BC10C", VA = "0x13BC10C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034BF")]
			[Address(RVA = "0x13BC354", Offset = "0x13BC354", VA = "0x13BC354", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73BC4", Offset = "0xB73BC4")]
		private sealed class <Appear>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HideAndSeekRobot <>4__this;

			[Token(Token = "0x4002F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 newPosition;

			[Token(Token = "0x17000606")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034C4")]
				[Address(RVA = "0x13BC094", Offset = "0x13BC094", VA = "0x13BC094", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000607")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034C6")]
				[Address(RVA = "0x13BC100", Offset = "0x13BC100", VA = "0x13BC100", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034C1")]
			[Address(RVA = "0x13BB2A0", Offset = "0x13BB2A0", VA = "0x13BB2A0")]
			[DebuggerHidden]
			public <Appear>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x60034C2")]
			[Address(RVA = "0x13BBF50", Offset = "0x13BBF50", VA = "0x13BBF50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034C3")]
			[Address(RVA = "0x13BBF54", Offset = "0x13BBF54", VA = "0x13BBF54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034C5")]
			[Address(RVA = "0x13BC09C", Offset = "0x13BC09C", VA = "0x13BC09C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73BD4", Offset = "0xB73BD4")]
		private sealed class <Move_Coroutine>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HideAndSeekRobot <>4__this;

			[Token(Token = "0x17000608")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034CA")]
				[Address(RVA = "0x13BC7EC", Offset = "0x13BC7EC", VA = "0x13BC7EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000609")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034CC")]
				[Address(RVA = "0x13BC858", Offset = "0x13BC858", VA = "0x13BC858", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034C7")]
			[Address(RVA = "0x13BBE10", Offset = "0x13BBE10", VA = "0x13BBE10")]
			[DebuggerHidden]
			public <Move_Coroutine>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x60034C8")]
			[Address(RVA = "0x13BC3C0", Offset = "0x13BC3C0", VA = "0x13BC3C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034C9")]
			[Address(RVA = "0x13BC3C4", Offset = "0x13BC3C4", VA = "0x13BC3C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034CB")]
			[Address(RVA = "0x13BC7F4", Offset = "0x13BC7F4", VA = "0x13BC7F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _lastAnimationIndex;

		[Token(Token = "0x4001F0B")]
		private const string ROBOT_FOUND_1 = "Bobot_Found_001";

		[Token(Token = "0x4001F0C")]
		private const string ROBOT_FOUND_2 = "Bobot_Found_002";

		[Token(Token = "0x4001F0D")]
		private const string ROBOT_FOUND_3 = "Bobot_Found_003";

		[Token(Token = "0x4001F0E")]
		private const string ROBOT_FOUND_4 = "Bobot_Found_004";

		[Token(Token = "0x4001F0F")]
		private const string ROBOT_TELEPORT_TO_IDLE = "Bobot_Teleport_to_Idle";

		[Token(Token = "0x4001F10")]
		private const string ROBOT_VANISHING_STOCK = "Bobot_Vanishing_Stock";

		[Token(Token = "0x4001F11")]
		private const string ROBOT_IDLE_TO_TELEPORT_FAST_OUT = "Bobot_Idle_to_Teleport_Fast_Out";

		[Token(Token = "0x4001F12")]
		private const string ROBOT_IDLE_TO_TELEPORT_FAST_IN = "Bobot_Idle_to_Teleport_Fast_In";

		[Token(Token = "0x4001F13")]
		private const string ROBOT_IDLE = "Bobot_Idle";

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnRobotAppeared RobotAppeared;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80C78", Offset = "0xB80C78")]
		[SerializeField]
		private Transform _initialPoint;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _gameplayPoint;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Outline _outline;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SkinnedMeshRenderer _mesh;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80D04", Offset = "0xB80D04")]
		[SerializeField]
		private float _movingSpeed;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _currentSpeed;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _target;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 hidePosition;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public bool teleporting;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		[HideInInspector]
		public bool isHidding;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		[HideInInspector]
		public bool found;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected OnPositionReached _callback;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80D80", Offset = "0xB80D80")]
		private bool <IsDoingAnimation>k__BackingField;

		[Token(Token = "0x17000400")]
		public bool IsDoingAnimation
		{
			[Token(Token = "0x6002591")]
			[Address(RVA = "0x13BADBC", Offset = "0x13BADBC", VA = "0x13BADBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D6D0", Offset = "0xB8D6D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002590")]
			[Address(RVA = "0x13BADB0", Offset = "0x13BADB0", VA = "0x13BADB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D6C0", Offset = "0xB8D6C0")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000401")]
		public SkinnedMeshRenderer Renderer
		{
			[Token(Token = "0x6002592")]
			[Address(RVA = "0x13BADC4", Offset = "0x13BADC4", VA = "0x13BADC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0x13BADCC", Offset = "0x13BADCC", VA = "0x13BADCC")]
		public void MoveToGameplayPosition(float duration, [Optional] OnPositionReached callback)
		{
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x13BAE64", Offset = "0x13BAE64", VA = "0x13BAE64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D6E0", Offset = "0xB8D6E0")]
		public IEnumerator GoToPosition(Vector3 targetSpot, bool appearWhenArrive, SubtitledAudio soundWhenArrive, [Optional] bool? quickTeleport)
		{
			return null;
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0x13BAF54", Offset = "0x13BAF54", VA = "0x13BAF54")]
		public void GoToInitialPosition()
		{
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0x13B8858", Offset = "0x13B8858", VA = "0x13B8858")]
		public void SwitchPosition([Optional][MetadataOffset(Offset = "0x4D0F22")] float? disappearDelay)
		{
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0x13B8008", Offset = "0x13B8008", VA = "0x13B8008")]
		public void PlayContinuousSounds()
		{
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0x13BB138", Offset = "0x13BB138", VA = "0x13BB138")]
		public void PlayHintSound()
		{
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0x13B7E58", Offset = "0x13B7E58", VA = "0x13B7E58")]
		public void StopContinuousSounds()
		{
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0x13BB0A0", Offset = "0x13BB0A0", VA = "0x13BB0A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D744", Offset = "0xB8D744")]
		private IEnumerator Appear(Vector3 newPosition)
		{
			return null;
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0x13BB2CC", Offset = "0x13BB2CC", VA = "0x13BB2CC")]
		public void Appear()
		{
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0x13BAF64", Offset = "0x13BAF64", VA = "0x13BAF64")]
		private void Disappear()
		{
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0x13BB7D4", Offset = "0x13BB7D4", VA = "0x13BB7D4")]
		private void DisappearQuickly()
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0x13B8E94", Offset = "0x13B8E94", VA = "0x13B8E94")]
		public void Reveal([Optional][MetadataOffset(Offset = "0x4D0F26")] bool? randomizeAniamtion)
		{
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0x13B6D40", Offset = "0x13B6D40", VA = "0x13B6D40")]
		public void StopSwitchPosition()
		{
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0x13B64C8", Offset = "0x13B64C8", VA = "0x13B64C8")]
		public void MoveToPoint(Transform point, [Optional] OnPositionReached callback)
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0x13BADDC", Offset = "0x13BADDC", VA = "0x13BADDC")]
		private void MoveToPoint(Transform point, float duration, [Optional] OnPositionReached callback)
		{
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0x13BBD9C", Offset = "0x13BBD9C", VA = "0x13BBD9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D7A8", Offset = "0xB8D7A8")]
		private IEnumerator Move_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0x13B9638", Offset = "0x13B9638", VA = "0x13B9638")]
		public void LookAtPlayer()
		{
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0x13BBCC0", Offset = "0x13BBCC0", VA = "0x13BBCC0")]
		private float GetSpeed(Vector3 position, float duration)
		{
			return default(float);
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0x13BBE3C", Offset = "0x13BBE3C", VA = "0x13BBE3C")]
		private void PlayAnimation(string animation)
		{
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0x13BBE58", Offset = "0x13BBE58", VA = "0x13BBE58")]
		private void ResetAnimator()
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0x13B86DC", Offset = "0x13B86DC", VA = "0x13B86DC")]
		public void AnimateDisappear()
		{
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x13BB90C", Offset = "0x13BB90C", VA = "0x13BB90C")]
		public void AnimateDisappearQuickly()
		{
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0x13B991C", Offset = "0x13B991C", VA = "0x13B991C")]
		public void AnimateAppear()
		{
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0x13BBA88", Offset = "0x13BBA88", VA = "0x13BBA88")]
		public void AnimateReveal([Optional][MetadataOffset(Offset = "0x4D0F27")] bool? randomizeAnimation)
		{
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x13B8200", Offset = "0x13B8200", VA = "0x13B8200")]
		internal void AnimateIdle()
		{
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x13BBF18", Offset = "0x13BBF18", VA = "0x13BBF18")]
		public void ShowOutline(bool show)
		{
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x13B65B8", Offset = "0x13B65B8", VA = "0x13B65B8")]
		public void Reset()
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x13BBF38", Offset = "0x13BBF38", VA = "0x13BBF38")]
		public HideAndSeekRobot()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	public class Tutorial : MonoBehaviour
	{
		[Token(Token = "0x20008AE")]
		public delegate void TutorialEnded(Tutorial sender);

		[Token(Token = "0x20008AF")]
		public enum Step
		{
			[Token(Token = "0x4002F73")]
			Intro,
			[Token(Token = "0x4002F74")]
			TeleportDemo,
			[Token(Token = "0x4002F75")]
			LookingAtRobotLeft,
			[Token(Token = "0x4002F76")]
			LookingAtRobotBack,
			[Token(Token = "0x4002F77")]
			LookingAtRobotRight,
			[Token(Token = "0x4002F78")]
			FindingRobotIntro,
			[Token(Token = "0x4002F79")]
			FindingRobot,
			[Token(Token = "0x4002F7A")]
			FindingRobotWithoutHelp,
			[Token(Token = "0x4002F7B")]
			Outro
		}

		[Token(Token = "0x20008B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73BE4", Offset = "0xB73BE4")]
		private sealed class <PlayTeleportDemo>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tutorial <>4__this;

			[Token(Token = "0x1700060A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034D4")]
				[Address(RVA = "0xFDA26C", Offset = "0xFDA26C", VA = "0xFDA26C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700060B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034D6")]
				[Address(RVA = "0xFDA2D8", Offset = "0xFDA2D8", VA = "0xFDA2D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034D1")]
			[Address(RVA = "0xFD9E88", Offset = "0xFD9E88", VA = "0xFD9E88")]
			[DebuggerHidden]
			public <PlayTeleportDemo>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x60034D2")]
			[Address(RVA = "0xFD9EB4", Offset = "0xFD9EB4", VA = "0xFD9EB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034D3")]
			[Address(RVA = "0xFD9EB8", Offset = "0xFD9EB8", VA = "0xFD9EB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034D5")]
			[Address(RVA = "0xFDA274", Offset = "0xFDA274", VA = "0xFDA274", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80D90", Offset = "0xB80D90")]
		public TutorialController tutorialManager;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SubtitledAudioPlayer _subtitleAudioPlayer;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameController _gameController;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TutorialEnded _callback;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80DC8", Offset = "0xB80DC8")]
		public Transform _initialPosition;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform firstRobotTeleportPosition;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform secondRobotTeleportPosition;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform thirdRobotTeleportPosition;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform firstRobotGazePositiom;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform secondRobotGazePosition;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform thirdRobotGazePosition;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public SubtitledAudio teleportDemoMessage1;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public SubtitledAudio teleportDemoMessage2;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SubtitledAudio teleportDemoMessage3;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public SubtitledAudio robotGazeCall1;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public SubtitledAudio robotGazeIdleAlert1;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public SubtitledAudio robotGazeCall2;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public SubtitledAudio robotGazeIdleAlert2;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public SubtitledAudio robotGazeCall3;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public SubtitledAudio robotGazeIdleAlert3;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80E90", Offset = "0xB80E90")]
		public GazeDetector _robotGazeDetectorPrefab;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80EC8", Offset = "0xB80EC8")]
		public float idleTimeToAlert;

		[Token(Token = "0x4001F39")]
		private const float timeBetweenTeleportsInDemo = 3f;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GazeDetector _robotGazeDetector;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float secondsRecognizingRobot;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float secondsRecognizingSound;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float _currentVolume;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private bool idleAlert;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float idleTime;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<SubtitledAudio> currentIdleAlerts;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool missedRobot;

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0x13BCD98", Offset = "0x13BCD98", VA = "0x13BCD98")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0x13BD30C", Offset = "0x13BD30C", VA = "0x13BD30C")]
		private void Update()
		{
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x13BD3E4", Offset = "0x13BD3E4", VA = "0x13BD3E4")]
		private void GameController_TutorialStart(GameController sender)
		{
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x13BD534", Offset = "0x13BD534", VA = "0x13BD534")]
		private void GameController_TutorialPaused(GameController sender, bool paused, SceneStatusType statusType)
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x13BD6C4", Offset = "0x13BD6C4", VA = "0x13BD6C4")]
		private void GameController_TutorialStop(GameController sender)
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x13BD748", Offset = "0x13BD748", VA = "0x13BD748")]
		public void StartTutorial()
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x13BD740", Offset = "0x13BD740", VA = "0x13BD740")]
		public void StopTutorial()
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x13BDBBC", Offset = "0x13BDBBC", VA = "0x13BDBBC")]
		private void _tutorialManager_OnStepStarted(TutorialController sender, TutorialStep step)
		{
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x13BDC90", Offset = "0x13BDC90", VA = "0x13BDC90")]
		private void _tutorialManager_OnStepReady(TutorialController sender, TutorialStep step)
		{
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x13BE084", Offset = "0x13BE084", VA = "0x13BE084")]
		private void _tutorialManager_OnTutorialEnded(TutorialController sender)
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x13BDA08", Offset = "0x13BDA08", VA = "0x13BDA08")]
		private void EndTutorial(bool andContinue = true)
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x13BE08C", Offset = "0x13BE08C", VA = "0x13BE08C")]
		public void HideAndSeekRobot_RobotAppeared(HideAndSeekRobot sender)
		{
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0x13BE218", Offset = "0x13BE218", VA = "0x13BE218")]
		public void RobotGazeDetector_RobotFound(GazeDetector sender)
		{
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0x13B8F74", Offset = "0x13B8F74", VA = "0x13B8F74")]
		public void RobotFound()
		{
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0x13B9054", Offset = "0x13B9054", VA = "0x13B9054")]
		public void RobotMissed()
		{
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0x13BE010", Offset = "0x13BE010", VA = "0x13BE010")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D80C", Offset = "0xB8D80C")]
		public IEnumerator PlayTeleportDemo()
		{
			return null;
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x13BCE94", Offset = "0x13BCE94", VA = "0x13BCE94")]
		private void SetupIndividualSpeech()
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x13BE340", Offset = "0x13BE340", VA = "0x13BE340")]
		public Tutorial()
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0x13BE350", Offset = "0x13BE350", VA = "0x13BE350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D870", Offset = "0xB8D870")]
		private void <GameController_TutorialStart>b__35_0()
		{
		}
	}
	[Token(Token = "0x20004F4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB72334", Offset = "0xB72334")]
	public class HideAndSeekGameConfig : GameConfig
	{
		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float spawnPointDistance;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int hidingSpotsCount;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float hidingSpotsDistance;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float secondsToTeleport;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float secondsToTeleportQuickly;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float timeToStartRound;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float timeBetweenLevels;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80F00", Offset = "0xB80F00")]
		public HideAndSeekLevelConfig[] _levels;

		[Token(Token = "0x17000402")]
		public override LevelConfig[] Levels
		{
			[Token(Token = "0x60025C2")]
			[Address(RVA = "0x13BA7D8", Offset = "0x13BA7D8", VA = "0x13BA7D8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0x13BA7E0", Offset = "0x13BA7E0", VA = "0x13BA7E0")]
		public HideAndSeekGameConfig()
		{
		}
	}
}
namespace AttentionLab.MiniGames.Harmonize
{
	[Token(Token = "0x20004F5")]
	public abstract class HarmonizeMoment : GameMoment
	{
		[Token(Token = "0x60025C4")]
		public abstract override void SetValues();

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0x13AE240", Offset = "0x13AE240", VA = "0x13AE240")]
		protected int ParsePlayStickHand(PlayStick controller)
		{
			return default(int);
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0x13AE2E4", Offset = "0x13AE2E4", VA = "0x13AE2E4")]
		protected HarmonizeMoment()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	public class KeyHitData
	{
		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int hand;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int key_number;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool success;

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0x13B1CB0", Offset = "0x13B1CB0", VA = "0x13B1CB0")]
		public KeyHitData(int hand, int keyNumber, bool success)
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class KeyHitHarmonizeMoment : HarmonizeMoment
	{
		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly PlayStick _playStick;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly int _keyNumber;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private readonly bool _success;

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x13B1CF4", Offset = "0x13B1CF4", VA = "0x13B1CF4")]
		public KeyHitHarmonizeMoment(PlayStick playStick, int keyNumber, bool success)
		{
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0x13B1D44", Offset = "0x13B1D44", VA = "0x13B1D44", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public class NumberSpawnData
	{
		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int level;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int number;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int streak_length;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int streak_value;

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x13B1E00", Offset = "0x13B1E00", VA = "0x13B1E00")]
		public NumberSpawnData(int level, int number, int streakLength, int streakValue)
		{
		}
	}
	[Token(Token = "0x20004F9")]
	public class NumberSpawnHarmonizeMoment : HarmonizeMoment
	{
		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly int _level;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly int _number;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly int _streakLength;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private readonly int _streakValue;

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x13B1E4C", Offset = "0x13B1E4C", VA = "0x13B1E4C")]
		public NumberSpawnHarmonizeMoment(int level, int number, int streakLength, int streakValue)
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x13B1EA0", Offset = "0x13B1EA0", VA = "0x13B1EA0", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB72388", Offset = "0xB72388")]
	public class HarmonizeGameConfig : GameConfig
	{
		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float timeToShowInstruction;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float timeToAllowPreviousAnswer;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int maxConsecutiveSameResult;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80F38", Offset = "0xB80F38")]
		public HarmonizeLevelConfig[] _levels;

		[Token(Token = "0x17000403")]
		public override LevelConfig[] Levels
		{
			[Token(Token = "0x60025CD")]
			[Address(RVA = "0x13AE214", Offset = "0x13AE214", VA = "0x13AE214", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0x13AE21C", Offset = "0x13AE21C", VA = "0x13AE21C")]
		public HarmonizeGameConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004FB")]
	public class HarmonizeLevelConfig : LevelConfig
	{
		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeBetweenIntructions;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int operationsPerChunk;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int restrictedEdgeKeysCount;

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0x13AE238", Offset = "0x13AE238", VA = "0x13AE238")]
		public HarmonizeLevelConfig()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public class GameManager : MonoBehaviour
	{
		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB80F70", Offset = "0xB80F70")]
		[SerializeField]
		private GameController _gameController;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _levelObjects;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Xylophone _xylophone;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HarmonizeProgressionManager _progressionManager;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private HarmonizeTutorial _tutorial;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private HarmonizeRobot _robot;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB8100C", Offset = "0xB8100C")]
		[SerializeField]
		private HarmonizeGameConfig _gameConfig;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float _xylophoneSensitivty;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81068", Offset = "0xB81068")]
		private static GameManager <Instance>k__BackingField;

		[Token(Token = "0x17000404")]
		public static GameManager Instance
		{
			[Token(Token = "0x60025D0")]
			[Address(RVA = "0x13AD8E0", Offset = "0x13AD8E0", VA = "0x13AD8E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D880", Offset = "0xB8D880")]
			get
			{
				return null;
			}
			[Token(Token = "0x60025D1")]
			[Address(RVA = "0x13AD930", Offset = "0x13AD930", VA = "0x13AD930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D890", Offset = "0xB8D890")]
			private set
			{
			}
		}

		[Token(Token = "0x17000405")]
		public HarmonizeProgressionManager ProgressionManager
		{
			[Token(Token = "0x60025D2")]
			[Address(RVA = "0x13AD984", Offset = "0x13AD984", VA = "0x13AD984")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000406")]
		public GameController GameController
		{
			[Token(Token = "0x60025D3")]
			[Address(RVA = "0x13AD98C", Offset = "0x13AD98C", VA = "0x13AD98C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000407")]
		public HarmonizeRobot Robot
		{
			[Token(Token = "0x60025D4")]
			[Address(RVA = "0x13AD994", Offset = "0x13AD994", VA = "0x13AD994")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000408")]
		public float XylophoneSensitivty
		{
			[Token(Token = "0x60025D5")]
			[Address(RVA = "0x13AD99C", Offset = "0x13AD99C", VA = "0x13AD99C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000409")]
		public bool IsPlaytime
		{
			[Token(Token = "0x60025D6")]
			[Address(RVA = "0x13AD9A4", Offset = "0x13AD9A4", VA = "0x13AD9A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0x13ADA24", Offset = "0x13ADA24", VA = "0x13ADA24")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0x13ADBFC", Offset = "0x13ADBFC", VA = "0x13ADBFC")]
		private void GameController_Loaded(GameController sender)
		{
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0x13ADC68", Offset = "0x13ADC68", VA = "0x13ADC68")]
		private void GameController_WillUnload(GameController sender)
		{
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0x13ADCD4", Offset = "0x13ADCD4", VA = "0x13ADCD4")]
		private void GameController_GameStop(GameController sender)
		{
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0x13ADE44", Offset = "0x13ADE44", VA = "0x13ADE44")]
		private void GameController_GameEnd(GameController sender)
		{
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0x13ADE48", Offset = "0x13ADE48", VA = "0x13ADE48")]
		private void GameController_GameWillStart(GameController sender)
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0x13ADE8C", Offset = "0x13ADE8C", VA = "0x13ADE8C")]
		private void GameController_GameStart(GameController sender, int startLevel, bool isFirstTime)
		{
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0x13AE0BC", Offset = "0x13AE0BC", VA = "0x13AE0BC")]
		public void NextLevel()
		{
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0x13AE20C", Offset = "0x13AE20C", VA = "0x13AE20C")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public class HarmonizeProgressionManager : ProgressionManager
	{
		[Token(Token = "0x60025E0")]
		[Address(RVA = "0x13AE2EC", Offset = "0x13AE2EC", VA = "0x13AE2EC", Slot = "4")]
		public override void Setup(GameConfig gameConfig, int level, bool isFirstTime)
		{
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x13AE350", Offset = "0x13AE350", VA = "0x13AE350", Slot = "5")]
		protected override void IncrementLevel()
		{
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x13AE3B0", Offset = "0x13AE3B0", VA = "0x13AE3B0", Slot = "6")]
		protected override void DecrementLevel()
		{
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x13AE410", Offset = "0x13AE410", VA = "0x13AE410")]
		public HarmonizeProgressionManager()
		{
		}
	}
	[Token(Token = "0x20004FE")]
	public class InstructionDisplay : MonoBehaviour
	{
		[Token(Token = "0x20008B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73BF4", Offset = "0xB73BF4")]
		private sealed class <UpdateProgress_Coroutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InstructionDisplay <>4__this;

			[Token(Token = "0x4002F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int operationCount;

			[Token(Token = "0x4002F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int operationsPerChunk;

			[Token(Token = "0x4002F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <currentValue>5__2;

			[Token(Token = "0x4002F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <finalValue>5__3;

			[Token(Token = "0x4002F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <totalAnimTime>5__4;

			[Token(Token = "0x4002F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x1700060C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034DA")]
				[Address(RVA = "0x13B1C3C", Offset = "0x13B1C3C", VA = "0x13B1C3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700060D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034DC")]
				[Address(RVA = "0x13B1CA8", Offset = "0x13B1CA8", VA = "0x13B1CA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034D7")]
			[Address(RVA = "0x13B1188", Offset = "0x13B1188", VA = "0x13B1188")]
			[DebuggerHidden]
			public <UpdateProgress_Coroutine>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60034D8")]
			[Address(RVA = "0x13B18A0", Offset = "0x13B18A0", VA = "0x13B18A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034D9")]
			[Address(RVA = "0x13B18A4", Offset = "0x13B18A4", VA = "0x13B18A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034DB")]
			[Address(RVA = "0x13B1C44", Offset = "0x13B1C44", VA = "0x13B1C44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73C04", Offset = "0xB73C04")]
		private sealed class <ShowInstruction_Coroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InstructionDisplay <>4__this;

			[Token(Token = "0x4002F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int number;

			[Token(Token = "0x4002F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x1700060E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034E0")]
				[Address(RVA = "0x13B182C", Offset = "0x13B182C", VA = "0x13B182C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700060F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034E2")]
				[Address(RVA = "0x13B1898", Offset = "0x13B1898", VA = "0x13B1898", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034DD")]
			[Address(RVA = "0x13B13A8", Offset = "0x13B13A8", VA = "0x13B13A8")]
			[DebuggerHidden]
			public <ShowInstruction_Coroutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60034DE")]
			[Address(RVA = "0x13B16AC", Offset = "0x13B16AC", VA = "0x13B16AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034DF")]
			[Address(RVA = "0x13B16B0", Offset = "0x13B16B0", VA = "0x13B16B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034E1")]
			[Address(RVA = "0x13B1834", Offset = "0x13B1834", VA = "0x13B1834", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73C14", Offset = "0xB73C14")]
		private sealed class <HideInstruction_Coroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InstructionDisplay <>4__this;

			[Token(Token = "0x4002F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000610")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034E6")]
				[Address(RVA = "0x13B1638", Offset = "0x13B1638", VA = "0x13B1638", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000611")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034E8")]
				[Address(RVA = "0x13B16A4", Offset = "0x13B16A4", VA = "0x13B16A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034E3")]
			[Address(RVA = "0x13B13D4", Offset = "0x13B13D4", VA = "0x13B13D4")]
			[DebuggerHidden]
			public <HideInstruction_Coroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60034E4")]
			[Address(RVA = "0x13B14E4", Offset = "0x13B14E4", VA = "0x13B14E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034E5")]
			[Address(RVA = "0x13B14E8", Offset = "0x13B14E8", VA = "0x13B14E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034E7")]
			[Address(RVA = "0x13B1640", Offset = "0x13B1640", VA = "0x13B1640", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _fullProgressFillTime;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshRenderer _renderer;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _timeToShowInstruction;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _fadeDuration;

		[Token(Token = "0x1700040A")]
		public MeshRenderer Renderer
		{
			[Token(Token = "0x60025E4")]
			[Address(RVA = "0x13B0D4C", Offset = "0x13B0D4C", VA = "0x13B0D4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60025E5")]
			[Address(RVA = "0x13B0DE4", Offset = "0x13B0DE4", VA = "0x13B0DE4")]
			private set
			{
			}
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x13B0DEC", Offset = "0x13B0DEC", VA = "0x13B0DEC")]
		public void SetTimeToShowInstruction(float time)
		{
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0x13B0E00", Offset = "0x13B0E00", VA = "0x13B0E00")]
		public void ShowInstruction(int number, bool automaticHide = true)
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x13B10D4", Offset = "0x13B10D4", VA = "0x13B10D4")]
		public void UpdateProgress(int operationCount, int operationsPerChunk)
		{
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x13B1100", Offset = "0x13B1100", VA = "0x13B1100")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D8A0", Offset = "0xB8D8A0")]
		public IEnumerator UpdateProgress_Coroutine(int operationCount, int operationsPerChunk)
		{
			return null;
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x13B11B4", Offset = "0x13B11B4", VA = "0x13B11B4")]
		public void HideInstruction()
		{
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x13B1050", Offset = "0x13B1050", VA = "0x13B1050")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D904", Offset = "0xB8D904")]
		private IEnumerator ShowInstruction_Coroutine(int number)
		{
			return null;
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x13B1334", Offset = "0x13B1334", VA = "0x13B1334")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D968", Offset = "0xB8D968")]
		private IEnumerator HideInstruction_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0x13B1400", Offset = "0x13B1400", VA = "0x13B1400")]
		public void Reset()
		{
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0x13B14D4", Offset = "0x13B14D4", VA = "0x13B14D4")]
		public InstructionDisplay()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	public class PlayStickMaterialChanger : MonoBehaviour
	{
		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB81088", Offset = "0xB81088")]
		[SerializeField]
		private MeshRenderer _malletRenderer;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _fxRenderer;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material _materialMallet;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Material _materialFx;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material _ghostMaterialMallet;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material _ghostMaterialFx;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _previousPlaytime;

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0x13B1F44", Offset = "0x13B1F44", VA = "0x13B1F44")]
		private void Start()
		{
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0x13B2048", Offset = "0x13B2048", VA = "0x13B2048")]
		private void Update()
		{
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0x13B1F48", Offset = "0x13B1F48", VA = "0x13B1F48")]
		private void ChangeMaterial()
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0x13B20D8", Offset = "0x13B20D8", VA = "0x13B20D8")]
		public PlayStickMaterialChanger()
		{
		}
	}
	[Token(Token = "0x2000500")]
	public class Xylophone : MonoBehaviour
	{
		[Token(Token = "0x20008B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73C24", Offset = "0xB73C24")]
		private sealed class <StartShowingIntructions>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Xylophone <>4__this;

			[Token(Token = "0x17000612")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034EC")]
				[Address(RVA = "0x13B3974", Offset = "0x13B3974", VA = "0x13B3974", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000613")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034EE")]
				[Address(RVA = "0x13B39E0", Offset = "0x13B39E0", VA = "0x13B39E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034E9")]
			[Address(RVA = "0x13B320C", Offset = "0x13B320C", VA = "0x13B320C")]
			[DebuggerHidden]
			public <StartShowingIntructions>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60034EA")]
			[Address(RVA = "0x13B38AC", Offset = "0x13B38AC", VA = "0x13B38AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034EB")]
			[Address(RVA = "0x13B38B0", Offset = "0x13B38B0", VA = "0x13B38B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034ED")]
			[Address(RVA = "0x13B397C", Offset = "0x13B397C", VA = "0x13B397C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB81124", Offset = "0xB81124")]
		[SerializeField]
		private XylophoneKey[] _availableKeys;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InstructionDisplay _display;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _currentInstruction;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _previousInstruction;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _beforePreviousInstruction;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _halfKeyCount;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isFirstLevel;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _timeBetweenIntructions;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _operationsPerChunk;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _correctOperationCount;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _restrictedEdgeKeysCount;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _instructionShowTimeStamp;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _timeToAllowPreviousAnswer;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _maxConsecutiveSameResult;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _consecutiveSameResultCount;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81180", Offset = "0xB81180")]
		private bool <IsPlayTime>k__BackingField;

		[Token(Token = "0x1700040B")]
		public bool IsPlayTime
		{
			[Token(Token = "0x60025F3")]
			[Address(RVA = "0x13B2C58", Offset = "0x13B2C58", VA = "0x13B2C58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D9CC", Offset = "0xB8D9CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025F4")]
			[Address(RVA = "0x13B2C60", Offset = "0x13B2C60", VA = "0x13B2C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8D9DC", Offset = "0xB8D9DC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700040C")]
		public XylophoneKey[] AvailableKeys
		{
			[Token(Token = "0x60025F5")]
			[Address(RVA = "0x13B2C6C", Offset = "0x13B2C6C", VA = "0x13B2C6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040D")]
		public InstructionDisplay Display
		{
			[Token(Token = "0x60025F6")]
			[Address(RVA = "0x13B2C74", Offset = "0x13B2C74", VA = "0x13B2C74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0x13ADF3C", Offset = "0x13ADF3C", VA = "0x13ADF3C")]
		public void Setup()
		{
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0x13B2C7C", Offset = "0x13B2C7C", VA = "0x13B2C7C")]
		private bool CheckKey(XylophoneKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x13B2E9C", Offset = "0x13B2E9C", VA = "0x13B2E9C")]
		private void UpdateOperationCount(int value)
		{
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0x13AE1A0", Offset = "0x13AE1A0", VA = "0x13AE1A0")]
		public void StartLevel(HarmonizeLevelConfig levelConfig)
		{
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x13B2F54", Offset = "0x13B2F54", VA = "0x13B2F54")]
		private void XylophoneKey_Played(XylophoneKey key, PlayStick playStick)
		{
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x13B3120", Offset = "0x13B3120", VA = "0x13B3120")]
		private void LogKeyHitMoment(PlayStick playStick, XylophoneKey xylophoneKey, bool success)
		{
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x13B2EE0", Offset = "0x13B2EE0", VA = "0x13B2EE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8D9EC", Offset = "0xB8D9EC")]
		private IEnumerator StartShowingIntructions()
		{
			return null;
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0x13B3238", Offset = "0x13B3238", VA = "0x13B3238")]
		private void ShowNextInstruction()
		{
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x13B3594", Offset = "0x13B3594", VA = "0x13B3594")]
		private void LogNumberSpawnMoment()
		{
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0x13B3290", Offset = "0x13B3290", VA = "0x13B3290")]
		private int RandomInstruction()
		{
			return default(int);
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0x13B3680", Offset = "0x13B3680", VA = "0x13B3680")]
		private void ShowIntructionsIndefinetely()
		{
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0x13B3768", Offset = "0x13B3768", VA = "0x13B3768")]
		private void AllowKeyHits()
		{
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0x13B37F0", Offset = "0x13B37F0", VA = "0x13B37F0")]
		public void Stop()
		{
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0x13AE074", Offset = "0x13AE074", VA = "0x13AE074")]
		public void Config(HarmonizeGameConfig config)
		{
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0x13ADD18", Offset = "0x13ADD18", VA = "0x13ADD18")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0x13B3894", Offset = "0x13B3894", VA = "0x13B3894")]
		public Xylophone()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public class XylophoneKey : MonoBehaviour
	{
		[Token(Token = "0x20008B5")]
		public delegate void OnPlayed(XylophoneKey sender, PlayStick playStick);

		[Token(Token = "0x20008B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73C34", Offset = "0xB73C34")]
		private sealed class <Highlight_Coroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public XylophoneKey <>4__this;

			[Token(Token = "0x4002F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool correct;

			[Token(Token = "0x4002F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x4002F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <duration>5__3;

			[Token(Token = "0x4002F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AnimationCurve <feedbackCurve>5__4;

			[Token(Token = "0x17000614")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034F6")]
				[Address(RVA = "0x13B44D4", Offset = "0x13B44D4", VA = "0x13B44D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000615")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034F8")]
				[Address(RVA = "0x13B4540", Offset = "0x13B4540", VA = "0x13B4540", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034F3")]
			[Address(RVA = "0x13B42B4", Offset = "0x13B42B4", VA = "0x13B42B4")]
			[DebuggerHidden]
			public <Highlight_Coroutine>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60034F4")]
			[Address(RVA = "0x13B4324", Offset = "0x13B4324", VA = "0x13B4324", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034F5")]
			[Address(RVA = "0x13B4328", Offset = "0x13B4328", VA = "0x13B4328", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034F7")]
			[Address(RVA = "0x13B44DC", Offset = "0x13B44DC", VA = "0x13B44DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73C44", Offset = "0xB73C44")]
		private sealed class <Shake_Coroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public XylophoneKey <>4__this;

			[Token(Token = "0x4002F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool correct;

			[Token(Token = "0x4002F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x4002FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <duration>5__3;

			[Token(Token = "0x4002FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <intensity>5__4;

			[Token(Token = "0x4002FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <amplitude>5__5;

			[Token(Token = "0x17000616")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034FC")]
				[Address(RVA = "0x13B4810", Offset = "0x13B4810", VA = "0x13B4810", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000617")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034FE")]
				[Address(RVA = "0x13B487C", Offset = "0x13B487C", VA = "0x13B487C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034F9")]
			[Address(RVA = "0x13B42E0", Offset = "0x13B42E0", VA = "0x13B42E0")]
			[DebuggerHidden]
			public <Shake_Coroutine>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x60034FA")]
			[Address(RVA = "0x13B4548", Offset = "0x13B4548", VA = "0x13B4548", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034FB")]
			[Address(RVA = "0x13B454C", Offset = "0x13B454C", VA = "0x13B454C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034FD")]
			[Address(RVA = "0x13B4818", Offset = "0x13B4818", VA = "0x13B4818", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OnPlayed Played;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB81190", Offset = "0xB81190")]
		[SerializeField]
		private int _keyNumber;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private AudioAssets.Harmonize _keyToPlay;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB811FC", Offset = "0xB811FC")]
		[AttributeAttribute(Name = "CurveRangeAttribute", RVA = "0xB811FC", Offset = "0xB811FC")]
		[SerializeField]
		private AnimationCurve _correctHighlightFeedbackCurve;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _correctHighlightFeedbackDuration;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _correctShakeAmplitude;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _correctShakeIntensity;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float _correctShakeFeedbackDuration;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _correctHitVFX;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB812BC", Offset = "0xB812BC")]
		[AttributeAttribute(Name = "CurveRangeAttribute", RVA = "0xB812BC", Offset = "0xB812BC")]
		[SerializeField]
		private AnimationCurve _wrongHighlightFeedbackCurve;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float _wrongHighlightFeedbackDuration;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float _wrongShakeAmplitude;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _wrongShakeIntensity;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float _wrongShakeFeedbackDuration;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _wrongHitVFX;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB8137C", Offset = "0xB8137C")]
		[SerializeField]
		private XylophoneKeyNumberHover _numberHover;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform _hitEffectPos;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MeshRenderer _feedbackMesh;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _breakFeedback;

		[Token(Token = "0x1700040E")]
		public int KeyNumber
		{
			[Token(Token = "0x6002607")]
			[Address(RVA = "0x13B39E8", Offset = "0x13B39E8", VA = "0x13B39E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0x13B39F0", Offset = "0x13B39F0", VA = "0x13B39F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0x13B3ACC", Offset = "0x13B3ACC", VA = "0x13B3ACC")]
		private void Start()
		{
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0x13B3C38", Offset = "0x13B3C38", VA = "0x13B3C38")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0x13B3DA4", Offset = "0x13B3DA4", VA = "0x13B3DA4")]
		public void PlayNote(PlayStick playStick)
		{
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0x13B27CC", Offset = "0x13B27CC", VA = "0x13B27CC")]
		public void GiveFeedback(bool correct)
		{
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0x13B2760", Offset = "0x13B2760", VA = "0x13B2760")]
		public void LightUp()
		{
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0x13B225C", Offset = "0x13B225C", VA = "0x13B225C")]
		public void TurnOffLight()
		{
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0x13B41A4", Offset = "0x13B41A4", VA = "0x13B41A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8DA50", Offset = "0xB8DA50")]
		private IEnumerator Highlight_Coroutine(bool correct)
		{
			return null;
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0x13B422C", Offset = "0x13B422C", VA = "0x13B422C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8DAB4", Offset = "0xB8DAB4")]
		private IEnumerator Shake_Coroutine(bool correct)
		{
			return null;
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0x13B430C", Offset = "0x13B430C", VA = "0x13B430C")]
		public XylophoneKey()
		{
		}
	}
	[Token(Token = "0x2000502")]
	public class XylophoneKeyNumberHover : MonoBehaviour
	{
		[Token(Token = "0x20008B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73C54", Offset = "0xB73C54")]
		private sealed class <Hide_Coroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public XylophoneKeyNumberHover <>4__this;

			[Token(Token = "0x17000618")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003502")]
				[Address(RVA = "0x13B54C0", Offset = "0x13B54C0", VA = "0x13B54C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000619")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003504")]
				[Address(RVA = "0x13B552C", Offset = "0x13B552C", VA = "0x13B552C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034FF")]
			[Address(RVA = "0x13B5244", Offset = "0x13B5244", VA = "0x13B5244")]
			[DebuggerHidden]
			public <Hide_Coroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6003500")]
			[Address(RVA = "0x13B5278", Offset = "0x13B5278", VA = "0x13B5278", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003501")]
			[Address(RVA = "0x13B527C", Offset = "0x13B527C", VA = "0x13B527C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003503")]
			[Address(RVA = "0x13B54C8", Offset = "0x13B54C8", VA = "0x13B54C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CurveRangeAttribute", RVA = "0xB813D8", Offset = "0xB813D8")]
		[SerializeField]
		private AnimationCurve _heightCurve;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CurveRangeAttribute", RVA = "0xB81424", Offset = "0xB81424")]
		[SerializeField]
		private AnimationCurve _scaleCurve;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _boneRotator;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _bone;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Collider> _playSticksInRange;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SkinnedMeshRenderer _renderer;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoxCollider _collider;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _maxDistance;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _defaultScale;

		[Token(Token = "0x6002612")]
		[Address(RVA = "0x13B48C0", Offset = "0x13B48C0", VA = "0x13B48C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0x13B4BF4", Offset = "0x13B4BF4", VA = "0x13B4BF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0x13B3B68", Offset = "0x13B3B68", VA = "0x13B3B68")]
		public void SetNumber(int number)
		{
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0x13B4AA4", Offset = "0x13B4AA4", VA = "0x13B4AA4")]
		private void SetInitialState()
		{
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0x13B503C", Offset = "0x13B503C", VA = "0x13B503C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0x13B5108", Offset = "0x13B5108", VA = "0x13B5108")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0x13B51D0", Offset = "0x13B51D0", VA = "0x13B51D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8DB18", Offset = "0xB8DB18")]
		private IEnumerator Hide_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0x13B5270", Offset = "0x13B5270", VA = "0x13B5270")]
		public XylophoneKeyNumberHover()
		{
		}
	}
	[Token(Token = "0x2000503")]
	[ExecuteInEditMode]
	public class XylophoneLayoutPlacer : PathSceneTool
	{
		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool _reverse;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] _keys;

		[Token(Token = "0x4001FA2")]
		private const float minSpacing = 0.1f;

		[Token(Token = "0x600261A")]
		[Address(RVA = "0x13B5534", Offset = "0x13B5534", VA = "0x13B5534")]
		private void Generate()
		{
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0x13B5804", Offset = "0x13B5804", VA = "0x13B5804", Slot = "5")]
		protected override void PathUpdated()
		{
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0x13B5898", Offset = "0x13B5898", VA = "0x13B5898")]
		public XylophoneLayoutPlacer()
		{
		}
	}
	[Token(Token = "0x2000504")]
	public class HarmonizeRobot : MonoBehaviour
	{
		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RobotThought _thought;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isGivingGoodFeedback;

		[Token(Token = "0x600261D")]
		[Address(RVA = "0x13AE478", Offset = "0x13AE478", VA = "0x13AE478")]
		public void StartThinking()
		{
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0x13AE4D4", Offset = "0x13AE4D4", VA = "0x13AE4D4")]
		public void StopThinking()
		{
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0x13AE530", Offset = "0x13AE530", VA = "0x13AE530")]
		public void ShowThought(RobotThought.ThoughtType type)
		{
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0x13AE62C", Offset = "0x13AE62C", VA = "0x13AE62C")]
		public void HideThought()
		{
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0x13AE6A4", Offset = "0x13AE6A4", VA = "0x13AE6A4")]
		public void SetIdle()
		{
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0x13AE704", Offset = "0x13AE704", VA = "0x13AE704")]
		public void GiveWrongFeedback()
		{
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0x13AE764", Offset = "0x13AE764", VA = "0x13AE764")]
		public void GivePositiveFeedback()
		{
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0x13AE7DC", Offset = "0x13AE7DC", VA = "0x13AE7DC")]
		public HarmonizeRobot()
		{
		}
	}
	[Token(Token = "0x2000505")]
	public class HarmonizeTutorial : MonoBehaviour
	{
		[Token(Token = "0x20008B9")]
		private enum Step
		{
			[Token(Token = "0x4002FA7")]
			Welcoming,
			[Token(Token = "0x4002FA8")]
			UnderstandingDisplay,
			[Token(Token = "0x4002FA9")]
			SumAndPlay1,
			[Token(Token = "0x4002FAA")]
			SumAndPlay2,
			[Token(Token = "0x4002FAB")]
			SumAndPlay3,
			[Token(Token = "0x4002FAC")]
			SumAndPlay4,
			[Token(Token = "0x4002FAD")]
			KeepingThePace,
			[Token(Token = "0x4002FAE")]
			KeepingTheStreak1,
			[Token(Token = "0x4002FAF")]
			KeepingTheStreak2,
			[Token(Token = "0x4002FB0")]
			End
		}

		[Token(Token = "0x20008BA")]
		private enum SumAndPlayMode
		{
			[Token(Token = "0x4002FB2")]
			LightUp,
			[Token(Token = "0x4002FB3")]
			Thought,
			[Token(Token = "0x4002FB4")]
			FinalThought
		}

		[Token(Token = "0x20008BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73C64", Offset = "0xB73C64")]
		private sealed class <NumberDemo_Coroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HarmonizeTutorial <>4__this;

			[Token(Token = "0x1700061A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003508")]
				[Address(RVA = "0x13B05AC", Offset = "0x13B05AC", VA = "0x13B05AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700061B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600350A")]
				[Address(RVA = "0x13B0618", Offset = "0x13B0618", VA = "0x13B0618", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003505")]
			[Address(RVA = "0x13AF87C", Offset = "0x13AF87C", VA = "0x13AF87C")]
			[DebuggerHidden]
			public <NumberDemo_Coroutine>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6003506")]
			[Address(RVA = "0x13B0460", Offset = "0x13B0460", VA = "0x13B0460", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003507")]
			[Address(RVA = "0x13B0464", Offset = "0x13B0464", VA = "0x13B0464", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003509")]
			[Address(RVA = "0x13B05B4", Offset = "0x13B05B4", VA = "0x13B05B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73C74", Offset = "0xB73C74")]
		private sealed class <SetupSumAndPlayStep_Coroutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HarmonizeTutorial <>4__this;

			[Token(Token = "0x1700061C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600350E")]
				[Address(RVA = "0x13B0768", Offset = "0x13B0768", VA = "0x13B0768", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700061D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003510")]
				[Address(RVA = "0x13B07D4", Offset = "0x13B07D4", VA = "0x13B07D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600350B")]
			[Address(RVA = "0x13AFC04", Offset = "0x13AFC04", VA = "0x13AFC04")]
			[DebuggerHidden]
			public <SetupSumAndPlayStep_Coroutine>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x600350C")]
			[Address(RVA = "0x13B0620", Offset = "0x13B0620", VA = "0x13B0620", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600350D")]
			[Address(RVA = "0x13B0624", Offset = "0x13B0624", VA = "0x13B0624", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600350F")]
			[Address(RVA = "0x13B0770", Offset = "0x13B0770", VA = "0x13B0770", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73C84", Offset = "0xB73C84")]
		private sealed class <SumAndPlayStep_Coroutine>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SumAndPlayMode mode;

			[Token(Token = "0x4002FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HarmonizeTutorial <>4__this;

			[Token(Token = "0x4002FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int keyToHit;

			[Token(Token = "0x4002FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int specialMessageIndex;

			[Token(Token = "0x4002FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x4002FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <timeToPlay>5__3;

			[Token(Token = "0x4002FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool <stepCompleted>5__4;

			[Token(Token = "0x1700061E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003514")]
				[Address(RVA = "0x13B0CD8", Offset = "0x13B0CD8", VA = "0x13B0CD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700061F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003516")]
				[Address(RVA = "0x13B0D44", Offset = "0x13B0D44", VA = "0x13B0D44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003511")]
			[Address(RVA = "0x13AFC30", Offset = "0x13AFC30", VA = "0x13AFC30")]
			[DebuggerHidden]
			public <SumAndPlayStep_Coroutine>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6003512")]
			[Address(RVA = "0x13B0A34", Offset = "0x13B0A34", VA = "0x13B0A34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003513")]
			[Address(RVA = "0x13B0A38", Offset = "0x13B0A38", VA = "0x13B0A38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003515")]
			[Address(RVA = "0x13B0CE0", Offset = "0x13B0CE0", VA = "0x13B0CE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73C94", Offset = "0xB73C94")]
		private sealed class <KeepingThePaceStep_Coroutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HarmonizeTutorial <>4__this;

			[Token(Token = "0x4002FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <stepCompleted>5__2;

			[Token(Token = "0x4002FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <correctCount>5__3;

			[Token(Token = "0x4002FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <_previousCorrectKey>5__4;

			[Token(Token = "0x4002FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <shownNumbersCountOnKeyChange>5__5;

			[Token(Token = "0x17000620")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600351A")]
				[Address(RVA = "0x13B0024", Offset = "0x13B0024", VA = "0x13B0024", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000621")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600351C")]
				[Address(RVA = "0x13B0090", Offset = "0x13B0090", VA = "0x13B0090", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003517")]
			[Address(RVA = "0x13AFC5C", Offset = "0x13AFC5C", VA = "0x13AFC5C")]
			[DebuggerHidden]
			public <KeepingThePaceStep_Coroutine>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6003518")]
			[Address(RVA = "0x13AFD70", Offset = "0x13AFD70", VA = "0x13AFD70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003519")]
			[Address(RVA = "0x13AFD74", Offset = "0x13AFD74", VA = "0x13AFD74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600351B")]
			[Address(RVA = "0x13B002C", Offset = "0x13B002C", VA = "0x13B002C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73CA4", Offset = "0xB73CA4")]
		private sealed class <ShowRandomNumbers_Coroutine>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HarmonizeTutorial <>4__this;

			[Token(Token = "0x4002FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <numberShownTimeStamp>5__2;

			[Token(Token = "0x17000622")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003520")]
				[Address(RVA = "0x13B09C0", Offset = "0x13B09C0", VA = "0x13B09C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000623")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003522")]
				[Address(RVA = "0x13B0A2C", Offset = "0x13B0A2C", VA = "0x13B0A2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600351D")]
			[Address(RVA = "0x13AFCFC", Offset = "0x13AFCFC", VA = "0x13AFCFC")]
			[DebuggerHidden]
			public <ShowRandomNumbers_Coroutine>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x600351E")]
			[Address(RVA = "0x13B07DC", Offset = "0x13B07DC", VA = "0x13B07DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600351F")]
			[Address(RVA = "0x13B07E0", Offset = "0x13B07E0", VA = "0x13B07E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003521")]
			[Address(RVA = "0x13B09C8", Offset = "0x13B09C8", VA = "0x13B09C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73CB4", Offset = "0xB73CB4")]
		private sealed class <KeepingTheStreakStep_Coroutine>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HarmonizeTutorial <>4__this;

			[Token(Token = "0x4002FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <stepCompleted>5__2;

			[Token(Token = "0x4002FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <streakCount>5__3;

			[Token(Token = "0x4002FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <_previousCorrectKey>5__4;

			[Token(Token = "0x4002FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool <answered>5__5;

			[Token(Token = "0x4002FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <shownNumbersStartCount>5__6;

			[Token(Token = "0x17000624")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003526")]
				[Address(RVA = "0x13B03EC", Offset = "0x13B03EC", VA = "0x13B03EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000625")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003528")]
				[Address(RVA = "0x13B0458", Offset = "0x13B0458", VA = "0x13B0458", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003523")]
			[Address(RVA = "0x13AFD28", Offset = "0x13AFD28", VA = "0x13AFD28")]
			[DebuggerHidden]
			public <KeepingTheStreakStep_Coroutine>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6003524")]
			[Address(RVA = "0x13B0098", Offset = "0x13B0098", VA = "0x13B0098", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003525")]
			[Address(RVA = "0x13B009C", Offset = "0x13B009C", VA = "0x13B009C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003527")]
			[Address(RVA = "0x13B03F4", Offset = "0x13B03F4", VA = "0x13B03F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TutorialXylophone _xylophone;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isOnTutorial;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _isPlayTime;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool _runDemo;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool _isPlaying;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _isValidatingInput;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TutorialController _tutorialController;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _highlightedKey;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _keyHitIndex;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _timeBetweenInstructions;

		[Token(Token = "0x1700040F")]
		public bool IsPlaying
		{
			[Token(Token = "0x6002625")]
			[Address(RVA = "0x13AE7E4", Offset = "0x13AE7E4", VA = "0x13AE7E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000410")]
		public bool IsPlayTime
		{
			[Token(Token = "0x6002626")]
			[Address(RVA = "0x13AD9FC", Offset = "0x13AD9FC", VA = "0x13AD9FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000411")]
		public bool IsOnTutorial
		{
			[Token(Token = "0x6002627")]
			[Address(RVA = "0x13AE804", Offset = "0x13AE804", VA = "0x13AE804")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0x13AE80C", Offset = "0x13AE80C", VA = "0x13AE80C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0x13AEA54", Offset = "0x13AEA54", VA = "0x13AEA54")]
		private void GameController_TutorialStart(GameController sender)
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0x13AEDE4", Offset = "0x13AEDE4", VA = "0x13AEDE4")]
		private void GameController_TutorialStop(GameController sender)
		{
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0x13AEF00", Offset = "0x13AEF00", VA = "0x13AEF00")]
		private void GameController_TutorialPaused(GameController sender, bool paused, SceneStatusType statusType)
		{
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0x13AEF20", Offset = "0x13AEF20", VA = "0x13AEF20")]
		private void GameController_WillUnload(GameController sender)
		{
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0x13AF018", Offset = "0x13AF018", VA = "0x13AF018")]
		private void TutorialController_StepInstructionsStart(TutorialController sender, TutorialStep step)
		{
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0x13AF24C", Offset = "0x13AF24C", VA = "0x13AF24C")]
		private void TutorialController_StepInstructionsPlay(TutorialController sender, TutorialStep step, int instructionIndex)
		{
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0x13AF3A0", Offset = "0x13AF3A0", VA = "0x13AF3A0")]
		private void TutorialController_StepInstructionsEnd(TutorialController sender, TutorialStep step)
		{
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0x13AF5EC", Offset = "0x13AF5EC", VA = "0x13AF5EC")]
		private void TutorialController_OnTutorialEnded(TutorialController sender)
		{
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0x13AEEAC", Offset = "0x13AEEAC", VA = "0x13AEEAC")]
		private void ResetTutorial()
		{
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0x13AF7F8", Offset = "0x13AF7F8", VA = "0x13AF7F8")]
		private void TutorialXylophone_OnPlayed(int keyIndex)
		{
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0x13AF364", Offset = "0x13AF364", VA = "0x13AF364")]
		private void StartNumberDemo()
		{
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0x13AF398", Offset = "0x13AF398", VA = "0x13AF398")]
		private void StopNumberDemo()
		{
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0x13AF808", Offset = "0x13AF808", VA = "0x13AF808")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8DB7C", Offset = "0xB8DB7C")]
		private IEnumerator NumberDemo_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0x13AF8A8", Offset = "0x13AF8A8", VA = "0x13AF8A8")]
		private void ShowRandomNumber(int numberToExclude = -1)
		{
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0x13AF124", Offset = "0x13AF124", VA = "0x13AF124")]
		private void ShowNumber(int number, bool automaticHide = true)
		{
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0x13AF658", Offset = "0x13AF658", VA = "0x13AF658")]
		private void HideNumber()
		{
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0x13AFA5C", Offset = "0x13AFA5C", VA = "0x13AFA5C")]
		private void LightUpKey(int keyIndex)
		{
		}

		[Token(Token = "0x600263A")]
		[Address(RVA = "0x13AFAC8", Offset = "0x13AFAC8", VA = "0x13AFAC8")]
		private void TurnOffKeyLight(int keyIndex)
		{
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0x13AFB34", Offset = "0x13AFB34", VA = "0x13AFB34")]
		private void GiveKeyFeedback(int keyIndex, bool correct)
		{
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0x13AFBA8", Offset = "0x13AFBA8", VA = "0x13AFBA8")]
		private void UpdateDisplayProgress(int operationCount, int operationsPerChunk)
		{
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0x13AF140", Offset = "0x13AF140", VA = "0x13AF140")]
		private void ShowThought(RobotThought.ThoughtType type)
		{
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0x13AF670", Offset = "0x13AF670", VA = "0x13AF670")]
		private void HideThought()
		{
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0x13AF45C", Offset = "0x13AF45C", VA = "0x13AF45C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8DBE0", Offset = "0xB8DBE0")]
		private IEnumerator SetupSumAndPlayStep_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0x13AF1AC", Offset = "0x13AF1AC", VA = "0x13AF1AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8DC44", Offset = "0xB8DC44")]
		private IEnumerator SumAndPlayStep_Coroutine(int keyToHit, SumAndPlayMode mode, int specialMessageIndex = -1)
		{
			return null;
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0x13AF504", Offset = "0x13AF504", VA = "0x13AF504")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8DCA8", Offset = "0xB8DCA8")]
		private IEnumerator KeepingThePaceStep_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0x13AF4D0", Offset = "0x13AF4D0", VA = "0x13AF4D0")]
		private void StartRandomPlay()
		{
		}

		[Token(Token = "0x6002643")]
		[Address(RVA = "0x13AF244", Offset = "0x13AF244", VA = "0x13AF244")]
		private void StopRandomPlay()
		{
		}

		[Token(Token = "0x6002644")]
		[Address(RVA = "0x13AFC88", Offset = "0x13AFC88", VA = "0x13AFC88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8DD0C", Offset = "0xB8DD0C")]
		private IEnumerator ShowRandomNumbers_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0x13AF578", Offset = "0x13AF578", VA = "0x13AF578")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8DD70", Offset = "0xB8DD70")]
		private IEnumerator KeepingTheStreakStep_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0x13AFD54", Offset = "0x13AFD54", VA = "0x13AFD54")]
		public HarmonizeTutorial()
		{
		}
	}
	[Token(Token = "0x2000506")]
	public class RobotThought : MonoBehaviour
	{
		[Token(Token = "0x20008C1")]
		public enum ThoughtType
		{
			[Token(Token = "0x4002FD8")]
			None,
			[Token(Token = "0x4002FD9")]
			One,
			[Token(Token = "0x4002FDA")]
			OnePlusFive,
			[Token(Token = "0x4002FDB")]
			FivePlusThree,
			[Token(Token = "0x4002FDC")]
			ThreePlusZero
		}

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject OneThought;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject OnePlusFiveThought;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject FivePlusThreeThought;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject ThreePlusZeroThought;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator _animator;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isHidden;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private ThoughtType _differedThought;

		[Token(Token = "0x6002647")]
		[Address(RVA = "0x13B20E0", Offset = "0x13B20E0", VA = "0x13B20E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0x13AE548", Offset = "0x13AE548", VA = "0x13AE548")]
		public void Show(ThoughtType type)
		{
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0x13AE644", Offset = "0x13AE644", VA = "0x13AE644")]
		public void Hide()
		{
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0x13B213C", Offset = "0x13B213C", VA = "0x13B213C")]
		public void HideComplete()
		{
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0x13B223C", Offset = "0x13B223C", VA = "0x13B223C")]
		public RobotThought()
		{
		}
	}
	[Token(Token = "0x2000507")]
	public class TutorialXylophone : MonoBehaviour
	{
		[Token(Token = "0x20008C2")]
		public delegate void OnPlayed(int keyIndex);

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OnPlayed Played;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _previousNumber;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Xylophone _xylophone;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _halfKeyCount;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<int> _shownNumbers;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _maxConsecutiveSameResult;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _consecutiveSameResultCount;

		[Token(Token = "0x17000412")]
		public List<int> ShownNumbers
		{
			[Token(Token = "0x600264C")]
			[Address(RVA = "0x13B2244", Offset = "0x13B2244", VA = "0x13B2244")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0x13AEC6C", Offset = "0x13AEC6C", VA = "0x13AEC6C")]
		public void Setup()
		{
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0x13AF6D4", Offset = "0x13AF6D4", VA = "0x13AF6D4")]
		public void Reset()
		{
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0x13B22C8", Offset = "0x13B22C8", VA = "0x13B22C8")]
		private void XylophoneKey_Played(XylophoneKey key, PlayStick playStick)
		{
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0x13AF8C0", Offset = "0x13AF8C0", VA = "0x13AF8C0")]
		public void ShowRandomNumber(int numberToExclude = -1)
		{
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x13B2624", Offset = "0x13B2624", VA = "0x13B2624")]
		private int RandomInstruction(List<int> possibleNumbers)
		{
			return default(int);
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0x13AF988", Offset = "0x13AF988", VA = "0x13AF988")]
		public void ShowNumber(int number, bool automaticHide = true)
		{
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0x13AFA34", Offset = "0x13AFA34", VA = "0x13AFA34")]
		public void HideNumber()
		{
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0x13AFA74", Offset = "0x13AFA74", VA = "0x13AFA74")]
		public void LightUpKey(int keyIndex)
		{
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0x13AFAE0", Offset = "0x13AFAE0", VA = "0x13AFAE0")]
		public void TurnOffKeyLight(int keyIndex)
		{
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0x13AFB50", Offset = "0x13AFB50", VA = "0x13AFB50")]
		public void GiveKeyFeedback(int keyIndex, bool correct)
		{
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0x13AFBC0", Offset = "0x13AFBC0", VA = "0x13AFBC0")]
		public void UpdateDisplayProgress(int operationCount, int operationsPerChunk)
		{
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0x13B2B48", Offset = "0x13B2B48", VA = "0x13B2B48")]
		public TutorialXylophone()
		{
		}
	}
}
namespace AttentionLab.MiniGames.Balance
{
	[Token(Token = "0x2000508")]
	public abstract class BalanceMoment : GameMoment
	{
		[Token(Token = "0x6002659")]
		public abstract override void SetValues();

		[Token(Token = "0x600265A")]
		[Address(RVA = "0x1372D78", Offset = "0x1372D78", VA = "0x1372D78")]
		protected int ParseBallColor(EBALL_COLOR color)
		{
			return default(int);
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0x1372E14", Offset = "0x1372E14", VA = "0x1372E14")]
		protected int ParseSpawner(ESPAWNER_SIDE side)
		{
			return default(int);
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0x1372E30", Offset = "0x1372E30", VA = "0x1372E30")]
		protected int ParsePlate(EHAND_PLATE hand)
		{
			return default(int);
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0x1372E4C", Offset = "0x1372E4C", VA = "0x1372E4C")]
		protected int ParsePlateValidationResult(EPLATE_VALIDATION_RESULT validationResult)
		{
			return default(int);
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0x1372E64", Offset = "0x1372E64", VA = "0x1372E64")]
		protected BalanceMoment()
		{
		}
	}
	[Token(Token = "0x2000509")]
	public class BallData
	{
		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int dispenser;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int color;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB81510", Offset = "0xB81510")]
		public DateTime spawn_timestamp;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB815A0", Offset = "0xB815A0")]
		public DateTime enter_timestamp;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int hand;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB81630", Offset = "0xB81630")]
		public float total_plate_displacement;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB81694", Offset = "0xB81694")]
		public float avg_plate_displacement;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB816F8", Offset = "0xB816F8")]
		public float total_plate_inclination;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB8175C", Offset = "0xB8175C")]
		public float avg_plate_inclination;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int balls_in_plate;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB817C0", Offset = "0xB817C0")]
		public DateTime exit_timestamp;

		[Token(Token = "0x600265F")]
		[Address(RVA = "0x1376800", Offset = "0x1376800", VA = "0x1376800")]
		public BallData(int spawner, int ballColor, DateTime spawnTimestamp, DateTime enterTimestamp, int plate, float totalPlateDisplacement, float averagePlateDisplacement, float totalPlateInclination, float averagePlateInclination, int ballsInPlate, DateTime exitTimestamp)
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class BallBalanceMoment : BalanceMoment
	{
		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ESPAWNER_SIDE _spawner;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly EBALL_COLOR _color;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly EHAND_PLATE _plate;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private readonly int _ballsInPlate;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly DateTime _spawnTimestamp;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly DateTime _enterTimestamp;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly DateTime _exitTimestamp;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly float _totalPlateDisplacement;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private readonly float _averagePlateDisplacement;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly float _totalPlateInclination;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private readonly float _averagePlateInclination;

		[Token(Token = "0x6002660")]
		[Address(RVA = "0x1376344", Offset = "0x1376344", VA = "0x1376344")]
		public BallBalanceMoment(ESPAWNER_SIDE spawner, EBALL_COLOR color, EHAND_PLATE plate, int ballsInPlate, DateTime spawnTimestamp, DateTime enterTimestamp, DateTime exitTimestamp, float totalPlateDisplacement, float averagePlateDisplacement, float totalPlateInclination, float averagePlateInclination)
		{
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0x13766DC", Offset = "0x13766DC", VA = "0x13766DC", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x200050B")]
	public class PlateGoalData
	{
		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int color;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int count;

		[Token(Token = "0x6002662")]
		[Address(RVA = "0x1380CB4", Offset = "0x1380CB4", VA = "0x1380CB4")]
		public PlateGoalData(int goalColor, int goalCount)
		{
		}
	}
	[Token(Token = "0x200050C")]
	public class PlatesCriteriaData
	{
		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlateGoalData[] left_plate;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlateGoalData[] right_plate;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int level;

		[Token(Token = "0x6002663")]
		[Address(RVA = "0x1381AA4", Offset = "0x1381AA4", VA = "0x1381AA4")]
		public PlatesCriteriaData(List<PlateGoalData> leftPlate, List<PlateGoalData> rightPlate, int level)
		{
		}
	}
	[Token(Token = "0x200050D")]
	public class PlatesCriteriaBalanceMoment : BalanceMoment
	{
		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<PlateGoalData> _leftPlateGoals;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<PlateGoalData> _rightPlateGoals;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly int _level;

		[Token(Token = "0x6002664")]
		[Address(RVA = "0x1379EB8", Offset = "0x1379EB8", VA = "0x1379EB8")]
		public PlatesCriteriaBalanceMoment(int level, PlateHud letfPlateHud, PlateHud rightPlateHud)
		{
		}

		[Token(Token = "0x6002665")]
		[Address(RVA = "0x13819F8", Offset = "0x13819F8", VA = "0x13819F8", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x200050E")]
	public class PlateValidationData
	{
		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int result;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB81850", Offset = "0xB81850")]
		public DateTime start_timestamp;

		[Token(Token = "0x6002666")]
		[Address(RVA = "0x13819BC", Offset = "0x13819BC", VA = "0x13819BC")]
		public PlateValidationData(int validationResult, DateTime startTimestamp)
		{
		}
	}
	[Token(Token = "0x200050F")]
	public class ValidationBalanceMoment : BalanceMoment
	{
		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly DateTime _startTimestamp;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly EPLATE_VALIDATION_RESULT _result;

		[Token(Token = "0x6002667")]
		[Address(RVA = "0x137B2D0", Offset = "0x137B2D0", VA = "0x137B2D0")]
		public ValidationBalanceMoment(DateTime startTimestamp, EPLATE_VALIDATION_RESULT result)
		{
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0x1383EB4", Offset = "0x1383EB4", VA = "0x1383EB4", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x2000510")]
	public enum EBALL_COLOR
	{
		[Token(Token = "0x4001FE1")]
		Blue = 130,
		[Token(Token = "0x4001FE2")]
		Red = 0,
		[Token(Token = "0x4001FE3")]
		Green = 70,
		[Token(Token = "0x4001FE4")]
		Purple = 195,
		[Token(Token = "0x4001FE5")]
		Orange = 260,
		[Token(Token = "0x4001FE6")]
		BabyBlue = 320,
		[Token(Token = "0x4001FE7")]
		Yellow = 450,
		[Token(Token = "0x4001FE8")]
		Cyan = 379,
		[Token(Token = "0x4001FE9")]
		Pink = 520
	}
	[Token(Token = "0x2000511")]
	public class Ball : MonoBehaviour
	{
		[Token(Token = "0x4001FEA")]
		public const string BALL_TAG = "Ball";

		[Token(Token = "0x4001FEB")]
		private const float _MIN_HEIGHT = 0.25f;

		[Token(Token = "0x4001FEC")]
		private const string _BALL_COLOR_PROPERTY = "_Hue";

		[Token(Token = "0x4001FED")]
		private const string _DISSOLVE_ANIMATION = "Ball_dissolve";

		[Token(Token = "0x4001FEE")]
		private const string _FADE_ANIMATION = "Ball_fade";

		[Token(Token = "0x4001FEF")]
		private const string _RESET_ANIMATION = "Ball_reset";

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _cachedTransform;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator _animator;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem _particles;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB818F0", Offset = "0xB818F0")]
		private bool <IsDissolving>k__BackingField;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81900", Offset = "0xB81900")]
		private EBALL_COLOR <BallColor>k__BackingField;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81910", Offset = "0xB81910")]
		private Rigidbody <BallRigidbody>k__BackingField;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81920", Offset = "0xB81920")]
		private List<Plate> <TouchingPlates>k__BackingField;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81930", Offset = "0xB81930")]
		private List<Plate> <InsidePlates>k__BackingField;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81940", Offset = "0xB81940")]
		private ESPAWNER_SIDE <Spawner>k__BackingField;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81950", Offset = "0xB81950")]
		private DateTime <SpawnedTimestamp>k__BackingField;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81960", Offset = "0xB81960")]
		private DateTime <EnterPlateTimestamp>k__BackingField;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81970", Offset = "0xB81970")]
		private DateTime <ExitPlateTimestamp>k__BackingField;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81980", Offset = "0xB81980")]
		private Plate <Plate>k__BackingField;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81990", Offset = "0xB81990")]
		private int <ExitPlateBallsInPlate>k__BackingField;

		[Token(Token = "0x17000413")]
		public bool IsDissolving
		{
			[Token(Token = "0x600266A")]
			[Address(RVA = "0x1375130", Offset = "0x1375130", VA = "0x1375130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DDE4", Offset = "0xB8DDE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002669")]
			[Address(RVA = "0x1375124", Offset = "0x1375124", VA = "0x1375124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DDD4", Offset = "0xB8DDD4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000414")]
		public EBALL_COLOR BallColor
		{
			[Token(Token = "0x600266C")]
			[Address(RVA = "0x1375140", Offset = "0x1375140", VA = "0x1375140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DE04", Offset = "0xB8DE04")]
			get
			{
				return default(EBALL_COLOR);
			}
			[Token(Token = "0x600266B")]
			[Address(RVA = "0x1375138", Offset = "0x1375138", VA = "0x1375138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DDF4", Offset = "0xB8DDF4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000415")]
		public Rigidbody BallRigidbody
		{
			[Token(Token = "0x600266E")]
			[Address(RVA = "0x1375150", Offset = "0x1375150", VA = "0x1375150")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DE24", Offset = "0xB8DE24")]
			get
			{
				return null;
			}
			[Token(Token = "0x600266D")]
			[Address(RVA = "0x1375148", Offset = "0x1375148", VA = "0x1375148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DE14", Offset = "0xB8DE14")]
			private set
			{
			}
		}

		[Token(Token = "0x17000416")]
		public List<Plate> TouchingPlates
		{
			[Token(Token = "0x6002670")]
			[Address(RVA = "0x1375160", Offset = "0x1375160", VA = "0x1375160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DE44", Offset = "0xB8DE44")]
			get
			{
				return null;
			}
			[Token(Token = "0x600266F")]
			[Address(RVA = "0x1375158", Offset = "0x1375158", VA = "0x1375158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DE34", Offset = "0xB8DE34")]
			private set
			{
			}
		}

		[Token(Token = "0x17000417")]
		public List<Plate> InsidePlates
		{
			[Token(Token = "0x6002672")]
			[Address(RVA = "0x1375170", Offset = "0x1375170", VA = "0x1375170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DE64", Offset = "0xB8DE64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002671")]
			[Address(RVA = "0x1375168", Offset = "0x1375168", VA = "0x1375168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DE54", Offset = "0xB8DE54")]
			private set
			{
			}
		}

		[Token(Token = "0x17000418")]
		public ESPAWNER_SIDE Spawner
		{
			[Token(Token = "0x6002673")]
			[Address(RVA = "0x1375178", Offset = "0x1375178", VA = "0x1375178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DE74", Offset = "0xB8DE74")]
			get
			{
				return default(ESPAWNER_SIDE);
			}
			[Token(Token = "0x6002674")]
			[Address(RVA = "0x1375180", Offset = "0x1375180", VA = "0x1375180")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DE84", Offset = "0xB8DE84")]
			set
			{
			}
		}

		[Token(Token = "0x17000419")]
		public DateTime SpawnedTimestamp
		{
			[Token(Token = "0x6002675")]
			[Address(RVA = "0x1375188", Offset = "0x1375188", VA = "0x1375188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DE94", Offset = "0xB8DE94")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6002676")]
			[Address(RVA = "0x1375190", Offset = "0x1375190", VA = "0x1375190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DEA4", Offset = "0xB8DEA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700041A")]
		public DateTime EnterPlateTimestamp
		{
			[Token(Token = "0x6002677")]
			[Address(RVA = "0x1375198", Offset = "0x1375198", VA = "0x1375198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DEB4", Offset = "0xB8DEB4")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6002678")]
			[Address(RVA = "0x13751A0", Offset = "0x13751A0", VA = "0x13751A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DEC4", Offset = "0xB8DEC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700041B")]
		public DateTime ExitPlateTimestamp
		{
			[Token(Token = "0x6002679")]
			[Address(RVA = "0x13751A8", Offset = "0x13751A8", VA = "0x13751A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DED4", Offset = "0xB8DED4")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x600267A")]
			[Address(RVA = "0x13751B0", Offset = "0x13751B0", VA = "0x13751B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DEE4", Offset = "0xB8DEE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700041C")]
		public Plate Plate
		{
			[Token(Token = "0x600267B")]
			[Address(RVA = "0x13751B8", Offset = "0x13751B8", VA = "0x13751B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DEF4", Offset = "0xB8DEF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600267C")]
			[Address(RVA = "0x13751C0", Offset = "0x13751C0", VA = "0x13751C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DF04", Offset = "0xB8DF04")]
			set
			{
			}
		}

		[Token(Token = "0x1700041D")]
		public int ExitPlateBallsInPlate
		{
			[Token(Token = "0x600267D")]
			[Address(RVA = "0x13751C8", Offset = "0x13751C8", VA = "0x13751C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DF14", Offset = "0xB8DF14")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600267E")]
			[Address(RVA = "0x13751D0", Offset = "0x13751D0", VA = "0x13751D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DF24", Offset = "0xB8DF24")]
			set
			{
			}
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0x13751D8", Offset = "0x13751D8", VA = "0x13751D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0x137524C", Offset = "0x137524C", VA = "0x137524C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0x13755A4", Offset = "0x13755A4", VA = "0x13755A4")]
		public void Init()
		{
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0x13756F4", Offset = "0x13756F4", VA = "0x13756F4")]
		public void ResetPoolBall(Vector3 position)
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0x13757DC", Offset = "0x13757DC", VA = "0x13757DC")]
		public void ResetBall()
		{
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0x13758D4", Offset = "0x13758D4", VA = "0x13758D4")]
		public void Spawn(Vector3 position, EBALL_COLOR color)
		{
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0x13759AC", Offset = "0x13759AC", VA = "0x13759AC")]
		public void UpdateValidation(float validationPercentage)
		{
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0x1375688", Offset = "0x1375688", VA = "0x1375688")]
		public void ResetValidation()
		{
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0x13752A4", Offset = "0x13752A4", VA = "0x13752A4")]
		public void Dissolve(bool wasBallDestroyed)
		{
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0x13751E8", Offset = "0x13751E8", VA = "0x13751E8")]
		public void PushBallPool()
		{
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0x1375E50", Offset = "0x1375E50", VA = "0x1375E50")]
		public void TossBall(Vector3 force, ForceMode mode)
		{
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0x1375E6C", Offset = "0x1375E6C", VA = "0x1375E6C")]
		public void EnterPlateTrigger(Plate plate)
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0x1376008", Offset = "0x1376008", VA = "0x1376008")]
		public void ExitPlateTrigger(Plate plate)
		{
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0x1376484", Offset = "0x1376484", VA = "0x1376484")]
		public void EnterPlateCollider(Plate plate)
		{
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0x13765B8", Offset = "0x13765B8", VA = "0x13765B8")]
		public void ExitPlateCollider(Plate plate)
		{
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0x13766D4", Offset = "0x13766D4", VA = "0x13766D4")]
		public Ball()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public enum ESPAWNER_WARNING_SLOT
	{
		[Token(Token = "0x4002000")]
		Top,
		[Token(Token = "0x4002001")]
		Mid,
		[Token(Token = "0x4002002")]
		Bot
	}
	[Token(Token = "0x2000513")]
	public enum ESPAWNER_SIDE
	{
		[Token(Token = "0x4002004")]
		Left,
		[Token(Token = "0x4002005")]
		Right
	}
	[Token(Token = "0x2000514")]
	public class BallSpawner : MonoBehaviour
	{
		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB819B0", Offset = "0xB819B0")]
		[SerializeField]
		private Spawner _spawner;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _spawnPoint;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _sphereCastShootTransform;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ESPAWNER_SIDE _side;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _isWaitingPlate;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Action _trackPlateCallback;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _ghostBallTransform;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MeshRenderer ghostBallRenderer;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81A2C", Offset = "0xB81A2C")]
		private EBALL_COLOR <NextBallColor>k__BackingField;

		[Token(Token = "0x1700041E")]
		public EBALL_COLOR NextBallColor
		{
			[Token(Token = "0x6002692")]
			[Address(RVA = "0x1376A04", Offset = "0x1376A04", VA = "0x1376A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DF64", Offset = "0xB8DF64")]
			get
			{
				return default(EBALL_COLOR);
			}
			[Token(Token = "0x6002691")]
			[Address(RVA = "0x13769FC", Offset = "0x13769FC", VA = "0x13769FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DF54", Offset = "0xB8DF54")]
			set
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public static event Action<EBALL_COLOR> SpawnedBallEvent
		{
			[Token(Token = "0x600268F")]
			[Address(RVA = "0x1376894", Offset = "0x1376894", VA = "0x1376894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DF34", Offset = "0xB8DF34")]
			add
			{
			}
			[Token(Token = "0x6002690")]
			[Address(RVA = "0x1376948", Offset = "0x1376948", VA = "0x1376948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DF44", Offset = "0xB8DF44")]
			remove
			{
			}
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0x1376A0C", Offset = "0x1376A0C", VA = "0x1376A0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0x1376A40", Offset = "0x1376A40", VA = "0x1376A40")]
		private void Start()
		{
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0x1376A84", Offset = "0x1376A84", VA = "0x1376A84")]
		private void Update()
		{
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0x1376A48", Offset = "0x1376A48", VA = "0x1376A48")]
		public void ToggleBallPreview(bool enable)
		{
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0x1376E68", Offset = "0x1376E68", VA = "0x1376E68")]
		public void SpawnBall()
		{
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0x1377200", Offset = "0x1377200", VA = "0x1377200")]
		public void TrackPlate(Action callback)
		{
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0x1376E34", Offset = "0x1376E34", VA = "0x1376E34")]
		private void TrackedPlate()
		{
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0x1377210", Offset = "0x1377210", VA = "0x1377210")]
		public void CancelTrackingPlate()
		{
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0x137721C", Offset = "0x137721C", VA = "0x137721C")]
		public BallSpawner()
		{
		}
	}
	[Token(Token = "0x2000515")]
	public enum EPLATE_VALIDATION_RESULT
	{
		[Token(Token = "0x4002011")]
		Successful,
		[Token(Token = "0x4002012")]
		InterruptedBallFall,
		[Token(Token = "0x4002013")]
		InterruptedExtraBall,
		[Token(Token = "0x4002014")]
		InterruptedPlatesIntersected,
		[Token(Token = "0x4002015")]
		InterruptedTimeout
	}
	[Token(Token = "0x2000516")]
	public class Plate : MonoBehaviour
	{
		[Token(Token = "0x4002017")]
		public const string LEFT_PLATE_TAG = "LeftPlate";

		[Token(Token = "0x4002018")]
		public const string RIGHT_PLATE_TAG = "RightPlate";

		[Token(Token = "0x4002019")]
		private const string _VALIDATION_DISC_PROPERTY = "_ValidateDisc";

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB81A4C", Offset = "0xB81A4C")]
		[SerializeField]
		private PlateHud _hud;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _validationDiscRenderer;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<PlateCollisionDetector> _plateDetectors;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PlateAnimator _plateAnimator;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EHAND_PLATE hand;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool _isTrackingData;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool _isCatchingBall;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		private bool _isLearningToTossBalls;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		private bool _isTossingBallsActive;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isTossingBallsOnCooldown;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Action _catchBallCallback;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Action _tossBallsCallback;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 _lastPosition;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion _lastRotation;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform _cachedTransform;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81AC8", Offset = "0xB81AC8")]
		private Dictionary<EBALL_COLOR, List<Ball>> <PlateBalls>k__BackingField;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81AD8", Offset = "0xB81AD8")]
		private bool <IsDestroyingBalls>k__BackingField;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81AE8", Offset = "0xB81AE8")]
		private List<Ball> <AllPlateBalls>k__BackingField;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81AF8", Offset = "0xB81AF8")]
		private List<float> <DeltaPositions>k__BackingField;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81B08", Offset = "0xB81B08")]
		private List<float> <DeltaRotations>k__BackingField;

		[Token(Token = "0x1700041F")]
		public Dictionary<EBALL_COLOR, List<Ball>> PlateBalls
		{
			[Token(Token = "0x600269F")]
			[Address(RVA = "0x137E6A8", Offset = "0x137E6A8", VA = "0x137E6A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DFA4", Offset = "0xB8DFA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600269E")]
			[Address(RVA = "0x137E6A0", Offset = "0x137E6A0", VA = "0x137E6A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DF94", Offset = "0xB8DF94")]
			private set
			{
			}
		}

		[Token(Token = "0x17000420")]
		public bool IsDestroyingBalls
		{
			[Token(Token = "0x60026A1")]
			[Address(RVA = "0x137E6BC", Offset = "0x137E6BC", VA = "0x137E6BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DFC4", Offset = "0xB8DFC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026A0")]
			[Address(RVA = "0x137E6B0", Offset = "0x137E6B0", VA = "0x137E6B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DFB4", Offset = "0xB8DFB4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000421")]
		public List<Ball> AllPlateBalls
		{
			[Token(Token = "0x60026A3")]
			[Address(RVA = "0x137E6CC", Offset = "0x137E6CC", VA = "0x137E6CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DFE4", Offset = "0xB8DFE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026A2")]
			[Address(RVA = "0x137E6C4", Offset = "0x137E6C4", VA = "0x137E6C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DFD4", Offset = "0xB8DFD4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000422")]
		public List<float> DeltaPositions
		{
			[Token(Token = "0x60026A5")]
			[Address(RVA = "0x137E6DC", Offset = "0x137E6DC", VA = "0x137E6DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E004", Offset = "0xB8E004")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026A4")]
			[Address(RVA = "0x137E6D4", Offset = "0x137E6D4", VA = "0x137E6D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DFF4", Offset = "0xB8DFF4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000423")]
		public List<float> DeltaRotations
		{
			[Token(Token = "0x60026A7")]
			[Address(RVA = "0x137E6EC", Offset = "0x137E6EC", VA = "0x137E6EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E024", Offset = "0xB8E024")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026A6")]
			[Address(RVA = "0x137E6E4", Offset = "0x137E6E4", VA = "0x137E6E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E014", Offset = "0xB8E014")]
			private set
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public static event Action PlateHasExtraBalls
		{
			[Token(Token = "0x600269C")]
			[Address(RVA = "0x137E538", Offset = "0x137E538", VA = "0x137E538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DF74", Offset = "0xB8DF74")]
			add
			{
			}
			[Token(Token = "0x600269D")]
			[Address(RVA = "0x137E5EC", Offset = "0x137E5EC", VA = "0x137E5EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8DF84", Offset = "0xB8DF84")]
			remove
			{
			}
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0x137E6F4", Offset = "0x137E6F4", VA = "0x137E6F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x137E96C", Offset = "0x137E96C", VA = "0x137E96C")]
		private void Start()
		{
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0x137E9E0", Offset = "0x137E9E0", VA = "0x137E9E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0x137EA54", Offset = "0x137EA54", VA = "0x137EA54")]
		private void Update()
		{
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0x1378B78", Offset = "0x1378B78", VA = "0x1378B78")]
		public void ResetPlate(bool resetAnimations, bool isPauseReset, bool isPaused)
		{
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0x1375F48", Offset = "0x1375F48", VA = "0x1375F48")]
		public void AddBall(Ball ball)
		{
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0x1375A24", Offset = "0x1375A24", VA = "0x1375A24")]
		public void RemoveBall(Ball ball)
		{
		}

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0x137EBC8", Offset = "0x137EBC8", VA = "0x137EBC8")]
		public void CheckBalls()
		{
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0x137CE94", Offset = "0x137CE94", VA = "0x137CE94")]
		public void ToggleHudVisibility(bool isVisible)
		{
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0x1379318", Offset = "0x1379318", VA = "0x1379318")]
		public void SetColors(EBALL_COLOR color1, EBALL_COLOR color2, EBALL_COLOR color3)
		{
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0x137CD48", Offset = "0x137CD48", VA = "0x137CD48")]
		public void SetupHud()
		{
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0x137CD94", Offset = "0x137CD94", VA = "0x137CD94")]
		public void UpdateHud()
		{
		}

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0x137F758", Offset = "0x137F758", VA = "0x137F758")]
		public PlateHud GetHud()
		{
			return null;
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0x137F760", Offset = "0x137F760", VA = "0x137F760")]
		public void ToggleBallsTossing(bool isActive)
		{
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0x137F76C", Offset = "0x137F76C", VA = "0x137F76C")]
		public void StartTossBallsLearning(Action callback)
		{
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0x137F77C", Offset = "0x137F77C", VA = "0x137F77C")]
		public void StopTossBallsLearning()
		{
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x137F788", Offset = "0x137F788", VA = "0x137F788")]
		private void InputSystem_IndividualTriggerPressed(InputSystem sender, InputType inputType)
		{
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x137F8F8", Offset = "0x137F8F8", VA = "0x137F8F8")]
		private void TossBalls()
		{
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0x137FD30", Offset = "0x137FD30", VA = "0x137FD30")]
		public void TossBallsCooldownComplete()
		{
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0x137ACCC", Offset = "0x137ACCC", VA = "0x137ACCC")]
		public void ValidateGoal()
		{
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x137FD54", Offset = "0x137FD54", VA = "0x137FD54")]
		private void UpdateGoalValidation(float validationPercentage)
		{
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0x137FE8C", Offset = "0x137FE8C", VA = "0x137FE8C")]
		private void PlateValidated()
		{
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0x137B314", Offset = "0x137B314", VA = "0x137B314")]
		public void CancelGoalValidation()
		{
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0x137FEEC", Offset = "0x137FEEC", VA = "0x137FEEC")]
		private void UpdateCancelValidation(float validationPercentage)
		{
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0x137FF64", Offset = "0x137FF64", VA = "0x137FF64")]
		public void ToggleBarrier(bool isActive)
		{
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x137FF88", Offset = "0x137FF88", VA = "0x137FF88")]
		public void CatchBall(Action callback)
		{
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0x1378A78", Offset = "0x1378A78", VA = "0x1378A78")]
		public void SetPlateCollisionDetectors(List<Vector3> colliderPositions)
		{
		}

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0x137CF58", Offset = "0x137CF58", VA = "0x137CF58")]
		public void StartPlatesCollision()
		{
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0x137D0D0", Offset = "0x137D0D0", VA = "0x137D0D0")]
		public void StopPlatesCollision()
		{
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0x137FFA0", Offset = "0x137FFA0", VA = "0x137FFA0")]
		public void StartBallsDestruction()
		{
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0x137FF98", Offset = "0x137FF98", VA = "0x137FF98")]
		public void StopBallsDestruction()
		{
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0x137EC24", Offset = "0x137EC24", VA = "0x137EC24")]
		private void StartTracking()
		{
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0x137EF10", Offset = "0x137EF10", VA = "0x137EF10")]
		private void StopTracking()
		{
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0x137EC7C", Offset = "0x137EC7C", VA = "0x137EC7C")]
		private void TrackPosition()
		{
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0x137ED78", Offset = "0x137ED78", VA = "0x137ED78")]
		private void TrackInclination()
		{
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0x137641C", Offset = "0x137641C", VA = "0x137641C")]
		public void ClearTracking()
		{
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0x13800EC", Offset = "0x13800EC", VA = "0x13800EC")]
		public Plate()
		{
		}
	}
	[Token(Token = "0x2000517")]
	public enum EPLATE_ANIMATION
	{
		[Token(Token = "0x400202F")]
		REVEAL,
		[Token(Token = "0x4002030")]
		COOLDOWN,
		[Token(Token = "0x4002031")]
		COOLDOWN_RESET,
		[Token(Token = "0x4002032")]
		COLLISION_START,
		[Token(Token = "0x4002033")]
		COLLISION_LOOP,
		[Token(Token = "0x4002034")]
		COLLISION_RESET,
		[Token(Token = "0x4002035")]
		SHOW_BARRIER,
		[Token(Token = "0x4002036")]
		HIDE_BARRIER
	}
	[Token(Token = "0x2000518")]
	public class PlateAnimator : MonoBehaviour
	{
		[Token(Token = "0x4002037")]
		private const string _REVEAL_ANIMATION = "Plates_Materialize";

		[Token(Token = "0x4002038")]
		private const string _COOLDOWN_ANIMATION = "Plates_Cooldown";

		[Token(Token = "0x4002039")]
		private const string _COOLDOWN_RESET_ANIMATION = "Plates_Cooldown_Reset";

		[Token(Token = "0x400203A")]
		private const string _COLLISION_START_ANIMATION = "Plates_Collision_Start";

		[Token(Token = "0x400203B")]
		private const string _COLLISION_LOOP_ANIMATION = "Plates_Collision_Loop";

		[Token(Token = "0x400203C")]
		private const string _COLLISION_RESET_ANIMATION = "Plates_Collision_Reset";

		[Token(Token = "0x400203D")]
		private const string _SHOW_BARRIER_ANIMATION = "Plate_Barrier_Going_Up";

		[Token(Token = "0x400203E")]
		private const string _HIDE_BARRIER_ANIMATION = "Plate_Barrier_Going_Down";

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Plate _plate;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator _animator;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimatorStateInfo _stateInfo;

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0x13800F4", Offset = "0x13800F4", VA = "0x13800F4")]
		public void Awake()
		{
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0x138014C", Offset = "0x138014C", VA = "0x138014C")]
		public void Start()
		{
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0x137EE88", Offset = "0x137EE88", VA = "0x137EE88")]
		public void PlayAnimation(EPLATE_ANIMATION animation)
		{
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0x1380154", Offset = "0x1380154", VA = "0x1380154")]
		public void StartBallsDestruction()
		{
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0x138021C", Offset = "0x138021C", VA = "0x138021C")]
		public void TossBallsCooldownComplete()
		{
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0x1380234", Offset = "0x1380234", VA = "0x1380234")]
		public PlateAnimator()
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class PlateBottom : MonoBehaviour
	{
		[Token(Token = "0x60026D3")]
		[Address(RVA = "0x138023C", Offset = "0x138023C", VA = "0x138023C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0x138047C", Offset = "0x138047C", VA = "0x138047C")]
		public PlateBottom()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public class PlateCollider : MonoBehaviour
	{
		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Plate plate;

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0x1380484", Offset = "0x1380484", VA = "0x1380484")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0x13807CC", Offset = "0x13807CC", VA = "0x13807CC")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0x1380904", Offset = "0x1380904", VA = "0x1380904")]
		public PlateCollider()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class PlateCollisionDetector : MonoBehaviour
	{
		[Token(Token = "0x60026D8")]
		[Address(RVA = "0x138090C", Offset = "0x138090C", VA = "0x138090C")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0x1380ADC", Offset = "0x1380ADC", VA = "0x1380ADC")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0x1380CAC", Offset = "0x1380CAC", VA = "0x1380CAC")]
		public PlateCollisionDetector()
		{
		}
	}
	[Token(Token = "0x200051C")]
	public class PlateHud : MonoBehaviour
	{
		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Plate _plate;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlateSlotHud _color1Slot;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlateSlotHud _color2Slot;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PlateSlotHud _color3Slot;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _hasExtraBalls;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81B68", Offset = "0xB81B68")]
		private EBALL_COLOR <Color1>k__BackingField;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81B78", Offset = "0xB81B78")]
		private EBALL_COLOR <Color2>k__BackingField;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81B88", Offset = "0xB81B88")]
		private EBALL_COLOR <Color3>k__BackingField;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81B98", Offset = "0xB81B98")]
		private int <Color1Count>k__BackingField;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81BA8", Offset = "0xB81BA8")]
		private int <Color2Count>k__BackingField;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81BB8", Offset = "0xB81BB8")]
		private int <Color3Count>k__BackingField;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81BC8", Offset = "0xB81BC8")]
		private int <Color1Goal>k__BackingField;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81BD8", Offset = "0xB81BD8")]
		private int <Color2Goal>k__BackingField;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81BE8", Offset = "0xB81BE8")]
		private int <Color3Goal>k__BackingField;

		[Token(Token = "0x17000424")]
		public EBALL_COLOR Color1
		{
			[Token(Token = "0x60026DC")]
			[Address(RVA = "0x1380CF4", Offset = "0x1380CF4", VA = "0x1380CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E044", Offset = "0xB8E044")]
			get
			{
				return default(EBALL_COLOR);
			}
			[Token(Token = "0x60026DB")]
			[Address(RVA = "0x1380CEC", Offset = "0x1380CEC", VA = "0x1380CEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E034", Offset = "0xB8E034")]
			private set
			{
			}
		}

		[Token(Token = "0x17000425")]
		public EBALL_COLOR Color2
		{
			[Token(Token = "0x60026DE")]
			[Address(RVA = "0x1380D04", Offset = "0x1380D04", VA = "0x1380D04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E064", Offset = "0xB8E064")]
			get
			{
				return default(EBALL_COLOR);
			}
			[Token(Token = "0x60026DD")]
			[Address(RVA = "0x1380CFC", Offset = "0x1380CFC", VA = "0x1380CFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E054", Offset = "0xB8E054")]
			private set
			{
			}
		}

		[Token(Token = "0x17000426")]
		public EBALL_COLOR Color3
		{
			[Token(Token = "0x60026E0")]
			[Address(RVA = "0x1380D14", Offset = "0x1380D14", VA = "0x1380D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E084", Offset = "0xB8E084")]
			get
			{
				return default(EBALL_COLOR);
			}
			[Token(Token = "0x60026DF")]
			[Address(RVA = "0x1380D0C", Offset = "0x1380D0C", VA = "0x1380D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E074", Offset = "0xB8E074")]
			private set
			{
			}
		}

		[Token(Token = "0x17000427")]
		public int Color1Count
		{
			[Token(Token = "0x60026E2")]
			[Address(RVA = "0x1380D24", Offset = "0x1380D24", VA = "0x1380D24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E0A4", Offset = "0xB8E0A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60026E1")]
			[Address(RVA = "0x1380D1C", Offset = "0x1380D1C", VA = "0x1380D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E094", Offset = "0xB8E094")]
			private set
			{
			}
		}

		[Token(Token = "0x17000428")]
		public int Color2Count
		{
			[Token(Token = "0x60026E4")]
			[Address(RVA = "0x1380D34", Offset = "0x1380D34", VA = "0x1380D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E0C4", Offset = "0xB8E0C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60026E3")]
			[Address(RVA = "0x1380D2C", Offset = "0x1380D2C", VA = "0x1380D2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E0B4", Offset = "0xB8E0B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000429")]
		public int Color3Count
		{
			[Token(Token = "0x60026E6")]
			[Address(RVA = "0x1380D44", Offset = "0x1380D44", VA = "0x1380D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E0E4", Offset = "0xB8E0E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60026E5")]
			[Address(RVA = "0x1380D3C", Offset = "0x1380D3C", VA = "0x1380D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E0D4", Offset = "0xB8E0D4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700042A")]
		public int Color1Goal
		{
			[Token(Token = "0x60026E8")]
			[Address(RVA = "0x1380D54", Offset = "0x1380D54", VA = "0x1380D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E104", Offset = "0xB8E104")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60026E7")]
			[Address(RVA = "0x1380D4C", Offset = "0x1380D4C", VA = "0x1380D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E0F4", Offset = "0xB8E0F4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700042B")]
		public int Color2Goal
		{
			[Token(Token = "0x60026EA")]
			[Address(RVA = "0x1380D64", Offset = "0x1380D64", VA = "0x1380D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E124", Offset = "0xB8E124")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60026E9")]
			[Address(RVA = "0x1380D5C", Offset = "0x1380D5C", VA = "0x1380D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E114", Offset = "0xB8E114")]
			private set
			{
			}
		}

		[Token(Token = "0x1700042C")]
		public int Color3Goal
		{
			[Token(Token = "0x60026EC")]
			[Address(RVA = "0x1380D74", Offset = "0x1380D74", VA = "0x1380D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E144", Offset = "0xB8E144")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60026EB")]
			[Address(RVA = "0x1380D6C", Offset = "0x1380D6C", VA = "0x1380D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E134", Offset = "0xB8E134")]
			private set
			{
			}
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0x137EF4C", Offset = "0x137EF4C", VA = "0x137EF4C")]
		public void SetHudColors(EBALL_COLOR color1, EBALL_COLOR color2, EBALL_COLOR color3)
		{
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0x137EF58", Offset = "0x137EF58", VA = "0x137EF58")]
		public void SetupHud()
		{
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0x137F320", Offset = "0x137F320", VA = "0x137F320")]
		public void UpdateHud()
		{
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0x1381100", Offset = "0x1381100", VA = "0x1381100")]
		private void UpdateSlotHud(PlateSlotHud slot, int count, int goal)
		{
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0x137EF18", Offset = "0x137EF18", VA = "0x137EF18")]
		public void ToggleHudVisibility(bool isVisible)
		{
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0x13814F4", Offset = "0x13814F4", VA = "0x13814F4")]
		public PlateHud()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public class PlateSlotHud : MonoBehaviour
	{
		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Color _HUD_SLOT_GOAL_VALIDATED_COLOR;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Color _HUD_SLOT_GOAL_NOT_VALID_COLOR;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Color _HUD_SLOT_GOAL_NOT_REACHED_COLOR;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly Vector3 _ZERO_SLOTS_TOP_BOX_POSITION;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private readonly Vector3 _ONE_SLOT_TOP_BOX_POSITION;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly Vector3 _TWO_SLOTS_TOP_BOX_POSITION;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private readonly Vector3 _THREE_SLOTS_TOP_BOX_POSITION;

		[Token(Token = "0x4002058")]
		private const string _BALL_COLOR_PROPERTY = "_Hue";

		[Token(Token = "0x4002059")]
		private const string _BALL_SLOTS_COUNT_PROPERTY = "_BarAmount";

		[Token(Token = "0x400205A")]
		private const string _BALL_SLOTS_FILLED_PROPERTY = "_BarsFilled";

		[Token(Token = "0x400205B")]
		private const string _FRAME_COLOR_PROPERTY = "_FrameColor";

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Image _slotImage;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Image _topBoxImage;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject _goalReachedImage;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Text _extraBallsLabel;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _goal;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int _lastBallsCount;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<int, Vector3> _slotsTopBoxPosition;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81C38", Offset = "0xB81C38")]
		private bool <IsVisible>k__BackingField;

		[Token(Token = "0x1700042D")]
		public bool IsVisible
		{
			[Token(Token = "0x60026F4")]
			[Address(RVA = "0x1381508", Offset = "0x1381508", VA = "0x1381508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E164", Offset = "0xB8E164")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026F3")]
			[Address(RVA = "0x13814FC", Offset = "0x13814FC", VA = "0x13814FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E154", Offset = "0xB8E154")]
			private set
			{
			}
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0x1380D7C", Offset = "0x1380D7C", VA = "0x1380D7C")]
		public void SetupHudSlot(EBALL_COLOR slotColor, int slots)
		{
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0x1381188", Offset = "0x1381188", VA = "0x1381188")]
		public void UpdateHudSlot(int balls)
		{
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0x13814BC", Offset = "0x13814BC", VA = "0x13814BC")]
		public void ToggleHudSlotVisibility(bool isVisible)
		{
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0x1381510", Offset = "0x1381510", VA = "0x1381510")]
		public PlateSlotHud()
		{
		}
	}
	[Token(Token = "0x200051E")]
	public class PlateTrigger : MonoBehaviour
	{
		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Plate _plate;

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0x13816C0", Offset = "0x13816C0", VA = "0x13816C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0x1381734", Offset = "0x1381734", VA = "0x1381734")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0x1381874", Offset = "0x1381874", VA = "0x1381874")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0x13819B4", Offset = "0x13819B4", VA = "0x13819B4")]
		public PlateTrigger()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public class Spawner : MonoBehaviour
	{
		[Token(Token = "0x20008C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73CC4", Offset = "0xB73CC4")]
		private sealed class <SpawnBall_Coroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Spawner <>4__this;

			[Token(Token = "0x4002FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000626")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003530")]
				[Address(RVA = "0x138258C", Offset = "0x138258C", VA = "0x138258C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000627")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003532")]
				[Address(RVA = "0x13825F8", Offset = "0x13825F8", VA = "0x13825F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600352D")]
			[Address(RVA = "0x13822E8", Offset = "0x13822E8", VA = "0x13822E8")]
			[DebuggerHidden]
			public <SpawnBall_Coroutine>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x600352E")]
			[Address(RVA = "0x138231C", Offset = "0x138231C", VA = "0x138231C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600352F")]
			[Address(RVA = "0x1382320", Offset = "0x1382320", VA = "0x1382320", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003531")]
			[Address(RVA = "0x1382594", Offset = "0x1382594", VA = "0x1382594", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002065")]
		private const string _BALL_PREVIEW_COLOR_PROPERTY = "_Hue";

		[Token(Token = "0x4002066")]
		private const string _LEFT_SPAWNER_COLOR_PROPERTY = "_Hue_L";

		[Token(Token = "0x4002067")]
		private const string _RIGHT_SPAWNER_COLOR_PROPERTY = "_Hue_R";

		[Token(Token = "0x4002068")]
		private const string _WARNING_TOGGLE_TOP_PROPERTY = "_WarningToggleTop";

		[Token(Token = "0x4002069")]
		private const string _WARNING_TOGGLE_MID_PROPERTY = "_WarningToggleMid";

		[Token(Token = "0x400206A")]
		private const string _WARNING_TOGGLE_BOT_PROPERTY = "_WarningToggleBot";

		[Token(Token = "0x400206B")]
		private const string _TRIGGER_OPEN_SPAWNER = "Dispenser_In";

		[Token(Token = "0x400206C")]
		private const string _TRIGGER_CLOSE_SPAWNER = "Dispenser_Out";

		[Token(Token = "0x400206D")]
		private const string _TRIGGER_PRESS_BUTTONS = "Dispenser_buttons";

		[Token(Token = "0x400206E")]
		private const string _TRIGGER_SPAWN_BALL = "Dispenser_dispensing";

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SkinnedMeshRenderer _spawnerMesh;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BallSpawner _leftSpawner;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BallSpawner _rightSpawner;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IEnumerator _spawnCoroutine;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81C88", Offset = "0xB81C88")]
		private bool <IsReady>k__BackingField;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81C98", Offset = "0xB81C98")]
		private bool <IsSpawning>k__BackingField;

		[Token(Token = "0x1700042E")]
		public bool IsReady
		{
			[Token(Token = "0x60026FE")]
			[Address(RVA = "0x13820AC", Offset = "0x13820AC", VA = "0x13820AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E184", Offset = "0xB8E184")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026FD")]
			[Address(RVA = "0x13820A0", Offset = "0x13820A0", VA = "0x13820A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E174", Offset = "0xB8E174")]
			private set
			{
			}
		}

		[Token(Token = "0x1700042F")]
		public bool IsSpawning
		{
			[Token(Token = "0x6002700")]
			[Address(RVA = "0x13820C0", Offset = "0x13820C0", VA = "0x13820C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E1A4", Offset = "0xB8E1A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026FF")]
			[Address(RVA = "0x13820B4", Offset = "0x13820B4", VA = "0x13820B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E194", Offset = "0xB8E194")]
			private set
			{
			}
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0x13820C8", Offset = "0x13820C8", VA = "0x13820C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0x13820D0", Offset = "0x13820D0", VA = "0x13820D0")]
		public void ResetSpawner(bool resetAnimator)
		{
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0x137E2C4", Offset = "0x137E2C4", VA = "0x137E2C4")]
		public void Show()
		{
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0x1382228", Offset = "0x1382228", VA = "0x1382228")]
		public void OpenSpawnerComplete()
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0x137896C", Offset = "0x137896C", VA = "0x137896C")]
		public void Hide(bool playAnimation)
		{
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0x1382234", Offset = "0x1382234", VA = "0x1382234")]
		public void CloseSpawnerComplete()
		{
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x137882C", Offset = "0x137882C", VA = "0x137882C")]
		public void PressButtons()
		{
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0x137C00C", Offset = "0x137C00C", VA = "0x137C00C")]
		public void SpawnBalls(List<EBALL_COLOR> leftColors, List<EBALL_COLOR> rightColors)
		{
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0x1382274", Offset = "0x1382274", VA = "0x1382274")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8E1B4", Offset = "0xB8E1B4")]
		private IEnumerator SpawnBall_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0x137C7A0", Offset = "0x137C7A0", VA = "0x137C7A0")]
		public void ActivateSpawnWarning(ESPAWNER_WARNING_SLOT slot)
		{
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0x138212C", Offset = "0x138212C", VA = "0x138212C")]
		public void DeactivateSpawnWarnings()
		{
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0x138220C", Offset = "0x138220C", VA = "0x138220C")]
		private void PlayAnimation(string animation)
		{
		}

		[Token(Token = "0x600270D")]
		[Address(RVA = "0x13821F0", Offset = "0x13821F0", VA = "0x13821F0")]
		private void ResetAnimator()
		{
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0x1382314", Offset = "0x1382314", VA = "0x1382314")]
		public Spawner()
		{
		}
	}
	[Token(Token = "0x2000520")]
	internal class BalanceProgressionManager : ProgressionManager
	{
		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<EHAND_PLATE, Dictionary<EBALL_COLOR, List<int>>> _configGoals;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<EHAND_PLATE, Dictionary<EBALL_COLOR, List<int>>> _randomGoals;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private BalanceLevelConfig[] _levels;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81CA8", Offset = "0xB81CA8")]
		private static BalanceProgressionManager <Instance>k__BackingField;

		[Token(Token = "0x17000430")]
		public static BalanceProgressionManager Instance
		{
			[Token(Token = "0x600270F")]
			[Address(RVA = "0x1372E74", Offset = "0x1372E74", VA = "0x1372E74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E218", Offset = "0xB8E218")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002710")]
			[Address(RVA = "0x1372EC4", Offset = "0x1372EC4", VA = "0x1372EC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E228", Offset = "0xB8E228")]
			private set
			{
			}
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0x1372F18", Offset = "0x1372F18", VA = "0x1372F18")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6002712")]
		[Address(RVA = "0x1372F74", Offset = "0x1372F74", VA = "0x1372F74", Slot = "4")]
		public override void Setup(GameConfig gameConfig, int startLevel, bool isFirstTime)
		{
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0x1373A54", Offset = "0x1373A54", VA = "0x1373A54")]
		public void UpdateGoals()
		{
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0x13741A0", Offset = "0x13741A0", VA = "0x13741A0", Slot = "7")]
		public override void CountSuccess(int overridePoints = int.MinValue)
		{
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0x137493C", Offset = "0x137493C", VA = "0x137493C", Slot = "10")]
		protected override void ApplyTimeoutPenalty()
		{
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0x13741E4", Offset = "0x13741E4", VA = "0x13741E4")]
		private void GenerateRandomGoals()
		{
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0x1374A14", Offset = "0x1374A14", VA = "0x1374A14")]
		public int PlateBallColorGoal(EHAND_PLATE hand, EBALL_COLOR color)
		{
			return default(int);
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0x1374B8C", Offset = "0x1374B8C", VA = "0x1374B8C")]
		public bool HasRandomGoals()
		{
			return default(bool);
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0x1374B94", Offset = "0x1374B94", VA = "0x1374B94")]
		public BalanceProgressionManager()
		{
		}
	}
	[Token(Token = "0x2000521")]
	public struct PlateGoals
	{
		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftPlateRedBalls;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int leftPlateGreenBalls;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int leftPlateBlueBalls;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int rightPlateRedBalls;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int rightPlateGreenBalls;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int rightPlateBlueBalls;
	}
	[Token(Token = "0x2000522")]
	public class GameManager : MonoBehaviour
	{
		[Token(Token = "0x20008C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73CD4", Offset = "0xB73CD4")]
		private sealed class <DelayStartGameplay>d__88 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameManager <>4__this;

			[Token(Token = "0x17000628")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003536")]
				[Address(RVA = "0x137E4C4", Offset = "0x137E4C4", VA = "0x137E4C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000629")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003538")]
				[Address(RVA = "0x137E530", Offset = "0x137E530", VA = "0x137E530", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003533")]
			[Address(RVA = "0x13793C0", Offset = "0x13793C0", VA = "0x13793C0")]
			[DebuggerHidden]
			public <DelayStartGameplay>d__88(int <>1__state)
			{
			}

			[Token(Token = "0x6003534")]
			[Address(RVA = "0x137E3FC", Offset = "0x137E3FC", VA = "0x137E3FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003535")]
			[Address(RVA = "0x137E400", Offset = "0x137E400", VA = "0x137E400", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003537")]
			[Address(RVA = "0x137E4CC", Offset = "0x137E4CC", VA = "0x137E4CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB81CB8", Offset = "0xB81CB8")]
		[SerializeField]
		private GameController _gameController;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BalanceRobot robot;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BalanceConfig gameConfig;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Plate leftPlate;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Plate rightPlate;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Spawner spawner;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BallSpawner leftSpawner;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BallSpawner rightSpawner;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TutorialController tutorialController;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Tutorial tutorial;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private BalanceProgressionManager _progressionManager;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _areGoalsSpawned;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _isValidatingGoals;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool _isGoalReached;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _nextSpawnTime;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentTimeScale;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private EBALL_COLOR _color1;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EBALL_COLOR _color2;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private EBALL_COLOR _color3;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _currentColorSetIndex;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<int> _allColorSets;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<ESPAWNER_SIDE, List<EBALL_COLOR>> _spawnerColors;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<EBALL_COLOR, int> _spawnedBalls;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<EBALL_COLOR, int> _ballColorIndex;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Dictionary<int, Dictionary<int, EBALL_COLOR>> _ballColorSets;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Dictionary<EHAND_PLATE, bool> _platesValidated;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private DateTime _currentValidationStartTimestamp;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private IEnumerator _startGameplayCoroutine;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81D34", Offset = "0xB81D34")]
		private static GameManager <Instance>k__BackingField;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81D44", Offset = "0xB81D44")]
		private bool <IsRunning>k__BackingField;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81D54", Offset = "0xB81D54")]
		private bool <AreSpawnersActive>k__BackingField;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81D64", Offset = "0xB81D64")]
		private bool <IsSlowMotionActive>k__BackingField;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81D74", Offset = "0xB81D74")]
		private bool <IsPlatesCollisionActive>k__BackingField;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81D84", Offset = "0xB81D84")]
		private bool <ArePlatesColliding>k__BackingField;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81D94", Offset = "0xB81D94")]
		private int <PlateTriggersColliding>k__BackingField;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81DA4", Offset = "0xB81DA4")]
		private bool <ArePlateGoalsSwitched>k__BackingField;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81DB4", Offset = "0xB81DB4")]
		private List<EBALL_COLOR> <CurrentGoalsColors>k__BackingField;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81DC4", Offset = "0xB81DC4")]
		private List<EBALL_COLOR> <CurrentColorSet>k__BackingField;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81DD4", Offset = "0xB81DD4")]
		private Dictionary<EBALL_COLOR, EBALL_COLOR> <RandomColors>k__BackingField;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float _slowdownPitchFactor;

		[Token(Token = "0x17000431")]
		public static GameManager Instance
		{
			[Token(Token = "0x600271A")]
			[Address(RVA = "0x1377224", Offset = "0x1377224", VA = "0x1377224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E238", Offset = "0xB8E238")]
			get
			{
				return null;
			}
			[Token(Token = "0x600271B")]
			[Address(RVA = "0x1377274", Offset = "0x1377274", VA = "0x1377274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E248", Offset = "0xB8E248")]
			private set
			{
			}
		}

		[Token(Token = "0x17000432")]
		public bool IsRunning
		{
			[Token(Token = "0x600271D")]
			[Address(RVA = "0x13772D4", Offset = "0x13772D4", VA = "0x13772D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E268", Offset = "0xB8E268")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600271C")]
			[Address(RVA = "0x13772C8", Offset = "0x13772C8", VA = "0x13772C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E258", Offset = "0xB8E258")]
			private set
			{
			}
		}

		[Token(Token = "0x17000433")]
		public bool AreSpawnersActive
		{
			[Token(Token = "0x600271F")]
			[Address(RVA = "0x13772E8", Offset = "0x13772E8", VA = "0x13772E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E288", Offset = "0xB8E288")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600271E")]
			[Address(RVA = "0x13772DC", Offset = "0x13772DC", VA = "0x13772DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E278", Offset = "0xB8E278")]
			private set
			{
			}
		}

		[Token(Token = "0x17000434")]
		public bool IsSlowMotionActive
		{
			[Token(Token = "0x6002721")]
			[Address(RVA = "0x13772FC", Offset = "0x13772FC", VA = "0x13772FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E2A8", Offset = "0xB8E2A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002720")]
			[Address(RVA = "0x13772F0", Offset = "0x13772F0", VA = "0x13772F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E298", Offset = "0xB8E298")]
			private set
			{
			}
		}

		[Token(Token = "0x17000435")]
		public bool IsPlatesCollisionActive
		{
			[Token(Token = "0x6002723")]
			[Address(RVA = "0x1377310", Offset = "0x1377310", VA = "0x1377310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E2C8", Offset = "0xB8E2C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002722")]
			[Address(RVA = "0x1377304", Offset = "0x1377304", VA = "0x1377304")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E2B8", Offset = "0xB8E2B8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000436")]
		public bool ArePlatesColliding
		{
			[Token(Token = "0x6002725")]
			[Address(RVA = "0x1377324", Offset = "0x1377324", VA = "0x1377324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E2E8", Offset = "0xB8E2E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002724")]
			[Address(RVA = "0x1377318", Offset = "0x1377318", VA = "0x1377318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E2D8", Offset = "0xB8E2D8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000437")]
		public int PlateTriggersColliding
		{
			[Token(Token = "0x6002727")]
			[Address(RVA = "0x1377334", Offset = "0x1377334", VA = "0x1377334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E308", Offset = "0xB8E308")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002726")]
			[Address(RVA = "0x137732C", Offset = "0x137732C", VA = "0x137732C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E2F8", Offset = "0xB8E2F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000438")]
		public bool ArePlateGoalsSwitched
		{
			[Token(Token = "0x6002729")]
			[Address(RVA = "0x1377348", Offset = "0x1377348", VA = "0x1377348")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E328", Offset = "0xB8E328")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002728")]
			[Address(RVA = "0x137733C", Offset = "0x137733C", VA = "0x137733C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E318", Offset = "0xB8E318")]
			private set
			{
			}
		}

		[Token(Token = "0x17000439")]
		public List<EBALL_COLOR> CurrentGoalsColors
		{
			[Token(Token = "0x600272B")]
			[Address(RVA = "0x1377358", Offset = "0x1377358", VA = "0x1377358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E348", Offset = "0xB8E348")]
			get
			{
				return null;
			}
			[Token(Token = "0x600272A")]
			[Address(RVA = "0x1377350", Offset = "0x1377350", VA = "0x1377350")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E338", Offset = "0xB8E338")]
			private set
			{
			}
		}

		[Token(Token = "0x1700043A")]
		public List<EBALL_COLOR> CurrentColorSet
		{
			[Token(Token = "0x600272D")]
			[Address(RVA = "0x1377368", Offset = "0x1377368", VA = "0x1377368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E368", Offset = "0xB8E368")]
			get
			{
				return null;
			}
			[Token(Token = "0x600272C")]
			[Address(RVA = "0x1377360", Offset = "0x1377360", VA = "0x1377360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E358", Offset = "0xB8E358")]
			set
			{
			}
		}

		[Token(Token = "0x1700043B")]
		public Dictionary<EBALL_COLOR, EBALL_COLOR> RandomColors
		{
			[Token(Token = "0x600272F")]
			[Address(RVA = "0x1377378", Offset = "0x1377378", VA = "0x1377378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E388", Offset = "0xB8E388")]
			get
			{
				return null;
			}
			[Token(Token = "0x600272E")]
			[Address(RVA = "0x1377370", Offset = "0x1377370", VA = "0x1377370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E378", Offset = "0xB8E378")]
			private set
			{
			}
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0x1377380", Offset = "0x1377380", VA = "0x1377380")]
		private void GameController_GameWillStart(GameController sender)
		{
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0x1377780", Offset = "0x1377780", VA = "0x1377780")]
		private void GameController_GameStart(GameController sender, int startLevel, bool isFirstTime)
		{
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0x1377AEC", Offset = "0x1377AEC", VA = "0x1377AEC")]
		private void GameController_Loaded(GameController sender)
		{
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0x1377BAC", Offset = "0x1377BAC", VA = "0x1377BAC")]
		private void GameController_WillUnload(GameController sender)
		{
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0x1377C6C", Offset = "0x1377C6C", VA = "0x1377C6C")]
		private void GameController_GamePaused(GameController sender, bool paused, SceneStatusType statusType)
		{
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0x1377E2C", Offset = "0x1377E2C", VA = "0x1377E2C")]
		private void GameController_GameStop(GameController sender)
		{
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0x1378104", Offset = "0x1378104", VA = "0x1378104")]
		private void GameController_GameEnd(GameController sender)
		{
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0x1378158", Offset = "0x1378158", VA = "0x1378158")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0x1378728", Offset = "0x1378728", VA = "0x1378728")]
		private void Update()
		{
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0x137887C", Offset = "0x137887C", VA = "0x137887C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0x13788F4", Offset = "0x13788F4", VA = "0x13788F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0x137742C", Offset = "0x137742C", VA = "0x137742C")]
		public void StartData()
		{
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0x1377E80", Offset = "0x1377E80", VA = "0x1377E80")]
		public void ResetData(bool wereGoalsValidated, bool playBallAnimations, bool resetAnimations)
		{
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0x1377DCC", Offset = "0x1377DCC", VA = "0x1377DCC")]
		public void GamePausedResetData(bool paused)
		{
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0x13790F0", Offset = "0x13790F0", VA = "0x13790F0")]
		public void SetupTutorialColors()
		{
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0x137933C", Offset = "0x137933C", VA = "0x137933C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8E398", Offset = "0xB8E398")]
		private IEnumerator DelayStartGameplay(float delay)
		{
			return null;
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0x1377910", Offset = "0x1377910", VA = "0x1377910")]
		private void StartGameplay()
		{
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0x13793EC", Offset = "0x13793EC", VA = "0x13793EC")]
		private void RandomizeGoals()
		{
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0x137A2B0", Offset = "0x137A2B0", VA = "0x137A2B0")]
		public void CheckGoals()
		{
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0x137AA68", Offset = "0x137AA68", VA = "0x137AA68")]
		private void ValidateGoals()
		{
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0x137AAFC", Offset = "0x137AAFC", VA = "0x137AAFC")]
		private void CancelGoalsValidation(EPLATE_VALIDATION_RESULT result)
		{
		}

		[Token(Token = "0x6002745")]
		[Address(RVA = "0x137B84C", Offset = "0x137B84C", VA = "0x137B84C")]
		private void CompletedGoals()
		{
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0x137B92C", Offset = "0x137B92C", VA = "0x137B92C")]
		public void PlateValidated(EHAND_PLATE hand)
		{
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0x137499C", Offset = "0x137499C", VA = "0x137499C")]
		public void Timeout()
		{
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0x1379874", Offset = "0x1379874", VA = "0x1379874")]
		public void ActivateSpawners([Optional] List<EBALL_COLOR> colors)
		{
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0x137BBE0", Offset = "0x137BBE0", VA = "0x137BBE0")]
		private void SpawnBalls()
		{
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0x137C180", Offset = "0x137C180", VA = "0x137C180")]
		private void SpawnedBall(EBALL_COLOR color)
		{
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0x137C60C", Offset = "0x137C60C", VA = "0x137C60C")]
		public void SpawningInterrupted()
		{
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0x1378B6C", Offset = "0x1378B6C", VA = "0x1378B6C")]
		public void DeactivateSpawners()
		{
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0x137C614", Offset = "0x137C614", VA = "0x137C614")]
		public void ActivateCountdownFirstSlot()
		{
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0x137CA00", Offset = "0x137CA00", VA = "0x137CA00")]
		public void ActivateCountdownSecondSlot()
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0x137CB88", Offset = "0x137CB88", VA = "0x137CB88")]
		public void ActivateCountdownThirdSlot()
		{
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0x137CD14", Offset = "0x137CD14", VA = "0x137CD14")]
		public void SetupPlatesHud()
		{
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0x137CD60", Offset = "0x137CD60", VA = "0x137CD60")]
		public void UpdatePlatesHud()
		{
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0x1378A08", Offset = "0x1378A08", VA = "0x1378A08")]
		public void ToggleHudVisibility(bool isVisible)
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0x1377814", Offset = "0x1377814", VA = "0x1377814")]
		public void TogglePlatesCollision(bool enable)
		{
		}

		[Token(Token = "0x6002754")]
		[Address(RVA = "0x137CEB0", Offset = "0x137CEB0", VA = "0x137CEB0")]
		public void EnterPlateCollision()
		{
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0x137CEF0", Offset = "0x137CEF0", VA = "0x137CEF0")]
		public void ExitPlateCollision()
		{
		}

		[Token(Token = "0x6002756")]
		[Address(RVA = "0x1376560", Offset = "0x1376560", VA = "0x1376560")]
		public void StartPlatesCollision()
		{
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0x1375C50", Offset = "0x1375C50", VA = "0x1375C50")]
		public void StopPlatesCollision()
		{
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0x1375B20", Offset = "0x1375B20", VA = "0x1375B20")]
		public bool AreBallsOnBothPlates()
		{
			return default(bool);
		}

		[Token(Token = "0x6002759")]
		[Address(RVA = "0x137D1A8", Offset = "0x137D1A8", VA = "0x137D1A8")]
		public void StartSlowMotion()
		{
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0x137D750", Offset = "0x137D750", VA = "0x137D750")]
		private void UpdateSlowMotionTimeScale(float timeScale)
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0x137D834", Offset = "0x137D834", VA = "0x137D834")]
		private void SlowingDownComplete()
		{
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0x137DD24", Offset = "0x137DD24", VA = "0x137DD24")]
		private void UpdateSlowMotionCooldown(float fillAmount)
		{
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0x137DD28", Offset = "0x137DD28", VA = "0x137DD28")]
		private void SlowMotionTimedOut()
		{
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0x137E21C", Offset = "0x137E21C", VA = "0x137E21C")]
		private void StopSlowMotion()
		{
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0x13763DC", Offset = "0x13763DC", VA = "0x13763DC")]
		public void LogBallFallenMoment(BallBalanceMoment moment)
		{
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0x137E298", Offset = "0x137E298", VA = "0x137E298")]
		public GameManager()
		{
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0x137E2AC", Offset = "0x137E2AC", VA = "0x137E2AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E3FC", Offset = "0xB8E3FC")]
		private void <GameController_GameWillStart>b__73_0()
		{
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0x137E334", Offset = "0x137E334", VA = "0x137E334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E40C", Offset = "0xB8E40C")]
		private bool <ActivateSpawners>b__97_0(EBALL_COLOR color)
		{
			return default(bool);
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0x137E398", Offset = "0x137E398", VA = "0x137E398")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E41C", Offset = "0xB8E41C")]
		private bool <ActivateSpawners>b__97_1(EBALL_COLOR color)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000523")]
	public class PoolManager : MonoBehaviour
	{
		[Token(Token = "0x40020A8")]
		private const int _BALLS_POOL_COUNT = 6;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB81DE4", Offset = "0xB81DE4")]
		[SerializeField]
		private Ball _ballPrefab;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Ball> _freeBalls;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Ball> _usedBalls;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81E30", Offset = "0xB81E30")]
		private static PoolManager <Instance>k__BackingField;

		[Token(Token = "0x1700043C")]
		public static PoolManager Instance
		{
			[Token(Token = "0x6002764")]
			[Address(RVA = "0x1381C60", Offset = "0x1381C60", VA = "0x1381C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E42C", Offset = "0xB8E42C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002765")]
			[Address(RVA = "0x1381CB0", Offset = "0x1381CB0", VA = "0x1381CB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E43C", Offset = "0xB8E43C")]
			private set
			{
			}
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0x1381D04", Offset = "0x1381D04", VA = "0x1381D04")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0x1381DC4", Offset = "0x1381DC4", VA = "0x1381DC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0x1381DE8", Offset = "0x1381DE8", VA = "0x1381DE8")]
		private void SetupBall()
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x1381F54", Offset = "0x1381F54", VA = "0x1381F54")]
		private void PopulatePool()
		{
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x1375D54", Offset = "0x1375D54", VA = "0x1375D54")]
		public void PushBallObject(Ball ball)
		{
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0x13770AC", Offset = "0x13770AC", VA = "0x13770AC")]
		public Ball PullBallObject()
		{
			return null;
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0x1378F88", Offset = "0x1378F88", VA = "0x1378F88")]
		public void PushAllBalls(bool playAnimations, bool wereBallsDestroyed = false)
		{
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0x1382098", Offset = "0x1382098", VA = "0x1382098")]
		public PoolManager()
		{
		}
	}
	[Token(Token = "0x2000524")]
	public class BalanceRobot : MonoBehaviour
	{
		[Token(Token = "0x20008C5")]
		public delegate void OnPressSpawnerButtons();

		[Token(Token = "0x40020AD")]
		private const string _TRIGGER_PRESS_SPAWNER_BUTTONS_1 = "Bobot_Balance_Beat_01";

		[Token(Token = "0x40020AE")]
		private const string _TRIGGER_PRESS_SPAWNER_BUTTONS_2 = "Bobot_Balance_Beat_02";

		[Token(Token = "0x40020AF")]
		private const string _TRIGGER_PRESS_SPAWNER_BUTTONS_3 = "Bobot_Balance_Beat_03";

		[Token(Token = "0x40020B0")]
		private const string _TRIGGER_PRESS_SPAWNER_BUTTONS_4 = "Bobot_Balance_Beat_04";

		[Token(Token = "0x40020B1")]
		private const string _IDLE_ANIMATION = "Idle";

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OnPressSpawnerButtons _pressSpawnerButtonsCallback;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _hoverAnimator;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _lookAtPosition;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81E70", Offset = "0xB81E70")]
		private bool <IsDoingAnimation>k__BackingField;

		[Token(Token = "0x1700043D")]
		public bool IsDoingAnimation
		{
			[Token(Token = "0x600276F")]
			[Address(RVA = "0x1374C08", Offset = "0x1374C08", VA = "0x1374C08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E45C", Offset = "0xB8E45C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600276E")]
			[Address(RVA = "0x1374BFC", Offset = "0x1374BFC", VA = "0x1374BFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E44C", Offset = "0xB8E44C")]
			protected set
			{
			}
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0x1374C10", Offset = "0x1374C10", VA = "0x1374C10")]
		private void Update()
		{
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0x1374C44", Offset = "0x1374C44", VA = "0x1374C44")]
		public void MoveToWelcomePoint(Action call)
		{
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0x1374CC8", Offset = "0x1374CC8", VA = "0x1374CC8")]
		public void MoveToGameplayPosition(Action call)
		{
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0x1374D4C", Offset = "0x1374D4C", VA = "0x1374D4C")]
		public void PressSpawnerButtons(OnPressSpawnerButtons callback)
		{
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0x1374E00", Offset = "0x1374E00", VA = "0x1374E00")]
		public void Stop()
		{
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0x1374DD8", Offset = "0x1374DD8", VA = "0x1374DD8")]
		private void PlayAnimation(string animation)
		{
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0x1374E64", Offset = "0x1374E64", VA = "0x1374E64")]
		public void Animation_OnPressSpawnerButtons()
		{
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0x1375098", Offset = "0x1375098", VA = "0x1375098")]
		public BalanceRobot()
		{
		}
	}
	[Token(Token = "0x2000525")]
	public class BalanceRobotAnimator : MonoBehaviour
	{
		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BalanceRobot _robot;

		[Token(Token = "0x6002778")]
		[Address(RVA = "0x13750F0", Offset = "0x13750F0", VA = "0x13750F0")]
		public void Animation_OnPressSpawnerButtons()
		{
		}

		[Token(Token = "0x6002779")]
		[Address(RVA = "0x137511C", Offset = "0x137511C", VA = "0x137511C")]
		public BalanceRobotAnimator()
		{
		}
	}
	[Token(Token = "0x2000526")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB723EC", Offset = "0xB723EC")]
	public class BalanceConfig : GameConfig
	{
		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB81E90", Offset = "0xB81E90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB81E90", Offset = "0xB81E90")]
		public float newGoalsSpawnDelay;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB81EF0", Offset = "0xB81EF0")]
		public float spawnWarningInterval;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB81F28", Offset = "0xB81F28")]
		public float spawnDelay;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB81F60", Offset = "0xB81F60")]
		public float spawnInterval;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB81F98", Offset = "0xB81F98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB81F98", Offset = "0xB81F98")]
		public float goalValidationDuration;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB81FF8", Offset = "0xB81FF8")]
		public float cancelGoalValidationDuration;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB82030", Offset = "0xB82030")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB82030", Offset = "0xB82030")]
		public float ballMass;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB82090", Offset = "0xB82090")]
		public float ballDrag;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB820C8", Offset = "0xB820C8")]
		public float ballAngularDrag;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB82100", Offset = "0xB82100")]
		public float tossBallsForce;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB82138", Offset = "0xB82138")]
		public float plateCenterDistanceForceFactor;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB82170", Offset = "0xB82170")]
		public float activateTossBallsDuration;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB821A8", Offset = "0xB821A8")]
		public float tossBallsCooldown;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB821E0", Offset = "0xB821E0")]
		public float slowMotionTimeScale;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB82218", Offset = "0xB82218")]
		public float slowMotionTransitionDuration;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB82250", Offset = "0xB82250")]
		public float slowMotionDuration;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float slowdownPitchFactor;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB82288", Offset = "0xB82288")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB82288", Offset = "0xB82288")]
		public int lastLevelMinPlateBalls;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB822E8", Offset = "0xB822E8")]
		public int lastLevelMaxPlateBalls;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB82320", Offset = "0xB82320")]
		public int lastLevelMaxPlateSingleColorBalls;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB82358", Offset = "0xB82358")]
		public BalanceLevelConfig[] levels;

		[Token(Token = "0x1700043E")]
		public override LevelConfig[] Levels
		{
			[Token(Token = "0x600277A")]
			[Address(RVA = "0x1372D40", Offset = "0x1372D40", VA = "0x1372D40", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0x1372D48", Offset = "0x1372D48", VA = "0x1372D48")]
		public BalanceConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000527")]
	public class BalanceLevelConfig : LevelConfig
	{
		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int leftBlue;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int leftRed;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int leftGreen;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int rightBlue;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int rightRed;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int rightGreen;

		[Token(Token = "0x600277C")]
		[Address(RVA = "0x1372D70", Offset = "0x1372D70", VA = "0x1372D70")]
		public BalanceLevelConfig()
		{
		}
	}
	[Token(Token = "0x2000528")]
	public class Tutorial : MonoBehaviour
	{
		[Token(Token = "0x20008C6")]
		public enum Step
		{
			[Token(Token = "0x4002FE6")]
			Intro,
			[Token(Token = "0x4002FE7")]
			CatchingBallsAligningPlates,
			[Token(Token = "0x4002FE8")]
			CatchingBallsBothPlates,
			[Token(Token = "0x4002FE9")]
			BalancingBothPlates,
			[Token(Token = "0x4002FEA")]
			IntroducingBallColorsOneForPlate,
			[Token(Token = "0x4002FEB")]
			IntroducingBallColorsTwoForPlate,
			[Token(Token = "0x4002FEC")]
			TossingBalls,
			[Token(Token = "0x4002FED")]
			Goodbye
		}

		[Serializable]
		[Token(Token = "0x20008C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73CE4", Offset = "0xB73CE4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__41_0;

			[Token(Token = "0x600353E")]
			[Address(RVA = "0x1383EA8", Offset = "0x1383EA8", VA = "0x1383EA8")]
			public <>c()
			{
			}

			[Token(Token = "0x600353F")]
			[Address(RVA = "0x1383EB0", Offset = "0x1383EB0", VA = "0x1383EB0")]
			internal void <SetupCatchingBalls>b__41_0()
			{
			}
		}

		[Token(Token = "0x40020D3")]
		private const int _COLLIDE_PLATES_TRIGGER_MESSAGE_INDEX = 0;

		[Token(Token = "0x40020D4")]
		private const int _EXTRA_BALLS_TRIGGER_MESSAGE_INDEX = 1;

		[Token(Token = "0x40020D5")]
		private const float _TIME_LIMIT_WITHOUT_PLATE_UNDER_SPAWNER = 10f;

		[Token(Token = "0x40020D6")]
		private const float _TIME_LIMIT_WITHOUT_CATCHING_ONE_BALL = 10f;

		[Token(Token = "0x40020D7")]
		private const float _TIME_LIMIT_WITHOUT_BOTH_PLATES_CATCHING_BALLS = 2f;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB82390", Offset = "0xB82390")]
		public TutorialController tutorialController;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameController _gameController;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BalanceRobot _robot;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isWaitingPlateUnderSpawner;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _alignedPlateUnderSpawner;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool _catchedFirstBall;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		private bool _isLearningToTossBalls;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _activateSpawnersOnInstructionsEnd;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<EHAND_PLATE, bool> _plateCatchedBall;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _waitingTimePlateUnderSpawner;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _waitingTimeCatchingBall;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _waitingTimeBothPlatesCatching;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Plate _leftPlate;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Plate _rightPlate;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Spawner _spawner;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BallSpawner _leftSpawner;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BallSpawner _rightSpawner;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _werePlatesColliding;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool _wereExactNumberOfBalls;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool _extraBallsWarningActive;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		private bool _areBarriersUp;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<EHAND_PLATE, Dictionary<EBALL_COLOR, List<int>>> _plateGoals;

		[Token(Token = "0x600277D")]
		[Address(RVA = "0x1382600", Offset = "0x1382600", VA = "0x1382600")]
		private void Awake()
		{
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0x1382704", Offset = "0x1382704", VA = "0x1382704")]
		private void Update()
		{
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0x1382948", Offset = "0x1382948", VA = "0x1382948")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0x13829B8", Offset = "0x13829B8", VA = "0x13829B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0x1382A28", Offset = "0x1382A28", VA = "0x1382A28")]
		private void Plate_HasExtraBalls()
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0x1382A54", Offset = "0x1382A54", VA = "0x1382A54")]
		private void GameController_TutorialStart(GameController sender)
		{
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0x1382DD0", Offset = "0x1382DD0", VA = "0x1382DD0")]
		private void GameController_TutorialPaused(GameController sender, bool paused, SceneStatusType statusType)
		{
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0x1382E44", Offset = "0x1382E44", VA = "0x1382E44")]
		private void GameController_TutorialStop(GameController sender)
		{
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0x1383014", Offset = "0x1383014", VA = "0x1383014")]
		private void TutorialController_StepInstructionsStart(TutorialController sender, TutorialStep step)
		{
		}

		[Token(Token = "0x6002786")]
		[Address(RVA = "0x1383708", Offset = "0x1383708", VA = "0x1383708")]
		private void TutorialController_StepInstructionsPlay(TutorialController sender, TutorialStep step, int instructionIndex)
		{
		}

		[Token(Token = "0x6002787")]
		[Address(RVA = "0x1383780", Offset = "0x1383780", VA = "0x1383780")]
		private void TutorialController_StepInstructionsEnd(TutorialController sender, TutorialStep step)
		{
		}

		[Token(Token = "0x6002788")]
		[Address(RVA = "0x1383BA8", Offset = "0x1383BA8", VA = "0x1383BA8")]
		private void TutorialController_OnTutorialEnded(TutorialController sender)
		{
		}

		[Token(Token = "0x6002789")]
		[Address(RVA = "0x1382EBC", Offset = "0x1382EBC", VA = "0x1382EBC")]
		private void ResetTutorial(bool playAnimations)
		{
		}

		[Token(Token = "0x600278A")]
		[Address(RVA = "0x138385C", Offset = "0x138385C", VA = "0x138385C")]
		private void SetupCatchingBalls()
		{
		}

		[Token(Token = "0x600278B")]
		[Address(RVA = "0x1383978", Offset = "0x1383978", VA = "0x1383978")]
		private void SetupCatchingBallsAligningPlates()
		{
		}

		[Token(Token = "0x600278C")]
		[Address(RVA = "0x1383614", Offset = "0x1383614", VA = "0x1383614")]
		private void SetupBalancingPlates()
		{
		}

		[Token(Token = "0x600278D")]
		[Address(RVA = "0x13836AC", Offset = "0x13836AC", VA = "0x13836AC")]
		private void SetupBallColors(Step step)
		{
		}

		[Token(Token = "0x600278E")]
		[Address(RVA = "0x1383A48", Offset = "0x1383A48", VA = "0x1383A48")]
		private void SetupTossingBalls()
		{
		}

		[Token(Token = "0x600278F")]
		[Address(RVA = "0x13830B8", Offset = "0x13830B8", VA = "0x13830B8")]
		private void UpdatePlatesGoal(PlateGoals goals, bool activateSpawners = true)
		{
		}

		[Token(Token = "0x6002790")]
		[Address(RVA = "0x137A978", Offset = "0x137A978", VA = "0x137A978")]
		public bool HasPlateGoals()
		{
			return default(bool);
		}

		[Token(Token = "0x6002791")]
		[Address(RVA = "0x137A988", Offset = "0x137A988", VA = "0x137A988")]
		public int PlateBallColorGoal(EHAND_PLATE hand, EBALL_COLOR color)
		{
			return default(int);
		}

		[Token(Token = "0x6002792")]
		[Address(RVA = "0x137BB2C", Offset = "0x137BB2C", VA = "0x137BB2C")]
		public void CompletedGoals()
		{
		}

		[Token(Token = "0x6002793")]
		[Address(RVA = "0x138373C", Offset = "0x138373C", VA = "0x138373C")]
		private void TogglePlatesBarrier(bool isActive)
		{
		}

		[Token(Token = "0x6002794")]
		[Address(RVA = "0x1383C00", Offset = "0x1383C00", VA = "0x1383C00")]
		private void TrackedPlate()
		{
		}

		[Token(Token = "0x6002795")]
		[Address(RVA = "0x1383D3C", Offset = "0x1383D3C", VA = "0x1383D3C")]
		public void PlateCatchedBall(EHAND_PLATE plate)
		{
		}

		[Token(Token = "0x6002796")]
		[Address(RVA = "0x1383DBC", Offset = "0x1383DBC", VA = "0x1383DBC")]
		public void TossedBalls()
		{
		}

		[Token(Token = "0x6002797")]
		[Address(RVA = "0x1383E10", Offset = "0x1383E10", VA = "0x1383E10")]
		public Tutorial()
		{
		}

		[Token(Token = "0x6002798")]
		[Address(RVA = "0x1383E18", Offset = "0x1383E18", VA = "0x1383E18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E46C", Offset = "0xB8E46C")]
		private void <GameController_TutorialStart>b__33_0()
		{
		}

		[Token(Token = "0x6002799")]
		[Address(RVA = "0x1383E34", Offset = "0x1383E34", VA = "0x1383E34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E47C", Offset = "0xB8E47C")]
		private void <TrackedPlate>b__51_0()
		{
		}

		[Token(Token = "0x600279A")]
		[Address(RVA = "0x1383E3C", Offset = "0x1383E3C", VA = "0x1383E3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E48C", Offset = "0xB8E48C")]
		private void <TrackedPlate>b__51_1()
		{
		}
	}
}
namespace AttentionLab.MiniGames.Assembly
{
	[Token(Token = "0x2000529")]
	public class GearSelectedData
	{
		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB823E8", Offset = "0xB823E8")]
		public float gear_radius;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int hand;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool success;

		[Token(Token = "0x600279B")]
		[Address(RVA = "0x1372A8C", Offset = "0x1372A8C", VA = "0x1372A8C")]
		public GearSelectedData(float gearRadius, int hand, bool success)
		{
		}
	}
	[Token(Token = "0x200052A")]
	public class AssemblyGearSelectedMoment : AssemblyMoment
	{
		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly float _gearRadius;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly Hand _hand;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly bool _success;

		[Token(Token = "0x600279C")]
		[Address(RVA = "0x147AEA8", Offset = "0x147AEA8", VA = "0x147AEA8")]
		public AssemblyGearSelectedMoment(float gearRadius, Hand hand, bool isValid)
		{
		}

		[Token(Token = "0x600279D")]
		[Address(RVA = "0x147AF08", Offset = "0x147AF08", VA = "0x147AF08", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x200052B")]
	public class GearData
	{
		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB8244C", Offset = "0xB8244C")]
		public float size;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JsonUtils.Vector3Data position;

		[Token(Token = "0x600279E")]
		[Address(RVA = "0x147B19C", Offset = "0x147B19C", VA = "0x147B19C")]
		public GearData(float gearSize, Vector3 gearPosition)
		{
		}
	}
	[Token(Token = "0x200052C")]
	public class GearsSpawnData
	{
		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GearData[] gears;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int level;

		[Token(Token = "0x600279F")]
		[Address(RVA = "0x1372D04", Offset = "0x1372D04", VA = "0x1372D04")]
		public GearsSpawnData(GearData[] gears, int level)
		{
		}
	}
	[Token(Token = "0x200052D")]
	public class AssemblyGearsSpawnMoment : AssemblyMoment
	{
		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly GearData[] _gears;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly int _level;

		[Token(Token = "0x60027A0")]
		[Address(RVA = "0x147AFF0", Offset = "0x147AFF0", VA = "0x147AFF0")]
		public AssemblyGearsSpawnMoment(List<Gear> gears, int level)
		{
		}

		[Token(Token = "0x60027A1")]
		[Address(RVA = "0x147B238", Offset = "0x147B238", VA = "0x147B238", Slot = "4")]
		public override void SetValues()
		{
		}
	}
	[Token(Token = "0x200052E")]
	public abstract class AssemblyMoment : GameMoment
	{
		[Token(Token = "0x60027A2")]
		public abstract override void SetValues();

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x147AFD4", Offset = "0x147AFD4", VA = "0x147AFD4")]
		protected int ParseHand(Hand hand)
		{
			return default(int);
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x147AF00", Offset = "0x147AF00", VA = "0x147AF00")]
		protected AssemblyMoment()
		{
		}
	}
	[Token(Token = "0x200052F")]
	public class AssemblyLine : MonoBehaviour
	{
		[Token(Token = "0x20008C8")]
		public enum EAssemblyLineAnimations
		{
			[Token(Token = "0x4002FF1")]
			RotateConveyorBelt,
			[Token(Token = "0x4002FF2")]
			ResetConveyorBelt
		}

		[Token(Token = "0x40020FA")]
		private const string _ROTATE_CONVEYOR_BELT_ANIMATION = "Table_movement_";

		[Token(Token = "0x40020FB")]
		private const string _RESET_CONVEYOR_BELT_ANIMATION = "Table_reset";

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _conveyorBelt;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _gearSpawner;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _leftFlaps;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _rightFlaps;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Device _factoryDevice;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<Gear> _factoryGears;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform _spawnPosition;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB82520", Offset = "0xB82520")]
		[SerializeField]
		private int rows;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private int circleColumns;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float gridDistance;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float rowDepth;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private int leftAngle;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private int rightAngle;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float gridHeight;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float rowHeight;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float gearPositionOffsetX;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float gearPositionOffsetY;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float gearPositionOffsetZ;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB8260C", Offset = "0xB8260C")]
		[SerializeField]
		private float conveyorBeltRotationTime;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _ignoreGearsOrder;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _gearsCount;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _minGearSize;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int _maxGearSize;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _conveyorBeltMovement;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Device _currentDevice;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Device _shippedDevice;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<Gear> _currentGears;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<List<Vector3>> _gearPositions;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Animator _animator;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Cloth[] _enterFlaps;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Cloth[] _exitFlaps;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int _destroyingPreviousGears;

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x147B2E4", Offset = "0x147B2E4", VA = "0x147B2E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x147B37C", Offset = "0x147B37C", VA = "0x147B37C")]
		private void Start()
		{
		}

		[Token(Token = "0x60027A7")]
		[Address(RVA = "0x147A538", Offset = "0x147A538", VA = "0x147A538")]
		public void StartData()
		{
		}

		[Token(Token = "0x60027A8")]
		[Address(RVA = "0x147A714", Offset = "0x147A714", VA = "0x147A714")]
		public void ResetData(bool isLevelDown)
		{
		}

		[Token(Token = "0x60027A9")]
		[Address(RVA = "0x147B66C", Offset = "0x147B66C", VA = "0x147B66C")]
		public void Config(AssemblyLevelConfig levelConfig)
		{
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0x147AAE0", Offset = "0x147AAE0", VA = "0x147AAE0")]
		public void StartNewDevice(bool ignoreGearsOrder, [Optional] List<List<Vector3>> customPositions)
		{
		}

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0x147B69C", Offset = "0x147B69C", VA = "0x147B69C")]
		private void SetupGearsGrid([Optional] List<List<Vector3>> customPositions)
		{
		}

		[Token(Token = "0x60027AC")]
		[Address(RVA = "0x147BF88", Offset = "0x147BF88", VA = "0x147BF88")]
		private int ClosestGear(Vector3 a, Vector3 b)
		{
			return default(int);
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x147C010", Offset = "0x147C010", VA = "0x147C010")]
		private int CompareGearSize(Gear a, Gear b)
		{
			return default(int);
		}

		[Token(Token = "0x60027AE")]
		[Address(RVA = "0x147C054", Offset = "0x147C054", VA = "0x147C054")]
		public void ShipDevice()
		{
		}

		[Token(Token = "0x60027AF")]
		[Address(RVA = "0x147C0B8", Offset = "0x147C0B8", VA = "0x147C0B8")]
		public void ConveyorBeltActivated()
		{
		}

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0x147BB40", Offset = "0x147BB40", VA = "0x147BB40")]
		private Device SpawnDevice()
		{
			return null;
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0x147C650", Offset = "0x147C650", VA = "0x147C650")]
		private List<Gear> SpawnGears()
		{
			return null;
		}

		[Token(Token = "0x60027B2")]
		[Address(RVA = "0x147D5E0", Offset = "0x147D5E0", VA = "0x147D5E0")]
		public void DeviceClosed()
		{
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x147D5EC", Offset = "0x147D5EC", VA = "0x147D5EC")]
		public void GearDestroyed()
		{
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x147C0BC", Offset = "0x147C0BC", VA = "0x147C0BC")]
		private void RotateConveyorBelt()
		{
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x147BCA4", Offset = "0x147BCA4", VA = "0x147BCA4")]
		public void UpdateFlapsColliders()
		{
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0x147A168", Offset = "0x147A168", VA = "0x147A168")]
		public void GamePaused(bool isPaused)
		{
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0x147B5A8", Offset = "0x147B5A8", VA = "0x147B5A8")]
		private void ClearShippedDevice()
		{
		}

		[Token(Token = "0x60027B8")]
		[Address(RVA = "0x147D734", Offset = "0x147D734", VA = "0x147D734")]
		private void PlayAnimation(EAssemblyLineAnimations anim)
		{
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0x147D9D4", Offset = "0x147D9D4", VA = "0x147D9D4")]
		public void Animator_RotateConveyorBeltComplete()
		{
		}

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0x147DACC", Offset = "0x147DACC", VA = "0x147DACC")]
		public AssemblyLine()
		{
		}
	}
	[Token(Token = "0x2000530")]
	public class Device : MonoBehaviour
	{
		[Token(Token = "0x20008C9")]
		private enum EDeviceState
		{
			[Token(Token = "0x4002FF4")]
			READY,
			[Token(Token = "0x4002FF5")]
			ASSEMBLY,
			[Token(Token = "0x4002FF6")]
			CLOSING,
			[Token(Token = "0x4002FF7")]
			CLOSED,
			[Token(Token = "0x4002FF8")]
			CANCELED
		}

		[Token(Token = "0x20008CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73CF4", Offset = "0xB73CF4")]
		private sealed class <Close>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x1700062A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003543")]
				[Address(RVA = "0x1481378", Offset = "0x1481378", VA = "0x1481378", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700062B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003545")]
				[Address(RVA = "0x14813E4", Offset = "0x14813E4", VA = "0x14813E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003540")]
			[Address(RVA = "0x1481288", Offset = "0x1481288", VA = "0x1481288")]
			[DebuggerHidden]
			public <Close>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6003541")]
			[Address(RVA = "0x14812CC", Offset = "0x14812CC", VA = "0x14812CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003542")]
			[Address(RVA = "0x14812D0", Offset = "0x14812D0", VA = "0x14812D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003544")]
			[Address(RVA = "0x1481380", Offset = "0x1481380", VA = "0x1481380", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400211F")]
		private const float _GEAR_MIN_HEIGHT = 0.07f;

		[Token(Token = "0x4002120")]
		private const float _GEAR_SPACING = 0.003f;

		[Token(Token = "0x4002121")]
		private const float _GEAR_SQUASHING_DURATION = 0.2f;

		[Token(Token = "0x4002122")]
		private const float _SQUASH_GEARS_DELAY = 0.28f;

		[Token(Token = "0x4002123")]
		private const float _ALL_GEARS_ACTIVATED_CLOSE_DELAY = 0.5f;

		[Token(Token = "0x4002124")]
		private const string _DEVICE_COLOR_PROPERTY = "_DeviceColor";

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DeviceAnimator _animator;

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SkinnedMeshRenderer _renderer;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ConnectGearFXAnimator _connectFXAnimator;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SphereCollider sphereCollider;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AssemblyLine _assemblyLine;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Gear> _gearsLeft;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Gear> _connectingGears;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Gear> _connectedGears;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _ignoreGearsOrder;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _lastGearYPos;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _lastGearHeight;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _gearsHeightMultiplier;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IEnumerator _closeCoroutine;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EDeviceState _state;

		[Token(Token = "0x1400004C")]
		public static event Action RejectedGear
		{
			[Token(Token = "0x60027BB")]
			[Address(RVA = "0x14799B4", Offset = "0x14799B4", VA = "0x14799B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E49C", Offset = "0xB8E49C")]
			add
			{
			}
			[Token(Token = "0x60027BC")]
			[Address(RVA = "0x1479BC4", Offset = "0x1479BC4", VA = "0x1479BC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E4AC", Offset = "0xB8E4AC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004D")]
		public static event Action AssembledGear
		{
			[Token(Token = "0x60027BD")]
			[Address(RVA = "0x147E964", Offset = "0x147E964", VA = "0x147E964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E4BC", Offset = "0xB8E4BC")]
			add
			{
			}
			[Token(Token = "0x60027BE")]
			[Address(RVA = "0x147EAEC", Offset = "0x147EAEC", VA = "0x147EAEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E4CC", Offset = "0xB8E4CC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004E")]
		public static event Action DeviceAssembled
		{
			[Token(Token = "0x60027BF")]
			[Address(RVA = "0x1479A68", Offset = "0x1479A68", VA = "0x1479A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E4DC", Offset = "0xB8E4DC")]
			add
			{
			}
			[Token(Token = "0x60027C0")]
			[Address(RVA = "0x1479C78", Offset = "0x1479C78", VA = "0x1479C78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E4EC", Offset = "0xB8E4EC")]
			remove
			{
			}
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0x147F678", Offset = "0x147F678", VA = "0x147F678")]
		private void Start()
		{
		}

		[Token(Token = "0x60027C2")]
		[Address(RVA = "0x147FD74", Offset = "0x147FD74", VA = "0x147FD74")]
		private void Update()
		{
		}

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0x147F680", Offset = "0x147F680", VA = "0x147F680")]
		private void SetState(EDeviceState state)
		{
		}

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0x147C574", Offset = "0x147C574", VA = "0x147C574")]
		public void SetColor()
		{
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0x147D698", Offset = "0x147D698", VA = "0x147D698")]
		public void SetupDevice(AssemblyLine assemblyLine, List<Gear> gears, bool ignoreGearsOrder)
		{
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0x147B388", Offset = "0x147B388", VA = "0x147B388")]
		public void ResetDevice()
		{
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0x1480000", Offset = "0x1480000", VA = "0x1480000")]
		public void CheckGear(Gear gear, Vector3 touchPosition)
		{
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0x1480218", Offset = "0x1480218", VA = "0x1480218")]
		private void AssembleGear(Gear gear)
		{
		}

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0x1481060", Offset = "0x1481060", VA = "0x1481060")]
		public void ConnectedGear(Gear gear)
		{
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0x1481178", Offset = "0x1481178", VA = "0x1481178")]
		public void ActivatedGear()
		{
		}

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0x1481214", Offset = "0x1481214", VA = "0x1481214")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8E4FC", Offset = "0xB8E4FC")]
		private IEnumerator Close()
		{
			return null;
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0x14812B4", Offset = "0x14812B4", VA = "0x14812B4")]
		private void UpdateGearsHeight(float heightMultiplier)
		{
		}

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0x14812BC", Offset = "0x14812BC", VA = "0x14812BC")]
		public void CloseCompleted()
		{
		}

		[Token(Token = "0x60027CE")]
		[Address(RVA = "0x14812C4", Offset = "0x14812C4", VA = "0x14812C4")]
		public Device()
		{
		}
	}
	[Token(Token = "0x2000531")]
	public class DeviceAnimator : MonoBehaviour
	{
		[Token(Token = "0x20008CB")]
		public enum EDeviceAnimations
		{
			[Token(Token = "0x4002FFD")]
			ShowHighlight,
			[Token(Token = "0x4002FFE")]
			HideHighlight,
			[Token(Token = "0x4002FFF")]
			Close
		}

		[Token(Token = "0x4002133")]
		private const string _SHOW_HIGHLIGHT_ANIMATION = "Assembly_Device_show_highlight";

		[Token(Token = "0x4002134")]
		private const string _HIDE_HIGHLIGHT_ANIMATION = "Assembly_Device_hide_highlight";

		[Token(Token = "0x4002135")]
		private const string _CLOSE_DEVICE_ANIMATION = "Assembly_Device_closing";

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Device _device;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator _animator;

		[Token(Token = "0x60027CF")]
		[Address(RVA = "0x14813EC", Offset = "0x14813EC", VA = "0x14813EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027D0")]
		[Address(RVA = "0x147FF78", Offset = "0x147FF78", VA = "0x147FF78")]
		public void PlayAnimation(EDeviceAnimations anim)
		{
		}

		[Token(Token = "0x60027D1")]
		[Address(RVA = "0x1481444", Offset = "0x1481444", VA = "0x1481444")]
		public void CloseAnimation_Completed()
		{
		}

		[Token(Token = "0x60027D2")]
		[Address(RVA = "0x1481460", Offset = "0x1481460", VA = "0x1481460")]
		public DeviceAnimator()
		{
		}
	}
	[Token(Token = "0x2000532")]
	public class Gear : MonoBehaviour
	{
		[Token(Token = "0x20008CC")]
		public enum EGearAnimations
		{
			[Token(Token = "0x4003001")]
			WrongGear
		}

		[Token(Token = "0x20008CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73D04", Offset = "0xB73D04")]
		private sealed class <ActivateGear>d__83 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4003005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gear <>4__this;

			[Token(Token = "0x1700062C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003549")]
				[Address(RVA = "0x1482DDC", Offset = "0x1482DDC", VA = "0x1482DDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700062D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600354B")]
				[Address(RVA = "0x1482E48", Offset = "0x1482E48", VA = "0x1482E48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003546")]
			[Address(RVA = "0x14827D0", Offset = "0x14827D0", VA = "0x14827D0")]
			[DebuggerHidden]
			public <ActivateGear>d__83(int <>1__state)
			{
			}

			[Token(Token = "0x6003547")]
			[Address(RVA = "0x1482BE4", Offset = "0x1482BE4", VA = "0x1482BE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003548")]
			[Address(RVA = "0x1482BE8", Offset = "0x1482BE8", VA = "0x1482BE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600354A")]
			[Address(RVA = "0x1482DE4", Offset = "0x1482DE4", VA = "0x1482DE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 _MIN_REAL_SIZE;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly Vector3 _MAX_REAL_SIZE;

		[Token(Token = "0x400213A")]
		private const string _WRONG_GEAR_ANIMATION = "WrongGear";

		[Token(Token = "0x400213B")]
		private const string _GEAR_ID_PROPERTY = "_Gear";

		[Token(Token = "0x400213C")]
		private const string _GEAR_SIZE_PROPERTY = "_GearSize";

		[Token(Token = "0x400213D")]
		private const string _GEAR_POWER_PROPERTY = "_GearPower";

		[Token(Token = "0x400213E")]
		private const string _WRONG_GEAR_PROPERTY = "_WrongGear";

		[Token(Token = "0x400213F")]
		private const int _WRONG_GEAR_POWER_ON = 1;

		[Token(Token = "0x4002140")]
		private const int _WRONG_GEAR_POWER_OFF = 0;

		[Token(Token = "0x4002141")]
		private const float _SPAWNING_DURATION_MIN = 0.66f;

		[Token(Token = "0x4002142")]
		private const float _SPAWNING_DURATION_MAX = 1.33f;

		[Token(Token = "0x4002143")]
		private const float _START_FLOATING_MAX_DELAY = 0.5f;

		[Token(Token = "0x4002144")]
		private const float _FLOATING_ROTATION_SPEED = 5f;

		[Token(Token = "0x4002145")]
		private const float _FLOATING_HEIGHT = 0.01f;

		[Token(Token = "0x4002146")]
		private const float _FLOATING_SPEED_MIN = 0.5f;

		[Token(Token = "0x4002147")]
		private const float _FLOATING_SPEED_MAX = 1f;

		[Token(Token = "0x4002148")]
		private const float _CONNECTION_DURATION = 1f;

		[Token(Token = "0x4002149")]
		private const float _ACTIVATE_GEAR_DELAY = 0.5f;

		[Token(Token = "0x400214A")]
		private const float _SHOW_POWER_LIGHT_DURATION = 0.5f;

		[Token(Token = "0x400214B")]
		private const float _HIDE_POWER_LIGHT_DURATION = 0.5f;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GearCollider _gearCollider;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MeshRenderer _renderer;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AllowNesting]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xB826E8", Offset = "0xB826E8")]
		[AttributeAttribute(Name = "MaxValueAttribute", RVA = "0xB826E8", Offset = "0xB826E8")]
		[SerializeField]
		private int _id;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _isActive;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AssemblyLine _assemblyLine;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Device _device;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator _animator;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Hand _hand;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IEnumerator _activateCoroutine;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _smoothness;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _floatAmount;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _floatingHash;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _floatingSpeed;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform _rendererParent;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform _rendererAnchor;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject _explosionPrefab;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject _explosion;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82758", Offset = "0xB82758")]
		private bool <IsSpawning>k__BackingField;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82768", Offset = "0xB82768")]
		private bool <IsConnecting>k__BackingField;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82778", Offset = "0xB82778")]
		private bool <IsConnected>k__BackingField;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82788", Offset = "0xB82788")]
		private bool <IsDestroying>k__BackingField;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82798", Offset = "0xB82798")]
		private int <ShaderSize>k__BackingField;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB827A8", Offset = "0xB827A8")]
		private float <ConnectionHeight>k__BackingField;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB827B8", Offset = "0xB827B8")]
		private Vector3 <GridPosition>k__BackingField;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB827C8", Offset = "0xB827C8")]
		private Vector3 <RealSize>k__BackingField;

		[Token(Token = "0x1700043F")]
		public Vector3 Size
		{
			[Token(Token = "0x60027D3")]
			[Address(RVA = "0x14806E4", Offset = "0x14806E4", VA = "0x14806E4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000440")]
		public bool IsSpawning
		{
			[Token(Token = "0x60027D4")]
			[Address(RVA = "0x148148C", Offset = "0x148148C", VA = "0x148148C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E560", Offset = "0xB8E560")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60027D5")]
			[Address(RVA = "0x1481494", Offset = "0x1481494", VA = "0x1481494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E570", Offset = "0xB8E570")]
			private set
			{
			}
		}

		[Token(Token = "0x17000441")]
		public bool IsConnecting
		{
			[Token(Token = "0x60027D6")]
			[Address(RVA = "0x14814A0", Offset = "0x14814A0", VA = "0x14814A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E580", Offset = "0xB8E580")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60027D7")]
			[Address(RVA = "0x14814A8", Offset = "0x14814A8", VA = "0x14814A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E590", Offset = "0xB8E590")]
			private set
			{
			}
		}

		[Token(Token = "0x17000442")]
		public bool IsConnected
		{
			[Token(Token = "0x60027D8")]
			[Address(RVA = "0x14814B4", Offset = "0x14814B4", VA = "0x14814B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E5A0", Offset = "0xB8E5A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60027D9")]
			[Address(RVA = "0x14814BC", Offset = "0x14814BC", VA = "0x14814BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E5B0", Offset = "0xB8E5B0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000443")]
		public bool IsDestroying
		{
			[Token(Token = "0x60027DA")]
			[Address(RVA = "0x14814C8", Offset = "0x14814C8", VA = "0x14814C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E5C0", Offset = "0xB8E5C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60027DB")]
			[Address(RVA = "0x14814D0", Offset = "0x14814D0", VA = "0x14814D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E5D0", Offset = "0xB8E5D0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000444")]
		public int ShaderSize
		{
			[Token(Token = "0x60027DC")]
			[Address(RVA = "0x14814DC", Offset = "0x14814DC", VA = "0x14814DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E5E0", Offset = "0xB8E5E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60027DD")]
			[Address(RVA = "0x14814E4", Offset = "0x14814E4", VA = "0x14814E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E5F0", Offset = "0xB8E5F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000445")]
		public float ConnectionHeight
		{
			[Token(Token = "0x60027DE")]
			[Address(RVA = "0x14814EC", Offset = "0x14814EC", VA = "0x14814EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E600", Offset = "0xB8E600")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027DF")]
			[Address(RVA = "0x14814F4", Offset = "0x14814F4", VA = "0x14814F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E610", Offset = "0xB8E610")]
			private set
			{
			}
		}

		[Token(Token = "0x17000446")]
		public Vector3 GridPosition
		{
			[Token(Token = "0x60027E0")]
			[Address(RVA = "0x14814FC", Offset = "0x14814FC", VA = "0x14814FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E620", Offset = "0xB8E620")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60027E1")]
			[Address(RVA = "0x1481508", Offset = "0x1481508", VA = "0x1481508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E630", Offset = "0xB8E630")]
			private set
			{
			}
		}

		[Token(Token = "0x17000447")]
		public Vector3 RealSize
		{
			[Token(Token = "0x60027E2")]
			[Address(RVA = "0x1481514", Offset = "0x1481514", VA = "0x1481514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E640", Offset = "0xB8E640")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60027E3")]
			[Address(RVA = "0x1481520", Offset = "0x1481520", VA = "0x1481520")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E650", Offset = "0xB8E650")]
			private set
			{
			}
		}

		[Token(Token = "0x60027E4")]
		[Address(RVA = "0x148152C", Offset = "0x148152C", VA = "0x148152C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027E5")]
		[Address(RVA = "0x1481584", Offset = "0x1481584", VA = "0x1481584")]
		private void Update()
		{
		}

		[Token(Token = "0x60027E6")]
		[Address(RVA = "0x1481E68", Offset = "0x1481E68", VA = "0x1481E68")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60027E7")]
		[Address(RVA = "0x147CEBC", Offset = "0x147CEBC", VA = "0x147CEBC")]
		public void SetupGear(AssemblyLine assemblyLine, Device device, int size)
		{
		}

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0x147D01C", Offset = "0x147D01C", VA = "0x147D01C")]
		public void Spawn(Vector3 gridPosition)
		{
		}

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0x1482150", Offset = "0x1482150", VA = "0x1482150")]
		public void Spawned()
		{
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0x1481588", Offset = "0x1481588", VA = "0x1481588")]
		private void ManageMovement()
		{
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0x147B390", Offset = "0x147B390", VA = "0x147B390")]
		public void SelfDestruct()
		{
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0x14821E4", Offset = "0x14821E4", VA = "0x14821E4")]
		public void Select(Hand hand, Vector3 touchPosition)
		{
		}

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0x14806FC", Offset = "0x14806FC", VA = "0x14806FC")]
		public void ConnectGear(Vector3 position)
		{
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0x14825B0", Offset = "0x14825B0", VA = "0x14825B0")]
		private void GearConnected()
		{
		}

		[Token(Token = "0x60027EF")]
		[Address(RVA = "0x148274C", Offset = "0x148274C", VA = "0x148274C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8E660", Offset = "0xB8E660")]
		private IEnumerator ActivateGear(float delay)
		{
			return null;
		}

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0x14805E8", Offset = "0x14805E8", VA = "0x14805E8")]
		public void Reject()
		{
		}

		[Token(Token = "0x60027F1")]
		[Address(RVA = "0x148221C", Offset = "0x148221C", VA = "0x148221C")]
		public void TogglePowerLight(bool enable, bool isWrongGear)
		{
		}

		[Token(Token = "0x60027F2")]
		[Address(RVA = "0x14827FC", Offset = "0x14827FC", VA = "0x14827FC")]
		private void UpdatePowerLight(int powerPercentage)
		{
		}

		[Token(Token = "0x60027F3")]
		[Address(RVA = "0x147B444", Offset = "0x147B444", VA = "0x147B444")]
		public void Reset()
		{
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0x147D820", Offset = "0x147D820", VA = "0x147D820")]
		public void GamePaused(bool isPaused)
		{
		}

		[Token(Token = "0x60027F5")]
		[Address(RVA = "0x1482010", Offset = "0x1482010", VA = "0x1482010")]
		private Vector3 GetRealSize(int shaderSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027F6")]
		[Address(RVA = "0x1482880", Offset = "0x1482880", VA = "0x1482880")]
		private float MapSize(float value, float shaderSizeMin, float shaderSizeMax, float realSizeMin, float realSizeMax)
		{
			return default(float);
		}

		[Token(Token = "0x60027F7")]
		[Address(RVA = "0x1482164", Offset = "0x1482164", VA = "0x1482164")]
		private void PlayAnimation(EGearAnimations anim)
		{
		}

		[Token(Token = "0x60027F8")]
		[Address(RVA = "0x148289C", Offset = "0x148289C", VA = "0x148289C")]
		public void WrongGearAnimation_GearRejected()
		{
		}

		[Token(Token = "0x60027F9")]
		[Address(RVA = "0x1482920", Offset = "0x1482920", VA = "0x1482920")]
		public void Explode()
		{
		}

		[Token(Token = "0x60027FA")]
		[Address(RVA = "0x1482AB0", Offset = "0x1482AB0", VA = "0x1482AB0")]
		public void GearDestroyed()
		{
		}

		[Token(Token = "0x60027FB")]
		[Address(RVA = "0x1482B3C", Offset = "0x1482B3C", VA = "0x1482B3C")]
		public Gear()
		{
		}
	}
	[Token(Token = "0x2000533")]
	public class GearCollider : MonoBehaviour
	{
		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 _MIN_COLLIDER_SIZE;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly Vector3 _MAX_COLLIDER_SIZE;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Gear _gear;

		[Token(Token = "0x17000448")]
		public Vector3 Size
		{
			[Token(Token = "0x60027FC")]
			[Address(RVA = "0x1481468", Offset = "0x1481468", VA = "0x1481468")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60027FD")]
		[Address(RVA = "0x1482E50", Offset = "0x1482E50", VA = "0x1482E50")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60027FE")]
		[Address(RVA = "0x1482084", Offset = "0x1482084", VA = "0x1482084")]
		public void SetupCollider(Gear gear, int size)
		{
		}

		[Token(Token = "0x60027FF")]
		[Address(RVA = "0x1483078", Offset = "0x1483078", VA = "0x1483078")]
		public GearCollider()
		{
		}
	}
	[Token(Token = "0x2000534")]
	public class GearTouchEffect : MonoBehaviour
	{
		[Token(Token = "0x4002168")]
		private const string _TOUCH_ANIMATION = "touch_fx";

		[Token(Token = "0x4002169")]
		private const string _WRONG_GEAR_PROPERTY = "_Wrong";

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SkinnedMeshRenderer _renderer;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator _animator;

		[Token(Token = "0x6002800")]
		[Address(RVA = "0x1372ADC", Offset = "0x1372ADC", VA = "0x1372ADC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002801")]
		[Address(RVA = "0x1372B34", Offset = "0x1372B34", VA = "0x1372B34")]
		private void Start()
		{
		}

		[Token(Token = "0x6002802")]
		[Address(RVA = "0x1372BEC", Offset = "0x1372BEC", VA = "0x1372BEC")]
		public void PlayTouchAnimation(bool isWrongGear)
		{
		}

		[Token(Token = "0x6002803")]
		[Address(RVA = "0x1372C80", Offset = "0x1372C80", VA = "0x1372C80")]
		public void TouchAnimation_Completed()
		{
		}

		[Token(Token = "0x6002804")]
		[Address(RVA = "0x1372CFC", Offset = "0x1372CFC", VA = "0x1372CFC")]
		public GearTouchEffect()
		{
		}
	}
	[Token(Token = "0x2000535")]
	public enum Hand
	{
		[Token(Token = "0x400216D")]
		Left,
		[Token(Token = "0x400216E")]
		Right
	}
	[Token(Token = "0x2000536")]
	public class AssemblyGameManager : MonoBehaviour
	{
		[Token(Token = "0x400216F")]
		public const string LEFT_CONTROLLER_TAG = "Left Hand";

		[Token(Token = "0x4002170")]
		public const string RIGHT_CONTROLLER_TAG = "Right Hand";

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB827E8", Offset = "0xB827E8")]
		[SerializeField]
		private GameController _gameController;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssemblyLine assemblyLine;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GearTouchEffect touchGearEffect;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AssemblyRobot robot;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AssemblyConfig gameConfig;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TutorialController tutorialController;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AssemblyTutorial tutorial;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AssemblyProgressionManager _progressionManager;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IEnumerator _newDeviceCoroutine;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82844", Offset = "0xB82844")]
		private bool <CanAssembleGears>k__BackingField;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82854", Offset = "0xB82854")]
		private CapsuleCollider <LeftHandCollider>k__BackingField;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82864", Offset = "0xB82864")]
		private CapsuleCollider <RightHandCollider>k__BackingField;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82874", Offset = "0xB82874")]
		private static AssemblyGameManager <Instance>k__BackingField;

		[Token(Token = "0x17000449")]
		public bool CanAssembleGears
		{
			[Token(Token = "0x6002805")]
			[Address(RVA = "0x1479620", Offset = "0x1479620", VA = "0x1479620")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E6C4", Offset = "0xB8E6C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002806")]
			[Address(RVA = "0x1479628", Offset = "0x1479628", VA = "0x1479628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E6D4", Offset = "0xB8E6D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700044A")]
		public CapsuleCollider LeftHandCollider
		{
			[Token(Token = "0x6002807")]
			[Address(RVA = "0x1479634", Offset = "0x1479634", VA = "0x1479634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E6E4", Offset = "0xB8E6E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002808")]
			[Address(RVA = "0x147963C", Offset = "0x147963C", VA = "0x147963C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E6F4", Offset = "0xB8E6F4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700044B")]
		public CapsuleCollider RightHandCollider
		{
			[Token(Token = "0x6002809")]
			[Address(RVA = "0x1479644", Offset = "0x1479644", VA = "0x1479644")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E704", Offset = "0xB8E704")]
			get
			{
				return null;
			}
			[Token(Token = "0x600280A")]
			[Address(RVA = "0x147964C", Offset = "0x147964C", VA = "0x147964C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E714", Offset = "0xB8E714")]
			private set
			{
			}
		}

		[Token(Token = "0x1700044C")]
		public static AssemblyGameManager Instance
		{
			[Token(Token = "0x600280B")]
			[Address(RVA = "0x1479654", Offset = "0x1479654", VA = "0x1479654")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E724", Offset = "0xB8E724")]
			get
			{
				return null;
			}
			[Token(Token = "0x600280C")]
			[Address(RVA = "0x14796A4", Offset = "0x14796A4", VA = "0x14796A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E734", Offset = "0xB8E734")]
			private set
			{
			}
		}

		[Token(Token = "0x1700044D")]
		public AssemblyProgressionManager ProgressionManager
		{
			[Token(Token = "0x600280D")]
			[Address(RVA = "0x14796F8", Offset = "0x14796F8", VA = "0x14796F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600280E")]
		[Address(RVA = "0x1479700", Offset = "0x1479700", VA = "0x1479700")]
		private void Awake()
		{
		}

		[Token(Token = "0x600280F")]
		[Address(RVA = "0x1479910", Offset = "0x1479910", VA = "0x1479910")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002810")]
		[Address(RVA = "0x1479B20", Offset = "0x1479B20", VA = "0x1479B20")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0x1479D30", Offset = "0x1479D30", VA = "0x1479D30")]
		private void GameController_GameWillStart(GameController sender)
		{
		}

		[Token(Token = "0x6002812")]
		[Address(RVA = "0x1479EFC", Offset = "0x1479EFC", VA = "0x1479EFC")]
		private void GameController_GameStart(GameController sender, int startLevel, bool isFirstTime)
		{
		}

		[Token(Token = "0x6002813")]
		[Address(RVA = "0x1479FD4", Offset = "0x1479FD4", VA = "0x1479FD4")]
		private void GameController_Loaded(GameController sender)
		{
		}

		[Token(Token = "0x6002814")]
		[Address(RVA = "0x147A090", Offset = "0x147A090", VA = "0x147A090")]
		private void GameController_WillUnload(GameController sender)
		{
		}

		[Token(Token = "0x6002815")]
		[Address(RVA = "0x147A14C", Offset = "0x147A14C", VA = "0x147A14C")]
		private void GameController_GamePaused(GameController sender, bool paused, SceneStatusType statusType)
		{
		}

		[Token(Token = "0x6002816")]
		[Address(RVA = "0x147A324", Offset = "0x147A324", VA = "0x147A324")]
		private void GameController_GameStop(GameController sender)
		{
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0x147A504", Offset = "0x147A504", VA = "0x147A504")]
		private void GameController_GameEnd(GameController sender)
		{
		}

		[Token(Token = "0x6002818")]
		[Address(RVA = "0x1479D64", Offset = "0x1479D64", VA = "0x1479D64")]
		public void StartData()
		{
		}

		[Token(Token = "0x6002819")]
		[Address(RVA = "0x147A35C", Offset = "0x147A35C", VA = "0x147A35C")]
		public void ResetData()
		{
		}

		[Token(Token = "0x600281A")]
		[Address(RVA = "0x1479F78", Offset = "0x1479F78", VA = "0x1479F78")]
		public void StartNewDevice(bool ignoreGearsOrder, [Optional] List<List<Vector3>> customGridPositions)
		{
		}

		[Token(Token = "0x600281B")]
		[Address(RVA = "0x147AB70", Offset = "0x147AB70", VA = "0x147AB70")]
		private void RejectedGear()
		{
		}

		[Token(Token = "0x600281C")]
		[Address(RVA = "0x147AD00", Offset = "0x147AD00", VA = "0x147AD00")]
		public void DeviceAssembled()
		{
		}

		[Token(Token = "0x600281D")]
		[Address(RVA = "0x147A3A0", Offset = "0x147A3A0", VA = "0x147A3A0")]
		private void StopAllGearsSFX()
		{
		}

		[Token(Token = "0x600281E")]
		[Address(RVA = "0x147AD64", Offset = "0x147AD64", VA = "0x147AD64")]
		public void SpawnTouchGearEffect(bool isWrongGear, Vector3 position)
		{
		}

		[Token(Token = "0x600281F")]
		[Address(RVA = "0x147AE70", Offset = "0x147AE70", VA = "0x147AE70")]
		public void LevelDown()
		{
		}

		[Token(Token = "0x6002820")]
		[Address(RVA = "0x147AEA0", Offset = "0x147AEA0", VA = "0x147AEA0")]
		public AssemblyGameManager()
		{
		}
	}
	[Token(Token = "0x2000537")]
	public class AssemblyProgressionManager : ProgressionManager
	{
		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82884", Offset = "0xB82884")]
		private static AssemblyProgressionManager <Instance>k__BackingField;

		[Token(Token = "0x1700044E")]
		public static AssemblyProgressionManager Instance
		{
			[Token(Token = "0x6002821")]
			[Address(RVA = "0x147DAD4", Offset = "0x147DAD4", VA = "0x147DAD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E744", Offset = "0xB8E744")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002822")]
			[Address(RVA = "0x147DB24", Offset = "0x147DB24", VA = "0x147DB24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8E754", Offset = "0xB8E754")]
			private set
			{
			}
		}

		[Token(Token = "0x6002823")]
		[Address(RVA = "0x147DB78", Offset = "0x147DB78", VA = "0x147DB78")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6002824")]
		[Address(RVA = "0x147DBD4", Offset = "0x147DBD4", VA = "0x147DBD4", Slot = "4")]
		public override void Setup(GameConfig gameConfig, int level, bool isFirstTime)
		{
		}

		[Token(Token = "0x6002825")]
		[Address(RVA = "0x147DD80", Offset = "0x147DD80", VA = "0x147DD80", Slot = "5")]
		protected override void IncrementLevel()
		{
		}

		[Token(Token = "0x6002826")]
		[Address(RVA = "0x147DDA8", Offset = "0x147DDA8", VA = "0x147DDA8", Slot = "6")]
		protected override void DecrementLevel()
		{
		}

		[Token(Token = "0x6002827")]
		[Address(RVA = "0x147DE14", Offset = "0x147DE14", VA = "0x147DE14", Slot = "10")]
		protected override void ApplyTimeoutPenalty()
		{
		}

		[Token(Token = "0x6002828")]
		[Address(RVA = "0x147DC00", Offset = "0x147DC00", VA = "0x147DC00")]
		private void UpdateLevelConfig()
		{
		}

		[Token(Token = "0x6002829")]
		[Address(RVA = "0x147DE84", Offset = "0x147DE84", VA = "0x147DE84")]
		public AssemblyProgressionManager()
		{
		}
	}
	[Token(Token = "0x2000538")]
	public class AssemblyRobot : MonoBehaviour
	{
		[Token(Token = "0x20008CE")]
		public delegate void OnPositionReached();

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssemblyRobotAnimator animator;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB82894", Offset = "0xB82894")]
		[SerializeField]
		private float _movingSpeed;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _currentSpeed;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _target;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected OnPositionReached _callback;

		[Token(Token = "0x600282A")]
		[Address(RVA = "0x147BF6C", Offset = "0x147BF6C", VA = "0x147BF6C")]
		public void ActivateConveyorBelt()
		{
		}

		[Token(Token = "0x600282B")]
		[Address(RVA = "0x147E09C", Offset = "0x147E09C", VA = "0x147E09C")]
		public void LookAtPlayer()
		{
		}

		[Token(Token = "0x600282C")]
		[Address(RVA = "0x147E380", Offset = "0x147E380", VA = "0x147E380")]
		private float GetSpeed(Vector3 position, float duration)
		{
			return default(float);
		}

		[Token(Token = "0x600282D")]
		[Address(RVA = "0x147E45C", Offset = "0x147E45C", VA = "0x147E45C")]
		public AssemblyRobot()
		{
		}
	}
	[Token(Token = "0x2000539")]
	public class AssemblyRobotAnimator : MonoBehaviour
	{
		[Token(Token = "0x20008CF")]
		public enum EAssemblyRobotAnimation
		{
			[Token(Token = "0x4003007")]
			ActivateConveyorBelt
		}

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator _animator;

		[Token(Token = "0x4002185")]
		private const string _ACTIVATE_CONVEYOR_BELT_ANIMATION = "Robot_move_conveyor";

		[Token(Token = "0x600282E")]
		[Address(RVA = "0x147E6D8", Offset = "0x147E6D8", VA = "0x147E6D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0x147DEEC", Offset = "0x147DEEC", VA = "0x147DEEC")]
		public void PlayAnimation(EAssemblyRobotAnimation anim)
		{
		}

		[Token(Token = "0x6002830")]
		[Address(RVA = "0x147E730", Offset = "0x147E730", VA = "0x147E730")]
		public void Animator_ActivatedConveyorBelt()
		{
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0x147E794", Offset = "0x147E794", VA = "0x147E794")]
		public AssemblyRobotAnimator()
		{
		}
	}
	[Token(Token = "0x200053A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB72440", Offset = "0xB72440")]
	public class AssemblyConfig : GameConfig
	{
		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB828E0", Offset = "0xB828E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB828E0", Offset = "0xB828E0")]
		public AssemblyLevelConfig[] levels;

		[Token(Token = "0x1700044F")]
		public override LevelConfig[] Levels
		{
			[Token(Token = "0x6002832")]
			[Address(RVA = "0x1479610", Offset = "0x1479610", VA = "0x1479610", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002833")]
		[Address(RVA = "0x1479618", Offset = "0x1479618", VA = "0x1479618")]
		public AssemblyConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200053B")]
	public class AssemblyLevelConfig : LevelConfig
	{
		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int gearsCount;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AllowNesting]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xB82940", Offset = "0xB82940")]
		[AttributeAttribute(Name = "MaxValueAttribute", RVA = "0xB82940", Offset = "0xB82940")]
		public int minGearSize;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AllowNesting]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xB82990", Offset = "0xB82990")]
		[AttributeAttribute(Name = "MaxValueAttribute", RVA = "0xB82990", Offset = "0xB82990")]
		public int maxGearSize;

		[Token(Token = "0x6002834")]
		[Address(RVA = "0x147B2DC", Offset = "0x147B2DC", VA = "0x147B2DC")]
		public AssemblyLevelConfig()
		{
		}
	}
	[Token(Token = "0x200053C")]
	public class AssemblyTutorial : MonoBehaviour
	{
		[Token(Token = "0x20008D0")]
		public enum Step
		{
			[Token(Token = "0x4003009")]
			Intro,
			[Token(Token = "0x400300A")]
			SelectGears,
			[Token(Token = "0x400300B")]
			OrderBySizeTwoGears,
			[Token(Token = "0x400300C")]
			OrderBySizeThreeGears,
			[Token(Token = "0x400300D")]
			Goodbye
		}

		[Token(Token = "0x400218A")]
		private const float _TIME_LIMIT_SELECT_GEAR = 10f;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB829E0", Offset = "0xB829E0")]
		public TutorialController tutorialController;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameController _gameController;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AssemblyRobot _robot;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<GameObject> _gearPositions;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isWaitingSelectGear;

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _waitingTimeSelectGear;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _connectedGears;

		[Token(Token = "0x6002835")]
		[Address(RVA = "0x147E79C", Offset = "0x147E79C", VA = "0x147E79C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002836")]
		[Address(RVA = "0x147E894", Offset = "0x147E894", VA = "0x147E894")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002837")]
		[Address(RVA = "0x147EA1C", Offset = "0x147EA1C", VA = "0x147EA1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002838")]
		[Address(RVA = "0x147EBA4", Offset = "0x147EBA4", VA = "0x147EBA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002839")]
		[Address(RVA = "0x147EC38", Offset = "0x147EC38", VA = "0x147EC38")]
		private void GameController_TutorialStart(GameController sender)
		{
		}

		[Token(Token = "0x600283A")]
		[Address(RVA = "0x147EE40", Offset = "0x147EE40", VA = "0x147EE40")]
		private void GameController_TutorialPaused(GameController sender, bool paused, SceneStatusType statusType)
		{
		}

		[Token(Token = "0x600283B")]
		[Address(RVA = "0x147EE60", Offset = "0x147EE60", VA = "0x147EE60")]
		private void GameController_TutorialStop(GameController sender)
		{
		}

		[Token(Token = "0x600283C")]
		[Address(RVA = "0x147EF4C", Offset = "0x147EF4C", VA = "0x147EF4C")]
		private void TutorialController_StepInstructionsStart(TutorialController sender, TutorialStep step)
		{
		}

		[Token(Token = "0x600283D")]
		[Address(RVA = "0x147F494", Offset = "0x147F494", VA = "0x147F494")]
		private void TutorialController_StepInstructionsPlay(TutorialController sender, TutorialStep step, int instructionIndex)
		{
		}

		[Token(Token = "0x600283E")]
		[Address(RVA = "0x147F52C", Offset = "0x147F52C", VA = "0x147F52C")]
		private void TutorialController_StepInstructionsEnd(TutorialController sender, TutorialStep step)
		{
		}

		[Token(Token = "0x600283F")]
		[Address(RVA = "0x147F554", Offset = "0x147F554", VA = "0x147F554")]
		private void TutorialController_OnTutorialEnded(TutorialController sender)
		{
		}

		[Token(Token = "0x6002840")]
		[Address(RVA = "0x147F584", Offset = "0x147F584", VA = "0x147F584")]
		private void RejectedGear()
		{
		}

		[Token(Token = "0x6002841")]
		[Address(RVA = "0x147F5EC", Offset = "0x147F5EC", VA = "0x147F5EC")]
		private void AssembledGear()
		{
		}

		[Token(Token = "0x6002842")]
		[Address(RVA = "0x147F62C", Offset = "0x147F62C", VA = "0x147F62C")]
		private void DeviceAssembled()
		{
		}

		[Token(Token = "0x6002843")]
		[Address(RVA = "0x147EED4", Offset = "0x147EED4", VA = "0x147EED4")]
		private void ResetTutorial()
		{
		}

		[Token(Token = "0x6002844")]
		[Address(RVA = "0x147F670", Offset = "0x147F670", VA = "0x147F670")]
		public AssemblyTutorial()
		{
		}
	}
}
